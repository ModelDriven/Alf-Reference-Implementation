<?xml version="1.1" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_epdroM2iEeiCta8rX3fxAA" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_epdroc2iEeiCta8rX3fxAA" name="Statements_Accept" visibility="public">
      <packageImport xmi:id="_epdros2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_epdro82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_epdrpM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_epdrpc2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_epdrps2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_epdrp82iEeiCta8rX3fxAA" general="_epfjk82iEeiCta8rX3fxAA"/>
      <ownedAttribute xmi:id="_epdrqM2iEeiCta8rX3fxAA" name="Statements_Accept$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdrqc2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdrqs2iEeiCta8rX3fxAA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_epdrq82iEeiCta8rX3fxAA" name="Statements_Accept$method$1" visibility="private" specification="_epdsrs2iEeiCta8rX3fxAA" node="_epdrsM2iEeiCta8rX3fxAA _epdrsc2iEeiCta8rX3fxAA" group="_epdrsc2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_epdrrM2iEeiCta8rX3fxAA" name="" type="_epdroc2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdrrc2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdrrs2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epdrr82iEeiCta8rX3fxAA" target="_epdrsM2iEeiCta8rX3fxAA" source="_epdr2s2iEeiCta8rX3fxAA"/>
        <structuredNode xmi:id="_epdrsc2iEeiCta8rX3fxAA" name="Body(Statements_Accept$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdrss2iEeiCta8rX3fxAA" target="_epdr2s2iEeiCta8rX3fxAA" source="_epdr182iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdrs82iEeiCta8rX3fxAA" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdrtM2iEeiCta8rX3fxAA" name="ExpressionStatement@6d041f54">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epdrtc2iEeiCta8rX3fxAA" target="_epdrzc2iEeiCta8rX3fxAA" source="_epdru82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epdrts2iEeiCta8rX3fxAA" target="_epdrzM2iEeiCta8rX3fxAA" source="_epdruc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epdrt82iEeiCta8rX3fxAA" target="_epdrxs2iEeiCta8rX3fxAA" source="_epdrwM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epdruM2iEeiCta8rX3fxAA" target="_epdrw82iEeiCta8rX3fxAA" source="_epdruc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdruc2iEeiCta8rX3fxAA" name="Tuple@4320387e" outgoing="_epdrts2iEeiCta8rX3fxAA _epdruM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epdrus2iEeiCta8rX3fxAA" name="Value(null)">
                  <result xmi:id="_epdru82iEeiCta8rX3fxAA" name="Value(null).result" outgoing="_epdrtc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdrvM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdrvc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_epdrvs2iEeiCta8rX3fxAA"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_epdrv82iEeiCta8rX3fxAA" name="ReadSelf">
                <result xmi:id="_epdrwM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epdrt82iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdrwc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdrws2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdrw82iEeiCta8rX3fxAA" name="Node(Call(run))" incoming="_epdruM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epdrxM2iEeiCta8rX3fxAA" target="_epdryc2iEeiCta8rX3fxAA" source="_epdr0M2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epdrxc2iEeiCta8rX3fxAA" target="_epdr082iEeiCta8rX3fxAA" source="_epdrxs2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epdrxs2iEeiCta8rX3fxAA" name="Input(Call(run).target)" incoming="_epdrt82iEeiCta8rX3fxAA" outgoing="_epdrxc2iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdrx82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdryM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epdryc2iEeiCta8rX3fxAA" name="Output(Call(run).result())" incoming="_epdrxM2iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdrys2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdry82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_epdrzM2iEeiCta8rX3fxAA" name="Call(run)" incoming="_epdrts2iEeiCta8rX3fxAA" operation="_epdsss2iEeiCta8rX3fxAA">
                  <argument xmi:id="_epdrzc2iEeiCta8rX3fxAA" name="Call(run).argument(tester)" incoming="_epdrtc2iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdrzs2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdrz82iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_epdr0M2iEeiCta8rX3fxAA" name="Call(run).result()" outgoing="_epdrxM2iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdr0c2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdr0s2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <target xmi:id="_epdr082iEeiCta8rX3fxAA" name="Call(run).target" incoming="_epdrxc2iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdr1M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdr1c2iEeiCta8rX3fxAA" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_epdr1s2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_epdr182iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epdrss2iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdr2M2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdr2c2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_epdr2s2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epdrss2iEeiCta8rX3fxAA" outgoing="_epdrr82iEeiCta8rX3fxAA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_epdrsM2iEeiCta8rX3fxAA" name="Return" incoming="_epdrr82iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" parameter="_epdrrM2iEeiCta8rX3fxAA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_epdr282iEeiCta8rX3fxAA" name="run$method$1" visibility="private" specification="_epdsss2iEeiCta8rX3fxAA" node="_epdr5c2iEeiCta8rX3fxAA _epdr5s2iEeiCta8rX3fxAA _epdr582iEeiCta8rX3fxAA _epdr6M2iEeiCta8rX3fxAA" group="_epdr6M2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_epdr3M2iEeiCta8rX3fxAA" name="tester" type="_epgIj82iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdr3c2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdr3s2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_epdr382iEeiCta8rX3fxAA" name="" type="_epdroc2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdr4M2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdr4c2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr4s2iEeiCta8rX3fxAA" target="_epdr5s2iEeiCta8rX3fxAA" source="_epdr5c2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr482iEeiCta8rX3fxAA" target="_epdr582iEeiCta8rX3fxAA" source="_epdsKs2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr5M2iEeiCta8rX3fxAA" target="_epdsM82iEeiCta8rX3fxAA" source="_epdr5s2iEeiCta8rX3fxAA"/>
        <structuredNode xmi:id="_epdr6M2iEeiCta8rX3fxAA" name="Body(run$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr6c2iEeiCta8rX3fxAA" target="_epdsKs2iEeiCta8rX3fxAA" source="_epdsJ82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr6s2iEeiCta8rX3fxAA" target="_epdsOs2iEeiCta8rX3fxAA" source="_epdsKs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epdr682iEeiCta8rX3fxAA" target="_epdr9c2iEeiCta8rX3fxAA" source="_epdsOc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epdr7M2iEeiCta8rX3fxAA" target="_epdsOc2iEeiCta8rX3fxAA" source="_epdsK82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr7c2iEeiCta8rX3fxAA" target="_epdsPs2iEeiCta8rX3fxAA" source="_epdsKs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr7s2iEeiCta8rX3fxAA" target="_epdsRc2iEeiCta8rX3fxAA" source="_epdsQc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr782iEeiCta8rX3fxAA" target="_epdsUc2iEeiCta8rX3fxAA" source="_epdsSM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr8M2iEeiCta8rX3fxAA" target="_epdsV82iEeiCta8rX3fxAA" source="_epdsTM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epdr8c2iEeiCta8rX3fxAA" target="_epdsW82iEeiCta8rX3fxAA" source="_epdsWs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr8s2iEeiCta8rX3fxAA" target="_epdsW82iEeiCta8rX3fxAA" source="_epdsVM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epdr882iEeiCta8rX3fxAA" target="_epdsK82iEeiCta8rX3fxAA" source="_epdsW82iEeiCta8rX3fxAA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_epdr9M2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdr9c2iEeiCta8rX3fxAA" name="Body" incoming="_epdr682iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdr9s2iEeiCta8rX3fxAA" name="ExpressionStatement@2afa24be">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr982iEeiCta8rX3fxAA" target="_epdr-c2iEeiCta8rX3fxAA" source="_epdsBc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_epdr-M2iEeiCta8rX3fxAA" name="SendSignal(Start)" signal="_epfjgM2iEeiCta8rX3fxAA">
                <target xmi:id="_epdr-c2iEeiCta8rX3fxAA" name="SendSignal(Start).target" incoming="_epdr982iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdr-s2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdr-82iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdr_M2iEeiCta8rX3fxAA" name="InstanceCreationExpression@2d506f72">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr_c2iEeiCta8rX3fxAA" target="_epdsIM2iEeiCta8rX3fxAA" source="_epdsCc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr_s2iEeiCta8rX3fxAA" target="_epdsHc2iEeiCta8rX3fxAA" source="_epdsIM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epdr_82iEeiCta8rX3fxAA" target="_epdsF82iEeiCta8rX3fxAA" source="_epdsDs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epdsAM2iEeiCta8rX3fxAA" target="_epdsEc2iEeiCta8rX3fxAA" source="_epdsDM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epdsAc2iEeiCta8rX3fxAA" target="_epdsEc2iEeiCta8rX3fxAA" source="_epdsCM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsAs2iEeiCta8rX3fxAA" target="_epdsIc2iEeiCta8rX3fxAA" source="_epdsE82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsA82iEeiCta8rX3fxAA" target="_epdsI82iEeiCta8rX3fxAA" source="_epdsIc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsBM2iEeiCta8rX3fxAA" target="_epdsBc2iEeiCta8rX3fxAA" source="_epdsIc2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_epdsBc2iEeiCta8rX3fxAA" name="Output(Output(Fork(Create(TestRunner).result)))" incoming="_epdsBM2iEeiCta8rX3fxAA" outgoing="_epdr982iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsBs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsB82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_epdsCM2iEeiCta8rX3fxAA" name="Create(TestRunner)" outgoing="_epdsAc2iEeiCta8rX3fxAA" classifier="_epe71M2iEeiCta8rX3fxAA">
                  <result xmi:id="_epdsCc2iEeiCta8rX3fxAA" name="Create(TestRunner).result" outgoing="_epdr_c2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsCs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsC82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdsDM2iEeiCta8rX3fxAA" name="Tuple@6453358b" outgoing="_epdsAM2iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_epdsDc2iEeiCta8rX3fxAA" name="ReadSelf">
                    <result xmi:id="_epdsDs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epdr_82iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsD82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsEM2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdsEc2iEeiCta8rX3fxAA" name="Node(Call(TestRunner))" incoming="_epdsAc2iEeiCta8rX3fxAA _epdsAM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsEs2iEeiCta8rX3fxAA" target="_epdsE82iEeiCta8rX3fxAA" source="_epdsIM2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_epdsE82iEeiCta8rX3fxAA" name="Output(Fork(Create(TestRunner).result))" incoming="_epdsEs2iEeiCta8rX3fxAA" outgoing="_epdsAs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsFM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsFc2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_epdsFs2iEeiCta8rX3fxAA" name="Call(TestRunner)" operation="_epfjdM2iEeiCta8rX3fxAA">
                    <argument xmi:id="_epdsF82iEeiCta8rX3fxAA" name="Call(TestRunner).argument(outer)" incoming="_epdr_82iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsGM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsGc2iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <result xmi:id="_epdsGs2iEeiCta8rX3fxAA" name="Call(TestRunner).result()" type="_epe71M2iEeiCta8rX3fxAA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsG82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsHM2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <target xmi:id="_epdsHc2iEeiCta8rX3fxAA" name="Call(TestRunner).target" incoming="_epdr_s2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsHs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsH82iEeiCta8rX3fxAA" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_epdsIM2iEeiCta8rX3fxAA" name="Fork(Create(TestRunner).result)" incoming="_epdr_c2iEeiCta8rX3fxAA" outgoing="_epdr_s2iEeiCta8rX3fxAA _epdsEs2iEeiCta8rX3fxAA"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epdsIc2iEeiCta8rX3fxAA" name="Fork(Output(Fork(Create(TestRunner).result)))" incoming="_epdsAs2iEeiCta8rX3fxAA" outgoing="_epdsA82iEeiCta8rX3fxAA _epdsBM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_epdsIs2iEeiCta8rX3fxAA" name="Start(TestRunner)" isSynchronous="false">
                  <object xmi:id="_epdsI82iEeiCta8rX3fxAA" name="Start(TestRunner).object" incoming="_epdsA82iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsJM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsJc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_epdsJs2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_epdsJ82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epdr6c2iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsKM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsKc2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_epdsKs2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epdr6c2iEeiCta8rX3fxAA" outgoing="_epdr482iEeiCta8rX3fxAA _epdr6s2iEeiCta8rX3fxAA _epdr7c2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdsK82iEeiCta8rX3fxAA" name="Super" incoming="_epdr882iEeiCta8rX3fxAA" outgoing="_epdr7M2iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdsLM2iEeiCta8rX3fxAA" name="ExpressionStatement@292a0df2">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdsLc2iEeiCta8rX3fxAA" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsLs2iEeiCta8rX3fxAA" target="_epdsL82iEeiCta8rX3fxAA" source="_epdsNs2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_epdsL82iEeiCta8rX3fxAA" name="Output(Call(Test$method$1).result())" incoming="_epdsLs2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsMM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsMc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_epdsMs2iEeiCta8rX3fxAA" name="Call(Test$method$1)" behavior="_epfjn82iEeiCta8rX3fxAA">
                  <argument xmi:id="_epdsM82iEeiCta8rX3fxAA" name="Call(Test$method$1).argument(tester)" incoming="_epdr5M2iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsNM2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsNc2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_epdsNs2iEeiCta8rX3fxAA" name="Call(Test$method$1).result()" outgoing="_epdsLs2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsN82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsOM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_epdsOc2iEeiCta8rX3fxAA" name="Call(Statements_Accept$initialization$1)" incoming="_epdr7M2iEeiCta8rX3fxAA" outgoing="_epdr682iEeiCta8rX3fxAA" operation="_epdsrc2iEeiCta8rX3fxAA">
            <target xmi:id="_epdsOs2iEeiCta8rX3fxAA" name="Call(Statements_Accept$initialization$1).target" incoming="_epdr6s2iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsO82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsPM2iEeiCta8rX3fxAA" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epdsPc2iEeiCta8rX3fxAA" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_epdrqM2iEeiCta8rX3fxAA">
            <object xmi:id="_epdsPs2iEeiCta8rX3fxAA" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_epdr7c2iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsP82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsQM2iEeiCta8rX3fxAA" value="1"/>
            </object>
            <result xmi:id="_epdsQc2iEeiCta8rX3fxAA" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_epdr7s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsQs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsQ82iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_epdsRM2iEeiCta8rX3fxAA" name="Call(ListSize)">
            <argument xmi:id="_epdsRc2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_epdr7s2iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsRs2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsR82iEeiCta8rX3fxAA" value="*"/>
            </argument>
            <result xmi:id="_epdsSM2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_epdr782iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsSc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsSs2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epdsS82iEeiCta8rX3fxAA" name="Value(0)">
            <result xmi:id="_epdsTM2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_epdr8M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsTc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsTs2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_epdsT82iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_epdsUM2iEeiCta8rX3fxAA" name="Test(Size==0)">
            <first xmi:id="_epdsUc2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_epdr782iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsUs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsU82iEeiCta8rX3fxAA" value="1"/>
            </first>
            <result xmi:id="_epdsVM2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_epdr8s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsVc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsVs2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <second xmi:id="_epdsV82iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_epdr8M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsWM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsWc2iEeiCta8rX3fxAA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_epdsWs2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_epdr8c2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_epdsW82iEeiCta8rX3fxAA" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_epdr8c2iEeiCta8rX3fxAA _epdr8s2iEeiCta8rX3fxAA" outgoing="_epdr882iEeiCta8rX3fxAA" decisionInputFlow="_epdr8s2iEeiCta8rX3fxAA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_epdr5c2iEeiCta8rX3fxAA" name="Input(tester)" outgoing="_epdr4s2iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" parameter="_epdr3M2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_epdr5s2iEeiCta8rX3fxAA" name="Fork(tester)" incoming="_epdr4s2iEeiCta8rX3fxAA" outgoing="_epdr5M2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_epdr582iEeiCta8rX3fxAA" name="Return" incoming="_epdr482iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" parameter="_epdr382iEeiCta8rX3fxAA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_epdsXM2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_epdsuc2iEeiCta8rX3fxAA" node="_epdsXc2iEeiCta8rX3fxAA" group="_epdsXc2iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_epdsXc2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_epdsXs2iEeiCta8rX3fxAA" name="Statements_Accept$initialization$1" visibility="private" specification="_epdsrc2iEeiCta8rX3fxAA" node="_epdsX82iEeiCta8rX3fxAA" group="_epdsX82iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_epdsX82iEeiCta8rX3fxAA" name="Body(Statements_Accept$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsYM2iEeiCta8rX3fxAA" target="_epdsb82iEeiCta8rX3fxAA" source="_epdsbM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsYc2iEeiCta8rX3fxAA" target="_epdsc82iEeiCta8rX3fxAA" source="_epdsb82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsYs2iEeiCta8rX3fxAA" target="_epdsgM2iEeiCta8rX3fxAA" source="_epdsb82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsY82iEeiCta8rX3fxAA" target="_epdsj82iEeiCta8rX3fxAA" source="_epdsb82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsZM2iEeiCta8rX3fxAA" target="_epdsls2iEeiCta8rX3fxAA" source="_epdsks2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsZc2iEeiCta8rX3fxAA" target="_epdsos2iEeiCta8rX3fxAA" source="_epdsmc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsZs2iEeiCta8rX3fxAA" target="_epdsqM2iEeiCta8rX3fxAA" source="_epdsnc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epdsZ82iEeiCta8rX3fxAA" target="_epdsrM2iEeiCta8rX3fxAA" source="_epdsq82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsaM2iEeiCta8rX3fxAA" target="_epdsrM2iEeiCta8rX3fxAA" source="_epdspc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epdsac2iEeiCta8rX3fxAA" target="_epdscM2iEeiCta8rX3fxAA" source="_epdsrM2iEeiCta8rX3fxAA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_epdsas2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_epdsa82iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_epdsbM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epdsYM2iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsbc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsbs2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_epdsb82iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epdsYM2iEeiCta8rX3fxAA" outgoing="_epdsYc2iEeiCta8rX3fxAA _epdsYs2iEeiCta8rX3fxAA _epdsY82iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdscM2iEeiCta8rX3fxAA" name="Initialization" incoming="_epdsac2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ControlFlow" xmi:id="_epdscc2iEeiCta8rX3fxAA" target="_epdsds2iEeiCta8rX3fxAA" source="_epdscs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_epdscs2iEeiCta8rX3fxAA" name="Call(Test$initialization$1)" outgoing="_epdscc2iEeiCta8rX3fxAA" operation="_epgIgc2iEeiCta8rX3fxAA">
              <target xmi:id="_epdsc82iEeiCta8rX3fxAA" name="Call(Test$initialization$1).target" incoming="_epdsYc2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsdM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsdc2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdsds2iEeiCta8rX3fxAA" name="Set(initializationFlag)" incoming="_epdscc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsd82iEeiCta8rX3fxAA" target="_epdsjc2iEeiCta8rX3fxAA" source="_epdsec2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epdseM2iEeiCta8rX3fxAA" name="Value(true)">
                <result xmi:id="_epdsec2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_epdsd82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdses2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdse82iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_epdsfM2iEeiCta8rX3fxAA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_epdsfc2iEeiCta8rX3fxAA" name="Iterate(Write(Statements_Accept$initializationFlag$1))" inputElement="_epdsjc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsfs2iEeiCta8rX3fxAA" target="_epdsis2iEeiCta8rX3fxAA" source="_epdsjc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsf82iEeiCta8rX3fxAA" target="_epdshM2iEeiCta8rX3fxAA" source="_epdsgM2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epdsgM2iEeiCta8rX3fxAA" name="Iterate(Write(Statements_Accept$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_epdsYs2iEeiCta8rX3fxAA" outgoing="_epdsf82iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsgc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsgs2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epdsg82iEeiCta8rX3fxAA" name="Write(Statements_Accept$initializationFlag$1)" structuralFeature="_epdrqM2iEeiCta8rX3fxAA">
                  <object xmi:id="_epdshM2iEeiCta8rX3fxAA" name="Write(Statements_Accept$initializationFlag$1).object" incoming="_epdsf82iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdshc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdshs2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epdsh82iEeiCta8rX3fxAA" name="Write(Statements_Accept$initializationFlag$1).result" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsiM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsic2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:id="_epdsis2iEeiCta8rX3fxAA" name="Write(Statements_Accept$initializationFlag$1).value" incoming="_epdsfs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsi82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsjM2iEeiCta8rX3fxAA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_epdsjc2iEeiCta8rX3fxAA" name="Iterate(Write(Statements_Accept$initializationFlag$1)).inputElement" incoming="_epdsd82iEeiCta8rX3fxAA" outgoing="_epdsfs2iEeiCta8rX3fxAA" regionAsInput="_epdsfc2iEeiCta8rX3fxAA"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epdsjs2iEeiCta8rX3fxAA" name="Read(Statements_Accept$initializationFlag$1)" structuralFeature="_epdrqM2iEeiCta8rX3fxAA">
            <object xmi:id="_epdsj82iEeiCta8rX3fxAA" name="Read(Statements_Accept$initializationFlag$1).object" incoming="_epdsY82iEeiCta8rX3fxAA" type="_epdroc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdskM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdskc2iEeiCta8rX3fxAA" value="1"/>
            </object>
            <result xmi:id="_epdsks2iEeiCta8rX3fxAA" name="Read(Statements_Accept$initializationFlag$1).result" outgoing="_epdsZM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsk82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdslM2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_epdslc2iEeiCta8rX3fxAA" name="Call(ListSize)">
            <argument xmi:id="_epdsls2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_epdsZM2iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsl82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsmM2iEeiCta8rX3fxAA" value="*"/>
            </argument>
            <result xmi:id="_epdsmc2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_epdsZc2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsms2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsm82iEeiCta8rX3fxAA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epdsnM2iEeiCta8rX3fxAA" name="Value(0)">
            <result xmi:id="_epdsnc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_epdsZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsns2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsn82iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_epdsoM2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_epdsoc2iEeiCta8rX3fxAA" name="Test(Size==0)">
            <first xmi:id="_epdsos2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_epdsZc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdso82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdspM2iEeiCta8rX3fxAA" value="1"/>
            </first>
            <result xmi:id="_epdspc2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_epdsaM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsps2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsp82iEeiCta8rX3fxAA" value="1"/>
            </result>
            <second xmi:id="_epdsqM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_epdsZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsqc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsqs2iEeiCta8rX3fxAA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_epdsq82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_epdsZ82iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_epdsrM2iEeiCta8rX3fxAA" name="Decision(Test(Statements_Accept$initializationFlag$1))" incoming="_epdsZ82iEeiCta8rX3fxAA _epdsaM2iEeiCta8rX3fxAA" outgoing="_epdsac2iEeiCta8rX3fxAA" decisionInputFlow="_epdsaM2iEeiCta8rX3fxAA"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_epdsrc2iEeiCta8rX3fxAA" name="Statements_Accept$initialization$1" visibility="protected" method="_epdsXs2iEeiCta8rX3fxAA"/>
      <ownedOperation xmi:id="_epdsrs2iEeiCta8rX3fxAA" name="Statements_Accept" visibility="public" method="_epdrq82iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_epdsr82iEeiCta8rX3fxAA" name="" visibility="package" type="_epdroc2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdssM2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdssc2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_epdsss2iEeiCta8rX3fxAA" name="run" visibility="public" method="_epdr282iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_epdss82iEeiCta8rX3fxAA" name="tester" visibility="package" type="_epgIj82iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdstM2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdstc2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_epdsts2iEeiCta8rX3fxAA" name="" visibility="package" type="_epdroc2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdst82iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsuM2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_epdsuc2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_epdsXM2iEeiCta8rX3fxAA" redefinedOperation="_epgIjs2iEeiCta8rX3fxAA"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_epdsus2iEeiCta8rX3fxAA" name="Super" visibility="private" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_epdsu82iEeiCta8rX3fxAA" name="Super$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdsvM2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdsvc2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epdsvs2iEeiCta8rX3fxAA" name="Super$method$1" visibility="private" specification="_epdtRc2iEeiCta8rX3fxAA" node="_epdsw82iEeiCta8rX3fxAA _epdsxM2iEeiCta8rX3fxAA" group="_epdsxM2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_epdsv82iEeiCta8rX3fxAA" name="" type="_epdsus2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdswM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdswc2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsws2iEeiCta8rX3fxAA" target="_epdsw82iEeiCta8rX3fxAA" source="_epds1c2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_epdsxM2iEeiCta8rX3fxAA" name="Body(Super$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsxc2iEeiCta8rX3fxAA" target="_epds1c2iEeiCta8rX3fxAA" source="_epds0s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsxs2iEeiCta8rX3fxAA" target="_epds182iEeiCta8rX3fxAA" source="_epds1c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epdsx82iEeiCta8rX3fxAA" target="_epds0M2iEeiCta8rX3fxAA" source="_epds1s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsyM2iEeiCta8rX3fxAA" target="_epds282iEeiCta8rX3fxAA" source="_epds1c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsyc2iEeiCta8rX3fxAA" target="_epds4s2iEeiCta8rX3fxAA" source="_epds3s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsys2iEeiCta8rX3fxAA" target="_epds7s2iEeiCta8rX3fxAA" source="_epds5c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epdsy82iEeiCta8rX3fxAA" target="_epds9M2iEeiCta8rX3fxAA" source="_epds6c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epdszM2iEeiCta8rX3fxAA" target="_epds-M2iEeiCta8rX3fxAA" source="_epds982iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epdszc2iEeiCta8rX3fxAA" target="_epds-M2iEeiCta8rX3fxAA" source="_epds8c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epdszs2iEeiCta8rX3fxAA" target="_epds1s2iEeiCta8rX3fxAA" source="_epds-M2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epdsz82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epds0M2iEeiCta8rX3fxAA" name="Body" incoming="_epdsx82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_epds0c2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_epds0s2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epdsxc2iEeiCta8rX3fxAA" type="_epdsus2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epds082iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epds1M2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epds1c2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epdsxc2iEeiCta8rX3fxAA" outgoing="_epdsws2iEeiCta8rX3fxAA _epdsxs2iEeiCta8rX3fxAA _epdsyM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_epds1s2iEeiCta8rX3fxAA" name="Call(Super$initialization$1)" incoming="_epdszs2iEeiCta8rX3fxAA" outgoing="_epdsx82iEeiCta8rX3fxAA" operation="_epdtRM2iEeiCta8rX3fxAA">
              <target xmi:id="_epds182iEeiCta8rX3fxAA" name="Call(Super$initialization$1).target" incoming="_epdsxs2iEeiCta8rX3fxAA" type="_epdsus2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epds2M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epds2c2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epds2s2iEeiCta8rX3fxAA" name="Read(Super$initializationFlag$1)" structuralFeature="_epdsu82iEeiCta8rX3fxAA">
              <object xmi:id="_epds282iEeiCta8rX3fxAA" name="Read(Super$initializationFlag$1).object" incoming="_epdsyM2iEeiCta8rX3fxAA" type="_epdsus2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epds3M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epds3c2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_epds3s2iEeiCta8rX3fxAA" name="Read(Super$initializationFlag$1).result" outgoing="_epdsyc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epds382iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epds4M2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epds4c2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_epds4s2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_epdsyc2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epds482iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epds5M2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_epds5c2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_epdsys2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epds5s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epds582iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epds6M2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_epds6c2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_epdsy82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epds6s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epds682iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_epds7M2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_epds7c2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_epds7s2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_epdsys2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epds782iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epds8M2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_epds8c2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_epdszc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epds8s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epds882iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_epds9M2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_epdsy82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epds9c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epds9s2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_epds982iEeiCta8rX3fxAA" name="InitialNode" outgoing="_epdszM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_epds-M2iEeiCta8rX3fxAA" name="Decision(Test(Super$initializationFlag$1))" incoming="_epdszM2iEeiCta8rX3fxAA _epdszc2iEeiCta8rX3fxAA" outgoing="_epdszs2iEeiCta8rX3fxAA" decisionInputFlow="_epdszc2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_epdsw82iEeiCta8rX3fxAA" name="Return" incoming="_epdsws2iEeiCta8rX3fxAA" type="_epdsus2iEeiCta8rX3fxAA" parameter="_epdsv82iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epds-c2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_epdtSc2iEeiCta8rX3fxAA" node="_epds-s2iEeiCta8rX3fxAA" group="_epds-s2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_epds-s2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epds-82iEeiCta8rX3fxAA" name="Super$initialization$1" visibility="private" specification="_epdtRM2iEeiCta8rX3fxAA" node="_epds_M2iEeiCta8rX3fxAA" group="_epds_M2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_epds_M2iEeiCta8rX3fxAA" name="Body(Super$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epds_c2iEeiCta8rX3fxAA" target="_epdtC82iEeiCta8rX3fxAA" source="_epdtCM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epds_s2iEeiCta8rX3fxAA" target="_epdtF82iEeiCta8rX3fxAA" source="_epdtC82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epds_82iEeiCta8rX3fxAA" target="_epdtJs2iEeiCta8rX3fxAA" source="_epdtC82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epdtAM2iEeiCta8rX3fxAA" target="_epdtLc2iEeiCta8rX3fxAA" source="_epdtKc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epdtAc2iEeiCta8rX3fxAA" target="_epdtOc2iEeiCta8rX3fxAA" source="_epdtMM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epdtAs2iEeiCta8rX3fxAA" target="_epdtP82iEeiCta8rX3fxAA" source="_epdtNM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epdtA82iEeiCta8rX3fxAA" target="_epdtQ82iEeiCta8rX3fxAA" source="_epdtQs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epdtBM2iEeiCta8rX3fxAA" target="_epdtQ82iEeiCta8rX3fxAA" source="_epdtPM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epdtBc2iEeiCta8rX3fxAA" target="_epdtDM2iEeiCta8rX3fxAA" source="_epdtQ82iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epdtBs2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_epdtB82iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_epdtCM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epds_c2iEeiCta8rX3fxAA" type="_epdsus2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtCc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtCs2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epdtC82iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epds_c2iEeiCta8rX3fxAA" outgoing="_epds_s2iEeiCta8rX3fxAA _epds_82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdtDM2iEeiCta8rX3fxAA" name="Initialization" incoming="_epdtBc2iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epdtDc2iEeiCta8rX3fxAA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epdtDs2iEeiCta8rX3fxAA" target="_epdtJM2iEeiCta8rX3fxAA" source="_epdtEM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epdtD82iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_epdtEM2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_epdtDs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtEc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtEs2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_epdtE82iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_epdtFM2iEeiCta8rX3fxAA" name="Iterate(Write(Super$initializationFlag$1))" inputElement="_epdtJM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epdtFc2iEeiCta8rX3fxAA" target="_epdtIc2iEeiCta8rX3fxAA" source="_epdtJM2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epdtFs2iEeiCta8rX3fxAA" target="_epdtG82iEeiCta8rX3fxAA" source="_epdtF82iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epdtF82iEeiCta8rX3fxAA" name="Iterate(Write(Super$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_epds_s2iEeiCta8rX3fxAA" outgoing="_epdtFs2iEeiCta8rX3fxAA" type="_epdsus2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtGM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtGc2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epdtGs2iEeiCta8rX3fxAA" name="Write(Super$initializationFlag$1)" structuralFeature="_epdsu82iEeiCta8rX3fxAA">
                    <object xmi:id="_epdtG82iEeiCta8rX3fxAA" name="Write(Super$initializationFlag$1).object" incoming="_epdtFs2iEeiCta8rX3fxAA" type="_epdsus2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtHM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtHc2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_epdtHs2iEeiCta8rX3fxAA" name="Write(Super$initializationFlag$1).result" type="_epdsus2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtH82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtIM2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_epdtIc2iEeiCta8rX3fxAA" name="Write(Super$initializationFlag$1).value" incoming="_epdtFc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtIs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtI82iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_epdtJM2iEeiCta8rX3fxAA" name="Iterate(Write(Super$initializationFlag$1)).inputElement" incoming="_epdtDs2iEeiCta8rX3fxAA" outgoing="_epdtFc2iEeiCta8rX3fxAA" regionAsInput="_epdtFM2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epdtJc2iEeiCta8rX3fxAA" name="Read(Super$initializationFlag$1)" structuralFeature="_epdsu82iEeiCta8rX3fxAA">
              <object xmi:id="_epdtJs2iEeiCta8rX3fxAA" name="Read(Super$initializationFlag$1).object" incoming="_epds_82iEeiCta8rX3fxAA" type="_epdsus2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtJ82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtKM2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_epdtKc2iEeiCta8rX3fxAA" name="Read(Super$initializationFlag$1).result" outgoing="_epdtAM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtKs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtK82iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epdtLM2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_epdtLc2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_epdtAM2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtLs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtL82iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_epdtMM2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_epdtAc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtMc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtMs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epdtM82iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_epdtNM2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_epdtAs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtNc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtNs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_epdtN82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_epdtOM2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_epdtOc2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_epdtAc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtOs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtO82iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_epdtPM2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_epdtBM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtPc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtPs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_epdtP82iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_epdtAs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtQM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtQc2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_epdtQs2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_epdtA82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_epdtQ82iEeiCta8rX3fxAA" name="Decision(Test(Super$initializationFlag$1))" incoming="_epdtA82iEeiCta8rX3fxAA _epdtBM2iEeiCta8rX3fxAA" outgoing="_epdtBc2iEeiCta8rX3fxAA" decisionInputFlow="_epdtBM2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_epdtRM2iEeiCta8rX3fxAA" name="Super$initialization$1" visibility="protected" method="_epds-82iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_epdtRc2iEeiCta8rX3fxAA" name="Super" visibility="public" method="_epdsvs2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_epdtRs2iEeiCta8rX3fxAA" name="" visibility="package" type="_epdsus2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtR82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtSM2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_epdtSc2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_epds-c2iEeiCta8rX3fxAA"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_epdtSs2iEeiCta8rX3fxAA" name="SignalNewArrival" visibility="public">
          <ownedAttribute xmi:id="_epdtS82iEeiCta8rX3fxAA" name="name" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtTM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtTc2iEeiCta8rX3fxAA" value="1"/>
          </ownedAttribute>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_epdtTs2iEeiCta8rX3fxAA" name="SignalTermination" visibility="public"/>
        <ownedReception xmi:id="_epdtT82iEeiCta8rX3fxAA" name="SignalTermination" signal="_epdtTs2iEeiCta8rX3fxAA"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_epdtUM2iEeiCta8rX3fxAA" name="MyTest" visibility="private" classifierBehavior="_epeSts2iEeiCta8rX3fxAA" isActive="true">
        <generalization xmi:id="_epdtUc2iEeiCta8rX3fxAA" general="_epdsus2iEeiCta8rX3fxAA"/>
        <ownedAttribute xmi:id="_epdtUs2iEeiCta8rX3fxAA" name="MyTest$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtU82iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtVM2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_epdtVc2iEeiCta8rX3fxAA" name="sig" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtVs2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtV82iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_epdtWM2iEeiCta8rX3fxAA" name="sig1" visibility="public">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtWc2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtWs2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_epdtW82iEeiCta8rX3fxAA" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtXM2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtXc2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_epdtXs2iEeiCta8rX3fxAA" name="terminate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtX82iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtYM2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_epdtYc2iEeiCta8rX3fxAA" name="arrival" visibility="public" type="_epdtSs2iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtYs2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtY82iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_epdtZM2iEeiCta8rX3fxAA" name="count" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtZc2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtZs2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_epdtZ82iEeiCta8rX3fxAA" name="signals" visibility="public" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epdtaM2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epdtac2iEeiCta8rX3fxAA" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_epeSsM2iEeiCta8rX3fxAA" name="flag" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeSsc2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeSss2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_epeSs82iEeiCta8rX3fxAA" name="tester" visibility="public" type="_epe71M2iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeStM2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeStc2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epeSts2iEeiCta8rX3fxAA" name="MyTest$classifierBehavior$1" visibility="private" isActive="true" node="_epeSt82iEeiCta8rX3fxAA" group="_epeSt82iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_epeSt82iEeiCta8rX3fxAA" name="Body(MyTest$classifierBehavior$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSuM2iEeiCta8rX3fxAA" target="_epeTA82iEeiCta8rX3fxAA" source="_epeS6s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epeSuc2iEeiCta8rX3fxAA" target="_epeS8s2iEeiCta8rX3fxAA" source="_epeS582iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epeSus2iEeiCta8rX3fxAA" target="_epeTFM2iEeiCta8rX3fxAA" source="_epeS8s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSu82iEeiCta8rX3fxAA" target="_epeTYc2iEeiCta8rX3fxAA" source="_epeTlM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSvM2iEeiCta8rX3fxAA" target="_epeTc82iEeiCta8rX3fxAA" source="_epeTlM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSvc2iEeiCta8rX3fxAA" target="_epeTZM2iEeiCta8rX3fxAA" source="_epeS6s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSvs2iEeiCta8rX3fxAA" target="_epeTbM2iEeiCta8rX3fxAA" source="_epeTFs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSv82iEeiCta8rX3fxAA" target="_epeTjc2iEeiCta8rX3fxAA" source="_epeTlM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSwM2iEeiCta8rX3fxAA" target="_epeThs2iEeiCta8rX3fxAA" source="_epeS6s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epeSwc2iEeiCta8rX3fxAA" target="_epeTHc2iEeiCta8rX3fxAA" source="_epeTFM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSws2iEeiCta8rX3fxAA" target="_epeTr82iEeiCta8rX3fxAA" source="_epeTls2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epeSw82iEeiCta8rX3fxAA" target="_epeTns2iEeiCta8rX3fxAA" source="_epeTHc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epeSxM2iEeiCta8rX3fxAA" target="_epeTwM2iEeiCta8rX3fxAA" source="_epeTns2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epeSxc2iEeiCta8rX3fxAA" target="_epeTxc2iEeiCta8rX3fxAA" source="_epeTwM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSxs2iEeiCta8rX3fxAA" target="_epeT4M2iEeiCta8rX3fxAA" source="_epeTyM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epeSx82iEeiCta8rX3fxAA" target="_epeTz82iEeiCta8rX3fxAA" source="_epeTxc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSyM2iEeiCta8rX3fxAA" target="_epeUyM2iEeiCta8rX3fxAA" source="_epeTlc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSyc2iEeiCta8rX3fxAA" target="_epeUy82iEeiCta8rX3fxAA" source="_epeTls2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSys2iEeiCta8rX3fxAA" target="_epeUzs2iEeiCta8rX3fxAA" source="_epeTyM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epeSy82iEeiCta8rX3fxAA" target="_epeT8c2iEeiCta8rX3fxAA" source="_epeTz82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSzM2iEeiCta8rX3fxAA" target="_epe5082iEeiCta8rX3fxAA" source="_epeTlc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSzc2iEeiCta8rX3fxAA" target="_epe51s2iEeiCta8rX3fxAA" source="_epeTls2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSzs2iEeiCta8rX3fxAA" target="_epe58c2iEeiCta8rX3fxAA" source="_epe56M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeSz82iEeiCta8rX3fxAA" target="_epe53M2iEeiCta8rX3fxAA" source="_epeTyM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS0M2iEeiCta8rX3fxAA" target="_epe5382iEeiCta8rX3fxAA" source="_epeU8s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS0c2iEeiCta8rX3fxAA" target="_epeVMs2iEeiCta8rX3fxAA" source="_epeVVc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epeS0s2iEeiCta8rX3fxAA" target="_epeVIc2iEeiCta8rX3fxAA" source="_epeT8c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS082iEeiCta8rX3fxAA" target="_epe6us2iEeiCta8rX3fxAA" source="_epe6q82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS1M2iEeiCta8rX3fxAA" target="_epe6u82iEeiCta8rX3fxAA" source="_epe6rs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS1c2iEeiCta8rX3fxAA" target="_epe6vM2iEeiCta8rX3fxAA" source="_epe6sc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS1s2iEeiCta8rX3fxAA" target="_epe6vc2iEeiCta8rX3fxAA" source="_epe6tM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS182iEeiCta8rX3fxAA" target="_epe6vs2iEeiCta8rX3fxAA" source="_epe6t82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS2M2iEeiCta8rX3fxAA" target="_epe6Kc2iEeiCta8rX3fxAA" source="_epeTlc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS2c2iEeiCta8rX3fxAA" target="_epe6Mc2iEeiCta8rX3fxAA" source="_epeTls2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS2s2iEeiCta8rX3fxAA" target="_epe6Oc2iEeiCta8rX3fxAA" source="_epe58c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS282iEeiCta8rX3fxAA" target="_epe6Qc2iEeiCta8rX3fxAA" source="_epeTyM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS3M2iEeiCta8rX3fxAA" target="_epe6Sc2iEeiCta8rX3fxAA" source="_epeU8s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS3c2iEeiCta8rX3fxAA" target="_epe6g82iEeiCta8rX3fxAA" source="_epeTlc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS3s2iEeiCta8rX3fxAA" target="_epe6i82iEeiCta8rX3fxAA" source="_epeTls2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS382iEeiCta8rX3fxAA" target="_epe6k82iEeiCta8rX3fxAA" source="_epe58c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS4M2iEeiCta8rX3fxAA" target="_epe6m82iEeiCta8rX3fxAA" source="_epeTyM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS4c2iEeiCta8rX3fxAA" target="_epe6o82iEeiCta8rX3fxAA" source="_epeU8s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epeS4s2iEeiCta8rX3fxAA" target="_epe58s2iEeiCta8rX3fxAA" source="_epeVIc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epeS482iEeiCta8rX3fxAA" target="_epe6v82iEeiCta8rX3fxAA" source="_epe58s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS5M2iEeiCta8rX3fxAA" target="_epe62s2iEeiCta8rX3fxAA" source="_epe6ws2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epeS5c2iEeiCta8rX3fxAA" target="_epe6yc2iEeiCta8rX3fxAA" source="_epe6v82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epeS5s2iEeiCta8rX3fxAA" target="_epe6682iEeiCta8rX3fxAA" source="_epe6yc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeS582iEeiCta8rX3fxAA" name="AcceptStatement@581a3fd9" outgoing="_epeSuc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_epeS6M2iEeiCta8rX3fxAA" target="_epeS682iEeiCta8rX3fxAA" source="_epeS8c2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS6c2iEeiCta8rX3fxAA" target="_epeS6s2iEeiCta8rX3fxAA" source="_epeS7M2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_epeS6s2iEeiCta8rX3fxAA" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_epeS6c2iEeiCta8rX3fxAA" outgoing="_epeSuM2iEeiCta8rX3fxAA _epeSvc2iEeiCta8rX3fxAA _epeSwM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_epeS682iEeiCta8rX3fxAA" name="Accept(SignalNewArrival,SignalTermination)" incoming="_epeS6M2iEeiCta8rX3fxAA">
                <result xmi:id="_epeS7M2iEeiCta8rX3fxAA" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_epeS6c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeS7c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeS7s2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <trigger xmi:id="_epeS782iEeiCta8rX3fxAA" event="_epfjhM2iEeiCta8rX3fxAA"/>
                <trigger xmi:id="_epeS8M2iEeiCta8rX3fxAA" event="_epfjhc2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_epeS8c2iEeiCta8rX3fxAA" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_epeS6M2iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeS8s2iEeiCta8rX3fxAA" name="ExpressionStatement@54cc245" incoming="_epeSuc2iEeiCta8rX3fxAA" outgoing="_epeSus2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS882iEeiCta8rX3fxAA" target="_epeS_c2iEeiCta8rX3fxAA" source="_epeS-c2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS9M2iEeiCta8rX3fxAA" target="_epeTBs2iEeiCta8rX3fxAA" source="_epeTA82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeS9c2iEeiCta8rX3fxAA" target="_epeTCs2iEeiCta8rX3fxAA" source="_epeTAM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epeS9s2iEeiCta8rX3fxAA" target="_epeS982iEeiCta8rX3fxAA" source="_epeTE82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeS982iEeiCta8rX3fxAA" name="Expression(LeftHandSide@101b0fff)" incoming="_epeS9s2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_epeS-M2iEeiCta8rX3fxAA" name="ReadSelf">
                  <result xmi:id="_epeS-c2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epeS882iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeS-s2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeS-82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_epeS_M2iEeiCta8rX3fxAA" name="Clear(sig)" structuralFeature="_epdtVc2iEeiCta8rX3fxAA">
                <object xmi:id="_epeS_c2iEeiCta8rX3fxAA" name="Clear(sig).object" incoming="_epeS882iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeS_s2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeS_82iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_epeTAM2iEeiCta8rX3fxAA" name="Clear(sig).result" outgoing="_epeS9c2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTAc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTAs2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_epeTA82iEeiCta8rX3fxAA" name="Fork(LeftHandSide@101b0fff)" incoming="_epeSuM2iEeiCta8rX3fxAA" outgoing="_epeS9M2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTBM2iEeiCta8rX3fxAA" name="WriteAll(MyTest::sig)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTBc2iEeiCta8rX3fxAA" target="_epeTEM2iEeiCta8rX3fxAA" source="_epeTBs2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epeTBs2iEeiCta8rX3fxAA" name="WriteAll(MyTest::sig).input(MyTest::sig)" incoming="_epeS9M2iEeiCta8rX3fxAA" outgoing="_epeTBc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTB82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTCM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epeTCc2iEeiCta8rX3fxAA" name="Write(sig)" structuralFeature="_epdtVc2iEeiCta8rX3fxAA" isReplaceAll="true">
                  <object xmi:id="_epeTCs2iEeiCta8rX3fxAA" name="Write(sig).object" incoming="_epeS9c2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTC82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTDM2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epeTDc2iEeiCta8rX3fxAA" name="Write(sig).result" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTDs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTD82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:id="_epeTEM2iEeiCta8rX3fxAA" name="Write(sig).value" incoming="_epeTBc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTEc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTEs2iEeiCta8rX3fxAA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTE82iEeiCta8rX3fxAA" name="RightHandSide@45cc0dda" outgoing="_epeS9s2iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTFM2iEeiCta8rX3fxAA" name="ExpressionStatement@62ea811" incoming="_epeSus2iEeiCta8rX3fxAA" outgoing="_epeSwc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTFc2iEeiCta8rX3fxAA" target="_epeTFs2iEeiCta8rX3fxAA" source="_epeTGc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_epeTFs2iEeiCta8rX3fxAA" name="Fork(terminate)@6cb18bfb" incoming="_epeTFc2iEeiCta8rX3fxAA" outgoing="_epeSvs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTF82iEeiCta8rX3fxAA" name="RightHandSide@48186c05">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epeTGM2iEeiCta8rX3fxAA" name="Value(false)">
                  <result xmi:id="_epeTGc2iEeiCta8rX3fxAA" name="Value(false).result" outgoing="_epeTFc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTGs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTG82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_epeTHM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTHc2iEeiCta8rX3fxAA" name="AcceptStatement@10a163eb" incoming="_epeSwc2iEeiCta8rX3fxAA" outgoing="_epeSw82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTHs2iEeiCta8rX3fxAA" target="_epeTec2iEeiCta8rX3fxAA" source="_epeTds2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epeTH82iEeiCta8rX3fxAA" target="_epeTNc2iEeiCta8rX3fxAA" source="_epeTec2iEeiCta8rX3fxAA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_epeTIM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTIc2iEeiCta8rX3fxAA" target="_epeTL82iEeiCta8rX3fxAA" source="_epeTZ82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTIs2iEeiCta8rX3fxAA" target="_epeTMs2iEeiCta8rX3fxAA" source="_epeTb82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTI82iEeiCta8rX3fxAA" target="_epeTk82iEeiCta8rX3fxAA" source="_epeTkM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epeTJM2iEeiCta8rX3fxAA" target="_epeTes2iEeiCta8rX3fxAA" source="_epeTk82iEeiCta8rX3fxAA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_epeTJc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epeTJs2iEeiCta8rX3fxAA" target="_epeTec2iEeiCta8rX3fxAA" source="_epeTk82iEeiCta8rX3fxAA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_epeTJ82iEeiCta8rX3fxAA" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTKM2iEeiCta8rX3fxAA" target="_epeTL82iEeiCta8rX3fxAA" source="_epeTic2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTKc2iEeiCta8rX3fxAA" target="_epeTMs2iEeiCta8rX3fxAA" source="_epeTfc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTKs2iEeiCta8rX3fxAA" target="_epeTlc2iEeiCta8rX3fxAA" source="_epeTL82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTK82iEeiCta8rX3fxAA" target="_epeTls2iEeiCta8rX3fxAA" source="_epeTMs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epeTLM2iEeiCta8rX3fxAA" target="_epeTl82iEeiCta8rX3fxAA" source="_epeTnc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epeTLc2iEeiCta8rX3fxAA" target="_epeTk82iEeiCta8rX3fxAA" source="_epeTl82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTLs2iEeiCta8rX3fxAA" target="_epeTlM2iEeiCta8rX3fxAA" source="_epeTmM2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_epeTL82iEeiCta8rX3fxAA" name="AcceptStatement@10a163eb.output(sig)" incoming="_epeTIc2iEeiCta8rX3fxAA _epeTKM2iEeiCta8rX3fxAA" outgoing="_epeTKs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTMM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTMc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_epeTMs2iEeiCta8rX3fxAA" name="AcceptStatement@10a163eb.output(terminate)" incoming="_epeTIs2iEeiCta8rX3fxAA _epeTKc2iEeiCta8rX3fxAA" outgoing="_epeTK82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTM82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTNM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTNc2iEeiCta8rX3fxAA" name="AcceptBlock(SignalNewArrival)" incoming="_epeTH82iEeiCta8rX3fxAA">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTNs2iEeiCta8rX3fxAA" name="ExpressionStatement@1349f34a">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTN82iEeiCta8rX3fxAA" target="_epeTQs2iEeiCta8rX3fxAA" source="_epeTPs2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTOM2iEeiCta8rX3fxAA" target="_epeTS82iEeiCta8rX3fxAA" source="_epeTSM2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTOc2iEeiCta8rX3fxAA" target="_epeTT82iEeiCta8rX3fxAA" source="_epeTRc2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTOs2iEeiCta8rX3fxAA" target="_epeTSM2iEeiCta8rX3fxAA" source="_epeTXs2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_epeTO82iEeiCta8rX3fxAA" target="_epeTPM2iEeiCta8rX3fxAA" source="_epeTWM2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTPM2iEeiCta8rX3fxAA" name="Expression(LeftHandSide@41a33cc9)" incoming="_epeTO82iEeiCta8rX3fxAA">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_epeTPc2iEeiCta8rX3fxAA" name="ReadSelf">
                      <result xmi:id="_epeTPs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epeTN82iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTP82iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTQM2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_epeTQc2iEeiCta8rX3fxAA" name="Clear(name)" structuralFeature="_epdtW82iEeiCta8rX3fxAA">
                    <object xmi:id="_epeTQs2iEeiCta8rX3fxAA" name="Clear(name).object" incoming="_epeTN82iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTQ82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTRM2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_epeTRc2iEeiCta8rX3fxAA" name="Clear(name).result" outgoing="_epeTOc2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTRs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTR82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_epeTSM2iEeiCta8rX3fxAA" name="Fork(LeftHandSide@41a33cc9)" incoming="_epeTOs2iEeiCta8rX3fxAA" outgoing="_epeTOM2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTSc2iEeiCta8rX3fxAA" name="WriteAll(MyTest::name)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTSs2iEeiCta8rX3fxAA" target="_epeTVc2iEeiCta8rX3fxAA" source="_epeTS82iEeiCta8rX3fxAA"/>
                    <structuredNodeInput xmi:id="_epeTS82iEeiCta8rX3fxAA" name="WriteAll(MyTest::name).input(MyTest::name)" incoming="_epeTOM2iEeiCta8rX3fxAA" outgoing="_epeTSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTTM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTTc2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeInput>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epeTTs2iEeiCta8rX3fxAA" name="Write(name)" structuralFeature="_epdtW82iEeiCta8rX3fxAA" isReplaceAll="true">
                      <object xmi:id="_epeTT82iEeiCta8rX3fxAA" name="Write(name).object" incoming="_epeTOc2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTUM2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTUc2iEeiCta8rX3fxAA" value="1"/>
                      </object>
                      <result xmi:id="_epeTUs2iEeiCta8rX3fxAA" name="Write(name).result" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTU82iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTVM2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <value xmi:id="_epeTVc2iEeiCta8rX3fxAA" name="Write(name).value" incoming="_epeTSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTVs2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTV82iEeiCta8rX3fxAA" value="1"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTWM2iEeiCta8rX3fxAA" name="RightHandSide@1f1237b6" outgoing="_epeTO82iEeiCta8rX3fxAA">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTWc2iEeiCta8rX3fxAA" target="_epeTW82iEeiCta8rX3fxAA" source="_epeTYc2iEeiCta8rX3fxAA"/>
                    <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epeTWs2iEeiCta8rX3fxAA" name="Read(name)" structuralFeature="_epdtS82iEeiCta8rX3fxAA">
                      <object xmi:id="_epeTW82iEeiCta8rX3fxAA" name="Read(name).object" incoming="_epeTWc2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTXM2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTXc2iEeiCta8rX3fxAA" value="1"/>
                      </object>
                      <result xmi:id="_epeTXs2iEeiCta8rX3fxAA" name="Read(name).result" outgoing="_epeTOs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTX82iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTYM2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_epeTYc2iEeiCta8rX3fxAA" name="Fork()" incoming="_epeSu82iEeiCta8rX3fxAA" outgoing="_epeTWc2iEeiCta8rX3fxAA"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTYs2iEeiCta8rX3fxAA" name="Passthru(sig)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTY82iEeiCta8rX3fxAA" target="_epeTZ82iEeiCta8rX3fxAA" source="_epeTZM2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epeTZM2iEeiCta8rX3fxAA" name="Passthru(sig).input" incoming="_epeSvc2iEeiCta8rX3fxAA" outgoing="_epeTY82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTZc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTZs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_epeTZ82iEeiCta8rX3fxAA" name="Passthru(sig).output" incoming="_epeTY82iEeiCta8rX3fxAA" outgoing="_epeTIc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTaM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTac2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTas2iEeiCta8rX3fxAA" name="Passthru(terminate)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTa82iEeiCta8rX3fxAA" target="_epeTb82iEeiCta8rX3fxAA" source="_epeTbM2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epeTbM2iEeiCta8rX3fxAA" name="Passthru(terminate).input" incoming="_epeSvs2iEeiCta8rX3fxAA" outgoing="_epeTa82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTbc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTbs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_epeTb82iEeiCta8rX3fxAA" name="Passthru(terminate).output" incoming="_epeTa82iEeiCta8rX3fxAA" outgoing="_epeTIs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTcM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTcc2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_epeTcs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_epdtSs2iEeiCta8rX3fxAA">
                <object xmi:id="_epeTc82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_epeSvM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTdM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTdc2iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_epeTds2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_epeTHs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTd82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTeM2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_epeTec2iEeiCta8rX3fxAA" name="Decision(Test(SignalNewArrival))" incoming="_epeTHs2iEeiCta8rX3fxAA _epeTJs2iEeiCta8rX3fxAA" outgoing="_epeTH82iEeiCta8rX3fxAA" decisionInputFlow="_epeTHs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTes2iEeiCta8rX3fxAA" name="AcceptBlock(SignalTermination)" incoming="_epeTJM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTe82iEeiCta8rX3fxAA" name="ExpressionStatement@3a90928">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTfM2iEeiCta8rX3fxAA" target="_epeTfc2iEeiCta8rX3fxAA" source="_epeTgM2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_epeTfc2iEeiCta8rX3fxAA" name="Fork(terminate)@1c486bf5" incoming="_epeTfM2iEeiCta8rX3fxAA" outgoing="_epeTKc2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTfs2iEeiCta8rX3fxAA" name="RightHandSide@380e9789">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epeTf82iEeiCta8rX3fxAA" name="Value(true)">
                      <result xmi:id="_epeTgM2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_epeTfM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTgc2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTgs2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralBoolean" xmi:id="_epeTg82iEeiCta8rX3fxAA" value="true">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeThM2iEeiCta8rX3fxAA" name="Passthru(sig)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeThc2iEeiCta8rX3fxAA" target="_epeTic2iEeiCta8rX3fxAA" source="_epeThs2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epeThs2iEeiCta8rX3fxAA" name="Passthru(sig).input" incoming="_epeSwM2iEeiCta8rX3fxAA" outgoing="_epeThc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTh82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTiM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_epeTic2iEeiCta8rX3fxAA" name="Passthru(sig).output" incoming="_epeThc2iEeiCta8rX3fxAA" outgoing="_epeTKM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTis2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTi82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_epeTjM2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalTermination)" classifier="_epdtTs2iEeiCta8rX3fxAA">
                <object xmi:id="_epeTjc2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_epeSv82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTjs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTj82iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_epeTkM2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_epeTI82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTkc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTks2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_epeTk82iEeiCta8rX3fxAA" name="Decision(Test(SignalTermination))" incoming="_epeTI82iEeiCta8rX3fxAA _epeTLc2iEeiCta8rX3fxAA" outgoing="_epeTJM2iEeiCta8rX3fxAA _epeTJs2iEeiCta8rX3fxAA" decisionInputFlow="_epeTI82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_epeTlM2iEeiCta8rX3fxAA" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_epeTLs2iEeiCta8rX3fxAA" outgoing="_epeSu82iEeiCta8rX3fxAA _epeSvM2iEeiCta8rX3fxAA _epeSv82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_epeTlc2iEeiCta8rX3fxAA" name="Fork(sig)" incoming="_epeTKs2iEeiCta8rX3fxAA" outgoing="_epeSyM2iEeiCta8rX3fxAA _epeSzM2iEeiCta8rX3fxAA _epeS2M2iEeiCta8rX3fxAA _epeS3c2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_epeTls2iEeiCta8rX3fxAA" name="Fork(terminate)" incoming="_epeTK82iEeiCta8rX3fxAA" outgoing="_epeSws2iEeiCta8rX3fxAA _epeSyc2iEeiCta8rX3fxAA _epeSzc2iEeiCta8rX3fxAA _epeS2c2iEeiCta8rX3fxAA _epeS3s2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_epeTl82iEeiCta8rX3fxAA" name="Accept(SignalNewArrival,SignalTermination)" incoming="_epeTLM2iEeiCta8rX3fxAA" outgoing="_epeTLc2iEeiCta8rX3fxAA">
                <result xmi:id="_epeTmM2iEeiCta8rX3fxAA" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_epeTLs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTmc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTms2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <trigger xmi:id="_epeTm82iEeiCta8rX3fxAA" event="_epfjhs2iEeiCta8rX3fxAA"/>
                <trigger xmi:id="_epeTnM2iEeiCta8rX3fxAA" event="_epfjh82iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_epeTnc2iEeiCta8rX3fxAA" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_epeTLM2iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTns2iEeiCta8rX3fxAA" name="ExpressionStatement@630de622" incoming="_epeSw82iEeiCta8rX3fxAA" outgoing="_epeSxM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTn82iEeiCta8rX3fxAA" target="_epeTqc2iEeiCta8rX3fxAA" source="_epeTpc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeToM2iEeiCta8rX3fxAA" target="_epeTss2iEeiCta8rX3fxAA" source="_epeTr82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeToc2iEeiCta8rX3fxAA" target="_epeTts2iEeiCta8rX3fxAA" source="_epeTrM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epeTos2iEeiCta8rX3fxAA" target="_epeTo82iEeiCta8rX3fxAA" source="_epeTv82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTo82iEeiCta8rX3fxAA" name="Expression(LeftHandSide@3bf74f96)" incoming="_epeTos2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_epeTpM2iEeiCta8rX3fxAA" name="ReadSelf">
                  <result xmi:id="_epeTpc2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epeTn82iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTps2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTp82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_epeTqM2iEeiCta8rX3fxAA" name="Clear(terminate)" structuralFeature="_epdtXs2iEeiCta8rX3fxAA">
                <object xmi:id="_epeTqc2iEeiCta8rX3fxAA" name="Clear(terminate).object" incoming="_epeTn82iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTqs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTq82iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_epeTrM2iEeiCta8rX3fxAA" name="Clear(terminate).result" outgoing="_epeToc2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTrc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTrs2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_epeTr82iEeiCta8rX3fxAA" name="Fork(LeftHandSide@3bf74f96)" incoming="_epeSws2iEeiCta8rX3fxAA" outgoing="_epeToM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTsM2iEeiCta8rX3fxAA" name="WriteAll(MyTest::terminate)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTsc2iEeiCta8rX3fxAA" target="_epeTvM2iEeiCta8rX3fxAA" source="_epeTss2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epeTss2iEeiCta8rX3fxAA" name="WriteAll(MyTest::terminate).input(MyTest::terminate)" incoming="_epeToM2iEeiCta8rX3fxAA" outgoing="_epeTsc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTs82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTtM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epeTtc2iEeiCta8rX3fxAA" name="Write(terminate)" structuralFeature="_epdtXs2iEeiCta8rX3fxAA" isReplaceAll="true">
                  <object xmi:id="_epeTts2iEeiCta8rX3fxAA" name="Write(terminate).object" incoming="_epeToc2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTt82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTuM2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epeTuc2iEeiCta8rX3fxAA" name="Write(terminate).result" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTus2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTu82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:id="_epeTvM2iEeiCta8rX3fxAA" name="Write(terminate).value" incoming="_epeTsc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTvc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTvs2iEeiCta8rX3fxAA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTv82iEeiCta8rX3fxAA" name="RightHandSide@7ccda981" outgoing="_epeTos2iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTwM2iEeiCta8rX3fxAA" name="AcceptStatement@21fe0725" incoming="_epeSxM2iEeiCta8rX3fxAA" outgoing="_epeSxc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_epeTwc2iEeiCta8rX3fxAA" target="_epeTws2iEeiCta8rX3fxAA" source="_epeTxM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_epeTws2iEeiCta8rX3fxAA" name="Accept(SignalNewArrival)" incoming="_epeTwc2iEeiCta8rX3fxAA">
                <trigger xmi:id="_epeTw82iEeiCta8rX3fxAA" event="_epfjiM2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_epeTxM2iEeiCta8rX3fxAA" name="Initial(Accept(SignalNewArrival))" outgoing="_epeTwc2iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTxc2iEeiCta8rX3fxAA" name="AcceptStatement@5fc70b68" incoming="_epeSxc2iEeiCta8rX3fxAA" outgoing="_epeSx82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_epeTxs2iEeiCta8rX3fxAA" target="_epeTyc2iEeiCta8rX3fxAA" source="_epeTzs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeTx82iEeiCta8rX3fxAA" target="_epeTyM2iEeiCta8rX3fxAA" source="_epeTys2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_epeTyM2iEeiCta8rX3fxAA" name="Fork(Accept(SignalNewArrival).result)" incoming="_epeTx82iEeiCta8rX3fxAA" outgoing="_epeSxs2iEeiCta8rX3fxAA _epeSys2iEeiCta8rX3fxAA _epeSz82iEeiCta8rX3fxAA _epeS282iEeiCta8rX3fxAA _epeS4M2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_epeTyc2iEeiCta8rX3fxAA" name="Accept(SignalNewArrival)" incoming="_epeTxs2iEeiCta8rX3fxAA">
                <result xmi:id="_epeTys2iEeiCta8rX3fxAA" name="Accept(SignalNewArrival).result" outgoing="_epeTx82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeTy82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeTzM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <trigger xmi:id="_epeTzc2iEeiCta8rX3fxAA" event="_epfjic2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_epeTzs2iEeiCta8rX3fxAA" name="Initial(Accept(SignalNewArrival))" outgoing="_epeTxs2iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeTz82iEeiCta8rX3fxAA" name="ExpressionStatement@5f693fbe" incoming="_epeSx82iEeiCta8rX3fxAA" outgoing="_epeSy82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT0M2iEeiCta8rX3fxAA" target="_epeT2s2iEeiCta8rX3fxAA" source="_epeT1s2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT0c2iEeiCta8rX3fxAA" target="_epeT482iEeiCta8rX3fxAA" source="_epeT4M2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT0s2iEeiCta8rX3fxAA" target="_epeT582iEeiCta8rX3fxAA" source="_epeT3c2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epeT082iEeiCta8rX3fxAA" target="_epeT1M2iEeiCta8rX3fxAA" source="_epeT8M2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeT1M2iEeiCta8rX3fxAA" name="Expression(LeftHandSide@2cdaa913)" incoming="_epeT082iEeiCta8rX3fxAA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_epeT1c2iEeiCta8rX3fxAA" name="ReadSelf">
                  <result xmi:id="_epeT1s2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epeT0M2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeT182iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeT2M2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_epeT2c2iEeiCta8rX3fxAA" name="Clear(arrival)" structuralFeature="_epdtYc2iEeiCta8rX3fxAA">
                <object xmi:id="_epeT2s2iEeiCta8rX3fxAA" name="Clear(arrival).object" incoming="_epeT0M2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeT282iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeT3M2iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_epeT3c2iEeiCta8rX3fxAA" name="Clear(arrival).result" outgoing="_epeT0s2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeT3s2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeT382iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_epeT4M2iEeiCta8rX3fxAA" name="Fork(LeftHandSide@2cdaa913)" incoming="_epeSxs2iEeiCta8rX3fxAA" outgoing="_epeT0c2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeT4c2iEeiCta8rX3fxAA" name="WriteAll(MyTest::arrival)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT4s2iEeiCta8rX3fxAA" target="_epeT7c2iEeiCta8rX3fxAA" source="_epeT482iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epeT482iEeiCta8rX3fxAA" name="WriteAll(MyTest::arrival).input(MyTest::arrival)" incoming="_epeT0c2iEeiCta8rX3fxAA" outgoing="_epeT4s2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeT5M2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeT5c2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epeT5s2iEeiCta8rX3fxAA" name="Write(arrival)" structuralFeature="_epdtYc2iEeiCta8rX3fxAA" isReplaceAll="true">
                  <object xmi:id="_epeT582iEeiCta8rX3fxAA" name="Write(arrival).object" incoming="_epeT0s2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeT6M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeT6c2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epeT6s2iEeiCta8rX3fxAA" name="Write(arrival).result" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeT682iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeT7M2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:id="_epeT7c2iEeiCta8rX3fxAA" name="Write(arrival).value" incoming="_epeT4s2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeT7s2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeT782iEeiCta8rX3fxAA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeT8M2iEeiCta8rX3fxAA" name="RightHandSide@29406fb9" outgoing="_epeT082iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeT8c2iEeiCta8rX3fxAA" name="ForStatement@5c29c253" incoming="_epeSy82iEeiCta8rX3fxAA" outgoing="_epeS0s2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT8s2iEeiCta8rX3fxAA" target="_epeU8s2iEeiCta8rX3fxAA" source="_epeU5s2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT882iEeiCta8rX3fxAA" target="_epeVAs2iEeiCta8rX3fxAA" source="_epeU-c2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT9M2iEeiCta8rX3fxAA" target="_epeU182iEeiCta8rX3fxAA" source="_epeVHc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT9c2iEeiCta8rX3fxAA" target="_epeU2s2iEeiCta8rX3fxAA" source="_epeVGc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT9s2iEeiCta8rX3fxAA" target="_epeU1M2iEeiCta8rX3fxAA" source="_epeVAs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epeT982iEeiCta8rX3fxAA" target="_epeT-M2iEeiCta8rX3fxAA" source="_epeU882iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:LoopNode" xmi:id="_epeT-M2iEeiCta8rX3fxAA" name="Loop(ForStatement@5c29c253)" incoming="_epeT982iEeiCta8rX3fxAA" bodyOutput="_epeUJs2iEeiCta8rX3fxAA _epeUKc2iEeiCta8rX3fxAA _epeULM2iEeiCta8rX3fxAA _epeUL82iEeiCta8rX3fxAA _epeUq82iEeiCta8rX3fxAA _epeUlM2iEeiCta8rX3fxAA _epeUoc2iEeiCta8rX3fxAA" bodyPart="_epeUHM2iEeiCta8rX3fxAA _epeUHc2iEeiCta8rX3fxAA _epeUpM2iEeiCta8rX3fxAA _epeUrs2iEeiCta8rX3fxAA" decider="_epeUGc2iEeiCta8rX3fxAA" isTestedFirst="true" test="_epeUEs2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT-c2iEeiCta8rX3fxAA" target="_epeUC82iEeiCta8rX3fxAA" source="_epeUs82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT-s2iEeiCta8rX3fxAA" target="_epeUDM2iEeiCta8rX3fxAA" source="_epeUts2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT-82iEeiCta8rX3fxAA" target="_epeUDc2iEeiCta8rX3fxAA" source="_epeUuc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT_M2iEeiCta8rX3fxAA" target="_epeUDs2iEeiCta8rX3fxAA" source="_epeUvM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT_c2iEeiCta8rX3fxAA" target="_epeUD82iEeiCta8rX3fxAA" source="_epeUv82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT_s2iEeiCta8rX3fxAA" target="_epeUEM2iEeiCta8rX3fxAA" source="_epeUws2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeT_82iEeiCta8rX3fxAA" target="_epeUEc2iEeiCta8rX3fxAA" source="_epeUxc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUAM2iEeiCta8rX3fxAA" target="_epeUE82iEeiCta8rX3fxAA" source="_epeUEM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUAc2iEeiCta8rX3fxAA" target="_epeUFs2iEeiCta8rX3fxAA" source="_epeUEc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epeUAs2iEeiCta8rX3fxAA" target="_epeUHc2iEeiCta8rX3fxAA" source="_epeUHM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUA82iEeiCta8rX3fxAA" target="_epeUTc2iEeiCta8rX3fxAA" source="_epeUD82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUBM2iEeiCta8rX3fxAA" target="_epeUpc2iEeiCta8rX3fxAA" source="_epeUD82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUBc2iEeiCta8rX3fxAA" target="_epeUqM2iEeiCta8rX3fxAA" source="_epeUr82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUBs2iEeiCta8rX3fxAA" target="_epeUjs2iEeiCta8rX3fxAA" source="_epeUEM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUB82iEeiCta8rX3fxAA" target="_epeUns2iEeiCta8rX3fxAA" source="_epeUEc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUCM2iEeiCta8rX3fxAA" target="_epeUb82iEeiCta8rX3fxAA" source="_epeUC82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUCc2iEeiCta8rX3fxAA" target="_epeUd82iEeiCta8rX3fxAA" source="_epeUDM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUCs2iEeiCta8rX3fxAA" target="_epeUf82iEeiCta8rX3fxAA" source="_epeUDc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_epeUC82iEeiCta8rX3fxAA" name="Fork(ForStatement@5c29c253.loopVariable(sig))" incoming="_epeT-c2iEeiCta8rX3fxAA" outgoing="_epeUCM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_epeUDM2iEeiCta8rX3fxAA" name="Fork(ForStatement@5c29c253.loopVariable(terminate))" incoming="_epeT-s2iEeiCta8rX3fxAA" outgoing="_epeUCc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_epeUDc2iEeiCta8rX3fxAA" name="Fork(ForStatement@5c29c253.loopVariable(arrival3))" incoming="_epeT-82iEeiCta8rX3fxAA" outgoing="_epeUCs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_epeUDs2iEeiCta8rX3fxAA" name="Fork(ForStatement@5c29c253.loopVariable(s1))" incoming="_epeT_M2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_epeUD82iEeiCta8rX3fxAA" name="Fork(ForStatement@5c29c253.loopVariable(i))" incoming="_epeT_c2iEeiCta8rX3fxAA" outgoing="_epeUA82iEeiCta8rX3fxAA _epeUBM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_epeUEM2iEeiCta8rX3fxAA" name="Fork(ForStatement@5c29c253.loopVariable(counter))" incoming="_epeT_s2iEeiCta8rX3fxAA" outgoing="_epeUAM2iEeiCta8rX3fxAA _epeUBs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_epeUEc2iEeiCta8rX3fxAA" name="Fork(ForStatement@5c29c253.loopVariable(upper))" incoming="_epeT_82iEeiCta8rX3fxAA" outgoing="_epeUAc2iEeiCta8rX3fxAA _epeUB82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_epeUEs2iEeiCta8rX3fxAA" name="Call(&lt;=)">
                  <argument xmi:id="_epeUE82iEeiCta8rX3fxAA" name="Call(&lt;=).argument(x)" incoming="_epeUAM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUFM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUFc2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_epeUFs2iEeiCta8rX3fxAA" name="Call(&lt;=).argument(y)" incoming="_epeUAc2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUF82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUGM2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_epeUGc2iEeiCta8rX3fxAA" name="Call(&lt;=).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUGs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUG82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeUHM2iEeiCta8rX3fxAA" name="Values(ForStatement@5c29c253)" outgoing="_epeUAs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeUHc2iEeiCta8rX3fxAA" name="Body(ForStatement@5c29c253)" incoming="_epeUAs2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUHs2iEeiCta8rX3fxAA" target="_epeUJs2iEeiCta8rX3fxAA" source="_epeUcs2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUH82iEeiCta8rX3fxAA" target="_epeUKc2iEeiCta8rX3fxAA" source="_epeUes2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUIM2iEeiCta8rX3fxAA" target="_epeULM2iEeiCta8rX3fxAA" source="_epeUgs2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUIc2iEeiCta8rX3fxAA" target="_epeUL82iEeiCta8rX3fxAA" source="_epeUis2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUIs2iEeiCta8rX3fxAA" target="_epeUa82iEeiCta8rX3fxAA" source="_epeUNc2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_epeUI82iEeiCta8rX3fxAA" target="_epeUPc2iEeiCta8rX3fxAA" source="_epeUMs2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUJM2iEeiCta8rX3fxAA" target="_epeUh82iEeiCta8rX3fxAA" source="_epeUNc2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUJc2iEeiCta8rX3fxAA" target="_epeUkc2iEeiCta8rX3fxAA" source="_epeUmM2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_epeUJs2iEeiCta8rX3fxAA" name="sig" incoming="_epeUHs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUJ82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUKM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_epeUKc2iEeiCta8rX3fxAA" name="terminate" incoming="_epeUH82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUKs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUK82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_epeULM2iEeiCta8rX3fxAA" name="arrival3" incoming="_epeUIM2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeULc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeULs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_epeUL82iEeiCta8rX3fxAA" name="s1" incoming="_epeUIc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUMM2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUMc2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeUMs2iEeiCta8rX3fxAA" name="AcceptStatement@13399ed1" outgoing="_epeUI82iEeiCta8rX3fxAA">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_epeUM82iEeiCta8rX3fxAA" target="_epeUNs2iEeiCta8rX3fxAA" source="_epeUPM2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUNM2iEeiCta8rX3fxAA" target="_epeUNc2iEeiCta8rX3fxAA" source="_epeUN82iEeiCta8rX3fxAA"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_epeUNc2iEeiCta8rX3fxAA" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_epeUNM2iEeiCta8rX3fxAA" outgoing="_epeUIs2iEeiCta8rX3fxAA _epeUJM2iEeiCta8rX3fxAA"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_epeUNs2iEeiCta8rX3fxAA" name="Accept(SignalNewArrival,SignalTermination)" incoming="_epeUM82iEeiCta8rX3fxAA">
                      <result xmi:id="_epeUN82iEeiCta8rX3fxAA" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_epeUNM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUOM2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUOc2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <trigger xmi:id="_epeUOs2iEeiCta8rX3fxAA" event="_epfjis2iEeiCta8rX3fxAA"/>
                      <trigger xmi:id="_epeUO82iEeiCta8rX3fxAA" event="_epfji82iEeiCta8rX3fxAA"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_epeUPM2iEeiCta8rX3fxAA" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_epeUM82iEeiCta8rX3fxAA"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeUPc2iEeiCta8rX3fxAA" name="ExpressionStatement@2f6e70fe" incoming="_epeUI82iEeiCta8rX3fxAA">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_epeUPs2iEeiCta8rX3fxAA" target="_epeUS82iEeiCta8rX3fxAA" source="_epeURs2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUP82iEeiCta8rX3fxAA" target="_epeUU82iEeiCta8rX3fxAA" source="_epeUUM2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUQM2iEeiCta8rX3fxAA" target="_epeUVc2iEeiCta8rX3fxAA" source="_epeUSM2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUQc2iEeiCta8rX3fxAA" target="_epeUW82iEeiCta8rX3fxAA" source="_epeUU82iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUQs2iEeiCta8rX3fxAA" target="_epeUX82iEeiCta8rX3fxAA" source="_epeUWM2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUQ82iEeiCta8rX3fxAA" target="_epeUaM2iEeiCta8rX3fxAA" source="_epeUU82iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeURM2iEeiCta8rX3fxAA" target="_epeUZc2iEeiCta8rX3fxAA" source="_epeUa82iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_epeURc2iEeiCta8rX3fxAA" target="_epeURs2iEeiCta8rX3fxAA" source="_epeUbM2iEeiCta8rX3fxAA"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeURs2iEeiCta8rX3fxAA" name="Expression(LeftHandSide@39a7b5a6)" incoming="_epeURc2iEeiCta8rX3fxAA" outgoing="_epeUPs2iEeiCta8rX3fxAA">
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_epeUR82iEeiCta8rX3fxAA" name="ReadSelf">
                        <result xmi:id="_epeUSM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epeUQM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUSc2iEeiCta8rX3fxAA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUSs2iEeiCta8rX3fxAA" value="1"/>
                        </result>
                      </node>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeUS82iEeiCta8rX3fxAA" name="Index(LeftHandSide@39a7b5a6)" incoming="_epeUPs2iEeiCta8rX3fxAA"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_epeUTM2iEeiCta8rX3fxAA" name="Call(ToUnlimitedNatural)">
                      <argument xmi:id="_epeUTc2iEeiCta8rX3fxAA" name="Call(ToUnlimitedNatural).argument(x)" incoming="_epeUA82iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUTs2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUT82iEeiCta8rX3fxAA" value="1"/>
                      </argument>
                      <result xmi:id="_epeUUM2iEeiCta8rX3fxAA" name="Call(ToUnlimitedNatural).result(result)" outgoing="_epeUP82iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUUc2iEeiCta8rX3fxAA"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUUs2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_epeUU82iEeiCta8rX3fxAA" name="Fork(Call(ToUnlimitedNatural).result(result))" incoming="_epeUP82iEeiCta8rX3fxAA" outgoing="_epeUQc2iEeiCta8rX3fxAA _epeUQ82iEeiCta8rX3fxAA"/>
                    <node xmi:type="uml:RemoveStructuralFeatureValueAction" xmi:id="_epeUVM2iEeiCta8rX3fxAA" name="Remove(signals)" structuralFeature="_epdtZ82iEeiCta8rX3fxAA">
                      <object xmi:id="_epeUVc2iEeiCta8rX3fxAA" name="Remove(signals).object" incoming="_epeUQM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUVs2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUV82iEeiCta8rX3fxAA" value="1"/>
                      </object>
                      <result xmi:id="_epeUWM2iEeiCta8rX3fxAA" name="Remove(signals).result" outgoing="_epeUQs2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUWc2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUWs2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <removeAt xmi:id="_epeUW82iEeiCta8rX3fxAA" name="Remove(signals).removeAt" incoming="_epeUQc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUXM2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUXc2iEeiCta8rX3fxAA" value="1"/>
                      </removeAt>
                    </node>
                    <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epeUXs2iEeiCta8rX3fxAA" name="Write(signals)" structuralFeature="_epdtZ82iEeiCta8rX3fxAA">
                      <object xmi:id="_epeUX82iEeiCta8rX3fxAA" name="Write(signals).object" incoming="_epeUQs2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUYM2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUYc2iEeiCta8rX3fxAA" value="1"/>
                      </object>
                      <result xmi:id="_epeUYs2iEeiCta8rX3fxAA" name="Write(signals).result" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUY82iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUZM2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <value xmi:id="_epeUZc2iEeiCta8rX3fxAA" name="Write(signals).value" incoming="_epeURM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUZs2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUZ82iEeiCta8rX3fxAA" value="1"/>
                      </value>
                      <insertAt xmi:id="_epeUaM2iEeiCta8rX3fxAA" name="Write(signals).insertAt" incoming="_epeUQ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUac2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUas2iEeiCta8rX3fxAA" value="1"/>
                      </insertAt>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_epeUa82iEeiCta8rX3fxAA" name="Fork(LeftHandSide@39a7b5a6)" incoming="_epeUIs2iEeiCta8rX3fxAA" outgoing="_epeURM2iEeiCta8rX3fxAA"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeUbM2iEeiCta8rX3fxAA" name="RightHandSide@6b98dfbd" outgoing="_epeURc2iEeiCta8rX3fxAA"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeUbc2iEeiCta8rX3fxAA" name="Passthru(Fork(sig))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUbs2iEeiCta8rX3fxAA" target="_epeUcs2iEeiCta8rX3fxAA" source="_epeUb82iEeiCta8rX3fxAA"/>
                    <structuredNodeInput xmi:id="_epeUb82iEeiCta8rX3fxAA" name="Passthru(Fork(sig)).input" incoming="_epeUCM2iEeiCta8rX3fxAA" outgoing="_epeUbs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUcM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUcc2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_epeUcs2iEeiCta8rX3fxAA" name="Passthru(Fork(sig)).output" incoming="_epeUbs2iEeiCta8rX3fxAA" outgoing="_epeUHs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUc82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUdM2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeUdc2iEeiCta8rX3fxAA" name="Passthru(Fork(terminate))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUds2iEeiCta8rX3fxAA" target="_epeUes2iEeiCta8rX3fxAA" source="_epeUd82iEeiCta8rX3fxAA"/>
                    <structuredNodeInput xmi:id="_epeUd82iEeiCta8rX3fxAA" name="Passthru(Fork(terminate)).input" incoming="_epeUCc2iEeiCta8rX3fxAA" outgoing="_epeUds2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUeM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUec2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_epeUes2iEeiCta8rX3fxAA" name="Passthru(Fork(terminate)).output" incoming="_epeUds2iEeiCta8rX3fxAA" outgoing="_epeUH82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUe82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUfM2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeUfc2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUfs2iEeiCta8rX3fxAA" target="_epeUgs2iEeiCta8rX3fxAA" source="_epeUf82iEeiCta8rX3fxAA"/>
                    <structuredNodeInput xmi:id="_epeUf82iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_epeUCs2iEeiCta8rX3fxAA" outgoing="_epeUfs2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUgM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUgc2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_epeUgs2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_epeUfs2iEeiCta8rX3fxAA" outgoing="_epeUIM2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUg82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUhM2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeUhc2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUhs2iEeiCta8rX3fxAA" target="_epeUis2iEeiCta8rX3fxAA" source="_epeUh82iEeiCta8rX3fxAA"/>
                    <structuredNodeInput xmi:id="_epeUh82iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" incoming="_epeUJM2iEeiCta8rX3fxAA" outgoing="_epeUhs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUiM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUic2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_epeUis2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" incoming="_epeUhs2iEeiCta8rX3fxAA" outgoing="_epeUIc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUi82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUjM2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_epeUjc2iEeiCta8rX3fxAA" name="Call(+)">
                    <argument xmi:id="_epeUjs2iEeiCta8rX3fxAA" name="Call(+).argument(x)" incoming="_epeUBs2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUj82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUkM2iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <argument xmi:id="_epeUkc2iEeiCta8rX3fxAA" name="Call(+).argument(y)" incoming="_epeUJc2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUks2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUk82iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <result xmi:id="_epeUlM2iEeiCta8rX3fxAA" name="Call(+).result(result)">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUlc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUls2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epeUl82iEeiCta8rX3fxAA" name="Value(1)">
                    <result xmi:id="_epeUmM2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_epeUJc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUmc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUms2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_epeUm82iEeiCta8rX3fxAA" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeUnM2iEeiCta8rX3fxAA" name="Passthru(upper)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeUnc2iEeiCta8rX3fxAA" target="_epeUoc2iEeiCta8rX3fxAA" source="_epeUns2iEeiCta8rX3fxAA"/>
                    <structuredNodeInput xmi:id="_epeUns2iEeiCta8rX3fxAA" name="Passthru(upper).input" incoming="_epeUB82iEeiCta8rX3fxAA" outgoing="_epeUnc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUn82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUoM2iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_epeUoc2iEeiCta8rX3fxAA" name="Passthru(upper).output" incoming="_epeUnc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUos2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUo82iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeOutput>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_epeUpM2iEeiCta8rX3fxAA" name="Call(+)">
                  <argument xmi:id="_epeUpc2iEeiCta8rX3fxAA" name="Call(+).argument(x)" incoming="_epeUBM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUps2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUp82iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_epeUqM2iEeiCta8rX3fxAA" name="Call(+).argument(y)" incoming="_epeUBc2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUqc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUqs2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_epeUq82iEeiCta8rX3fxAA" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUrM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUrc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epeUrs2iEeiCta8rX3fxAA" name="Value(1)">
                  <result xmi:id="_epeUr82iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_epeUBc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUsM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUsc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_epeUss2iEeiCta8rX3fxAA" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <loopVariable xmi:id="_epeUs82iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariable(sig)" outgoing="_epeT-c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUtM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUtc2iEeiCta8rX3fxAA" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_epeUts2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariable(terminate)" outgoing="_epeT-s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUt82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUuM2iEeiCta8rX3fxAA" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_epeUuc2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariable(arrival3)" outgoing="_epeT-82iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUus2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUu82iEeiCta8rX3fxAA" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_epeUvM2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariable(s1)" outgoing="_epeT_M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUvc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUvs2iEeiCta8rX3fxAA" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_epeUv82iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariable(i)" outgoing="_epeT_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUwM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUwc2iEeiCta8rX3fxAA" value="*"/>
                </loopVariable>
                <loopVariable xmi:id="_epeUws2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariable(counter)" outgoing="_epeT_s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUw82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUxM2iEeiCta8rX3fxAA" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_epeUxc2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariable(upper)" outgoing="_epeT_82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUxs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUx82iEeiCta8rX3fxAA" value="1"/>
                </loopVariable>
                <loopVariableInput xmi:id="_epeUyM2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariableInput(sig)" incoming="_epeSyM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUyc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUys2iEeiCta8rX3fxAA" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_epeUy82iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariableInput(terminate)" incoming="_epeSyc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUzM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeUzc2iEeiCta8rX3fxAA" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_epeUzs2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariableInput(arrival3)" incoming="_epeSys2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeUz82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeU0M2iEeiCta8rX3fxAA" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_epeU0c2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariableInput(s1)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeU0s2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeU082iEeiCta8rX3fxAA" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_epeU1M2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariableInput(i)" incoming="_epeT9s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeU1c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeU1s2iEeiCta8rX3fxAA" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_epeU182iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariableInput(counter)" incoming="_epeT9M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeU2M2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeU2c2iEeiCta8rX3fxAA" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_epeU2s2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.loopVariableInput(upper)" incoming="_epeT9c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeU282iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeU3M2iEeiCta8rX3fxAA" value="1"/>
                </loopVariableInput>
                <result xmi:id="_epeU3c2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.result(sig)" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeU3s2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeU382iEeiCta8rX3fxAA" value="1"/>
                </result>
                <result xmi:id="_epeU4M2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.result(terminate)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeU4c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeU4s2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <result xmi:id="_epeU482iEeiCta8rX3fxAA" name="ForStatement@5c29c253.result(arrival3)" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeU5M2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeU5c2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <result xmi:id="_epeU5s2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.result(s1)" outgoing="_epeT8s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeU582iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeU6M2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <result xmi:id="_epeU6c2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.result(i)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeU6s2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeU682iEeiCta8rX3fxAA" value="*"/>
                </result>
                <result xmi:id="_epeU7M2iEeiCta8rX3fxAA" name="ForStatement@5c29c253.result(counter)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeU7c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeU7s2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <result xmi:id="_epeU782iEeiCta8rX3fxAA" name="ForStatement@5c29c253.result(upper)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeU8M2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeU8c2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_epeU8s2iEeiCta8rX3fxAA" name="Fork(s1)" incoming="_epeT8s2iEeiCta8rX3fxAA" outgoing="_epeS0M2iEeiCta8rX3fxAA _epeS3M2iEeiCta8rX3fxAA _epeS4c2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeU882iEeiCta8rX3fxAA" name="LoopVariables(ForStatement@5c29c253)" outgoing="_epeT982iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeU9M2iEeiCta8rX3fxAA" target="_epeVBM2iEeiCta8rX3fxAA" source="_epeU_s2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeU9c2iEeiCta8rX3fxAA" target="_epeVB82iEeiCta8rX3fxAA" source="_epeVAs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeU9s2iEeiCta8rX3fxAA" target="_epeVE82iEeiCta8rX3fxAA" source="_epeVCs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeU982iEeiCta8rX3fxAA" target="_epeVFs2iEeiCta8rX3fxAA" source="_epeVDs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epeU-M2iEeiCta8rX3fxAA" name="Value(1)">
                  <result xmi:id="_epeU-c2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_epeT882iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeU-s2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeU-82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_epeU_M2iEeiCta8rX3fxAA" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epeU_c2iEeiCta8rX3fxAA" name="Value(2)">
                  <result xmi:id="_epeU_s2iEeiCta8rX3fxAA" name="Value(2).result" outgoing="_epeU9M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeU_82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVAM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_epeVAc2iEeiCta8rX3fxAA" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epeVAs2iEeiCta8rX3fxAA" name="Fork(Value(1).result)" incoming="_epeT882iEeiCta8rX3fxAA" outgoing="_epeT9s2iEeiCta8rX3fxAA _epeU9c2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_epeVA82iEeiCta8rX3fxAA" name="Call(-)">
                  <argument xmi:id="_epeVBM2iEeiCta8rX3fxAA" name="Call(-).argument(x)" incoming="_epeU9M2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVBc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVBs2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_epeVB82iEeiCta8rX3fxAA" name="Call(-).argument(y)" incoming="_epeU9c2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVCM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVCc2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_epeVCs2iEeiCta8rX3fxAA" name="Call(-).result(result)" outgoing="_epeU9s2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVC82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVDM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epeVDc2iEeiCta8rX3fxAA" name="Value(1)">
                  <result xmi:id="_epeVDs2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_epeU982iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVD82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVEM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_epeVEc2iEeiCta8rX3fxAA" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_epeVEs2iEeiCta8rX3fxAA" name="Call(+)">
                  <argument xmi:id="_epeVE82iEeiCta8rX3fxAA" name="Call(+).argument(x)" incoming="_epeU9s2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVFM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVFc2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_epeVFs2iEeiCta8rX3fxAA" name="Call(+).argument(y)" incoming="_epeU982iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVF82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVGM2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_epeVGc2iEeiCta8rX3fxAA" name="Call(+).result(result)" outgoing="_epeT9c2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVGs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVG82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epeVHM2iEeiCta8rX3fxAA" name="Value(1)">
                  <result xmi:id="_epeVHc2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_epeT9M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVHs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVH82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_epeVIM2iEeiCta8rX3fxAA" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:LoopNode" xmi:id="_epeVIc2iEeiCta8rX3fxAA" name="DoStatement@911d679" incoming="_epeS0s2iEeiCta8rX3fxAA" outgoing="_epeS4s2iEeiCta8rX3fxAA" bodyOutput="_epeVQc2iEeiCta8rX3fxAA _epeVRM2iEeiCta8rX3fxAA _epeVR82iEeiCta8rX3fxAA _epeVSs2iEeiCta8rX3fxAA _epeVTc2iEeiCta8rX3fxAA" bodyPart="_epeVOM2iEeiCta8rX3fxAA" decider="_epeVNc2iEeiCta8rX3fxAA" test="_epeVMM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVIs2iEeiCta8rX3fxAA" target="_epeVK82iEeiCta8rX3fxAA" source="_epe5xM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVI82iEeiCta8rX3fxAA" target="_epeVLM2iEeiCta8rX3fxAA" source="_epe5x82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVJM2iEeiCta8rX3fxAA" target="_epeVLc2iEeiCta8rX3fxAA" source="_epe5ys2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVJc2iEeiCta8rX3fxAA" target="_epeVLs2iEeiCta8rX3fxAA" source="_epe5zc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVJs2iEeiCta8rX3fxAA" target="_epeVL82iEeiCta8rX3fxAA" source="_epe50M2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVJ82iEeiCta8rX3fxAA" target="_epeVps2iEeiCta8rX3fxAA" source="_epeVK82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVKM2iEeiCta8rX3fxAA" target="_epeVrs2iEeiCta8rX3fxAA" source="_epeVLM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVKc2iEeiCta8rX3fxAA" target="_epeVvs2iEeiCta8rX3fxAA" source="_epeVLs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVKs2iEeiCta8rX3fxAA" target="_epeVxs2iEeiCta8rX3fxAA" source="_epeVL82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_epeVK82iEeiCta8rX3fxAA" name="Fork(DoStatement@911d679.loopVariable(sig))" incoming="_epeVIs2iEeiCta8rX3fxAA" outgoing="_epeVJ82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_epeVLM2iEeiCta8rX3fxAA" name="Fork(DoStatement@911d679.loopVariable(terminate))" incoming="_epeVI82iEeiCta8rX3fxAA" outgoing="_epeVKM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_epeVLc2iEeiCta8rX3fxAA" name="Fork(DoStatement@911d679.loopVariable(s))" incoming="_epeVJM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_epeVLs2iEeiCta8rX3fxAA" name="Fork(DoStatement@911d679.loopVariable(arrival3))" incoming="_epeVJc2iEeiCta8rX3fxAA" outgoing="_epeVKc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_epeVL82iEeiCta8rX3fxAA" name="Fork(DoStatement@911d679.loopVariable(s1))" incoming="_epeVJs2iEeiCta8rX3fxAA" outgoing="_epeVKs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeVMM2iEeiCta8rX3fxAA" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVMc2iEeiCta8rX3fxAA" target="_epeVNc2iEeiCta8rX3fxAA" source="_epeVMs2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epeVMs2iEeiCta8rX3fxAA" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).input" incoming="_epeS0c2iEeiCta8rX3fxAA" outgoing="_epeVMc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVM82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVNM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epeVNc2iEeiCta8rX3fxAA" name="Passthru(ReadIsClassifiedObject(SignalNewArrival).result).output" incoming="_epeVMc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVNs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVN82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeVOM2iEeiCta8rX3fxAA" name="BodyPart(DoStatement@911d679)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVOc2iEeiCta8rX3fxAA" target="_epeVQc2iEeiCta8rX3fxAA" source="_epeVqc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVOs2iEeiCta8rX3fxAA" target="_epeVRM2iEeiCta8rX3fxAA" source="_epeVsc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVO82iEeiCta8rX3fxAA" target="_epeVR82iEeiCta8rX3fxAA" source="_epeVuc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVPM2iEeiCta8rX3fxAA" target="_epeVSs2iEeiCta8rX3fxAA" source="_epeVwc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVPc2iEeiCta8rX3fxAA" target="_epeVTc2iEeiCta8rX3fxAA" source="_epe5wc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVPs2iEeiCta8rX3fxAA" target="_epeVUs2iEeiCta8rX3fxAA" source="_epeVXc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epeVP82iEeiCta8rX3fxAA" target="_epeVUM2iEeiCta8rX3fxAA" source="_epeVWM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVQM2iEeiCta8rX3fxAA" target="_epeVts2iEeiCta8rX3fxAA" source="_epeVXc2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_epeVQc2iEeiCta8rX3fxAA" name="sig" incoming="_epeVOc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVQs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVQ82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_epeVRM2iEeiCta8rX3fxAA" name="terminate" incoming="_epeVOs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVRc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVRs2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_epeVR82iEeiCta8rX3fxAA" name="s" incoming="_epeVO82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVSM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVSc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_epeVSs2iEeiCta8rX3fxAA" name="arrival3" incoming="_epeVPM2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVS82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVTM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_epeVTc2iEeiCta8rX3fxAA" name="s1" incoming="_epeVPc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVTs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVT82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeVUM2iEeiCta8rX3fxAA" name="Condition(DoStatement@911d679)" incoming="_epeVP82iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_epeVUc2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_epdtSs2iEeiCta8rX3fxAA" isDirect="true">
                    <object xmi:id="_epeVUs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_epeVPs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVU82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVVM2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_epeVVc2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_epeS0c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVVs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVV82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeVWM2iEeiCta8rX3fxAA" name="Body(DoStatement@911d679)" outgoing="_epeVP82iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_epeVWc2iEeiCta8rX3fxAA" target="_epeVZc2iEeiCta8rX3fxAA" source="_epeVWs2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeVWs2iEeiCta8rX3fxAA" name="AcceptStatement@7328275a" outgoing="_epeVWc2iEeiCta8rX3fxAA">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_epeVW82iEeiCta8rX3fxAA" target="_epeVXs2iEeiCta8rX3fxAA" source="_epeVZM2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVXM2iEeiCta8rX3fxAA" target="_epeVXc2iEeiCta8rX3fxAA" source="_epeVX82iEeiCta8rX3fxAA"/>
                    <node xmi:type="uml:ForkNode" xmi:id="_epeVXc2iEeiCta8rX3fxAA" name="Fork(Accept(SignalNewArrival,SignalTermination).result)" incoming="_epeVXM2iEeiCta8rX3fxAA" outgoing="_epeVPs2iEeiCta8rX3fxAA _epeVQM2iEeiCta8rX3fxAA"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_epeVXs2iEeiCta8rX3fxAA" name="Accept(SignalNewArrival,SignalTermination)" incoming="_epeVW82iEeiCta8rX3fxAA">
                      <result xmi:id="_epeVX82iEeiCta8rX3fxAA" name="Accept(SignalNewArrival,SignalTermination).result" outgoing="_epeVXM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVYM2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVYc2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <trigger xmi:id="_epeVYs2iEeiCta8rX3fxAA" event="_epfjjM2iEeiCta8rX3fxAA"/>
                      <trigger xmi:id="_epeVY82iEeiCta8rX3fxAA" event="_epfjjc2iEeiCta8rX3fxAA"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_epeVZM2iEeiCta8rX3fxAA" name="Initial(Accept(SignalNewArrival,SignalTermination))" outgoing="_epeVW82iEeiCta8rX3fxAA"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeVZc2iEeiCta8rX3fxAA" name="ExpressionStatement@1a028f3c" incoming="_epeVWc2iEeiCta8rX3fxAA">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVZs2iEeiCta8rX3fxAA" target="_epeVcs2iEeiCta8rX3fxAA" source="_epeVec2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVZ82iEeiCta8rX3fxAA" target="_epeVjc2iEeiCta8rX3fxAA" source="_epeVi82iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVaM2iEeiCta8rX3fxAA" target="_epeVls2iEeiCta8rX3fxAA" source="_epeVk82iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVac2iEeiCta8rX3fxAA" target="_epeVms2iEeiCta8rX3fxAA" source="_epeVkM2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVas2iEeiCta8rX3fxAA" target="_epeVk82iEeiCta8rX3fxAA" source="_epeVdc2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_epeVa82iEeiCta8rX3fxAA" target="_epeVjM2iEeiCta8rX3fxAA" source="_epeVfc2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVbM2iEeiCta8rX3fxAA" target="_epeVo82iEeiCta8rX3fxAA" source="_epeViM2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVbc2iEeiCta8rX3fxAA" target="_epeVb82iEeiCta8rX3fxAA" source="_epeVo82iEeiCta8rX3fxAA"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_epeVbs2iEeiCta8rX3fxAA" name="Call(+)">
                      <argument xmi:id="_epeVb82iEeiCta8rX3fxAA" name="Call(+).argument(x)" incoming="_epeVbc2iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVcM2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVcc2iEeiCta8rX3fxAA" value="1"/>
                      </argument>
                      <argument xmi:id="_epeVcs2iEeiCta8rX3fxAA" name="Call(+).argument(y)" incoming="_epeVZs2iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVc82iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVdM2iEeiCta8rX3fxAA" value="1"/>
                      </argument>
                      <result xmi:id="_epeVdc2iEeiCta8rX3fxAA" name="Call(+).result(result)" outgoing="_epeVas2iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVds2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVd82iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                    </node>
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epeVeM2iEeiCta8rX3fxAA" name="Value(1)">
                      <result xmi:id="_epeVec2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_epeVZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVes2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVe82iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_epeVfM2iEeiCta8rX3fxAA" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeVfc2iEeiCta8rX3fxAA" name="RightHandSide@7f3fd0f" outgoing="_epeVa82iEeiCta8rX3fxAA">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVfs2iEeiCta8rX3fxAA" target="_epeVi82iEeiCta8rX3fxAA" source="_epeVgc2iEeiCta8rX3fxAA"/>
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVf82iEeiCta8rX3fxAA" target="_epeVhc2iEeiCta8rX3fxAA" source="_epeVi82iEeiCta8rX3fxAA"/>
                      <node xmi:type="uml:ReadSelfAction" xmi:id="_epeVgM2iEeiCta8rX3fxAA" name="ReadSelf">
                        <result xmi:id="_epeVgc2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epeVfs2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVgs2iEeiCta8rX3fxAA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVg82iEeiCta8rX3fxAA" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epeVhM2iEeiCta8rX3fxAA" name="Read(count)" structuralFeature="_epdtZM2iEeiCta8rX3fxAA">
                        <object xmi:id="_epeVhc2iEeiCta8rX3fxAA" name="Read(count).object" incoming="_epeVf82iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVhs2iEeiCta8rX3fxAA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVh82iEeiCta8rX3fxAA" value="1"/>
                        </object>
                        <result xmi:id="_epeViM2iEeiCta8rX3fxAA" name="Read(count).result" outgoing="_epeVbM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVic2iEeiCta8rX3fxAA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVis2iEeiCta8rX3fxAA" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_epeVi82iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epeVfs2iEeiCta8rX3fxAA" outgoing="_epeVf82iEeiCta8rX3fxAA _epeVZ82iEeiCta8rX3fxAA"/>
                    </node>
                    <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_epeVjM2iEeiCta8rX3fxAA" name="Clear(count)" incoming="_epeVa82iEeiCta8rX3fxAA" structuralFeature="_epdtZM2iEeiCta8rX3fxAA">
                      <object xmi:id="_epeVjc2iEeiCta8rX3fxAA" name="Clear(count).object" incoming="_epeVZ82iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVjs2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVj82iEeiCta8rX3fxAA" value="1"/>
                      </object>
                      <result xmi:id="_epeVkM2iEeiCta8rX3fxAA" name="Clear(count).result" outgoing="_epeVac2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVkc2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVks2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_epeVk82iEeiCta8rX3fxAA" name="Fork(LeftHandSide@7f3fd0f)" incoming="_epeVas2iEeiCta8rX3fxAA" outgoing="_epeVaM2iEeiCta8rX3fxAA"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeVlM2iEeiCta8rX3fxAA" name="WriteAll(MyTest::count)">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVlc2iEeiCta8rX3fxAA" target="_epeVoM2iEeiCta8rX3fxAA" source="_epeVls2iEeiCta8rX3fxAA"/>
                      <structuredNodeInput xmi:id="_epeVls2iEeiCta8rX3fxAA" name="WriteAll(MyTest::count).input(MyTest::count)" incoming="_epeVaM2iEeiCta8rX3fxAA" outgoing="_epeVlc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVl82iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVmM2iEeiCta8rX3fxAA" value="1"/>
                      </structuredNodeInput>
                      <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epeVmc2iEeiCta8rX3fxAA" name="Write(count)" structuralFeature="_epdtZM2iEeiCta8rX3fxAA" isReplaceAll="true">
                        <object xmi:id="_epeVms2iEeiCta8rX3fxAA" name="Write(count).object" incoming="_epeVac2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVm82iEeiCta8rX3fxAA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVnM2iEeiCta8rX3fxAA" value="1"/>
                        </object>
                        <result xmi:id="_epeVnc2iEeiCta8rX3fxAA" name="Write(count).result" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVns2iEeiCta8rX3fxAA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVn82iEeiCta8rX3fxAA" value="1"/>
                        </result>
                        <value xmi:id="_epeVoM2iEeiCta8rX3fxAA" name="Write(count).value" incoming="_epeVlc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVoc2iEeiCta8rX3fxAA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVos2iEeiCta8rX3fxAA" value="1"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_epeVo82iEeiCta8rX3fxAA" name="Fork(Read(count).result)" incoming="_epeVbM2iEeiCta8rX3fxAA" outgoing="_epeVbc2iEeiCta8rX3fxAA"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeVpM2iEeiCta8rX3fxAA" name="Passthru(Fork(sig))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVpc2iEeiCta8rX3fxAA" target="_epeVqc2iEeiCta8rX3fxAA" source="_epeVps2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epeVps2iEeiCta8rX3fxAA" name="Passthru(Fork(sig)).input" incoming="_epeVJ82iEeiCta8rX3fxAA" outgoing="_epeVpc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVp82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVqM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_epeVqc2iEeiCta8rX3fxAA" name="Passthru(Fork(sig)).output" incoming="_epeVpc2iEeiCta8rX3fxAA" outgoing="_epeVOc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVqs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVq82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeVrM2iEeiCta8rX3fxAA" name="Passthru(Fork(terminate))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVrc2iEeiCta8rX3fxAA" target="_epeVsc2iEeiCta8rX3fxAA" source="_epeVrs2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epeVrs2iEeiCta8rX3fxAA" name="Passthru(Fork(terminate)).input" incoming="_epeVKM2iEeiCta8rX3fxAA" outgoing="_epeVrc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVr82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVsM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_epeVsc2iEeiCta8rX3fxAA" name="Passthru(Fork(terminate)).output" incoming="_epeVrc2iEeiCta8rX3fxAA" outgoing="_epeVOs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVss2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVs82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeVtM2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVtc2iEeiCta8rX3fxAA" target="_epeVuc2iEeiCta8rX3fxAA" source="_epeVts2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epeVts2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).input" incoming="_epeVQM2iEeiCta8rX3fxAA" outgoing="_epeVtc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVt82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVuM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_epeVuc2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival,SignalTermination).result)).output" incoming="_epeVtc2iEeiCta8rX3fxAA" outgoing="_epeVO82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVus2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVu82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeVvM2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVvc2iEeiCta8rX3fxAA" target="_epeVwc2iEeiCta8rX3fxAA" source="_epeVvs2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epeVvs2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_epeVKc2iEeiCta8rX3fxAA" outgoing="_epeVvc2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVv82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVwM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_epeVwc2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_epeVvc2iEeiCta8rX3fxAA" outgoing="_epeVPM2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVws2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epeVw82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epeVxM2iEeiCta8rX3fxAA" name="Passthru(Fork(s1))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epeVxc2iEeiCta8rX3fxAA" target="_epe5wc2iEeiCta8rX3fxAA" source="_epeVxs2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epeVxs2iEeiCta8rX3fxAA" name="Passthru(Fork(s1)).input" incoming="_epeVKs2iEeiCta8rX3fxAA" outgoing="_epeVxc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epeVx82iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe5wM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_epe5wc2iEeiCta8rX3fxAA" name="Passthru(Fork(s1)).output" incoming="_epeVxc2iEeiCta8rX3fxAA" outgoing="_epeVPc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe5ws2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe5w82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <loopVariable xmi:id="_epe5xM2iEeiCta8rX3fxAA" name="DoStatement@911d679.loopVariable(sig)" outgoing="_epeVIs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe5xc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe5xs2iEeiCta8rX3fxAA" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_epe5x82iEeiCta8rX3fxAA" name="DoStatement@911d679.loopVariable(terminate)" outgoing="_epeVI82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe5yM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe5yc2iEeiCta8rX3fxAA" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_epe5ys2iEeiCta8rX3fxAA" name="DoStatement@911d679.loopVariable(s)" outgoing="_epeVJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe5y82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe5zM2iEeiCta8rX3fxAA" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_epe5zc2iEeiCta8rX3fxAA" name="DoStatement@911d679.loopVariable(arrival3)" outgoing="_epeVJc2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe5zs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe5z82iEeiCta8rX3fxAA" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_epe50M2iEeiCta8rX3fxAA" name="DoStatement@911d679.loopVariable(s1)" outgoing="_epeVJs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe50c2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe50s2iEeiCta8rX3fxAA" value="1"/>
              </loopVariable>
              <loopVariableInput xmi:id="_epe5082iEeiCta8rX3fxAA" name="DoStatement@911d679.loopVariableInput(sig)" incoming="_epeSzM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe51M2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe51c2iEeiCta8rX3fxAA" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_epe51s2iEeiCta8rX3fxAA" name="DoStatement@911d679.loopVariableInput(terminate)" incoming="_epeSzc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe5182iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe52M2iEeiCta8rX3fxAA" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_epe52c2iEeiCta8rX3fxAA" name="DoStatement@911d679.loopVariableInput(s)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe52s2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe5282iEeiCta8rX3fxAA" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_epe53M2iEeiCta8rX3fxAA" name="DoStatement@911d679.loopVariableInput(arrival3)" incoming="_epeSz82iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe53c2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe53s2iEeiCta8rX3fxAA" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_epe5382iEeiCta8rX3fxAA" name="DoStatement@911d679.loopVariableInput(s1)" incoming="_epeS0M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe54M2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe54c2iEeiCta8rX3fxAA" value="1"/>
              </loopVariableInput>
              <result xmi:id="_epe54s2iEeiCta8rX3fxAA" name="DoStatement@911d679.result(sig)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe5482iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe55M2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <result xmi:id="_epe55c2iEeiCta8rX3fxAA" name="DoStatement@911d679.result(terminate)" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe55s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe5582iEeiCta8rX3fxAA" value="1"/>
              </result>
              <result xmi:id="_epe56M2iEeiCta8rX3fxAA" name="DoStatement@911d679.result(s)" outgoing="_epeSzs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe56c2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe56s2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <result xmi:id="_epe5682iEeiCta8rX3fxAA" name="DoStatement@911d679.result(arrival3)" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe57M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe57c2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <result xmi:id="_epe57s2iEeiCta8rX3fxAA" name="DoStatement@911d679.result(s1)" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe5782iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe58M2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epe58c2iEeiCta8rX3fxAA" name="Fork(s)" incoming="_epeSzs2iEeiCta8rX3fxAA" outgoing="_epeS2s2iEeiCta8rX3fxAA _epeS382iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_epe58s2iEeiCta8rX3fxAA" name="IfStatement@3cc0771a" incoming="_epeS4s2iEeiCta8rX3fxAA" outgoing="_epeS482iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_epe5882iEeiCta8rX3fxAA" target="_epe5_82iEeiCta8rX3fxAA" source="_epe5-s2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epe59M2iEeiCta8rX3fxAA" target="_epe6Wc2iEeiCta8rX3fxAA" source="_epe6VM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe59c2iEeiCta8rX3fxAA" name="Value(true)">
                <result xmi:id="_epe59s2iEeiCta8rX3fxAA" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe5982iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe5-M2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_epe5-c2iEeiCta8rX3fxAA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe5-s2iEeiCta8rX3fxAA" name="AcceptStatement@478c8a6d" outgoing="_epe5882iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ControlFlow" xmi:id="_epe5-82iEeiCta8rX3fxAA" target="_epe5_M2iEeiCta8rX3fxAA" source="_epe5_s2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_epe5_M2iEeiCta8rX3fxAA" name="Accept(SignalNewArrival)" incoming="_epe5-82iEeiCta8rX3fxAA">
                  <trigger xmi:id="_epe5_c2iEeiCta8rX3fxAA" event="_epfjjs2iEeiCta8rX3fxAA"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_epe5_s2iEeiCta8rX3fxAA" name="Initial(Accept(SignalNewArrival))" outgoing="_epe5-82iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe5_82iEeiCta8rX3fxAA" name="ExpressionStatement@3468eba8" incoming="_epe5882iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6AM2iEeiCta8rX3fxAA" target="_epe6C82iEeiCta8rX3fxAA" source="_epe6B82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6Ac2iEeiCta8rX3fxAA" target="_epe6FM2iEeiCta8rX3fxAA" source="_epe6Ec2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6As2iEeiCta8rX3fxAA" target="_epe6GM2iEeiCta8rX3fxAA" source="_epe6Ds2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6A82iEeiCta8rX3fxAA" target="_epe6Ec2iEeiCta8rX3fxAA" source="_epe6I82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epe6BM2iEeiCta8rX3fxAA" target="_epe6Bc2iEeiCta8rX3fxAA" source="_epe6Ic2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6Bc2iEeiCta8rX3fxAA" name="Expression(LeftHandSide@4ed7c1ce)" incoming="_epe6BM2iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_epe6Bs2iEeiCta8rX3fxAA" name="ReadSelf">
                    <result xmi:id="_epe6B82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epe6AM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6CM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Cc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_epe6Cs2iEeiCta8rX3fxAA" name="Clear(flag)" structuralFeature="_epeSsM2iEeiCta8rX3fxAA">
                  <object xmi:id="_epe6C82iEeiCta8rX3fxAA" name="Clear(flag).object" incoming="_epe6AM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6DM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Dc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epe6Ds2iEeiCta8rX3fxAA" name="Clear(flag).result" outgoing="_epe6As2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6D82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6EM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epe6Ec2iEeiCta8rX3fxAA" name="Fork(LeftHandSide@4ed7c1ce)" incoming="_epe6A82iEeiCta8rX3fxAA" outgoing="_epe6Ac2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6Es2iEeiCta8rX3fxAA" name="WriteAll(MyTest::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6E82iEeiCta8rX3fxAA" target="_epe6Hs2iEeiCta8rX3fxAA" source="_epe6FM2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epe6FM2iEeiCta8rX3fxAA" name="WriteAll(MyTest::flag).input(MyTest::flag)" incoming="_epe6Ac2iEeiCta8rX3fxAA" outgoing="_epe6E82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Fc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Fs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epe6F82iEeiCta8rX3fxAA" name="Write(flag)" structuralFeature="_epeSsM2iEeiCta8rX3fxAA" isReplaceAll="true">
                    <object xmi:id="_epe6GM2iEeiCta8rX3fxAA" name="Write(flag).object" incoming="_epe6As2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Gc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Gs2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_epe6G82iEeiCta8rX3fxAA" name="Write(flag).result" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6HM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Hc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_epe6Hs2iEeiCta8rX3fxAA" name="Write(flag).value" incoming="_epe6E82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6H82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6IM2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6Ic2iEeiCta8rX3fxAA" name="RightHandSide@6ff23d14" outgoing="_epe6BM2iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe6Is2iEeiCta8rX3fxAA" name="Value(true)">
                    <result xmi:id="_epe6I82iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_epe6A82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6JM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Jc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_epe6Js2iEeiCta8rX3fxAA" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6J82iEeiCta8rX3fxAA" name="Passthru(Fork(sig))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6KM2iEeiCta8rX3fxAA" target="_epe6LM2iEeiCta8rX3fxAA" source="_epe6Kc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epe6Kc2iEeiCta8rX3fxAA" name="Passthru(Fork(sig)).input" incoming="_epeS2M2iEeiCta8rX3fxAA" outgoing="_epe6KM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Ks2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6K82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epe6LM2iEeiCta8rX3fxAA" name="Passthru(Fork(sig)).output" incoming="_epe6KM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Lc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Ls2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6L82iEeiCta8rX3fxAA" name="Passthru(Fork(terminate))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6MM2iEeiCta8rX3fxAA" target="_epe6NM2iEeiCta8rX3fxAA" source="_epe6Mc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epe6Mc2iEeiCta8rX3fxAA" name="Passthru(Fork(terminate)).input" incoming="_epeS2c2iEeiCta8rX3fxAA" outgoing="_epe6MM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Ms2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6M82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epe6NM2iEeiCta8rX3fxAA" name="Passthru(Fork(terminate)).output" incoming="_epe6MM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Nc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Ns2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6N82iEeiCta8rX3fxAA" name="Passthru(Fork(s))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6OM2iEeiCta8rX3fxAA" target="_epe6PM2iEeiCta8rX3fxAA" source="_epe6Oc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epe6Oc2iEeiCta8rX3fxAA" name="Passthru(Fork(s)).input" incoming="_epeS2s2iEeiCta8rX3fxAA" outgoing="_epe6OM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Os2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6O82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epe6PM2iEeiCta8rX3fxAA" name="Passthru(Fork(s)).output" incoming="_epe6OM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Pc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Ps2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6P82iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6QM2iEeiCta8rX3fxAA" target="_epe6RM2iEeiCta8rX3fxAA" source="_epe6Qc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epe6Qc2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_epeS282iEeiCta8rX3fxAA" outgoing="_epe6QM2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Qs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Q82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epe6RM2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_epe6QM2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Rc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Rs2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6R82iEeiCta8rX3fxAA" name="Passthru(Fork(s1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6SM2iEeiCta8rX3fxAA" target="_epe6TM2iEeiCta8rX3fxAA" source="_epe6Sc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epe6Sc2iEeiCta8rX3fxAA" name="Passthru(Fork(s1)).input" incoming="_epeS3M2iEeiCta8rX3fxAA" outgoing="_epe6SM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Ss2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6S82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epe6TM2iEeiCta8rX3fxAA" name="Passthru(Fork(s1)).output" incoming="_epe6SM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Tc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Ts2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe6T82iEeiCta8rX3fxAA" name="Value(true)">
                <result xmi:id="_epe6UM2iEeiCta8rX3fxAA" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Uc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Us2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_epe6U82iEeiCta8rX3fxAA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6VM2iEeiCta8rX3fxAA" name="AcceptStatement@5939329d" outgoing="_epe59M2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ControlFlow" xmi:id="_epe6Vc2iEeiCta8rX3fxAA" target="_epe6Vs2iEeiCta8rX3fxAA" source="_epe6WM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:AcceptEventAction" xmi:id="_epe6Vs2iEeiCta8rX3fxAA" name="Accept(SignalTermination)" incoming="_epe6Vc2iEeiCta8rX3fxAA">
                  <trigger xmi:id="_epe6V82iEeiCta8rX3fxAA" event="_epfjj82iEeiCta8rX3fxAA"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_epe6WM2iEeiCta8rX3fxAA" name="Initial(Accept(SignalTermination))" outgoing="_epe6Vc2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6Wc2iEeiCta8rX3fxAA" name="ExpressionStatement@35752757" incoming="_epe59M2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6Ws2iEeiCta8rX3fxAA" target="_epe6Zc2iEeiCta8rX3fxAA" source="_epe6Yc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6W82iEeiCta8rX3fxAA" target="_epe6bs2iEeiCta8rX3fxAA" source="_epe6a82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6XM2iEeiCta8rX3fxAA" target="_epe6cs2iEeiCta8rX3fxAA" source="_epe6aM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6Xc2iEeiCta8rX3fxAA" target="_epe6a82iEeiCta8rX3fxAA" source="_epe6fc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epe6Xs2iEeiCta8rX3fxAA" target="_epe6X82iEeiCta8rX3fxAA" source="_epe6e82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6X82iEeiCta8rX3fxAA" name="Expression(LeftHandSide@8794844)" incoming="_epe6Xs2iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_epe6YM2iEeiCta8rX3fxAA" name="ReadSelf">
                    <result xmi:id="_epe6Yc2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epe6Ws2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Ys2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Y82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_epe6ZM2iEeiCta8rX3fxAA" name="Clear(flag)" structuralFeature="_epeSsM2iEeiCta8rX3fxAA">
                  <object xmi:id="_epe6Zc2iEeiCta8rX3fxAA" name="Clear(flag).object" incoming="_epe6Ws2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6Zs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6Z82iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epe6aM2iEeiCta8rX3fxAA" name="Clear(flag).result" outgoing="_epe6XM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6ac2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6as2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epe6a82iEeiCta8rX3fxAA" name="Fork(LeftHandSide@8794844)" incoming="_epe6Xc2iEeiCta8rX3fxAA" outgoing="_epe6W82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6bM2iEeiCta8rX3fxAA" name="WriteAll(MyTest::flag)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6bc2iEeiCta8rX3fxAA" target="_epe6eM2iEeiCta8rX3fxAA" source="_epe6bs2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epe6bs2iEeiCta8rX3fxAA" name="WriteAll(MyTest::flag).input(MyTest::flag)" incoming="_epe6W82iEeiCta8rX3fxAA" outgoing="_epe6bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6b82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6cM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epe6cc2iEeiCta8rX3fxAA" name="Write(flag)" structuralFeature="_epeSsM2iEeiCta8rX3fxAA" isReplaceAll="true">
                    <object xmi:id="_epe6cs2iEeiCta8rX3fxAA" name="Write(flag).object" incoming="_epe6XM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6c82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6dM2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_epe6dc2iEeiCta8rX3fxAA" name="Write(flag).result" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6ds2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6d82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_epe6eM2iEeiCta8rX3fxAA" name="Write(flag).value" incoming="_epe6bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6ec2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6es2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6e82iEeiCta8rX3fxAA" name="RightHandSide@6b17d139" outgoing="_epe6Xs2iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe6fM2iEeiCta8rX3fxAA" name="Value(false)">
                    <result xmi:id="_epe6fc2iEeiCta8rX3fxAA" name="Value(false).result" outgoing="_epe6Xc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6fs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6f82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_epe6gM2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6gc2iEeiCta8rX3fxAA" name="Passthru(Fork(sig))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6gs2iEeiCta8rX3fxAA" target="_epe6hs2iEeiCta8rX3fxAA" source="_epe6g82iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epe6g82iEeiCta8rX3fxAA" name="Passthru(Fork(sig)).input" incoming="_epeS3c2iEeiCta8rX3fxAA" outgoing="_epe6gs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6hM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6hc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epe6hs2iEeiCta8rX3fxAA" name="Passthru(Fork(sig)).output" incoming="_epe6gs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6h82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6iM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6ic2iEeiCta8rX3fxAA" name="Passthru(Fork(terminate))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6is2iEeiCta8rX3fxAA" target="_epe6js2iEeiCta8rX3fxAA" source="_epe6i82iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epe6i82iEeiCta8rX3fxAA" name="Passthru(Fork(terminate)).input" incoming="_epeS3s2iEeiCta8rX3fxAA" outgoing="_epe6is2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6jM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6jc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epe6js2iEeiCta8rX3fxAA" name="Passthru(Fork(terminate)).output" incoming="_epe6is2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6j82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6kM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6kc2iEeiCta8rX3fxAA" name="Passthru(Fork(s))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6ks2iEeiCta8rX3fxAA" target="_epe6ls2iEeiCta8rX3fxAA" source="_epe6k82iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epe6k82iEeiCta8rX3fxAA" name="Passthru(Fork(s)).input" incoming="_epeS382iEeiCta8rX3fxAA" outgoing="_epe6ks2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6lM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6lc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epe6ls2iEeiCta8rX3fxAA" name="Passthru(Fork(s)).output" incoming="_epe6ks2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6l82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6mM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6mc2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival).result))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6ms2iEeiCta8rX3fxAA" target="_epe6ns2iEeiCta8rX3fxAA" source="_epe6m82iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epe6m82iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival).result)).input" incoming="_epeS4M2iEeiCta8rX3fxAA" outgoing="_epe6ms2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6nM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6nc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epe6ns2iEeiCta8rX3fxAA" name="Passthru(Fork(Accept(SignalNewArrival).result)).output" incoming="_epe6ms2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6n82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6oM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6oc2iEeiCta8rX3fxAA" name="Passthru(Fork(s1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6os2iEeiCta8rX3fxAA" target="_epe6ps2iEeiCta8rX3fxAA" source="_epe6o82iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epe6o82iEeiCta8rX3fxAA" name="Passthru(Fork(s1)).input" incoming="_epeS4c2iEeiCta8rX3fxAA" outgoing="_epe6os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6pM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6pc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epe6ps2iEeiCta8rX3fxAA" name="Passthru(Fork(s1)).output" incoming="_epe6os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6p82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6qM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_epe6qc2iEeiCta8rX3fxAA" body="_epe5-s2iEeiCta8rX3fxAA _epe5_82iEeiCta8rX3fxAA _epe6J82iEeiCta8rX3fxAA _epe6L82iEeiCta8rX3fxAA _epe6N82iEeiCta8rX3fxAA _epe6P82iEeiCta8rX3fxAA _epe6R82iEeiCta8rX3fxAA" bodyOutput="_epe6LM2iEeiCta8rX3fxAA _epe6NM2iEeiCta8rX3fxAA _epe6PM2iEeiCta8rX3fxAA _epe6RM2iEeiCta8rX3fxAA _epe6TM2iEeiCta8rX3fxAA" decider="_epe59s2iEeiCta8rX3fxAA" successorClause="_epe6qs2iEeiCta8rX3fxAA" test="_epe59c2iEeiCta8rX3fxAA"/>
              <clause xmi:id="_epe6qs2iEeiCta8rX3fxAA" body="_epe6VM2iEeiCta8rX3fxAA _epe6Wc2iEeiCta8rX3fxAA _epe6gc2iEeiCta8rX3fxAA _epe6ic2iEeiCta8rX3fxAA _epe6kc2iEeiCta8rX3fxAA _epe6mc2iEeiCta8rX3fxAA _epe6oc2iEeiCta8rX3fxAA" bodyOutput="_epe6hs2iEeiCta8rX3fxAA _epe6js2iEeiCta8rX3fxAA _epe6ls2iEeiCta8rX3fxAA _epe6ns2iEeiCta8rX3fxAA _epe6ps2iEeiCta8rX3fxAA" decider="_epe6UM2iEeiCta8rX3fxAA" predecessorClause="_epe6qc2iEeiCta8rX3fxAA" test="_epe6T82iEeiCta8rX3fxAA"/>
              <result xmi:id="_epe6q82iEeiCta8rX3fxAA" name="IfStatement@3cc0771a.result(sig)" outgoing="_epeS082iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6rM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6rc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <result xmi:id="_epe6rs2iEeiCta8rX3fxAA" name="IfStatement@3cc0771a.result(terminate)" outgoing="_epeS1M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6r82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6sM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <result xmi:id="_epe6sc2iEeiCta8rX3fxAA" name="IfStatement@3cc0771a.result(s)" outgoing="_epeS1c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6ss2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6s82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <result xmi:id="_epe6tM2iEeiCta8rX3fxAA" name="IfStatement@3cc0771a.result(arrival3)" outgoing="_epeS1s2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6tc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6ts2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <result xmi:id="_epe6t82iEeiCta8rX3fxAA" name="IfStatement@3cc0771a.result(s1)" outgoing="_epeS182iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6uM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6uc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epe6us2iEeiCta8rX3fxAA" name="Fork(sig)" incoming="_epeS082iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_epe6u82iEeiCta8rX3fxAA" name="Fork(terminate)" incoming="_epeS1M2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_epe6vM2iEeiCta8rX3fxAA" name="Fork(s)" incoming="_epeS1c2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_epe6vc2iEeiCta8rX3fxAA" name="Fork(arrival3)" incoming="_epeS1s2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_epe6vs2iEeiCta8rX3fxAA" name="Fork(s1)" incoming="_epeS182iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6v82iEeiCta8rX3fxAA" name="AcceptStatement@6a601152" incoming="_epeS482iEeiCta8rX3fxAA" outgoing="_epeS5c2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_epe6wM2iEeiCta8rX3fxAA" target="_epe6w82iEeiCta8rX3fxAA" source="_epe6yM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6wc2iEeiCta8rX3fxAA" target="_epe6ws2iEeiCta8rX3fxAA" source="_epe6xM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_epe6ws2iEeiCta8rX3fxAA" name="Fork(Accept(SignalTermination).result)" incoming="_epe6wc2iEeiCta8rX3fxAA" outgoing="_epeS5M2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_epe6w82iEeiCta8rX3fxAA" name="Accept(SignalTermination)" incoming="_epe6wM2iEeiCta8rX3fxAA">
                <result xmi:id="_epe6xM2iEeiCta8rX3fxAA" name="Accept(SignalTermination).result" outgoing="_epe6wc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6xc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6xs2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <trigger xmi:id="_epe6x82iEeiCta8rX3fxAA" event="_epfjkM2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_epe6yM2iEeiCta8rX3fxAA" name="Initial(Accept(SignalTermination))" outgoing="_epe6wM2iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6yc2iEeiCta8rX3fxAA" name="ExpressionStatement@2c2b85e4" incoming="_epeS5c2iEeiCta8rX3fxAA" outgoing="_epeS5s2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6ys2iEeiCta8rX3fxAA" target="_epe61M2iEeiCta8rX3fxAA" source="_epe60M2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6y82iEeiCta8rX3fxAA" target="_epe63c2iEeiCta8rX3fxAA" source="_epe62s2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe6zM2iEeiCta8rX3fxAA" target="_epe64c2iEeiCta8rX3fxAA" source="_epe6182iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epe6zc2iEeiCta8rX3fxAA" target="_epe6zs2iEeiCta8rX3fxAA" source="_epe66s2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6zs2iEeiCta8rX3fxAA" name="Expression(LeftHandSide@6e976ff3)" incoming="_epe6zc2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_epe6z82iEeiCta8rX3fxAA" name="ReadSelf">
                  <result xmi:id="_epe60M2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epe6ys2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe60c2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe60s2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_epe6082iEeiCta8rX3fxAA" name="Clear(sig1)" structuralFeature="_epdtWM2iEeiCta8rX3fxAA">
                <object xmi:id="_epe61M2iEeiCta8rX3fxAA" name="Clear(sig1).object" incoming="_epe6ys2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe61c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe61s2iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_epe6182iEeiCta8rX3fxAA" name="Clear(sig1).result" outgoing="_epe6zM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe62M2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe62c2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_epe62s2iEeiCta8rX3fxAA" name="Fork(LeftHandSide@6e976ff3)" incoming="_epeS5M2iEeiCta8rX3fxAA" outgoing="_epe6y82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6282iEeiCta8rX3fxAA" name="WriteAll(MyTest::sig1)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe63M2iEeiCta8rX3fxAA" target="_epe6582iEeiCta8rX3fxAA" source="_epe63c2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epe63c2iEeiCta8rX3fxAA" name="WriteAll(MyTest::sig1).input(MyTest::sig1)" incoming="_epe6y82iEeiCta8rX3fxAA" outgoing="_epe63M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe63s2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6382iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epe64M2iEeiCta8rX3fxAA" name="Write(sig1)" structuralFeature="_epdtWM2iEeiCta8rX3fxAA" isReplaceAll="true">
                  <object xmi:id="_epe64c2iEeiCta8rX3fxAA" name="Write(sig1).object" incoming="_epe6zM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe64s2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6482iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epe65M2iEeiCta8rX3fxAA" name="Write(sig1).result" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe65c2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe65s2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:id="_epe6582iEeiCta8rX3fxAA" name="Write(sig1).value" incoming="_epe63M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe66M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe66c2iEeiCta8rX3fxAA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe66s2iEeiCta8rX3fxAA" name="RightHandSide@6579e6f1" outgoing="_epe6zc2iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe6682iEeiCta8rX3fxAA" name="ExpressionStatement@5cf83d35" incoming="_epeS5s2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe67M2iEeiCta8rX3fxAA" target="_epe68M2iEeiCta8rX3fxAA" source="_epe6-82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe67c2iEeiCta8rX3fxAA" target="_epe6_s2iEeiCta8rX3fxAA" source="_epe69M2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe67s2iEeiCta8rX3fxAA" target="_epe6-M2iEeiCta8rX3fxAA" source="_epe6_s2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_epe6782iEeiCta8rX3fxAA" name="SendSignal(Continue)" signal="_epfjgc2iEeiCta8rX3fxAA">
                <target xmi:id="_epe68M2iEeiCta8rX3fxAA" name="SendSignal(Continue).target" incoming="_epe67M2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe68c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe68s2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_epe6882iEeiCta8rX3fxAA" name="ReadSelf">
                <result xmi:id="_epe69M2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epe67c2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe69c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe69s2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epe6982iEeiCta8rX3fxAA" name="Read(tester)" structuralFeature="_epeSs82iEeiCta8rX3fxAA">
                <object xmi:id="_epe6-M2iEeiCta8rX3fxAA" name="Read(tester).object" incoming="_epe67s2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6-c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6-s2iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_epe6-82iEeiCta8rX3fxAA" name="Read(tester).result" outgoing="_epe67M2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe6_M2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe6_c2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_epe6_s2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epe67c2iEeiCta8rX3fxAA" outgoing="_epe67s2iEeiCta8rX3fxAA"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epe6_82iEeiCta8rX3fxAA" name="MyTest$method$1" visibility="private" specification="_epe7yM2iEeiCta8rX3fxAA" node="_epe7Cc2iEeiCta8rX3fxAA _epe7Cs2iEeiCta8rX3fxAA _epe7C82iEeiCta8rX3fxAA _epe7DM2iEeiCta8rX3fxAA" group="_epe7DM2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_epe7AM2iEeiCta8rX3fxAA" name="tester" type="_epe71M2iEeiCta8rX3fxAA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7Ac2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7As2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_epe7A82iEeiCta8rX3fxAA" name="" type="_epdtUM2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7BM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Bc2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7Bs2iEeiCta8rX3fxAA" target="_epe7Cs2iEeiCta8rX3fxAA" source="_epe7Cc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7B82iEeiCta8rX3fxAA" target="_epe7Ks2iEeiCta8rX3fxAA" source="_epe7Cs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7CM2iEeiCta8rX3fxAA" target="_epe7C82iEeiCta8rX3fxAA" source="_epe7P82iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_epe7DM2iEeiCta8rX3fxAA" name="Body(MyTest$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7Dc2iEeiCta8rX3fxAA" target="_epe7P82iEeiCta8rX3fxAA" source="_epe7PM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7Ds2iEeiCta8rX3fxAA" target="_epe7Qc2iEeiCta8rX3fxAA" source="_epe7P82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe7D82iEeiCta8rX3fxAA" target="_epe7GM2iEeiCta8rX3fxAA" source="_epe7QM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7EM2iEeiCta8rX3fxAA" target="_epe7Rc2iEeiCta8rX3fxAA" source="_epe7P82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7Ec2iEeiCta8rX3fxAA" target="_epe7TM2iEeiCta8rX3fxAA" source="_epe7SM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7Es2iEeiCta8rX3fxAA" target="_epe7WM2iEeiCta8rX3fxAA" source="_epe7T82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7E82iEeiCta8rX3fxAA" target="_epe7Xs2iEeiCta8rX3fxAA" source="_epe7U82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe7FM2iEeiCta8rX3fxAA" target="_epe7Ys2iEeiCta8rX3fxAA" source="_epe7Yc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7Fc2iEeiCta8rX3fxAA" target="_epe7Ys2iEeiCta8rX3fxAA" source="_epe7W82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe7Fs2iEeiCta8rX3fxAA" target="_epe7QM2iEeiCta8rX3fxAA" source="_epe7Ys2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epe7F82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe7GM2iEeiCta8rX3fxAA" name="Body" incoming="_epe7D82iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe7Gc2iEeiCta8rX3fxAA" name="ExpressionStatement@4c113316">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7Gs2iEeiCta8rX3fxAA" target="_epe7JM2iEeiCta8rX3fxAA" source="_epe7IM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7G82iEeiCta8rX3fxAA" target="_epe7Lc2iEeiCta8rX3fxAA" source="_epe7Ks2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7HM2iEeiCta8rX3fxAA" target="_epe7Mc2iEeiCta8rX3fxAA" source="_epe7J82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epe7Hc2iEeiCta8rX3fxAA" target="_epe7Hs2iEeiCta8rX3fxAA" source="_epe7Os2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe7Hs2iEeiCta8rX3fxAA" name="Expression(LeftHandSide@8543af8)" incoming="_epe7Hc2iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_epe7H82iEeiCta8rX3fxAA" name="ReadSelf">
                    <result xmi:id="_epe7IM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epe7Gs2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7Ic2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Is2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_epe7I82iEeiCta8rX3fxAA" name="Clear(tester)" structuralFeature="_epeSs82iEeiCta8rX3fxAA">
                  <object xmi:id="_epe7JM2iEeiCta8rX3fxAA" name="Clear(tester).object" incoming="_epe7Gs2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7Jc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Js2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epe7J82iEeiCta8rX3fxAA" name="Clear(tester).result" outgoing="_epe7HM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7KM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Kc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epe7Ks2iEeiCta8rX3fxAA" name="Fork(LeftHandSide@8543af8)" incoming="_epe7B82iEeiCta8rX3fxAA" outgoing="_epe7G82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe7K82iEeiCta8rX3fxAA" name="WriteAll(MyTest::tester)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7LM2iEeiCta8rX3fxAA" target="_epe7N82iEeiCta8rX3fxAA" source="_epe7Lc2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epe7Lc2iEeiCta8rX3fxAA" name="WriteAll(MyTest::tester).input(MyTest::tester)" incoming="_epe7G82iEeiCta8rX3fxAA" outgoing="_epe7LM2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7Ls2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7L82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epe7MM2iEeiCta8rX3fxAA" name="Write(tester)" structuralFeature="_epeSs82iEeiCta8rX3fxAA" isReplaceAll="true">
                    <object xmi:id="_epe7Mc2iEeiCta8rX3fxAA" name="Write(tester).object" incoming="_epe7HM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7Ms2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7M82iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_epe7NM2iEeiCta8rX3fxAA" name="Write(tester).result" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7Nc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Ns2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_epe7N82iEeiCta8rX3fxAA" name="Write(tester).value" incoming="_epe7LM2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7OM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Oc2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe7Os2iEeiCta8rX3fxAA" name="RightHandSide@2f03394c" outgoing="_epe7Hc2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_epe7O82iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_epe7PM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epe7Dc2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7Pc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Ps2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epe7P82iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epe7Dc2iEeiCta8rX3fxAA" outgoing="_epe7CM2iEeiCta8rX3fxAA _epe7Ds2iEeiCta8rX3fxAA _epe7EM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_epe7QM2iEeiCta8rX3fxAA" name="Call(MyTest$initialization$1)" incoming="_epe7Fs2iEeiCta8rX3fxAA" outgoing="_epe7D82iEeiCta8rX3fxAA" operation="_epe7x82iEeiCta8rX3fxAA">
              <target xmi:id="_epe7Qc2iEeiCta8rX3fxAA" name="Call(MyTest$initialization$1).target" incoming="_epe7Ds2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7Qs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Q82iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epe7RM2iEeiCta8rX3fxAA" name="Read(MyTest$initializationFlag$1)" structuralFeature="_epdtUs2iEeiCta8rX3fxAA">
              <object xmi:id="_epe7Rc2iEeiCta8rX3fxAA" name="Read(MyTest$initializationFlag$1).object" incoming="_epe7EM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7Rs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7R82iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_epe7SM2iEeiCta8rX3fxAA" name="Read(MyTest$initializationFlag$1).result" outgoing="_epe7Ec2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7Sc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Ss2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epe7S82iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_epe7TM2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_epe7Ec2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7Tc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Ts2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_epe7T82iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_epe7Es2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7UM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Uc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe7Us2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_epe7U82iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_epe7E82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7VM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Vc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_epe7Vs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_epe7V82iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_epe7WM2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_epe7Es2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7Wc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Ws2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_epe7W82iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_epe7Fc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7XM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7Xc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_epe7Xs2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_epe7E82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7X82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7YM2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_epe7Yc2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_epe7FM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_epe7Ys2iEeiCta8rX3fxAA" name="Decision(Test(MyTest$initializationFlag$1))" incoming="_epe7FM2iEeiCta8rX3fxAA _epe7Fc2iEeiCta8rX3fxAA" outgoing="_epe7Fs2iEeiCta8rX3fxAA" decisionInputFlow="_epe7Fc2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_epe7Cc2iEeiCta8rX3fxAA" name="Input(tester)" outgoing="_epe7Bs2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" parameter="_epe7AM2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_epe7Cs2iEeiCta8rX3fxAA" name="Fork(tester)" incoming="_epe7Bs2iEeiCta8rX3fxAA" outgoing="_epe7B82iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_epe7C82iEeiCta8rX3fxAA" name="Return" incoming="_epe7CM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" parameter="_epe7A82iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epe7Y82iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_epe7z82iEeiCta8rX3fxAA" node="_epe7ZM2iEeiCta8rX3fxAA" group="_epe7ZM2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_epe7ZM2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epe7Zc2iEeiCta8rX3fxAA" name="MyTest$initialization$1" visibility="private" specification="_epe7x82iEeiCta8rX3fxAA" node="_epe7Zs2iEeiCta8rX3fxAA" group="_epe7Zs2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_epe7Zs2iEeiCta8rX3fxAA" name="Body(MyTest$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7Z82iEeiCta8rX3fxAA" target="_epe7d82iEeiCta8rX3fxAA" source="_epe7dM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7aM2iEeiCta8rX3fxAA" target="_epe7fM2iEeiCta8rX3fxAA" source="_epe7d82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7ac2iEeiCta8rX3fxAA" target="_epe7h82iEeiCta8rX3fxAA" source="_epe7d82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7as2iEeiCta8rX3fxAA" target="_epe7ms2iEeiCta8rX3fxAA" source="_epe7d82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7a82iEeiCta8rX3fxAA" target="_epe7qc2iEeiCta8rX3fxAA" source="_epe7d82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7bM2iEeiCta8rX3fxAA" target="_epe7sM2iEeiCta8rX3fxAA" source="_epe7rM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7bc2iEeiCta8rX3fxAA" target="_epe7vM2iEeiCta8rX3fxAA" source="_epe7s82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7bs2iEeiCta8rX3fxAA" target="_epe7ws2iEeiCta8rX3fxAA" source="_epe7t82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe7b82iEeiCta8rX3fxAA" target="_epe7xs2iEeiCta8rX3fxAA" source="_epe7xc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7cM2iEeiCta8rX3fxAA" target="_epe7xs2iEeiCta8rX3fxAA" source="_epe7v82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe7cc2iEeiCta8rX3fxAA" target="_epe7eM2iEeiCta8rX3fxAA" source="_epe7xs2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epe7cs2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_epe7c82iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_epe7dM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epe7Z82iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7dc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7ds2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epe7d82iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epe7Z82iEeiCta8rX3fxAA" outgoing="_epe7aM2iEeiCta8rX3fxAA _epe7ac2iEeiCta8rX3fxAA _epe7as2iEeiCta8rX3fxAA _epe7a82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe7eM2iEeiCta8rX3fxAA" name="Initialization" incoming="_epe7cc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_epe7ec2iEeiCta8rX3fxAA" target="_epe7f82iEeiCta8rX3fxAA" source="_epe7e82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epe7es2iEeiCta8rX3fxAA" target="_epe7kM2iEeiCta8rX3fxAA" source="_epe7f82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_epe7e82iEeiCta8rX3fxAA" name="Call(Super$initialization$1)" outgoing="_epe7ec2iEeiCta8rX3fxAA" operation="_epdtRM2iEeiCta8rX3fxAA">
                <target xmi:id="_epe7fM2iEeiCta8rX3fxAA" name="Call(Super$initialization$1).target" incoming="_epe7aM2iEeiCta8rX3fxAA" type="_epdsus2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7fc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7fs2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe7f82iEeiCta8rX3fxAA" name="Initialize(count)" incoming="_epe7ec2iEeiCta8rX3fxAA" outgoing="_epe7es2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7gM2iEeiCta8rX3fxAA" target="_epe7jc2iEeiCta8rX3fxAA" source="_epe7gs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe7gc2iEeiCta8rX3fxAA" name="Value(0)">
                  <result xmi:id="_epe7gs2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_epe7gM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7g82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7hM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_epe7hc2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epe7hs2iEeiCta8rX3fxAA" name="Write(count)" structuralFeature="_epdtZM2iEeiCta8rX3fxAA" isReplaceAll="true">
                  <object xmi:id="_epe7h82iEeiCta8rX3fxAA" name="Write(count).object" incoming="_epe7ac2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7iM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7ic2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epe7is2iEeiCta8rX3fxAA" name="Write(count).result" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7i82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7jM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:id="_epe7jc2iEeiCta8rX3fxAA" name="Write(count).value" incoming="_epe7gM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7js2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7j82iEeiCta8rX3fxAA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe7kM2iEeiCta8rX3fxAA" name="Set(initializationFlag)" incoming="_epe7es2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7kc2iEeiCta8rX3fxAA" target="_epe7p82iEeiCta8rX3fxAA" source="_epe7k82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe7ks2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_epe7k82iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_epe7kc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7lM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7lc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_epe7ls2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_epe7l82iEeiCta8rX3fxAA" name="Iterate(Write(MyTest$initializationFlag$1))" inputElement="_epe7p82iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7mM2iEeiCta8rX3fxAA" target="_epe7pM2iEeiCta8rX3fxAA" source="_epe7p82iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7mc2iEeiCta8rX3fxAA" target="_epe7ns2iEeiCta8rX3fxAA" source="_epe7ms2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epe7ms2iEeiCta8rX3fxAA" name="Iterate(Write(MyTest$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_epe7as2iEeiCta8rX3fxAA" outgoing="_epe7mc2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7m82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7nM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epe7nc2iEeiCta8rX3fxAA" name="Write(MyTest$initializationFlag$1)" structuralFeature="_epdtUs2iEeiCta8rX3fxAA">
                    <object xmi:id="_epe7ns2iEeiCta8rX3fxAA" name="Write(MyTest$initializationFlag$1).object" incoming="_epe7mc2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7n82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7oM2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_epe7oc2iEeiCta8rX3fxAA" name="Write(MyTest$initializationFlag$1).result" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7os2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7o82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_epe7pM2iEeiCta8rX3fxAA" name="Write(MyTest$initializationFlag$1).value" incoming="_epe7mM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7pc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7ps2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_epe7p82iEeiCta8rX3fxAA" name="Iterate(Write(MyTest$initializationFlag$1)).inputElement" incoming="_epe7kc2iEeiCta8rX3fxAA" outgoing="_epe7mM2iEeiCta8rX3fxAA" regionAsInput="_epe7l82iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epe7qM2iEeiCta8rX3fxAA" name="Read(MyTest$initializationFlag$1)" structuralFeature="_epdtUs2iEeiCta8rX3fxAA">
              <object xmi:id="_epe7qc2iEeiCta8rX3fxAA" name="Read(MyTest$initializationFlag$1).object" incoming="_epe7a82iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7qs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7q82iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_epe7rM2iEeiCta8rX3fxAA" name="Read(MyTest$initializationFlag$1).result" outgoing="_epe7bM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7rc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7rs2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epe7r82iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_epe7sM2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_epe7bM2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7sc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7ss2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_epe7s82iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_epe7bc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7tM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7tc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe7ts2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_epe7t82iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_epe7bs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7uM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7uc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_epe7us2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_epe7u82iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_epe7vM2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_epe7bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7vc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7vs2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_epe7v82iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_epe7cM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7wM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7wc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_epe7ws2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_epe7bs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7w82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7xM2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_epe7xc2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_epe7b82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_epe7xs2iEeiCta8rX3fxAA" name="Decision(Test(MyTest$initializationFlag$1))" incoming="_epe7b82iEeiCta8rX3fxAA _epe7cM2iEeiCta8rX3fxAA" outgoing="_epe7cc2iEeiCta8rX3fxAA" decisionInputFlow="_epe7cM2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_epe7x82iEeiCta8rX3fxAA" name="MyTest$initialization$1" visibility="protected" method="_epe7Zc2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_epe7yM2iEeiCta8rX3fxAA" name="MyTest" visibility="public" method="_epe6_82iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_epe7yc2iEeiCta8rX3fxAA" name="tester" visibility="package" type="_epe71M2iEeiCta8rX3fxAA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7ys2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7y82iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_epe7zM2iEeiCta8rX3fxAA" name="" visibility="package" type="_epdtUM2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7zc2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7zs2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_epe7z82iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_epe7Y82iEeiCta8rX3fxAA" redefinedOperation="_epdtSc2iEeiCta8rX3fxAA"/>
        <ownedReception xmi:id="_epe70M2iEeiCta8rX3fxAA" name="SignalNewArrival" visibility="public" signal="_epdtSs2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_epe70c2iEeiCta8rX3fxAA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe70s2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7082iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedReception>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_epe71M2iEeiCta8rX3fxAA" name="TestRunner" visibility="public" classifierBehavior="_epe7282iEeiCta8rX3fxAA" isActive="true">
        <ownedAttribute xmi:id="_epe71c2iEeiCta8rX3fxAA" name="TestRunner$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe71s2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7182iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_epe72M2iEeiCta8rX3fxAA" name="outer" visibility="private" type="_epfjk82iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe72c2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe72s2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epe7282iEeiCta8rX3fxAA" name="TestRunner$classifierBehavior$1" visibility="private" isActive="true" node="_epe73M2iEeiCta8rX3fxAA" group="_epe73M2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_epe73M2iEeiCta8rX3fxAA" name="Body(TestRunner$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe73c2iEeiCta8rX3fxAA" target="_epe7982iEeiCta8rX3fxAA" source="_epe78s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe73s2iEeiCta8rX3fxAA" target="_epe8Bs2iEeiCta8rX3fxAA" source="_epe7982iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7382iEeiCta8rX3fxAA" target="_epe8Jc2iEeiCta8rX3fxAA" source="_epe8Bc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe74M2iEeiCta8rX3fxAA" target="_epe8C82iEeiCta8rX3fxAA" source="_epe8Bs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe74c2iEeiCta8rX3fxAA" target="_epe8Ss2iEeiCta8rX3fxAA" source="_epe8Bc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe74s2iEeiCta8rX3fxAA" target="_epe8Lc2iEeiCta8rX3fxAA" source="_epe8C82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7482iEeiCta8rX3fxAA" target="_epe8ac2iEeiCta8rX3fxAA" source="_epe8Bc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe75M2iEeiCta8rX3fxAA" target="_epe8UM2iEeiCta8rX3fxAA" source="_epe8Lc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe75c2iEeiCta8rX3fxAA" target="_epe8ic2iEeiCta8rX3fxAA" source="_epe8Bc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe75s2iEeiCta8rX3fxAA" target="_epe8as2iEeiCta8rX3fxAA" source="_epe8UM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7582iEeiCta8rX3fxAA" target="_epfg3c2iEeiCta8rX3fxAA" source="_epe8Bc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe76M2iEeiCta8rX3fxAA" target="_epe8l82iEeiCta8rX3fxAA" source="_epe8as2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe76c2iEeiCta8rX3fxAA" target="_epfhQM2iEeiCta8rX3fxAA" source="_epe8Bc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe76s2iEeiCta8rX3fxAA" target="_epfhCc2iEeiCta8rX3fxAA" source="_epe8l82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7682iEeiCta8rX3fxAA" target="_epfhic2iEeiCta8rX3fxAA" source="_epe8Bc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe77M2iEeiCta8rX3fxAA" target="_epfhbM2iEeiCta8rX3fxAA" source="_epfhCc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe77c2iEeiCta8rX3fxAA" target="_epfhqM2iEeiCta8rX3fxAA" source="_epe8Bc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe77s2iEeiCta8rX3fxAA" target="_epfhj82iEeiCta8rX3fxAA" source="_epfhbM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7782iEeiCta8rX3fxAA" target="_epfhw82iEeiCta8rX3fxAA" source="_epe8Bc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe78M2iEeiCta8rX3fxAA" target="_epfhqc2iEeiCta8rX3fxAA" source="_epfhj82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epe78c2iEeiCta8rX3fxAA" target="_epfhy82iEeiCta8rX3fxAA" source="_epfhqc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe78s2iEeiCta8rX3fxAA" name="AcceptStatement@2e38ed9f" outgoing="_epe73c2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_epe7882iEeiCta8rX3fxAA" target="_epe79M2iEeiCta8rX3fxAA" source="_epe79s2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_epe79M2iEeiCta8rX3fxAA" name="Accept(Start)" incoming="_epe7882iEeiCta8rX3fxAA">
                <trigger xmi:id="_epe79c2iEeiCta8rX3fxAA" event="_epfjkc2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_epe79s2iEeiCta8rX3fxAA" name="Initial(Accept(Start))" outgoing="_epe7882iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe7982iEeiCta8rX3fxAA" name="ExpressionStatement@5a6d1fc2" incoming="_epe73c2iEeiCta8rX3fxAA" outgoing="_epe73s2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7-M2iEeiCta8rX3fxAA" target="_epe8Bc2iEeiCta8rX3fxAA" source="_epe7-82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe7-c2iEeiCta8rX3fxAA" target="_epe7_s2iEeiCta8rX3fxAA" source="_epe8As2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_epe7-s2iEeiCta8rX3fxAA" name="Call(run)" operation="_epfje82iEeiCta8rX3fxAA">
                <result xmi:id="_epe7-82iEeiCta8rX3fxAA" name="Call(run).result(test)" outgoing="_epe7-M2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7_M2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe7_c2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <target xmi:id="_epe7_s2iEeiCta8rX3fxAA" name="Call(run).target" incoming="_epe7-c2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe7_82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8AM2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_epe8Ac2iEeiCta8rX3fxAA" name="ReadSelf">
                <result xmi:id="_epe8As2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epe7-c2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8A82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8BM2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_epe8Bc2iEeiCta8rX3fxAA" name="Fork(test)@3e283213" incoming="_epe7-M2iEeiCta8rX3fxAA" outgoing="_epe7382iEeiCta8rX3fxAA _epe74c2iEeiCta8rX3fxAA _epe7482iEeiCta8rX3fxAA _epe75c2iEeiCta8rX3fxAA _epe7582iEeiCta8rX3fxAA _epe76c2iEeiCta8rX3fxAA _epe7682iEeiCta8rX3fxAA _epe77c2iEeiCta8rX3fxAA _epe7782iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe8Bs2iEeiCta8rX3fxAA" name="AcceptStatement@4bba3d76" incoming="_epe73s2iEeiCta8rX3fxAA" outgoing="_epe74M2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_epe8B82iEeiCta8rX3fxAA" target="_epe8CM2iEeiCta8rX3fxAA" source="_epe8Cs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_epe8CM2iEeiCta8rX3fxAA" name="Accept(Continue)" incoming="_epe8B82iEeiCta8rX3fxAA">
                <trigger xmi:id="_epe8Cc2iEeiCta8rX3fxAA" event="_epfjks2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_epe8Cs2iEeiCta8rX3fxAA" name="Initial(Accept(Continue))" outgoing="_epe8B82iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe8C82iEeiCta8rX3fxAA" name="ExpressionStatement@50a5eb53" incoming="_epe74M2iEeiCta8rX3fxAA" outgoing="_epe74s2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8DM2iEeiCta8rX3fxAA" target="_epe8EM2iEeiCta8rX3fxAA" source="_epe8Gs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8Dc2iEeiCta8rX3fxAA" target="_epe8E82iEeiCta8rX3fxAA" source="_epe8Ks2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epe8Ds2iEeiCta8rX3fxAA" target="_epe8D82iEeiCta8rX3fxAA" source="_epe8Fs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epe8D82iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_epe8Ds2iEeiCta8rX3fxAA" behavior="_epgJIc2iEeiCta8rX3fxAA">
                <argument xmi:id="_epe8EM2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_epe8DM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8Ec2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8Es2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_epe8E82iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_epe8Dc2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8FM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8Fc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe8Fs2iEeiCta8rX3fxAA" name="Tuple@7ea3d83c" outgoing="_epe8Ds2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8F82iEeiCta8rX3fxAA" target="_epe8H82iEeiCta8rX3fxAA" source="_epe8Jc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8GM2iEeiCta8rX3fxAA" target="_epe8J82iEeiCta8rX3fxAA" source="_epe8Is2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe8Gc2iEeiCta8rX3fxAA" name="Value(&quot;test.sig instanceof SignalTermination&quot;)">
                  <result xmi:id="_epe8Gs2iEeiCta8rX3fxAA" name="Value(&quot;test.sig instanceof SignalTermination&quot;).result" outgoing="_epe8DM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8G82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8HM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epe8Hc2iEeiCta8rX3fxAA" value="test.sig instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epe8Hs2iEeiCta8rX3fxAA" name="Read(sig)" structuralFeature="_epdtVc2iEeiCta8rX3fxAA">
                  <object xmi:id="_epe8H82iEeiCta8rX3fxAA" name="Read(sig).object" incoming="_epe8F82iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8IM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8Ic2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epe8Is2iEeiCta8rX3fxAA" name="Read(sig).result" outgoing="_epe8GM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8I82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8JM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epe8Jc2iEeiCta8rX3fxAA" name="Fork(Fork(test)@3e283213)" incoming="_epe7382iEeiCta8rX3fxAA" outgoing="_epe8F82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_epe8Js2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalTermination)" classifier="_epdtTs2iEeiCta8rX3fxAA">
                  <object xmi:id="_epe8J82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_epe8GM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8KM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8Kc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epe8Ks2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_epe8Dc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8K82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8LM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe8Lc2iEeiCta8rX3fxAA" name="ExpressionStatement@6ebe7bdb" incoming="_epe74s2iEeiCta8rX3fxAA" outgoing="_epe75M2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8Ls2iEeiCta8rX3fxAA" target="_epe8M82iEeiCta8rX3fxAA" source="_epe8P82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8L82iEeiCta8rX3fxAA" target="_epe8Ns2iEeiCta8rX3fxAA" source="_epe8R82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8MM2iEeiCta8rX3fxAA" target="_epe8Oc2iEeiCta8rX3fxAA" source="_epe8TM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epe8Mc2iEeiCta8rX3fxAA" target="_epe8Ms2iEeiCta8rX3fxAA" source="_epe8PM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epe8Ms2iEeiCta8rX3fxAA" name="Call(AssertEqual)" incoming="_epe8Mc2iEeiCta8rX3fxAA" behavior="_epgJw82iEeiCta8rX3fxAA">
                <argument xmi:id="_epe8M82iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(label)" incoming="_epe8Ls2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8NM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8Nc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_epe8Ns2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value1)" incoming="_epe8L82iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8N82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8OM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_epe8Oc2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value2)" incoming="_epe8MM2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8Os2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8O82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe8PM2iEeiCta8rX3fxAA" name="Tuple@5aed59aa" outgoing="_epe8Mc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8Pc2iEeiCta8rX3fxAA" target="_epe8RM2iEeiCta8rX3fxAA" source="_epe8Ss2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe8Ps2iEeiCta8rX3fxAA" name="Value(&quot;test.name&quot;)">
                  <result xmi:id="_epe8P82iEeiCta8rX3fxAA" name="Value(&quot;test.name&quot;).result" outgoing="_epe8Ls2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8QM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8Qc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epe8Qs2iEeiCta8rX3fxAA" value="test.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epe8Q82iEeiCta8rX3fxAA" name="Read(name)" structuralFeature="_epdtW82iEeiCta8rX3fxAA">
                  <object xmi:id="_epe8RM2iEeiCta8rX3fxAA" name="Read(name).object" incoming="_epe8Pc2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8Rc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8Rs2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epe8R82iEeiCta8rX3fxAA" name="Read(name).result" outgoing="_epe8L82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8SM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8Sc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epe8Ss2iEeiCta8rX3fxAA" name="Fork(Fork(test)@3e283213)" incoming="_epe74c2iEeiCta8rX3fxAA" outgoing="_epe8Pc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe8S82iEeiCta8rX3fxAA" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_epe8TM2iEeiCta8rX3fxAA" name="Value(&quot;Arrival1&quot;).result" outgoing="_epe8MM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8Tc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8Ts2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epe8T82iEeiCta8rX3fxAA" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe8UM2iEeiCta8rX3fxAA" name="ExpressionStatement@76e28b38" incoming="_epe75M2iEeiCta8rX3fxAA" outgoing="_epe75s2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8Uc2iEeiCta8rX3fxAA" target="_epe8Vc2iEeiCta8rX3fxAA" source="_epe8Xs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8Us2iEeiCta8rX3fxAA" target="_epe8WM2iEeiCta8rX3fxAA" source="_epe8Zs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epe8U82iEeiCta8rX3fxAA" target="_epe8VM2iEeiCta8rX3fxAA" source="_epe8W82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epe8VM2iEeiCta8rX3fxAA" name="Call(AssertFalse)" incoming="_epe8U82iEeiCta8rX3fxAA" behavior="_epgwes2iEeiCta8rX3fxAA">
                <argument xmi:id="_epe8Vc2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(label)" incoming="_epe8Uc2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8Vs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8V82iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_epe8WM2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(condition)" incoming="_epe8Us2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8Wc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8Ws2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe8W82iEeiCta8rX3fxAA" name="Tuple@46ed94a1" outgoing="_epe8U82iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8XM2iEeiCta8rX3fxAA" target="_epe8Y82iEeiCta8rX3fxAA" source="_epe8ac2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe8Xc2iEeiCta8rX3fxAA" name="Value(&quot;test.terminate&quot;)">
                  <result xmi:id="_epe8Xs2iEeiCta8rX3fxAA" name="Value(&quot;test.terminate&quot;).result" outgoing="_epe8Uc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8X82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8YM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epe8Yc2iEeiCta8rX3fxAA" value="test.terminate">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epe8Ys2iEeiCta8rX3fxAA" name="Read(terminate)" structuralFeature="_epdtXs2iEeiCta8rX3fxAA">
                  <object xmi:id="_epe8Y82iEeiCta8rX3fxAA" name="Read(terminate).object" incoming="_epe8XM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8ZM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8Zc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epe8Zs2iEeiCta8rX3fxAA" name="Read(terminate).result" outgoing="_epe8Us2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8Z82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8aM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epe8ac2iEeiCta8rX3fxAA" name="Fork(Fork(test)@3e283213)" incoming="_epe7482iEeiCta8rX3fxAA" outgoing="_epe8XM2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe8as2iEeiCta8rX3fxAA" name="ExpressionStatement@85b79b0" incoming="_epe75s2iEeiCta8rX3fxAA" outgoing="_epe76M2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8a82iEeiCta8rX3fxAA" target="_epe8cM2iEeiCta8rX3fxAA" source="_epe8fs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8bM2iEeiCta8rX3fxAA" target="_epe8c82iEeiCta8rX3fxAA" source="_epe8js2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8bc2iEeiCta8rX3fxAA" target="_epe8ds2iEeiCta8rX3fxAA" source="_epe8k82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epe8bs2iEeiCta8rX3fxAA" target="_epe8b82iEeiCta8rX3fxAA" source="_epe8ec2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epe8b82iEeiCta8rX3fxAA" name="Call(AssertEqual)" incoming="_epe8bs2iEeiCta8rX3fxAA" behavior="_epgJw82iEeiCta8rX3fxAA">
                <argument xmi:id="_epe8cM2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(label)" incoming="_epe8a82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8cc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8cs2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_epe8c82iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value1)" incoming="_epe8bM2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8dM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8dc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_epe8ds2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value2)" incoming="_epe8bc2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8d82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8eM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe8ec2iEeiCta8rX3fxAA" name="Tuple@66a80005" outgoing="_epe8bs2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8es2iEeiCta8rX3fxAA" target="_epe8g82iEeiCta8rX3fxAA" source="_epe8ic2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8e82iEeiCta8rX3fxAA" target="_epe8kc2iEeiCta8rX3fxAA" source="_epe8hs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8fM2iEeiCta8rX3fxAA" target="_epe8i82iEeiCta8rX3fxAA" source="_epe8kc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe8fc2iEeiCta8rX3fxAA" name="Value(&quot;test.arrival.name&quot;)">
                  <result xmi:id="_epe8fs2iEeiCta8rX3fxAA" name="Value(&quot;test.arrival.name&quot;).result" outgoing="_epe8a82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8f82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8gM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epe8gc2iEeiCta8rX3fxAA" value="test.arrival.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epe8gs2iEeiCta8rX3fxAA" name="Read(arrival)" structuralFeature="_epdtYc2iEeiCta8rX3fxAA">
                  <object xmi:id="_epe8g82iEeiCta8rX3fxAA" name="Read(arrival).object" incoming="_epe8es2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8hM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8hc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epe8hs2iEeiCta8rX3fxAA" name="Read(arrival).result" outgoing="_epe8e82iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8h82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8iM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epe8ic2iEeiCta8rX3fxAA" name="Fork(Fork(test)@3e283213)" incoming="_epe75c2iEeiCta8rX3fxAA" outgoing="_epe8es2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epe8is2iEeiCta8rX3fxAA" name="Read(name)" structuralFeature="_epdtS82iEeiCta8rX3fxAA">
                  <object xmi:id="_epe8i82iEeiCta8rX3fxAA" name="Read(name).object" incoming="_epe8fM2iEeiCta8rX3fxAA" type="_epdtSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8jM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8jc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epe8js2iEeiCta8rX3fxAA" name="Read(name).result" outgoing="_epe8bM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8j82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8kM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epe8kc2iEeiCta8rX3fxAA" name="Fork(Read(arrival).result)" incoming="_epe8e82iEeiCta8rX3fxAA" outgoing="_epe8fM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe8ks2iEeiCta8rX3fxAA" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_epe8k82iEeiCta8rX3fxAA" name="Value(&quot;Arrival3&quot;).result" outgoing="_epe8bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8lM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8lc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epe8ls2iEeiCta8rX3fxAA" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe8l82iEeiCta8rX3fxAA" name="ExpressionStatement@1dd184c7" incoming="_epe76M2iEeiCta8rX3fxAA" outgoing="_epe76s2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8mM2iEeiCta8rX3fxAA" target="_epe8nM2iEeiCta8rX3fxAA" source="_epe8r82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8mc2iEeiCta8rX3fxAA" target="_epe8n82iEeiCta8rX3fxAA" source="_epfhCM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epe8ms2iEeiCta8rX3fxAA" target="_epe8m82iEeiCta8rX3fxAA" source="_epe8os2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epe8m82iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_epe8ms2iEeiCta8rX3fxAA" behavior="_epgJIc2iEeiCta8rX3fxAA">
                <argument xmi:id="_epe8nM2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_epe8mM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8nc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8ns2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_epe8n82iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_epe8mc2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8oM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8oc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe8os2iEeiCta8rX3fxAA" name="Tuple@133225a0" outgoing="_epe8ms2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8o82iEeiCta8rX3fxAA" target="_epfg6s2iEeiCta8rX3fxAA" source="_epe8tc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epe8pM2iEeiCta8rX3fxAA" target="_epfg6c2iEeiCta8rX3fxAA" source="_epe8s82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8pc2iEeiCta8rX3fxAA" target="_epfg9s2iEeiCta8rX3fxAA" source="_epe8tc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epe8ps2iEeiCta8rX3fxAA" target="_epfhB82iEeiCta8rX3fxAA" source="_epfhBs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8p82iEeiCta8rX3fxAA" target="_epfhB82iEeiCta8rX3fxAA" source="_epfg7c2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epe8qM2iEeiCta8rX3fxAA" target="_epfg8M2iEeiCta8rX3fxAA" source="_epfhB82iEeiCta8rX3fxAA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_epe8qc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epe8qs2iEeiCta8rX3fxAA" target="_epfg_M2iEeiCta8rX3fxAA" source="_epfhB82iEeiCta8rX3fxAA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_epe8q82iEeiCta8rX3fxAA" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8rM2iEeiCta8rX3fxAA" target="_epfhCM2iEeiCta8rX3fxAA" source="_epfg8s2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8rc2iEeiCta8rX3fxAA" target="_epfhCM2iEeiCta8rX3fxAA" source="_epfg_s2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epe8rs2iEeiCta8rX3fxAA" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;)">
                  <result xmi:id="_epe8r82iEeiCta8rX3fxAA" name="Value(&quot;test.signals[1] hastype SignalArrival&quot;).result" outgoing="_epe8mM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8sM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8sc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epe8ss2iEeiCta8rX3fxAA" value="test.signals[1] hastype SignalArrival">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe8s82iEeiCta8rX3fxAA" name="Operands(EqualityExpression@79c59e84)" outgoing="_epe8pM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8tM2iEeiCta8rX3fxAA" target="_epe8tc2iEeiCta8rX3fxAA" source="_epfg0c2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_epe8tc2iEeiCta8rX3fxAA" name="Fork(x)@470ea784" incoming="_epe8tM2iEeiCta8rX3fxAA" outgoing="_epe8o82iEeiCta8rX3fxAA _epe8pc2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epe8ts2iEeiCta8rX3fxAA" name="RightHandSide@39132138">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8t82iEeiCta8rX3fxAA" target="_epe8vM2iEeiCta8rX3fxAA" source="_epfg2s2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8uM2iEeiCta8rX3fxAA" target="_epfg482iEeiCta8rX3fxAA" source="_epfg382iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_epe8uc2iEeiCta8rX3fxAA" target="_epe8u82iEeiCta8rX3fxAA" source="_epfg1M2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epe8us2iEeiCta8rX3fxAA" target="_epe8v82iEeiCta8rX3fxAA" source="_epfg482iEeiCta8rX3fxAA"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_epe8u82iEeiCta8rX3fxAA" name="Call(At)" incoming="_epe8uc2iEeiCta8rX3fxAA">
                      <argument xmi:id="_epe8vM2iEeiCta8rX3fxAA" name="Call(At).argument(seq)" incoming="_epe8t82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8vc2iEeiCta8rX3fxAA"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epe8vs2iEeiCta8rX3fxAA" value="*"/>
                      </argument>
                      <argument xmi:id="_epe8v82iEeiCta8rX3fxAA" name="Call(At).argument(index)" incoming="_epe8us2iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epe8wM2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfg0M2iEeiCta8rX3fxAA" value="1"/>
                      </argument>
                      <result xmi:id="_epfg0c2iEeiCta8rX3fxAA" name="Call(At).result()" outgoing="_epe8tM2iEeiCta8rX3fxAA">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfg0s2iEeiCta8rX3fxAA"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfg082iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfg1M2iEeiCta8rX3fxAA" name="Tuple@5c61a0" outgoing="_epe8uc2iEeiCta8rX3fxAA">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_epfg1c2iEeiCta8rX3fxAA" target="_epfg182iEeiCta8rX3fxAA" source="_epfg3c2iEeiCta8rX3fxAA"/>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epfg1s2iEeiCta8rX3fxAA" name="Read(signals)" structuralFeature="_epdtZ82iEeiCta8rX3fxAA">
                        <object xmi:id="_epfg182iEeiCta8rX3fxAA" name="Read(signals).object" incoming="_epfg1c2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfg2M2iEeiCta8rX3fxAA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfg2c2iEeiCta8rX3fxAA" value="1"/>
                        </object>
                        <result xmi:id="_epfg2s2iEeiCta8rX3fxAA" name="Read(signals).result" outgoing="_epe8t82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfg282iEeiCta8rX3fxAA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfg3M2iEeiCta8rX3fxAA" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_epfg3c2iEeiCta8rX3fxAA" name="Fork(Fork(test)@3e283213)" incoming="_epe7582iEeiCta8rX3fxAA" outgoing="_epfg1c2iEeiCta8rX3fxAA"/>
                      <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfg3s2iEeiCta8rX3fxAA" name="Value(1)">
                        <result xmi:id="_epfg382iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_epe8uM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfg4M2iEeiCta8rX3fxAA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfg4c2iEeiCta8rX3fxAA" value="1"/>
                        </result>
                        <value xmi:type="uml:LiteralInteger" xmi:id="_epfg4s2iEeiCta8rX3fxAA" value="1">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_epfg482iEeiCta8rX3fxAA" name="Fork(Call(At).argument(index))" incoming="_epe8uM2iEeiCta8rX3fxAA" outgoing="_epe8us2iEeiCta8rX3fxAA"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfg5M2iEeiCta8rX3fxAA" name="Value(null)">
                    <result xmi:id="_epfg5c2iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfg5s2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfg582iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_epfg6M2iEeiCta8rX3fxAA"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_epfg6c2iEeiCta8rX3fxAA" name="Call(NotEmpty)" incoming="_epe8pM2iEeiCta8rX3fxAA">
                  <argument xmi:id="_epfg6s2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_epe8o82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfg682iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfg7M2iEeiCta8rX3fxAA" value="*"/>
                  </argument>
                  <result xmi:id="_epfg7c2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_epe8p82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfg7s2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfg782iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfg8M2iEeiCta8rX3fxAA" name="ConditionalLogicalExpression@151a7f12.operand2" incoming="_epe8qM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfg8c2iEeiCta8rX3fxAA" target="_epfg8s2iEeiCta8rX3fxAA" source="_epfg-c2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_epfg8s2iEeiCta8rX3fxAA" name="ConditionalLogicalExpression@151a7f12.operand2.result" incoming="_epfg8c2iEeiCta8rX3fxAA" outgoing="_epe8rM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfg882iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfg9M2iEeiCta8rX3fxAA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_epfg9c2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalNewArrival)" classifier="_epdtSs2iEeiCta8rX3fxAA" isDirect="true">
                    <object xmi:id="_epfg9s2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalNewArrival).object" incoming="_epe8pc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfg982iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfg-M2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_epfg-c2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalNewArrival).result" outgoing="_epfg8c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfg-s2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfg-82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfg_M2iEeiCta8rX3fxAA" name="ConditionalLogicalExpression@151a7f12.operand3" incoming="_epe8qs2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfg_c2iEeiCta8rX3fxAA" target="_epfg_s2iEeiCta8rX3fxAA" source="_epfhAs2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_epfg_s2iEeiCta8rX3fxAA" name="ConditionalLogicalExpression@151a7f12.operand3.result" incoming="_epfg_c2iEeiCta8rX3fxAA" outgoing="_epe8rc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfg_82iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhAM2iEeiCta8rX3fxAA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfhAc2iEeiCta8rX3fxAA" name="Value(false)">
                    <result xmi:id="_epfhAs2iEeiCta8rX3fxAA" name="Value(false).result" outgoing="_epfg_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhA82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhBM2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_epfhBc2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_epfhBs2iEeiCta8rX3fxAA" name="Initial(ConditionalLogicalExpression@151a7f12)" outgoing="_epe8ps2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_epfhB82iEeiCta8rX3fxAA" name="Decision(ConditionalLogicalExpression@151a7f12)" incoming="_epe8ps2iEeiCta8rX3fxAA _epe8p82iEeiCta8rX3fxAA" outgoing="_epe8qM2iEeiCta8rX3fxAA _epe8qs2iEeiCta8rX3fxAA" decisionInputFlow="_epe8p82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_epfhCM2iEeiCta8rX3fxAA" name="Merge(ConditionalLogicalExpression@151a7f12.result)" incoming="_epe8rM2iEeiCta8rX3fxAA _epe8rc2iEeiCta8rX3fxAA" outgoing="_epe8mc2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhCc2iEeiCta8rX3fxAA" name="ExpressionStatement@ff821f4" incoming="_epe76s2iEeiCta8rX3fxAA" outgoing="_epe77M2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhCs2iEeiCta8rX3fxAA" target="_epfhDs2iEeiCta8rX3fxAA" source="_epfhIc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhC82iEeiCta8rX3fxAA" target="_epfhEc2iEeiCta8rX3fxAA" source="_epfha82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epfhDM2iEeiCta8rX3fxAA" target="_epfhDc2iEeiCta8rX3fxAA" source="_epfhFM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epfhDc2iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_epfhDM2iEeiCta8rX3fxAA" behavior="_epgJIc2iEeiCta8rX3fxAA">
                <argument xmi:id="_epfhDs2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_epfhCs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhD82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhEM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_epfhEc2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_epfhC82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhEs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhE82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhFM2iEeiCta8rX3fxAA" name="Tuple@1f80bf8a" outgoing="_epfhDM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhFc2iEeiCta8rX3fxAA" target="_epfhTc2iEeiCta8rX3fxAA" source="_epfhJ82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epfhFs2iEeiCta8rX3fxAA" target="_epfhTM2iEeiCta8rX3fxAA" source="_epfhJc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhF82iEeiCta8rX3fxAA" target="_epfhWc2iEeiCta8rX3fxAA" source="_epfhJ82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epfhGM2iEeiCta8rX3fxAA" target="_epfhas2iEeiCta8rX3fxAA" source="_epfhac2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhGc2iEeiCta8rX3fxAA" target="_epfhas2iEeiCta8rX3fxAA" source="_epfhUM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epfhGs2iEeiCta8rX3fxAA" target="_epfhU82iEeiCta8rX3fxAA" source="_epfhas2iEeiCta8rX3fxAA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_epfhG82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epfhHM2iEeiCta8rX3fxAA" target="_epfhX82iEeiCta8rX3fxAA" source="_epfhas2iEeiCta8rX3fxAA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_epfhHc2iEeiCta8rX3fxAA" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhHs2iEeiCta8rX3fxAA" target="_epfha82iEeiCta8rX3fxAA" source="_epfhVc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhH82iEeiCta8rX3fxAA" target="_epfha82iEeiCta8rX3fxAA" source="_epfhYc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfhIM2iEeiCta8rX3fxAA" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;)">
                  <result xmi:id="_epfhIc2iEeiCta8rX3fxAA" name="Value(&quot;test.signals[2] hastype SignalTermination&quot;).result" outgoing="_epfhCs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhIs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhI82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epfhJM2iEeiCta8rX3fxAA" value="test.signals[2] hastype SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhJc2iEeiCta8rX3fxAA" name="Operands(EqualityExpression@205571a)" outgoing="_epfhFs2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhJs2iEeiCta8rX3fxAA" target="_epfhJ82iEeiCta8rX3fxAA" source="_epfhNM2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_epfhJ82iEeiCta8rX3fxAA" name="Fork(x)@56e56092" incoming="_epfhJs2iEeiCta8rX3fxAA" outgoing="_epfhFc2iEeiCta8rX3fxAA _epfhF82iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhKM2iEeiCta8rX3fxAA" name="RightHandSide@1397ace9">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhKc2iEeiCta8rX3fxAA" target="_epfhLs2iEeiCta8rX3fxAA" source="_epfhPc2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhKs2iEeiCta8rX3fxAA" target="_epfhRs2iEeiCta8rX3fxAA" source="_epfhQs2iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_epfhK82iEeiCta8rX3fxAA" target="_epfhLc2iEeiCta8rX3fxAA" source="_epfhN82iEeiCta8rX3fxAA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhLM2iEeiCta8rX3fxAA" target="_epfhMc2iEeiCta8rX3fxAA" source="_epfhRs2iEeiCta8rX3fxAA"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_epfhLc2iEeiCta8rX3fxAA" name="Call(At)" incoming="_epfhK82iEeiCta8rX3fxAA">
                      <argument xmi:id="_epfhLs2iEeiCta8rX3fxAA" name="Call(At).argument(seq)" incoming="_epfhKc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhL82iEeiCta8rX3fxAA"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhMM2iEeiCta8rX3fxAA" value="*"/>
                      </argument>
                      <argument xmi:id="_epfhMc2iEeiCta8rX3fxAA" name="Call(At).argument(index)" incoming="_epfhLM2iEeiCta8rX3fxAA">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhMs2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhM82iEeiCta8rX3fxAA" value="1"/>
                      </argument>
                      <result xmi:id="_epfhNM2iEeiCta8rX3fxAA" name="Call(At).result()" outgoing="_epfhJs2iEeiCta8rX3fxAA">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhNc2iEeiCta8rX3fxAA"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhNs2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhN82iEeiCta8rX3fxAA" name="Tuple@4bfd5aa3" outgoing="_epfhK82iEeiCta8rX3fxAA">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhOM2iEeiCta8rX3fxAA" target="_epfhOs2iEeiCta8rX3fxAA" source="_epfhQM2iEeiCta8rX3fxAA"/>
                      <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epfhOc2iEeiCta8rX3fxAA" name="Read(signals)" structuralFeature="_epdtZ82iEeiCta8rX3fxAA">
                        <object xmi:id="_epfhOs2iEeiCta8rX3fxAA" name="Read(signals).object" incoming="_epfhOM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhO82iEeiCta8rX3fxAA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhPM2iEeiCta8rX3fxAA" value="1"/>
                        </object>
                        <result xmi:id="_epfhPc2iEeiCta8rX3fxAA" name="Read(signals).result" outgoing="_epfhKc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhPs2iEeiCta8rX3fxAA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhP82iEeiCta8rX3fxAA" value="1"/>
                        </result>
                      </node>
                      <node xmi:type="uml:ForkNode" xmi:id="_epfhQM2iEeiCta8rX3fxAA" name="Fork(Fork(test)@3e283213)" incoming="_epe76c2iEeiCta8rX3fxAA" outgoing="_epfhOM2iEeiCta8rX3fxAA"/>
                      <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfhQc2iEeiCta8rX3fxAA" name="Value(2)">
                        <result xmi:id="_epfhQs2iEeiCta8rX3fxAA" name="Value(2).result" outgoing="_epfhKs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhQ82iEeiCta8rX3fxAA" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhRM2iEeiCta8rX3fxAA" value="1"/>
                        </result>
                        <value xmi:type="uml:LiteralInteger" xmi:id="_epfhRc2iEeiCta8rX3fxAA" value="2">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        </value>
                      </node>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_epfhRs2iEeiCta8rX3fxAA" name="Fork(Call(At).argument(index))" incoming="_epfhKs2iEeiCta8rX3fxAA" outgoing="_epfhLM2iEeiCta8rX3fxAA"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfhR82iEeiCta8rX3fxAA" name="Value(null)">
                    <result xmi:id="_epfhSM2iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhSc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhSs2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_epfhS82iEeiCta8rX3fxAA"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_epfhTM2iEeiCta8rX3fxAA" name="Call(NotEmpty)" incoming="_epfhFs2iEeiCta8rX3fxAA">
                  <argument xmi:id="_epfhTc2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_epfhFc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhTs2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhT82iEeiCta8rX3fxAA" value="*"/>
                  </argument>
                  <result xmi:id="_epfhUM2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_epfhGc2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhUc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhUs2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhU82iEeiCta8rX3fxAA" name="ConditionalLogicalExpression@4bca4cdf.operand2" incoming="_epfhGs2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhVM2iEeiCta8rX3fxAA" target="_epfhVc2iEeiCta8rX3fxAA" source="_epfhXM2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_epfhVc2iEeiCta8rX3fxAA" name="ConditionalLogicalExpression@4bca4cdf.operand2.result" incoming="_epfhVM2iEeiCta8rX3fxAA" outgoing="_epfhHs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhVs2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhV82iEeiCta8rX3fxAA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_epfhWM2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalTermination)" classifier="_epdtTs2iEeiCta8rX3fxAA" isDirect="true">
                    <object xmi:id="_epfhWc2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_epfhF82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhWs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhW82iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_epfhXM2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_epfhVM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhXc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhXs2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhX82iEeiCta8rX3fxAA" name="ConditionalLogicalExpression@4bca4cdf.operand3" incoming="_epfhHM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhYM2iEeiCta8rX3fxAA" target="_epfhYc2iEeiCta8rX3fxAA" source="_epfhZc2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_epfhYc2iEeiCta8rX3fxAA" name="ConditionalLogicalExpression@4bca4cdf.operand3.result" incoming="_epfhYM2iEeiCta8rX3fxAA" outgoing="_epfhH82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhYs2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhY82iEeiCta8rX3fxAA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfhZM2iEeiCta8rX3fxAA" name="Value(false)">
                    <result xmi:id="_epfhZc2iEeiCta8rX3fxAA" name="Value(false).result" outgoing="_epfhYM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhZs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhZ82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_epfhaM2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_epfhac2iEeiCta8rX3fxAA" name="Initial(ConditionalLogicalExpression@4bca4cdf)" outgoing="_epfhGM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_epfhas2iEeiCta8rX3fxAA" name="Decision(ConditionalLogicalExpression@4bca4cdf)" incoming="_epfhGM2iEeiCta8rX3fxAA _epfhGc2iEeiCta8rX3fxAA" outgoing="_epfhGs2iEeiCta8rX3fxAA _epfhHM2iEeiCta8rX3fxAA" decisionInputFlow="_epfhGc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_epfha82iEeiCta8rX3fxAA" name="Merge(ConditionalLogicalExpression@4bca4cdf.result)" incoming="_epfhHs2iEeiCta8rX3fxAA _epfhH82iEeiCta8rX3fxAA" outgoing="_epfhC82iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhbM2iEeiCta8rX3fxAA" name="ExpressionStatement@3e1bb2ef" incoming="_epe77M2iEeiCta8rX3fxAA" outgoing="_epe77s2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhbc2iEeiCta8rX3fxAA" target="_epfhcs2iEeiCta8rX3fxAA" source="_epfhfs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhbs2iEeiCta8rX3fxAA" target="_epfhdc2iEeiCta8rX3fxAA" source="_epfhhs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhb82iEeiCta8rX3fxAA" target="_epfheM2iEeiCta8rX3fxAA" source="_epfhi82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epfhcM2iEeiCta8rX3fxAA" target="_epfhcc2iEeiCta8rX3fxAA" source="_epfhe82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epfhcc2iEeiCta8rX3fxAA" name="Call(AssertEqual)" incoming="_epfhcM2iEeiCta8rX3fxAA" behavior="_epgJw82iEeiCta8rX3fxAA">
                <argument xmi:id="_epfhcs2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(label)" incoming="_epfhbc2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhc82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhdM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_epfhdc2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value1)" incoming="_epfhbs2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhds2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhd82iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_epfheM2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value2)" incoming="_epfhb82iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhec2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhes2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhe82iEeiCta8rX3fxAA" name="Tuple@7bdf11f9" outgoing="_epfhcM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhfM2iEeiCta8rX3fxAA" target="_epfhg82iEeiCta8rX3fxAA" source="_epfhic2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfhfc2iEeiCta8rX3fxAA" name="Value(&quot;test.count&quot;)">
                  <result xmi:id="_epfhfs2iEeiCta8rX3fxAA" name="Value(&quot;test.count&quot;).result" outgoing="_epfhbc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhf82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhgM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epfhgc2iEeiCta8rX3fxAA" value="test.count">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epfhgs2iEeiCta8rX3fxAA" name="Read(count)" structuralFeature="_epdtZM2iEeiCta8rX3fxAA">
                  <object xmi:id="_epfhg82iEeiCta8rX3fxAA" name="Read(count).object" incoming="_epfhfM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhhM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhhc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epfhhs2iEeiCta8rX3fxAA" name="Read(count).result" outgoing="_epfhbs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhh82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhiM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epfhic2iEeiCta8rX3fxAA" name="Fork(Fork(test)@3e283213)" incoming="_epe7682iEeiCta8rX3fxAA" outgoing="_epfhfM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfhis2iEeiCta8rX3fxAA" name="Value(3)">
                  <result xmi:id="_epfhi82iEeiCta8rX3fxAA" name="Value(3).result" outgoing="_epfhb82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhjM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhjc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_epfhjs2iEeiCta8rX3fxAA" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhj82iEeiCta8rX3fxAA" name="ExpressionStatement@3edd6b40" incoming="_epe77s2iEeiCta8rX3fxAA" outgoing="_epe78M2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhkM2iEeiCta8rX3fxAA" target="_epfhlM2iEeiCta8rX3fxAA" source="_epfhnc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhkc2iEeiCta8rX3fxAA" target="_epfhl82iEeiCta8rX3fxAA" source="_epfhpc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epfhks2iEeiCta8rX3fxAA" target="_epfhk82iEeiCta8rX3fxAA" source="_epfhms2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epfhk82iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_epfhks2iEeiCta8rX3fxAA" behavior="_epgJIc2iEeiCta8rX3fxAA">
                <argument xmi:id="_epfhlM2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_epfhkM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhlc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhls2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_epfhl82iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_epfhkc2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhmM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhmc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhms2iEeiCta8rX3fxAA" name="Tuple@60d4d35c" outgoing="_epfhks2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhm82iEeiCta8rX3fxAA" target="_epfhos2iEeiCta8rX3fxAA" source="_epfhqM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfhnM2iEeiCta8rX3fxAA" name="Value(&quot;test.flag&quot;)">
                  <result xmi:id="_epfhnc2iEeiCta8rX3fxAA" name="Value(&quot;test.flag&quot;).result" outgoing="_epfhkM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhns2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhn82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epfhoM2iEeiCta8rX3fxAA" value="test.flag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epfhoc2iEeiCta8rX3fxAA" name="Read(flag)" structuralFeature="_epeSsM2iEeiCta8rX3fxAA">
                  <object xmi:id="_epfhos2iEeiCta8rX3fxAA" name="Read(flag).object" incoming="_epfhm82iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfho82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhpM2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epfhpc2iEeiCta8rX3fxAA" name="Read(flag).result" outgoing="_epfhkc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhps2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhp82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epfhqM2iEeiCta8rX3fxAA" name="Fork(Fork(test)@3e283213)" incoming="_epe77c2iEeiCta8rX3fxAA" outgoing="_epfhm82iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhqc2iEeiCta8rX3fxAA" name="ExpressionStatement@45110105" incoming="_epe78M2iEeiCta8rX3fxAA" outgoing="_epe78c2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhqs2iEeiCta8rX3fxAA" target="_epfhrs2iEeiCta8rX3fxAA" source="_epfhuM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhq82iEeiCta8rX3fxAA" target="_epfhsc2iEeiCta8rX3fxAA" source="_epfhyM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epfhrM2iEeiCta8rX3fxAA" target="_epfhrc2iEeiCta8rX3fxAA" source="_epfhtM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epfhrc2iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_epfhrM2iEeiCta8rX3fxAA" behavior="_epgJIc2iEeiCta8rX3fxAA">
                <argument xmi:id="_epfhrs2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_epfhqs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhr82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhsM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_epfhsc2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_epfhq82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhss2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhs82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhtM2iEeiCta8rX3fxAA" name="Tuple@e360e01" outgoing="_epfhrM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhtc2iEeiCta8rX3fxAA" target="_epfhvc2iEeiCta8rX3fxAA" source="_epfhw82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhts2iEeiCta8rX3fxAA" target="_epfhxc2iEeiCta8rX3fxAA" source="_epfhwM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfht82iEeiCta8rX3fxAA" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;)">
                  <result xmi:id="_epfhuM2iEeiCta8rX3fxAA" name="Value(&quot;test.sig1 instanceof SignalTermination&quot;).result" outgoing="_epfhqs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhuc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhus2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epfhu82iEeiCta8rX3fxAA" value="test.sig1 instanceof SignalTermination">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epfhvM2iEeiCta8rX3fxAA" name="Read(sig1)" structuralFeature="_epdtWM2iEeiCta8rX3fxAA">
                  <object xmi:id="_epfhvc2iEeiCta8rX3fxAA" name="Read(sig1).object" incoming="_epfhtc2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhvs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhv82iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epfhwM2iEeiCta8rX3fxAA" name="Read(sig1).result" outgoing="_epfhts2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhwc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhws2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epfhw82iEeiCta8rX3fxAA" name="Fork(Fork(test)@3e283213)" incoming="_epe7782iEeiCta8rX3fxAA" outgoing="_epfhtc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_epfhxM2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalTermination)" classifier="_epdtTs2iEeiCta8rX3fxAA">
                  <object xmi:id="_epfhxc2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalTermination).object" incoming="_epfhts2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhxs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhx82iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epfhyM2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(SignalTermination).result" outgoing="_epfhq82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfhyc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfhys2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfhy82iEeiCta8rX3fxAA" name="ExpressionStatement@6ba730c4" incoming="_epe78c2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhzM2iEeiCta8rX3fxAA" target="_epfh0M2iEeiCta8rX3fxAA" source="_epfh282iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhzc2iEeiCta8rX3fxAA" target="_epfh3s2iEeiCta8rX3fxAA" source="_epfh1M2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfhzs2iEeiCta8rX3fxAA" target="_epfh2M2iEeiCta8rX3fxAA" source="_epfh3s2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_epfhz82iEeiCta8rX3fxAA" name="Call(done)" operation="_epgIjc2iEeiCta8rX3fxAA">
                <target xmi:id="_epfh0M2iEeiCta8rX3fxAA" name="Call(done).target" incoming="_epfhzM2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfh0c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfh0s2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_epfh082iEeiCta8rX3fxAA" name="ReadSelf">
                <result xmi:id="_epfh1M2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epfhzc2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfh1c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfh1s2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epfh182iEeiCta8rX3fxAA" name="Read(outer)" structuralFeature="_epe72M2iEeiCta8rX3fxAA">
                <object xmi:id="_epfh2M2iEeiCta8rX3fxAA" name="Read(outer).object" incoming="_epfhzs2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfh2c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfh2s2iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_epfh282iEeiCta8rX3fxAA" name="Read(outer).result" outgoing="_epfhzM2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfh3M2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfh3c2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_epfh3s2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epfhzc2iEeiCta8rX3fxAA" outgoing="_epfhzs2iEeiCta8rX3fxAA"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epfh382iEeiCta8rX3fxAA" name="TestRunner$method$1" visibility="private" specification="_epfjdM2iEeiCta8rX3fxAA" node="_epfh6c2iEeiCta8rX3fxAA _epfh6s2iEeiCta8rX3fxAA _epfh682iEeiCta8rX3fxAA _epfh7M2iEeiCta8rX3fxAA" group="_epfh7M2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_epfh4M2iEeiCta8rX3fxAA" name="outer" type="_epfjk82iEeiCta8rX3fxAA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfh4c2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfh4s2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_epfh482iEeiCta8rX3fxAA" name="" type="_epe71M2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfh5M2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfh5c2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epfh5s2iEeiCta8rX3fxAA" target="_epfh6s2iEeiCta8rX3fxAA" source="_epfh6c2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epfh582iEeiCta8rX3fxAA" target="_epfiCs2iEeiCta8rX3fxAA" source="_epfh6s2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epfh6M2iEeiCta8rX3fxAA" target="_epfh682iEeiCta8rX3fxAA" source="_epfiH82iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_epfh7M2iEeiCta8rX3fxAA" name="Body(TestRunner$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfh7c2iEeiCta8rX3fxAA" target="_epfiH82iEeiCta8rX3fxAA" source="_epfiHM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfh7s2iEeiCta8rX3fxAA" target="_epfiIc2iEeiCta8rX3fxAA" source="_epfiH82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfh782iEeiCta8rX3fxAA" target="_epfh-M2iEeiCta8rX3fxAA" source="_epfiIM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfh8M2iEeiCta8rX3fxAA" target="_epfiJc2iEeiCta8rX3fxAA" source="_epfiH82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfh8c2iEeiCta8rX3fxAA" target="_epfiLM2iEeiCta8rX3fxAA" source="_epfiKM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfh8s2iEeiCta8rX3fxAA" target="_epfiOM2iEeiCta8rX3fxAA" source="_epfiL82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfh882iEeiCta8rX3fxAA" target="_epfiPs2iEeiCta8rX3fxAA" source="_epfiM82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfh9M2iEeiCta8rX3fxAA" target="_epfiQs2iEeiCta8rX3fxAA" source="_epfiQc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfh9c2iEeiCta8rX3fxAA" target="_epfiQs2iEeiCta8rX3fxAA" source="_epfiO82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfh9s2iEeiCta8rX3fxAA" target="_epfiIM2iEeiCta8rX3fxAA" source="_epfiQs2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epfh982iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfh-M2iEeiCta8rX3fxAA" name="Body" incoming="_epfh782iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfh-c2iEeiCta8rX3fxAA" name="ExpressionStatement@6e55471d">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfh-s2iEeiCta8rX3fxAA" target="_epfiBM2iEeiCta8rX3fxAA" source="_epfiAM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfh-82iEeiCta8rX3fxAA" target="_epfiDc2iEeiCta8rX3fxAA" source="_epfiCs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfh_M2iEeiCta8rX3fxAA" target="_epfiEc2iEeiCta8rX3fxAA" source="_epfiB82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epfh_c2iEeiCta8rX3fxAA" target="_epfh_s2iEeiCta8rX3fxAA" source="_epfiGs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfh_s2iEeiCta8rX3fxAA" name="Expression(LeftHandSide@48d6de5d)" incoming="_epfh_c2iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_epfh_82iEeiCta8rX3fxAA" name="ReadSelf">
                    <result xmi:id="_epfiAM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epfh-s2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiAc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiAs2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_epfiA82iEeiCta8rX3fxAA" name="Clear(outer)" structuralFeature="_epe72M2iEeiCta8rX3fxAA">
                  <object xmi:id="_epfiBM2iEeiCta8rX3fxAA" name="Clear(outer).object" incoming="_epfh-s2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiBc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiBs2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epfiB82iEeiCta8rX3fxAA" name="Clear(outer).result" outgoing="_epfh_M2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiCM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiCc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epfiCs2iEeiCta8rX3fxAA" name="Fork(LeftHandSide@48d6de5d)" incoming="_epfh582iEeiCta8rX3fxAA" outgoing="_epfh-82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfiC82iEeiCta8rX3fxAA" name="WriteAll(TestRunner::outer)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiDM2iEeiCta8rX3fxAA" target="_epfiF82iEeiCta8rX3fxAA" source="_epfiDc2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epfiDc2iEeiCta8rX3fxAA" name="WriteAll(TestRunner::outer).input(TestRunner::outer)" incoming="_epfh-82iEeiCta8rX3fxAA" outgoing="_epfiDM2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiDs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiD82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epfiEM2iEeiCta8rX3fxAA" name="Write(outer)" structuralFeature="_epe72M2iEeiCta8rX3fxAA" isReplaceAll="true">
                    <object xmi:id="_epfiEc2iEeiCta8rX3fxAA" name="Write(outer).object" incoming="_epfh_M2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiEs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiE82iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_epfiFM2iEeiCta8rX3fxAA" name="Write(outer).result" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiFc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiFs2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_epfiF82iEeiCta8rX3fxAA" name="Write(outer).value" incoming="_epfiDM2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiGM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiGc2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfiGs2iEeiCta8rX3fxAA" name="RightHandSide@51a0a889" outgoing="_epfh_c2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_epfiG82iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_epfiHM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epfh7c2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiHc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiHs2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epfiH82iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epfh7c2iEeiCta8rX3fxAA" outgoing="_epfh6M2iEeiCta8rX3fxAA _epfh7s2iEeiCta8rX3fxAA _epfh8M2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_epfiIM2iEeiCta8rX3fxAA" name="Call(TestRunner$initialization$1)" incoming="_epfh9s2iEeiCta8rX3fxAA" outgoing="_epfh782iEeiCta8rX3fxAA" operation="_epfjc82iEeiCta8rX3fxAA">
              <target xmi:id="_epfiIc2iEeiCta8rX3fxAA" name="Call(TestRunner$initialization$1).target" incoming="_epfh7s2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiIs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiI82iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epfiJM2iEeiCta8rX3fxAA" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_epe71c2iEeiCta8rX3fxAA">
              <object xmi:id="_epfiJc2iEeiCta8rX3fxAA" name="Read(TestRunner$initializationFlag$1).object" incoming="_epfh8M2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiJs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiJ82iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_epfiKM2iEeiCta8rX3fxAA" name="Read(TestRunner$initializationFlag$1).result" outgoing="_epfh8c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiKc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiKs2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epfiK82iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_epfiLM2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_epfh8c2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiLc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiLs2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_epfiL82iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_epfh8s2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiMM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiMc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfiMs2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_epfiM82iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_epfh882iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiNM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiNc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_epfiNs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_epfiN82iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_epfiOM2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_epfh8s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiOc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiOs2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_epfiO82iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_epfh9c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiPM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiPc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_epfiPs2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_epfh882iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiP82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiQM2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_epfiQc2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_epfh9M2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_epfiQs2iEeiCta8rX3fxAA" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_epfh9M2iEeiCta8rX3fxAA _epfh9c2iEeiCta8rX3fxAA" outgoing="_epfh9s2iEeiCta8rX3fxAA" decisionInputFlow="_epfh9c2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_epfh6c2iEeiCta8rX3fxAA" name="Input(outer)" outgoing="_epfh5s2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" parameter="_epfh4M2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_epfh6s2iEeiCta8rX3fxAA" name="Fork(outer)" incoming="_epfh5s2iEeiCta8rX3fxAA" outgoing="_epfh582iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_epfh682iEeiCta8rX3fxAA" name="Return" incoming="_epfh6M2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" parameter="_epfh482iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epfiQ82iEeiCta8rX3fxAA" name="run$method$1" visibility="private" specification="_epfje82iEeiCta8rX3fxAA" node="_epfiSM2iEeiCta8rX3fxAA _epfiSc2iEeiCta8rX3fxAA" group="_epfiSc2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_epfiRM2iEeiCta8rX3fxAA" name="test" type="_epdtUM2iEeiCta8rX3fxAA" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiRc2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiRs2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiR82iEeiCta8rX3fxAA" target="_epfiSM2iEeiCta8rX3fxAA" source="_epfiY82iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_epfiSc2iEeiCta8rX3fxAA" name="Body(run$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiSs2iEeiCta8rX3fxAA" target="_epfils2iEeiCta8rX3fxAA" source="_epfiaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfiS82iEeiCta8rX3fxAA" target="_epfilM2iEeiCta8rX3fxAA" source="_epfiZs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiTM2iEeiCta8rX3fxAA" target="_epfioM2iEeiCta8rX3fxAA" source="_epfiaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfiTc2iEeiCta8rX3fxAA" target="_epfimc2iEeiCta8rX3fxAA" source="_epfilM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiTs2iEeiCta8rX3fxAA" target="_epfisM2iEeiCta8rX3fxAA" source="_epfiaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfiT82iEeiCta8rX3fxAA" target="_epfiqc2iEeiCta8rX3fxAA" source="_epfimc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiUM2iEeiCta8rX3fxAA" target="_epfiwM2iEeiCta8rX3fxAA" source="_epfiaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfiUc2iEeiCta8rX3fxAA" target="_epfiuc2iEeiCta8rX3fxAA" source="_epfiqc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiUs2iEeiCta8rX3fxAA" target="_epfi0M2iEeiCta8rX3fxAA" source="_epfiaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfiU82iEeiCta8rX3fxAA" target="_epfiyc2iEeiCta8rX3fxAA" source="_epfiuc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiVM2iEeiCta8rX3fxAA" target="_epfi282iEeiCta8rX3fxAA" source="_epfiaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfiVc2iEeiCta8rX3fxAA" target="_epfi2c2iEeiCta8rX3fxAA" source="_epfiyc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiVs2iEeiCta8rX3fxAA" target="_epfi5c2iEeiCta8rX3fxAA" source="_epfiaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfiV82iEeiCta8rX3fxAA" target="_epfi3s2iEeiCta8rX3fxAA" source="_epfi2c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiWM2iEeiCta8rX3fxAA" target="_epfi9c2iEeiCta8rX3fxAA" source="_epfiaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfiWc2iEeiCta8rX3fxAA" target="_epfi7s2iEeiCta8rX3fxAA" source="_epfi3s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiWs2iEeiCta8rX3fxAA" target="_epfjAM2iEeiCta8rX3fxAA" source="_epfiaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfiW82iEeiCta8rX3fxAA" target="_epfi_s2iEeiCta8rX3fxAA" source="_epfi7s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiXM2iEeiCta8rX3fxAA" target="_epfjCs2iEeiCta8rX3fxAA" source="_epfiaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfiXc2iEeiCta8rX3fxAA" target="_epfjA82iEeiCta8rX3fxAA" source="_epfi_s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiXs2iEeiCta8rX3fxAA" target="_epfjGs2iEeiCta8rX3fxAA" source="_epfiaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfiX82iEeiCta8rX3fxAA" target="_epfjE82iEeiCta8rX3fxAA" source="_epfjA82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiYM2iEeiCta8rX3fxAA" target="_epfjJc2iEeiCta8rX3fxAA" source="_epfiaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfiYc2iEeiCta8rX3fxAA" target="_epfjI82iEeiCta8rX3fxAA" source="_epfjE82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiYs2iEeiCta8rX3fxAA" target="_epfiY82iEeiCta8rX3fxAA" source="_epfiaM2iEeiCta8rX3fxAA"/>
            <structuredNodeOutput xmi:id="_epfiY82iEeiCta8rX3fxAA" name="Output(test)" incoming="_epfiYs2iEeiCta8rX3fxAA" outgoing="_epfiR82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiZM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiZc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfiZs2iEeiCta8rX3fxAA" name="ExpressionStatement@6ec5e7e7" outgoing="_epfiS82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiZ82iEeiCta8rX3fxAA" target="_epfiaM2iEeiCta8rX3fxAA" source="_epfic82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_epfiaM2iEeiCta8rX3fxAA" name="Fork(test)@151f2e17" incoming="_epfiZ82iEeiCta8rX3fxAA" outgoing="_epfiSs2iEeiCta8rX3fxAA _epfiTM2iEeiCta8rX3fxAA _epfiTs2iEeiCta8rX3fxAA _epfiUM2iEeiCta8rX3fxAA _epfiUs2iEeiCta8rX3fxAA _epfiVM2iEeiCta8rX3fxAA _epfiVs2iEeiCta8rX3fxAA _epfiWM2iEeiCta8rX3fxAA _epfiWs2iEeiCta8rX3fxAA _epfiXM2iEeiCta8rX3fxAA _epfiXs2iEeiCta8rX3fxAA _epfiYM2iEeiCta8rX3fxAA _epfiYs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfiac2iEeiCta8rX3fxAA" name="RightHandSide@5086cb12">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfias2iEeiCta8rX3fxAA" name="InstanceCreationExpression@5086cb12">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfia82iEeiCta8rX3fxAA" target="_epfijs2iEeiCta8rX3fxAA" source="_epfid82iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfibM2iEeiCta8rX3fxAA" target="_epfii82iEeiCta8rX3fxAA" source="_epfijs2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfibc2iEeiCta8rX3fxAA" target="_epfihc2iEeiCta8rX3fxAA" source="_epfifM2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_epfibs2iEeiCta8rX3fxAA" target="_epfif82iEeiCta8rX3fxAA" source="_epfies2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_epfib82iEeiCta8rX3fxAA" target="_epfif82iEeiCta8rX3fxAA" source="_epfids2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epficM2iEeiCta8rX3fxAA" target="_epfij82iEeiCta8rX3fxAA" source="_epfigc2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epficc2iEeiCta8rX3fxAA" target="_epfikc2iEeiCta8rX3fxAA" source="_epfij82iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfics2iEeiCta8rX3fxAA" target="_epfic82iEeiCta8rX3fxAA" source="_epfij82iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_epfic82iEeiCta8rX3fxAA" name="Output(Output(Fork(Create(MyTest).result)))" incoming="_epfics2iEeiCta8rX3fxAA" outgoing="_epfiZ82iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfidM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfidc2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CreateObjectAction" xmi:id="_epfids2iEeiCta8rX3fxAA" name="Create(MyTest)" outgoing="_epfib82iEeiCta8rX3fxAA" classifier="_epdtUM2iEeiCta8rX3fxAA">
                    <result xmi:id="_epfid82iEeiCta8rX3fxAA" name="Create(MyTest).result" outgoing="_epfia82iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfieM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiec2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfies2iEeiCta8rX3fxAA" name="Tuple@4d96d46b" outgoing="_epfibs2iEeiCta8rX3fxAA">
                    <node xmi:type="uml:ReadSelfAction" xmi:id="_epfie82iEeiCta8rX3fxAA" name="ReadSelf">
                      <result xmi:id="_epfifM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epfibc2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfifc2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfifs2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfif82iEeiCta8rX3fxAA" name="Node(Call(MyTest))" incoming="_epfib82iEeiCta8rX3fxAA _epfibs2iEeiCta8rX3fxAA">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_epfigM2iEeiCta8rX3fxAA" target="_epfigc2iEeiCta8rX3fxAA" source="_epfijs2iEeiCta8rX3fxAA"/>
                    <structuredNodeOutput xmi:id="_epfigc2iEeiCta8rX3fxAA" name="Output(Fork(Create(MyTest).result))" incoming="_epfigM2iEeiCta8rX3fxAA" outgoing="_epficM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfigs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfig82iEeiCta8rX3fxAA" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallOperationAction" xmi:id="_epfihM2iEeiCta8rX3fxAA" name="Call(MyTest)" operation="_epe7yM2iEeiCta8rX3fxAA">
                      <argument xmi:id="_epfihc2iEeiCta8rX3fxAA" name="Call(MyTest).argument(tester)" incoming="_epfibc2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfihs2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfih82iEeiCta8rX3fxAA" value="1"/>
                      </argument>
                      <result xmi:id="_epfiiM2iEeiCta8rX3fxAA" name="Call(MyTest).result()" type="_epdtUM2iEeiCta8rX3fxAA">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiic2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiis2iEeiCta8rX3fxAA" value="1"/>
                      </result>
                      <target xmi:id="_epfii82iEeiCta8rX3fxAA" name="Call(MyTest).target" incoming="_epfibM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfijM2iEeiCta8rX3fxAA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfijc2iEeiCta8rX3fxAA" value="1"/>
                      </target>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_epfijs2iEeiCta8rX3fxAA" name="Fork(Create(MyTest).result)" incoming="_epfia82iEeiCta8rX3fxAA" outgoing="_epfibM2iEeiCta8rX3fxAA _epfigM2iEeiCta8rX3fxAA"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_epfij82iEeiCta8rX3fxAA" name="Fork(Output(Fork(Create(MyTest).result)))" incoming="_epficM2iEeiCta8rX3fxAA" outgoing="_epficc2iEeiCta8rX3fxAA _epfics2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_epfikM2iEeiCta8rX3fxAA" name="Start(MyTest)" isSynchronous="false">
                    <object xmi:id="_epfikc2iEeiCta8rX3fxAA" name="Start(MyTest).object" incoming="_epficc2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiks2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfik82iEeiCta8rX3fxAA" value="1"/>
                    </object>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfilM2iEeiCta8rX3fxAA" name="ExpressionStatement@340975ea" incoming="_epfiS82iEeiCta8rX3fxAA" outgoing="_epfiTc2iEeiCta8rX3fxAA">
              <node xmi:type="uml:SendSignalAction" xmi:id="_epfilc2iEeiCta8rX3fxAA" name="SendSignal(SignalTermination)" signal="_epdtTs2iEeiCta8rX3fxAA">
                <target xmi:id="_epfils2iEeiCta8rX3fxAA" name="SendSignal(SignalTermination).target" incoming="_epfiSs2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfil82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfimM2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfimc2iEeiCta8rX3fxAA" name="ExpressionStatement@4a5b1a27" incoming="_epfiTc2iEeiCta8rX3fxAA" outgoing="_epfiT82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfims2iEeiCta8rX3fxAA" target="_epfinc2iEeiCta8rX3fxAA" source="_epfipc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epfim82iEeiCta8rX3fxAA" target="_epfinM2iEeiCta8rX3fxAA" source="_epfio82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_epfinM2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival)" incoming="_epfim82iEeiCta8rX3fxAA" signal="_epdtSs2iEeiCta8rX3fxAA">
                <argument xmi:id="_epfinc2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_epfims2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfins2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfin82iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <target xmi:id="_epfioM2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).target" incoming="_epfiTM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfioc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfios2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfio82iEeiCta8rX3fxAA" name="Tuple@23147891" outgoing="_epfim82iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfipM2iEeiCta8rX3fxAA" name="Value(&quot;Arrival1&quot;)">
                  <result xmi:id="_epfipc2iEeiCta8rX3fxAA" name="Value(&quot;Arrival1&quot;).result" outgoing="_epfims2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfips2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfip82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epfiqM2iEeiCta8rX3fxAA" value="Arrival1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfiqc2iEeiCta8rX3fxAA" name="ExpressionStatement@721082d7" incoming="_epfiT82iEeiCta8rX3fxAA" outgoing="_epfiUc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiqs2iEeiCta8rX3fxAA" target="_epfirc2iEeiCta8rX3fxAA" source="_epfitc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epfiq82iEeiCta8rX3fxAA" target="_epfirM2iEeiCta8rX3fxAA" source="_epfis82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_epfirM2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival)" incoming="_epfiq82iEeiCta8rX3fxAA" signal="_epdtSs2iEeiCta8rX3fxAA">
                <argument xmi:id="_epfirc2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_epfiqs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfirs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfir82iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <target xmi:id="_epfisM2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).target" incoming="_epfiTs2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfisc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiss2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfis82iEeiCta8rX3fxAA" name="Tuple@70fc3b75" outgoing="_epfiq82iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfitM2iEeiCta8rX3fxAA" name="Value(&quot;Arrival2&quot;)">
                  <result xmi:id="_epfitc2iEeiCta8rX3fxAA" name="Value(&quot;Arrival2&quot;).result" outgoing="_epfiqs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfits2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfit82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epfiuM2iEeiCta8rX3fxAA" value="Arrival2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfiuc2iEeiCta8rX3fxAA" name="ExpressionStatement@3ba23ae0" incoming="_epfiUc2iEeiCta8rX3fxAA" outgoing="_epfiU82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfius2iEeiCta8rX3fxAA" target="_epfivc2iEeiCta8rX3fxAA" source="_epfixc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epfiu82iEeiCta8rX3fxAA" target="_epfivM2iEeiCta8rX3fxAA" source="_epfiw82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_epfivM2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival)" incoming="_epfiu82iEeiCta8rX3fxAA" signal="_epdtSs2iEeiCta8rX3fxAA">
                <argument xmi:id="_epfivc2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_epfius2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfivs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiv82iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <target xmi:id="_epfiwM2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).target" incoming="_epfiUM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfiwc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiws2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfiw82iEeiCta8rX3fxAA" name="Tuple@3be1ad3a" outgoing="_epfiu82iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfixM2iEeiCta8rX3fxAA" name="Value(&quot;Arrival3&quot;)">
                  <result xmi:id="_epfixc2iEeiCta8rX3fxAA" name="Value(&quot;Arrival3&quot;).result" outgoing="_epfius2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfixs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfix82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epfiyM2iEeiCta8rX3fxAA" value="Arrival3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfiyc2iEeiCta8rX3fxAA" name="ExpressionStatement@27fba118" incoming="_epfiU82iEeiCta8rX3fxAA" outgoing="_epfiVc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfiys2iEeiCta8rX3fxAA" target="_epfizc2iEeiCta8rX3fxAA" source="_epfi1c2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epfiy82iEeiCta8rX3fxAA" target="_epfizM2iEeiCta8rX3fxAA" source="_epfi082iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_epfizM2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival)" incoming="_epfiy82iEeiCta8rX3fxAA" signal="_epdtSs2iEeiCta8rX3fxAA">
                <argument xmi:id="_epfizc2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_epfiys2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfizs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfiz82iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <target xmi:id="_epfi0M2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).target" incoming="_epfiUs2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfi0c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfi0s2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfi082iEeiCta8rX3fxAA" name="Tuple@395bf16b" outgoing="_epfiy82iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfi1M2iEeiCta8rX3fxAA" name="Value(&quot;Arrival4&quot;)">
                  <result xmi:id="_epfi1c2iEeiCta8rX3fxAA" name="Value(&quot;Arrival4&quot;).result" outgoing="_epfiys2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfi1s2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfi182iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epfi2M2iEeiCta8rX3fxAA" value="Arrival4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfi2c2iEeiCta8rX3fxAA" name="ExpressionStatement@40e9b022" incoming="_epfiVc2iEeiCta8rX3fxAA" outgoing="_epfiV82iEeiCta8rX3fxAA">
              <node xmi:type="uml:SendSignalAction" xmi:id="_epfi2s2iEeiCta8rX3fxAA" name="SendSignal(SignalTermination)" signal="_epdtTs2iEeiCta8rX3fxAA">
                <target xmi:id="_epfi282iEeiCta8rX3fxAA" name="SendSignal(SignalTermination).target" incoming="_epfiVM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfi3M2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfi3c2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfi3s2iEeiCta8rX3fxAA" name="ExpressionStatement@69f82d9f" incoming="_epfiV82iEeiCta8rX3fxAA" outgoing="_epfiWc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfi382iEeiCta8rX3fxAA" target="_epfi4s2iEeiCta8rX3fxAA" source="_epfi6s2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epfi4M2iEeiCta8rX3fxAA" target="_epfi4c2iEeiCta8rX3fxAA" source="_epfi6M2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_epfi4c2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival)" incoming="_epfi4M2iEeiCta8rX3fxAA" signal="_epdtSs2iEeiCta8rX3fxAA">
                <argument xmi:id="_epfi4s2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_epfi382iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfi482iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfi5M2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <target xmi:id="_epfi5c2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).target" incoming="_epfiVs2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfi5s2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfi582iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfi6M2iEeiCta8rX3fxAA" name="Tuple@462bbb2c" outgoing="_epfi4M2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfi6c2iEeiCta8rX3fxAA" name="Value(&quot;Arrival5&quot;)">
                  <result xmi:id="_epfi6s2iEeiCta8rX3fxAA" name="Value(&quot;Arrival5&quot;).result" outgoing="_epfi382iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfi682iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfi7M2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epfi7c2iEeiCta8rX3fxAA" value="Arrival5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfi7s2iEeiCta8rX3fxAA" name="ExpressionStatement@6818366a" incoming="_epfiWc2iEeiCta8rX3fxAA" outgoing="_epfiW82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfi782iEeiCta8rX3fxAA" target="_epfi8s2iEeiCta8rX3fxAA" source="_epfi-s2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epfi8M2iEeiCta8rX3fxAA" target="_epfi8c2iEeiCta8rX3fxAA" source="_epfi-M2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_epfi8c2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival)" incoming="_epfi8M2iEeiCta8rX3fxAA" signal="_epdtSs2iEeiCta8rX3fxAA">
                <argument xmi:id="_epfi8s2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_epfi782iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfi882iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfi9M2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <target xmi:id="_epfi9c2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).target" incoming="_epfiWM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfi9s2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfi982iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfi-M2iEeiCta8rX3fxAA" name="Tuple@5fea7c5c" outgoing="_epfi8M2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfi-c2iEeiCta8rX3fxAA" name="Value(&quot;Arrival6&quot;)">
                  <result xmi:id="_epfi-s2iEeiCta8rX3fxAA" name="Value(&quot;Arrival6&quot;).result" outgoing="_epfi782iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfi-82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfi_M2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epfi_c2iEeiCta8rX3fxAA" value="Arrival6">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfi_s2iEeiCta8rX3fxAA" name="ExpressionStatement@44f1a8c0" incoming="_epfiW82iEeiCta8rX3fxAA" outgoing="_epfiXc2iEeiCta8rX3fxAA">
              <node xmi:type="uml:SendSignalAction" xmi:id="_epfi_82iEeiCta8rX3fxAA" name="SendSignal(SignalTermination)" signal="_epdtTs2iEeiCta8rX3fxAA">
                <target xmi:id="_epfjAM2iEeiCta8rX3fxAA" name="SendSignal(SignalTermination).target" incoming="_epfiWs2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjAc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjAs2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfjA82iEeiCta8rX3fxAA" name="ExpressionStatement@3e7ea7f7" incoming="_epfiXc2iEeiCta8rX3fxAA" outgoing="_epfiX82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjBM2iEeiCta8rX3fxAA" target="_epfjB82iEeiCta8rX3fxAA" source="_epfjD82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epfjBc2iEeiCta8rX3fxAA" target="_epfjBs2iEeiCta8rX3fxAA" source="_epfjDc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_epfjBs2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival)" incoming="_epfjBc2iEeiCta8rX3fxAA" signal="_epdtSs2iEeiCta8rX3fxAA">
                <argument xmi:id="_epfjB82iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_epfjBM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjCM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjCc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <target xmi:id="_epfjCs2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).target" incoming="_epfiXM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjC82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjDM2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfjDc2iEeiCta8rX3fxAA" name="Tuple@16a733ff" outgoing="_epfjBc2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfjDs2iEeiCta8rX3fxAA" name="Value(&quot;Arrival7&quot;)">
                  <result xmi:id="_epfjD82iEeiCta8rX3fxAA" name="Value(&quot;Arrival7&quot;).result" outgoing="_epfjBM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjEM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjEc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epfjEs2iEeiCta8rX3fxAA" value="Arrival7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfjE82iEeiCta8rX3fxAA" name="ExpressionStatement@4c24aa94" incoming="_epfiX82iEeiCta8rX3fxAA" outgoing="_epfiYc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjFM2iEeiCta8rX3fxAA" target="_epfjF82iEeiCta8rX3fxAA" source="_epfjH82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epfjFc2iEeiCta8rX3fxAA" target="_epfjFs2iEeiCta8rX3fxAA" source="_epfjHc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_epfjFs2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival)" incoming="_epfjFc2iEeiCta8rX3fxAA" signal="_epdtSs2iEeiCta8rX3fxAA">
                <argument xmi:id="_epfjF82iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).argument(name)" incoming="_epfjFM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjGM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjGc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <target xmi:id="_epfjGs2iEeiCta8rX3fxAA" name="SendSignal(SignalNewArrival).target" incoming="_epfiXs2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjG82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjHM2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfjHc2iEeiCta8rX3fxAA" name="Tuple@3719d096" outgoing="_epfjFc2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfjHs2iEeiCta8rX3fxAA" name="Value(&quot;Arrival8&quot;)">
                  <result xmi:id="_epfjH82iEeiCta8rX3fxAA" name="Value(&quot;Arrival8&quot;).result" outgoing="_epfjFM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjIM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjIc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epfjIs2iEeiCta8rX3fxAA" value="Arrival8">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfjI82iEeiCta8rX3fxAA" name="ExpressionStatement@6d40c5df" incoming="_epfiYc2iEeiCta8rX3fxAA">
              <node xmi:type="uml:SendSignalAction" xmi:id="_epfjJM2iEeiCta8rX3fxAA" name="SendSignal(SignalTermination)" signal="_epdtTs2iEeiCta8rX3fxAA">
                <target xmi:id="_epfjJc2iEeiCta8rX3fxAA" name="SendSignal(SignalTermination).target" incoming="_epfiYM2iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjJs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjJ82iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_epfiSM2iEeiCta8rX3fxAA" name="Output(test)" incoming="_epfiR82iEeiCta8rX3fxAA" type="_epdtUM2iEeiCta8rX3fxAA" parameter="_epfiRM2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epfjKM2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_epfjf82iEeiCta8rX3fxAA" node="_epfjKc2iEeiCta8rX3fxAA" group="_epfjKc2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_epfjKc2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epfjKs2iEeiCta8rX3fxAA" name="TestRunner$initialization$1" visibility="private" specification="_epfjc82iEeiCta8rX3fxAA" node="_epfjK82iEeiCta8rX3fxAA" group="_epfjK82iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_epfjK82iEeiCta8rX3fxAA" name="Body(TestRunner$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjLM2iEeiCta8rX3fxAA" target="_epfjOs2iEeiCta8rX3fxAA" source="_epfjN82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjLc2iEeiCta8rX3fxAA" target="_epfjRs2iEeiCta8rX3fxAA" source="_epfjOs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjLs2iEeiCta8rX3fxAA" target="_epfjVc2iEeiCta8rX3fxAA" source="_epfjOs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjL82iEeiCta8rX3fxAA" target="_epfjXM2iEeiCta8rX3fxAA" source="_epfjWM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjMM2iEeiCta8rX3fxAA" target="_epfjaM2iEeiCta8rX3fxAA" source="_epfjX82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjMc2iEeiCta8rX3fxAA" target="_epfjbs2iEeiCta8rX3fxAA" source="_epfjY82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfjMs2iEeiCta8rX3fxAA" target="_epfjcs2iEeiCta8rX3fxAA" source="_epfjcc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjM82iEeiCta8rX3fxAA" target="_epfjcs2iEeiCta8rX3fxAA" source="_epfja82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epfjNM2iEeiCta8rX3fxAA" target="_epfjO82iEeiCta8rX3fxAA" source="_epfjcs2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epfjNc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_epfjNs2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_epfjN82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epfjLM2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjOM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjOc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epfjOs2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epfjLM2iEeiCta8rX3fxAA" outgoing="_epfjLc2iEeiCta8rX3fxAA _epfjLs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfjO82iEeiCta8rX3fxAA" name="Initialization" incoming="_epfjNM2iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfjPM2iEeiCta8rX3fxAA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjPc2iEeiCta8rX3fxAA" target="_epfjU82iEeiCta8rX3fxAA" source="_epfjP82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfjPs2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_epfjP82iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_epfjPc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjQM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjQc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_epfjQs2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_epfjQ82iEeiCta8rX3fxAA" name="Iterate(Write(TestRunner$initializationFlag$1))" inputElement="_epfjU82iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjRM2iEeiCta8rX3fxAA" target="_epfjUM2iEeiCta8rX3fxAA" source="_epfjU82iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjRc2iEeiCta8rX3fxAA" target="_epfjSs2iEeiCta8rX3fxAA" source="_epfjRs2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epfjRs2iEeiCta8rX3fxAA" name="Iterate(Write(TestRunner$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_epfjLc2iEeiCta8rX3fxAA" outgoing="_epfjRc2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjR82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjSM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epfjSc2iEeiCta8rX3fxAA" name="Write(TestRunner$initializationFlag$1)" structuralFeature="_epe71c2iEeiCta8rX3fxAA">
                    <object xmi:id="_epfjSs2iEeiCta8rX3fxAA" name="Write(TestRunner$initializationFlag$1).object" incoming="_epfjRc2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjS82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjTM2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_epfjTc2iEeiCta8rX3fxAA" name="Write(TestRunner$initializationFlag$1).result" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjTs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjT82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_epfjUM2iEeiCta8rX3fxAA" name="Write(TestRunner$initializationFlag$1).value" incoming="_epfjRM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjUc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjUs2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_epfjU82iEeiCta8rX3fxAA" name="Iterate(Write(TestRunner$initializationFlag$1)).inputElement" incoming="_epfjPc2iEeiCta8rX3fxAA" outgoing="_epfjRM2iEeiCta8rX3fxAA" regionAsInput="_epfjQ82iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epfjVM2iEeiCta8rX3fxAA" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_epe71c2iEeiCta8rX3fxAA">
              <object xmi:id="_epfjVc2iEeiCta8rX3fxAA" name="Read(TestRunner$initializationFlag$1).object" incoming="_epfjLs2iEeiCta8rX3fxAA" type="_epe71M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjVs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjV82iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_epfjWM2iEeiCta8rX3fxAA" name="Read(TestRunner$initializationFlag$1).result" outgoing="_epfjL82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjWc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjWs2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epfjW82iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_epfjXM2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_epfjL82iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjXc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjXs2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_epfjX82iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_epfjMM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjYM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjYc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epfjYs2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_epfjY82iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_epfjMc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjZM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjZc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_epfjZs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_epfjZ82iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_epfjaM2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_epfjMM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjac2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjas2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_epfja82iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_epfjM82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjbM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjbc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_epfjbs2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_epfjMc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjb82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjcM2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_epfjcc2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_epfjMs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_epfjcs2iEeiCta8rX3fxAA" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_epfjMs2iEeiCta8rX3fxAA _epfjM82iEeiCta8rX3fxAA" outgoing="_epfjNM2iEeiCta8rX3fxAA" decisionInputFlow="_epfjM82iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_epfjc82iEeiCta8rX3fxAA" name="TestRunner$initialization$1" visibility="protected" method="_epfjKs2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_epfjdM2iEeiCta8rX3fxAA" name="TestRunner" visibility="public" method="_epfh382iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_epfjdc2iEeiCta8rX3fxAA" name="outer" visibility="package" type="_epfjk82iEeiCta8rX3fxAA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjds2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjd82iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_epfjeM2iEeiCta8rX3fxAA" name="" visibility="package" type="_epe71M2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjec2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjes2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_epfje82iEeiCta8rX3fxAA" name="run" visibility="private" method="_epfiQ82iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_epfjfM2iEeiCta8rX3fxAA" name="test" visibility="package" type="_epdtUM2iEeiCta8rX3fxAA" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjfc2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjfs2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_epfjf82iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_epfjKM2iEeiCta8rX3fxAA"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_epfjgM2iEeiCta8rX3fxAA" name="Start" visibility="public"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_epfjgc2iEeiCta8rX3fxAA" name="Continue" visibility="public"/>
        <ownedReception xmi:id="_epfjgs2iEeiCta8rX3fxAA" name="Start" signal="_epfjgM2iEeiCta8rX3fxAA"/>
        <ownedReception xmi:id="_epfjg82iEeiCta8rX3fxAA" name="Continue" signal="_epfjgc2iEeiCta8rX3fxAA"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjhM2iEeiCta8rX3fxAA" name="Event(SignalNewArrival)" visibility="public" signal="_epdtSs2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjhc2iEeiCta8rX3fxAA" name="Event(SignalTermination)" visibility="public" signal="_epdtTs2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjhs2iEeiCta8rX3fxAA" name="Event(SignalNewArrival)" visibility="public" signal="_epdtSs2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjh82iEeiCta8rX3fxAA" name="Event(SignalTermination)" visibility="public" signal="_epdtTs2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjiM2iEeiCta8rX3fxAA" name="Event(SignalNewArrival)" visibility="public" signal="_epdtSs2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjic2iEeiCta8rX3fxAA" name="Event(SignalNewArrival)" visibility="public" signal="_epdtSs2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjis2iEeiCta8rX3fxAA" name="Event(SignalNewArrival)" visibility="public" signal="_epdtSs2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfji82iEeiCta8rX3fxAA" name="Event(SignalTermination)" visibility="public" signal="_epdtTs2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjjM2iEeiCta8rX3fxAA" name="Event(SignalNewArrival)" visibility="public" signal="_epdtSs2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjjc2iEeiCta8rX3fxAA" name="Event(SignalTermination)" visibility="public" signal="_epdtTs2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjjs2iEeiCta8rX3fxAA" name="Event(SignalNewArrival)" visibility="public" signal="_epdtSs2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjj82iEeiCta8rX3fxAA" name="Event(SignalTermination)" visibility="public" signal="_epdtTs2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjkM2iEeiCta8rX3fxAA" name="Event(SignalTermination)" visibility="public" signal="_epdtTs2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjkc2iEeiCta8rX3fxAA" name="Event(Start)" visibility="public" signal="_epfjgM2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_epfjks2iEeiCta8rX3fxAA" name="Event(Continue)" visibility="public" signal="_epfjgc2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_epfjk82iEeiCta8rX3fxAA" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_epfjlM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_epfjlc2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_epfjls2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_epfjl82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_epfjmM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_epfjmc2iEeiCta8rX3fxAA" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjms2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjm82iEeiCta8rX3fxAA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_epfjnM2iEeiCta8rX3fxAA" name="tester" visibility="private" type="_epgIj82iEeiCta8rX3fxAA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjnc2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjns2iEeiCta8rX3fxAA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_epfjn82iEeiCta8rX3fxAA" name="Test$method$1" visibility="private" specification="_epgIgs2iEeiCta8rX3fxAA" node="_epfjqc2iEeiCta8rX3fxAA _epfjqs2iEeiCta8rX3fxAA _epfjq82iEeiCta8rX3fxAA _epfjrM2iEeiCta8rX3fxAA" group="_epfjrM2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_epfjoM2iEeiCta8rX3fxAA" name="tester" type="_epgIj82iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjoc2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjos2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_epfjo82iEeiCta8rX3fxAA" name="" type="_epfjk82iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjpM2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjpc2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjps2iEeiCta8rX3fxAA" target="_epfjqs2iEeiCta8rX3fxAA" source="_epfjqc2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjp82iEeiCta8rX3fxAA" target="_epfjys2iEeiCta8rX3fxAA" source="_epfjqs2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjqM2iEeiCta8rX3fxAA" target="_epfjq82iEeiCta8rX3fxAA" source="_epfj5s2iEeiCta8rX3fxAA"/>
        <structuredNode xmi:id="_epfjrM2iEeiCta8rX3fxAA" name="Body(Test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjrc2iEeiCta8rX3fxAA" target="_epfj5s2iEeiCta8rX3fxAA" source="_epfj482iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjrs2iEeiCta8rX3fxAA" target="_epfj6M2iEeiCta8rX3fxAA" source="_epfj5s2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epfjr82iEeiCta8rX3fxAA" target="_epfjuM2iEeiCta8rX3fxAA" source="_epfj582iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjsM2iEeiCta8rX3fxAA" target="_epfj7M2iEeiCta8rX3fxAA" source="_epfj5s2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjsc2iEeiCta8rX3fxAA" target="_epfj882iEeiCta8rX3fxAA" source="_epfj782iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjss2iEeiCta8rX3fxAA" target="_epgH6c2iEeiCta8rX3fxAA" source="_epgH4M2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjs82iEeiCta8rX3fxAA" target="_epgH782iEeiCta8rX3fxAA" source="_epgH5M2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epfjtM2iEeiCta8rX3fxAA" target="_epgH882iEeiCta8rX3fxAA" source="_epgH8s2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjtc2iEeiCta8rX3fxAA" target="_epgH882iEeiCta8rX3fxAA" source="_epgH7M2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epfjts2iEeiCta8rX3fxAA" target="_epfj582iEeiCta8rX3fxAA" source="_epgH882iEeiCta8rX3fxAA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_epfjt82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfjuM2iEeiCta8rX3fxAA" name="Body" incoming="_epfjr82iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfjuc2iEeiCta8rX3fxAA" name="ExpressionStatement@33e5ffc6">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjus2iEeiCta8rX3fxAA" target="_epfjxM2iEeiCta8rX3fxAA" source="_epfjwM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfju82iEeiCta8rX3fxAA" target="_epfjzc2iEeiCta8rX3fxAA" source="_epfjys2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjvM2iEeiCta8rX3fxAA" target="_epfj082iEeiCta8rX3fxAA" source="_epfjx82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epfjvc2iEeiCta8rX3fxAA" target="_epfjvs2iEeiCta8rX3fxAA" source="_epfj4c2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfjvs2iEeiCta8rX3fxAA" name="Expression(LeftHandSide@2f07d29)" incoming="_epfjvc2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_epfjv82iEeiCta8rX3fxAA" name="ReadSelf">
                  <result xmi:id="_epfjwM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epfjus2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjwc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjws2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_epfjw82iEeiCta8rX3fxAA" name="Clear(tester)" structuralFeature="_epfjnM2iEeiCta8rX3fxAA">
                <object xmi:id="_epfjxM2iEeiCta8rX3fxAA" name="Clear(tester).object" incoming="_epfjus2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjxc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjxs2iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_epfjx82iEeiCta8rX3fxAA" name="Clear(tester).result" outgoing="_epfjvM2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjyM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjyc2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_epfjys2iEeiCta8rX3fxAA" name="Fork(LeftHandSide@2f07d29)" incoming="_epfjp82iEeiCta8rX3fxAA" outgoing="_epfju82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfjy82iEeiCta8rX3fxAA" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epfjzM2iEeiCta8rX3fxAA" target="_epfj4M2iEeiCta8rX3fxAA" source="_epfjzc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epfjzc2iEeiCta8rX3fxAA" name="WriteAll(Test::tester).input(Test::tester)" incoming="_epfju82iEeiCta8rX3fxAA" outgoing="_epfjzM2iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfjzs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfjz82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_epfj0M2iEeiCta8rX3fxAA" name="Iterate(Write(tester))" inputElement="_epfj4M2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfj0c2iEeiCta8rX3fxAA" target="_epfj3c2iEeiCta8rX3fxAA" source="_epfj4M2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epfj0s2iEeiCta8rX3fxAA" target="_epfj182iEeiCta8rX3fxAA" source="_epfj082iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epfj082iEeiCta8rX3fxAA" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_epfjvM2iEeiCta8rX3fxAA" outgoing="_epfj0s2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfj1M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfj1c2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epfj1s2iEeiCta8rX3fxAA" name="Write(tester)" structuralFeature="_epfjnM2iEeiCta8rX3fxAA">
                    <object xmi:id="_epfj182iEeiCta8rX3fxAA" name="Write(tester).object" incoming="_epfj0s2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfj2M2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfj2c2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_epfj2s2iEeiCta8rX3fxAA" name="Write(tester).result" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfj282iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfj3M2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_epfj3c2iEeiCta8rX3fxAA" name="Write(tester).value" incoming="_epfj0c2iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfj3s2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfj382iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_epfj4M2iEeiCta8rX3fxAA" name="Iterate(Write(tester)).inputElement" incoming="_epfjzM2iEeiCta8rX3fxAA" outgoing="_epfj0c2iEeiCta8rX3fxAA" regionAsInput="_epfj0M2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epfj4c2iEeiCta8rX3fxAA" name="RightHandSide@6d743923" outgoing="_epfjvc2iEeiCta8rX3fxAA"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_epfj4s2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_epfj482iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epfjrc2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfj5M2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfj5c2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_epfj5s2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epfjrc2iEeiCta8rX3fxAA" outgoing="_epfjqM2iEeiCta8rX3fxAA _epfjrs2iEeiCta8rX3fxAA _epfjsM2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_epfj582iEeiCta8rX3fxAA" name="Call(Test$initialization$1)" incoming="_epfjts2iEeiCta8rX3fxAA" outgoing="_epfjr82iEeiCta8rX3fxAA" operation="_epgIgc2iEeiCta8rX3fxAA">
            <target xmi:id="_epfj6M2iEeiCta8rX3fxAA" name="Call(Test$initialization$1).target" incoming="_epfjrs2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfj6c2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfj6s2iEeiCta8rX3fxAA" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epfj682iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1)" structuralFeature="_epfjmc2iEeiCta8rX3fxAA">
            <object xmi:id="_epfj7M2iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1).object" incoming="_epfjsM2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfj7c2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfj7s2iEeiCta8rX3fxAA" value="1"/>
            </object>
            <result xmi:id="_epfj782iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1).result" outgoing="_epfjsc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfj8M2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfj8c2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_epfj8s2iEeiCta8rX3fxAA" name="Call(ListSize)">
            <argument xmi:id="_epfj882iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_epfjsc2iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epfj9M2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epfj9c2iEeiCta8rX3fxAA" value="*"/>
            </argument>
            <result xmi:id="_epgH4M2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_epfjss2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgH4c2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgH4s2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgH482iEeiCta8rX3fxAA" name="Value(0)">
            <result xmi:id="_epgH5M2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_epfjs82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgH5c2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgH5s2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_epgH582iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_epgH6M2iEeiCta8rX3fxAA" name="Test(Size==0)">
            <first xmi:id="_epgH6c2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_epfjss2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgH6s2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgH682iEeiCta8rX3fxAA" value="1"/>
            </first>
            <result xmi:id="_epgH7M2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_epfjtc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgH7c2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgH7s2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <second xmi:id="_epgH782iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_epfjs82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgH8M2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgH8c2iEeiCta8rX3fxAA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_epgH8s2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_epfjtM2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_epgH882iEeiCta8rX3fxAA" name="Decision(Test(Test$initializationFlag$1))" incoming="_epfjtM2iEeiCta8rX3fxAA _epfjtc2iEeiCta8rX3fxAA" outgoing="_epfjts2iEeiCta8rX3fxAA" decisionInputFlow="_epfjtc2iEeiCta8rX3fxAA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_epfjqc2iEeiCta8rX3fxAA" name="Input(tester)" outgoing="_epfjps2iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" parameter="_epfjoM2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_epfjqs2iEeiCta8rX3fxAA" name="Fork(tester)" incoming="_epfjps2iEeiCta8rX3fxAA" outgoing="_epfjp82iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_epfjq82iEeiCta8rX3fxAA" name="Return" incoming="_epfjqM2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" parameter="_epfjo82iEeiCta8rX3fxAA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_epgH9M2iEeiCta8rX3fxAA" name="done$method$1" visibility="private" specification="_epgIic2iEeiCta8rX3fxAA" node="_epgH-s2iEeiCta8rX3fxAA _epgH-82iEeiCta8rX3fxAA _epgH_M2iEeiCta8rX3fxAA" group="_epgH_M2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_epgH9c2iEeiCta8rX3fxAA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgH9s2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgH982iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epgH-M2iEeiCta8rX3fxAA" target="_epgH-82iEeiCta8rX3fxAA" source="_epgH-s2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epgH-c2iEeiCta8rX3fxAA" target="_epgIAM2iEeiCta8rX3fxAA" source="_epgH-82iEeiCta8rX3fxAA"/>
        <structuredNode xmi:id="_epgH_M2iEeiCta8rX3fxAA" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_epgH_c2iEeiCta8rX3fxAA" target="_epgIBs2iEeiCta8rX3fxAA" source="_epgH_s2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgH_s2iEeiCta8rX3fxAA" name="ExpressionStatement@6ede0b49" outgoing="_epgH_c2iEeiCta8rX3fxAA">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgH_82iEeiCta8rX3fxAA" name="Call(WriteLine)">
              <argument xmi:id="_epgIAM2iEeiCta8rX3fxAA" name="Call(WriteLine).argument(value)" incoming="_epgH-c2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIAc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIAs2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_epgIA82iEeiCta8rX3fxAA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIBM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIBc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgIBs2iEeiCta8rX3fxAA" name="ExpressionStatement@18fcfe51" incoming="_epgH_c2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIB82iEeiCta8rX3fxAA" target="_epgID82iEeiCta8rX3fxAA" source="_epgIG82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgICM2iEeiCta8rX3fxAA" target="_epgICc2iEeiCta8rX3fxAA" source="_epgIEM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_epgICc2iEeiCta8rX3fxAA" name="Collect(SendSignal(Continue))" incoming="_epgICM2iEeiCta8rX3fxAA" mode="parallel" inputElement="_epgID82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgICs2iEeiCta8rX3fxAA" target="_epgIDM2iEeiCta8rX3fxAA" source="_epgID82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_epgIC82iEeiCta8rX3fxAA" name="SendSignal(Continue)" signal="_epgJH82iEeiCta8rX3fxAA">
                <target xmi:id="_epgIDM2iEeiCta8rX3fxAA" name="SendSignal(Continue).target" incoming="_epgICs2iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIDc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIDs2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_epgID82iEeiCta8rX3fxAA" name="Collect(SendSignal(Continue)).inputElement" incoming="_epgIB82iEeiCta8rX3fxAA" outgoing="_epgICs2iEeiCta8rX3fxAA" regionAsInput="_epgICc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgIEM2iEeiCta8rX3fxAA" name="Feature(Read(tester).result)" outgoing="_epgICM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIEc2iEeiCta8rX3fxAA" target="_epgIHs2iEeiCta8rX3fxAA" source="_epgIFM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIEs2iEeiCta8rX3fxAA" target="_epgIGM2iEeiCta8rX3fxAA" source="_epgIHs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_epgIE82iEeiCta8rX3fxAA" name="ReadSelf">
                <result xmi:id="_epgIFM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epgIEc2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIFc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIFs2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epgIF82iEeiCta8rX3fxAA" name="Read(tester)" structuralFeature="_epfjnM2iEeiCta8rX3fxAA">
                <object xmi:id="_epgIGM2iEeiCta8rX3fxAA" name="Read(tester).object" incoming="_epgIEs2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIGc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIGs2iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_epgIG82iEeiCta8rX3fxAA" name="Read(tester).result" outgoing="_epgIB82iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIHM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIHc2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_epgIHs2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epgIEc2iEeiCta8rX3fxAA" outgoing="_epgIEs2iEeiCta8rX3fxAA"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_epgH-s2iEeiCta8rX3fxAA" name="Input(message)" outgoing="_epgH-M2iEeiCta8rX3fxAA" parameter="_epgH9c2iEeiCta8rX3fxAA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_epgH-82iEeiCta8rX3fxAA" name="Fork(message)" incoming="_epgH-M2iEeiCta8rX3fxAA" outgoing="_epgH-c2iEeiCta8rX3fxAA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_epgIH82iEeiCta8rX3fxAA" name="done$method$2" visibility="private" specification="_epgIjc2iEeiCta8rX3fxAA" node="_epgIIM2iEeiCta8rX3fxAA" group="_epgIIM2iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_epgIIM2iEeiCta8rX3fxAA" name="Body(done$method$2)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgIIc2iEeiCta8rX3fxAA" name="ExpressionStatement@3ecffcd1">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIIs2iEeiCta8rX3fxAA" target="_epgIJs2iEeiCta8rX3fxAA" source="_epgILs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgII82iEeiCta8rX3fxAA" target="_epgIJc2iEeiCta8rX3fxAA" source="_epgILM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIJM2iEeiCta8rX3fxAA" target="_epgIKc2iEeiCta8rX3fxAA" source="_epgIM82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_epgIJc2iEeiCta8rX3fxAA" name="Call(done)" incoming="_epgII82iEeiCta8rX3fxAA" operation="_epgIic2iEeiCta8rX3fxAA">
              <argument xmi:id="_epgIJs2iEeiCta8rX3fxAA" name="Call(done).argument(message)" incoming="_epgIIs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIJ82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIKM2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <target xmi:id="_epgIKc2iEeiCta8rX3fxAA" name="Call(done).target" incoming="_epgIJM2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIKs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIK82iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgILM2iEeiCta8rX3fxAA" name="Tuple@381b699c" outgoing="_epgII82iEeiCta8rX3fxAA">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgILc2iEeiCta8rX3fxAA" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_epgILs2iEeiCta8rX3fxAA" name="Value(&quot;Done.&quot;).result" outgoing="_epgIIs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIL82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIMM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_epgIMc2iEeiCta8rX3fxAA" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_epgIMs2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_epgIM82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epgIJM2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgINM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgINc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_epgINs2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_epgIjs2iEeiCta8rX3fxAA" node="_epgIN82iEeiCta8rX3fxAA" group="_epgIN82iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_epgIN82iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_epgIOM2iEeiCta8rX3fxAA" name="Test$initialization$1" visibility="private" specification="_epgIgc2iEeiCta8rX3fxAA" node="_epgIOc2iEeiCta8rX3fxAA" group="_epgIOc2iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_epgIOc2iEeiCta8rX3fxAA" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIOs2iEeiCta8rX3fxAA" target="_epgISM2iEeiCta8rX3fxAA" source="_epgIRc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIO82iEeiCta8rX3fxAA" target="_epgIVM2iEeiCta8rX3fxAA" source="_epgISM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIPM2iEeiCta8rX3fxAA" target="_epgIY82iEeiCta8rX3fxAA" source="_epgISM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIPc2iEeiCta8rX3fxAA" target="_epgIas2iEeiCta8rX3fxAA" source="_epgIZs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIPs2iEeiCta8rX3fxAA" target="_epgIds2iEeiCta8rX3fxAA" source="_epgIbc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIP82iEeiCta8rX3fxAA" target="_epgIfM2iEeiCta8rX3fxAA" source="_epgIcc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epgIQM2iEeiCta8rX3fxAA" target="_epgIgM2iEeiCta8rX3fxAA" source="_epgIf82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIQc2iEeiCta8rX3fxAA" target="_epgIgM2iEeiCta8rX3fxAA" source="_epgIec2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epgIQs2iEeiCta8rX3fxAA" target="_epgISc2iEeiCta8rX3fxAA" source="_epgIgM2iEeiCta8rX3fxAA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgIQ82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_epgIRM2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_epgIRc2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epgIOs2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIRs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIR82iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_epgISM2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epgIOs2iEeiCta8rX3fxAA" outgoing="_epgIO82iEeiCta8rX3fxAA _epgIPM2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgISc2iEeiCta8rX3fxAA" name="Initialization" incoming="_epgIQs2iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgISs2iEeiCta8rX3fxAA" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIS82iEeiCta8rX3fxAA" target="_epgIYc2iEeiCta8rX3fxAA" source="_epgITc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgITM2iEeiCta8rX3fxAA" name="Value(true)">
                <result xmi:id="_epgITc2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_epgIS82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgITs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIT82iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_epgIUM2iEeiCta8rX3fxAA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_epgIUc2iEeiCta8rX3fxAA" name="Iterate(Write(Test$initializationFlag$1))" inputElement="_epgIYc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIUs2iEeiCta8rX3fxAA" target="_epgIXs2iEeiCta8rX3fxAA" source="_epgIYc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIU82iEeiCta8rX3fxAA" target="_epgIWM2iEeiCta8rX3fxAA" source="_epgIVM2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epgIVM2iEeiCta8rX3fxAA" name="Iterate(Write(Test$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_epgIO82iEeiCta8rX3fxAA" outgoing="_epgIU82iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIVc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIVs2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epgIV82iEeiCta8rX3fxAA" name="Write(Test$initializationFlag$1)" structuralFeature="_epfjmc2iEeiCta8rX3fxAA">
                  <object xmi:id="_epgIWM2iEeiCta8rX3fxAA" name="Write(Test$initializationFlag$1).object" incoming="_epgIU82iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIWc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIWs2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epgIW82iEeiCta8rX3fxAA" name="Write(Test$initializationFlag$1).result" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIXM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIXc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:id="_epgIXs2iEeiCta8rX3fxAA" name="Write(Test$initializationFlag$1).value" incoming="_epgIUs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIX82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIYM2iEeiCta8rX3fxAA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_epgIYc2iEeiCta8rX3fxAA" name="Iterate(Write(Test$initializationFlag$1)).inputElement" incoming="_epgIS82iEeiCta8rX3fxAA" outgoing="_epgIUs2iEeiCta8rX3fxAA" regionAsInput="_epgIUc2iEeiCta8rX3fxAA"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epgIYs2iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1)" structuralFeature="_epfjmc2iEeiCta8rX3fxAA">
            <object xmi:id="_epgIY82iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1).object" incoming="_epgIPM2iEeiCta8rX3fxAA" type="_epfjk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIZM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIZc2iEeiCta8rX3fxAA" value="1"/>
            </object>
            <result xmi:id="_epgIZs2iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1).result" outgoing="_epgIPc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIZ82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIaM2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgIac2iEeiCta8rX3fxAA" name="Call(ListSize)">
            <argument xmi:id="_epgIas2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_epgIPc2iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIa82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIbM2iEeiCta8rX3fxAA" value="*"/>
            </argument>
            <result xmi:id="_epgIbc2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_epgIPs2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIbs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIb82iEeiCta8rX3fxAA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgIcM2iEeiCta8rX3fxAA" name="Value(0)">
            <result xmi:id="_epgIcc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_epgIP82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIcs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIc82iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_epgIdM2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_epgIdc2iEeiCta8rX3fxAA" name="Test(Size==0)">
            <first xmi:id="_epgIds2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_epgIPs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgId82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIeM2iEeiCta8rX3fxAA" value="1"/>
            </first>
            <result xmi:id="_epgIec2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_epgIQc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIes2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIe82iEeiCta8rX3fxAA" value="1"/>
            </result>
            <second xmi:id="_epgIfM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_epgIP82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIfc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIfs2iEeiCta8rX3fxAA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_epgIf82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_epgIQM2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_epgIgM2iEeiCta8rX3fxAA" name="Decision(Test(Test$initializationFlag$1))" incoming="_epgIQM2iEeiCta8rX3fxAA _epgIQc2iEeiCta8rX3fxAA" outgoing="_epgIQs2iEeiCta8rX3fxAA" decisionInputFlow="_epgIQc2iEeiCta8rX3fxAA"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_epgIgc2iEeiCta8rX3fxAA" name="Test$initialization$1" visibility="protected" method="_epgIOM2iEeiCta8rX3fxAA"/>
      <ownedOperation xmi:id="_epgIgs2iEeiCta8rX3fxAA" name="Test" visibility="protected" method="_epfjn82iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_epgIg82iEeiCta8rX3fxAA" name="tester" visibility="package" type="_epgIj82iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIhM2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIhc2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_epgIhs2iEeiCta8rX3fxAA" name="" visibility="package" type="_epfjk82iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIh82iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIiM2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_epgIic2iEeiCta8rX3fxAA" name="done" visibility="public" method="_epgH9M2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_epgIis2iEeiCta8rX3fxAA" name="message" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIi82iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIjM2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_epgIjc2iEeiCta8rX3fxAA" name="done" visibility="public" method="_epgIH82iEeiCta8rX3fxAA"/>
      <ownedOperation xmi:id="_epgIjs2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_epgINs2iEeiCta8rX3fxAA"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_epgIj82iEeiCta8rX3fxAA" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_epgIkM2iEeiCta8rX3fxAA" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIkc2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIks2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epgIk82iEeiCta8rX3fxAA" name="Tester$method$1" visibility="private" specification="_epgJGs2iEeiCta8rX3fxAA" node="_epgImM2iEeiCta8rX3fxAA _epgImc2iEeiCta8rX3fxAA" group="_epgImc2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_epgIlM2iEeiCta8rX3fxAA" name="" type="_epgIj82iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIlc2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIls2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIl82iEeiCta8rX3fxAA" target="_epgImM2iEeiCta8rX3fxAA" source="_epgIqs2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_epgImc2iEeiCta8rX3fxAA" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIms2iEeiCta8rX3fxAA" target="_epgIqs2iEeiCta8rX3fxAA" source="_epgIp82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIm82iEeiCta8rX3fxAA" target="_epgIrM2iEeiCta8rX3fxAA" source="_epgIqs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgInM2iEeiCta8rX3fxAA" target="_epgIpc2iEeiCta8rX3fxAA" source="_epgIq82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgInc2iEeiCta8rX3fxAA" target="_epgIsM2iEeiCta8rX3fxAA" source="_epgIqs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIns2iEeiCta8rX3fxAA" target="_epgIt82iEeiCta8rX3fxAA" source="_epgIs82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIn82iEeiCta8rX3fxAA" target="_epgIw82iEeiCta8rX3fxAA" source="_epgIus2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIoM2iEeiCta8rX3fxAA" target="_epgIyc2iEeiCta8rX3fxAA" source="_epgIvs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgIoc2iEeiCta8rX3fxAA" target="_epgIzc2iEeiCta8rX3fxAA" source="_epgIzM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgIos2iEeiCta8rX3fxAA" target="_epgIzc2iEeiCta8rX3fxAA" source="_epgIxs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgIo82iEeiCta8rX3fxAA" target="_epgIq82iEeiCta8rX3fxAA" source="_epgIzc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgIpM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgIpc2iEeiCta8rX3fxAA" name="Body" incoming="_epgInM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_epgIps2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_epgIp82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epgIms2iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIqM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIqc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epgIqs2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epgIms2iEeiCta8rX3fxAA" outgoing="_epgIl82iEeiCta8rX3fxAA _epgIm82iEeiCta8rX3fxAA _epgInc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_epgIq82iEeiCta8rX3fxAA" name="Call(Tester$initialization$1)" incoming="_epgIo82iEeiCta8rX3fxAA" outgoing="_epgInM2iEeiCta8rX3fxAA" operation="_epgJGc2iEeiCta8rX3fxAA">
              <target xmi:id="_epgIrM2iEeiCta8rX3fxAA" name="Call(Tester$initialization$1).target" incoming="_epgIm82iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIrc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIrs2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epgIr82iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1)" structuralFeature="_epgIkM2iEeiCta8rX3fxAA">
              <object xmi:id="_epgIsM2iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1).object" incoming="_epgInc2iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIsc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIss2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_epgIs82iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1).result" outgoing="_epgIns2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgItM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgItc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgIts2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_epgIt82iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_epgIns2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIuM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIuc2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_epgIus2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_epgIn82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIu82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIvM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgIvc2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_epgIvs2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_epgIoM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIv82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIwM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_epgIwc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_epgIws2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_epgIw82iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_epgIn82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIxM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIxc2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_epgIxs2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_epgIos2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIx82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIyM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_epgIyc2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_epgIoM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgIys2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgIy82iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_epgIzM2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_epgIoc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_epgIzc2iEeiCta8rX3fxAA" name="Decision(Test(Tester$initializationFlag$1))" incoming="_epgIoc2iEeiCta8rX3fxAA _epgIos2iEeiCta8rX3fxAA" outgoing="_epgIo82iEeiCta8rX3fxAA" decisionInputFlow="_epgIos2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_epgImM2iEeiCta8rX3fxAA" name="Return" incoming="_epgIl82iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" parameter="_epgIlM2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epgIzs2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_epgJHs2iEeiCta8rX3fxAA" node="_epgIz82iEeiCta8rX3fxAA" group="_epgIz82iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_epgIz82iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_epgI0M2iEeiCta8rX3fxAA" name="Tester$initialization$1" visibility="private" specification="_epgJGc2iEeiCta8rX3fxAA" node="_epgI0c2iEeiCta8rX3fxAA" group="_epgI0c2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_epgI0c2iEeiCta8rX3fxAA" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgI0s2iEeiCta8rX3fxAA" target="_epgI4M2iEeiCta8rX3fxAA" source="_epgI3c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgI082iEeiCta8rX3fxAA" target="_epgI7M2iEeiCta8rX3fxAA" source="_epgI4M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgI1M2iEeiCta8rX3fxAA" target="_epgI-82iEeiCta8rX3fxAA" source="_epgI4M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgI1c2iEeiCta8rX3fxAA" target="_epgJAs2iEeiCta8rX3fxAA" source="_epgI_s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgI1s2iEeiCta8rX3fxAA" target="_epgJDs2iEeiCta8rX3fxAA" source="_epgJBc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgI182iEeiCta8rX3fxAA" target="_epgJFM2iEeiCta8rX3fxAA" source="_epgJCc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgI2M2iEeiCta8rX3fxAA" target="_epgJGM2iEeiCta8rX3fxAA" source="_epgJF82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgI2c2iEeiCta8rX3fxAA" target="_epgJGM2iEeiCta8rX3fxAA" source="_epgJEc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgI2s2iEeiCta8rX3fxAA" target="_epgI4c2iEeiCta8rX3fxAA" source="_epgJGM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgI282iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_epgI3M2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_epgI3c2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_epgI0s2iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgI3s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgI382iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epgI4M2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_epgI0s2iEeiCta8rX3fxAA" outgoing="_epgI082iEeiCta8rX3fxAA _epgI1M2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgI4c2iEeiCta8rX3fxAA" name="Initialization" incoming="_epgI2s2iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgI4s2iEeiCta8rX3fxAA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgI482iEeiCta8rX3fxAA" target="_epgI-c2iEeiCta8rX3fxAA" source="_epgI5c2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgI5M2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_epgI5c2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_epgI482iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgI5s2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgI582iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_epgI6M2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_epgI6c2iEeiCta8rX3fxAA" name="Iterate(Write(Tester$initializationFlag$1))" inputElement="_epgI-c2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epgI6s2iEeiCta8rX3fxAA" target="_epgI9s2iEeiCta8rX3fxAA" source="_epgI-c2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epgI682iEeiCta8rX3fxAA" target="_epgI8M2iEeiCta8rX3fxAA" source="_epgI7M2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epgI7M2iEeiCta8rX3fxAA" name="Iterate(Write(Tester$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_epgI082iEeiCta8rX3fxAA" outgoing="_epgI682iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgI7c2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgI7s2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_epgI782iEeiCta8rX3fxAA" name="Write(Tester$initializationFlag$1)" structuralFeature="_epgIkM2iEeiCta8rX3fxAA">
                    <object xmi:id="_epgI8M2iEeiCta8rX3fxAA" name="Write(Tester$initializationFlag$1).object" incoming="_epgI682iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgI8c2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgI8s2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_epgI882iEeiCta8rX3fxAA" name="Write(Tester$initializationFlag$1).result" type="_epgIj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgI9M2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgI9c2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_epgI9s2iEeiCta8rX3fxAA" name="Write(Tester$initializationFlag$1).value" incoming="_epgI6s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgI982iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgI-M2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_epgI-c2iEeiCta8rX3fxAA" name="Iterate(Write(Tester$initializationFlag$1)).inputElement" incoming="_epgI482iEeiCta8rX3fxAA" outgoing="_epgI6s2iEeiCta8rX3fxAA" regionAsInput="_epgI6c2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_epgI-s2iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1)" structuralFeature="_epgIkM2iEeiCta8rX3fxAA">
              <object xmi:id="_epgI-82iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1).object" incoming="_epgI1M2iEeiCta8rX3fxAA" type="_epgIj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgI_M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgI_c2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_epgI_s2iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1).result" outgoing="_epgI1c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgI_82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJAM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgJAc2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_epgJAs2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_epgI1c2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJA82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJBM2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_epgJBc2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_epgI1s2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJBs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJB82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgJCM2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_epgJCc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_epgI182iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJCs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJC82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_epgJDM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_epgJDc2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_epgJDs2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_epgI1s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJD82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJEM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_epgJEc2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_epgI2c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJEs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJE82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_epgJFM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_epgI182iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJFc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJFs2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_epgJF82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_epgI2M2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_epgJGM2iEeiCta8rX3fxAA" name="Decision(Test(Tester$initializationFlag$1))" incoming="_epgI2M2iEeiCta8rX3fxAA _epgI2c2iEeiCta8rX3fxAA" outgoing="_epgI2s2iEeiCta8rX3fxAA" decisionInputFlow="_epgI2c2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_epgJGc2iEeiCta8rX3fxAA" name="Tester$initialization$1" visibility="protected" method="_epgI0M2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_epgJGs2iEeiCta8rX3fxAA" name="Tester" visibility="public" method="_epgIk82iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_epgJG82iEeiCta8rX3fxAA" name="" visibility="package" type="_epgIj82iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJHM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJHc2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_epgJHs2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_epgIzs2iEeiCta8rX3fxAA"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_epgJH82iEeiCta8rX3fxAA" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_epgJIM2iEeiCta8rX3fxAA" name="Continue" signal="_epgJH82iEeiCta8rX3fxAA"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_epgJIc2iEeiCta8rX3fxAA" name="AssertTrue" visibility="public" node="_epgJNc2iEeiCta8rX3fxAA _epgJNs2iEeiCta8rX3fxAA _epgJN82iEeiCta8rX3fxAA _epgJOM2iEeiCta8rX3fxAA _epgJOc2iEeiCta8rX3fxAA" group="_epgJOc2iEeiCta8rX3fxAA">
      <packageImport xmi:id="_epgJIs2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_epgJI82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_epgJJM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_epgJJc2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_epgJJs2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_epgJJ82iEeiCta8rX3fxAA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJKM2iEeiCta8rX3fxAA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJKc2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_epgJKs2iEeiCta8rX3fxAA" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJK82iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJLM2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJLc2iEeiCta8rX3fxAA" target="_epgJNs2iEeiCta8rX3fxAA" source="_epgJNc2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJLs2iEeiCta8rX3fxAA" target="_epgJOM2iEeiCta8rX3fxAA" source="_epgJN82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJL82iEeiCta8rX3fxAA" target="_epgJV82iEeiCta8rX3fxAA" source="_epgJOM2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJMM2iEeiCta8rX3fxAA" target="_epgJf82iEeiCta8rX3fxAA" source="_epgJNs2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJMc2iEeiCta8rX3fxAA" target="_epgJls2iEeiCta8rX3fxAA" source="_epgJOM2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJMs2iEeiCta8rX3fxAA" target="_epgJns2iEeiCta8rX3fxAA" source="_epgJNs2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJM82iEeiCta8rX3fxAA" target="_epgJq82iEeiCta8rX3fxAA" source="_epgJOM2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJNM2iEeiCta8rX3fxAA" target="_epgJs82iEeiCta8rX3fxAA" source="_epgJNs2iEeiCta8rX3fxAA"/>
      <structuredNode xmi:id="_epgJOc2iEeiCta8rX3fxAA" name="Body(AssertTrue)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJOs2iEeiCta8rX3fxAA" target="_epgJwc2iEeiCta8rX3fxAA" source="_epgJu82iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJO82iEeiCta8rX3fxAA" target="_epgJws2iEeiCta8rX3fxAA" source="_epgJvs2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_epgJPM2iEeiCta8rX3fxAA" name="IfStatement@32a395d2">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgJPc2iEeiCta8rX3fxAA" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJPs2iEeiCta8rX3fxAA" target="_epgJTs2iEeiCta8rX3fxAA" source="_epgJV82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJP82iEeiCta8rX3fxAA" target="_epgJWc2iEeiCta8rX3fxAA" source="_epgJV82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJQM2iEeiCta8rX3fxAA" target="_epgJX82iEeiCta8rX3fxAA" source="_epgJXM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJQc2iEeiCta8rX3fxAA" target="_epgJYM2iEeiCta8rX3fxAA" source="_epgJUc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJQs2iEeiCta8rX3fxAA" target="_epgJYc2iEeiCta8rX3fxAA" source="_epgJX82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJQ82iEeiCta8rX3fxAA" target="_epgJYc2iEeiCta8rX3fxAA" source="_epgJX82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJRM2iEeiCta8rX3fxAA" target="_epgJYM2iEeiCta8rX3fxAA" source="_epgJYc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgJRc2iEeiCta8rX3fxAA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJRs2iEeiCta8rX3fxAA" target="_epgJVM2iEeiCta8rX3fxAA" source="_epgJSc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJR82iEeiCta8rX3fxAA" target="_epgJY82iEeiCta8rX3fxAA" source="_epgJYM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgJSM2iEeiCta8rX3fxAA" name="Value(true)">
              <result xmi:id="_epgJSc2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_epgJRs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJSs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJS82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_epgJTM2iEeiCta8rX3fxAA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_epgJTc2iEeiCta8rX3fxAA" name="Test(==)">
              <first xmi:id="_epgJTs2iEeiCta8rX3fxAA" name="Test(==).first" incoming="_epgJPs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJT82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJUM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_epgJUc2iEeiCta8rX3fxAA" name="Test(==).result" outgoing="_epgJQc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJUs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJU82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_epgJVM2iEeiCta8rX3fxAA" name="Test(==).second" incoming="_epgJRs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJVc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJVs2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epgJV82iEeiCta8rX3fxAA" name="Fork(Fork(condition))" incoming="_epgJL82iEeiCta8rX3fxAA" outgoing="_epgJPs2iEeiCta8rX3fxAA _epgJP82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgJWM2iEeiCta8rX3fxAA" name="Call(NotEmpty)">
              <argument xmi:id="_epgJWc2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_epgJP82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJWs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJW82iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_epgJXM2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_epgJQM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJXc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJXs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epgJX82iEeiCta8rX3fxAA" name="Fork(Call(NotEmpty).result())" incoming="_epgJQM2iEeiCta8rX3fxAA" outgoing="_epgJQs2iEeiCta8rX3fxAA _epgJQ82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_epgJYM2iEeiCta8rX3fxAA" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_epgJQc2iEeiCta8rX3fxAA _epgJRM2iEeiCta8rX3fxAA" outgoing="_epgJR82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_epgJYc2iEeiCta8rX3fxAA" name="Decision(Call(NotEmpty).result())" incoming="_epgJQs2iEeiCta8rX3fxAA _epgJQ82iEeiCta8rX3fxAA" outgoing="_epgJRM2iEeiCta8rX3fxAA" decisionInputFlow="_epgJQ82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgJYs2iEeiCta8rX3fxAA" name="Call(Not)">
              <argument xmi:id="_epgJY82iEeiCta8rX3fxAA" name="Call(Not).argument(x)" incoming="_epgJR82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJZM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJZc2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_epgJZs2iEeiCta8rX3fxAA" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJZ82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJaM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgJac2iEeiCta8rX3fxAA" name="ExpressionStatement@ef6c818">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJas2iEeiCta8rX3fxAA" target="_epgJbc2iEeiCta8rX3fxAA" source="_epgJh82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgJa82iEeiCta8rX3fxAA" target="_epgJbM2iEeiCta8rX3fxAA" source="_epgJc82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgJbM2iEeiCta8rX3fxAA" name="Call(WriteLine)" incoming="_epgJa82iEeiCta8rX3fxAA">
              <argument xmi:id="_epgJbc2iEeiCta8rX3fxAA" name="Call(WriteLine).argument(value)" incoming="_epgJas2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJbs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJb82iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_epgJcM2iEeiCta8rX3fxAA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJcc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJcs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgJc82iEeiCta8rX3fxAA" name="Tuple@135f1875" outgoing="_epgJa82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJdM2iEeiCta8rX3fxAA" target="_epgJi82iEeiCta8rX3fxAA" source="_epgJec2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJdc2iEeiCta8rX3fxAA" target="_epgJjs2iEeiCta8rX3fxAA" source="_epgJgs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epgJds2iEeiCta8rX3fxAA" target="_epgJhc2iEeiCta8rX3fxAA" source="_epgJeM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epgJd82iEeiCta8rX3fxAA" target="_epgJhc2iEeiCta8rX3fxAA" source="_epgJfc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgJeM2iEeiCta8rX3fxAA" name="Value(&quot;FAILED: &quot;)" outgoing="_epgJds2iEeiCta8rX3fxAA">
                <result xmi:id="_epgJec2iEeiCta8rX3fxAA" name="Value(&quot;FAILED: &quot;).result" outgoing="_epgJdM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJes2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJe82iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_epgJfM2iEeiCta8rX3fxAA" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgJfc2iEeiCta8rX3fxAA" name="Passthru(Fork(label))" outgoing="_epgJd82iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJfs2iEeiCta8rX3fxAA" target="_epgJgs2iEeiCta8rX3fxAA" source="_epgJf82iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epgJf82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_epgJMM2iEeiCta8rX3fxAA" outgoing="_epgJfs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJgM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJgc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epgJgs2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_epgJfs2iEeiCta8rX3fxAA" outgoing="_epgJdc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJg82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJhM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgJhc2iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_epgJds2iEeiCta8rX3fxAA _epgJd82iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJhs2iEeiCta8rX3fxAA" target="_epgJh82iEeiCta8rX3fxAA" source="_epgJkc2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_epgJh82iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_epgJhs2iEeiCta8rX3fxAA" outgoing="_epgJas2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJiM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJic2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgJis2iEeiCta8rX3fxAA" name="Call(Concat)">
                  <argument xmi:id="_epgJi82iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_epgJdM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJjM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJjc2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_epgJjs2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_epgJdc2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJj82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJkM2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_epgJkc2iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_epgJhs2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJks2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJk82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgJlM2iEeiCta8rX3fxAA" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJlc2iEeiCta8rX3fxAA" target="_epgJmc2iEeiCta8rX3fxAA" source="_epgJls2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_epgJls2iEeiCta8rX3fxAA" name="Passthru(Fork(condition)).input" incoming="_epgJMc2iEeiCta8rX3fxAA" outgoing="_epgJlc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJl82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJmM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_epgJmc2iEeiCta8rX3fxAA" name="Passthru(Fork(condition)).output" incoming="_epgJlc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJms2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJm82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgJnM2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJnc2iEeiCta8rX3fxAA" target="_epgJoc2iEeiCta8rX3fxAA" source="_epgJns2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_epgJns2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_epgJMs2iEeiCta8rX3fxAA" outgoing="_epgJnc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJn82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJoM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_epgJoc2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_epgJnc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJos2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJo82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgJpM2iEeiCta8rX3fxAA" name="Value(true)">
            <result xmi:id="_epgJpc2iEeiCta8rX3fxAA" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJps2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJp82iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_epgJqM2iEeiCta8rX3fxAA" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgJqc2iEeiCta8rX3fxAA" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJqs2iEeiCta8rX3fxAA" target="_epgJrs2iEeiCta8rX3fxAA" source="_epgJq82iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_epgJq82iEeiCta8rX3fxAA" name="Passthru(Fork(condition)).input" incoming="_epgJM82iEeiCta8rX3fxAA" outgoing="_epgJqs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJrM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJrc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_epgJrs2iEeiCta8rX3fxAA" name="Passthru(Fork(condition)).output" incoming="_epgJqs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJr82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJsM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgJsc2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJss2iEeiCta8rX3fxAA" target="_epgJts2iEeiCta8rX3fxAA" source="_epgJs82iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_epgJs82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_epgJNM2iEeiCta8rX3fxAA" outgoing="_epgJss2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJtM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJtc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_epgJts2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_epgJss2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJt82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJuM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_epgJuc2iEeiCta8rX3fxAA" body="_epgJac2iEeiCta8rX3fxAA _epgJlM2iEeiCta8rX3fxAA _epgJnM2iEeiCta8rX3fxAA" bodyOutput="_epgJmc2iEeiCta8rX3fxAA _epgJoc2iEeiCta8rX3fxAA" decider="_epgJZs2iEeiCta8rX3fxAA" successorClause="_epgJus2iEeiCta8rX3fxAA" test="_epgJPc2iEeiCta8rX3fxAA"/>
          <clause xmi:id="_epgJus2iEeiCta8rX3fxAA" body="_epgJqc2iEeiCta8rX3fxAA _epgJsc2iEeiCta8rX3fxAA" bodyOutput="_epgJrs2iEeiCta8rX3fxAA _epgJts2iEeiCta8rX3fxAA" decider="_epgJpc2iEeiCta8rX3fxAA" predecessorClause="_epgJuc2iEeiCta8rX3fxAA" test="_epgJpM2iEeiCta8rX3fxAA"/>
          <result xmi:id="_epgJu82iEeiCta8rX3fxAA" name="IfStatement@32a395d2.result(condition)" outgoing="_epgJOs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJvM2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJvc2iEeiCta8rX3fxAA" value="1"/>
          </result>
          <result xmi:id="_epgJvs2iEeiCta8rX3fxAA" name="IfStatement@32a395d2.result(label)" outgoing="_epgJO82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJv82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJwM2iEeiCta8rX3fxAA" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_epgJwc2iEeiCta8rX3fxAA" name="Fork(condition)" incoming="_epgJOs2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_epgJws2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_epgJO82iEeiCta8rX3fxAA"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_epgJNc2iEeiCta8rX3fxAA" name="Input(label)" outgoing="_epgJLc2iEeiCta8rX3fxAA" parameter="_epgJJ82iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_epgJNs2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_epgJLc2iEeiCta8rX3fxAA" outgoing="_epgJMM2iEeiCta8rX3fxAA _epgJMs2iEeiCta8rX3fxAA _epgJNM2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_epgJN82iEeiCta8rX3fxAA" name="Input(condition)" outgoing="_epgJLs2iEeiCta8rX3fxAA" parameter="_epgJKs2iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_epgJOM2iEeiCta8rX3fxAA" name="Fork(condition)" incoming="_epgJLs2iEeiCta8rX3fxAA" outgoing="_epgJL82iEeiCta8rX3fxAA _epgJMc2iEeiCta8rX3fxAA _epgJM82iEeiCta8rX3fxAA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_epgJw82iEeiCta8rX3fxAA" name="AssertEqual" visibility="public" node="_epgJ482iEeiCta8rX3fxAA _epgJ5M2iEeiCta8rX3fxAA _epgJ5c2iEeiCta8rX3fxAA _epgJ5s2iEeiCta8rX3fxAA _epgJ582iEeiCta8rX3fxAA _epgJ6M2iEeiCta8rX3fxAA _epgJ6c2iEeiCta8rX3fxAA" group="_epgJ6c2iEeiCta8rX3fxAA">
      <packageImport xmi:id="_epgJxM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_epgJxc2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_epgJxs2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_epgJx82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_epgJyM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_epgJyc2iEeiCta8rX3fxAA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJys2iEeiCta8rX3fxAA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJy82iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_epgJzM2iEeiCta8rX3fxAA" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJzc2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJzs2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_epgJz82iEeiCta8rX3fxAA" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgJ0M2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgJ0c2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ0s2iEeiCta8rX3fxAA" target="_epgJ5M2iEeiCta8rX3fxAA" source="_epgJ482iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ082iEeiCta8rX3fxAA" target="_epgJ5s2iEeiCta8rX3fxAA" source="_epgJ5c2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ1M2iEeiCta8rX3fxAA" target="_epgJ6M2iEeiCta8rX3fxAA" source="_epgJ582iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ1c2iEeiCta8rX3fxAA" target="_epgKIM2iEeiCta8rX3fxAA" source="_epgJ5s2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ1s2iEeiCta8rX3fxAA" target="_epgKKM2iEeiCta8rX3fxAA" source="_epgJ6M2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ182iEeiCta8rX3fxAA" target="_epgu-c2iEeiCta8rX3fxAA" source="_epgJ5M2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ2M2iEeiCta8rX3fxAA" target="_epgvOM2iEeiCta8rX3fxAA" source="_epgJ6M2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ2c2iEeiCta8rX3fxAA" target="_epgvjM2iEeiCta8rX3fxAA" source="_epgJ5M2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ2s2iEeiCta8rX3fxAA" target="_epgvnM2iEeiCta8rX3fxAA" source="_epgJ6M2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ282iEeiCta8rX3fxAA" target="_epgvpM2iEeiCta8rX3fxAA" source="_epgJ5s2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ3M2iEeiCta8rX3fxAA" target="_epgvw82iEeiCta8rX3fxAA" source="_epgJ6M2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ3c2iEeiCta8rX3fxAA" target="_epgv5s2iEeiCta8rX3fxAA" source="_epgJ5M2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ3s2iEeiCta8rX3fxAA" target="_epgv9s2iEeiCta8rX3fxAA" source="_epgJ6M2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ382iEeiCta8rX3fxAA" target="_epgv_s2iEeiCta8rX3fxAA" source="_epgJ5s2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ4M2iEeiCta8rX3fxAA" target="_epgwTc2iEeiCta8rX3fxAA" source="_epgJ5M2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ4c2iEeiCta8rX3fxAA" target="_epgwWs2iEeiCta8rX3fxAA" source="_epgJ6M2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ4s2iEeiCta8rX3fxAA" target="_epgwYs2iEeiCta8rX3fxAA" source="_epgJ5s2iEeiCta8rX3fxAA"/>
      <structuredNode xmi:id="_epgJ6c2iEeiCta8rX3fxAA" name="Body(AssertEqual)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ6s2iEeiCta8rX3fxAA" target="_epgwds2iEeiCta8rX3fxAA" source="_epgwas2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ682iEeiCta8rX3fxAA" target="_epgwd82iEeiCta8rX3fxAA" source="_epgwbc2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ7M2iEeiCta8rX3fxAA" target="_epgweM2iEeiCta8rX3fxAA" source="_epgwcM2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ7c2iEeiCta8rX3fxAA" target="_epgwec2iEeiCta8rX3fxAA" source="_epgwc82iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_epgJ7s2iEeiCta8rX3fxAA" name="IfStatement@63b33395">
          <edge xmi:type="uml:ControlFlow" xmi:id="_epgJ782iEeiCta8rX3fxAA" target="_epgvIs2iEeiCta8rX3fxAA" source="_epgKS82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ8M2iEeiCta8rX3fxAA" target="_epgwEs2iEeiCta8rX3fxAA" source="_epgwBs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ8c2iEeiCta8rX3fxAA" target="_epgwE82iEeiCta8rX3fxAA" source="_epgwCc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ8s2iEeiCta8rX3fxAA" target="_epgwFM2iEeiCta8rX3fxAA" source="_epgwDM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ882iEeiCta8rX3fxAA" target="_epgwFc2iEeiCta8rX3fxAA" source="_epgwD82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ9M2iEeiCta8rX3fxAA" target="_epgvRM2iEeiCta8rX3fxAA" source="_epgvJM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ9c2iEeiCta8rX3fxAA" target="_epgvYc2iEeiCta8rX3fxAA" source="_epgvJM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ9s2iEeiCta8rX3fxAA" target="_epgvlM2iEeiCta8rX3fxAA" source="_epgvJM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ982iEeiCta8rX3fxAA" target="_epgv7s2iEeiCta8rX3fxAA" source="_epgvJM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epgJ-M2iEeiCta8rX3fxAA" target="_epgvOs2iEeiCta8rX3fxAA" source="_epgvIs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epgJ-c2iEeiCta8rX3fxAA" target="_epgwFs2iEeiCta8rX3fxAA" source="_epgvOs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ-s2iEeiCta8rX3fxAA" target="_epgwKM2iEeiCta8rX3fxAA" source="_epgwEs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ-82iEeiCta8rX3fxAA" target="_epgwMM2iEeiCta8rX3fxAA" source="_epgwE82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ_M2iEeiCta8rX3fxAA" target="_epgwOM2iEeiCta8rX3fxAA" source="_epgwFM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ_c2iEeiCta8rX3fxAA" target="_epgwQM2iEeiCta8rX3fxAA" source="_epgwFc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgJ_s2iEeiCta8rX3fxAA" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgJ_82iEeiCta8rX3fxAA" target="_epgKF82iEeiCta8rX3fxAA" source="_epgKIM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKAM2iEeiCta8rX3fxAA" target="_epgKIs2iEeiCta8rX3fxAA" source="_epgKIM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKAc2iEeiCta8rX3fxAA" target="_epgKHc2iEeiCta8rX3fxAA" source="_epgKKM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKAs2iEeiCta8rX3fxAA" target="_epgKKs2iEeiCta8rX3fxAA" source="_epgKKM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKA82iEeiCta8rX3fxAA" target="_epgKMc2iEeiCta8rX3fxAA" source="_epgKJc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKBM2iEeiCta8rX3fxAA" target="_epgKMs2iEeiCta8rX3fxAA" source="_epgKLc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKBc2iEeiCta8rX3fxAA" target="_epgKNM2iEeiCta8rX3fxAA" source="_epgKMc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKBs2iEeiCta8rX3fxAA" target="_epgKO82iEeiCta8rX3fxAA" source="_epgKMs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKB82iEeiCta8rX3fxAA" target="_epgKQc2iEeiCta8rX3fxAA" source="_epgKMs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgKCM2iEeiCta8rX3fxAA" target="_epgKFs2iEeiCta8rX3fxAA" source="_epgKQc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgKCc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgKCs2iEeiCta8rX3fxAA" target="_epgKM82iEeiCta8rX3fxAA" source="_epgKQc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgKC82iEeiCta8rX3fxAA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgKDM2iEeiCta8rX3fxAA" target="_epgKQs2iEeiCta8rX3fxAA" source="_epgKMM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKDc2iEeiCta8rX3fxAA" target="_epgKQs2iEeiCta8rX3fxAA" source="_epgKMc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgKDs2iEeiCta8rX3fxAA" target="_epgKQc2iEeiCta8rX3fxAA" source="_epgKQs2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgKD82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgKEM2iEeiCta8rX3fxAA" target="_epgKOs2iEeiCta8rX3fxAA" source="_epgKQs2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgKEc2iEeiCta8rX3fxAA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKEs2iEeiCta8rX3fxAA" target="_epgKQ82iEeiCta8rX3fxAA" source="_epgKGs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKE82iEeiCta8rX3fxAA" target="_epgKQ82iEeiCta8rX3fxAA" source="_epgKN82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKFM2iEeiCta8rX3fxAA" target="_epgKQ82iEeiCta8rX3fxAA" source="_epgKPs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKFc2iEeiCta8rX3fxAA" target="_epgKRc2iEeiCta8rX3fxAA" source="_epgKQ82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_epgKFs2iEeiCta8rX3fxAA" name="Test(==)" incoming="_epgKCM2iEeiCta8rX3fxAA">
              <first xmi:id="_epgKF82iEeiCta8rX3fxAA" name="Test(==).first" incoming="_epgJ_82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKGM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKGc2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_epgKGs2iEeiCta8rX3fxAA" name="Test(==).result" outgoing="_epgKEs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKG82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKHM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_epgKHc2iEeiCta8rX3fxAA" name="Test(==).second" incoming="_epgKAc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKHs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKH82iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epgKIM2iEeiCta8rX3fxAA" name="Fork(Fork(value1))" incoming="_epgJ1c2iEeiCta8rX3fxAA" outgoing="_epgJ_82iEeiCta8rX3fxAA _epgKAM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgKIc2iEeiCta8rX3fxAA" name="Call(NotEmpty)">
              <argument xmi:id="_epgKIs2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_epgKAM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKI82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKJM2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_epgKJc2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_epgKA82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKJs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKJ82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epgKKM2iEeiCta8rX3fxAA" name="Fork(Fork(value2))" incoming="_epgJ1s2iEeiCta8rX3fxAA" outgoing="_epgKAc2iEeiCta8rX3fxAA _epgKAs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgKKc2iEeiCta8rX3fxAA" name="Call(NotEmpty)">
              <argument xmi:id="_epgKKs2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_epgKAs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKK82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKLM2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_epgKLc2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_epgKBM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKLs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKL82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_epgKMM2iEeiCta8rX3fxAA" name="Initial(Test(==))" outgoing="_epgKDM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_epgKMc2iEeiCta8rX3fxAA" name="Fork(Call(NotEmpty).result())" incoming="_epgKA82iEeiCta8rX3fxAA" outgoing="_epgKBc2iEeiCta8rX3fxAA _epgKDc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_epgKMs2iEeiCta8rX3fxAA" name="Fork(Call(NotEmpty).result())" incoming="_epgKBM2iEeiCta8rX3fxAA" outgoing="_epgKBs2iEeiCta8rX3fxAA _epgKB82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgKM82iEeiCta8rX3fxAA" name="Call(Not)" incoming="_epgKCs2iEeiCta8rX3fxAA">
              <argument xmi:id="_epgKNM2iEeiCta8rX3fxAA" name="Call(Not).argument(x)" incoming="_epgKBc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKNc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKNs2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_epgKN82iEeiCta8rX3fxAA" name="Call(Not).result(result)" outgoing="_epgKE82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKOM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKOc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgKOs2iEeiCta8rX3fxAA" name="Call(Not)" incoming="_epgKEM2iEeiCta8rX3fxAA">
              <argument xmi:id="_epgKO82iEeiCta8rX3fxAA" name="Call(Not).argument(x)" incoming="_epgKBs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKPM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKPc2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_epgKPs2iEeiCta8rX3fxAA" name="Call(Not).result(result)" outgoing="_epgKFM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKP82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKQM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_epgKQc2iEeiCta8rX3fxAA" name="Decision(Call(NotEmpty).result())" incoming="_epgKB82iEeiCta8rX3fxAA _epgKDs2iEeiCta8rX3fxAA" outgoing="_epgKCM2iEeiCta8rX3fxAA _epgKCs2iEeiCta8rX3fxAA" decisionInputFlow="_epgKB82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_epgKQs2iEeiCta8rX3fxAA" name="Decision(Call(NotEmpty).result())" incoming="_epgKDM2iEeiCta8rX3fxAA _epgKDc2iEeiCta8rX3fxAA" outgoing="_epgKDs2iEeiCta8rX3fxAA _epgKEM2iEeiCta8rX3fxAA" decisionInputFlow="_epgKDc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_epgKQ82iEeiCta8rX3fxAA" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_epgKEs2iEeiCta8rX3fxAA _epgKE82iEeiCta8rX3fxAA _epgKFM2iEeiCta8rX3fxAA" outgoing="_epgKFc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgKRM2iEeiCta8rX3fxAA" name="Call(Not)">
              <argument xmi:id="_epgKRc2iEeiCta8rX3fxAA" name="Call(Not).argument(x)" incoming="_epgKFc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKRs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKR82iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_epgKSM2iEeiCta8rX3fxAA" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKSc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKSs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgKS82iEeiCta8rX3fxAA" name="ExpressionStatement@6102f4eb" outgoing="_epgJ782iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKTM2iEeiCta8rX3fxAA" target="_epgKT82iEeiCta8rX3fxAA" source="_epgvFc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgKTc2iEeiCta8rX3fxAA" target="_epgKTs2iEeiCta8rX3fxAA" source="_epgKUs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgKTs2iEeiCta8rX3fxAA" name="Call(Write)" incoming="_epgKTc2iEeiCta8rX3fxAA" behavior="_epgw382iEeiCta8rX3fxAA">
              <argument xmi:id="_epgKT82iEeiCta8rX3fxAA" name="Call(Write).argument(value)" incoming="_epgKTM2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgKUM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgKUc2iEeiCta8rX3fxAA" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgKUs2iEeiCta8rX3fxAA" name="Tuple@1c318a02" outgoing="_epgKTc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKU82iEeiCta8rX3fxAA" target="_epgvBc2iEeiCta8rX3fxAA" source="_epgu882iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKVM2iEeiCta8rX3fxAA" target="_epgvCM2iEeiCta8rX3fxAA" source="_epgu_M2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epgKVc2iEeiCta8rX3fxAA" target="_epgu_82iEeiCta8rX3fxAA" source="_epgu8s2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epgKVs2iEeiCta8rX3fxAA" target="_epgu_82iEeiCta8rX3fxAA" source="_epgu982iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKV82iEeiCta8rX3fxAA" target="_epgvGc2iEeiCta8rX3fxAA" source="_epgvAc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgKWM2iEeiCta8rX3fxAA" target="_epgvHM2iEeiCta8rX3fxAA" source="_epgvD82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epgu8M2iEeiCta8rX3fxAA" target="_epgvE82iEeiCta8rX3fxAA" source="_epgu_82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epgu8c2iEeiCta8rX3fxAA" target="_epgvE82iEeiCta8rX3fxAA" source="_epgvDs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgu8s2iEeiCta8rX3fxAA" name="Value(&quot;FAILED: &quot;)" outgoing="_epgKVc2iEeiCta8rX3fxAA">
                <result xmi:id="_epgu882iEeiCta8rX3fxAA" name="Value(&quot;FAILED: &quot;).result" outgoing="_epgKU82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgu9M2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgu9c2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_epgu9s2iEeiCta8rX3fxAA" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgu982iEeiCta8rX3fxAA" name="Passthru(Fork(label))" outgoing="_epgKVs2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgu-M2iEeiCta8rX3fxAA" target="_epgu_M2iEeiCta8rX3fxAA" source="_epgu-c2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_epgu-c2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_epgJ182iEeiCta8rX3fxAA" outgoing="_epgu-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgu-s2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgu-82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_epgu_M2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_epgu-M2iEeiCta8rX3fxAA" outgoing="_epgKVM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgu_c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgu_s2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgu_82iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_epgKVc2iEeiCta8rX3fxAA _epgKVs2iEeiCta8rX3fxAA" outgoing="_epgu8M2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvAM2iEeiCta8rX3fxAA" target="_epgvAc2iEeiCta8rX3fxAA" source="_epgvC82iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_epgvAc2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_epgvAM2iEeiCta8rX3fxAA" outgoing="_epgKV82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvAs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvA82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgvBM2iEeiCta8rX3fxAA" name="Call(Concat)">
                  <argument xmi:id="_epgvBc2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_epgKU82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvBs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvB82iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_epgvCM2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_epgKVM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvCc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvCs2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_epgvC82iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_epgvAM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvDM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvDc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgvDs2iEeiCta8rX3fxAA" name="Value(&quot;==&quot;)" outgoing="_epgu8c2iEeiCta8rX3fxAA">
                <result xmi:id="_epgvD82iEeiCta8rX3fxAA" name="Value(&quot;==&quot;).result" outgoing="_epgKWM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvEM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvEc2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_epgvEs2iEeiCta8rX3fxAA" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvE82iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_epgu8M2iEeiCta8rX3fxAA _epgu8c2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvFM2iEeiCta8rX3fxAA" target="_epgvFc2iEeiCta8rX3fxAA" source="_epgvH82iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_epgvFc2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_epgvFM2iEeiCta8rX3fxAA" outgoing="_epgKTM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvFs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvF82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgvGM2iEeiCta8rX3fxAA" name="Call(Concat)">
                  <argument xmi:id="_epgvGc2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_epgKV82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvGs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvG82iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_epgvHM2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_epgKWM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvHc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvHs2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_epgvH82iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_epgvFM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvIM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvIc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvIs2iEeiCta8rX3fxAA" name="ExpressionStatement@d3453c4" incoming="_epgJ782iEeiCta8rX3fxAA" outgoing="_epgJ-M2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvI82iEeiCta8rX3fxAA" target="_epgvJM2iEeiCta8rX3fxAA" source="_epgvOc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_epgvJM2iEeiCta8rX3fxAA" name="Fork(s)@1a94dd7a" incoming="_epgvI82iEeiCta8rX3fxAA" outgoing="_epgJ9M2iEeiCta8rX3fxAA _epgJ9c2iEeiCta8rX3fxAA _epgJ9s2iEeiCta8rX3fxAA _epgJ982iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvJc2iEeiCta8rX3fxAA" name="RightHandSide@7bb824b4">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_epgvJs2iEeiCta8rX3fxAA" name="CastExpression@7bb824b4" mode="parallel" outputElement="_epgvOc2iEeiCta8rX3fxAA" inputElement="_epgvOM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvJ82iEeiCta8rX3fxAA" target="_epgvMM2iEeiCta8rX3fxAA" source="_epgvNs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvKM2iEeiCta8rX3fxAA" target="_epgvN82iEeiCta8rX3fxAA" source="_epgvNs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvKc2iEeiCta8rX3fxAA" target="_epgvN82iEeiCta8rX3fxAA" source="_epgvM82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvKs2iEeiCta8rX3fxAA" target="_epgvLs2iEeiCta8rX3fxAA" source="_epgvN82iEeiCta8rX3fxAA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgvK82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvLM2iEeiCta8rX3fxAA" target="_epgvNs2iEeiCta8rX3fxAA" source="_epgvOM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvLc2iEeiCta8rX3fxAA" target="_epgvOc2iEeiCta8rX3fxAA" source="_epgvLs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_epgvLs2iEeiCta8rX3fxAA" name="Merge(CastExpression@7bb824b4.operand)" incoming="_epgvKs2iEeiCta8rX3fxAA" outgoing="_epgvLc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_epgvL82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_epgvMM2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(String).object" incoming="_epgvJ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvMc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvMs2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_epgvM82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(String).result" outgoing="_epgvKc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvNM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvNc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_epgvNs2iEeiCta8rX3fxAA" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_epgvLM2iEeiCta8rX3fxAA" outgoing="_epgvJ82iEeiCta8rX3fxAA _epgvKM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_epgvN82iEeiCta8rX3fxAA" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_epgvKM2iEeiCta8rX3fxAA _epgvKc2iEeiCta8rX3fxAA" outgoing="_epgvKs2iEeiCta8rX3fxAA" decisionInputFlow="_epgvKc2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_epgvOM2iEeiCta8rX3fxAA" name="CastExpression@7bb824b4.inputElement" incoming="_epgJ2M2iEeiCta8rX3fxAA" outgoing="_epgvLM2iEeiCta8rX3fxAA" regionAsInput="_epgvJs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_epgvOc2iEeiCta8rX3fxAA" name="CastExpression@7bb824b4.outputElement" incoming="_epgvLc2iEeiCta8rX3fxAA" outgoing="_epgvI82iEeiCta8rX3fxAA" regionAsOutput="_epgvJs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_epgvOs2iEeiCta8rX3fxAA" name="IfStatement@618c59f5" incoming="_epgJ-M2iEeiCta8rX3fxAA" outgoing="_epgJ-c2iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvO82iEeiCta8rX3fxAA" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_epgvPM2iEeiCta8rX3fxAA" target="_epgvQ82iEeiCta8rX3fxAA" source="_epgvPc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvPc2iEeiCta8rX3fxAA" name="Operands(EqualityExpression@2853bd89)" outgoing="_epgvPM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgvPs2iEeiCta8rX3fxAA" name="Value(null)">
                  <result xmi:id="_epgvP82iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvQM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvQc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_epgvQs2iEeiCta8rX3fxAA"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgvQ82iEeiCta8rX3fxAA" name="Call(NotEmpty)" incoming="_epgvPM2iEeiCta8rX3fxAA">
                <argument xmi:id="_epgvRM2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_epgJ9M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvRc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvRs2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <result xmi:id="_epgvR82iEeiCta8rX3fxAA" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvSM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvSc2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvSs2iEeiCta8rX3fxAA" name="ExpressionStatement@20f472e5">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvS82iEeiCta8rX3fxAA" target="_epgvTs2iEeiCta8rX3fxAA" source="_epgvfc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epgvTM2iEeiCta8rX3fxAA" target="_epgvTc2iEeiCta8rX3fxAA" source="_epgvUc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgvTc2iEeiCta8rX3fxAA" name="Call(Write)" incoming="_epgvTM2iEeiCta8rX3fxAA" behavior="_epgw382iEeiCta8rX3fxAA">
                <argument xmi:id="_epgvTs2iEeiCta8rX3fxAA" name="Call(Write).argument(value)" incoming="_epgvS82iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvT82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvUM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvUc2iEeiCta8rX3fxAA" name="Tuple@4cc348d7" outgoing="_epgvTM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvUs2iEeiCta8rX3fxAA" target="_epgvbc2iEeiCta8rX3fxAA" source="_epgvW82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvU82iEeiCta8rX3fxAA" target="_epgvcM2iEeiCta8rX3fxAA" source="_epgvZM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epgvVM2iEeiCta8rX3fxAA" target="_epgvZ82iEeiCta8rX3fxAA" source="_epgvWs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epgvVc2iEeiCta8rX3fxAA" target="_epgvZ82iEeiCta8rX3fxAA" source="_epgvX82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvVs2iEeiCta8rX3fxAA" target="_epgvgc2iEeiCta8rX3fxAA" source="_epgvac2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvV82iEeiCta8rX3fxAA" target="_epgvhM2iEeiCta8rX3fxAA" source="_epgvd82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epgvWM2iEeiCta8rX3fxAA" target="_epgve82iEeiCta8rX3fxAA" source="_epgvZ82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epgvWc2iEeiCta8rX3fxAA" target="_epgve82iEeiCta8rX3fxAA" source="_epgvds2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgvWs2iEeiCta8rX3fxAA" name="Value(&quot;&quot;&quot;)" outgoing="_epgvVM2iEeiCta8rX3fxAA">
                  <result xmi:id="_epgvW82iEeiCta8rX3fxAA" name="Value(&quot;&quot;&quot;).result" outgoing="_epgvUs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvXM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvXc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epgvXs2iEeiCta8rX3fxAA" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvX82iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1a94dd7a)" outgoing="_epgvVc2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvYM2iEeiCta8rX3fxAA" target="_epgvZM2iEeiCta8rX3fxAA" source="_epgvYc2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_epgvYc2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1a94dd7a).input" incoming="_epgJ9c2iEeiCta8rX3fxAA" outgoing="_epgvYM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvYs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvY82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_epgvZM2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1a94dd7a).output" incoming="_epgvYM2iEeiCta8rX3fxAA" outgoing="_epgvU82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvZc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvZs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvZ82iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_epgvVM2iEeiCta8rX3fxAA _epgvVc2iEeiCta8rX3fxAA" outgoing="_epgvWM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvaM2iEeiCta8rX3fxAA" target="_epgvac2iEeiCta8rX3fxAA" source="_epgvc82iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_epgvac2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_epgvaM2iEeiCta8rX3fxAA" outgoing="_epgvVs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvas2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgva82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgvbM2iEeiCta8rX3fxAA" name="Call(Concat)">
                    <argument xmi:id="_epgvbc2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_epgvUs2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvbs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvb82iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <argument xmi:id="_epgvcM2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_epgvU82iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvcc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvcs2iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <result xmi:id="_epgvc82iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_epgvaM2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvdM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvdc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgvds2iEeiCta8rX3fxAA" name="Value(&quot;&quot;&quot;)" outgoing="_epgvWc2iEeiCta8rX3fxAA">
                  <result xmi:id="_epgvd82iEeiCta8rX3fxAA" name="Value(&quot;&quot;&quot;).result" outgoing="_epgvV82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgveM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvec2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epgves2iEeiCta8rX3fxAA" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgve82iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_epgvWM2iEeiCta8rX3fxAA _epgvWc2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvfM2iEeiCta8rX3fxAA" target="_epgvfc2iEeiCta8rX3fxAA" source="_epgvh82iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_epgvfc2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_epgvfM2iEeiCta8rX3fxAA" outgoing="_epgvS82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvfs2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvf82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgvgM2iEeiCta8rX3fxAA" name="Call(Concat)">
                    <argument xmi:id="_epgvgc2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_epgvVs2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvgs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvg82iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <argument xmi:id="_epgvhM2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_epgvV82iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvhc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvhs2iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <result xmi:id="_epgvh82iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_epgvfM2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgviM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvic2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvis2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvi82iEeiCta8rX3fxAA" target="_epgvj82iEeiCta8rX3fxAA" source="_epgvjM2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_epgvjM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_epgJ2c2iEeiCta8rX3fxAA" outgoing="_epgvi82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvjc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvjs2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_epgvj82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_epgvi82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvkM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvkc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvks2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1a94dd7a)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvk82iEeiCta8rX3fxAA" target="_epgvl82iEeiCta8rX3fxAA" source="_epgvlM2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_epgvlM2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1a94dd7a).input" incoming="_epgJ9s2iEeiCta8rX3fxAA" outgoing="_epgvk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvlc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvls2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_epgvl82iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1a94dd7a).output" incoming="_epgvk82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvmM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvmc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvms2iEeiCta8rX3fxAA" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvm82iEeiCta8rX3fxAA" target="_epgvn82iEeiCta8rX3fxAA" source="_epgvnM2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_epgvnM2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).input" incoming="_epgJ2s2iEeiCta8rX3fxAA" outgoing="_epgvm82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvnc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvns2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_epgvn82iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).output" incoming="_epgvm82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvoM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvoc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvos2iEeiCta8rX3fxAA" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvo82iEeiCta8rX3fxAA" target="_epgvp82iEeiCta8rX3fxAA" source="_epgvpM2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_epgvpM2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).input" incoming="_epgJ282iEeiCta8rX3fxAA" outgoing="_epgvo82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvpc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvps2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_epgvp82iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).output" incoming="_epgvo82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvqM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvqc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgvqs2iEeiCta8rX3fxAA" name="Value(true)">
              <result xmi:id="_epgvq82iEeiCta8rX3fxAA" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvrM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvrc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_epgvrs2iEeiCta8rX3fxAA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvr82iEeiCta8rX3fxAA" name="ExpressionStatement@3cc6e50">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvsM2iEeiCta8rX3fxAA" target="_epgvs82iEeiCta8rX3fxAA" source="_epgv482iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epgvsc2iEeiCta8rX3fxAA" target="_epgvss2iEeiCta8rX3fxAA" source="_epgvts2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgvss2iEeiCta8rX3fxAA" name="Call(Write)" incoming="_epgvsc2iEeiCta8rX3fxAA" behavior="_epgw382iEeiCta8rX3fxAA">
                <argument xmi:id="_epgvs82iEeiCta8rX3fxAA" name="Call(Write).argument(value)" incoming="_epgvsM2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvtM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvtc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvts2iEeiCta8rX3fxAA" name="Tuple@2986169b" outgoing="_epgvsc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvt82iEeiCta8rX3fxAA" target="_epgvy82iEeiCta8rX3fxAA" source="_epgvw82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epgvuM2iEeiCta8rX3fxAA" target="_epgvys2iEeiCta8rX3fxAA" source="_epgvws2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvuc2iEeiCta8rX3fxAA" target="_epgv1s2iEeiCta8rX3fxAA" source="_epgvw82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epgvus2iEeiCta8rX3fxAA" target="_epgv4s2iEeiCta8rX3fxAA" source="_epgv4c2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvu82iEeiCta8rX3fxAA" target="_epgv4s2iEeiCta8rX3fxAA" source="_epgvzs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epgvvM2iEeiCta8rX3fxAA" target="_epgv0c2iEeiCta8rX3fxAA" source="_epgv4s2iEeiCta8rX3fxAA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgvvc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_epgvvs2iEeiCta8rX3fxAA" target="_epgv182iEeiCta8rX3fxAA" source="_epgv4s2iEeiCta8rX3fxAA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgvv82iEeiCta8rX3fxAA" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvwM2iEeiCta8rX3fxAA" target="_epgv482iEeiCta8rX3fxAA" source="_epgv082iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgvwc2iEeiCta8rX3fxAA" target="_epgv482iEeiCta8rX3fxAA" source="_epgv2c2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvws2iEeiCta8rX3fxAA" name="Operands(EqualityExpression@979d6a8)" outgoing="_epgvuM2iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ForkNode" xmi:id="_epgvw82iEeiCta8rX3fxAA" name="Fork('')@70b78f50" incoming="_epgJ3M2iEeiCta8rX3fxAA" outgoing="_epgvt82iEeiCta8rX3fxAA _epgvuc2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgvxM2iEeiCta8rX3fxAA" name="RightHandSide@4e91d85c"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgvxc2iEeiCta8rX3fxAA" name="Value(null)">
                    <result xmi:id="_epgvxs2iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvx82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvyM2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_epgvyc2iEeiCta8rX3fxAA"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgvys2iEeiCta8rX3fxAA" name="Call(NotEmpty)" incoming="_epgvuM2iEeiCta8rX3fxAA">
                  <argument xmi:id="_epgvy82iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_epgvt82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvzM2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgvzc2iEeiCta8rX3fxAA" value="*"/>
                  </argument>
                  <result xmi:id="_epgvzs2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_epgvu82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgvz82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgv0M2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgv0c2iEeiCta8rX3fxAA" name="NullCoalescingExpression@1caa4b3c.operand2" incoming="_epgvvM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epgv0s2iEeiCta8rX3fxAA" target="_epgv082iEeiCta8rX3fxAA" source="_epgv1s2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_epgv082iEeiCta8rX3fxAA" name="NullCoalescingExpression@1caa4b3c.operand2.result" incoming="_epgv0s2iEeiCta8rX3fxAA" outgoing="_epgvwM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgv1M2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgv1c2iEeiCta8rX3fxAA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_epgv1s2iEeiCta8rX3fxAA" name="Merge(Fork('')@70b78f50)" incoming="_epgvuc2iEeiCta8rX3fxAA" outgoing="_epgv0s2iEeiCta8rX3fxAA"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgv182iEeiCta8rX3fxAA" name="NullCoalescingExpression@1caa4b3c.operand3" incoming="_epgvvs2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_epgv2M2iEeiCta8rX3fxAA" target="_epgv2c2iEeiCta8rX3fxAA" source="_epgv3c2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_epgv2c2iEeiCta8rX3fxAA" name="NullCoalescingExpression@1caa4b3c.operand3.result" incoming="_epgv2M2iEeiCta8rX3fxAA" outgoing="_epgvwc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgv2s2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgv282iEeiCta8rX3fxAA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgv3M2iEeiCta8rX3fxAA" name="Value(&quot;null&quot;)">
                    <result xmi:id="_epgv3c2iEeiCta8rX3fxAA" name="Value(&quot;null&quot;).result" outgoing="_epgv2M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgv3s2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgv382iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_epgv4M2iEeiCta8rX3fxAA" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_epgv4c2iEeiCta8rX3fxAA" name="Initial(NullCoalescingExpression@1caa4b3c)" outgoing="_epgvus2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_epgv4s2iEeiCta8rX3fxAA" name="Decision(NullCoalescingExpression@1caa4b3c)" incoming="_epgvus2iEeiCta8rX3fxAA _epgvu82iEeiCta8rX3fxAA" outgoing="_epgvvM2iEeiCta8rX3fxAA _epgvvs2iEeiCta8rX3fxAA" decisionInputFlow="_epgvu82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_epgv482iEeiCta8rX3fxAA" name="Merge(NullCoalescingExpression@1caa4b3c.result)" incoming="_epgvwM2iEeiCta8rX3fxAA _epgvwc2iEeiCta8rX3fxAA" outgoing="_epgvsM2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgv5M2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgv5c2iEeiCta8rX3fxAA" target="_epgv6c2iEeiCta8rX3fxAA" source="_epgv5s2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_epgv5s2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_epgJ3c2iEeiCta8rX3fxAA" outgoing="_epgv5c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgv582iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgv6M2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_epgv6c2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_epgv5c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgv6s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgv682iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgv7M2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1a94dd7a)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgv7c2iEeiCta8rX3fxAA" target="_epgv8c2iEeiCta8rX3fxAA" source="_epgv7s2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_epgv7s2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1a94dd7a).input" incoming="_epgJ982iEeiCta8rX3fxAA" outgoing="_epgv7c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgv782iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgv8M2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_epgv8c2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1a94dd7a).output" incoming="_epgv7c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgv8s2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgv882iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgv9M2iEeiCta8rX3fxAA" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgv9c2iEeiCta8rX3fxAA" target="_epgv-c2iEeiCta8rX3fxAA" source="_epgv9s2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_epgv9s2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).input" incoming="_epgJ3s2iEeiCta8rX3fxAA" outgoing="_epgv9c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgv982iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgv-M2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_epgv-c2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).output" incoming="_epgv9c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgv-s2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgv-82iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgv_M2iEeiCta8rX3fxAA" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgv_c2iEeiCta8rX3fxAA" target="_epgwAc2iEeiCta8rX3fxAA" source="_epgv_s2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_epgv_s2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).input" incoming="_epgJ382iEeiCta8rX3fxAA" outgoing="_epgv_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgv_82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwAM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_epgwAc2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).output" incoming="_epgv_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwAs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwA82iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_epgwBM2iEeiCta8rX3fxAA" body="_epgvSs2iEeiCta8rX3fxAA _epgvis2iEeiCta8rX3fxAA _epgvks2iEeiCta8rX3fxAA _epgvms2iEeiCta8rX3fxAA _epgvos2iEeiCta8rX3fxAA" bodyOutput="_epgvj82iEeiCta8rX3fxAA _epgvl82iEeiCta8rX3fxAA _epgvn82iEeiCta8rX3fxAA _epgvp82iEeiCta8rX3fxAA" decider="_epgvR82iEeiCta8rX3fxAA" successorClause="_epgwBc2iEeiCta8rX3fxAA" test="_epgvO82iEeiCta8rX3fxAA"/>
            <clause xmi:id="_epgwBc2iEeiCta8rX3fxAA" body="_epgvr82iEeiCta8rX3fxAA _epgv5M2iEeiCta8rX3fxAA _epgv7M2iEeiCta8rX3fxAA _epgv9M2iEeiCta8rX3fxAA _epgv_M2iEeiCta8rX3fxAA" bodyOutput="_epgv6c2iEeiCta8rX3fxAA _epgv8c2iEeiCta8rX3fxAA _epgv-c2iEeiCta8rX3fxAA _epgwAc2iEeiCta8rX3fxAA" decider="_epgvq82iEeiCta8rX3fxAA" predecessorClause="_epgwBM2iEeiCta8rX3fxAA" test="_epgvqs2iEeiCta8rX3fxAA"/>
            <result xmi:id="_epgwBs2iEeiCta8rX3fxAA" name="IfStatement@618c59f5.result(label)" outgoing="_epgJ8M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwB82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwCM2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <result xmi:id="_epgwCc2iEeiCta8rX3fxAA" name="IfStatement@618c59f5.result(s)" outgoing="_epgJ8c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwCs2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwC82iEeiCta8rX3fxAA" value="1"/>
            </result>
            <result xmi:id="_epgwDM2iEeiCta8rX3fxAA" name="IfStatement@618c59f5.result(value2)" outgoing="_epgJ8s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwDc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwDs2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <result xmi:id="_epgwD82iEeiCta8rX3fxAA" name="IfStatement@618c59f5.result(value1)" outgoing="_epgJ882iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwEM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwEc2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_epgwEs2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_epgJ8M2iEeiCta8rX3fxAA" outgoing="_epgJ-s2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_epgwE82iEeiCta8rX3fxAA" name="Fork(s)" incoming="_epgJ8c2iEeiCta8rX3fxAA" outgoing="_epgJ-82iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_epgwFM2iEeiCta8rX3fxAA" name="Fork(value2)" incoming="_epgJ8s2iEeiCta8rX3fxAA" outgoing="_epgJ_M2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_epgwFc2iEeiCta8rX3fxAA" name="Fork(value1)" incoming="_epgJ882iEeiCta8rX3fxAA" outgoing="_epgJ_c2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgwFs2iEeiCta8rX3fxAA" name="ExpressionStatement@51836fda" incoming="_epgJ-c2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwF82iEeiCta8rX3fxAA" target="_epgwGs2iEeiCta8rX3fxAA" source="_epgwIs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgwGM2iEeiCta8rX3fxAA" target="_epgwGc2iEeiCta8rX3fxAA" source="_epgwIM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgwGc2iEeiCta8rX3fxAA" name="Call(WriteLine)" incoming="_epgwGM2iEeiCta8rX3fxAA">
              <argument xmi:id="_epgwGs2iEeiCta8rX3fxAA" name="Call(WriteLine).argument(value)" incoming="_epgwF82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwG82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwHM2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_epgwHc2iEeiCta8rX3fxAA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwHs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwH82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgwIM2iEeiCta8rX3fxAA" name="Tuple@3117a7ce" outgoing="_epgwGM2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgwIc2iEeiCta8rX3fxAA" name="Value(&quot;&quot;)">
                <result xmi:id="_epgwIs2iEeiCta8rX3fxAA" name="Value(&quot;&quot;).result" outgoing="_epgwF82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwI82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwJM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_epgwJc2iEeiCta8rX3fxAA" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgwJs2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwJ82iEeiCta8rX3fxAA" target="_epgwK82iEeiCta8rX3fxAA" source="_epgwKM2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_epgwKM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_epgJ-s2iEeiCta8rX3fxAA" outgoing="_epgwJ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwKc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwKs2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_epgwK82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_epgwJ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwLM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwLc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgwLs2iEeiCta8rX3fxAA" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwL82iEeiCta8rX3fxAA" target="_epgwM82iEeiCta8rX3fxAA" source="_epgwMM2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_epgwMM2iEeiCta8rX3fxAA" name="Passthru(Fork(s)).input" incoming="_epgJ-82iEeiCta8rX3fxAA" outgoing="_epgwL82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwMc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwMs2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_epgwM82iEeiCta8rX3fxAA" name="Passthru(Fork(s)).output" incoming="_epgwL82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwNM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwNc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgwNs2iEeiCta8rX3fxAA" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwN82iEeiCta8rX3fxAA" target="_epgwO82iEeiCta8rX3fxAA" source="_epgwOM2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_epgwOM2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).input" incoming="_epgJ_M2iEeiCta8rX3fxAA" outgoing="_epgwN82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwOc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwOs2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_epgwO82iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).output" incoming="_epgwN82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwPM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwPc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgwPs2iEeiCta8rX3fxAA" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwP82iEeiCta8rX3fxAA" target="_epgwQ82iEeiCta8rX3fxAA" source="_epgwQM2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_epgwQM2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).input" incoming="_epgJ_c2iEeiCta8rX3fxAA" outgoing="_epgwP82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwQc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwQs2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_epgwQ82iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).output" incoming="_epgwP82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwRM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwRc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgwRs2iEeiCta8rX3fxAA" name="Value(true)">
            <result xmi:id="_epgwR82iEeiCta8rX3fxAA" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwSM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwSc2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_epgwSs2iEeiCta8rX3fxAA" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgwS82iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwTM2iEeiCta8rX3fxAA" target="_epgwUM2iEeiCta8rX3fxAA" source="_epgwTc2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_epgwTc2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_epgJ4M2iEeiCta8rX3fxAA" outgoing="_epgwTM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwTs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwT82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_epgwUM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_epgwTM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwUc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwUs2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgwU82iEeiCta8rX3fxAA" name="Value(null)">
            <result xmi:id="_epgwVM2iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwVc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwVs2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_epgwV82iEeiCta8rX3fxAA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgwWM2iEeiCta8rX3fxAA" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwWc2iEeiCta8rX3fxAA" target="_epgwXc2iEeiCta8rX3fxAA" source="_epgwWs2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_epgwWs2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).input" incoming="_epgJ4c2iEeiCta8rX3fxAA" outgoing="_epgwWc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwW82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwXM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_epgwXc2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).output" incoming="_epgwWc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwXs2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwX82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgwYM2iEeiCta8rX3fxAA" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwYc2iEeiCta8rX3fxAA" target="_epgwZc2iEeiCta8rX3fxAA" source="_epgwYs2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_epgwYs2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).input" incoming="_epgJ4s2iEeiCta8rX3fxAA" outgoing="_epgwYc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwY82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwZM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_epgwZc2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).output" incoming="_epgwYc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwZs2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwZ82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_epgwaM2iEeiCta8rX3fxAA" body="_epgKS82iEeiCta8rX3fxAA _epgvIs2iEeiCta8rX3fxAA _epgvOs2iEeiCta8rX3fxAA _epgwFs2iEeiCta8rX3fxAA _epgwJs2iEeiCta8rX3fxAA _epgwLs2iEeiCta8rX3fxAA _epgwNs2iEeiCta8rX3fxAA _epgwPs2iEeiCta8rX3fxAA" bodyOutput="_epgwK82iEeiCta8rX3fxAA _epgwM82iEeiCta8rX3fxAA _epgwO82iEeiCta8rX3fxAA _epgwQ82iEeiCta8rX3fxAA" decider="_epgKSM2iEeiCta8rX3fxAA" successorClause="_epgwac2iEeiCta8rX3fxAA" test="_epgJ_s2iEeiCta8rX3fxAA"/>
          <clause xmi:id="_epgwac2iEeiCta8rX3fxAA" body="_epgwS82iEeiCta8rX3fxAA _epgwU82iEeiCta8rX3fxAA _epgwWM2iEeiCta8rX3fxAA _epgwYM2iEeiCta8rX3fxAA" bodyOutput="_epgwUM2iEeiCta8rX3fxAA _epgwVM2iEeiCta8rX3fxAA _epgwXc2iEeiCta8rX3fxAA _epgwZc2iEeiCta8rX3fxAA" decider="_epgwR82iEeiCta8rX3fxAA" predecessorClause="_epgwaM2iEeiCta8rX3fxAA" test="_epgwRs2iEeiCta8rX3fxAA"/>
          <result xmi:id="_epgwas2iEeiCta8rX3fxAA" name="IfStatement@63b33395.result(label)" outgoing="_epgJ6s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwa82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwbM2iEeiCta8rX3fxAA" value="1"/>
          </result>
          <result xmi:id="_epgwbc2iEeiCta8rX3fxAA" name="IfStatement@63b33395.result(s)" outgoing="_epgJ682iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwbs2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwb82iEeiCta8rX3fxAA" value="1"/>
          </result>
          <result xmi:id="_epgwcM2iEeiCta8rX3fxAA" name="IfStatement@63b33395.result(value2)" outgoing="_epgJ7M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwcc2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwcs2iEeiCta8rX3fxAA" value="1"/>
          </result>
          <result xmi:id="_epgwc82iEeiCta8rX3fxAA" name="IfStatement@63b33395.result(value1)" outgoing="_epgJ7c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwdM2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwdc2iEeiCta8rX3fxAA" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_epgwds2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_epgJ6s2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_epgwd82iEeiCta8rX3fxAA" name="Fork(s)" incoming="_epgJ682iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_epgweM2iEeiCta8rX3fxAA" name="Fork(value2)" incoming="_epgJ7M2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_epgwec2iEeiCta8rX3fxAA" name="Fork(value1)" incoming="_epgJ7c2iEeiCta8rX3fxAA"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_epgJ482iEeiCta8rX3fxAA" name="Input(label)" outgoing="_epgJ0s2iEeiCta8rX3fxAA" parameter="_epgJyc2iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_epgJ5M2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_epgJ0s2iEeiCta8rX3fxAA" outgoing="_epgJ182iEeiCta8rX3fxAA _epgJ2c2iEeiCta8rX3fxAA _epgJ3c2iEeiCta8rX3fxAA _epgJ4M2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_epgJ5c2iEeiCta8rX3fxAA" name="Input(value1)" outgoing="_epgJ082iEeiCta8rX3fxAA" parameter="_epgJzM2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_epgJ5s2iEeiCta8rX3fxAA" name="Fork(value1)" incoming="_epgJ082iEeiCta8rX3fxAA" outgoing="_epgJ1c2iEeiCta8rX3fxAA _epgJ282iEeiCta8rX3fxAA _epgJ382iEeiCta8rX3fxAA _epgJ4s2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_epgJ582iEeiCta8rX3fxAA" name="Input(value2)" outgoing="_epgJ1M2iEeiCta8rX3fxAA" parameter="_epgJz82iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_epgJ6M2iEeiCta8rX3fxAA" name="Fork(value2)" incoming="_epgJ1M2iEeiCta8rX3fxAA" outgoing="_epgJ1s2iEeiCta8rX3fxAA _epgJ2M2iEeiCta8rX3fxAA _epgJ2s2iEeiCta8rX3fxAA _epgJ3M2iEeiCta8rX3fxAA _epgJ3s2iEeiCta8rX3fxAA _epgJ4c2iEeiCta8rX3fxAA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_epgwes2iEeiCta8rX3fxAA" name="AssertFalse" visibility="public" node="_epgwi82iEeiCta8rX3fxAA _epgwjM2iEeiCta8rX3fxAA _epgwjc2iEeiCta8rX3fxAA _epgwjs2iEeiCta8rX3fxAA _epgwj82iEeiCta8rX3fxAA" group="_epgwj82iEeiCta8rX3fxAA">
      <elementImport xmi:id="_epgwe82iEeiCta8rX3fxAA" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_epgwfM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_epgwfc2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_epgwfs2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_epgwf82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_epgwgM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_epgwgc2iEeiCta8rX3fxAA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwgs2iEeiCta8rX3fxAA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwg82iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_epgwhM2iEeiCta8rX3fxAA" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwhc2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwhs2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwh82iEeiCta8rX3fxAA" target="_epgwjM2iEeiCta8rX3fxAA" source="_epgwi82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwiM2iEeiCta8rX3fxAA" target="_epgwjs2iEeiCta8rX3fxAA" source="_epgwjc2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwic2iEeiCta8rX3fxAA" target="_epgwsM2iEeiCta8rX3fxAA" source="_epgwjM2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwis2iEeiCta8rX3fxAA" target="_epgw1M2iEeiCta8rX3fxAA" source="_epgwjs2iEeiCta8rX3fxAA"/>
      <structuredNode xmi:id="_epgwj82iEeiCta8rX3fxAA" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgwkM2iEeiCta8rX3fxAA" name="ExpressionStatement@50712e1c">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwkc2iEeiCta8rX3fxAA" target="_epgwlc2iEeiCta8rX3fxAA" source="_epgwuM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwks2iEeiCta8rX3fxAA" target="_epgwmM2iEeiCta8rX3fxAA" source="_epgw3c2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epgwk82iEeiCta8rX3fxAA" target="_epgwlM2iEeiCta8rX3fxAA" source="_epgwm82iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgwlM2iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_epgwk82iEeiCta8rX3fxAA" behavior="_epgJIc2iEeiCta8rX3fxAA">
            <argument xmi:id="_epgwlc2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_epgwkc2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwls2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwl82iEeiCta8rX3fxAA" value="1"/>
            </argument>
            <argument xmi:id="_epgwmM2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_epgwks2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwmc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwms2iEeiCta8rX3fxAA" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgwm82iEeiCta8rX3fxAA" name="Tuple@69434eda" outgoing="_epgwk82iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwnM2iEeiCta8rX3fxAA" target="_epgwvM2iEeiCta8rX3fxAA" source="_epgwqs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwnc2iEeiCta8rX3fxAA" target="_epgwv82iEeiCta8rX3fxAA" source="_epgws82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgwns2iEeiCta8rX3fxAA" target="_epgwts2iEeiCta8rX3fxAA" source="_epgwqc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgwn82iEeiCta8rX3fxAA" target="_epgwts2iEeiCta8rX3fxAA" source="_epgwrs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwoM2iEeiCta8rX3fxAA" target="_epgwy82iEeiCta8rX3fxAA" source="_epgw1M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwoc2iEeiCta8rX3fxAA" target="_epgw1s2iEeiCta8rX3fxAA" source="_epgw1M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwos2iEeiCta8rX3fxAA" target="_epgw3M2iEeiCta8rX3fxAA" source="_epgw2c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwo82iEeiCta8rX3fxAA" target="_epgw3c2iEeiCta8rX3fxAA" source="_epgwzs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwpM2iEeiCta8rX3fxAA" target="_epgw3s2iEeiCta8rX3fxAA" source="_epgw3M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwpc2iEeiCta8rX3fxAA" target="_epgw3s2iEeiCta8rX3fxAA" source="_epgw3M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwps2iEeiCta8rX3fxAA" target="_epgw3c2iEeiCta8rX3fxAA" source="_epgw3s2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgwp82iEeiCta8rX3fxAA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwqM2iEeiCta8rX3fxAA" target="_epgw0c2iEeiCta8rX3fxAA" source="_epgwxs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgwqc2iEeiCta8rX3fxAA" name="Value(&quot;! &quot;)" outgoing="_epgwns2iEeiCta8rX3fxAA">
              <result xmi:id="_epgwqs2iEeiCta8rX3fxAA" name="Value(&quot;! &quot;).result" outgoing="_epgwnM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwq82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwrM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_epgwrc2iEeiCta8rX3fxAA" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgwrs2iEeiCta8rX3fxAA" name="Passthru(Fork(label))" outgoing="_epgwn82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwr82iEeiCta8rX3fxAA" target="_epgws82iEeiCta8rX3fxAA" source="_epgwsM2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_epgwsM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_epgwic2iEeiCta8rX3fxAA" outgoing="_epgwr82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwsc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwss2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_epgws82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_epgwr82iEeiCta8rX3fxAA" outgoing="_epgwnc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwtM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwtc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgwts2iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_epgwns2iEeiCta8rX3fxAA _epgwn82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgwt82iEeiCta8rX3fxAA" target="_epgwuM2iEeiCta8rX3fxAA" source="_epgwws2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_epgwuM2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_epgwt82iEeiCta8rX3fxAA" outgoing="_epgwkc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwuc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwus2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgwu82iEeiCta8rX3fxAA" name="Call(Concat)">
                <argument xmi:id="_epgwvM2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_epgwnM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwvc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwvs2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_epgwv82iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_epgwnc2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwwM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwwc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_epgwws2iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_epgwt82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgww82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwxM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgwxc2iEeiCta8rX3fxAA" name="Value(false)">
              <result xmi:id="_epgwxs2iEeiCta8rX3fxAA" name="Value(false).result" outgoing="_epgwqM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwx82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwyM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_epgwyc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_epgwys2iEeiCta8rX3fxAA" name="Test(==)">
              <first xmi:id="_epgwy82iEeiCta8rX3fxAA" name="Test(==).first" incoming="_epgwoM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwzM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgwzc2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_epgwzs2iEeiCta8rX3fxAA" name="Test(==).result" outgoing="_epgwo82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgwz82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgw0M2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_epgw0c2iEeiCta8rX3fxAA" name="Test(==).second" incoming="_epgwqM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgw0s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgw082iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epgw1M2iEeiCta8rX3fxAA" name="Fork(Fork(condition))" incoming="_epgwis2iEeiCta8rX3fxAA" outgoing="_epgwoM2iEeiCta8rX3fxAA _epgwoc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgw1c2iEeiCta8rX3fxAA" name="Call(NotEmpty)">
              <argument xmi:id="_epgw1s2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_epgwoc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgw182iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgw2M2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_epgw2c2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_epgwos2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgw2s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgw282iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epgw3M2iEeiCta8rX3fxAA" name="Fork(Call(NotEmpty).result())" incoming="_epgwos2iEeiCta8rX3fxAA" outgoing="_epgwpM2iEeiCta8rX3fxAA _epgwpc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_epgw3c2iEeiCta8rX3fxAA" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_epgwo82iEeiCta8rX3fxAA _epgwps2iEeiCta8rX3fxAA" outgoing="_epgwks2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_epgw3s2iEeiCta8rX3fxAA" name="Decision(Call(NotEmpty).result())" incoming="_epgwpM2iEeiCta8rX3fxAA _epgwpc2iEeiCta8rX3fxAA" outgoing="_epgwps2iEeiCta8rX3fxAA" decisionInputFlow="_epgwpc2iEeiCta8rX3fxAA"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_epgwi82iEeiCta8rX3fxAA" name="Input(label)" outgoing="_epgwh82iEeiCta8rX3fxAA" parameter="_epgwgc2iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_epgwjM2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_epgwh82iEeiCta8rX3fxAA" outgoing="_epgwic2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_epgwjc2iEeiCta8rX3fxAA" name="Input(condition)" outgoing="_epgwiM2iEeiCta8rX3fxAA" parameter="_epgwhM2iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_epgwjs2iEeiCta8rX3fxAA" name="Fork(condition)" incoming="_epgwiM2iEeiCta8rX3fxAA" outgoing="_epgwis2iEeiCta8rX3fxAA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_epgw382iEeiCta8rX3fxAA" name="Write" visibility="public" node="_epgw6s2iEeiCta8rX3fxAA _epgw682iEeiCta8rX3fxAA _epgw7M2iEeiCta8rX3fxAA" group="_epgw7M2iEeiCta8rX3fxAA">
      <packageImport xmi:id="_epgw4M2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_epgw4c2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_epgw4s2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_epgw482iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_epgw5M2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_epgw5c2iEeiCta8rX3fxAA" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgw5s2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgw582iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgw6M2iEeiCta8rX3fxAA" target="_epgw682iEeiCta8rX3fxAA" source="_epgw6s2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_epgw6c2iEeiCta8rX3fxAA" target="_epgw9c2iEeiCta8rX3fxAA" source="_epgw682iEeiCta8rX3fxAA"/>
      <structuredNode xmi:id="_epgw7M2iEeiCta8rX3fxAA" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgw7c2iEeiCta8rX3fxAA" name="ExpressionStatement@4ef77ff8">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_epgw7s2iEeiCta8rX3fxAA" target="_epgxMM2iEeiCta8rX3fxAA" source="_epgxPc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_epgw782iEeiCta8rX3fxAA" target="_epgw8M2iEeiCta8rX3fxAA" source="_epgxMc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_epgw8M2iEeiCta8rX3fxAA" name="Collect(Call(write))" incoming="_epgw782iEeiCta8rX3fxAA" mode="parallel" inputElement="_epgxMM2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgw8c2iEeiCta8rX3fxAA" target="_epgw-c2iEeiCta8rX3fxAA" source="_epgxL82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgw8s2iEeiCta8rX3fxAA" target="_epgxD82iEeiCta8rX3fxAA" source="_epgw9c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgw882iEeiCta8rX3fxAA" target="_epgw-M2iEeiCta8rX3fxAA" source="_epgxAs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgw9M2iEeiCta8rX3fxAA" target="_epgw_82iEeiCta8rX3fxAA" source="_epgxMM2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_epgw9c2iEeiCta8rX3fxAA" name="Collect(Call(write)).input(Fork(value))" incoming="_epgw6c2iEeiCta8rX3fxAA" outgoing="_epgw8s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgw9s2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgw982iEeiCta8rX3fxAA" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_epgw-M2iEeiCta8rX3fxAA" name="Call(write)" incoming="_epgw882iEeiCta8rX3fxAA">
              <argument xmi:id="_epgw-c2iEeiCta8rX3fxAA" name="Call(write).argument(value)" incoming="_epgw8c2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgw-s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgw-82iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_epgw_M2iEeiCta8rX3fxAA" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgw_c2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgw_s2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_epgw_82iEeiCta8rX3fxAA" name="Call(write).target" incoming="_epgw9M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgxAM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgxAc2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgxAs2iEeiCta8rX3fxAA" name="Tuple@7198e1f0" outgoing="_epgw882iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgxA82iEeiCta8rX3fxAA" target="_epgxF82iEeiCta8rX3fxAA" source="_epgxD82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epgxBM2iEeiCta8rX3fxAA" target="_epgxFs2iEeiCta8rX3fxAA" source="_epgxDs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgxBc2iEeiCta8rX3fxAA" target="_epgxIs2iEeiCta8rX3fxAA" source="_epgxD82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epgxBs2iEeiCta8rX3fxAA" target="_epgxLs2iEeiCta8rX3fxAA" source="_epgxLc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgxB82iEeiCta8rX3fxAA" target="_epgxLs2iEeiCta8rX3fxAA" source="_epgxGs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epgxCM2iEeiCta8rX3fxAA" target="_epgxHc2iEeiCta8rX3fxAA" source="_epgxLs2iEeiCta8rX3fxAA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgxCc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_epgxCs2iEeiCta8rX3fxAA" target="_epgxI82iEeiCta8rX3fxAA" source="_epgxLs2iEeiCta8rX3fxAA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_epgxC82iEeiCta8rX3fxAA" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgxDM2iEeiCta8rX3fxAA" target="_epgxL82iEeiCta8rX3fxAA" source="_epgxH82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_epgxDc2iEeiCta8rX3fxAA" target="_epgxL82iEeiCta8rX3fxAA" source="_epgxJc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgxDs2iEeiCta8rX3fxAA" name="Operands(EqualityExpression@4f65c822)" outgoing="_epgxBM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ForkNode" xmi:id="_epgxD82iEeiCta8rX3fxAA" name="Fork('')@10059d26" incoming="_epgw8s2iEeiCta8rX3fxAA" outgoing="_epgxA82iEeiCta8rX3fxAA _epgxBc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgxEM2iEeiCta8rX3fxAA" name="RightHandSide@72380997"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgxEc2iEeiCta8rX3fxAA" name="Value(null)">
                  <result xmi:id="_epgxEs2iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgxE82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgxFM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_epgxFc2iEeiCta8rX3fxAA"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgxFs2iEeiCta8rX3fxAA" name="Call(NotEmpty)" incoming="_epgxBM2iEeiCta8rX3fxAA">
                <argument xmi:id="_epgxF82iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_epgxA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgxGM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgxGc2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <result xmi:id="_epgxGs2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_epgxB82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgxG82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgxHM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgxHc2iEeiCta8rX3fxAA" name="NullCoalescingExpression@450db2ec.operand2" incoming="_epgxCM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgxHs2iEeiCta8rX3fxAA" target="_epgxH82iEeiCta8rX3fxAA" source="_epgxIs2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_epgxH82iEeiCta8rX3fxAA" name="NullCoalescingExpression@450db2ec.operand2.result" incoming="_epgxHs2iEeiCta8rX3fxAA" outgoing="_epgxDM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgxIM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgxIc2iEeiCta8rX3fxAA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_epgxIs2iEeiCta8rX3fxAA" name="Merge(Fork('')@10059d26)" incoming="_epgxBc2iEeiCta8rX3fxAA" outgoing="_epgxHs2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgxI82iEeiCta8rX3fxAA" name="NullCoalescingExpression@450db2ec.operand3" incoming="_epgxCs2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_epgxJM2iEeiCta8rX3fxAA" target="_epgxJc2iEeiCta8rX3fxAA" source="_epgxKc2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_epgxJc2iEeiCta8rX3fxAA" name="NullCoalescingExpression@450db2ec.operand3.result" incoming="_epgxJM2iEeiCta8rX3fxAA" outgoing="_epgxDc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgxJs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgxJ82iEeiCta8rX3fxAA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgxKM2iEeiCta8rX3fxAA" name="Value(&quot;null&quot;)">
                  <result xmi:id="_epgxKc2iEeiCta8rX3fxAA" name="Value(&quot;null&quot;).result" outgoing="_epgxJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgxKs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgxK82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_epgxLM2iEeiCta8rX3fxAA" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_epgxLc2iEeiCta8rX3fxAA" name="Initial(NullCoalescingExpression@450db2ec)" outgoing="_epgxBs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_epgxLs2iEeiCta8rX3fxAA" name="Decision(NullCoalescingExpression@450db2ec)" incoming="_epgxBs2iEeiCta8rX3fxAA _epgxB82iEeiCta8rX3fxAA" outgoing="_epgxCM2iEeiCta8rX3fxAA _epgxCs2iEeiCta8rX3fxAA" decisionInputFlow="_epgxB82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:MergeNode" xmi:id="_epgxL82iEeiCta8rX3fxAA" name="Merge(NullCoalescingExpression@450db2ec.result)" incoming="_epgxDM2iEeiCta8rX3fxAA _epgxDc2iEeiCta8rX3fxAA" outgoing="_epgw8c2iEeiCta8rX3fxAA"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_epgxMM2iEeiCta8rX3fxAA" name="Collect(Call(write)).inputElement" incoming="_epgw7s2iEeiCta8rX3fxAA" outgoing="_epgw9M2iEeiCta8rX3fxAA" regionAsInput="_epgw8M2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgxMc2iEeiCta8rX3fxAA" name="Feature(Call(At).result())" outgoing="_epgw782iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgxMs2iEeiCta8rX3fxAA" target="_epgxN82iEeiCta8rX3fxAA" source="_epgxQs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgxM82iEeiCta8rX3fxAA" target="_epgxSs2iEeiCta8rX3fxAA" source="_epgxRs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_epgxNM2iEeiCta8rX3fxAA" target="_epgxNs2iEeiCta8rX3fxAA" source="_epgxQM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_epgxNc2iEeiCta8rX3fxAA" target="_epgxOs2iEeiCta8rX3fxAA" source="_epgxSs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_epgxNs2iEeiCta8rX3fxAA" name="Call(At)" incoming="_epgxNM2iEeiCta8rX3fxAA">
              <argument xmi:id="_epgxN82iEeiCta8rX3fxAA" name="Call(At).argument(seq)" incoming="_epgxMs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgxOM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgxOc2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <argument xmi:id="_epgxOs2iEeiCta8rX3fxAA" name="Call(At).argument(index)" incoming="_epgxNc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgxO82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgxPM2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_epgxPc2iEeiCta8rX3fxAA" name="Call(At).result()" outgoing="_epgw7s2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgxPs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgxP82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_epgxQM2iEeiCta8rX3fxAA" name="Tuple@297508ff" outgoing="_epgxNM2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_epgxQc2iEeiCta8rX3fxAA" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_epgxQs2iEeiCta8rX3fxAA" name="ReadExtent(StandardOutputChannel).result" outgoing="_epgxMs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgxQ82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgxRM2iEeiCta8rX3fxAA" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_epgxRc2iEeiCta8rX3fxAA" name="Value(1)">
                <result xmi:id="_epgxRs2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_epgxM82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_epgxR82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epgxSM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_epgxSc2iEeiCta8rX3fxAA" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_epgxSs2iEeiCta8rX3fxAA" name="Fork(Call(At).argument(index))" incoming="_epgxM82iEeiCta8rX3fxAA" outgoing="_epgxNc2iEeiCta8rX3fxAA"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_epgw6s2iEeiCta8rX3fxAA" name="Input(value)" outgoing="_epgw6M2iEeiCta8rX3fxAA" parameter="_epgw5c2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_epgw682iEeiCta8rX3fxAA" name="Fork(value)" incoming="_epgw6M2iEeiCta8rX3fxAA" outgoing="_epgw6c2iEeiCta8rX3fxAA"/>
    </packagedElement>
    <profileApplication xmi:id="_epgxS82iEeiCta8rX3fxAA">
      <eAnnotations xmi:id="_epgxTM2iEeiCta8rX3fxAA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_epgxTc2iEeiCta8rX3fxAA" base_BehavioralFeature="_epdtRc2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_ephWAM2iEeiCta8rX3fxAA" base_BehavioralFeature="_epdsss2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_ephWAc2iEeiCta8rX3fxAA" base_BehavioralFeature="_epdtSc2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_ephWAs2iEeiCta8rX3fxAA" base_BehavioralFeature="_epe7z82iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_ephWA82iEeiCta8rX3fxAA" base_BehavioralFeature="_epgJGs2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_ephWBM2iEeiCta8rX3fxAA" base_BehavioralFeature="_epgJHs2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_ephWBc2iEeiCta8rX3fxAA" base_BehavioralFeature="_epfjf82iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_ephWBs2iEeiCta8rX3fxAA" base_BehavioralFeature="_epgIgs2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_ephWB82iEeiCta8rX3fxAA" base_BehavioralFeature="_epdsrs2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_ephWCM2iEeiCta8rX3fxAA" base_BehavioralFeature="_epgIjs2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_ephWCc2iEeiCta8rX3fxAA" base_BehavioralFeature="_epdsuc2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_ephWCs2iEeiCta8rX3fxAA" base_BehavioralFeature="_epe7yM2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_ephWC82iEeiCta8rX3fxAA" base_BehavioralFeature="_epfjdM2iEeiCta8rX3fxAA"/>
</xmi:XMI>

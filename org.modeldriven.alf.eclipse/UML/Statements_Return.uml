<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_69QtwBw-Eea9ZZP4p08hug" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_69QtwRw-Eea9ZZP4p08hug" name="Statements_Return" visibility="public">
      <packageImport xmi:id="_69Qtwhw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_69Qtwxw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_69QtxBw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_69QtxRw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_69Qtxhw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_69Qtxxw-Eea9ZZP4p08hug" general="_69RYnxw-Eea9ZZP4p08hug"/>
      <ownedAttribute xmi:id="_69QtyBw-Eea9ZZP4p08hug" name="Statements_Return$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69QtyRw-Eea9ZZP4p08hug" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69Qtyhw-Eea9ZZP4p08hug" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_69Qtyxw-Eea9ZZP4p08hug" name="Statements_Return$method$1" specification="_69RXVRw-Eea9ZZP4p08hug" node="_69Qt0Bw-Eea9ZZP4p08hug _69Qt0Rw-Eea9ZZP4p08hug" group="_69Qt0Rw-Eea9ZZP4p08hug">
        <ownedParameter xmi:id="_69QtzBw-Eea9ZZP4p08hug" name="" type="_69QtwRw-Eea9ZZP4p08hug" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69QtzRw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69Qtzhw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69Qtzxw-Eea9ZZP4p08hug" target="_69Qt0Bw-Eea9ZZP4p08hug" source="_69Qt8Bw-Eea9ZZP4p08hug"/>
        <structuredNode xmi:id="_69Qt0Rw-Eea9ZZP4p08hug" name="Body(Statements_Return$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69Qt0hw-Eea9ZZP4p08hug" target="_69Qt8Bw-Eea9ZZP4p08hug" source="_69Qt7Rw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69Qt0xw-Eea9ZZP4p08hug" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69Qt1Bw-Eea9ZZP4p08hug" name="ExpressionStatement@6ca756f8">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69Qt1Rw-Eea9ZZP4p08hug" target="_69Qt2Rw-Eea9ZZP4p08hug" source="_69Qt5Bw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_69Qt1hw-Eea9ZZP4p08hug" target="_69Qt2Bw-Eea9ZZP4p08hug" source="_69Qt4hw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69Qt1xw-Eea9ZZP4p08hug" target="_69Qt3xw-Eea9ZZP4p08hug" source="_69Qt6Rw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_69Qt2Bw-Eea9ZZP4p08hug" name="Call(run)" incoming="_69Qt1hw-Eea9ZZP4p08hug" operation="_69RXWRw-Eea9ZZP4p08hug">
                <argument xmi:id="_69Qt2Rw-Eea9ZZP4p08hug" name="Call(run).argument(tester)" incoming="_69Qt1Rw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69Qt2hw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69Qt2xw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <result xmi:id="_69Qt3Bw-Eea9ZZP4p08hug" name="Call(run).result()" type="_69QtwRw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69Qt3Rw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69Qt3hw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <target xmi:id="_69Qt3xw-Eea9ZZP4p08hug" name="Call(run).target" incoming="_69Qt1xw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69Qt4Bw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69Qt4Rw-Eea9ZZP4p08hug" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69Qt4hw-Eea9ZZP4p08hug" name="Tuple@6d1e3d1c" outgoing="_69Qt1hw-Eea9ZZP4p08hug">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69Qt4xw-Eea9ZZP4p08hug" name="Value(null)">
                  <result xmi:id="_69Qt5Bw-Eea9ZZP4p08hug" name="Value(null).result" outgoing="_69Qt1Rw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69Qt5Rw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69Qt5hw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_69Qt5xw-Eea9ZZP4p08hug"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_69Qt6Bw-Eea9ZZP4p08hug" name="ReadSelf">
                <result xmi:id="_69Qt6Rw-Eea9ZZP4p08hug" name="ReadSelf.result" outgoing="_69Qt1xw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69Qt6hw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69Qt6xw-Eea9ZZP4p08hug" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_69Qt7Bw-Eea9ZZP4p08hug" name="ReadSelf">
            <result xmi:id="_69Qt7Rw-Eea9ZZP4p08hug" name="ReadSelf.result" outgoing="_69Qt0hw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69Qt7hw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69Qt7xw-Eea9ZZP4p08hug" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_69Qt8Bw-Eea9ZZP4p08hug" name="Fork(ReadSelf.result)" incoming="_69Qt0hw-Eea9ZZP4p08hug" outgoing="_69Qtzxw-Eea9ZZP4p08hug"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69Qt0Bw-Eea9ZZP4p08hug" name="Return" incoming="_69Qtzxw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" parameter="_69QtzBw-Eea9ZZP4p08hug"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_69Qt8Rw-Eea9ZZP4p08hug" name="run$method$1" specification="_69RXWRw-Eea9ZZP4p08hug" node="_69RU1xw-Eea9ZZP4p08hug _69RU2hw-Eea9ZZP4p08hug _69RU2Bw-Eea9ZZP4p08hug _69RU4Bw-Eea9ZZP4p08hug _69RU2Rw-Eea9ZZP4p08hug" group="_69RU2hw-Eea9ZZP4p08hug _69RU4Bw-Eea9ZZP4p08hug">
        <ownedParameter xmi:id="_69Qt8hw-Eea9ZZP4p08hug" name="tester" type="_69RZmBw-Eea9ZZP4p08hug">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69Qt8xw-Eea9ZZP4p08hug"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69Qt9Bw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69Qt9Rw-Eea9ZZP4p08hug" name="" type="_69QtwRw-Eea9ZZP4p08hug" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RU0Bw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RU0Rw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU0hw-Eea9ZZP4p08hug" target="_69RU3Bw-Eea9ZZP4p08hug" source="_69RU1xw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU0xw-Eea9ZZP4p08hug" target="_69RU2Bw-Eea9ZZP4p08hug" source="_69RV5xw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU1Bw-Eea9ZZP4p08hug" target="_69RV6xw-Eea9ZZP4p08hug" source="_69RU3xw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_69RU1Rw-Eea9ZZP4p08hug" target="_69RU2Rw-Eea9ZZP4p08hug" source="_69RU2hw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_69RU1hw-Eea9ZZP4p08hug" target="_69RU4Bw-Eea9ZZP4p08hug" source="_69RU2Rw-Eea9ZZP4p08hug"/>
        <structuredNode xmi:id="_69RU2hw-Eea9ZZP4p08hug" name="Node(Input(tester))" outgoing="_69RU1Rw-Eea9ZZP4p08hug">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU2xw-Eea9ZZP4p08hug" target="_69RU3xw-Eea9ZZP4p08hug" source="_69RU3Bw-Eea9ZZP4p08hug"/>
          <structuredNodeInput xmi:id="_69RU3Bw-Eea9ZZP4p08hug" name="Input(tester)" incoming="_69RU0hw-Eea9ZZP4p08hug" outgoing="_69RU2xw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RU3Rw-Eea9ZZP4p08hug"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RU3hw-Eea9ZZP4p08hug" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_69RU3xw-Eea9ZZP4p08hug" name="Fork(tester)" incoming="_69RU2xw-Eea9ZZP4p08hug" outgoing="_69RU1Bw-Eea9ZZP4p08hug"/>
        </structuredNode>
        <structuredNode xmi:id="_69RU4Bw-Eea9ZZP4p08hug" name="Body(run$method$1)" incoming="_69RU1hw-Eea9ZZP4p08hug">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU4Rw-Eea9ZZP4p08hug" target="_69RV5xw-Eea9ZZP4p08hug" source="_69RV5Bw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU4hw-Eea9ZZP4p08hug" target="_69RV8hw-Eea9ZZP4p08hug" source="_69RV5xw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RU4xw-Eea9ZZP4p08hug" target="_69RU7Rw-Eea9ZZP4p08hug" source="_69RV8Rw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RU5Bw-Eea9ZZP4p08hug" target="_69RV8Rw-Eea9ZZP4p08hug" source="_69RV6Bw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU5Rw-Eea9ZZP4p08hug" target="_69RV9hw-Eea9ZZP4p08hug" source="_69RV5xw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU5hw-Eea9ZZP4p08hug" target="_69RV_Rw-Eea9ZZP4p08hug" source="_69RV-Rw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU5xw-Eea9ZZP4p08hug" target="_69RWCRw-Eea9ZZP4p08hug" source="_69RWABw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU6Bw-Eea9ZZP4p08hug" target="_69RWDxw-Eea9ZZP4p08hug" source="_69RWBBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RU6Rw-Eea9ZZP4p08hug" target="_69RWExw-Eea9ZZP4p08hug" source="_69RWEhw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU6hw-Eea9ZZP4p08hug" target="_69RWExw-Eea9ZZP4p08hug" source="_69RWDBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RU6xw-Eea9ZZP4p08hug" target="_69RV6Bw-Eea9ZZP4p08hug" source="_69RWExw-Eea9ZZP4p08hug">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_69RU7Bw-Eea9ZZP4p08hug" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RU7Rw-Eea9ZZP4p08hug" name="Body" incoming="_69RU4xw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU7hw-Eea9ZZP4p08hug" target="_69RVMhw-Eea9ZZP4p08hug" source="_69RVIxw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RU7xw-Eea9ZZP4p08hug" target="_69RVKhw-Eea9ZZP4p08hug" source="_69RU_Rw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU8Bw-Eea9ZZP4p08hug" target="_69RVSxw-Eea9ZZP4p08hug" source="_69RVJBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RU8Rw-Eea9ZZP4p08hug" target="_69RVQxw-Eea9ZZP4p08hug" source="_69RVKhw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU8hw-Eea9ZZP4p08hug" target="_69RVZBw-Eea9ZZP4p08hug" source="_69RVJRw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RU8xw-Eea9ZZP4p08hug" target="_69RVXBw-Eea9ZZP4p08hug" source="_69RVQxw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU9Bw-Eea9ZZP4p08hug" target="_69RVfRw-Eea9ZZP4p08hug" source="_69RVJhw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RU9Rw-Eea9ZZP4p08hug" target="_69RVdRw-Eea9ZZP4p08hug" source="_69RVXBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU9hw-Eea9ZZP4p08hug" target="_69RVlhw-Eea9ZZP4p08hug" source="_69RVJxw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RU9xw-Eea9ZZP4p08hug" target="_69RVjhw-Eea9ZZP4p08hug" source="_69RVdRw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU-Bw-Eea9ZZP4p08hug" target="_69RVrxw-Eea9ZZP4p08hug" source="_69RVKBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RU-Rw-Eea9ZZP4p08hug" target="_69RVpxw-Eea9ZZP4p08hug" source="_69RVjhw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU-hw-Eea9ZZP4p08hug" target="_69RVyBw-Eea9ZZP4p08hug" source="_69RVKRw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RU-xw-Eea9ZZP4p08hug" target="_69RVwBw-Eea9ZZP4p08hug" source="_69RVpxw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RU_Bw-Eea9ZZP4p08hug" target="_69RV2Rw-Eea9ZZP4p08hug" source="_69RVwBw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RU_Rw-Eea9ZZP4p08hug" name="ExpressionStatement@3a2c3910" outgoing="_69RU7xw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU_hw-Eea9ZZP4p08hug" target="_69RVIxw-Eea9ZZP4p08hug" source="_69RVBxw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RU_xw-Eea9ZZP4p08hug" target="_69RVJBw-Eea9ZZP4p08hug" source="_69RVChw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVABw-Eea9ZZP4p08hug" target="_69RVJRw-Eea9ZZP4p08hug" source="_69RVDRw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVARw-Eea9ZZP4p08hug" target="_69RVJhw-Eea9ZZP4p08hug" source="_69RVEBw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVAhw-Eea9ZZP4p08hug" target="_69RVJxw-Eea9ZZP4p08hug" source="_69RVExw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVAxw-Eea9ZZP4p08hug" target="_69RVKBw-Eea9ZZP4p08hug" source="_69RVFhw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVBBw-Eea9ZZP4p08hug" target="_69RVKRw-Eea9ZZP4p08hug" source="_69RVGRw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVBRw-Eea9ZZP4p08hug" target="_69RVHBw-Eea9ZZP4p08hug" source="_69RVIBw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_69RVBhw-Eea9ZZP4p08hug" name="Call(test)" operation="_69RXYBw-Eea9ZZP4p08hug">
                <result xmi:id="_69RVBxw-Eea9ZZP4p08hug" name="Call(test).result(a)" outgoing="_69RU_hw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVCBw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVCRw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <result xmi:id="_69RVChw-Eea9ZZP4p08hug" name="Call(test).result(b)" outgoing="_69RU_xw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVCxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVDBw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <result xmi:id="_69RVDRw-Eea9ZZP4p08hug" name="Call(test).result(c)" outgoing="_69RVABw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVDhw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVDxw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <result xmi:id="_69RVEBw-Eea9ZZP4p08hug" name="Call(test).result(x)" outgoing="_69RVARw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVERw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVEhw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <result xmi:id="_69RVExw-Eea9ZZP4p08hug" name="Call(test).result(y)" outgoing="_69RVAhw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVFBw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVFRw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <result xmi:id="_69RVFhw-Eea9ZZP4p08hug" name="Call(test).result(z)" outgoing="_69RVAxw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVFxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVGBw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <result xmi:id="_69RVGRw-Eea9ZZP4p08hug" name="Call(test).result(n)" outgoing="_69RVBBw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVGhw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVGxw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <target xmi:id="_69RVHBw-Eea9ZZP4p08hug" name="Call(test).target" incoming="_69RVBRw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVHRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVHhw-Eea9ZZP4p08hug" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_69RVHxw-Eea9ZZP4p08hug" name="ReadSelf">
                <result xmi:id="_69RVIBw-Eea9ZZP4p08hug" name="ReadSelf.result" outgoing="_69RVBRw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVIRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVIhw-Eea9ZZP4p08hug" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_69RVIxw-Eea9ZZP4p08hug" name="Fork(a)@2f820bd2" incoming="_69RU_hw-Eea9ZZP4p08hug" outgoing="_69RU7hw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:ForkNode" xmi:id="_69RVJBw-Eea9ZZP4p08hug" name="Fork(b)@37e67978" incoming="_69RU_xw-Eea9ZZP4p08hug" outgoing="_69RU8Bw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:ForkNode" xmi:id="_69RVJRw-Eea9ZZP4p08hug" name="Fork(c)@7c30d1f3" incoming="_69RVABw-Eea9ZZP4p08hug" outgoing="_69RU8hw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:ForkNode" xmi:id="_69RVJhw-Eea9ZZP4p08hug" name="Fork(x)@6927e837" incoming="_69RVARw-Eea9ZZP4p08hug" outgoing="_69RU9Bw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:ForkNode" xmi:id="_69RVJxw-Eea9ZZP4p08hug" name="Fork(y)@3afea8d0" incoming="_69RVAhw-Eea9ZZP4p08hug" outgoing="_69RU9hw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:ForkNode" xmi:id="_69RVKBw-Eea9ZZP4p08hug" name="Fork(z)@24fd0df2" incoming="_69RVAxw-Eea9ZZP4p08hug" outgoing="_69RU-Bw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:ForkNode" xmi:id="_69RVKRw-Eea9ZZP4p08hug" name="Fork(n)@619e9dd6" incoming="_69RVBBw-Eea9ZZP4p08hug" outgoing="_69RU-hw-Eea9ZZP4p08hug"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVKhw-Eea9ZZP4p08hug" name="ExpressionStatement@6483df9" incoming="_69RU7xw-Eea9ZZP4p08hug" outgoing="_69RU8Rw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVKxw-Eea9ZZP4p08hug" target="_69RVLxw-Eea9ZZP4p08hug" source="_69RVOhw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVLBw-Eea9ZZP4p08hug" target="_69RVNRw-Eea9ZZP4p08hug" source="_69RVPxw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_69RVLRw-Eea9ZZP4p08hug" target="_69RVLhw-Eea9ZZP4p08hug" source="_69RVOBw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RVLhw-Eea9ZZP4p08hug" name="Call(AssertEqual)" incoming="_69RVLRw-Eea9ZZP4p08hug" behavior="_69R8Cxw-Eea9ZZP4p08hug">
                <argument xmi:id="_69RVLxw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(label)" incoming="_69RVKxw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVMBw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVMRw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVMhw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value1)" incoming="_69RU7hw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVMxw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVNBw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVNRw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value2)" incoming="_69RVLBw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVNhw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVNxw-Eea9ZZP4p08hug" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVOBw-Eea9ZZP4p08hug" name="Tuple@7b82ceca" outgoing="_69RVLRw-Eea9ZZP4p08hug">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RVORw-Eea9ZZP4p08hug" name="Value(&quot;a&quot;)">
                  <result xmi:id="_69RVOhw-Eea9ZZP4p08hug" name="Value(&quot;a&quot;).result" outgoing="_69RVKxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVOxw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVPBw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_69RVPRw-Eea9ZZP4p08hug" value="a">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RVPhw-Eea9ZZP4p08hug" name="Value(4)">
                  <result xmi:id="_69RVPxw-Eea9ZZP4p08hug" name="Value(4).result" outgoing="_69RVLBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVQBw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVQRw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_69RVQhw-Eea9ZZP4p08hug" value="4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVQxw-Eea9ZZP4p08hug" name="ExpressionStatement@4f992b06" incoming="_69RU8Rw-Eea9ZZP4p08hug" outgoing="_69RU8xw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVRBw-Eea9ZZP4p08hug" target="_69RVSBw-Eea9ZZP4p08hug" source="_69RVUxw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVRRw-Eea9ZZP4p08hug" target="_69RVThw-Eea9ZZP4p08hug" source="_69RVWBw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_69RVRhw-Eea9ZZP4p08hug" target="_69RVRxw-Eea9ZZP4p08hug" source="_69RVURw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RVRxw-Eea9ZZP4p08hug" name="Call(AssertEqual)" incoming="_69RVRhw-Eea9ZZP4p08hug" behavior="_69R8Cxw-Eea9ZZP4p08hug">
                <argument xmi:id="_69RVSBw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(label)" incoming="_69RVRBw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVSRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVShw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVSxw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value1)" incoming="_69RU8Bw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVTBw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVTRw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVThw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value2)" incoming="_69RVRRw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVTxw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVUBw-Eea9ZZP4p08hug" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVURw-Eea9ZZP4p08hug" name="Tuple@79d3f69" outgoing="_69RVRhw-Eea9ZZP4p08hug">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RVUhw-Eea9ZZP4p08hug" name="Value(&quot;b&quot;)">
                  <result xmi:id="_69RVUxw-Eea9ZZP4p08hug" name="Value(&quot;b&quot;).result" outgoing="_69RVRBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVVBw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVVRw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_69RVVhw-Eea9ZZP4p08hug" value="b">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RVVxw-Eea9ZZP4p08hug" name="Value(2)">
                  <result xmi:id="_69RVWBw-Eea9ZZP4p08hug" name="Value(2).result" outgoing="_69RVRRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVWRw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVWhw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_69RVWxw-Eea9ZZP4p08hug" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVXBw-Eea9ZZP4p08hug" name="ExpressionStatement@1957e1b4" incoming="_69RU8xw-Eea9ZZP4p08hug" outgoing="_69RU9Rw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVXRw-Eea9ZZP4p08hug" target="_69RVYRw-Eea9ZZP4p08hug" source="_69RVbBw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVXhw-Eea9ZZP4p08hug" target="_69RVZxw-Eea9ZZP4p08hug" source="_69RVcRw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_69RVXxw-Eea9ZZP4p08hug" target="_69RVYBw-Eea9ZZP4p08hug" source="_69RVahw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RVYBw-Eea9ZZP4p08hug" name="Call(AssertEqual)" incoming="_69RVXxw-Eea9ZZP4p08hug" behavior="_69R8Cxw-Eea9ZZP4p08hug">
                <argument xmi:id="_69RVYRw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(label)" incoming="_69RVXRw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVYhw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVYxw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVZBw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value1)" incoming="_69RU8hw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVZRw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVZhw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVZxw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value2)" incoming="_69RVXhw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVaBw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVaRw-Eea9ZZP4p08hug" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVahw-Eea9ZZP4p08hug" name="Tuple@2c86a2da" outgoing="_69RVXxw-Eea9ZZP4p08hug">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RVaxw-Eea9ZZP4p08hug" name="Value(&quot;c&quot;)">
                  <result xmi:id="_69RVbBw-Eea9ZZP4p08hug" name="Value(&quot;c&quot;).result" outgoing="_69RVXRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVbRw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVbhw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_69RVbxw-Eea9ZZP4p08hug" value="c">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RVcBw-Eea9ZZP4p08hug" name="Value(&quot;xx&quot;)">
                  <result xmi:id="_69RVcRw-Eea9ZZP4p08hug" name="Value(&quot;xx&quot;).result" outgoing="_69RVXhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVchw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVcxw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_69RVdBw-Eea9ZZP4p08hug" value="xx">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVdRw-Eea9ZZP4p08hug" name="ExpressionStatement@708b600f" incoming="_69RU9Rw-Eea9ZZP4p08hug" outgoing="_69RU9xw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVdhw-Eea9ZZP4p08hug" target="_69RVehw-Eea9ZZP4p08hug" source="_69RVhRw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVdxw-Eea9ZZP4p08hug" target="_69RVgBw-Eea9ZZP4p08hug" source="_69RVihw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_69RVeBw-Eea9ZZP4p08hug" target="_69RVeRw-Eea9ZZP4p08hug" source="_69RVgxw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RVeRw-Eea9ZZP4p08hug" name="Call(AssertEqual)" incoming="_69RVeBw-Eea9ZZP4p08hug" behavior="_69R8Cxw-Eea9ZZP4p08hug">
                <argument xmi:id="_69RVehw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(label)" incoming="_69RVdhw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVexw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVfBw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVfRw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value1)" incoming="_69RU9Bw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVfhw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVfxw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVgBw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value2)" incoming="_69RVdxw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVgRw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVghw-Eea9ZZP4p08hug" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVgxw-Eea9ZZP4p08hug" name="Tuple@6c46fb99" outgoing="_69RVeBw-Eea9ZZP4p08hug">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RVhBw-Eea9ZZP4p08hug" name="Value(&quot;x&quot;)">
                  <result xmi:id="_69RVhRw-Eea9ZZP4p08hug" name="Value(&quot;x&quot;).result" outgoing="_69RVdhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVhhw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVhxw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_69RViBw-Eea9ZZP4p08hug" value="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RViRw-Eea9ZZP4p08hug" name="Value(1)">
                  <result xmi:id="_69RVihw-Eea9ZZP4p08hug" name="Value(1).result" outgoing="_69RVdxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVixw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVjBw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_69RVjRw-Eea9ZZP4p08hug" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVjhw-Eea9ZZP4p08hug" name="ExpressionStatement@2ca4734b" incoming="_69RU9xw-Eea9ZZP4p08hug" outgoing="_69RU-Rw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVjxw-Eea9ZZP4p08hug" target="_69RVkxw-Eea9ZZP4p08hug" source="_69RVnhw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVkBw-Eea9ZZP4p08hug" target="_69RVmRw-Eea9ZZP4p08hug" source="_69RVoxw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_69RVkRw-Eea9ZZP4p08hug" target="_69RVkhw-Eea9ZZP4p08hug" source="_69RVnBw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RVkhw-Eea9ZZP4p08hug" name="Call(AssertEqual)" incoming="_69RVkRw-Eea9ZZP4p08hug" behavior="_69R8Cxw-Eea9ZZP4p08hug">
                <argument xmi:id="_69RVkxw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(label)" incoming="_69RVjxw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVlBw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVlRw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVlhw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value1)" incoming="_69RU9hw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVlxw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVmBw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVmRw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value2)" incoming="_69RVkBw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVmhw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVmxw-Eea9ZZP4p08hug" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVnBw-Eea9ZZP4p08hug" name="Tuple@365dad6f" outgoing="_69RVkRw-Eea9ZZP4p08hug">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RVnRw-Eea9ZZP4p08hug" name="Value(&quot;y&quot;)">
                  <result xmi:id="_69RVnhw-Eea9ZZP4p08hug" name="Value(&quot;y&quot;).result" outgoing="_69RVjxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVnxw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVoBw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_69RVoRw-Eea9ZZP4p08hug" value="y">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RVohw-Eea9ZZP4p08hug" name="Value(2)">
                  <result xmi:id="_69RVoxw-Eea9ZZP4p08hug" name="Value(2).result" outgoing="_69RVkBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVpBw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVpRw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_69RVphw-Eea9ZZP4p08hug" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVpxw-Eea9ZZP4p08hug" name="ExpressionStatement@4f3e337f" incoming="_69RU-Rw-Eea9ZZP4p08hug" outgoing="_69RU-xw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVqBw-Eea9ZZP4p08hug" target="_69RVrBw-Eea9ZZP4p08hug" source="_69RVtxw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVqRw-Eea9ZZP4p08hug" target="_69RVshw-Eea9ZZP4p08hug" source="_69RVvBw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_69RVqhw-Eea9ZZP4p08hug" target="_69RVqxw-Eea9ZZP4p08hug" source="_69RVtRw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RVqxw-Eea9ZZP4p08hug" name="Call(AssertEqual)" incoming="_69RVqhw-Eea9ZZP4p08hug" behavior="_69R8Cxw-Eea9ZZP4p08hug">
                <argument xmi:id="_69RVrBw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(label)" incoming="_69RVqBw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVrRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVrhw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVrxw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value1)" incoming="_69RU-Bw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVsBw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVsRw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVshw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value2)" incoming="_69RVqRw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVsxw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVtBw-Eea9ZZP4p08hug" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVtRw-Eea9ZZP4p08hug" name="Tuple@3fd4d52c" outgoing="_69RVqhw-Eea9ZZP4p08hug">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RVthw-Eea9ZZP4p08hug" name="Value(&quot;z&quot;)">
                  <result xmi:id="_69RVtxw-Eea9ZZP4p08hug" name="Value(&quot;z&quot;).result" outgoing="_69RVqBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVuBw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVuRw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_69RVuhw-Eea9ZZP4p08hug" value="z">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RVuxw-Eea9ZZP4p08hug" name="Value(3)">
                  <result xmi:id="_69RVvBw-Eea9ZZP4p08hug" name="Value(3).result" outgoing="_69RVqRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVvRw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVvhw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_69RVvxw-Eea9ZZP4p08hug" value="3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVwBw-Eea9ZZP4p08hug" name="ExpressionStatement@745b44a2" incoming="_69RU-xw-Eea9ZZP4p08hug" outgoing="_69RU_Bw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVwRw-Eea9ZZP4p08hug" target="_69RVxRw-Eea9ZZP4p08hug" source="_69RV0Bw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RVwhw-Eea9ZZP4p08hug" target="_69RVyxw-Eea9ZZP4p08hug" source="_69RV1Rw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_69RVwxw-Eea9ZZP4p08hug" target="_69RVxBw-Eea9ZZP4p08hug" source="_69RVzhw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RVxBw-Eea9ZZP4p08hug" name="Call(AssertEqual)" incoming="_69RVwxw-Eea9ZZP4p08hug" behavior="_69R8Cxw-Eea9ZZP4p08hug">
                <argument xmi:id="_69RVxRw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(label)" incoming="_69RVwRw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVxhw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVxxw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVyBw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value1)" incoming="_69RU-hw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVyRw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVyhw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69RVyxw-Eea9ZZP4p08hug" name="Call(AssertEqual).argument(value2)" incoming="_69RVwhw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RVzBw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RVzRw-Eea9ZZP4p08hug" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RVzhw-Eea9ZZP4p08hug" name="Tuple@76d9ff96" outgoing="_69RVwxw-Eea9ZZP4p08hug">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RVzxw-Eea9ZZP4p08hug" name="Value(&quot;n&quot;)">
                  <result xmi:id="_69RV0Bw-Eea9ZZP4p08hug" name="Value(&quot;n&quot;).result" outgoing="_69RVwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RV0Rw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RV0hw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_69RV0xw-Eea9ZZP4p08hug" value="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RV1Bw-Eea9ZZP4p08hug" name="Value(1)">
                  <result xmi:id="_69RV1Rw-Eea9ZZP4p08hug" name="Value(1).result" outgoing="_69RVwhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RV1hw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RV1xw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_69RV2Bw-Eea9ZZP4p08hug" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RV2Rw-Eea9ZZP4p08hug" name="ExpressionStatement@6c24ffd7" incoming="_69RU_Bw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RV2hw-Eea9ZZP4p08hug" target="_69RV3Bw-Eea9ZZP4p08hug" source="_69RV4Bw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_69RV2xw-Eea9ZZP4p08hug" name="Call(done)" operation="_69RZkBw-Eea9ZZP4p08hug">
                <target xmi:id="_69RV3Bw-Eea9ZZP4p08hug" name="Call(done).target" incoming="_69RV2hw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RV3Rw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RV3hw-Eea9ZZP4p08hug" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_69RV3xw-Eea9ZZP4p08hug" name="ReadSelf">
                <result xmi:id="_69RV4Bw-Eea9ZZP4p08hug" name="ReadSelf.result" outgoing="_69RV2hw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RV4Rw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RV4hw-Eea9ZZP4p08hug" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_69RV4xw-Eea9ZZP4p08hug" name="ReadSelf">
            <result xmi:id="_69RV5Bw-Eea9ZZP4p08hug" name="ReadSelf.result" outgoing="_69RU4Rw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RV5Rw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RV5hw-Eea9ZZP4p08hug" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_69RV5xw-Eea9ZZP4p08hug" name="Fork(ReadSelf.result)" incoming="_69RU4Rw-Eea9ZZP4p08hug" outgoing="_69RU0xw-Eea9ZZP4p08hug _69RU4hw-Eea9ZZP4p08hug _69RU5Rw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RV6Bw-Eea9ZZP4p08hug" name="Super" incoming="_69RU6xw-Eea9ZZP4p08hug" outgoing="_69RU5Bw-Eea9ZZP4p08hug">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RV6Rw-Eea9ZZP4p08hug" name="ExpressionStatement@734508f5">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RV6hw-Eea9ZZP4p08hug" name="Call(Test$method$1)" behavior="_69RY2Rw-Eea9ZZP4p08hug">
                <argument xmi:id="_69RV6xw-Eea9ZZP4p08hug" name="Call(Test$method$1).argument(tester)" incoming="_69RU1Bw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RV7Bw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RV7Rw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <result xmi:id="_69RV7hw-Eea9ZZP4p08hug" name="Call(Test$method$1).result()" type="_69RYnxw-Eea9ZZP4p08hug">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RV7xw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RV8Bw-Eea9ZZP4p08hug" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_69RV8Rw-Eea9ZZP4p08hug" name="Call(Statements_Return$initialization$1)" incoming="_69RU5Bw-Eea9ZZP4p08hug" outgoing="_69RU4xw-Eea9ZZP4p08hug" operation="_69RXVBw-Eea9ZZP4p08hug">
            <target xmi:id="_69RV8hw-Eea9ZZP4p08hug" name="Call(Statements_Return$initialization$1).target" incoming="_69RU4hw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RV8xw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RV9Bw-Eea9ZZP4p08hug" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_69RV9Rw-Eea9ZZP4p08hug" name="Read(Statements_Return$initializationFlag$1)" structuralFeature="_69QtyBw-Eea9ZZP4p08hug">
            <object xmi:id="_69RV9hw-Eea9ZZP4p08hug" name="Read(Statements_Return$initializationFlag$1).object" incoming="_69RU5Rw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RV9xw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RV-Bw-Eea9ZZP4p08hug" value="1"/>
            </object>
            <result xmi:id="_69RV-Rw-Eea9ZZP4p08hug" name="Read(Statements_Return$initializationFlag$1).result" outgoing="_69RU5hw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RV-hw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RV-xw-Eea9ZZP4p08hug" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RV_Bw-Eea9ZZP4p08hug" name="Call(ListSize)">
            <argument xmi:id="_69RV_Rw-Eea9ZZP4p08hug" name="Call(ListSize).argument(list)" incoming="_69RU5hw-Eea9ZZP4p08hug">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RV_hw-Eea9ZZP4p08hug"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RV_xw-Eea9ZZP4p08hug" value="*"/>
            </argument>
            <result xmi:id="_69RWABw-Eea9ZZP4p08hug" name="Call(ListSize).result(result)" outgoing="_69RU5xw-Eea9ZZP4p08hug">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWARw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWAhw-Eea9ZZP4p08hug" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RWAxw-Eea9ZZP4p08hug" name="Value(0)">
            <result xmi:id="_69RWBBw-Eea9ZZP4p08hug" name="Value(0).result" outgoing="_69RU6Bw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWBRw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWBhw-Eea9ZZP4p08hug" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_69RWBxw-Eea9ZZP4p08hug">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_69RWCBw-Eea9ZZP4p08hug" name="Test(Size==0)">
            <first xmi:id="_69RWCRw-Eea9ZZP4p08hug" name="Test(Size==0).first" incoming="_69RU5xw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWChw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWCxw-Eea9ZZP4p08hug" value="1"/>
            </first>
            <result xmi:id="_69RWDBw-Eea9ZZP4p08hug" name="Test(Size==0).result" outgoing="_69RU6hw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWDRw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWDhw-Eea9ZZP4p08hug" value="1"/>
            </result>
            <second xmi:id="_69RWDxw-Eea9ZZP4p08hug" name="Test(Size==0).second" incoming="_69RU6Bw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWEBw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWERw-Eea9ZZP4p08hug" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_69RWEhw-Eea9ZZP4p08hug" name="InitialNode" outgoing="_69RU6Rw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_69RWExw-Eea9ZZP4p08hug" name="Decision(Test(Statements_Return$initializationFlag$1))" incoming="_69RU6Rw-Eea9ZZP4p08hug _69RU6hw-Eea9ZZP4p08hug" outgoing="_69RU6xw-Eea9ZZP4p08hug" decisionInputFlow="_69RU6hw-Eea9ZZP4p08hug"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RU1xw-Eea9ZZP4p08hug" name="Input(tester)" outgoing="_69RU0hw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" parameter="_69Qt8hw-Eea9ZZP4p08hug"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RU2Bw-Eea9ZZP4p08hug" name="Return" incoming="_69RU0xw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" parameter="_69Qt9Rw-Eea9ZZP4p08hug"/>
        <node xmi:type="uml:JoinNode" xmi:id="_69RU2Rw-Eea9ZZP4p08hug" name="Join(Input))" incoming="_69RU1Rw-Eea9ZZP4p08hug" outgoing="_69RU1hw-Eea9ZZP4p08hug"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_69RWFBw-Eea9ZZP4p08hug" name="test$method$1" specification="_69RXYBw-Eea9ZZP4p08hug" node="_69RWORw-Eea9ZZP4p08hug _69RWOhw-Eea9ZZP4p08hug _69RWOxw-Eea9ZZP4p08hug _69RWPBw-Eea9ZZP4p08hug _69RWPRw-Eea9ZZP4p08hug _69RWPhw-Eea9ZZP4p08hug _69RWPxw-Eea9ZZP4p08hug _69RWQBw-Eea9ZZP4p08hug _69RWQRw-Eea9ZZP4p08hug" group="_69RWQRw-Eea9ZZP4p08hug">
        <ownedParameter xmi:id="_69RWFRw-Eea9ZZP4p08hug" name="a" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWFhw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWFxw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RWGBw-Eea9ZZP4p08hug" name="b" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWGRw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWGhw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RWGxw-Eea9ZZP4p08hug" name="c" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWHBw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWHRw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RWHhw-Eea9ZZP4p08hug" name="x" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWHxw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWIBw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RWIRw-Eea9ZZP4p08hug" name="y" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWIhw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWIxw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RWJBw-Eea9ZZP4p08hug" name="z" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWJRw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWJhw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RWJxw-Eea9ZZP4p08hug" name="n" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWKBw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWKRw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_69RWKhw-Eea9ZZP4p08hug" target="_69RWQBw-Eea9ZZP4p08hug" source="_69RWrBw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWKxw-Eea9ZZP4p08hug" target="_69RWORw-Eea9ZZP4p08hug" source="_69RWtBw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWLBw-Eea9ZZP4p08hug" target="_69RWOhw-Eea9ZZP4p08hug" source="_69RWtxw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWLRw-Eea9ZZP4p08hug" target="_69RWOxw-Eea9ZZP4p08hug" source="_69RWuhw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWLhw-Eea9ZZP4p08hug" target="_69RWPBw-Eea9ZZP4p08hug" source="_69RWvRw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWLxw-Eea9ZZP4p08hug" target="_69RWPRw-Eea9ZZP4p08hug" source="_69RWwBw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWMBw-Eea9ZZP4p08hug" target="_69RWPhw-Eea9ZZP4p08hug" source="_69RWwxw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWMRw-Eea9ZZP4p08hug" target="_69RWPxw-Eea9ZZP4p08hug" source="_69RWxhw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWMhw-Eea9ZZP4p08hug" target="_69RWORw-Eea9ZZP4p08hug" source="_69RWWBw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWMxw-Eea9ZZP4p08hug" target="_69RWOhw-Eea9ZZP4p08hug" source="_69RWWxw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWNBw-Eea9ZZP4p08hug" target="_69RWOxw-Eea9ZZP4p08hug" source="_69RWXhw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWNRw-Eea9ZZP4p08hug" target="_69RWPBw-Eea9ZZP4p08hug" source="_69RWYRw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWNhw-Eea9ZZP4p08hug" target="_69RWPRw-Eea9ZZP4p08hug" source="_69RWZBw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWNxw-Eea9ZZP4p08hug" target="_69RWPhw-Eea9ZZP4p08hug" source="_69RWZxw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWOBw-Eea9ZZP4p08hug" target="_69RWPxw-Eea9ZZP4p08hug" source="_69RWahw-Eea9ZZP4p08hug"/>
        <structuredNode xmi:id="_69RWQRw-Eea9ZZP4p08hug" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RWQhw-Eea9ZZP4p08hug" target="_69RWdRw-Eea9ZZP4p08hug" source="_69RWbRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RWQxw-Eea9ZZP4p08hug" target="_69RWfRw-Eea9ZZP4p08hug" source="_69RWdRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RWRBw-Eea9ZZP4p08hug" target="_69RWhRw-Eea9ZZP4p08hug" source="_69RWfRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWRRw-Eea9ZZP4p08hug" target="_69RWlRw-Eea9ZZP4p08hug" source="_69RWhxw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RWRhw-Eea9ZZP4p08hug" target="_69RWjhw-Eea9ZZP4p08hug" source="_69RWhRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RWRxw-Eea9ZZP4p08hug" target="_69RWoxw-Eea9ZZP4p08hug" source="_69RWjhw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWSBw-Eea9ZZP4p08hug" target="_69RWyxw-Eea9ZZP4p08hug" source="_69RWbxw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWSRw-Eea9ZZP4p08hug" target="_69RW0xw-Eea9ZZP4p08hug" source="_69RWdxw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWShw-Eea9ZZP4p08hug" target="_69RW2xw-Eea9ZZP4p08hug" source="_69RWfxw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWSxw-Eea9ZZP4p08hug" target="_69RW4xw-Eea9ZZP4p08hug" source="_69RWoRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWTBw-Eea9ZZP4p08hug" target="_69RW6xw-Eea9ZZP4p08hug" source="_69RWohw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWTRw-Eea9ZZP4p08hug" target="_69RW8xw-Eea9ZZP4p08hug" source="_69RWkBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWThw-Eea9ZZP4p08hug" target="_69RW-xw-Eea9ZZP4p08hug" source="_69RWpRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RWTxw-Eea9ZZP4p08hug" target="_69RWrBw-Eea9ZZP4p08hug" source="_69RWoxw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RWUBw-Eea9ZZP4p08hug" target="_69RXARw-Eea9ZZP4p08hug" source="_69RWrBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWURw-Eea9ZZP4p08hug" target="_69RWWBw-Eea9ZZP4p08hug" source="_69RWbxw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWUhw-Eea9ZZP4p08hug" target="_69RWWxw-Eea9ZZP4p08hug" source="_69RWdxw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWUxw-Eea9ZZP4p08hug" target="_69RWXhw-Eea9ZZP4p08hug" source="_69RWfxw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWVBw-Eea9ZZP4p08hug" target="_69RWYRw-Eea9ZZP4p08hug" source="_69RWoRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWVRw-Eea9ZZP4p08hug" target="_69RWZBw-Eea9ZZP4p08hug" source="_69RWohw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWVhw-Eea9ZZP4p08hug" target="_69RWZxw-Eea9ZZP4p08hug" source="_69RWkBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWVxw-Eea9ZZP4p08hug" target="_69RWahw-Eea9ZZP4p08hug" source="_69RXAxw-Eea9ZZP4p08hug"/>
          <structuredNodeOutput xmi:id="_69RWWBw-Eea9ZZP4p08hug" name="Output(a)" incoming="_69RWURw-Eea9ZZP4p08hug" outgoing="_69RWMhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWWRw-Eea9ZZP4p08hug" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWWhw-Eea9ZZP4p08hug" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_69RWWxw-Eea9ZZP4p08hug" name="Output(b)" incoming="_69RWUhw-Eea9ZZP4p08hug" outgoing="_69RWMxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWXBw-Eea9ZZP4p08hug" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWXRw-Eea9ZZP4p08hug" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_69RWXhw-Eea9ZZP4p08hug" name="Output(c)" incoming="_69RWUxw-Eea9ZZP4p08hug" outgoing="_69RWNBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWXxw-Eea9ZZP4p08hug" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWYBw-Eea9ZZP4p08hug" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_69RWYRw-Eea9ZZP4p08hug" name="Output(x)" incoming="_69RWVBw-Eea9ZZP4p08hug" outgoing="_69RWNRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWYhw-Eea9ZZP4p08hug" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWYxw-Eea9ZZP4p08hug" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_69RWZBw-Eea9ZZP4p08hug" name="Output(y)" incoming="_69RWVRw-Eea9ZZP4p08hug" outgoing="_69RWNhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWZRw-Eea9ZZP4p08hug" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWZhw-Eea9ZZP4p08hug" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_69RWZxw-Eea9ZZP4p08hug" name="Output(z)" incoming="_69RWVhw-Eea9ZZP4p08hug" outgoing="_69RWNxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWaBw-Eea9ZZP4p08hug" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWaRw-Eea9ZZP4p08hug" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_69RWahw-Eea9ZZP4p08hug" name="Output(n)" incoming="_69RWVxw-Eea9ZZP4p08hug" outgoing="_69RWOBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWaxw-Eea9ZZP4p08hug" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWbBw-Eea9ZZP4p08hug" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWbRw-Eea9ZZP4p08hug" name="ExpressionStatement@4af30f4b" outgoing="_69RWQhw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWbhw-Eea9ZZP4p08hug" target="_69RWbxw-Eea9ZZP4p08hug" source="_69RWchw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69RWbxw-Eea9ZZP4p08hug" name="Fork(a)@50a59db5" incoming="_69RWbhw-Eea9ZZP4p08hug" outgoing="_69RWSBw-Eea9ZZP4p08hug _69RWURw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWcBw-Eea9ZZP4p08hug" name="RightHandSide@2914ff70">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RWcRw-Eea9ZZP4p08hug" name="Call(test1)" behavior="_69RXdxw-Eea9ZZP4p08hug">
                <result xmi:id="_69RWchw-Eea9ZZP4p08hug" name="Call(test1).result()" outgoing="_69RWbhw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWcxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWdBw-Eea9ZZP4p08hug" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWdRw-Eea9ZZP4p08hug" name="ExpressionStatement@4672c7b7" incoming="_69RWQhw-Eea9ZZP4p08hug" outgoing="_69RWQxw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWdhw-Eea9ZZP4p08hug" target="_69RWdxw-Eea9ZZP4p08hug" source="_69RWehw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69RWdxw-Eea9ZZP4p08hug" name="Fork(b)@4e9c92f7" incoming="_69RWdhw-Eea9ZZP4p08hug" outgoing="_69RWSRw-Eea9ZZP4p08hug _69RWUhw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWeBw-Eea9ZZP4p08hug" name="RightHandSide@974be73">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RWeRw-Eea9ZZP4p08hug" name="Call(test2)" behavior="_69RXmBw-Eea9ZZP4p08hug">
                <result xmi:id="_69RWehw-Eea9ZZP4p08hug" name="Call(test2).result()" outgoing="_69RWdhw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWexw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWfBw-Eea9ZZP4p08hug" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWfRw-Eea9ZZP4p08hug" name="ExpressionStatement@3fb9e925" incoming="_69RWQxw-Eea9ZZP4p08hug" outgoing="_69RWRBw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWfhw-Eea9ZZP4p08hug" target="_69RWfxw-Eea9ZZP4p08hug" source="_69RWghw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69RWfxw-Eea9ZZP4p08hug" name="Fork(c)@581a5c2d" incoming="_69RWfhw-Eea9ZZP4p08hug" outgoing="_69RWShw-Eea9ZZP4p08hug _69RWUxw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWgBw-Eea9ZZP4p08hug" name="RightHandSide@2a99bb8b">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RWgRw-Eea9ZZP4p08hug" name="Call(test3)" behavior="_69RX3hw-Eea9ZZP4p08hug">
                <result xmi:id="_69RWghw-Eea9ZZP4p08hug" name="Call(test3).result()" outgoing="_69RWfhw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWgxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWhBw-Eea9ZZP4p08hug" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWhRw-Eea9ZZP4p08hug" name="ExpressionStatement@5cd43338" incoming="_69RWRBw-Eea9ZZP4p08hug" outgoing="_69RWRhw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWhhw-Eea9ZZP4p08hug" target="_69RWhxw-Eea9ZZP4p08hug" source="_69RWihw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69RWhxw-Eea9ZZP4p08hug" name="Fork(x)@338bd3f7" incoming="_69RWhhw-Eea9ZZP4p08hug" outgoing="_69RWRRw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWiBw-Eea9ZZP4p08hug" name="RightHandSide@21091791">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RWiRw-Eea9ZZP4p08hug" name="Value(0)">
                <result xmi:id="_69RWihw-Eea9ZZP4p08hug" name="Value(0).result" outgoing="_69RWhhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWixw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWjBw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_69RWjRw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWjhw-Eea9ZZP4p08hug" name="ExpressionStatement@5ed147fe" incoming="_69RWRhw-Eea9ZZP4p08hug" outgoing="_69RWRxw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWjxw-Eea9ZZP4p08hug" target="_69RWkBw-Eea9ZZP4p08hug" source="_69RWnhw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69RWkBw-Eea9ZZP4p08hug" name="Fork(z)@15221941" incoming="_69RWjxw-Eea9ZZP4p08hug" outgoing="_69RWTRw-Eea9ZZP4p08hug _69RWVhw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWkRw-Eea9ZZP4p08hug" name="RightHandSide@71a8053d">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWkhw-Eea9ZZP4p08hug" target="_69RWoRw-Eea9ZZP4p08hug" source="_69RWmBw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWkxw-Eea9ZZP4p08hug" target="_69RWohw-Eea9ZZP4p08hug" source="_69RWmxw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RWlBw-Eea9ZZP4p08hug" name="Call(test4)" behavior="_69RYAhw-Eea9ZZP4p08hug">
                <argument xmi:id="_69RWlRw-Eea9ZZP4p08hug" name="Call(test4).argument(x)" incoming="_69RWRRw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWlhw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWlxw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <result xmi:id="_69RWmBw-Eea9ZZP4p08hug" name="Call(test4).result(x)" outgoing="_69RWkhw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWmRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWmhw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <result xmi:id="_69RWmxw-Eea9ZZP4p08hug" name="Call(test4).result(y)" outgoing="_69RWkxw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWnBw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWnRw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <result xmi:id="_69RWnhw-Eea9ZZP4p08hug" name="Call(test4).result()" outgoing="_69RWjxw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWnxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWoBw-Eea9ZZP4p08hug" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_69RWoRw-Eea9ZZP4p08hug" name="Fork(x)@17c705f2" incoming="_69RWkhw-Eea9ZZP4p08hug" outgoing="_69RWSxw-Eea9ZZP4p08hug _69RWVBw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:ForkNode" xmi:id="_69RWohw-Eea9ZZP4p08hug" name="Fork(y)@b575f10" incoming="_69RWkxw-Eea9ZZP4p08hug" outgoing="_69RWTBw-Eea9ZZP4p08hug _69RWVRw-Eea9ZZP4p08hug"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWoxw-Eea9ZZP4p08hug" name="ExpressionStatement@279d9a84" incoming="_69RWRxw-Eea9ZZP4p08hug" outgoing="_69RWTxw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWpBw-Eea9ZZP4p08hug" target="_69RWpRw-Eea9ZZP4p08hug" source="_69RWqBw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69RWpRw-Eea9ZZP4p08hug" name="Fork(n)@7fdbf03e" incoming="_69RWpBw-Eea9ZZP4p08hug" outgoing="_69RWThw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWphw-Eea9ZZP4p08hug" name="RightHandSide@4079b806">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RWpxw-Eea9ZZP4p08hug" name="Value(1)">
                <result xmi:id="_69RWqBw-Eea9ZZP4p08hug" name="Value(1).result" outgoing="_69RWpBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWqRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWqhw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_69RWqxw-Eea9ZZP4p08hug" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWrBw-Eea9ZZP4p08hug" name="ReturnStatement@33db71d7" incoming="_69RWTxw-Eea9ZZP4p08hug" outgoing="_69RWKhw-Eea9ZZP4p08hug _69RWUBw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWrRw-Eea9ZZP4p08hug" target="_69RWtBw-Eea9ZZP4p08hug" source="_69RWzhw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWrhw-Eea9ZZP4p08hug" target="_69RWtxw-Eea9ZZP4p08hug" source="_69RW1hw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWrxw-Eea9ZZP4p08hug" target="_69RWuhw-Eea9ZZP4p08hug" source="_69RW3hw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWsBw-Eea9ZZP4p08hug" target="_69RWvRw-Eea9ZZP4p08hug" source="_69RW5hw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWsRw-Eea9ZZP4p08hug" target="_69RWwBw-Eea9ZZP4p08hug" source="_69RW7hw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWshw-Eea9ZZP4p08hug" target="_69RWwxw-Eea9ZZP4p08hug" source="_69RW9hw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWsxw-Eea9ZZP4p08hug" target="_69RWxhw-Eea9ZZP4p08hug" source="_69RW_hw-Eea9ZZP4p08hug"/>
            <structuredNodeOutput xmi:id="_69RWtBw-Eea9ZZP4p08hug" name="ReturnStatement@33db71d7.output" incoming="_69RWrRw-Eea9ZZP4p08hug" outgoing="_69RWKxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWtRw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWthw-Eea9ZZP4p08hug" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_69RWtxw-Eea9ZZP4p08hug" name="ReturnStatement@33db71d7.output" incoming="_69RWrhw-Eea9ZZP4p08hug" outgoing="_69RWLBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWuBw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWuRw-Eea9ZZP4p08hug" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_69RWuhw-Eea9ZZP4p08hug" name="ReturnStatement@33db71d7.output" incoming="_69RWrxw-Eea9ZZP4p08hug" outgoing="_69RWLRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWuxw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWvBw-Eea9ZZP4p08hug" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_69RWvRw-Eea9ZZP4p08hug" name="ReturnStatement@33db71d7.output" incoming="_69RWsBw-Eea9ZZP4p08hug" outgoing="_69RWLhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWvhw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWvxw-Eea9ZZP4p08hug" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_69RWwBw-Eea9ZZP4p08hug" name="ReturnStatement@33db71d7.output" incoming="_69RWsRw-Eea9ZZP4p08hug" outgoing="_69RWLxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWwRw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWwhw-Eea9ZZP4p08hug" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_69RWwxw-Eea9ZZP4p08hug" name="ReturnStatement@33db71d7.output" incoming="_69RWshw-Eea9ZZP4p08hug" outgoing="_69RWMBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWxBw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWxRw-Eea9ZZP4p08hug" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_69RWxhw-Eea9ZZP4p08hug" name="ReturnStatement@33db71d7.output" incoming="_69RWsxw-Eea9ZZP4p08hug" outgoing="_69RWMRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWxxw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWyBw-Eea9ZZP4p08hug" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RWyRw-Eea9ZZP4p08hug" name="Passthru(Fork(a)@50a59db5)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RWyhw-Eea9ZZP4p08hug" target="_69RWzhw-Eea9ZZP4p08hug" source="_69RWyxw-Eea9ZZP4p08hug"/>
              <structuredNodeInput xmi:id="_69RWyxw-Eea9ZZP4p08hug" name="Passthru(Fork(a)@50a59db5).input" incoming="_69RWSBw-Eea9ZZP4p08hug" outgoing="_69RWyhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWzBw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RWzRw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_69RWzhw-Eea9ZZP4p08hug" name="Passthru(Fork(a)@50a59db5).output" incoming="_69RWyhw-Eea9ZZP4p08hug" outgoing="_69RWrRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RWzxw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RW0Bw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RW0Rw-Eea9ZZP4p08hug" name="Passthru(Fork(b)@4e9c92f7)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RW0hw-Eea9ZZP4p08hug" target="_69RW1hw-Eea9ZZP4p08hug" source="_69RW0xw-Eea9ZZP4p08hug"/>
              <structuredNodeInput xmi:id="_69RW0xw-Eea9ZZP4p08hug" name="Passthru(Fork(b)@4e9c92f7).input" incoming="_69RWSRw-Eea9ZZP4p08hug" outgoing="_69RW0hw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RW1Bw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RW1Rw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_69RW1hw-Eea9ZZP4p08hug" name="Passthru(Fork(b)@4e9c92f7).output" incoming="_69RW0hw-Eea9ZZP4p08hug" outgoing="_69RWrhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RW1xw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RW2Bw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RW2Rw-Eea9ZZP4p08hug" name="Passthru(Fork(c)@581a5c2d)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RW2hw-Eea9ZZP4p08hug" target="_69RW3hw-Eea9ZZP4p08hug" source="_69RW2xw-Eea9ZZP4p08hug"/>
              <structuredNodeInput xmi:id="_69RW2xw-Eea9ZZP4p08hug" name="Passthru(Fork(c)@581a5c2d).input" incoming="_69RWShw-Eea9ZZP4p08hug" outgoing="_69RW2hw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RW3Bw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RW3Rw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_69RW3hw-Eea9ZZP4p08hug" name="Passthru(Fork(c)@581a5c2d).output" incoming="_69RW2hw-Eea9ZZP4p08hug" outgoing="_69RWrxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RW3xw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RW4Bw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RW4Rw-Eea9ZZP4p08hug" name="Passthru(Fork(x)@17c705f2)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RW4hw-Eea9ZZP4p08hug" target="_69RW5hw-Eea9ZZP4p08hug" source="_69RW4xw-Eea9ZZP4p08hug"/>
              <structuredNodeInput xmi:id="_69RW4xw-Eea9ZZP4p08hug" name="Passthru(Fork(x)@17c705f2).input" incoming="_69RWSxw-Eea9ZZP4p08hug" outgoing="_69RW4hw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RW5Bw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RW5Rw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_69RW5hw-Eea9ZZP4p08hug" name="Passthru(Fork(x)@17c705f2).output" incoming="_69RW4hw-Eea9ZZP4p08hug" outgoing="_69RWsBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RW5xw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RW6Bw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RW6Rw-Eea9ZZP4p08hug" name="Passthru(Fork(y)@b575f10)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RW6hw-Eea9ZZP4p08hug" target="_69RW7hw-Eea9ZZP4p08hug" source="_69RW6xw-Eea9ZZP4p08hug"/>
              <structuredNodeInput xmi:id="_69RW6xw-Eea9ZZP4p08hug" name="Passthru(Fork(y)@b575f10).input" incoming="_69RWTBw-Eea9ZZP4p08hug" outgoing="_69RW6hw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RW7Bw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RW7Rw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_69RW7hw-Eea9ZZP4p08hug" name="Passthru(Fork(y)@b575f10).output" incoming="_69RW6hw-Eea9ZZP4p08hug" outgoing="_69RWsRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RW7xw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RW8Bw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RW8Rw-Eea9ZZP4p08hug" name="Passthru(Fork(z)@15221941)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RW8hw-Eea9ZZP4p08hug" target="_69RW9hw-Eea9ZZP4p08hug" source="_69RW8xw-Eea9ZZP4p08hug"/>
              <structuredNodeInput xmi:id="_69RW8xw-Eea9ZZP4p08hug" name="Passthru(Fork(z)@15221941).input" incoming="_69RWTRw-Eea9ZZP4p08hug" outgoing="_69RW8hw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RW9Bw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RW9Rw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_69RW9hw-Eea9ZZP4p08hug" name="Passthru(Fork(z)@15221941).output" incoming="_69RW8hw-Eea9ZZP4p08hug" outgoing="_69RWshw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RW9xw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RW-Bw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RW-Rw-Eea9ZZP4p08hug" name="Passthru(Fork(n)@7fdbf03e)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RW-hw-Eea9ZZP4p08hug" target="_69RW_hw-Eea9ZZP4p08hug" source="_69RW-xw-Eea9ZZP4p08hug"/>
              <structuredNodeInput xmi:id="_69RW-xw-Eea9ZZP4p08hug" name="Passthru(Fork(n)@7fdbf03e).input" incoming="_69RWThw-Eea9ZZP4p08hug" outgoing="_69RW-hw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RW_Bw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RW_Rw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_69RW_hw-Eea9ZZP4p08hug" name="Passthru(Fork(n)@7fdbf03e).output" incoming="_69RW-hw-Eea9ZZP4p08hug" outgoing="_69RWsxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RW_xw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXABw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeOutput>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXARw-Eea9ZZP4p08hug" name="ExpressionStatement@3e108a72" incoming="_69RWUBw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXAhw-Eea9ZZP4p08hug" target="_69RXAxw-Eea9ZZP4p08hug" source="_69RXBhw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69RXAxw-Eea9ZZP4p08hug" name="Fork(n)@4040b0c0" incoming="_69RXAhw-Eea9ZZP4p08hug" outgoing="_69RWVxw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXBBw-Eea9ZZP4p08hug" name="RightHandSide@57142e34">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RXBRw-Eea9ZZP4p08hug" name="Value(2)">
                <result xmi:id="_69RXBhw-Eea9ZZP4p08hug" name="Value(2).result" outgoing="_69RXAhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXBxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXCBw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_69RXCRw-Eea9ZZP4p08hug" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RWORw-Eea9ZZP4p08hug" name="Output(a)" incoming="_69RWKxw-Eea9ZZP4p08hug _69RWMhw-Eea9ZZP4p08hug" parameter="_69RWFRw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RWOhw-Eea9ZZP4p08hug" name="Output(b)" incoming="_69RWLBw-Eea9ZZP4p08hug _69RWMxw-Eea9ZZP4p08hug" parameter="_69RWGBw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RWOxw-Eea9ZZP4p08hug" name="Output(c)" incoming="_69RWLRw-Eea9ZZP4p08hug _69RWNBw-Eea9ZZP4p08hug" parameter="_69RWGxw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RWPBw-Eea9ZZP4p08hug" name="Output(x)" incoming="_69RWLhw-Eea9ZZP4p08hug _69RWNRw-Eea9ZZP4p08hug" parameter="_69RWHhw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RWPRw-Eea9ZZP4p08hug" name="Output(y)" incoming="_69RWLxw-Eea9ZZP4p08hug _69RWNhw-Eea9ZZP4p08hug" parameter="_69RWIRw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RWPhw-Eea9ZZP4p08hug" name="Output(z)" incoming="_69RWMBw-Eea9ZZP4p08hug _69RWNxw-Eea9ZZP4p08hug" parameter="_69RWJBw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RWPxw-Eea9ZZP4p08hug" name="Output(n)" incoming="_69RWMRw-Eea9ZZP4p08hug _69RWOBw-Eea9ZZP4p08hug" parameter="_69RWJxw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_69RWQBw-Eea9ZZP4p08hug" name="Final" incoming="_69RWKhw-Eea9ZZP4p08hug"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_69RXChw-Eea9ZZP4p08hug" name="destroy$method$1" specification="_69RXdhw-Eea9ZZP4p08hug" node="_69RXCxw-Eea9ZZP4p08hug" group="_69RXCxw-Eea9ZZP4p08hug">
        <structuredNode xmi:id="_69RXCxw-Eea9ZZP4p08hug" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_69RXDBw-Eea9ZZP4p08hug" name="Statements_Return$initialization$1" specification="_69RXVBw-Eea9ZZP4p08hug" node="_69RXDRw-Eea9ZZP4p08hug" group="_69RXDRw-Eea9ZZP4p08hug">
        <structuredNode xmi:id="_69RXDRw-Eea9ZZP4p08hug" name="Body(Statements_Return$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXDhw-Eea9ZZP4p08hug" target="_69RXHRw-Eea9ZZP4p08hug" source="_69RXGhw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXDxw-Eea9ZZP4p08hug" target="_69RXIRw-Eea9ZZP4p08hug" source="_69RXHRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXEBw-Eea9ZZP4p08hug" target="_69RXLBw-Eea9ZZP4p08hug" source="_69RXHRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXERw-Eea9ZZP4p08hug" target="_69RXNhw-Eea9ZZP4p08hug" source="_69RXHRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXEhw-Eea9ZZP4p08hug" target="_69RXPRw-Eea9ZZP4p08hug" source="_69RXORw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXExw-Eea9ZZP4p08hug" target="_69RXSRw-Eea9ZZP4p08hug" source="_69RXQBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXFBw-Eea9ZZP4p08hug" target="_69RXTxw-Eea9ZZP4p08hug" source="_69RXRBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RXFRw-Eea9ZZP4p08hug" target="_69RXUxw-Eea9ZZP4p08hug" source="_69RXUhw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXFhw-Eea9ZZP4p08hug" target="_69RXUxw-Eea9ZZP4p08hug" source="_69RXTBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RXFxw-Eea9ZZP4p08hug" target="_69RXHhw-Eea9ZZP4p08hug" source="_69RXUxw-Eea9ZZP4p08hug">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_69RXGBw-Eea9ZZP4p08hug" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_69RXGRw-Eea9ZZP4p08hug" name="ReadSelf">
            <result xmi:id="_69RXGhw-Eea9ZZP4p08hug" name="ReadSelf.result" outgoing="_69RXDhw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXGxw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXHBw-Eea9ZZP4p08hug" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_69RXHRw-Eea9ZZP4p08hug" name="Fork(ReadSelf.result)" incoming="_69RXDhw-Eea9ZZP4p08hug" outgoing="_69RXDxw-Eea9ZZP4p08hug _69RXEBw-Eea9ZZP4p08hug _69RXERw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXHhw-Eea9ZZP4p08hug" name="Initialization" incoming="_69RXFxw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RXHxw-Eea9ZZP4p08hug" target="_69RXJBw-Eea9ZZP4p08hug" source="_69RXIBw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_69RXIBw-Eea9ZZP4p08hug" name="Call(Test$initialization$1)" outgoing="_69RXHxw-Eea9ZZP4p08hug" operation="_69RZjhw-Eea9ZZP4p08hug">
              <target xmi:id="_69RXIRw-Eea9ZZP4p08hug" name="Call(Test$initialization$1).target" incoming="_69RXDxw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXIhw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXIxw-Eea9ZZP4p08hug" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXJBw-Eea9ZZP4p08hug" name="Set(initializationFlag)" incoming="_69RXHxw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXJRw-Eea9ZZP4p08hug" target="_69RXMhw-Eea9ZZP4p08hug" source="_69RXJxw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RXJhw-Eea9ZZP4p08hug" name="Value(true)">
                <result xmi:id="_69RXJxw-Eea9ZZP4p08hug" name="Value(true).result" outgoing="_69RXJRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXKBw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXKRw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_69RXKhw-Eea9ZZP4p08hug" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_69RXKxw-Eea9ZZP4p08hug" name="Write(Statements_Return$initializationFlag$1)" structuralFeature="_69QtyBw-Eea9ZZP4p08hug" isReplaceAll="true">
                <object xmi:id="_69RXLBw-Eea9ZZP4p08hug" name="Write(Statements_Return$initializationFlag$1).object" incoming="_69RXEBw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXLRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXLhw-Eea9ZZP4p08hug" value="1"/>
                </object>
                <result xmi:id="_69RXLxw-Eea9ZZP4p08hug" name="Write(Statements_Return$initializationFlag$1).result" type="_69QtwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXMBw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXMRw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:id="_69RXMhw-Eea9ZZP4p08hug" name="Write(Statements_Return$initializationFlag$1).value" incoming="_69RXJRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXMxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXNBw-Eea9ZZP4p08hug" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_69RXNRw-Eea9ZZP4p08hug" name="Read(Statements_Return$initializationFlag$1)" structuralFeature="_69QtyBw-Eea9ZZP4p08hug">
            <object xmi:id="_69RXNhw-Eea9ZZP4p08hug" name="Read(Statements_Return$initializationFlag$1).object" incoming="_69RXERw-Eea9ZZP4p08hug" type="_69QtwRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXNxw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXOBw-Eea9ZZP4p08hug" value="1"/>
            </object>
            <result xmi:id="_69RXORw-Eea9ZZP4p08hug" name="Read(Statements_Return$initializationFlag$1).result" outgoing="_69RXEhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXOhw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXOxw-Eea9ZZP4p08hug" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RXPBw-Eea9ZZP4p08hug" name="Call(ListSize)">
            <argument xmi:id="_69RXPRw-Eea9ZZP4p08hug" name="Call(ListSize).argument(list)" incoming="_69RXEhw-Eea9ZZP4p08hug">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXPhw-Eea9ZZP4p08hug"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXPxw-Eea9ZZP4p08hug" value="*"/>
            </argument>
            <result xmi:id="_69RXQBw-Eea9ZZP4p08hug" name="Call(ListSize).result(result)" outgoing="_69RXExw-Eea9ZZP4p08hug">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXQRw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXQhw-Eea9ZZP4p08hug" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RXQxw-Eea9ZZP4p08hug" name="Value(0)">
            <result xmi:id="_69RXRBw-Eea9ZZP4p08hug" name="Value(0).result" outgoing="_69RXFBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXRRw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXRhw-Eea9ZZP4p08hug" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_69RXRxw-Eea9ZZP4p08hug">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_69RXSBw-Eea9ZZP4p08hug" name="Test(Size==0)">
            <first xmi:id="_69RXSRw-Eea9ZZP4p08hug" name="Test(Size==0).first" incoming="_69RXExw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXShw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXSxw-Eea9ZZP4p08hug" value="1"/>
            </first>
            <result xmi:id="_69RXTBw-Eea9ZZP4p08hug" name="Test(Size==0).result" outgoing="_69RXFhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXTRw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXThw-Eea9ZZP4p08hug" value="1"/>
            </result>
            <second xmi:id="_69RXTxw-Eea9ZZP4p08hug" name="Test(Size==0).second" incoming="_69RXFBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXUBw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXURw-Eea9ZZP4p08hug" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_69RXUhw-Eea9ZZP4p08hug" name="InitialNode" outgoing="_69RXFRw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_69RXUxw-Eea9ZZP4p08hug" name="Decision(Test(Statements_Return$initializationFlag$1))" incoming="_69RXFRw-Eea9ZZP4p08hug _69RXFhw-Eea9ZZP4p08hug" outgoing="_69RXFxw-Eea9ZZP4p08hug" decisionInputFlow="_69RXFhw-Eea9ZZP4p08hug"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_69RXVBw-Eea9ZZP4p08hug" name="Statements_Return$initialization$1" visibility="protected" method="_69RXDBw-Eea9ZZP4p08hug"/>
      <ownedOperation xmi:id="_69RXVRw-Eea9ZZP4p08hug" name="Statements_Return" visibility="public" method="_69Qtyxw-Eea9ZZP4p08hug">
        <ownedParameter xmi:id="_69RXVhw-Eea9ZZP4p08hug" name="" visibility="package" type="_69QtwRw-Eea9ZZP4p08hug" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXVxw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXWBw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_69RXWRw-Eea9ZZP4p08hug" name="run" visibility="public" method="_69Qt8Rw-Eea9ZZP4p08hug">
        <ownedParameter xmi:id="_69RXWhw-Eea9ZZP4p08hug" name="tester" visibility="package" type="_69RZmBw-Eea9ZZP4p08hug">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXWxw-Eea9ZZP4p08hug"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXXBw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RXXRw-Eea9ZZP4p08hug" name="" visibility="package" type="_69QtwRw-Eea9ZZP4p08hug" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXXhw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXXxw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_69RXYBw-Eea9ZZP4p08hug" name="test" visibility="public" method="_69RWFBw-Eea9ZZP4p08hug">
        <ownedParameter xmi:id="_69RXYRw-Eea9ZZP4p08hug" name="a" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXYhw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXYxw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RXZBw-Eea9ZZP4p08hug" name="b" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXZRw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXZhw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RXZxw-Eea9ZZP4p08hug" name="c" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXaBw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXaRw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RXahw-Eea9ZZP4p08hug" name="x" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXaxw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXbBw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RXbRw-Eea9ZZP4p08hug" name="y" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXbhw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXbxw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RXcBw-Eea9ZZP4p08hug" name="z" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXcRw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXchw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RXcxw-Eea9ZZP4p08hug" name="n" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXdBw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXdRw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_69RXdhw-Eea9ZZP4p08hug" name="destroy" visibility="public" method="_69RXChw-Eea9ZZP4p08hug" redefinedOperation="_69RZjxw-Eea9ZZP4p08hug"/>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_69RXdxw-Eea9ZZP4p08hug" name="test1" visibility="public" node="_69RXfRw-Eea9ZZP4p08hug _69RXfhw-Eea9ZZP4p08hug _69RXfxw-Eea9ZZP4p08hug" group="_69RXfxw-Eea9ZZP4p08hug">
        <ownedParameter xmi:id="_69RXeBw-Eea9ZZP4p08hug" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXeRw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXehw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_69RXexw-Eea9ZZP4p08hug" target="_69RXfhw-Eea9ZZP4p08hug" source="_69RXixw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXfBw-Eea9ZZP4p08hug" target="_69RXfRw-Eea9ZZP4p08hug" source="_69RXjRw-Eea9ZZP4p08hug"/>
        <structuredNode xmi:id="_69RXfxw-Eea9ZZP4p08hug" name="Body(test1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXgBw-Eea9ZZP4p08hug" target="_69RXkhw-Eea9ZZP4p08hug" source="_69RXhBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RXgRw-Eea9ZZP4p08hug" target="_69RXixw-Eea9ZZP4p08hug" source="_69RXghw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXghw-Eea9ZZP4p08hug" name="ExpressionStatement@2768700f" outgoing="_69RXgRw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXgxw-Eea9ZZP4p08hug" target="_69RXhBw-Eea9ZZP4p08hug" source="_69RXhxw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69RXhBw-Eea9ZZP4p08hug" name="Fork(item)@2f016aa0" incoming="_69RXgxw-Eea9ZZP4p08hug" outgoing="_69RXgBw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXhRw-Eea9ZZP4p08hug" name="RightHandSide@5ff467c">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RXhhw-Eea9ZZP4p08hug" name="Value(4)">
                <result xmi:id="_69RXhxw-Eea9ZZP4p08hug" name="Value(4).result" outgoing="_69RXgxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXiBw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXiRw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_69RXihw-Eea9ZZP4p08hug" value="4">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXixw-Eea9ZZP4p08hug" name="ReturnStatement@77f260bb" incoming="_69RXgRw-Eea9ZZP4p08hug" outgoing="_69RXexw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXjBw-Eea9ZZP4p08hug" target="_69RXjRw-Eea9ZZP4p08hug" source="_69RXlRw-Eea9ZZP4p08hug"/>
            <structuredNodeOutput xmi:id="_69RXjRw-Eea9ZZP4p08hug" name="ReturnStatement@77f260bb.output" incoming="_69RXjBw-Eea9ZZP4p08hug" outgoing="_69RXfBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXjhw-Eea9ZZP4p08hug"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXjxw-Eea9ZZP4p08hug" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXkBw-Eea9ZZP4p08hug" name="Passthru(Fork(item)@2f016aa0)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXkRw-Eea9ZZP4p08hug" target="_69RXlRw-Eea9ZZP4p08hug" source="_69RXkhw-Eea9ZZP4p08hug"/>
              <structuredNodeInput xmi:id="_69RXkhw-Eea9ZZP4p08hug" name="Passthru(Fork(item)@2f016aa0).input" incoming="_69RXgBw-Eea9ZZP4p08hug" outgoing="_69RXkRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXkxw-Eea9ZZP4p08hug"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXlBw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_69RXlRw-Eea9ZZP4p08hug" name="Passthru(Fork(item)@2f016aa0).output" incoming="_69RXkRw-Eea9ZZP4p08hug" outgoing="_69RXjBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXlhw-Eea9ZZP4p08hug"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXlxw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeOutput>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RXfRw-Eea9ZZP4p08hug" name="Return" incoming="_69RXfBw-Eea9ZZP4p08hug" parameter="_69RXeBw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_69RXfhw-Eea9ZZP4p08hug" name="Final" incoming="_69RXexw-Eea9ZZP4p08hug"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_69RXmBw-Eea9ZZP4p08hug" name="test2" visibility="public" node="_69RXnhw-Eea9ZZP4p08hug _69RXnxw-Eea9ZZP4p08hug _69RXoBw-Eea9ZZP4p08hug" group="_69RXoBw-Eea9ZZP4p08hug">
        <ownedParameter xmi:id="_69RXmRw-Eea9ZZP4p08hug" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXmhw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXmxw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_69RXnBw-Eea9ZZP4p08hug" target="_69RXnxw-Eea9ZZP4p08hug" source="_69RXzRw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXnRw-Eea9ZZP4p08hug" target="_69RXnhw-Eea9ZZP4p08hug" source="_69RX0Bw-Eea9ZZP4p08hug"/>
        <structuredNode xmi:id="_69RXoBw-Eea9ZZP4p08hug" name="Body(test2)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RXoRw-Eea9ZZP4p08hug" target="_69RXrhw-Eea9ZZP4p08hug" source="_69RXpRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXohw-Eea9ZZP4p08hug" target="_69RX1Bw-Eea9ZZP4p08hug" source="_69RXsBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXoxw-Eea9ZZP4p08hug" target="_69RX3Rw-Eea9ZZP4p08hug" source="_69RXpxw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RXpBw-Eea9ZZP4p08hug" target="_69RXzRw-Eea9ZZP4p08hug" source="_69RXrhw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXpRw-Eea9ZZP4p08hug" name="ExpressionStatement@4dc4d7be" outgoing="_69RXoRw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXphw-Eea9ZZP4p08hug" target="_69RXpxw-Eea9ZZP4p08hug" source="_69RXqhw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69RXpxw-Eea9ZZP4p08hug" name="Fork(index)@20fb27f2" incoming="_69RXphw-Eea9ZZP4p08hug" outgoing="_69RXoxw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXqBw-Eea9ZZP4p08hug" name="RightHandSide@48fb91c8">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RXqRw-Eea9ZZP4p08hug" name="Value(2)">
                <result xmi:id="_69RXqhw-Eea9ZZP4p08hug" name="Value(2).result" outgoing="_69RXphw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXqxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXrBw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_69RXrRw-Eea9ZZP4p08hug" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXrhw-Eea9ZZP4p08hug" name="ExpressionStatement@131ffdf2" incoming="_69RXoRw-Eea9ZZP4p08hug" outgoing="_69RXpBw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXrxw-Eea9ZZP4p08hug" target="_69RXsBw-Eea9ZZP4p08hug" source="_69RXuBw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69RXsBw-Eea9ZZP4p08hug" name="Fork(list)@498661a3" incoming="_69RXrxw-Eea9ZZP4p08hug" outgoing="_69RXohw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXsRw-Eea9ZZP4p08hug" name="RightHandSide@195924ad">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXshw-Eea9ZZP4p08hug" name="SequenceConstructionExpression@195924ad">
                <edge xmi:type="uml:ControlFlow" xmi:id="_69RXsxw-Eea9ZZP4p08hug" target="_69RXwRw-Eea9ZZP4p08hug" source="_69RXuxw-Eea9ZZP4p08hug"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_69RXtBw-Eea9ZZP4p08hug" target="_69RXxxw-Eea9ZZP4p08hug" source="_69RXwRw-Eea9ZZP4p08hug"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXtRw-Eea9ZZP4p08hug" target="_69RXuBw-Eea9ZZP4p08hug" source="_69RXvRw-Eea9ZZP4p08hug"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXthw-Eea9ZZP4p08hug" target="_69RXuBw-Eea9ZZP4p08hug" source="_69RXwxw-Eea9ZZP4p08hug"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXtxw-Eea9ZZP4p08hug" target="_69RXuBw-Eea9ZZP4p08hug" source="_69RXyRw-Eea9ZZP4p08hug"/>
                <structuredNodeOutput xmi:id="_69RXuBw-Eea9ZZP4p08hug" name="SequenceConstructionExpression@195924ad.output" incoming="_69RXtRw-Eea9ZZP4p08hug _69RXthw-Eea9ZZP4p08hug _69RXtxw-Eea9ZZP4p08hug" outgoing="_69RXrxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXuRw-Eea9ZZP4p08hug" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXuhw-Eea9ZZP4p08hug" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXuxw-Eea9ZZP4p08hug" name="SequenceExpressionList@1f1a7ecd#1" outgoing="_69RXsxw-Eea9ZZP4p08hug">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RXvBw-Eea9ZZP4p08hug" name="Value(1)">
                    <result xmi:id="_69RXvRw-Eea9ZZP4p08hug" name="Value(1).result" outgoing="_69RXtRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXvhw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXvxw-Eea9ZZP4p08hug" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_69RXwBw-Eea9ZZP4p08hug" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXwRw-Eea9ZZP4p08hug" name="SequenceExpressionList@1f1a7ecd#2" incoming="_69RXsxw-Eea9ZZP4p08hug" outgoing="_69RXtBw-Eea9ZZP4p08hug">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RXwhw-Eea9ZZP4p08hug" name="Value(2)">
                    <result xmi:id="_69RXwxw-Eea9ZZP4p08hug" name="Value(2).result" outgoing="_69RXthw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXxBw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXxRw-Eea9ZZP4p08hug" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_69RXxhw-Eea9ZZP4p08hug" value="2">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXxxw-Eea9ZZP4p08hug" name="SequenceExpressionList@1f1a7ecd#3" incoming="_69RXtBw-Eea9ZZP4p08hug">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RXyBw-Eea9ZZP4p08hug" name="Value(3)">
                    <result xmi:id="_69RXyRw-Eea9ZZP4p08hug" name="Value(3).result" outgoing="_69RXtxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RXyhw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RXyxw-Eea9ZZP4p08hug" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_69RXzBw-Eea9ZZP4p08hug" value="3">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RXzRw-Eea9ZZP4p08hug" name="ReturnStatement@74978bfe" incoming="_69RXpBw-Eea9ZZP4p08hug" outgoing="_69RXnBw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXzhw-Eea9ZZP4p08hug" target="_69RX1xw-Eea9ZZP4p08hug" source="_69RX3Rw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RXzxw-Eea9ZZP4p08hug" target="_69RX0Bw-Eea9ZZP4p08hug" source="_69RX2hw-Eea9ZZP4p08hug"/>
            <structuredNodeOutput xmi:id="_69RX0Bw-Eea9ZZP4p08hug" name="ReturnStatement@74978bfe.output" incoming="_69RXzxw-Eea9ZZP4p08hug" outgoing="_69RXnRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RX0Rw-Eea9ZZP4p08hug"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RX0hw-Eea9ZZP4p08hug" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RX0xw-Eea9ZZP4p08hug" name="Call(At)">
              <argument xmi:id="_69RX1Bw-Eea9ZZP4p08hug" name="Call(At).argument(seq)" incoming="_69RXohw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RX1Rw-Eea9ZZP4p08hug"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RX1hw-Eea9ZZP4p08hug" value="*"/>
              </argument>
              <argument xmi:id="_69RX1xw-Eea9ZZP4p08hug" name="Call(At).argument(index)" incoming="_69RXzhw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RX2Bw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RX2Rw-Eea9ZZP4p08hug" value="1"/>
              </argument>
              <result xmi:id="_69RX2hw-Eea9ZZP4p08hug" name="Call(At).result()" outgoing="_69RXzxw-Eea9ZZP4p08hug">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RX2xw-Eea9ZZP4p08hug"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RX3Bw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_69RX3Rw-Eea9ZZP4p08hug" name="Fork(Call(At).argument(index))" incoming="_69RXoxw-Eea9ZZP4p08hug" outgoing="_69RXzhw-Eea9ZZP4p08hug"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RXnhw-Eea9ZZP4p08hug" name="Return" incoming="_69RXnRw-Eea9ZZP4p08hug" parameter="_69RXmRw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_69RXnxw-Eea9ZZP4p08hug" name="Final" incoming="_69RXnBw-Eea9ZZP4p08hug"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_69RX3hw-Eea9ZZP4p08hug" name="test3" visibility="public" node="_69RX5Bw-Eea9ZZP4p08hug _69RX5Rw-Eea9ZZP4p08hug _69RX5hw-Eea9ZZP4p08hug" group="_69RX5hw-Eea9ZZP4p08hug">
        <ownedParameter xmi:id="_69RX3xw-Eea9ZZP4p08hug" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RX4Bw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RX4Rw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ControlFlow" xmi:id="_69RX4hw-Eea9ZZP4p08hug" target="_69RX5Rw-Eea9ZZP4p08hug" source="_69RX8xw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RX4xw-Eea9ZZP4p08hug" target="_69RX5Bw-Eea9ZZP4p08hug" source="_69RX9Rw-Eea9ZZP4p08hug"/>
        <structuredNode xmi:id="_69RX5hw-Eea9ZZP4p08hug" name="Body(test3)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RX5xw-Eea9ZZP4p08hug" target="_69RX-Rw-Eea9ZZP4p08hug" source="_69RX7Bw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RX6Bw-Eea9ZZP4p08hug" target="_69RX_Bw-Eea9ZZP4p08hug" source="_69RX7Bw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RX6Rw-Eea9ZZP4p08hug" target="_69RX8xw-Eea9ZZP4p08hug" source="_69RX6hw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RX6hw-Eea9ZZP4p08hug" name="ExpressionStatement@7061accd" outgoing="_69RX6Rw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RX6xw-Eea9ZZP4p08hug" target="_69RX7Bw-Eea9ZZP4p08hug" source="_69RX7xw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69RX7Bw-Eea9ZZP4p08hug" name="Fork(s)@273cd569" incoming="_69RX6xw-Eea9ZZP4p08hug" outgoing="_69RX5xw-Eea9ZZP4p08hug _69RX6Bw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RX7Rw-Eea9ZZP4p08hug" name="RightHandSide@adef49f">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RX7hw-Eea9ZZP4p08hug" name="Value(&quot;x&quot;)">
                <result xmi:id="_69RX7xw-Eea9ZZP4p08hug" name="Value(&quot;x&quot;).result" outgoing="_69RX6xw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RX8Bw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RX8Rw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_69RX8hw-Eea9ZZP4p08hug" value="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RX8xw-Eea9ZZP4p08hug" name="ReturnStatement@7a4f8ca1" incoming="_69RX6Rw-Eea9ZZP4p08hug" outgoing="_69RX4hw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RX9Bw-Eea9ZZP4p08hug" target="_69RX9Rw-Eea9ZZP4p08hug" source="_69RX_xw-Eea9ZZP4p08hug"/>
            <structuredNodeOutput xmi:id="_69RX9Rw-Eea9ZZP4p08hug" name="ReturnStatement@7a4f8ca1.output" incoming="_69RX9Bw-Eea9ZZP4p08hug" outgoing="_69RX4xw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RX9hw-Eea9ZZP4p08hug"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RX9xw-Eea9ZZP4p08hug" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RX-Bw-Eea9ZZP4p08hug" name="Call(Concat)">
              <argument xmi:id="_69RX-Rw-Eea9ZZP4p08hug" name="Call(Concat).argument(x)" incoming="_69RX5xw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RX-hw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RX-xw-Eea9ZZP4p08hug" value="1"/>
              </argument>
              <argument xmi:id="_69RX_Bw-Eea9ZZP4p08hug" name="Call(Concat).argument(y)" incoming="_69RX6Bw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RX_Rw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RX_hw-Eea9ZZP4p08hug" value="1"/>
              </argument>
              <result xmi:id="_69RX_xw-Eea9ZZP4p08hug" name="Call(Concat).result(result)" outgoing="_69RX9Bw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYABw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYARw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RX5Bw-Eea9ZZP4p08hug" name="Return" incoming="_69RX4xw-Eea9ZZP4p08hug" parameter="_69RX3xw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_69RX5Rw-Eea9ZZP4p08hug" name="Final" incoming="_69RX4hw-Eea9ZZP4p08hug"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_69RYAhw-Eea9ZZP4p08hug" name="test4" visibility="public" node="_69RYGBw-Eea9ZZP4p08hug _69RYHhw-Eea9ZZP4p08hug _69RYGRw-Eea9ZZP4p08hug _69RYGhw-Eea9ZZP4p08hug _69RYGxw-Eea9ZZP4p08hug _69RYHBw-Eea9ZZP4p08hug _69RYJBw-Eea9ZZP4p08hug _69RYHRw-Eea9ZZP4p08hug" group="_69RYHhw-Eea9ZZP4p08hug _69RYJBw-Eea9ZZP4p08hug">
        <ownedParameter xmi:id="_69RYAxw-Eea9ZZP4p08hug" name="x" visibility="package" direction="inout">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYBBw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYBRw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RYBhw-Eea9ZZP4p08hug" name="y" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYBxw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYCBw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RYCRw-Eea9ZZP4p08hug" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYChw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYCxw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYDBw-Eea9ZZP4p08hug" target="_69RYIBw-Eea9ZZP4p08hug" source="_69RYGBw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYDRw-Eea9ZZP4p08hug" target="_69RYRRw-Eea9ZZP4p08hug" source="_69RYIxw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYDhw-Eea9ZZP4p08hug" target="_69RYWRw-Eea9ZZP4p08hug" source="_69RYIxw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_69RYDxw-Eea9ZZP4p08hug" target="_69RYHBw-Eea9ZZP4p08hug" source="_69RYYhw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYEBw-Eea9ZZP4p08hug" target="_69RYGxw-Eea9ZZP4p08hug" source="_69RYZhw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYERw-Eea9ZZP4p08hug" target="_69RYGRw-Eea9ZZP4p08hug" source="_69RYaRw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYEhw-Eea9ZZP4p08hug" target="_69RYGhw-Eea9ZZP4p08hug" source="_69RYbBw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYExw-Eea9ZZP4p08hug" target="_69RYkxw-Eea9ZZP4p08hug" source="_69RYIxw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_69RYFBw-Eea9ZZP4p08hug" target="_69RYHRw-Eea9ZZP4p08hug" source="_69RYHhw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_69RYFRw-Eea9ZZP4p08hug" target="_69RYJBw-Eea9ZZP4p08hug" source="_69RYHRw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYFhw-Eea9ZZP4p08hug" target="_69RYGRw-Eea9ZZP4p08hug" source="_69RYKhw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYFxw-Eea9ZZP4p08hug" target="_69RYGhw-Eea9ZZP4p08hug" source="_69RYLRw-Eea9ZZP4p08hug"/>
        <structuredNode xmi:id="_69RYHhw-Eea9ZZP4p08hug" name="Node(Input(x))" outgoing="_69RYFBw-Eea9ZZP4p08hug">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYHxw-Eea9ZZP4p08hug" target="_69RYIxw-Eea9ZZP4p08hug" source="_69RYIBw-Eea9ZZP4p08hug"/>
          <structuredNodeInput xmi:id="_69RYIBw-Eea9ZZP4p08hug" name="Input(x)" incoming="_69RYDBw-Eea9ZZP4p08hug" outgoing="_69RYHxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYIRw-Eea9ZZP4p08hug" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYIhw-Eea9ZZP4p08hug" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_69RYIxw-Eea9ZZP4p08hug" name="Fork(x)" incoming="_69RYHxw-Eea9ZZP4p08hug" outgoing="_69RYDRw-Eea9ZZP4p08hug _69RYDhw-Eea9ZZP4p08hug _69RYExw-Eea9ZZP4p08hug"/>
        </structuredNode>
        <structuredNode xmi:id="_69RYJBw-Eea9ZZP4p08hug" name="Body(test4)" incoming="_69RYFRw-Eea9ZZP4p08hug">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYJRw-Eea9ZZP4p08hug" target="_69RYnhw-Eea9ZZP4p08hug" source="_69RYmxw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYJhw-Eea9ZZP4p08hug" target="_69RYfhw-Eea9ZZP4p08hug" source="_69RYMhw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RYJxw-Eea9ZZP4p08hug" target="_69RYORw-Eea9ZZP4p08hug" source="_69RYMBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYKBw-Eea9ZZP4p08hug" target="_69RYKhw-Eea9ZZP4p08hug" source="_69RYnhw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYKRw-Eea9ZZP4p08hug" target="_69RYLRw-Eea9ZZP4p08hug" source="_69RYMhw-Eea9ZZP4p08hug"/>
          <structuredNodeOutput xmi:id="_69RYKhw-Eea9ZZP4p08hug" name="Output(x)" incoming="_69RYKBw-Eea9ZZP4p08hug" outgoing="_69RYFhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYKxw-Eea9ZZP4p08hug" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYLBw-Eea9ZZP4p08hug" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_69RYLRw-Eea9ZZP4p08hug" name="Output(y)" incoming="_69RYKRw-Eea9ZZP4p08hug" outgoing="_69RYFxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYLhw-Eea9ZZP4p08hug" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYLxw-Eea9ZZP4p08hug" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYMBw-Eea9ZZP4p08hug" name="ExpressionStatement@cce92a5" outgoing="_69RYJxw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYMRw-Eea9ZZP4p08hug" target="_69RYMhw-Eea9ZZP4p08hug" source="_69RYNRw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69RYMhw-Eea9ZZP4p08hug" name="Fork(y)@18222222" incoming="_69RYMRw-Eea9ZZP4p08hug" outgoing="_69RYJhw-Eea9ZZP4p08hug _69RYKRw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYMxw-Eea9ZZP4p08hug" name="RightHandSide@68eef28e">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RYNBw-Eea9ZZP4p08hug" name="Value(2)">
                <result xmi:id="_69RYNRw-Eea9ZZP4p08hug" name="Value(2).result" outgoing="_69RYMRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYNhw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYNxw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_69RYOBw-Eea9ZZP4p08hug" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_69RYORw-Eea9ZZP4p08hug" name="IfStatement@75d060e0" incoming="_69RYJxw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYOhw-Eea9ZZP4p08hug" target="_69RYdhw-Eea9ZZP4p08hug" source="_69RYUBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RYOxw-Eea9ZZP4p08hug" target="_69RYYhw-Eea9ZZP4p08hug" source="_69RYThw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYPBw-Eea9ZZP4p08hug" target="_69RYhhw-Eea9ZZP4p08hug" source="_69RYUBw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYPRw-Eea9ZZP4p08hug" name="Test(Test(==).result)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYPhw-Eea9ZZP4p08hug" target="_69RYSxw-Eea9ZZP4p08hug" source="_69RYQBw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RYPxw-Eea9ZZP4p08hug" name="Value(0)">
                <result xmi:id="_69RYQBw-Eea9ZZP4p08hug" name="Value(0).result" outgoing="_69RYPhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYQRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYQhw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_69RYQxw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_69RYRBw-Eea9ZZP4p08hug" name="Test(==)">
                <first xmi:id="_69RYRRw-Eea9ZZP4p08hug" name="Test(==).first" incoming="_69RYDRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYRhw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYRxw-Eea9ZZP4p08hug" value="1"/>
                </first>
                <result xmi:id="_69RYSBw-Eea9ZZP4p08hug" name="Test(==).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYSRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYShw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <second xmi:id="_69RYSxw-Eea9ZZP4p08hug" name="Test(==).second" incoming="_69RYPhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYTBw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYTRw-Eea9ZZP4p08hug" value="1"/>
                </second>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYThw-Eea9ZZP4p08hug" name="ExpressionStatement@18d77d02" outgoing="_69RYOxw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYTxw-Eea9ZZP4p08hug" target="_69RYUBw-Eea9ZZP4p08hug" source="_69RYXxw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:ForkNode" xmi:id="_69RYUBw-Eea9ZZP4p08hug" name="Fork(x)@be0ee2a" incoming="_69RYTxw-Eea9ZZP4p08hug" outgoing="_69RYOhw-Eea9ZZP4p08hug _69RYPBw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYURw-Eea9ZZP4p08hug" name="RightHandSide@5c340d7d">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYUhw-Eea9ZZP4p08hug" target="_69RYXBw-Eea9ZZP4p08hug" source="_69RYVBw-Eea9ZZP4p08hug"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RYUxw-Eea9ZZP4p08hug" name="Value(1)">
                  <result xmi:id="_69RYVBw-Eea9ZZP4p08hug" name="Value(1).result" outgoing="_69RYUhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYVRw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYVhw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_69RYVxw-Eea9ZZP4p08hug" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RYWBw-Eea9ZZP4p08hug" name="Call(+)">
                  <argument xmi:id="_69RYWRw-Eea9ZZP4p08hug" name="Call(+).argument(x)" incoming="_69RYDhw-Eea9ZZP4p08hug">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYWhw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYWxw-Eea9ZZP4p08hug" value="1"/>
                  </argument>
                  <argument xmi:id="_69RYXBw-Eea9ZZP4p08hug" name="Call(+).argument(y)" incoming="_69RYUhw-Eea9ZZP4p08hug">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYXRw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYXhw-Eea9ZZP4p08hug" value="1"/>
                  </argument>
                  <result xmi:id="_69RYXxw-Eea9ZZP4p08hug" name="Call(+).result(result)" outgoing="_69RYTxw-Eea9ZZP4p08hug">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYYBw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYYRw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYYhw-Eea9ZZP4p08hug" name="ReturnStatement@612e2907" incoming="_69RYOxw-Eea9ZZP4p08hug" outgoing="_69RYDxw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYYxw-Eea9ZZP4p08hug" target="_69RYZhw-Eea9ZZP4p08hug" source="_69RYcBw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYZBw-Eea9ZZP4p08hug" target="_69RYaRw-Eea9ZZP4p08hug" source="_69RYeRw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYZRw-Eea9ZZP4p08hug" target="_69RYbBw-Eea9ZZP4p08hug" source="_69RYgRw-Eea9ZZP4p08hug"/>
              <structuredNodeOutput xmi:id="_69RYZhw-Eea9ZZP4p08hug" name="ReturnStatement@612e2907.output" incoming="_69RYYxw-Eea9ZZP4p08hug" outgoing="_69RYEBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYZxw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYaBw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_69RYaRw-Eea9ZZP4p08hug" name="ReturnStatement@612e2907.output" incoming="_69RYZBw-Eea9ZZP4p08hug" outgoing="_69RYERw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYahw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYaxw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_69RYbBw-Eea9ZZP4p08hug" name="ReturnStatement@612e2907.output" incoming="_69RYZRw-Eea9ZZP4p08hug" outgoing="_69RYEhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYbRw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYbhw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RYbxw-Eea9ZZP4p08hug" name="Value(3)">
                <result xmi:id="_69RYcBw-Eea9ZZP4p08hug" name="Value(3).result" outgoing="_69RYYxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYcRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYchw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_69RYcxw-Eea9ZZP4p08hug" value="3">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYdBw-Eea9ZZP4p08hug" name="Passthru(Fork(x)@be0ee2a)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYdRw-Eea9ZZP4p08hug" target="_69RYeRw-Eea9ZZP4p08hug" source="_69RYdhw-Eea9ZZP4p08hug"/>
                <structuredNodeInput xmi:id="_69RYdhw-Eea9ZZP4p08hug" name="Passthru(Fork(x)@be0ee2a).input" incoming="_69RYOhw-Eea9ZZP4p08hug" outgoing="_69RYdRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYdxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYeBw-Eea9ZZP4p08hug" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_69RYeRw-Eea9ZZP4p08hug" name="Passthru(Fork(x)@be0ee2a).output" incoming="_69RYdRw-Eea9ZZP4p08hug" outgoing="_69RYZBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYehw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYexw-Eea9ZZP4p08hug" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYfBw-Eea9ZZP4p08hug" name="Passthru(Fork(y)@18222222)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYfRw-Eea9ZZP4p08hug" target="_69RYgRw-Eea9ZZP4p08hug" source="_69RYfhw-Eea9ZZP4p08hug"/>
                <structuredNodeInput xmi:id="_69RYfhw-Eea9ZZP4p08hug" name="Passthru(Fork(y)@18222222).input" incoming="_69RYJhw-Eea9ZZP4p08hug" outgoing="_69RYfRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYfxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYgBw-Eea9ZZP4p08hug" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_69RYgRw-Eea9ZZP4p08hug" name="Passthru(Fork(y)@18222222).output" incoming="_69RYfRw-Eea9ZZP4p08hug" outgoing="_69RYZRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYghw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYgxw-Eea9ZZP4p08hug" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYhBw-Eea9ZZP4p08hug" name="Passthru(Fork(x)@be0ee2a)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYhRw-Eea9ZZP4p08hug" target="_69RYiRw-Eea9ZZP4p08hug" source="_69RYhhw-Eea9ZZP4p08hug"/>
              <structuredNodeInput xmi:id="_69RYhhw-Eea9ZZP4p08hug" name="Passthru(Fork(x)@be0ee2a).input" incoming="_69RYPBw-Eea9ZZP4p08hug" outgoing="_69RYhRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYhxw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYiBw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_69RYiRw-Eea9ZZP4p08hug" name="Passthru(Fork(x)@be0ee2a).output" incoming="_69RYhRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYihw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYixw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RYjBw-Eea9ZZP4p08hug" name="Value(true)">
              <result xmi:id="_69RYjRw-Eea9ZZP4p08hug" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYjhw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYjxw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_69RYkBw-Eea9ZZP4p08hug" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYkRw-Eea9ZZP4p08hug" name="Passthru(Fork(x))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYkhw-Eea9ZZP4p08hug" target="_69RYlhw-Eea9ZZP4p08hug" source="_69RYkxw-Eea9ZZP4p08hug"/>
              <structuredNodeInput xmi:id="_69RYkxw-Eea9ZZP4p08hug" name="Passthru(Fork(x)).input" incoming="_69RYExw-Eea9ZZP4p08hug" outgoing="_69RYkhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYlBw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYlRw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_69RYlhw-Eea9ZZP4p08hug" name="Passthru(Fork(x)).output" incoming="_69RYkhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYlxw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYmBw-Eea9ZZP4p08hug" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_69RYmRw-Eea9ZZP4p08hug" body="_69RYThw-Eea9ZZP4p08hug _69RYYhw-Eea9ZZP4p08hug _69RYhBw-Eea9ZZP4p08hug" bodyOutput="_69RYiRw-Eea9ZZP4p08hug" decider="_69RYSBw-Eea9ZZP4p08hug" successorClause="_69RYmhw-Eea9ZZP4p08hug" test="_69RYPRw-Eea9ZZP4p08hug"/>
            <clause xmi:id="_69RYmhw-Eea9ZZP4p08hug" body="_69RYkRw-Eea9ZZP4p08hug" bodyOutput="_69RYlhw-Eea9ZZP4p08hug" decider="_69RYjRw-Eea9ZZP4p08hug" predecessorClause="_69RYmRw-Eea9ZZP4p08hug" test="_69RYjBw-Eea9ZZP4p08hug"/>
            <result xmi:id="_69RYmxw-Eea9ZZP4p08hug" name="IfStatement@75d060e0.result(x)" outgoing="_69RYJRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYnBw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYnRw-Eea9ZZP4p08hug" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_69RYnhw-Eea9ZZP4p08hug" name="Fork(x)" incoming="_69RYJRw-Eea9ZZP4p08hug" outgoing="_69RYKBw-Eea9ZZP4p08hug"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RYGBw-Eea9ZZP4p08hug" name="Input(x)" outgoing="_69RYDBw-Eea9ZZP4p08hug" parameter="_69RYAxw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RYGRw-Eea9ZZP4p08hug" name="Output(x)" incoming="_69RYERw-Eea9ZZP4p08hug _69RYFhw-Eea9ZZP4p08hug" parameter="_69RYAxw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RYGhw-Eea9ZZP4p08hug" name="Output(y)" incoming="_69RYEhw-Eea9ZZP4p08hug _69RYFxw-Eea9ZZP4p08hug" parameter="_69RYBhw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RYGxw-Eea9ZZP4p08hug" name="Return" incoming="_69RYEBw-Eea9ZZP4p08hug" parameter="_69RYCRw-Eea9ZZP4p08hug">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_69RYHBw-Eea9ZZP4p08hug" name="Final" incoming="_69RYDxw-Eea9ZZP4p08hug"/>
        <node xmi:type="uml:JoinNode" xmi:id="_69RYHRw-Eea9ZZP4p08hug" name="Join(Input))" incoming="_69RYFBw-Eea9ZZP4p08hug" outgoing="_69RYFRw-Eea9ZZP4p08hug"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_69RYnxw-Eea9ZZP4p08hug" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_69RYoBw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_69RYoRw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_69RYohw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_69RYoxw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_69RYpBw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_69RYpRw-Eea9ZZP4p08hug" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYphw-Eea9ZZP4p08hug" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYpxw-Eea9ZZP4p08hug" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_69RYqBw-Eea9ZZP4p08hug" name="tester" visibility="private" type="_69RZmBw-Eea9ZZP4p08hug">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYqRw-Eea9ZZP4p08hug"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYqhw-Eea9ZZP4p08hug" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_69RYqxw-Eea9ZZP4p08hug" name="destroy$method$1" specification="_69RZjxw-Eea9ZZP4p08hug" node="_69RYrBw-Eea9ZZP4p08hug" group="_69RYrBw-Eea9ZZP4p08hug">
        <structuredNode xmi:id="_69RYrBw-Eea9ZZP4p08hug" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_69RYrRw-Eea9ZZP4p08hug" name="done$method$1" specification="_69RZkBw-Eea9ZZP4p08hug" node="_69RYrhw-Eea9ZZP4p08hug" group="_69RYrhw-Eea9ZZP4p08hug">
        <structuredNode xmi:id="_69RYrhw-Eea9ZZP4p08hug" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RYrxw-Eea9ZZP4p08hug" target="_69RYwBw-Eea9ZZP4p08hug" source="_69RYsBw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYsBw-Eea9ZZP4p08hug" name="ExpressionStatement@5c526c82" outgoing="_69RYrxw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYsRw-Eea9ZZP4p08hug" target="_69RYtBw-Eea9ZZP4p08hug" source="_69RYvBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RYshw-Eea9ZZP4p08hug" target="_69RYsxw-Eea9ZZP4p08hug" source="_69RYuhw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RYsxw-Eea9ZZP4p08hug" name="Call(WriteLine)" incoming="_69RYshw-Eea9ZZP4p08hug">
              <argument xmi:id="_69RYtBw-Eea9ZZP4p08hug" name="Call(WriteLine).argument(value)" incoming="_69RYsRw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYtRw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYthw-Eea9ZZP4p08hug" value="1"/>
              </argument>
              <result xmi:id="_69RYtxw-Eea9ZZP4p08hug" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYuBw-Eea9ZZP4p08hug"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYuRw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYuhw-Eea9ZZP4p08hug" name="Tuple@19f176f4" outgoing="_69RYshw-Eea9ZZP4p08hug">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RYuxw-Eea9ZZP4p08hug" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_69RYvBw-Eea9ZZP4p08hug" name="Value(&quot;Done.&quot;).result" outgoing="_69RYsRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYvRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYvhw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_69RYvxw-Eea9ZZP4p08hug" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYwBw-Eea9ZZP4p08hug" name="ExpressionStatement@6356ec4e" incoming="_69RYrxw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYwRw-Eea9ZZP4p08hug" target="_69RYyRw-Eea9ZZP4p08hug" source="_69RY1Rw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RYwhw-Eea9ZZP4p08hug" target="_69RYwxw-Eea9ZZP4p08hug" source="_69RYyhw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_69RYwxw-Eea9ZZP4p08hug" name="Collect(SendSignal(Continue))" incoming="_69RYwhw-Eea9ZZP4p08hug" mode="parallel" inputElement="_69RYyRw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYxBw-Eea9ZZP4p08hug" target="_69RYxhw-Eea9ZZP4p08hug" source="_69RYyRw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_69RYxRw-Eea9ZZP4p08hug" name="SendSignal(Continue)" signal="_69R8CRw-Eea9ZZP4p08hug">
                <target xmi:id="_69RYxhw-Eea9ZZP4p08hug" name="SendSignal(Continue).target" incoming="_69RYxBw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYxxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RYyBw-Eea9ZZP4p08hug" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_69RYyRw-Eea9ZZP4p08hug" name="Collect(SendSignal(Continue)).inputElement" incoming="_69RYwRw-Eea9ZZP4p08hug" outgoing="_69RYxBw-Eea9ZZP4p08hug" regionAsInput="_69RYwxw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RYyhw-Eea9ZZP4p08hug" name="Feature(Read(tester).result)" outgoing="_69RYwhw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYyxw-Eea9ZZP4p08hug" target="_69RY2Bw-Eea9ZZP4p08hug" source="_69RYzhw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RYzBw-Eea9ZZP4p08hug" target="_69RY0hw-Eea9ZZP4p08hug" source="_69RY2Bw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_69RYzRw-Eea9ZZP4p08hug" name="ReadSelf">
                <result xmi:id="_69RYzhw-Eea9ZZP4p08hug" name="ReadSelf.result" outgoing="_69RYyxw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RYzxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RY0Bw-Eea9ZZP4p08hug" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_69RY0Rw-Eea9ZZP4p08hug" name="Read(tester)" structuralFeature="_69RYqBw-Eea9ZZP4p08hug">
                <object xmi:id="_69RY0hw-Eea9ZZP4p08hug" name="Read(tester).object" incoming="_69RYzBw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RY0xw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RY1Bw-Eea9ZZP4p08hug" value="1"/>
                </object>
                <result xmi:id="_69RY1Rw-Eea9ZZP4p08hug" name="Read(tester).result" outgoing="_69RYwRw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RY1hw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RY1xw-Eea9ZZP4p08hug" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_69RY2Bw-Eea9ZZP4p08hug" name="Fork(ReadSelf.result)" incoming="_69RYyxw-Eea9ZZP4p08hug" outgoing="_69RYzBw-Eea9ZZP4p08hug"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_69RY2Rw-Eea9ZZP4p08hug" name="Test$method$1" specification="_69RZkRw-Eea9ZZP4p08hug" node="_69RY5Rw-Eea9ZZP4p08hug _69RY6Bw-Eea9ZZP4p08hug _69RY5hw-Eea9ZZP4p08hug _69RY7hw-Eea9ZZP4p08hug _69RY5xw-Eea9ZZP4p08hug" group="_69RY6Bw-Eea9ZZP4p08hug _69RY7hw-Eea9ZZP4p08hug">
        <ownedParameter xmi:id="_69RY2hw-Eea9ZZP4p08hug" name="tester" type="_69RZmBw-Eea9ZZP4p08hug">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RY2xw-Eea9ZZP4p08hug"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RY3Bw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RY3Rw-Eea9ZZP4p08hug" name="" type="_69RYnxw-Eea9ZZP4p08hug" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RY3hw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RY3xw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY4Bw-Eea9ZZP4p08hug" target="_69RY6hw-Eea9ZZP4p08hug" source="_69RY5Rw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY4Rw-Eea9ZZP4p08hug" target="_69RZDBw-Eea9ZZP4p08hug" source="_69RY7Rw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY4hw-Eea9ZZP4p08hug" target="_69RY5hw-Eea9ZZP4p08hug" source="_69RZKBw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_69RY4xw-Eea9ZZP4p08hug" target="_69RY5xw-Eea9ZZP4p08hug" source="_69RY6Bw-Eea9ZZP4p08hug"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_69RY5Bw-Eea9ZZP4p08hug" target="_69RY7hw-Eea9ZZP4p08hug" source="_69RY5xw-Eea9ZZP4p08hug"/>
        <structuredNode xmi:id="_69RY6Bw-Eea9ZZP4p08hug" name="Node(Input(tester))" outgoing="_69RY4xw-Eea9ZZP4p08hug">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY6Rw-Eea9ZZP4p08hug" target="_69RY7Rw-Eea9ZZP4p08hug" source="_69RY6hw-Eea9ZZP4p08hug"/>
          <structuredNodeInput xmi:id="_69RY6hw-Eea9ZZP4p08hug" name="Input(tester)" incoming="_69RY4Bw-Eea9ZZP4p08hug" outgoing="_69RY6Rw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RY6xw-Eea9ZZP4p08hug"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RY7Bw-Eea9ZZP4p08hug" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_69RY7Rw-Eea9ZZP4p08hug" name="Fork(tester)" incoming="_69RY6Rw-Eea9ZZP4p08hug" outgoing="_69RY4Rw-Eea9ZZP4p08hug"/>
        </structuredNode>
        <structuredNode xmi:id="_69RY7hw-Eea9ZZP4p08hug" name="Body(Test$method$1)" incoming="_69RY5Bw-Eea9ZZP4p08hug">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY7xw-Eea9ZZP4p08hug" target="_69RZKBw-Eea9ZZP4p08hug" source="_69RZJRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY8Bw-Eea9ZZP4p08hug" target="_69RZKhw-Eea9ZZP4p08hug" source="_69RZKBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RY8Rw-Eea9ZZP4p08hug" target="_69RY-hw-Eea9ZZP4p08hug" source="_69RZKRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY8hw-Eea9ZZP4p08hug" target="_69RZLhw-Eea9ZZP4p08hug" source="_69RZKBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY8xw-Eea9ZZP4p08hug" target="_69RZNRw-Eea9ZZP4p08hug" source="_69RZMRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY9Bw-Eea9ZZP4p08hug" target="_69RZQRw-Eea9ZZP4p08hug" source="_69RZOBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY9Rw-Eea9ZZP4p08hug" target="_69RZRxw-Eea9ZZP4p08hug" source="_69RZPBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RY9hw-Eea9ZZP4p08hug" target="_69RZSxw-Eea9ZZP4p08hug" source="_69RZShw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY9xw-Eea9ZZP4p08hug" target="_69RZSxw-Eea9ZZP4p08hug" source="_69RZRBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RY-Bw-Eea9ZZP4p08hug" target="_69RZKRw-Eea9ZZP4p08hug" source="_69RZSxw-Eea9ZZP4p08hug">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_69RY-Rw-Eea9ZZP4p08hug" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RY-hw-Eea9ZZP4p08hug" name="Body" incoming="_69RY8Rw-Eea9ZZP4p08hug">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RY-xw-Eea9ZZP4p08hug" name="ExpressionStatement@37f33281">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY_Bw-Eea9ZZP4p08hug" target="_69RZBhw-Eea9ZZP4p08hug" source="_69RZAhw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY_Rw-Eea9ZZP4p08hug" target="_69RZDxw-Eea9ZZP4p08hug" source="_69RZDBw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RY_hw-Eea9ZZP4p08hug" target="_69RZFRw-Eea9ZZP4p08hug" source="_69RZCRw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_69RY_xw-Eea9ZZP4p08hug" target="_69RZABw-Eea9ZZP4p08hug" source="_69RZIxw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RZABw-Eea9ZZP4p08hug" name="Expression(LeftHandSide@1d22ab43)" incoming="_69RY_xw-Eea9ZZP4p08hug">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_69RZARw-Eea9ZZP4p08hug" name="ReadSelf">
                  <result xmi:id="_69RZAhw-Eea9ZZP4p08hug" name="ReadSelf.result" outgoing="_69RY_Bw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZAxw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZBBw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_69RZBRw-Eea9ZZP4p08hug" name="Clear(tester)" structuralFeature="_69RYqBw-Eea9ZZP4p08hug">
                <object xmi:id="_69RZBhw-Eea9ZZP4p08hug" name="Clear(tester).object" incoming="_69RY_Bw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZBxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZCBw-Eea9ZZP4p08hug" value="1"/>
                </object>
                <result xmi:id="_69RZCRw-Eea9ZZP4p08hug" name="Clear(tester).result" outgoing="_69RY_hw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZChw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZCxw-Eea9ZZP4p08hug" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_69RZDBw-Eea9ZZP4p08hug" name="Fork(LeftHandSide@1d22ab43)" incoming="_69RY4Rw-Eea9ZZP4p08hug" outgoing="_69RY_Rw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RZDRw-Eea9ZZP4p08hug" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZDhw-Eea9ZZP4p08hug" target="_69RZIhw-Eea9ZZP4p08hug" source="_69RZDxw-Eea9ZZP4p08hug"/>
                <structuredNodeInput xmi:id="_69RZDxw-Eea9ZZP4p08hug" name="WriteAll(Test::tester).input(Test::tester)" incoming="_69RY_Rw-Eea9ZZP4p08hug" outgoing="_69RZDhw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZEBw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZERw-Eea9ZZP4p08hug" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_69RZEhw-Eea9ZZP4p08hug" name="Iterate(Write(tester))" inputElement="_69RZIhw-Eea9ZZP4p08hug">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZExw-Eea9ZZP4p08hug" target="_69RZHxw-Eea9ZZP4p08hug" source="_69RZIhw-Eea9ZZP4p08hug"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZFBw-Eea9ZZP4p08hug" target="_69RZGRw-Eea9ZZP4p08hug" source="_69RZFRw-Eea9ZZP4p08hug"/>
                  <structuredNodeInput xmi:id="_69RZFRw-Eea9ZZP4p08hug" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_69RY_hw-Eea9ZZP4p08hug" outgoing="_69RZFBw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZFhw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZFxw-Eea9ZZP4p08hug" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_69RZGBw-Eea9ZZP4p08hug" name="Write(tester)" structuralFeature="_69RYqBw-Eea9ZZP4p08hug">
                    <object xmi:id="_69RZGRw-Eea9ZZP4p08hug" name="Write(tester).object" incoming="_69RZFBw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZGhw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZGxw-Eea9ZZP4p08hug" value="1"/>
                    </object>
                    <result xmi:id="_69RZHBw-Eea9ZZP4p08hug" name="Write(tester).result" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZHRw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZHhw-Eea9ZZP4p08hug" value="1"/>
                    </result>
                    <value xmi:id="_69RZHxw-Eea9ZZP4p08hug" name="Write(tester).value" incoming="_69RZExw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZIBw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZIRw-Eea9ZZP4p08hug" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_69RZIhw-Eea9ZZP4p08hug" name="Iterate(Write(tester)).inputElement" incoming="_69RZDhw-Eea9ZZP4p08hug" outgoing="_69RZExw-Eea9ZZP4p08hug" regionAsInput="_69RZEhw-Eea9ZZP4p08hug"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RZIxw-Eea9ZZP4p08hug" name="RightHandSide@60a8b8a8" outgoing="_69RY_xw-Eea9ZZP4p08hug"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_69RZJBw-Eea9ZZP4p08hug" name="ReadSelf">
            <result xmi:id="_69RZJRw-Eea9ZZP4p08hug" name="ReadSelf.result" outgoing="_69RY7xw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZJhw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZJxw-Eea9ZZP4p08hug" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_69RZKBw-Eea9ZZP4p08hug" name="Fork(ReadSelf.result)" incoming="_69RY7xw-Eea9ZZP4p08hug" outgoing="_69RY4hw-Eea9ZZP4p08hug _69RY8Bw-Eea9ZZP4p08hug _69RY8hw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_69RZKRw-Eea9ZZP4p08hug" name="Call(Test$initialization$1)" incoming="_69RY-Bw-Eea9ZZP4p08hug" outgoing="_69RY8Rw-Eea9ZZP4p08hug" operation="_69RZjhw-Eea9ZZP4p08hug">
            <target xmi:id="_69RZKhw-Eea9ZZP4p08hug" name="Call(Test$initialization$1).target" incoming="_69RY8Bw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZKxw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZLBw-Eea9ZZP4p08hug" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_69RZLRw-Eea9ZZP4p08hug" name="Read(Test$initializationFlag$1)" structuralFeature="_69RYpRw-Eea9ZZP4p08hug">
            <object xmi:id="_69RZLhw-Eea9ZZP4p08hug" name="Read(Test$initializationFlag$1).object" incoming="_69RY8hw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZLxw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZMBw-Eea9ZZP4p08hug" value="1"/>
            </object>
            <result xmi:id="_69RZMRw-Eea9ZZP4p08hug" name="Read(Test$initializationFlag$1).result" outgoing="_69RY8xw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZMhw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZMxw-Eea9ZZP4p08hug" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RZNBw-Eea9ZZP4p08hug" name="Call(ListSize)">
            <argument xmi:id="_69RZNRw-Eea9ZZP4p08hug" name="Call(ListSize).argument(list)" incoming="_69RY8xw-Eea9ZZP4p08hug">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZNhw-Eea9ZZP4p08hug"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZNxw-Eea9ZZP4p08hug" value="*"/>
            </argument>
            <result xmi:id="_69RZOBw-Eea9ZZP4p08hug" name="Call(ListSize).result(result)" outgoing="_69RY9Bw-Eea9ZZP4p08hug">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZORw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZOhw-Eea9ZZP4p08hug" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RZOxw-Eea9ZZP4p08hug" name="Value(0)">
            <result xmi:id="_69RZPBw-Eea9ZZP4p08hug" name="Value(0).result" outgoing="_69RY9Rw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZPRw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZPhw-Eea9ZZP4p08hug" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_69RZPxw-Eea9ZZP4p08hug">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_69RZQBw-Eea9ZZP4p08hug" name="Test(Size==0)">
            <first xmi:id="_69RZQRw-Eea9ZZP4p08hug" name="Test(Size==0).first" incoming="_69RY9Bw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZQhw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZQxw-Eea9ZZP4p08hug" value="1"/>
            </first>
            <result xmi:id="_69RZRBw-Eea9ZZP4p08hug" name="Test(Size==0).result" outgoing="_69RY9xw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZRRw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZRhw-Eea9ZZP4p08hug" value="1"/>
            </result>
            <second xmi:id="_69RZRxw-Eea9ZZP4p08hug" name="Test(Size==0).second" incoming="_69RY9Rw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZSBw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZSRw-Eea9ZZP4p08hug" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_69RZShw-Eea9ZZP4p08hug" name="InitialNode" outgoing="_69RY9hw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_69RZSxw-Eea9ZZP4p08hug" name="Decision(Test(Test$initializationFlag$1))" incoming="_69RY9hw-Eea9ZZP4p08hug _69RY9xw-Eea9ZZP4p08hug" outgoing="_69RY-Bw-Eea9ZZP4p08hug" decisionInputFlow="_69RY9xw-Eea9ZZP4p08hug"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RY5Rw-Eea9ZZP4p08hug" name="Input(tester)" outgoing="_69RY4Bw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" parameter="_69RY2hw-Eea9ZZP4p08hug"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RY5hw-Eea9ZZP4p08hug" name="Return" incoming="_69RY4hw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" parameter="_69RY3Rw-Eea9ZZP4p08hug"/>
        <node xmi:type="uml:JoinNode" xmi:id="_69RY5xw-Eea9ZZP4p08hug" name="Join(Input))" incoming="_69RY4xw-Eea9ZZP4p08hug" outgoing="_69RY5Bw-Eea9ZZP4p08hug"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_69RZTBw-Eea9ZZP4p08hug" name="Test$initialization$1" specification="_69RZjhw-Eea9ZZP4p08hug" node="_69RZTRw-Eea9ZZP4p08hug" group="_69RZTRw-Eea9ZZP4p08hug">
        <structuredNode xmi:id="_69RZTRw-Eea9ZZP4p08hug" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZThw-Eea9ZZP4p08hug" target="_69RZXBw-Eea9ZZP4p08hug" source="_69RZWRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZTxw-Eea9ZZP4p08hug" target="_69RZZhw-Eea9ZZP4p08hug" source="_69RZXBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZUBw-Eea9ZZP4p08hug" target="_69RZcBw-Eea9ZZP4p08hug" source="_69RZXBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZURw-Eea9ZZP4p08hug" target="_69RZdxw-Eea9ZZP4p08hug" source="_69RZcxw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZUhw-Eea9ZZP4p08hug" target="_69RZgxw-Eea9ZZP4p08hug" source="_69RZehw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZUxw-Eea9ZZP4p08hug" target="_69RZiRw-Eea9ZZP4p08hug" source="_69RZfhw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RZVBw-Eea9ZZP4p08hug" target="_69RZjRw-Eea9ZZP4p08hug" source="_69RZjBw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZVRw-Eea9ZZP4p08hug" target="_69RZjRw-Eea9ZZP4p08hug" source="_69RZhhw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69RZVhw-Eea9ZZP4p08hug" target="_69RZXRw-Eea9ZZP4p08hug" source="_69RZjRw-Eea9ZZP4p08hug">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_69RZVxw-Eea9ZZP4p08hug" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_69RZWBw-Eea9ZZP4p08hug" name="ReadSelf">
            <result xmi:id="_69RZWRw-Eea9ZZP4p08hug" name="ReadSelf.result" outgoing="_69RZThw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZWhw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZWxw-Eea9ZZP4p08hug" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_69RZXBw-Eea9ZZP4p08hug" name="Fork(ReadSelf.result)" incoming="_69RZThw-Eea9ZZP4p08hug" outgoing="_69RZTxw-Eea9ZZP4p08hug _69RZUBw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RZXRw-Eea9ZZP4p08hug" name="Initialization" incoming="_69RZVhw-Eea9ZZP4p08hug">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RZXhw-Eea9ZZP4p08hug" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZXxw-Eea9ZZP4p08hug" target="_69RZbBw-Eea9ZZP4p08hug" source="_69RZYRw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RZYBw-Eea9ZZP4p08hug" name="Value(true)">
                <result xmi:id="_69RZYRw-Eea9ZZP4p08hug" name="Value(true).result" outgoing="_69RZXxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZYhw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZYxw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_69RZZBw-Eea9ZZP4p08hug" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_69RZZRw-Eea9ZZP4p08hug" name="Write(Test$initializationFlag$1)" structuralFeature="_69RYpRw-Eea9ZZP4p08hug" isReplaceAll="true">
                <object xmi:id="_69RZZhw-Eea9ZZP4p08hug" name="Write(Test$initializationFlag$1).object" incoming="_69RZTxw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZZxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZaBw-Eea9ZZP4p08hug" value="1"/>
                </object>
                <result xmi:id="_69RZaRw-Eea9ZZP4p08hug" name="Write(Test$initializationFlag$1).result" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZahw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZaxw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:id="_69RZbBw-Eea9ZZP4p08hug" name="Write(Test$initializationFlag$1).value" incoming="_69RZXxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZbRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZbhw-Eea9ZZP4p08hug" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_69RZbxw-Eea9ZZP4p08hug" name="Read(Test$initializationFlag$1)" structuralFeature="_69RYpRw-Eea9ZZP4p08hug">
            <object xmi:id="_69RZcBw-Eea9ZZP4p08hug" name="Read(Test$initializationFlag$1).object" incoming="_69RZUBw-Eea9ZZP4p08hug" type="_69RYnxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZcRw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZchw-Eea9ZZP4p08hug" value="1"/>
            </object>
            <result xmi:id="_69RZcxw-Eea9ZZP4p08hug" name="Read(Test$initializationFlag$1).result" outgoing="_69RZURw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZdBw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZdRw-Eea9ZZP4p08hug" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RZdhw-Eea9ZZP4p08hug" name="Call(ListSize)">
            <argument xmi:id="_69RZdxw-Eea9ZZP4p08hug" name="Call(ListSize).argument(list)" incoming="_69RZURw-Eea9ZZP4p08hug">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZeBw-Eea9ZZP4p08hug"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZeRw-Eea9ZZP4p08hug" value="*"/>
            </argument>
            <result xmi:id="_69RZehw-Eea9ZZP4p08hug" name="Call(ListSize).result(result)" outgoing="_69RZUhw-Eea9ZZP4p08hug">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZexw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZfBw-Eea9ZZP4p08hug" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RZfRw-Eea9ZZP4p08hug" name="Value(0)">
            <result xmi:id="_69RZfhw-Eea9ZZP4p08hug" name="Value(0).result" outgoing="_69RZUxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZfxw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZgBw-Eea9ZZP4p08hug" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_69RZgRw-Eea9ZZP4p08hug">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_69RZghw-Eea9ZZP4p08hug" name="Test(Size==0)">
            <first xmi:id="_69RZgxw-Eea9ZZP4p08hug" name="Test(Size==0).first" incoming="_69RZUhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZhBw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZhRw-Eea9ZZP4p08hug" value="1"/>
            </first>
            <result xmi:id="_69RZhhw-Eea9ZZP4p08hug" name="Test(Size==0).result" outgoing="_69RZVRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZhxw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZiBw-Eea9ZZP4p08hug" value="1"/>
            </result>
            <second xmi:id="_69RZiRw-Eea9ZZP4p08hug" name="Test(Size==0).second" incoming="_69RZUxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZihw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZixw-Eea9ZZP4p08hug" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_69RZjBw-Eea9ZZP4p08hug" name="InitialNode" outgoing="_69RZVBw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_69RZjRw-Eea9ZZP4p08hug" name="Decision(Test(Test$initializationFlag$1))" incoming="_69RZVBw-Eea9ZZP4p08hug _69RZVRw-Eea9ZZP4p08hug" outgoing="_69RZVhw-Eea9ZZP4p08hug" decisionInputFlow="_69RZVRw-Eea9ZZP4p08hug"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_69RZjhw-Eea9ZZP4p08hug" name="Test$initialization$1" visibility="protected" method="_69RZTBw-Eea9ZZP4p08hug"/>
      <ownedOperation xmi:id="_69RZjxw-Eea9ZZP4p08hug" name="destroy" visibility="public" method="_69RYqxw-Eea9ZZP4p08hug"/>
      <ownedOperation xmi:id="_69RZkBw-Eea9ZZP4p08hug" name="done" visibility="public" method="_69RYrRw-Eea9ZZP4p08hug"/>
      <ownedOperation xmi:id="_69RZkRw-Eea9ZZP4p08hug" name="Test" visibility="protected" method="_69RY2Rw-Eea9ZZP4p08hug">
        <ownedParameter xmi:id="_69RZkhw-Eea9ZZP4p08hug" name="tester" visibility="package" type="_69RZmBw-Eea9ZZP4p08hug">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZkxw-Eea9ZZP4p08hug"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZlBw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_69RZlRw-Eea9ZZP4p08hug" name="" visibility="package" type="_69RYnxw-Eea9ZZP4p08hug" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZlhw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZlxw-Eea9ZZP4p08hug" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_69RZmBw-Eea9ZZP4p08hug" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_69RZmRw-Eea9ZZP4p08hug" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZmhw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZmxw-Eea9ZZP4p08hug" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_69RZnBw-Eea9ZZP4p08hug" name="Tester$method$1" specification="_69R8BBw-Eea9ZZP4p08hug" node="_69RZoRw-Eea9ZZP4p08hug _69RZohw-Eea9ZZP4p08hug" group="_69RZohw-Eea9ZZP4p08hug">
          <ownedParameter xmi:id="_69RZnRw-Eea9ZZP4p08hug" name="" type="_69RZmBw-Eea9ZZP4p08hug" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZnhw-Eea9ZZP4p08hug" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZnxw-Eea9ZZP4p08hug" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZoBw-Eea9ZZP4p08hug" target="_69RZoRw-Eea9ZZP4p08hug" source="_69RZsxw-Eea9ZZP4p08hug"/>
          <structuredNode xmi:id="_69RZohw-Eea9ZZP4p08hug" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZoxw-Eea9ZZP4p08hug" target="_69RZsxw-Eea9ZZP4p08hug" source="_69RZsBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZpBw-Eea9ZZP4p08hug" target="_69RZtRw-Eea9ZZP4p08hug" source="_69RZsxw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RZpRw-Eea9ZZP4p08hug" target="_69RZrhw-Eea9ZZP4p08hug" source="_69RZtBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZphw-Eea9ZZP4p08hug" target="_69RZuRw-Eea9ZZP4p08hug" source="_69RZsxw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZpxw-Eea9ZZP4p08hug" target="_69RZwBw-Eea9ZZP4p08hug" source="_69RZvBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZqBw-Eea9ZZP4p08hug" target="_69RZzBw-Eea9ZZP4p08hug" source="_69RZwxw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZqRw-Eea9ZZP4p08hug" target="_69RZ0hw-Eea9ZZP4p08hug" source="_69RZxxw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RZqhw-Eea9ZZP4p08hug" target="_69RZ1hw-Eea9ZZP4p08hug" source="_69RZ1Rw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZqxw-Eea9ZZP4p08hug" target="_69RZ1hw-Eea9ZZP4p08hug" source="_69RZzxw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RZrBw-Eea9ZZP4p08hug" target="_69RZtBw-Eea9ZZP4p08hug" source="_69RZ1hw-Eea9ZZP4p08hug">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_69RZrRw-Eea9ZZP4p08hug" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RZrhw-Eea9ZZP4p08hug" name="Body" incoming="_69RZpRw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_69RZrxw-Eea9ZZP4p08hug" name="ReadSelf">
              <result xmi:id="_69RZsBw-Eea9ZZP4p08hug" name="ReadSelf.result" outgoing="_69RZoxw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZsRw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZshw-Eea9ZZP4p08hug" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_69RZsxw-Eea9ZZP4p08hug" name="Fork(ReadSelf.result)" incoming="_69RZoxw-Eea9ZZP4p08hug" outgoing="_69RZoBw-Eea9ZZP4p08hug _69RZpBw-Eea9ZZP4p08hug _69RZphw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_69RZtBw-Eea9ZZP4p08hug" name="Call(Tester$initialization$1)" incoming="_69RZrBw-Eea9ZZP4p08hug" outgoing="_69RZpRw-Eea9ZZP4p08hug" operation="_69R8Axw-Eea9ZZP4p08hug">
              <target xmi:id="_69RZtRw-Eea9ZZP4p08hug" name="Call(Tester$initialization$1).target" incoming="_69RZpBw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZthw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZtxw-Eea9ZZP4p08hug" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_69RZuBw-Eea9ZZP4p08hug" name="Read(Tester$initializationFlag$1)" structuralFeature="_69RZmRw-Eea9ZZP4p08hug">
              <object xmi:id="_69RZuRw-Eea9ZZP4p08hug" name="Read(Tester$initializationFlag$1).object" incoming="_69RZphw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZuhw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZuxw-Eea9ZZP4p08hug" value="1"/>
              </object>
              <result xmi:id="_69RZvBw-Eea9ZZP4p08hug" name="Read(Tester$initializationFlag$1).result" outgoing="_69RZpxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZvRw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZvhw-Eea9ZZP4p08hug" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69RZvxw-Eea9ZZP4p08hug" name="Call(ListSize)">
              <argument xmi:id="_69RZwBw-Eea9ZZP4p08hug" name="Call(ListSize).argument(list)" incoming="_69RZpxw-Eea9ZZP4p08hug">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZwRw-Eea9ZZP4p08hug"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZwhw-Eea9ZZP4p08hug" value="*"/>
              </argument>
              <result xmi:id="_69RZwxw-Eea9ZZP4p08hug" name="Call(ListSize).result(result)" outgoing="_69RZqBw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZxBw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZxRw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RZxhw-Eea9ZZP4p08hug" name="Value(0)">
              <result xmi:id="_69RZxxw-Eea9ZZP4p08hug" name="Value(0).result" outgoing="_69RZqRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZyBw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZyRw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_69RZyhw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_69RZyxw-Eea9ZZP4p08hug" name="Test(Size==0)">
              <first xmi:id="_69RZzBw-Eea9ZZP4p08hug" name="Test(Size==0).first" incoming="_69RZqBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZzRw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZzhw-Eea9ZZP4p08hug" value="1"/>
              </first>
              <result xmi:id="_69RZzxw-Eea9ZZP4p08hug" name="Test(Size==0).result" outgoing="_69RZqxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZ0Bw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZ0Rw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <second xmi:id="_69RZ0hw-Eea9ZZP4p08hug" name="Test(Size==0).second" incoming="_69RZqRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZ0xw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZ1Bw-Eea9ZZP4p08hug" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_69RZ1Rw-Eea9ZZP4p08hug" name="InitialNode" outgoing="_69RZqhw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_69RZ1hw-Eea9ZZP4p08hug" name="Decision(Test(Tester$initializationFlag$1))" incoming="_69RZqhw-Eea9ZZP4p08hug _69RZqxw-Eea9ZZP4p08hug" outgoing="_69RZrBw-Eea9ZZP4p08hug" decisionInputFlow="_69RZqxw-Eea9ZZP4p08hug"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_69RZoRw-Eea9ZZP4p08hug" name="Return" incoming="_69RZoBw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" parameter="_69RZnRw-Eea9ZZP4p08hug"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_69RZ1xw-Eea9ZZP4p08hug" name="destroy$method$1" specification="_69R8CBw-Eea9ZZP4p08hug" node="_69RZ2Bw-Eea9ZZP4p08hug" group="_69RZ2Bw-Eea9ZZP4p08hug">
          <structuredNode xmi:id="_69RZ2Bw-Eea9ZZP4p08hug" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_69RZ2Rw-Eea9ZZP4p08hug" name="Tester$initialization$1" specification="_69R8Axw-Eea9ZZP4p08hug" node="_69RZ2hw-Eea9ZZP4p08hug" group="_69RZ2hw-Eea9ZZP4p08hug">
          <structuredNode xmi:id="_69RZ2hw-Eea9ZZP4p08hug" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZ2xw-Eea9ZZP4p08hug" target="_69RZ6Rw-Eea9ZZP4p08hug" source="_69RZ5hw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZ3Bw-Eea9ZZP4p08hug" target="_69RZ8xw-Eea9ZZP4p08hug" source="_69RZ6Rw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZ3Rw-Eea9ZZP4p08hug" target="_69R75Rw-Eea9ZZP4p08hug" source="_69RZ6Rw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZ3hw-Eea9ZZP4p08hug" target="_69R77Bw-Eea9ZZP4p08hug" source="_69R76Bw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZ3xw-Eea9ZZP4p08hug" target="_69R7-Bw-Eea9ZZP4p08hug" source="_69R77xw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZ4Bw-Eea9ZZP4p08hug" target="_69R7_hw-Eea9ZZP4p08hug" source="_69R78xw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RZ4Rw-Eea9ZZP4p08hug" target="_69R8Ahw-Eea9ZZP4p08hug" source="_69R8ARw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZ4hw-Eea9ZZP4p08hug" target="_69R8Ahw-Eea9ZZP4p08hug" source="_69R7-xw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69RZ4xw-Eea9ZZP4p08hug" target="_69RZ6hw-Eea9ZZP4p08hug" source="_69R8Ahw-Eea9ZZP4p08hug">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_69RZ5Bw-Eea9ZZP4p08hug" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_69RZ5Rw-Eea9ZZP4p08hug" name="ReadSelf">
              <result xmi:id="_69RZ5hw-Eea9ZZP4p08hug" name="ReadSelf.result" outgoing="_69RZ2xw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZ5xw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZ6Bw-Eea9ZZP4p08hug" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_69RZ6Rw-Eea9ZZP4p08hug" name="Fork(ReadSelf.result)" incoming="_69RZ2xw-Eea9ZZP4p08hug" outgoing="_69RZ3Bw-Eea9ZZP4p08hug _69RZ3Rw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RZ6hw-Eea9ZZP4p08hug" name="Initialization" incoming="_69RZ4xw-Eea9ZZP4p08hug">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69RZ6xw-Eea9ZZP4p08hug" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_69RZ7Bw-Eea9ZZP4p08hug" target="_69R74Rw-Eea9ZZP4p08hug" source="_69RZ7hw-Eea9ZZP4p08hug"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69RZ7Rw-Eea9ZZP4p08hug" name="Value(true)">
                  <result xmi:id="_69RZ7hw-Eea9ZZP4p08hug" name="Value(true).result" outgoing="_69RZ7Bw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZ7xw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZ8Bw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_69RZ8Rw-Eea9ZZP4p08hug" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_69RZ8hw-Eea9ZZP4p08hug" name="Write(Tester$initializationFlag$1)" structuralFeature="_69RZmRw-Eea9ZZP4p08hug" isReplaceAll="true">
                  <object xmi:id="_69RZ8xw-Eea9ZZP4p08hug" name="Write(Tester$initializationFlag$1).object" incoming="_69RZ3Bw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZ9Bw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69RZ9Rw-Eea9ZZP4p08hug" value="1"/>
                  </object>
                  <result xmi:id="_69RZ9hw-Eea9ZZP4p08hug" name="Write(Tester$initializationFlag$1).result" type="_69RZmBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69RZ9xw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R74Bw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:id="_69R74Rw-Eea9ZZP4p08hug" name="Write(Tester$initializationFlag$1).value" incoming="_69RZ7Bw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R74hw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R74xw-Eea9ZZP4p08hug" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_69R75Bw-Eea9ZZP4p08hug" name="Read(Tester$initializationFlag$1)" structuralFeature="_69RZmRw-Eea9ZZP4p08hug">
              <object xmi:id="_69R75Rw-Eea9ZZP4p08hug" name="Read(Tester$initializationFlag$1).object" incoming="_69RZ3Rw-Eea9ZZP4p08hug" type="_69RZmBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R75hw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R75xw-Eea9ZZP4p08hug" value="1"/>
              </object>
              <result xmi:id="_69R76Bw-Eea9ZZP4p08hug" name="Read(Tester$initializationFlag$1).result" outgoing="_69RZ3hw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R76Rw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R76hw-Eea9ZZP4p08hug" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R76xw-Eea9ZZP4p08hug" name="Call(ListSize)">
              <argument xmi:id="_69R77Bw-Eea9ZZP4p08hug" name="Call(ListSize).argument(list)" incoming="_69RZ3hw-Eea9ZZP4p08hug">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R77Rw-Eea9ZZP4p08hug"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R77hw-Eea9ZZP4p08hug" value="*"/>
              </argument>
              <result xmi:id="_69R77xw-Eea9ZZP4p08hug" name="Call(ListSize).result(result)" outgoing="_69RZ3xw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R78Bw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R78Rw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69R78hw-Eea9ZZP4p08hug" name="Value(0)">
              <result xmi:id="_69R78xw-Eea9ZZP4p08hug" name="Value(0).result" outgoing="_69RZ4Bw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R79Bw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R79Rw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_69R79hw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_69R79xw-Eea9ZZP4p08hug" name="Test(Size==0)">
              <first xmi:id="_69R7-Bw-Eea9ZZP4p08hug" name="Test(Size==0).first" incoming="_69RZ3xw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R7-Rw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R7-hw-Eea9ZZP4p08hug" value="1"/>
              </first>
              <result xmi:id="_69R7-xw-Eea9ZZP4p08hug" name="Test(Size==0).result" outgoing="_69RZ4hw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R7_Bw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R7_Rw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <second xmi:id="_69R7_hw-Eea9ZZP4p08hug" name="Test(Size==0).second" incoming="_69RZ4Bw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R7_xw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8ABw-Eea9ZZP4p08hug" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_69R8ARw-Eea9ZZP4p08hug" name="InitialNode" outgoing="_69RZ4Rw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_69R8Ahw-Eea9ZZP4p08hug" name="Decision(Test(Tester$initializationFlag$1))" incoming="_69RZ4Rw-Eea9ZZP4p08hug _69RZ4hw-Eea9ZZP4p08hug" outgoing="_69RZ4xw-Eea9ZZP4p08hug" decisionInputFlow="_69RZ4hw-Eea9ZZP4p08hug"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_69R8Axw-Eea9ZZP4p08hug" name="Tester$initialization$1" visibility="protected" method="_69RZ2Rw-Eea9ZZP4p08hug"/>
        <ownedOperation xmi:id="_69R8BBw-Eea9ZZP4p08hug" name="Tester" visibility="public" method="_69RZnBw-Eea9ZZP4p08hug">
          <ownedParameter xmi:id="_69R8BRw-Eea9ZZP4p08hug" name="" visibility="package" type="_69RZmBw-Eea9ZZP4p08hug" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8Bhw-Eea9ZZP4p08hug" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8Bxw-Eea9ZZP4p08hug" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_69R8CBw-Eea9ZZP4p08hug" name="destroy" visibility="public" method="_69RZ1xw-Eea9ZZP4p08hug"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_69R8CRw-Eea9ZZP4p08hug" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_69R8Chw-Eea9ZZP4p08hug" name="Continue" signal="_69R8CRw-Eea9ZZP4p08hug"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_69R8Cxw-Eea9ZZP4p08hug" name="AssertEqual" visibility="public" node="_69R8KBw-Eea9ZZP4p08hug _69R8LBw-Eea9ZZP4p08hug _69R8KRw-Eea9ZZP4p08hug _69R8Mhw-Eea9ZZP4p08hug _69R8Khw-Eea9ZZP4p08hug _69R8OBw-Eea9ZZP4p08hug _69R8Phw-Eea9ZZP4p08hug _69R8Kxw-Eea9ZZP4p08hug" group="_69R8LBw-Eea9ZZP4p08hug _69R8Mhw-Eea9ZZP4p08hug _69R8OBw-Eea9ZZP4p08hug _69R8Phw-Eea9ZZP4p08hug">
      <packageImport xmi:id="_69R8DBw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_69R8DRw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_69R8Dhw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_69R8Dxw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_69R8EBw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_69R8ERw-Eea9ZZP4p08hug" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8Ehw-Eea9ZZP4p08hug" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8Exw-Eea9ZZP4p08hug" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_69R8FBw-Eea9ZZP4p08hug" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8FRw-Eea9ZZP4p08hug"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8Fhw-Eea9ZZP4p08hug" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_69R8Fxw-Eea9ZZP4p08hug" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8GBw-Eea9ZZP4p08hug"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8GRw-Eea9ZZP4p08hug" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Ghw-Eea9ZZP4p08hug" target="_69R8Lhw-Eea9ZZP4p08hug" source="_69R8KBw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Gxw-Eea9ZZP4p08hug" target="_69R8NBw-Eea9ZZP4p08hug" source="_69R8KRw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8HBw-Eea9ZZP4p08hug" target="_69R8Ohw-Eea9ZZP4p08hug" source="_69R8Khw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8HRw-Eea9ZZP4p08hug" target="_69R8ZBw-Eea9ZZP4p08hug" source="_69R8Nxw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Hhw-Eea9ZZP4p08hug" target="_69R8bBw-Eea9ZZP4p08hug" source="_69R8PRw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Hxw-Eea9ZZP4p08hug" target="_69R8oxw-Eea9ZZP4p08hug" source="_69R8MRw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8IBw-Eea9ZZP4p08hug" target="_69R8yRw-Eea9ZZP4p08hug" source="_69R8PRw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8IRw-Eea9ZZP4p08hug" target="_69R85xw-Eea9ZZP4p08hug" source="_69R8PRw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Ihw-Eea9ZZP4p08hug" target="_69R9DRw-Eea9ZZP4p08hug" source="_69R8PRw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Ixw-Eea9ZZP4p08hug" target="_69R9LRw-Eea9ZZP4p08hug" source="_69R8PRw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_69R8JBw-Eea9ZZP4p08hug" target="_69R8Kxw-Eea9ZZP4p08hug" source="_69R8LBw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_69R8JRw-Eea9ZZP4p08hug" target="_69R8Kxw-Eea9ZZP4p08hug" source="_69R8Mhw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_69R8Jhw-Eea9ZZP4p08hug" target="_69R8Kxw-Eea9ZZP4p08hug" source="_69R8OBw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_69R8Jxw-Eea9ZZP4p08hug" target="_69R8Phw-Eea9ZZP4p08hug" source="_69R8Kxw-Eea9ZZP4p08hug"/>
      <structuredNode xmi:id="_69R8LBw-Eea9ZZP4p08hug" name="Node(Input(label))" outgoing="_69R8JBw-Eea9ZZP4p08hug">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8LRw-Eea9ZZP4p08hug" target="_69R8MRw-Eea9ZZP4p08hug" source="_69R8Lhw-Eea9ZZP4p08hug"/>
        <structuredNodeInput xmi:id="_69R8Lhw-Eea9ZZP4p08hug" name="Input(label)" incoming="_69R8Ghw-Eea9ZZP4p08hug" outgoing="_69R8LRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8Lxw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8MBw-Eea9ZZP4p08hug" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_69R8MRw-Eea9ZZP4p08hug" name="Fork(label)" incoming="_69R8LRw-Eea9ZZP4p08hug" outgoing="_69R8Hxw-Eea9ZZP4p08hug"/>
      </structuredNode>
      <structuredNode xmi:id="_69R8Mhw-Eea9ZZP4p08hug" name="Node(Input(value1))" outgoing="_69R8JRw-Eea9ZZP4p08hug">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Mxw-Eea9ZZP4p08hug" target="_69R8Nxw-Eea9ZZP4p08hug" source="_69R8NBw-Eea9ZZP4p08hug"/>
        <structuredNodeInput xmi:id="_69R8NBw-Eea9ZZP4p08hug" name="Input(value1)" incoming="_69R8Gxw-Eea9ZZP4p08hug" outgoing="_69R8Mxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8NRw-Eea9ZZP4p08hug"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8Nhw-Eea9ZZP4p08hug" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_69R8Nxw-Eea9ZZP4p08hug" name="Fork(value1)" incoming="_69R8Mxw-Eea9ZZP4p08hug" outgoing="_69R8HRw-Eea9ZZP4p08hug"/>
      </structuredNode>
      <structuredNode xmi:id="_69R8OBw-Eea9ZZP4p08hug" name="Node(Input(value2))" outgoing="_69R8Jhw-Eea9ZZP4p08hug">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8ORw-Eea9ZZP4p08hug" target="_69R8PRw-Eea9ZZP4p08hug" source="_69R8Ohw-Eea9ZZP4p08hug"/>
        <structuredNodeInput xmi:id="_69R8Ohw-Eea9ZZP4p08hug" name="Input(value2)" incoming="_69R8HBw-Eea9ZZP4p08hug" outgoing="_69R8ORw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8Oxw-Eea9ZZP4p08hug"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8PBw-Eea9ZZP4p08hug" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_69R8PRw-Eea9ZZP4p08hug" name="Fork(value2)" incoming="_69R8ORw-Eea9ZZP4p08hug" outgoing="_69R8Hhw-Eea9ZZP4p08hug _69R8IBw-Eea9ZZP4p08hug _69R8IRw-Eea9ZZP4p08hug _69R8Ihw-Eea9ZZP4p08hug _69R8Ixw-Eea9ZZP4p08hug"/>
      </structuredNode>
      <structuredNode xmi:id="_69R8Phw-Eea9ZZP4p08hug" name="Body(AssertEqual)" incoming="_69R8Jxw-Eea9ZZP4p08hug">
        <node xmi:type="uml:ConditionalNode" xmi:id="_69R8Pxw-Eea9ZZP4p08hug" name="IfStatement@2e451d10">
          <edge xmi:type="uml:ControlFlow" xmi:id="_69R8QBw-Eea9ZZP4p08hug" target="_69R8uBw-Eea9ZZP4p08hug" source="_69R8jxw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69R8QRw-Eea9ZZP4p08hug" target="_69R9NBw-Eea9ZZP4p08hug" source="_69R8uBw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R8Qhw-Eea9ZZP4p08hug" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Qxw-Eea9ZZP4p08hug" target="_69R8Wxw-Eea9ZZP4p08hug" source="_69R8ZBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8RBw-Eea9ZZP4p08hug" target="_69R8Zhw-Eea9ZZP4p08hug" source="_69R8ZBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8RRw-Eea9ZZP4p08hug" target="_69R8YRw-Eea9ZZP4p08hug" source="_69R8bBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Rhw-Eea9ZZP4p08hug" target="_69R8bhw-Eea9ZZP4p08hug" source="_69R8bBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Rxw-Eea9ZZP4p08hug" target="_69R8dRw-Eea9ZZP4p08hug" source="_69R8aRw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8SBw-Eea9ZZP4p08hug" target="_69R8dhw-Eea9ZZP4p08hug" source="_69R8cRw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8SRw-Eea9ZZP4p08hug" target="_69R8eBw-Eea9ZZP4p08hug" source="_69R8dRw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Shw-Eea9ZZP4p08hug" target="_69R8fxw-Eea9ZZP4p08hug" source="_69R8dhw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Sxw-Eea9ZZP4p08hug" target="_69R8hRw-Eea9ZZP4p08hug" source="_69R8dhw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69R8TBw-Eea9ZZP4p08hug" target="_69R8Whw-Eea9ZZP4p08hug" source="_69R8hRw-Eea9ZZP4p08hug">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_69R8TRw-Eea9ZZP4p08hug" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69R8Thw-Eea9ZZP4p08hug" target="_69R8dxw-Eea9ZZP4p08hug" source="_69R8hRw-Eea9ZZP4p08hug">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_69R8Txw-Eea9ZZP4p08hug" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69R8UBw-Eea9ZZP4p08hug" target="_69R8hhw-Eea9ZZP4p08hug" source="_69R8dBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8URw-Eea9ZZP4p08hug" target="_69R8hhw-Eea9ZZP4p08hug" source="_69R8dRw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69R8Uhw-Eea9ZZP4p08hug" target="_69R8hRw-Eea9ZZP4p08hug" source="_69R8hhw-Eea9ZZP4p08hug">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_69R8Uxw-Eea9ZZP4p08hug" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69R8VBw-Eea9ZZP4p08hug" target="_69R8fhw-Eea9ZZP4p08hug" source="_69R8hhw-Eea9ZZP4p08hug">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_69R8VRw-Eea9ZZP4p08hug" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Vhw-Eea9ZZP4p08hug" target="_69R8hxw-Eea9ZZP4p08hug" source="_69R8Xhw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8Vxw-Eea9ZZP4p08hug" target="_69R8hxw-Eea9ZZP4p08hug" source="_69R8exw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8WBw-Eea9ZZP4p08hug" target="_69R8hxw-Eea9ZZP4p08hug" source="_69R8ghw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8WRw-Eea9ZZP4p08hug" target="_69R8iRw-Eea9ZZP4p08hug" source="_69R8hxw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_69R8Whw-Eea9ZZP4p08hug" name="Test(==)" incoming="_69R8TBw-Eea9ZZP4p08hug">
              <first xmi:id="_69R8Wxw-Eea9ZZP4p08hug" name="Test(==).first" incoming="_69R8Qxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8XBw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8XRw-Eea9ZZP4p08hug" value="1"/>
              </first>
              <result xmi:id="_69R8Xhw-Eea9ZZP4p08hug" name="Test(==).result" outgoing="_69R8Vhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8Xxw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8YBw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <second xmi:id="_69R8YRw-Eea9ZZP4p08hug" name="Test(==).second" incoming="_69R8RRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8Yhw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8Yxw-Eea9ZZP4p08hug" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_69R8ZBw-Eea9ZZP4p08hug" name="Fork(Fork(value1))" incoming="_69R8HRw-Eea9ZZP4p08hug" outgoing="_69R8Qxw-Eea9ZZP4p08hug _69R8RBw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R8ZRw-Eea9ZZP4p08hug" name="Call(NotEmpty)">
              <argument xmi:id="_69R8Zhw-Eea9ZZP4p08hug" name="Call(NotEmpty).argument(seq)" incoming="_69R8RBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8Zxw-Eea9ZZP4p08hug"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8aBw-Eea9ZZP4p08hug" value="*"/>
              </argument>
              <result xmi:id="_69R8aRw-Eea9ZZP4p08hug" name="Call(NotEmpty).result()" outgoing="_69R8Rxw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8ahw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8axw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_69R8bBw-Eea9ZZP4p08hug" name="Fork(Fork(value2))" incoming="_69R8Hhw-Eea9ZZP4p08hug" outgoing="_69R8RRw-Eea9ZZP4p08hug _69R8Rhw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R8bRw-Eea9ZZP4p08hug" name="Call(NotEmpty)">
              <argument xmi:id="_69R8bhw-Eea9ZZP4p08hug" name="Call(NotEmpty).argument(seq)" incoming="_69R8Rhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8bxw-Eea9ZZP4p08hug"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8cBw-Eea9ZZP4p08hug" value="*"/>
              </argument>
              <result xmi:id="_69R8cRw-Eea9ZZP4p08hug" name="Call(NotEmpty).result()" outgoing="_69R8SBw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8chw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8cxw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_69R8dBw-Eea9ZZP4p08hug" name="Initial(Test(==))" outgoing="_69R8UBw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69R8dRw-Eea9ZZP4p08hug" name="Fork(Call(NotEmpty).result())" incoming="_69R8Rxw-Eea9ZZP4p08hug" outgoing="_69R8SRw-Eea9ZZP4p08hug _69R8URw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:ForkNode" xmi:id="_69R8dhw-Eea9ZZP4p08hug" name="Fork(Call(NotEmpty).result())" incoming="_69R8SBw-Eea9ZZP4p08hug" outgoing="_69R8Shw-Eea9ZZP4p08hug _69R8Sxw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R8dxw-Eea9ZZP4p08hug" name="Call(Not)" incoming="_69R8Thw-Eea9ZZP4p08hug">
              <argument xmi:id="_69R8eBw-Eea9ZZP4p08hug" name="Call(Not).argument(x)" incoming="_69R8SRw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8eRw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8ehw-Eea9ZZP4p08hug" value="1"/>
              </argument>
              <result xmi:id="_69R8exw-Eea9ZZP4p08hug" name="Call(Not).result(result)" outgoing="_69R8Vxw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8fBw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8fRw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R8fhw-Eea9ZZP4p08hug" name="Call(Not)" incoming="_69R8VBw-Eea9ZZP4p08hug">
              <argument xmi:id="_69R8fxw-Eea9ZZP4p08hug" name="Call(Not).argument(x)" incoming="_69R8Shw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8gBw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8gRw-Eea9ZZP4p08hug" value="1"/>
              </argument>
              <result xmi:id="_69R8ghw-Eea9ZZP4p08hug" name="Call(Not).result(result)" outgoing="_69R8WBw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8gxw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8hBw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_69R8hRw-Eea9ZZP4p08hug" name="Decision(Call(NotEmpty).result())" incoming="_69R8Sxw-Eea9ZZP4p08hug _69R8Uhw-Eea9ZZP4p08hug" outgoing="_69R8TBw-Eea9ZZP4p08hug _69R8Thw-Eea9ZZP4p08hug" decisionInputFlow="_69R8Sxw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_69R8hhw-Eea9ZZP4p08hug" name="Decision(Call(NotEmpty).result())" incoming="_69R8UBw-Eea9ZZP4p08hug _69R8URw-Eea9ZZP4p08hug" outgoing="_69R8Uhw-Eea9ZZP4p08hug _69R8VBw-Eea9ZZP4p08hug" decisionInputFlow="_69R8URw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:MergeNode" xmi:id="_69R8hxw-Eea9ZZP4p08hug" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_69R8Vhw-Eea9ZZP4p08hug _69R8Vxw-Eea9ZZP4p08hug _69R8WBw-Eea9ZZP4p08hug" outgoing="_69R8WRw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R8iBw-Eea9ZZP4p08hug" name="Call(Not)">
              <argument xmi:id="_69R8iRw-Eea9ZZP4p08hug" name="Call(Not).argument(x)" incoming="_69R8WRw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8ihw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8ixw-Eea9ZZP4p08hug" value="1"/>
              </argument>
              <result xmi:id="_69R8jBw-Eea9ZZP4p08hug" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8jRw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8jhw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R8jxw-Eea9ZZP4p08hug" name="ExpressionStatement@8ba4c08" outgoing="_69R8QBw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8kBw-Eea9ZZP4p08hug" target="_69R8kxw-Eea9ZZP4p08hug" source="_69R8tRw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69R8kRw-Eea9ZZP4p08hug" target="_69R8khw-Eea9ZZP4p08hug" source="_69R8lhw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R8khw-Eea9ZZP4p08hug" name="Call(Write)" incoming="_69R8kRw-Eea9ZZP4p08hug" behavior="_69R9Sxw-Eea9ZZP4p08hug">
              <argument xmi:id="_69R8kxw-Eea9ZZP4p08hug" name="Call(Write).argument(value)" incoming="_69R8kBw-Eea9ZZP4p08hug">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8lBw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8lRw-Eea9ZZP4p08hug" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R8lhw-Eea9ZZP4p08hug" name="Tuple@51d7a73c" outgoing="_69R8kRw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8lxw-Eea9ZZP4p08hug" target="_69R8oBw-Eea9ZZP4p08hug" source="_69R8mxw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8mBw-Eea9ZZP4p08hug" target="_69R8rxw-Eea9ZZP4p08hug" source="_69R8phw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8mRw-Eea9ZZP4p08hug" target="_69R8shw-Eea9ZZP4p08hug" source="_69R8qhw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69R8mhw-Eea9ZZP4p08hug" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_69R8mxw-Eea9ZZP4p08hug" name="Value(&quot;FAILED: &quot;).result" outgoing="_69R8lxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8nBw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8nRw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_69R8nhw-Eea9ZZP4p08hug" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R8nxw-Eea9ZZP4p08hug" name="Call(Concat)">
                <argument xmi:id="_69R8oBw-Eea9ZZP4p08hug" name="Call(Concat).argument(x)" incoming="_69R8lxw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8oRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8ohw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69R8oxw-Eea9ZZP4p08hug" name="Call(Concat).argument(y)" incoming="_69R8Hxw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8pBw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8pRw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <result xmi:id="_69R8phw-Eea9ZZP4p08hug" name="Call(Concat).result(result)" outgoing="_69R8mBw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8pxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8qBw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69R8qRw-Eea9ZZP4p08hug" name="Value(&quot;==&quot;)">
                <result xmi:id="_69R8qhw-Eea9ZZP4p08hug" name="Value(&quot;==&quot;).result" outgoing="_69R8mRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8qxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8rBw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_69R8rRw-Eea9ZZP4p08hug" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R8rhw-Eea9ZZP4p08hug" name="Call(Concat)">
                <argument xmi:id="_69R8rxw-Eea9ZZP4p08hug" name="Call(Concat).argument(x)" incoming="_69R8mBw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8sBw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8sRw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <argument xmi:id="_69R8shw-Eea9ZZP4p08hug" name="Call(Concat).argument(y)" incoming="_69R8mRw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8sxw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8tBw-Eea9ZZP4p08hug" value="1"/>
                </argument>
                <result xmi:id="_69R8tRw-Eea9ZZP4p08hug" name="Call(Concat).result(result)" outgoing="_69R8kBw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8thw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8txw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R8uBw-Eea9ZZP4p08hug" name="ExpressionStatement@5b5f38a4" incoming="_69R8QBw-Eea9ZZP4p08hug" outgoing="_69R8QRw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8uRw-Eea9ZZP4p08hug" target="_69R8vBw-Eea9ZZP4p08hug" source="_69R9Mxw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69R8uhw-Eea9ZZP4p08hug" target="_69R8uxw-Eea9ZZP4p08hug" source="_69R8vxw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R8uxw-Eea9ZZP4p08hug" name="Call(Write)" incoming="_69R8uhw-Eea9ZZP4p08hug" behavior="_69R9Sxw-Eea9ZZP4p08hug">
              <argument xmi:id="_69R8vBw-Eea9ZZP4p08hug" name="Call(Write).argument(value)" incoming="_69R8uRw-Eea9ZZP4p08hug">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8vRw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8vhw-Eea9ZZP4p08hug" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R8vxw-Eea9ZZP4p08hug" name="Tuple@1f2a9760" outgoing="_69R8uhw-Eea9ZZP4p08hug">
              <edge xmi:type="uml:ControlFlow" xmi:id="_69R8wBw-Eea9ZZP4p08hug" target="_69R9Mhw-Eea9ZZP4p08hug" source="_69R9MRw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8wRw-Eea9ZZP4p08hug" target="_69R9Mhw-Eea9ZZP4p08hug" source="_69R8zBw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_69R8whw-Eea9ZZP4p08hug" target="_69R8zxw-Eea9ZZP4p08hug" source="_69R9Mhw-Eea9ZZP4p08hug">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_69R8wxw-Eea9ZZP4p08hug" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_69R8xBw-Eea9ZZP4p08hug" target="_69R82Rw-Eea9ZZP4p08hug" source="_69R9Mhw-Eea9ZZP4p08hug">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_69R8xRw-Eea9ZZP4p08hug" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8xhw-Eea9ZZP4p08hug" target="_69R9Mxw-Eea9ZZP4p08hug" source="_69R80Rw-Eea9ZZP4p08hug"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8xxw-Eea9ZZP4p08hug" target="_69R9Mxw-Eea9ZZP4p08hug" source="_69R84xw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R8yBw-Eea9ZZP4p08hug" name="Call(IsEmpty)">
                <argument xmi:id="_69R8yRw-Eea9ZZP4p08hug" name="Call(IsEmpty).argument(seq)" incoming="_69R8IBw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8yhw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8yxw-Eea9ZZP4p08hug" value="*"/>
                </argument>
                <result xmi:id="_69R8zBw-Eea9ZZP4p08hug" name="Call(IsEmpty).result()" outgoing="_69R8wRw-Eea9ZZP4p08hug">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8zRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8zhw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R8zxw-Eea9ZZP4p08hug" name="ConditionalTestExpression@2bf5c161.operand2" incoming="_69R8whw-Eea9ZZP4p08hug">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_69R80Bw-Eea9ZZP4p08hug" target="_69R80Rw-Eea9ZZP4p08hug" source="_69R81Rw-Eea9ZZP4p08hug"/>
                <structuredNodeOutput xmi:id="_69R80Rw-Eea9ZZP4p08hug" name="ConditionalTestExpression@2bf5c161.operand2.result" incoming="_69R80Bw-Eea9ZZP4p08hug" outgoing="_69R8xhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R80hw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R80xw-Eea9ZZP4p08hug" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69R81Bw-Eea9ZZP4p08hug" name="Value(&quot;null&quot;)">
                  <result xmi:id="_69R81Rw-Eea9ZZP4p08hug" name="Value(&quot;null&quot;).result" outgoing="_69R80Bw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R81hw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R81xw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_69R82Bw-Eea9ZZP4p08hug" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R82Rw-Eea9ZZP4p08hug" name="ConditionalTestExpression@2bf5c161.operand3" incoming="_69R8xBw-Eea9ZZP4p08hug">
                <edge xmi:type="uml:ControlFlow" xmi:id="_69R82hw-Eea9ZZP4p08hug" target="_69R9Lxw-Eea9ZZP4p08hug" source="_69R9Lhw-Eea9ZZP4p08hug"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_69R82xw-Eea9ZZP4p08hug" target="_69R9Lxw-Eea9ZZP4p08hug" source="_69R86hw-Eea9ZZP4p08hug"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_69R83Bw-Eea9ZZP4p08hug" target="_69R87Rw-Eea9ZZP4p08hug" source="_69R9Lxw-Eea9ZZP4p08hug">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_69R83Rw-Eea9ZZP4p08hug" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_69R83hw-Eea9ZZP4p08hug" target="_69R9KBw-Eea9ZZP4p08hug" source="_69R9Lxw-Eea9ZZP4p08hug">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_69R83xw-Eea9ZZP4p08hug" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_69R84Bw-Eea9ZZP4p08hug" target="_69R9MBw-Eea9ZZP4p08hug" source="_69R88xw-Eea9ZZP4p08hug"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_69R84Rw-Eea9ZZP4p08hug" target="_69R9MBw-Eea9ZZP4p08hug" source="_69R9Khw-Eea9ZZP4p08hug"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_69R84hw-Eea9ZZP4p08hug" target="_69R84xw-Eea9ZZP4p08hug" source="_69R9MBw-Eea9ZZP4p08hug"/>
                <structuredNodeOutput xmi:id="_69R84xw-Eea9ZZP4p08hug" name="ConditionalTestExpression@2bf5c161.operand3.result" incoming="_69R84hw-Eea9ZZP4p08hug" outgoing="_69R8xxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R85Bw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R85Rw-Eea9ZZP4p08hug" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_69R85hw-Eea9ZZP4p08hug" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_69R85xw-Eea9ZZP4p08hug" name="ReadIsClassifiedObject(String).object" incoming="_69R8IRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R86Bw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R86Rw-Eea9ZZP4p08hug" value="1"/>
                  </object>
                  <result xmi:id="_69R86hw-Eea9ZZP4p08hug" name="ReadIsClassifiedObject(String).result" outgoing="_69R82xw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R86xw-Eea9ZZP4p08hug" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R87Bw-Eea9ZZP4p08hug" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R87Rw-Eea9ZZP4p08hug" name="ConditionalTestExpression@3378df55.operand2" incoming="_69R83Bw-Eea9ZZP4p08hug">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_69R87hw-Eea9ZZP4p08hug" target="_69R9EBw-Eea9ZZP4p08hug" source="_69R89xw-Eea9ZZP4p08hug"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_69R87xw-Eea9ZZP4p08hug" target="_69R9Exw-Eea9ZZP4p08hug" source="_69R9Dhw-Eea9ZZP4p08hug"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_69R88Bw-Eea9ZZP4p08hug" target="_69R9Hxw-Eea9ZZP4p08hug" source="_69R9Fhw-Eea9ZZP4p08hug"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_69R88Rw-Eea9ZZP4p08hug" target="_69R9Ihw-Eea9ZZP4p08hug" source="_69R9Ghw-Eea9ZZP4p08hug"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_69R88hw-Eea9ZZP4p08hug" target="_69R88xw-Eea9ZZP4p08hug" source="_69R9JRw-Eea9ZZP4p08hug"/>
                  <structuredNodeOutput xmi:id="_69R88xw-Eea9ZZP4p08hug" name="ConditionalTestExpression@3378df55.operand2.result" incoming="_69R88hw-Eea9ZZP4p08hug" outgoing="_69R84Bw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R89Bw-Eea9ZZP4p08hug"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R89Rw-Eea9ZZP4p08hug" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69R89hw-Eea9ZZP4p08hug" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_69R89xw-Eea9ZZP4p08hug" name="Value(&quot;&quot;&quot;).result" outgoing="_69R87hw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R8-Bw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R8-Rw-Eea9ZZP4p08hug" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_69R8-hw-Eea9ZZP4p08hug" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_69R8-xw-Eea9ZZP4p08hug" name="CastExpression@5e6a6e19" mode="parallel" outputElement="_69R9Dhw-Eea9ZZP4p08hug" inputElement="_69R9DRw-Eea9ZZP4p08hug">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8_Bw-Eea9ZZP4p08hug" target="_69R9BRw-Eea9ZZP4p08hug" source="_69R9Cxw-Eea9ZZP4p08hug"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8_Rw-Eea9ZZP4p08hug" target="_69R9DBw-Eea9ZZP4p08hug" source="_69R9Cxw-Eea9ZZP4p08hug"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8_hw-Eea9ZZP4p08hug" target="_69R9DBw-Eea9ZZP4p08hug" source="_69R9CBw-Eea9ZZP4p08hug"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_69R8_xw-Eea9ZZP4p08hug" target="_69R9Axw-Eea9ZZP4p08hug" source="_69R9DBw-Eea9ZZP4p08hug">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_69R9ABw-Eea9ZZP4p08hug" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_69R9ARw-Eea9ZZP4p08hug" target="_69R9Cxw-Eea9ZZP4p08hug" source="_69R9DRw-Eea9ZZP4p08hug"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_69R9Ahw-Eea9ZZP4p08hug" target="_69R9Dhw-Eea9ZZP4p08hug" source="_69R9Axw-Eea9ZZP4p08hug"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_69R9Axw-Eea9ZZP4p08hug" name="Merge(CastExpression@5e6a6e19.operand)" incoming="_69R8_xw-Eea9ZZP4p08hug" outgoing="_69R9Ahw-Eea9ZZP4p08hug"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_69R9BBw-Eea9ZZP4p08hug" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_69R9BRw-Eea9ZZP4p08hug" name="ReadIsClassifiedObject(String).object" incoming="_69R8_Bw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9Bhw-Eea9ZZP4p08hug" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9Bxw-Eea9ZZP4p08hug" value="1"/>
                      </object>
                      <result xmi:id="_69R9CBw-Eea9ZZP4p08hug" name="ReadIsClassifiedObject(String).result" outgoing="_69R8_hw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9CRw-Eea9ZZP4p08hug" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9Chw-Eea9ZZP4p08hug" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_69R9Cxw-Eea9ZZP4p08hug" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_69R9ARw-Eea9ZZP4p08hug" outgoing="_69R8_Bw-Eea9ZZP4p08hug _69R8_Rw-Eea9ZZP4p08hug"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_69R9DBw-Eea9ZZP4p08hug" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_69R8_Rw-Eea9ZZP4p08hug _69R8_hw-Eea9ZZP4p08hug" outgoing="_69R8_xw-Eea9ZZP4p08hug" decisionInputFlow="_69R8_hw-Eea9ZZP4p08hug"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_69R9DRw-Eea9ZZP4p08hug" name="CastExpression@5e6a6e19.inputElement" incoming="_69R8Ihw-Eea9ZZP4p08hug" outgoing="_69R9ARw-Eea9ZZP4p08hug" regionAsInput="_69R8-xw-Eea9ZZP4p08hug"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_69R9Dhw-Eea9ZZP4p08hug" name="CastExpression@5e6a6e19.outputElement" incoming="_69R9Ahw-Eea9ZZP4p08hug" outgoing="_69R87xw-Eea9ZZP4p08hug" regionAsOutput="_69R8-xw-Eea9ZZP4p08hug">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R9Dxw-Eea9ZZP4p08hug" name="Call(Concat)">
                    <argument xmi:id="_69R9EBw-Eea9ZZP4p08hug" name="Call(Concat).argument(x)" incoming="_69R87hw-Eea9ZZP4p08hug">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9ERw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9Ehw-Eea9ZZP4p08hug" value="1"/>
                    </argument>
                    <argument xmi:id="_69R9Exw-Eea9ZZP4p08hug" name="Call(Concat).argument(y)" incoming="_69R87xw-Eea9ZZP4p08hug">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9FBw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9FRw-Eea9ZZP4p08hug" value="1"/>
                    </argument>
                    <result xmi:id="_69R9Fhw-Eea9ZZP4p08hug" name="Call(Concat).result(result)" outgoing="_69R88Bw-Eea9ZZP4p08hug">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9Fxw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9GBw-Eea9ZZP4p08hug" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69R9GRw-Eea9ZZP4p08hug" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_69R9Ghw-Eea9ZZP4p08hug" name="Value(&quot;&quot;&quot;).result" outgoing="_69R88Rw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9Gxw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9HBw-Eea9ZZP4p08hug" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_69R9HRw-Eea9ZZP4p08hug" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R9Hhw-Eea9ZZP4p08hug" name="Call(Concat)">
                    <argument xmi:id="_69R9Hxw-Eea9ZZP4p08hug" name="Call(Concat).argument(x)" incoming="_69R88Bw-Eea9ZZP4p08hug">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9IBw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9IRw-Eea9ZZP4p08hug" value="1"/>
                    </argument>
                    <argument xmi:id="_69R9Ihw-Eea9ZZP4p08hug" name="Call(Concat).argument(y)" incoming="_69R88Rw-Eea9ZZP4p08hug">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9Ixw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9JBw-Eea9ZZP4p08hug" value="1"/>
                    </argument>
                    <result xmi:id="_69R9JRw-Eea9ZZP4p08hug" name="Call(Concat).result(result)" outgoing="_69R88hw-Eea9ZZP4p08hug">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9Jhw-Eea9ZZP4p08hug" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9Jxw-Eea9ZZP4p08hug" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R9KBw-Eea9ZZP4p08hug" name="ConditionalTestExpression@3378df55.operand3" incoming="_69R83hw-Eea9ZZP4p08hug">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_69R9KRw-Eea9ZZP4p08hug" target="_69R9Khw-Eea9ZZP4p08hug" source="_69R9LRw-Eea9ZZP4p08hug"/>
                  <structuredNodeOutput xmi:id="_69R9Khw-Eea9ZZP4p08hug" name="ConditionalTestExpression@3378df55.operand3.result" incoming="_69R9KRw-Eea9ZZP4p08hug" outgoing="_69R84Rw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9Kxw-Eea9ZZP4p08hug"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9LBw-Eea9ZZP4p08hug" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_69R9LRw-Eea9ZZP4p08hug" name="Merge(Fork(value2))" incoming="_69R8Ixw-Eea9ZZP4p08hug" outgoing="_69R9KRw-Eea9ZZP4p08hug"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_69R9Lhw-Eea9ZZP4p08hug" name="Initial(ConditionalTestExpression@3378df55)" outgoing="_69R82hw-Eea9ZZP4p08hug"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_69R9Lxw-Eea9ZZP4p08hug" name="Decision(ConditionalTestExpression@3378df55)" incoming="_69R82hw-Eea9ZZP4p08hug _69R82xw-Eea9ZZP4p08hug" outgoing="_69R83Bw-Eea9ZZP4p08hug _69R83hw-Eea9ZZP4p08hug" decisionInputFlow="_69R82xw-Eea9ZZP4p08hug"/>
                <node xmi:type="uml:MergeNode" xmi:id="_69R9MBw-Eea9ZZP4p08hug" name="Merge(ConditionalTestExpression@3378df55.result)" incoming="_69R84Bw-Eea9ZZP4p08hug _69R84Rw-Eea9ZZP4p08hug" outgoing="_69R84hw-Eea9ZZP4p08hug"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_69R9MRw-Eea9ZZP4p08hug" name="Initial(ConditionalTestExpression@2bf5c161)" outgoing="_69R8wBw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_69R9Mhw-Eea9ZZP4p08hug" name="Decision(ConditionalTestExpression@2bf5c161)" incoming="_69R8wBw-Eea9ZZP4p08hug _69R8wRw-Eea9ZZP4p08hug" outgoing="_69R8whw-Eea9ZZP4p08hug _69R8xBw-Eea9ZZP4p08hug" decisionInputFlow="_69R8wRw-Eea9ZZP4p08hug"/>
              <node xmi:type="uml:MergeNode" xmi:id="_69R9Mxw-Eea9ZZP4p08hug" name="Merge(ConditionalTestExpression@2bf5c161.result)" incoming="_69R8xhw-Eea9ZZP4p08hug _69R8xxw-Eea9ZZP4p08hug" outgoing="_69R8uRw-Eea9ZZP4p08hug"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R9NBw-Eea9ZZP4p08hug" name="ExpressionStatement@50ac98f4" incoming="_69R8QRw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R9NRw-Eea9ZZP4p08hug" target="_69R9OBw-Eea9ZZP4p08hug" source="_69R9QBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69R9Nhw-Eea9ZZP4p08hug" target="_69R9Nxw-Eea9ZZP4p08hug" source="_69R9Phw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R9Nxw-Eea9ZZP4p08hug" name="Call(WriteLine)" incoming="_69R9Nhw-Eea9ZZP4p08hug">
              <argument xmi:id="_69R9OBw-Eea9ZZP4p08hug" name="Call(WriteLine).argument(value)" incoming="_69R9NRw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9ORw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9Ohw-Eea9ZZP4p08hug" value="1"/>
              </argument>
              <result xmi:id="_69R9Oxw-Eea9ZZP4p08hug" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9PBw-Eea9ZZP4p08hug"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9PRw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R9Phw-Eea9ZZP4p08hug" name="Tuple@59340144" outgoing="_69R9Nhw-Eea9ZZP4p08hug">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69R9Pxw-Eea9ZZP4p08hug" name="Value(&quot;&quot;)">
                <result xmi:id="_69R9QBw-Eea9ZZP4p08hug" name="Value(&quot;&quot;).result" outgoing="_69R9NRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9QRw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9Qhw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_69R9Qxw-Eea9ZZP4p08hug" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69R9RBw-Eea9ZZP4p08hug" name="Value(true)">
            <result xmi:id="_69R9RRw-Eea9ZZP4p08hug" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9Rhw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9Rxw-Eea9ZZP4p08hug" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_69R9SBw-Eea9ZZP4p08hug" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_69R9SRw-Eea9ZZP4p08hug" body="_69R8jxw-Eea9ZZP4p08hug _69R8uBw-Eea9ZZP4p08hug _69R9NBw-Eea9ZZP4p08hug" decider="_69R8jBw-Eea9ZZP4p08hug" successorClause="_69R9Shw-Eea9ZZP4p08hug" test="_69R8Qhw-Eea9ZZP4p08hug"/>
          <clause xmi:id="_69R9Shw-Eea9ZZP4p08hug" decider="_69R9RRw-Eea9ZZP4p08hug" predecessorClause="_69R9SRw-Eea9ZZP4p08hug" test="_69R9RBw-Eea9ZZP4p08hug"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_69R8KBw-Eea9ZZP4p08hug" name="Input(label)" outgoing="_69R8Ghw-Eea9ZZP4p08hug" parameter="_69R8ERw-Eea9ZZP4p08hug">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_69R8KRw-Eea9ZZP4p08hug" name="Input(value1)" outgoing="_69R8Gxw-Eea9ZZP4p08hug" parameter="_69R8FBw-Eea9ZZP4p08hug"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_69R8Khw-Eea9ZZP4p08hug" name="Input(value2)" outgoing="_69R8HBw-Eea9ZZP4p08hug" parameter="_69R8Fxw-Eea9ZZP4p08hug"/>
      <node xmi:type="uml:JoinNode" xmi:id="_69R8Kxw-Eea9ZZP4p08hug" name="Join(Input))" incoming="_69R8JBw-Eea9ZZP4p08hug _69R8JRw-Eea9ZZP4p08hug _69R8Jhw-Eea9ZZP4p08hug" outgoing="_69R8Jxw-Eea9ZZP4p08hug"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_69R9Sxw-Eea9ZZP4p08hug" name="Write" visibility="public" node="_69R9WBw-Eea9ZZP4p08hug _69R9Whw-Eea9ZZP4p08hug _69R9YBw-Eea9ZZP4p08hug _69R9WRw-Eea9ZZP4p08hug" group="_69R9Whw-Eea9ZZP4p08hug _69R9YBw-Eea9ZZP4p08hug">
      <packageImport xmi:id="_69R9TBw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_69R9TRw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_69R9Thw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_69R9Txw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_69R9UBw-Eea9ZZP4p08hug" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_69R9URw-Eea9ZZP4p08hug" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9Uhw-Eea9ZZP4p08hug" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9Uxw-Eea9ZZP4p08hug" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_69R9VBw-Eea9ZZP4p08hug" target="_69R9XBw-Eea9ZZP4p08hug" source="_69R9WBw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_69R9VRw-Eea9ZZP4p08hug" target="_69R9Zxw-Eea9ZZP4p08hug" source="_69R9Xxw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_69R9Vhw-Eea9ZZP4p08hug" target="_69R9WRw-Eea9ZZP4p08hug" source="_69R9Whw-Eea9ZZP4p08hug"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_69R9Vxw-Eea9ZZP4p08hug" target="_69R9YBw-Eea9ZZP4p08hug" source="_69R9WRw-Eea9ZZP4p08hug"/>
      <structuredNode xmi:id="_69R9Whw-Eea9ZZP4p08hug" name="Node(Input(value))" outgoing="_69R9Vhw-Eea9ZZP4p08hug">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_69R9Wxw-Eea9ZZP4p08hug" target="_69R9Xxw-Eea9ZZP4p08hug" source="_69R9XBw-Eea9ZZP4p08hug"/>
        <structuredNodeInput xmi:id="_69R9XBw-Eea9ZZP4p08hug" name="Input(value)" incoming="_69R9VBw-Eea9ZZP4p08hug" outgoing="_69R9Wxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9XRw-Eea9ZZP4p08hug" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9Xhw-Eea9ZZP4p08hug" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_69R9Xxw-Eea9ZZP4p08hug" name="Fork(value)" incoming="_69R9Wxw-Eea9ZZP4p08hug" outgoing="_69R9VRw-Eea9ZZP4p08hug"/>
      </structuredNode>
      <structuredNode xmi:id="_69R9YBw-Eea9ZZP4p08hug" name="Body(Write)" incoming="_69R9Vxw-Eea9ZZP4p08hug">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R9YRw-Eea9ZZP4p08hug" name="ExpressionStatement@a049335">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_69R9Yhw-Eea9ZZP4p08hug" target="_69R9dBw-Eea9ZZP4p08hug" source="_69R9gRw-Eea9ZZP4p08hug"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_69R9Yxw-Eea9ZZP4p08hug" target="_69R9ZBw-Eea9ZZP4p08hug" source="_69R9dRw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_69R9ZBw-Eea9ZZP4p08hug" name="Collect(Call(write))" incoming="_69R9Yxw-Eea9ZZP4p08hug" mode="parallel" inputElement="_69R9dBw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R9ZRw-Eea9ZZP4p08hug" target="_69R9axw-Eea9ZZP4p08hug" source="_69R9Zxw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R9Zhw-Eea9ZZP4p08hug" target="_69R9cRw-Eea9ZZP4p08hug" source="_69R9dBw-Eea9ZZP4p08hug"/>
            <structuredNodeInput xmi:id="_69R9Zxw-Eea9ZZP4p08hug" name="Collect(Call(write)).input(Fork(value))" incoming="_69R9VRw-Eea9ZZP4p08hug" outgoing="_69R9ZRw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9aBw-Eea9ZZP4p08hug" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9aRw-Eea9ZZP4p08hug" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_69R9ahw-Eea9ZZP4p08hug" name="Call(write)">
              <argument xmi:id="_69R9axw-Eea9ZZP4p08hug" name="Call(write).argument(value)" incoming="_69R9ZRw-Eea9ZZP4p08hug">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9bBw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9bRw-Eea9ZZP4p08hug" value="1"/>
              </argument>
              <result xmi:id="_69R9bhw-Eea9ZZP4p08hug" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9bxw-Eea9ZZP4p08hug"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9cBw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_69R9cRw-Eea9ZZP4p08hug" name="Call(write).target" incoming="_69R9Zhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9chw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9cxw-Eea9ZZP4p08hug" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_69R9dBw-Eea9ZZP4p08hug" name="Collect(Call(write)).inputElement" incoming="_69R9Yhw-Eea9ZZP4p08hug" outgoing="_69R9Zhw-Eea9ZZP4p08hug" regionAsInput="_69R9ZBw-Eea9ZZP4p08hug"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R9dRw-Eea9ZZP4p08hug" name="Feature(Call(At).result())" outgoing="_69R9Yxw-Eea9ZZP4p08hug">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R9dhw-Eea9ZZP4p08hug" target="_69R9exw-Eea9ZZP4p08hug" source="_69R9hhw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R9dxw-Eea9ZZP4p08hug" target="_69R9jhw-Eea9ZZP4p08hug" source="_69R9ihw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_69R9eBw-Eea9ZZP4p08hug" target="_69R9ehw-Eea9ZZP4p08hug" source="_69R9hBw-Eea9ZZP4p08hug"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_69R9eRw-Eea9ZZP4p08hug" target="_69R9fhw-Eea9ZZP4p08hug" source="_69R9jhw-Eea9ZZP4p08hug"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_69R9ehw-Eea9ZZP4p08hug" name="Call(At)" incoming="_69R9eBw-Eea9ZZP4p08hug">
              <argument xmi:id="_69R9exw-Eea9ZZP4p08hug" name="Call(At).argument(seq)" incoming="_69R9dhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9fBw-Eea9ZZP4p08hug"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9fRw-Eea9ZZP4p08hug" value="*"/>
              </argument>
              <argument xmi:id="_69R9fhw-Eea9ZZP4p08hug" name="Call(At).argument(index)" incoming="_69R9eRw-Eea9ZZP4p08hug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9fxw-Eea9ZZP4p08hug" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9gBw-Eea9ZZP4p08hug" value="1"/>
              </argument>
              <result xmi:id="_69R9gRw-Eea9ZZP4p08hug" name="Call(At).result()" outgoing="_69R9Yhw-Eea9ZZP4p08hug">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9ghw-Eea9ZZP4p08hug"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9gxw-Eea9ZZP4p08hug" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_69R9hBw-Eea9ZZP4p08hug" name="Tuple@dcc15f9" outgoing="_69R9eBw-Eea9ZZP4p08hug">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_69R9hRw-Eea9ZZP4p08hug" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_69R9hhw-Eea9ZZP4p08hug" name="ReadExtent(StandardOutputChannel).result" outgoing="_69R9dhw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9hxw-Eea9ZZP4p08hug"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9iBw-Eea9ZZP4p08hug" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_69R9iRw-Eea9ZZP4p08hug" name="Value(1)">
                <result xmi:id="_69R9ihw-Eea9ZZP4p08hug" name="Value(1).result" outgoing="_69R9dxw-Eea9ZZP4p08hug" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_69R9ixw-Eea9ZZP4p08hug" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_69R9jBw-Eea9ZZP4p08hug" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_69R9jRw-Eea9ZZP4p08hug" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_69R9jhw-Eea9ZZP4p08hug" name="Fork(Call(At).argument(index))" incoming="_69R9dxw-Eea9ZZP4p08hug" outgoing="_69R9eRw-Eea9ZZP4p08hug"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_69R9WBw-Eea9ZZP4p08hug" name="Input(value)" outgoing="_69R9VBw-Eea9ZZP4p08hug" parameter="_69R9URw-Eea9ZZP4p08hug"/>
      <node xmi:type="uml:JoinNode" xmi:id="_69R9WRw-Eea9ZZP4p08hug" name="Join(Input))" incoming="_69R9Vhw-Eea9ZZP4p08hug" outgoing="_69R9Vxw-Eea9ZZP4p08hug"/>
    </packagedElement>
    <profileApplication xmi:id="_69R9jxw-Eea9ZZP4p08hug">
      <eAnnotations xmi:id="_69R9kBw-Eea9ZZP4p08hug" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_69R9kRw-Eea9ZZP4p08hug" base_BehavioralFeature="_69R8CBw-Eea9ZZP4p08hug"/>
  <l2:Create xmi:id="_69R9khw-Eea9ZZP4p08hug" base_BehavioralFeature="_69RXVRw-Eea9ZZP4p08hug"/>
  <l2:Destroy xmi:id="_69R9kxw-Eea9ZZP4p08hug" base_BehavioralFeature="_69RZjxw-Eea9ZZP4p08hug"/>
  <l2:Create xmi:id="_69R9lBw-Eea9ZZP4p08hug" base_BehavioralFeature="_69RXWRw-Eea9ZZP4p08hug"/>
  <l2:Destroy xmi:id="_69R9lRw-Eea9ZZP4p08hug" base_BehavioralFeature="_69RXdhw-Eea9ZZP4p08hug"/>
  <l2:Create xmi:id="_69R9lhw-Eea9ZZP4p08hug" base_BehavioralFeature="_69R8BBw-Eea9ZZP4p08hug"/>
  <l2:Create xmi:id="_69R9lxw-Eea9ZZP4p08hug" base_BehavioralFeature="_69RZkRw-Eea9ZZP4p08hug"/>
</xmi:XMI>

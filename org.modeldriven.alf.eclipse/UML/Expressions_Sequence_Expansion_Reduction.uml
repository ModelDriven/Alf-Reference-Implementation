<?xml version="1.1" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_30u4cNXWEem1l5O0R0OWkQ" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_30u4cdXWEem1l5O0R0OWkQ" name="Expressions_Sequence_Expansion_Reduction" visibility="public">
      <packageImport xmi:id="_30u4ctXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-IntegerFunctions"/>
      </packageImport>
      <packageImport xmi:id="_30u4c9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_30u4dNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_30u4ddXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_30u4dtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_30u4d9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_30u4eNXWEem1l5O0R0OWkQ" general="_30wvnNXWEem1l5O0R0OWkQ"/>
      <ownedAttribute xmi:id="_30u4edXWEem1l5O0R0OWkQ" name="Expressions_Sequence_Expansion_Reduction$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4etXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4e9XWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_30u4fNXWEem1l5O0R0OWkQ" name="Expressions_Sequence_Expansion_Reduction$method$1" visibility="private" specification="_30vgt9XWEem1l5O0R0OWkQ" node="_30u4gdXWEem1l5O0R0OWkQ _30u4gtXWEem1l5O0R0OWkQ" group="_30u4gtXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_30u4fdXWEem1l5O0R0OWkQ" name="" type="_30u4cdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4ftXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4f9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4gNXWEem1l5O0R0OWkQ" target="_30u4gdXWEem1l5O0R0OWkQ" source="_30u4q9XWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_30u4gtXWEem1l5O0R0OWkQ" name="Body(Expressions_Sequence_Expansion_Reduction$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4g9XWEem1l5O0R0OWkQ" target="_30u4q9XWEem1l5O0R0OWkQ" source="_30u4qNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u4hNXWEem1l5O0R0OWkQ" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u4hdXWEem1l5O0R0OWkQ" name="ExpressionStatement@2aad68a0">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4htXWEem1l5O0R0OWkQ" target="_30u4ntXWEem1l5O0R0OWkQ" source="_30u4jNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30u4h9XWEem1l5O0R0OWkQ" target="_30u4ndXWEem1l5O0R0OWkQ" source="_30u4itXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4iNXWEem1l5O0R0OWkQ" target="_30u4l9XWEem1l5O0R0OWkQ" source="_30u4kdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30u4idXWEem1l5O0R0OWkQ" target="_30u4lNXWEem1l5O0R0OWkQ" source="_30u4itXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u4itXWEem1l5O0R0OWkQ" name="Tuple@2420af8a" outgoing="_30u4h9XWEem1l5O0R0OWkQ _30u4idXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u4i9XWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_30u4jNXWEem1l5O0R0OWkQ" name="Value(null).result" outgoing="_30u4htXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4jdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4jtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_30u4j9XWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_30u4kNXWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_30u4kdXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30u4iNXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4ktXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4k9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u4lNXWEem1l5O0R0OWkQ" name="Node(Call(run))" incoming="_30u4idXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4ldXWEem1l5O0R0OWkQ" target="_30u4mtXWEem1l5O0R0OWkQ" source="_30u4odXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4ltXWEem1l5O0R0OWkQ" target="_30u4pNXWEem1l5O0R0OWkQ" source="_30u4l9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_30u4l9XWEem1l5O0R0OWkQ" name="Input(Call(run).target)" incoming="_30u4iNXWEem1l5O0R0OWkQ" outgoing="_30u4ltXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4mNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4mdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_30u4mtXWEem1l5O0R0OWkQ" name="Output(Call(run).result())" incoming="_30u4ldXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4m9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4nNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_30u4ndXWEem1l5O0R0OWkQ" name="Call(run)" incoming="_30u4h9XWEem1l5O0R0OWkQ" operation="_30vgu9XWEem1l5O0R0OWkQ">
                  <argument xmi:id="_30u4ntXWEem1l5O0R0OWkQ" name="Call(run).argument(tester)" incoming="_30u4htXWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4n9XWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4oNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_30u4odXWEem1l5O0R0OWkQ" name="Call(run).result()" outgoing="_30u4ldXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4otXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4o9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <target xmi:id="_30u4pNXWEem1l5O0R0OWkQ" name="Call(run).target" incoming="_30u4ltXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4pdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4ptXWEem1l5O0R0OWkQ" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_30u4p9XWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_30u4qNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30u4g9XWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4qdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4qtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_30u4q9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30u4g9XWEem1l5O0R0OWkQ" outgoing="_30u4gNXWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30u4gdXWEem1l5O0R0OWkQ" name="Return" incoming="_30u4gNXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" parameter="_30u4fdXWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_30u4rNXWEem1l5O0R0OWkQ" name="run$method$1" visibility="private" specification="_30vgu9XWEem1l5O0R0OWkQ" node="_30u4ttXWEem1l5O0R0OWkQ _30u4t9XWEem1l5O0R0OWkQ _30u4uNXWEem1l5O0R0OWkQ _30u4udXWEem1l5O0R0OWkQ" group="_30u4udXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_30u4rdXWEem1l5O0R0OWkQ" name="tester" type="_30xUtdXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4rtXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4r9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30u4sNXWEem1l5O0R0OWkQ" name="" type="_30u4cdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4sdXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4stXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4s9XWEem1l5O0R0OWkQ" target="_30u4t9XWEem1l5O0R0OWkQ" source="_30u4ttXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4tNXWEem1l5O0R0OWkQ" target="_30u4uNXWEem1l5O0R0OWkQ" source="_30vgM9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4tdXWEem1l5O0R0OWkQ" target="_30vgPNXWEem1l5O0R0OWkQ" source="_30u4t9XWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_30u4udXWEem1l5O0R0OWkQ" name="Body(run$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4utXWEem1l5O0R0OWkQ" target="_30vgM9XWEem1l5O0R0OWkQ" source="_30vgMNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4u9XWEem1l5O0R0OWkQ" target="_30vgQ9XWEem1l5O0R0OWkQ" source="_30vgM9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30u4vNXWEem1l5O0R0OWkQ" target="_30u4xtXWEem1l5O0R0OWkQ" source="_30vgQtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30u4vdXWEem1l5O0R0OWkQ" target="_30vgQtXWEem1l5O0R0OWkQ" source="_30vgNNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4vtXWEem1l5O0R0OWkQ" target="_30vgR9XWEem1l5O0R0OWkQ" source="_30vgM9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4v9XWEem1l5O0R0OWkQ" target="_30vgTtXWEem1l5O0R0OWkQ" source="_30vgStXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4wNXWEem1l5O0R0OWkQ" target="_30vgWtXWEem1l5O0R0OWkQ" source="_30vgUdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4wdXWEem1l5O0R0OWkQ" target="_30vgYNXWEem1l5O0R0OWkQ" source="_30vgVdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30u4wtXWEem1l5O0R0OWkQ" target="_30vgZNXWEem1l5O0R0OWkQ" source="_30vgY9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4w9XWEem1l5O0R0OWkQ" target="_30vgZNXWEem1l5O0R0OWkQ" source="_30vgXdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30u4xNXWEem1l5O0R0OWkQ" target="_30vgNNXWEem1l5O0R0OWkQ" source="_30vgZNXWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_30u4xdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u4xtXWEem1l5O0R0OWkQ" name="Body" incoming="_30u4vNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4x9XWEem1l5O0R0OWkQ" target="_30u5O9XWEem1l5O0R0OWkQ" source="_30u5JNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u4yNXWEem1l5O0R0OWkQ" target="_30u5M9XWEem1l5O0R0OWkQ" source="_30u45tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4ydXWEem1l5O0R0OWkQ" target="_30u5VNXWEem1l5O0R0OWkQ" source="_30u5JdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u4ytXWEem1l5O0R0OWkQ" target="_30u5TNXWEem1l5O0R0OWkQ" source="_30u5M9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4y9XWEem1l5O0R0OWkQ" target="_30u5bdXWEem1l5O0R0OWkQ" source="_30u5JtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u4zNXWEem1l5O0R0OWkQ" target="_30u5ZdXWEem1l5O0R0OWkQ" source="_30u5TNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4zdXWEem1l5O0R0OWkQ" target="_30u5lNXWEem1l5O0R0OWkQ" source="_30u5J9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u4ztXWEem1l5O0R0OWkQ" target="_30u5ftXWEem1l5O0R0OWkQ" source="_30u5ZdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u4z9XWEem1l5O0R0OWkQ" target="_30u5wdXWEem1l5O0R0OWkQ" source="_30u5KNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u40NXWEem1l5O0R0OWkQ" target="_30u5q9XWEem1l5O0R0OWkQ" source="_30u5ftXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u40dXWEem1l5O0R0OWkQ" target="_30u54NXWEem1l5O0R0OWkQ" source="_30u5KdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u40tXWEem1l5O0R0OWkQ" target="_30u52NXWEem1l5O0R0OWkQ" source="_30u5q9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u409XWEem1l5O0R0OWkQ" target="_30u6B9XWEem1l5O0R0OWkQ" source="_30u5KtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u41NXWEem1l5O0R0OWkQ" target="_30u5_9XWEem1l5O0R0OWkQ" source="_30u52NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u41dXWEem1l5O0R0OWkQ" target="_30u6LdXWEem1l5O0R0OWkQ" source="_30u5K9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u41tXWEem1l5O0R0OWkQ" target="_30u6JtXWEem1l5O0R0OWkQ" source="_30u5_9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u419XWEem1l5O0R0OWkQ" target="_30u6PdXWEem1l5O0R0OWkQ" source="_30u5LNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u42NXWEem1l5O0R0OWkQ" target="_30u6NtXWEem1l5O0R0OWkQ" source="_30u6JtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u42dXWEem1l5O0R0OWkQ" target="_30u6TdXWEem1l5O0R0OWkQ" source="_30u5LdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u42tXWEem1l5O0R0OWkQ" target="_30u6RtXWEem1l5O0R0OWkQ" source="_30u6NtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u429XWEem1l5O0R0OWkQ" target="_30u6XdXWEem1l5O0R0OWkQ" source="_30u5LtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u43NXWEem1l5O0R0OWkQ" target="_30u6VtXWEem1l5O0R0OWkQ" source="_30u6RtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u43dXWEem1l5O0R0OWkQ" target="_30vfndXWEem1l5O0R0OWkQ" source="_30u5L9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u43tXWEem1l5O0R0OWkQ" target="_30vfgNXWEem1l5O0R0OWkQ" source="_30u6VtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u439XWEem1l5O0R0OWkQ" target="_30vfwNXWEem1l5O0R0OWkQ" source="_30u5MNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u44NXWEem1l5O0R0OWkQ" target="_30vfo9XWEem1l5O0R0OWkQ" source="_30vfgNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u44dXWEem1l5O0R0OWkQ" target="_30vf5dXWEem1l5O0R0OWkQ" source="_30u5MdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u44tXWEem1l5O0R0OWkQ" target="_30vfxtXWEem1l5O0R0OWkQ" source="_30vfo9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30u449XWEem1l5O0R0OWkQ" target="_30vgF9XWEem1l5O0R0OWkQ" source="_30u5MtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u45NXWEem1l5O0R0OWkQ" target="_30vf-NXWEem1l5O0R0OWkQ" source="_30vfxtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30u45dXWEem1l5O0R0OWkQ" target="_30vgJdXWEem1l5O0R0OWkQ" source="_30vf-NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u45tXWEem1l5O0R0OWkQ" name="ExpressionStatement@74bd174e" outgoing="_30u4yNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u459XWEem1l5O0R0OWkQ" target="_30u5JNXWEem1l5O0R0OWkQ" source="_30u499XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u46NXWEem1l5O0R0OWkQ" target="_30u5JdXWEem1l5O0R0OWkQ" source="_30u4-tXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u46dXWEem1l5O0R0OWkQ" target="_30u5JtXWEem1l5O0R0OWkQ" source="_30u4_dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u46tXWEem1l5O0R0OWkQ" target="_30u5J9XWEem1l5O0R0OWkQ" source="_30u5ANXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u469XWEem1l5O0R0OWkQ" target="_30u5KNXWEem1l5O0R0OWkQ" source="_30u5A9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u47NXWEem1l5O0R0OWkQ" target="_30u5KdXWEem1l5O0R0OWkQ" source="_30u5BtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u47dXWEem1l5O0R0OWkQ" target="_30u5KtXWEem1l5O0R0OWkQ" source="_30u5CdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u47tXWEem1l5O0R0OWkQ" target="_30u5K9XWEem1l5O0R0OWkQ" source="_30u5DNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u479XWEem1l5O0R0OWkQ" target="_30u5LNXWEem1l5O0R0OWkQ" source="_30u5D9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u48NXWEem1l5O0R0OWkQ" target="_30u5LdXWEem1l5O0R0OWkQ" source="_30u5EtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u48dXWEem1l5O0R0OWkQ" target="_30u5LtXWEem1l5O0R0OWkQ" source="_30u5FdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u48tXWEem1l5O0R0OWkQ" target="_30u5L9XWEem1l5O0R0OWkQ" source="_30u5GNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u489XWEem1l5O0R0OWkQ" target="_30u5MNXWEem1l5O0R0OWkQ" source="_30u5G9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u49NXWEem1l5O0R0OWkQ" target="_30u5MdXWEem1l5O0R0OWkQ" source="_30u5HtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u49dXWEem1l5O0R0OWkQ" target="_30u5MtXWEem1l5O0R0OWkQ" source="_30u5IdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30u49tXWEem1l5O0R0OWkQ" name="Call(test)" behavior="_30wHV9XWEem1l5O0R0OWkQ">
                <result xmi:id="_30u499XWEem1l5O0R0OWkQ" name="Call(test).result(sum)" outgoing="_30u459XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4-NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4-dXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_30u4-tXWEem1l5O0R0OWkQ" name="Call(test).result(remainder)" outgoing="_30u46NXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4-9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4_NXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_30u4_dXWEem1l5O0R0OWkQ" name="Call(test).result(bad)" outgoing="_30u46dXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u4_tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u4_9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_30u5ANXWEem1l5O0R0OWkQ" name="Call(test).result(select)" outgoing="_30u46tXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5AdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5AtXWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <result xmi:id="_30u5A9XWEem1l5O0R0OWkQ" name="Call(test).result(reject)" outgoing="_30u469XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5BNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5BdXWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <result xmi:id="_30u5BtXWEem1l5O0R0OWkQ" name="Call(test).result(collect)" outgoing="_30u47NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5B9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5CNXWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <result xmi:id="_30u5CdXWEem1l5O0R0OWkQ" name="Call(test).result(iterate)" outgoing="_30u47dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5CtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5C9XWEem1l5O0R0OWkQ" value="*"/>
                </result>
                <result xmi:id="_30u5DNXWEem1l5O0R0OWkQ" name="Call(test).result(forAll)" outgoing="_30u47tXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5DdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5DtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_30u5D9XWEem1l5O0R0OWkQ" name="Call(test).result(exists)" outgoing="_30u479XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5ENXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5EdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_30u5EtXWEem1l5O0R0OWkQ" name="Call(test).result(one)" outgoing="_30u48NXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5E9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5FNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_30u5FdXWEem1l5O0R0OWkQ" name="Call(test).result(unique)" outgoing="_30u48dXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5FtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5F9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_30u5GNXWEem1l5O0R0OWkQ" name="Call(test).result(jack)" outgoing="_30u48tXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5GdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5GtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_30u5G9XWEem1l5O0R0OWkQ" name="Call(test).result(joan)" outgoing="_30u489XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5HNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5HdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_30u5HtXWEem1l5O0R0OWkQ" name="Call(test).result(something)" outgoing="_30u49NXWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5H9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5INXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_30u5IdXWEem1l5O0R0OWkQ" name="Call(test).result(obj)" outgoing="_30u49dXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5ItXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5I9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5JNXWEem1l5O0R0OWkQ" name="Fork(sum)@1a432215" incoming="_30u459XWEem1l5O0R0OWkQ" outgoing="_30u4x9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5JdXWEem1l5O0R0OWkQ" name="Fork(remainder)@71cfecac" incoming="_30u46NXWEem1l5O0R0OWkQ" outgoing="_30u4ydXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5JtXWEem1l5O0R0OWkQ" name="Fork(bad)@38340b94" incoming="_30u46dXWEem1l5O0R0OWkQ" outgoing="_30u4y9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5J9XWEem1l5O0R0OWkQ" name="Fork(select)@3b64d50d" incoming="_30u46tXWEem1l5O0R0OWkQ" outgoing="_30u4zdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5KNXWEem1l5O0R0OWkQ" name="Fork(reject)@5e77cdb9" incoming="_30u469XWEem1l5O0R0OWkQ" outgoing="_30u4z9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5KdXWEem1l5O0R0OWkQ" name="Fork(collect)@50d3f057" incoming="_30u47NXWEem1l5O0R0OWkQ" outgoing="_30u40dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5KtXWEem1l5O0R0OWkQ" name="Fork(iterate)@48232972" incoming="_30u47dXWEem1l5O0R0OWkQ" outgoing="_30u409XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5K9XWEem1l5O0R0OWkQ" name="Fork(forAll)@55f251c6" incoming="_30u47tXWEem1l5O0R0OWkQ" outgoing="_30u41dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5LNXWEem1l5O0R0OWkQ" name="Fork(exists)@358844c4" incoming="_30u479XWEem1l5O0R0OWkQ" outgoing="_30u419XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5LdXWEem1l5O0R0OWkQ" name="Fork(one)@7a965b6a" incoming="_30u48NXWEem1l5O0R0OWkQ" outgoing="_30u42dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5LtXWEem1l5O0R0OWkQ" name="Fork(unique)@2baf85f3" incoming="_30u48dXWEem1l5O0R0OWkQ" outgoing="_30u429XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5L9XWEem1l5O0R0OWkQ" name="Fork(jack)@6c149d21" incoming="_30u48tXWEem1l5O0R0OWkQ" outgoing="_30u43dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5MNXWEem1l5O0R0OWkQ" name="Fork(joan)@1bcd4a03" incoming="_30u489XWEem1l5O0R0OWkQ" outgoing="_30u439XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5MdXWEem1l5O0R0OWkQ" name="Fork(something)@53481f1b" incoming="_30u49NXWEem1l5O0R0OWkQ" outgoing="_30u44dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30u5MtXWEem1l5O0R0OWkQ" name="Fork(obj)@49f889c" incoming="_30u49dXWEem1l5O0R0OWkQ" outgoing="_30u449XWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5M9XWEem1l5O0R0OWkQ" name="ExpressionStatement@cfae729" incoming="_30u4yNXWEem1l5O0R0OWkQ" outgoing="_30u4ytXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5NNXWEem1l5O0R0OWkQ" target="_30u5ONXWEem1l5O0R0OWkQ" source="_30u5Q9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5NdXWEem1l5O0R0OWkQ" target="_30u5PtXWEem1l5O0R0OWkQ" source="_30u5SNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30u5NtXWEem1l5O0R0OWkQ" target="_30u5N9XWEem1l5O0R0OWkQ" source="_30u5QdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30u5N9XWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_30u5NtXWEem1l5O0R0OWkQ" behavior="_30xVR9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30u5ONXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_30u5NNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5OdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5OtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u5O9XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_30u4x9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5PNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5PdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u5PtXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_30u5NdXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5P9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5QNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5QdXWEem1l5O0R0OWkQ" name="Tuple@2ab4830b" outgoing="_30u5NtXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u5QtXWEem1l5O0R0OWkQ" name="Value(&quot;sum&quot;)">
                  <result xmi:id="_30u5Q9XWEem1l5O0R0OWkQ" name="Value(&quot;sum&quot;).result" outgoing="_30u5NNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5RNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5RdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30u5RtXWEem1l5O0R0OWkQ" value="sum">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u5R9XWEem1l5O0R0OWkQ" name="Value(6)">
                  <result xmi:id="_30u5SNXWEem1l5O0R0OWkQ" name="Value(6).result" outgoing="_30u5NdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5SdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5StXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_30u5S9XWEem1l5O0R0OWkQ" value="6">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5TNXWEem1l5O0R0OWkQ" name="ExpressionStatement@74c40925" incoming="_30u4ytXWEem1l5O0R0OWkQ" outgoing="_30u4zNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5TdXWEem1l5O0R0OWkQ" target="_30u5UdXWEem1l5O0R0OWkQ" source="_30u5XNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5TtXWEem1l5O0R0OWkQ" target="_30u5V9XWEem1l5O0R0OWkQ" source="_30u5YdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30u5T9XWEem1l5O0R0OWkQ" target="_30u5UNXWEem1l5O0R0OWkQ" source="_30u5WtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30u5UNXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_30u5T9XWEem1l5O0R0OWkQ" behavior="_30xVR9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30u5UdXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_30u5TdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5UtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5U9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u5VNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_30u4ydXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5VdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5VtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u5V9XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_30u5TtXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5WNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5WdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5WtXWEem1l5O0R0OWkQ" name="Tuple@7a8bd6d1" outgoing="_30u5T9XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u5W9XWEem1l5O0R0OWkQ" name="Value(&quot;remainder&quot;)">
                  <result xmi:id="_30u5XNXWEem1l5O0R0OWkQ" name="Value(&quot;remainder&quot;).result" outgoing="_30u5TdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5XdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5XtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30u5X9XWEem1l5O0R0OWkQ" value="remainder">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u5YNXWEem1l5O0R0OWkQ" name="Value(1)">
                  <result xmi:id="_30u5YdXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30u5TtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5YtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5Y9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_30u5ZNXWEem1l5O0R0OWkQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5ZdXWEem1l5O0R0OWkQ" name="ExpressionStatement@66a2db80" incoming="_30u4zNXWEem1l5O0R0OWkQ" outgoing="_30u4ztXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5ZtXWEem1l5O0R0OWkQ" target="_30u5atXWEem1l5O0R0OWkQ" source="_30u5ddXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5Z9XWEem1l5O0R0OWkQ" target="_30u5cNXWEem1l5O0R0OWkQ" source="_30u5etXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30u5aNXWEem1l5O0R0OWkQ" target="_30u5adXWEem1l5O0R0OWkQ" source="_30u5c9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30u5adXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_30u5aNXWEem1l5O0R0OWkQ" behavior="_30xVR9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30u5atXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_30u5ZtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5a9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5bNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u5bdXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_30u4y9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5btXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5b9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u5cNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_30u5Z9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5cdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5ctXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5c9XWEem1l5O0R0OWkQ" name="Tuple@627a32b9" outgoing="_30u5aNXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u5dNXWEem1l5O0R0OWkQ" name="Value(&quot;bad&quot;)">
                  <result xmi:id="_30u5ddXWEem1l5O0R0OWkQ" name="Value(&quot;bad&quot;).result" outgoing="_30u5ZtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5dtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5d9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30u5eNXWEem1l5O0R0OWkQ" value="bad">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u5edXWEem1l5O0R0OWkQ" name="Value(2)">
                  <result xmi:id="_30u5etXWEem1l5O0R0OWkQ" name="Value(2).result" outgoing="_30u5Z9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5e9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5fNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_30u5fdXWEem1l5O0R0OWkQ" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5ftXWEem1l5O0R0OWkQ" name="ExpressionStatement@5d2a28cb" incoming="_30u4ztXWEem1l5O0R0OWkQ" outgoing="_30u40NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5f9XWEem1l5O0R0OWkQ" target="_30u5hNXWEem1l5O0R0OWkQ" source="_30u5kNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5gNXWEem1l5O0R0OWkQ" target="_30u5h9XWEem1l5O0R0OWkQ" source="_30u5oNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5gdXWEem1l5O0R0OWkQ" target="_30u5itXWEem1l5O0R0OWkQ" source="_30u5o9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30u5gtXWEem1l5O0R0OWkQ" target="_30u5g9XWEem1l5O0R0OWkQ" source="_30u5jdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30u5g9XWEem1l5O0R0OWkQ" name="Call(AssertList)" incoming="_30u5gtXWEem1l5O0R0OWkQ" behavior="_30xXZ9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30u5hNXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(label)" incoming="_30u5f9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5hdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5htXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u5h9XWEem1l5O0R0OWkQ" name="Call(AssertList).argument(list)" incoming="_30u5gNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5iNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5idXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_30u5itXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(expected)" incoming="_30u5gdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5i9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5jNXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5jdXWEem1l5O0R0OWkQ" name="Tuple@4ff91449" outgoing="_30u5gtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5jtXWEem1l5O0R0OWkQ" target="_30u5n9XWEem1l5O0R0OWkQ" source="_30u5lNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u5j9XWEem1l5O0R0OWkQ" name="Value(&quot;select.name&quot;)">
                  <result xmi:id="_30u5kNXWEem1l5O0R0OWkQ" name="Value(&quot;select.name&quot;).result" outgoing="_30u5f9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5kdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5ktXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30u5k9XWEem1l5O0R0OWkQ" value="select.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30u5lNXWEem1l5O0R0OWkQ" name="Fork(Fork(select)@3b64d50d)" incoming="_30u4zdXWEem1l5O0R0OWkQ" outgoing="_30u5jtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_30u5ldXWEem1l5O0R0OWkQ" name="Collect(Read(name))" mode="parallel" outputElement="_30u5oNXWEem1l5O0R0OWkQ" inputElement="_30u5n9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5ltXWEem1l5O0R0OWkQ" target="_30u5mdXWEem1l5O0R0OWkQ" source="_30u5n9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5l9XWEem1l5O0R0OWkQ" target="_30u5oNXWEem1l5O0R0OWkQ" source="_30u5nNXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30u5mNXWEem1l5O0R0OWkQ" name="Read(name)" structuralFeature="_30vgzdXWEem1l5O0R0OWkQ">
                    <object xmi:id="_30u5mdXWEem1l5O0R0OWkQ" name="Read(name).object" incoming="_30u5ltXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5mtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5m9XWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30u5nNXWEem1l5O0R0OWkQ" name="Read(name).result" outgoing="_30u5l9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5ndXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5ntXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30u5n9XWEem1l5O0R0OWkQ" name="Collect(Read(name)).inputElement" incoming="_30u5jtXWEem1l5O0R0OWkQ" outgoing="_30u5ltXWEem1l5O0R0OWkQ" regionAsInput="_30u5ldXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30u5oNXWEem1l5O0R0OWkQ" name="Collect(Read(name)).outputElement" incoming="_30u5l9XWEem1l5O0R0OWkQ" outgoing="_30u5gNXWEem1l5O0R0OWkQ" regionAsOutput="_30u5ldXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5odXWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@2c13acc">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5otXWEem1l5O0R0OWkQ" target="_30u5o9XWEem1l5O0R0OWkQ" source="_30u5p9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_30u5o9XWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@2c13acc.output" incoming="_30u5otXWEem1l5O0R0OWkQ" outgoing="_30u5gdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5pNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5pdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u5ptXWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;)">
                    <result xmi:id="_30u5p9XWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;).result" outgoing="_30u5otXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5qNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5qdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_30u5qtXWEem1l5O0R0OWkQ" value="Joan">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5q9XWEem1l5O0R0OWkQ" name="ExpressionStatement@4fe4d2d0" incoming="_30u40NXWEem1l5O0R0OWkQ" outgoing="_30u40tXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5rNXWEem1l5O0R0OWkQ" target="_30u5sdXWEem1l5O0R0OWkQ" source="_30u5vdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5rdXWEem1l5O0R0OWkQ" target="_30u5tNXWEem1l5O0R0OWkQ" source="_30u5zdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5rtXWEem1l5O0R0OWkQ" target="_30u5t9XWEem1l5O0R0OWkQ" source="_30u50NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30u5r9XWEem1l5O0R0OWkQ" target="_30u5sNXWEem1l5O0R0OWkQ" source="_30u5utXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30u5sNXWEem1l5O0R0OWkQ" name="Call(AssertList)" incoming="_30u5r9XWEem1l5O0R0OWkQ" behavior="_30xXZ9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30u5sdXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(label)" incoming="_30u5rNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5stXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5s9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u5tNXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(list)" incoming="_30u5rdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5tdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5ttXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_30u5t9XWEem1l5O0R0OWkQ" name="Call(AssertList).argument(expected)" incoming="_30u5rtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5uNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5udXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5utXWEem1l5O0R0OWkQ" name="Tuple@2b0a722d" outgoing="_30u5r9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5u9XWEem1l5O0R0OWkQ" target="_30u5zNXWEem1l5O0R0OWkQ" source="_30u5wdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u5vNXWEem1l5O0R0OWkQ" name="Value(&quot;reject.name&quot;)">
                  <result xmi:id="_30u5vdXWEem1l5O0R0OWkQ" name="Value(&quot;reject.name&quot;).result" outgoing="_30u5rNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5vtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5v9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30u5wNXWEem1l5O0R0OWkQ" value="reject.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30u5wdXWEem1l5O0R0OWkQ" name="Fork(Fork(reject)@5e77cdb9)" incoming="_30u4z9XWEem1l5O0R0OWkQ" outgoing="_30u5u9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_30u5wtXWEem1l5O0R0OWkQ" name="Collect(Read(name))" mode="parallel" outputElement="_30u5zdXWEem1l5O0R0OWkQ" inputElement="_30u5zNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5w9XWEem1l5O0R0OWkQ" target="_30u5xtXWEem1l5O0R0OWkQ" source="_30u5zNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5xNXWEem1l5O0R0OWkQ" target="_30u5zdXWEem1l5O0R0OWkQ" source="_30u5ydXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30u5xdXWEem1l5O0R0OWkQ" name="Read(name)" structuralFeature="_30vgzdXWEem1l5O0R0OWkQ">
                    <object xmi:id="_30u5xtXWEem1l5O0R0OWkQ" name="Read(name).object" incoming="_30u5w9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5x9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5yNXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30u5ydXWEem1l5O0R0OWkQ" name="Read(name).result" outgoing="_30u5xNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5ytXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5y9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30u5zNXWEem1l5O0R0OWkQ" name="Collect(Read(name)).inputElement" incoming="_30u5u9XWEem1l5O0R0OWkQ" outgoing="_30u5w9XWEem1l5O0R0OWkQ" regionAsInput="_30u5wtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30u5zdXWEem1l5O0R0OWkQ" name="Collect(Read(name)).outputElement" incoming="_30u5xNXWEem1l5O0R0OWkQ" outgoing="_30u5rdXWEem1l5O0R0OWkQ" regionAsOutput="_30u5wtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5ztXWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@6bd0cc89">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30u5z9XWEem1l5O0R0OWkQ" target="_30u50NXWEem1l5O0R0OWkQ" source="_30u51NXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_30u50NXWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@6bd0cc89.output" incoming="_30u5z9XWEem1l5O0R0OWkQ" outgoing="_30u5rtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u50dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u50tXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u509XWEem1l5O0R0OWkQ" name="Value(&quot;Jack&quot;)">
                    <result xmi:id="_30u51NXWEem1l5O0R0OWkQ" name="Value(&quot;Jack&quot;).result" outgoing="_30u5z9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u51dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u51tXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_30u519XWEem1l5O0R0OWkQ" value="Jack">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u52NXWEem1l5O0R0OWkQ" name="ExpressionStatement@498017ec" incoming="_30u40tXWEem1l5O0R0OWkQ" outgoing="_30u41NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u52dXWEem1l5O0R0OWkQ" target="_30u53dXWEem1l5O0R0OWkQ" source="_30u56NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u52tXWEem1l5O0R0OWkQ" target="_30u549XWEem1l5O0R0OWkQ" source="_30u58NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30u529XWEem1l5O0R0OWkQ" target="_30u53NXWEem1l5O0R0OWkQ" source="_30u55tXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30u53NXWEem1l5O0R0OWkQ" name="Call(AssertList)" incoming="_30u529XWEem1l5O0R0OWkQ" behavior="_30xXZ9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30u53dXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(label)" incoming="_30u52dXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u53tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u539XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u54NXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(list)" incoming="_30u40dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u54dXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u54tXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_30u549XWEem1l5O0R0OWkQ" name="Call(AssertList).argument(expected)" incoming="_30u52tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u55NXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u55dXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u55tXWEem1l5O0R0OWkQ" name="Tuple@7e0246e1" outgoing="_30u529XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u559XWEem1l5O0R0OWkQ" name="Value(&quot;collect.name&quot;)">
                  <result xmi:id="_30u56NXWEem1l5O0R0OWkQ" name="Value(&quot;collect.name&quot;).result" outgoing="_30u52dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u56dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u56tXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30u569XWEem1l5O0R0OWkQ" value="collect.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u57NXWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@29cf53c3">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_30u57dXWEem1l5O0R0OWkQ" target="_30u5-dXWEem1l5O0R0OWkQ" source="_30u589XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30u57tXWEem1l5O0R0OWkQ" target="_30u58NXWEem1l5O0R0OWkQ" source="_30u59dXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30u579XWEem1l5O0R0OWkQ" target="_30u58NXWEem1l5O0R0OWkQ" source="_30u5-9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_30u58NXWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@29cf53c3.output" incoming="_30u57tXWEem1l5O0R0OWkQ _30u579XWEem1l5O0R0OWkQ" outgoing="_30u52tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u58dXWEem1l5O0R0OWkQ" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u58tXWEem1l5O0R0OWkQ" value="2"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u589XWEem1l5O0R0OWkQ" name="SequenceExpressionList@617278b9#1" outgoing="_30u57dXWEem1l5O0R0OWkQ">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u59NXWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;)">
                      <result xmi:id="_30u59dXWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;).result" outgoing="_30u57tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u59tXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u599XWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_30u5-NXWEem1l5O0R0OWkQ" value="Joan">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5-dXWEem1l5O0R0OWkQ" name="SequenceExpressionList@617278b9#2" incoming="_30u57dXWEem1l5O0R0OWkQ">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u5-tXWEem1l5O0R0OWkQ" name="Value(&quot;Jack&quot;)">
                      <result xmi:id="_30u5-9XWEem1l5O0R0OWkQ" name="Value(&quot;Jack&quot;).result" outgoing="_30u579XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u5_NXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u5_dXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_30u5_tXWEem1l5O0R0OWkQ" value="Jack">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u5_9XWEem1l5O0R0OWkQ" name="ExpressionStatement@75dbcedc" incoming="_30u41NXWEem1l5O0R0OWkQ" outgoing="_30u41tXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u6ANXWEem1l5O0R0OWkQ" target="_30u6BNXWEem1l5O0R0OWkQ" source="_30u6D9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u6AdXWEem1l5O0R0OWkQ" target="_30u6CtXWEem1l5O0R0OWkQ" source="_30u6F9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30u6AtXWEem1l5O0R0OWkQ" target="_30u6A9XWEem1l5O0R0OWkQ" source="_30u6DdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30u6A9XWEem1l5O0R0OWkQ" name="Call(AssertList)" incoming="_30u6AtXWEem1l5O0R0OWkQ" behavior="_30xXZ9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30u6BNXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(label)" incoming="_30u6ANXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6BdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6BtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u6B9XWEem1l5O0R0OWkQ" name="Call(AssertList).argument(list)" incoming="_30u409XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6CNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6CdXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_30u6CtXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(expected)" incoming="_30u6AdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6C9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6DNXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u6DdXWEem1l5O0R0OWkQ" name="Tuple@51251c4" outgoing="_30u6AtXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u6DtXWEem1l5O0R0OWkQ" name="Value(&quot;iterate.name&quot;)">
                  <result xmi:id="_30u6D9XWEem1l5O0R0OWkQ" name="Value(&quot;iterate.name&quot;).result" outgoing="_30u6ANXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6ENXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6EdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30u6EtXWEem1l5O0R0OWkQ" value="iterate.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u6E9XWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@41eded1a">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_30u6FNXWEem1l5O0R0OWkQ" target="_30u6INXWEem1l5O0R0OWkQ" source="_30u6GtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30u6FdXWEem1l5O0R0OWkQ" target="_30u6F9XWEem1l5O0R0OWkQ" source="_30u6HNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30u6FtXWEem1l5O0R0OWkQ" target="_30u6F9XWEem1l5O0R0OWkQ" source="_30u6ItXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_30u6F9XWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@41eded1a.output" incoming="_30u6FdXWEem1l5O0R0OWkQ _30u6FtXWEem1l5O0R0OWkQ" outgoing="_30u6AdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6GNXWEem1l5O0R0OWkQ" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6GdXWEem1l5O0R0OWkQ" value="2"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u6GtXWEem1l5O0R0OWkQ" name="SequenceExpressionList@613daed6#1" outgoing="_30u6FNXWEem1l5O0R0OWkQ">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u6G9XWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;)">
                      <result xmi:id="_30u6HNXWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;).result" outgoing="_30u6FdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6HdXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6HtXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_30u6H9XWEem1l5O0R0OWkQ" value="Joan">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u6INXWEem1l5O0R0OWkQ" name="SequenceExpressionList@613daed6#2" incoming="_30u6FNXWEem1l5O0R0OWkQ">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u6IdXWEem1l5O0R0OWkQ" name="Value(&quot;Jack&quot;)">
                      <result xmi:id="_30u6ItXWEem1l5O0R0OWkQ" name="Value(&quot;Jack&quot;).result" outgoing="_30u6FtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6I9XWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6JNXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_30u6JdXWEem1l5O0R0OWkQ" value="Jack">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u6JtXWEem1l5O0R0OWkQ" name="ExpressionStatement@2e1a106a" incoming="_30u41tXWEem1l5O0R0OWkQ" outgoing="_30u42NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u6J9XWEem1l5O0R0OWkQ" target="_30u6KtXWEem1l5O0R0OWkQ" source="_30u6MtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30u6KNXWEem1l5O0R0OWkQ" target="_30u6KdXWEem1l5O0R0OWkQ" source="_30u6MNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30u6KdXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_30u6KNXWEem1l5O0R0OWkQ" behavior="_30x8WdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_30u6KtXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_30u6J9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6K9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6LNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u6LdXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_30u41dXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6LtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6L9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u6MNXWEem1l5O0R0OWkQ" name="Tuple@4292fca8" outgoing="_30u6KNXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u6MdXWEem1l5O0R0OWkQ" name="Value(&quot;forAll&quot;)">
                  <result xmi:id="_30u6MtXWEem1l5O0R0OWkQ" name="Value(&quot;forAll&quot;).result" outgoing="_30u6J9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6M9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6NNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30u6NdXWEem1l5O0R0OWkQ" value="forAll">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u6NtXWEem1l5O0R0OWkQ" name="ExpressionStatement@728c6590" incoming="_30u42NXWEem1l5O0R0OWkQ" outgoing="_30u42tXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u6N9XWEem1l5O0R0OWkQ" target="_30u6OtXWEem1l5O0R0OWkQ" source="_30u6QtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30u6ONXWEem1l5O0R0OWkQ" target="_30u6OdXWEem1l5O0R0OWkQ" source="_30u6QNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30u6OdXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_30u6ONXWEem1l5O0R0OWkQ" behavior="_30x8WdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_30u6OtXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_30u6N9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6O9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6PNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u6PdXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_30u419XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6PtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6P9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u6QNXWEem1l5O0R0OWkQ" name="Tuple@6abcc5ad" outgoing="_30u6ONXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u6QdXWEem1l5O0R0OWkQ" name="Value(&quot;exists&quot;)">
                  <result xmi:id="_30u6QtXWEem1l5O0R0OWkQ" name="Value(&quot;exists&quot;).result" outgoing="_30u6N9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6Q9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6RNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30u6RdXWEem1l5O0R0OWkQ" value="exists">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u6RtXWEem1l5O0R0OWkQ" name="ExpressionStatement@4638d453" incoming="_30u42tXWEem1l5O0R0OWkQ" outgoing="_30u43NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u6R9XWEem1l5O0R0OWkQ" target="_30u6StXWEem1l5O0R0OWkQ" source="_30u6UtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30u6SNXWEem1l5O0R0OWkQ" target="_30u6SdXWEem1l5O0R0OWkQ" source="_30u6UNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30u6SdXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_30u6SNXWEem1l5O0R0OWkQ" behavior="_30x8WdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_30u6StXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_30u6R9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6S9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6TNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u6TdXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_30u42dXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6TtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6T9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u6UNXWEem1l5O0R0OWkQ" name="Tuple@2aa5c48b" outgoing="_30u6SNXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u6UdXWEem1l5O0R0OWkQ" name="Value(&quot;one&quot;)">
                  <result xmi:id="_30u6UtXWEem1l5O0R0OWkQ" name="Value(&quot;one&quot;).result" outgoing="_30u6R9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6U9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6VNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30u6VdXWEem1l5O0R0OWkQ" value="one">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u6VtXWEem1l5O0R0OWkQ" name="ExpressionStatement@2209fd53" incoming="_30u43NXWEem1l5O0R0OWkQ" outgoing="_30u43tXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30u6V9XWEem1l5O0R0OWkQ" target="_30u6WtXWEem1l5O0R0OWkQ" source="_30u6YtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30u6WNXWEem1l5O0R0OWkQ" target="_30u6WdXWEem1l5O0R0OWkQ" source="_30u6YNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30u6WdXWEem1l5O0R0OWkQ" name="Call(AssertFalse)" incoming="_30u6WNXWEem1l5O0R0OWkQ" behavior="_30x8-9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30u6WtXWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(label)" incoming="_30u6V9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6W9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6XNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30u6XdXWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(condition)" incoming="_30u429XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6XtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6X9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30u6YNXWEem1l5O0R0OWkQ" name="Tuple@732a4a06" outgoing="_30u6WNXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30u6YdXWEem1l5O0R0OWkQ" name="Value(&quot;unique&quot;)">
                  <result xmi:id="_30u6YtXWEem1l5O0R0OWkQ" name="Value(&quot;unique&quot;).result" outgoing="_30u6V9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30u6Y9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30u6ZNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30u6ZdXWEem1l5O0R0OWkQ" value="unique">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vfgNXWEem1l5O0R0OWkQ" name="ExpressionStatement@779700d8" incoming="_30u43tXWEem1l5O0R0OWkQ" outgoing="_30u44NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vfgdXWEem1l5O0R0OWkQ" target="_30vfhtXWEem1l5O0R0OWkQ" source="_30vfktXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vfgtXWEem1l5O0R0OWkQ" target="_30vfidXWEem1l5O0R0OWkQ" source="_30vfmtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vfg9XWEem1l5O0R0OWkQ" target="_30vfjNXWEem1l5O0R0OWkQ" source="_30vfn9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30vfhNXWEem1l5O0R0OWkQ" target="_30vfhdXWEem1l5O0R0OWkQ" source="_30vfj9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30vfhdXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_30vfhNXWEem1l5O0R0OWkQ" behavior="_30xVR9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30vfhtXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_30vfgdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfh9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vfiNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30vfidXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_30vfgtXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfitXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vfi9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30vfjNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_30vfg9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfjdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vfjtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vfj9XWEem1l5O0R0OWkQ" name="Tuple@9857d7d" outgoing="_30vfhNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vfkNXWEem1l5O0R0OWkQ" target="_30vfl9XWEem1l5O0R0OWkQ" source="_30vfndXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vfkdXWEem1l5O0R0OWkQ" name="Value(&quot;jack.name&quot;)">
                  <result xmi:id="_30vfktXWEem1l5O0R0OWkQ" name="Value(&quot;jack.name&quot;).result" outgoing="_30vfgdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfk9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vflNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30vfldXWEem1l5O0R0OWkQ" value="jack.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30vfltXWEem1l5O0R0OWkQ" name="Read(name)" structuralFeature="_30vgzdXWEem1l5O0R0OWkQ">
                  <object xmi:id="_30vfl9XWEem1l5O0R0OWkQ" name="Read(name).object" incoming="_30vfkNXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfmNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vfmdXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30vfmtXWEem1l5O0R0OWkQ" name="Read(name).result" outgoing="_30vfgtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfm9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vfnNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30vfndXWEem1l5O0R0OWkQ" name="Fork(Fork(jack)@6c149d21)" incoming="_30u43dXWEem1l5O0R0OWkQ" outgoing="_30vfkNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vfntXWEem1l5O0R0OWkQ" name="Value(&quot;Jack&quot;)">
                  <result xmi:id="_30vfn9XWEem1l5O0R0OWkQ" name="Value(&quot;Jack&quot;).result" outgoing="_30vfg9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfoNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vfodXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30vfotXWEem1l5O0R0OWkQ" value="Jack">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vfo9XWEem1l5O0R0OWkQ" name="ExpressionStatement@74cf6ec3" incoming="_30u44NXWEem1l5O0R0OWkQ" outgoing="_30u44tXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vfpNXWEem1l5O0R0OWkQ" target="_30vfqdXWEem1l5O0R0OWkQ" source="_30vftdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vfpdXWEem1l5O0R0OWkQ" target="_30vfrNXWEem1l5O0R0OWkQ" source="_30vfvdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vfptXWEem1l5O0R0OWkQ" target="_30vfr9XWEem1l5O0R0OWkQ" source="_30vfwtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30vfp9XWEem1l5O0R0OWkQ" target="_30vfqNXWEem1l5O0R0OWkQ" source="_30vfstXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30vfqNXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_30vfp9XWEem1l5O0R0OWkQ" behavior="_30xVR9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30vfqdXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_30vfpNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfqtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vfq9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30vfrNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_30vfpdXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfrdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vfrtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30vfr9XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_30vfptXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfsNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vfsdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vfstXWEem1l5O0R0OWkQ" name="Tuple@4881a93e" outgoing="_30vfp9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vfs9XWEem1l5O0R0OWkQ" target="_30vfutXWEem1l5O0R0OWkQ" source="_30vfwNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vftNXWEem1l5O0R0OWkQ" name="Value(&quot;joan.name&quot;)">
                  <result xmi:id="_30vftdXWEem1l5O0R0OWkQ" name="Value(&quot;joan.name&quot;).result" outgoing="_30vfpNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfttXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vft9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30vfuNXWEem1l5O0R0OWkQ" value="joan.name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30vfudXWEem1l5O0R0OWkQ" name="Read(name)" structuralFeature="_30vgzdXWEem1l5O0R0OWkQ">
                  <object xmi:id="_30vfutXWEem1l5O0R0OWkQ" name="Read(name).object" incoming="_30vfs9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfu9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vfvNXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30vfvdXWEem1l5O0R0OWkQ" name="Read(name).result" outgoing="_30vfpdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfvtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vfv9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30vfwNXWEem1l5O0R0OWkQ" name="Fork(Fork(joan)@1bcd4a03)" incoming="_30u439XWEem1l5O0R0OWkQ" outgoing="_30vfs9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vfwdXWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;)">
                  <result xmi:id="_30vfwtXWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;).result" outgoing="_30vfptXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfw9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vfxNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30vfxdXWEem1l5O0R0OWkQ" value="Joan">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vfxtXWEem1l5O0R0OWkQ" name="ExpressionStatement@41277a50" incoming="_30u44tXWEem1l5O0R0OWkQ" outgoing="_30u45NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vfx9XWEem1l5O0R0OWkQ" target="_30vfzNXWEem1l5O0R0OWkQ" source="_30vf2tXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vfyNXWEem1l5O0R0OWkQ" target="_30vfz9XWEem1l5O0R0OWkQ" source="_30vf8tXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vfydXWEem1l5O0R0OWkQ" target="_30vf0tXWEem1l5O0R0OWkQ" source="_30vf9NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30vfytXWEem1l5O0R0OWkQ" target="_30vfy9XWEem1l5O0R0OWkQ" source="_30vf1dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30vfy9XWEem1l5O0R0OWkQ" name="Call(AssertList)" incoming="_30vfytXWEem1l5O0R0OWkQ" behavior="_30xXZ9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30vfzNXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(label)" incoming="_30vfx9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vfzdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vfztXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30vfz9XWEem1l5O0R0OWkQ" name="Call(AssertList).argument(list)" incoming="_30vfyNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vf0NXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vf0dXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_30vf0tXWEem1l5O0R0OWkQ" name="Call(AssertList).argument(expected)" incoming="_30vfydXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vf09XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vf1NXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vf1dXWEem1l5O0R0OWkQ" name="Tuple@317bc62b" outgoing="_30vfytXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vf1tXWEem1l5O0R0OWkQ" target="_30vf39XWEem1l5O0R0OWkQ" source="_30vf5dXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vf19XWEem1l5O0R0OWkQ" target="_30vf5tXWEem1l5O0R0OWkQ" source="_30vf4tXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vf2NXWEem1l5O0R0OWkQ" target="_30vf8dXWEem1l5O0R0OWkQ" source="_30vf5tXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vf2dXWEem1l5O0R0OWkQ" name="Value(&quot;something.attribute.type&quot;)">
                  <result xmi:id="_30vf2tXWEem1l5O0R0OWkQ" name="Value(&quot;something.attribute.type&quot;).result" outgoing="_30vfx9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vf29XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vf3NXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30vf3dXWEem1l5O0R0OWkQ" value="something.attribute.type">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30vf3tXWEem1l5O0R0OWkQ" name="Read(attribute)" structuralFeature="_30via9XWEem1l5O0R0OWkQ">
                  <object xmi:id="_30vf39XWEem1l5O0R0OWkQ" name="Read(attribute).object" incoming="_30vf1tXWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vf4NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vf4dXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30vf4tXWEem1l5O0R0OWkQ" name="Read(attribute).result" outgoing="_30vf19XWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vf49XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vf5NXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30vf5dXWEem1l5O0R0OWkQ" name="Fork(Fork(something)@53481f1b)" incoming="_30u44dXWEem1l5O0R0OWkQ" outgoing="_30vf1tXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_30vf5tXWEem1l5O0R0OWkQ" name="Fork(Read(attribute).result)" incoming="_30vf19XWEem1l5O0R0OWkQ" outgoing="_30vf2NXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_30vf59XWEem1l5O0R0OWkQ" name="Collect(Read(type))" mode="parallel" outputElement="_30vf8tXWEem1l5O0R0OWkQ" inputElement="_30vf8dXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30vf6NXWEem1l5O0R0OWkQ" target="_30vf69XWEem1l5O0R0OWkQ" source="_30vf8dXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30vf6dXWEem1l5O0R0OWkQ" target="_30vf8tXWEem1l5O0R0OWkQ" source="_30vf7tXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30vf6tXWEem1l5O0R0OWkQ" name="Read(type)" structuralFeature="_30vhxdXWEem1l5O0R0OWkQ">
                    <object xmi:id="_30vf69XWEem1l5O0R0OWkQ" name="Read(type).object" incoming="_30vf6NXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vf7NXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vf7dXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30vf7tXWEem1l5O0R0OWkQ" name="Read(type).result" outgoing="_30vf6dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vf79XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vf8NXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30vf8dXWEem1l5O0R0OWkQ" name="Collect(Read(type)).inputElement" incoming="_30vf2NXWEem1l5O0R0OWkQ" outgoing="_30vf6NXWEem1l5O0R0OWkQ" regionAsInput="_30vf59XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30vf8tXWEem1l5O0R0OWkQ" name="Collect(Read(type)).outputElement" incoming="_30vf6dXWEem1l5O0R0OWkQ" outgoing="_30vfyNXWEem1l5O0R0OWkQ" regionAsOutput="_30vf59XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vf89XWEem1l5O0R0OWkQ" name="Value(1)">
                  <result xmi:id="_30vf9NXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30vfydXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vf9dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vf9tXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_30vf99XWEem1l5O0R0OWkQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vf-NXWEem1l5O0R0OWkQ" name="ExpressionStatement@2af6dc93" incoming="_30u45NXWEem1l5O0R0OWkQ" outgoing="_30u45dXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vf-dXWEem1l5O0R0OWkQ" target="_30vf_tXWEem1l5O0R0OWkQ" source="_30vgDNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vf-tXWEem1l5O0R0OWkQ" target="_30vgAdXWEem1l5O0R0OWkQ" source="_30vgHNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vf-9XWEem1l5O0R0OWkQ" target="_30vgBNXWEem1l5O0R0OWkQ" source="_30vgIdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30vf_NXWEem1l5O0R0OWkQ" target="_30vf_dXWEem1l5O0R0OWkQ" source="_30vgB9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30vf_dXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_30vf_NXWEem1l5O0R0OWkQ" behavior="_30xVR9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30vf_tXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_30vf-dXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vf_9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgANXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30vgAdXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_30vf-tXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgAtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgA9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30vgBNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_30vf-9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgBdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgBtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vgB9XWEem1l5O0R0OWkQ" name="Tuple@25f6222f" outgoing="_30vf_NXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgCNXWEem1l5O0R0OWkQ" target="_30vgEdXWEem1l5O0R0OWkQ" source="_30vgF9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgCdXWEem1l5O0R0OWkQ" target="_30vgH9XWEem1l5O0R0OWkQ" source="_30vgFNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgCtXWEem1l5O0R0OWkQ" target="_30vgGdXWEem1l5O0R0OWkQ" source="_30vgH9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vgC9XWEem1l5O0R0OWkQ" name="Value(&quot;obj.attr.type&quot;)">
                  <result xmi:id="_30vgDNXWEem1l5O0R0OWkQ" name="Value(&quot;obj.attr.type&quot;).result" outgoing="_30vf-dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgDdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgDtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30vgD9XWEem1l5O0R0OWkQ" value="obj.attr.type">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30vgENXWEem1l5O0R0OWkQ" name="Read(attr)" structuralFeature="_30vjJ9XWEem1l5O0R0OWkQ">
                  <object xmi:id="_30vgEdXWEem1l5O0R0OWkQ" name="Read(attr).object" incoming="_30vgCNXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgEtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgE9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30vgFNXWEem1l5O0R0OWkQ" name="Read(attr).result" outgoing="_30vgCdXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgFdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgFtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30vgF9XWEem1l5O0R0OWkQ" name="Fork(Fork(obj)@49f889c)" incoming="_30u449XWEem1l5O0R0OWkQ" outgoing="_30vgCNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30vgGNXWEem1l5O0R0OWkQ" name="Read(type)" structuralFeature="_30vhxdXWEem1l5O0R0OWkQ">
                  <object xmi:id="_30vgGdXWEem1l5O0R0OWkQ" name="Read(type).object" incoming="_30vgCtXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgGtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgG9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30vgHNXWEem1l5O0R0OWkQ" name="Read(type).result" outgoing="_30vf-tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgHdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgHtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30vgH9XWEem1l5O0R0OWkQ" name="Fork(Read(attr).result)" incoming="_30vgCdXWEem1l5O0R0OWkQ" outgoing="_30vgCtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vgINXWEem1l5O0R0OWkQ" name="Value(1)">
                  <result xmi:id="_30vgIdXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30vf-9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgItXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgI9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_30vgJNXWEem1l5O0R0OWkQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vgJdXWEem1l5O0R0OWkQ" name="ExpressionStatement@68b83877" incoming="_30u45dXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgJtXWEem1l5O0R0OWkQ" target="_30vgKNXWEem1l5O0R0OWkQ" source="_30vgLNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_30vgJ9XWEem1l5O0R0OWkQ" name="Call(done)" operation="_30wwotXWEem1l5O0R0OWkQ">
                <target xmi:id="_30vgKNXWEem1l5O0R0OWkQ" name="Call(done).target" incoming="_30vgJtXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgKdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgKtXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_30vgK9XWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_30vgLNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30vgJtXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgLdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgLtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_30vgL9XWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_30vgMNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30u4utXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgMdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgMtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_30vgM9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30u4utXWEem1l5O0R0OWkQ" outgoing="_30u4tNXWEem1l5O0R0OWkQ _30u4u9XWEem1l5O0R0OWkQ _30u4vtXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vgNNXWEem1l5O0R0OWkQ" name="Super" incoming="_30u4xNXWEem1l5O0R0OWkQ" outgoing="_30u4vdXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vgNdXWEem1l5O0R0OWkQ" name="ExpressionStatement@2d8b8">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vgNtXWEem1l5O0R0OWkQ" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgN9XWEem1l5O0R0OWkQ" target="_30vgONXWEem1l5O0R0OWkQ" source="_30vgP9XWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30vgONXWEem1l5O0R0OWkQ" name="Output(Call(Test$method$1).result())" incoming="_30vgN9XWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgOdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgOtXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_30vgO9XWEem1l5O0R0OWkQ" name="Call(Test$method$1)" behavior="_30wvwdXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_30vgPNXWEem1l5O0R0OWkQ" name="Call(Test$method$1).argument(tester)" incoming="_30u4tdXWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgPdXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgPtXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_30vgP9XWEem1l5O0R0OWkQ" name="Call(Test$method$1).result()" outgoing="_30vgN9XWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgQNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgQdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_30vgQtXWEem1l5O0R0OWkQ" name="Call(Expressions_Sequence_Expansion_Reduction$initialization$1)" incoming="_30u4vdXWEem1l5O0R0OWkQ" outgoing="_30u4vNXWEem1l5O0R0OWkQ" operation="_30vgttXWEem1l5O0R0OWkQ">
            <target xmi:id="_30vgQ9XWEem1l5O0R0OWkQ" name="Call(Expressions_Sequence_Expansion_Reduction$initialization$1).target" incoming="_30u4u9XWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgRNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgRdXWEem1l5O0R0OWkQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30vgRtXWEem1l5O0R0OWkQ" name="Read(Expressions_Sequence_Expansion_Reduction$initializationFlag$1)" structuralFeature="_30u4edXWEem1l5O0R0OWkQ">
            <object xmi:id="_30vgR9XWEem1l5O0R0OWkQ" name="Read(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).object" incoming="_30u4vtXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgSNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgSdXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_30vgStXWEem1l5O0R0OWkQ" name="Read(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).result" outgoing="_30u4v9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgS9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgTNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_30vgTdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_30vgTtXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30u4v9XWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgT9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgUNXWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_30vgUdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30u4wNXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgUtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgU9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vgVNXWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_30vgVdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30u4wdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgVtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgV9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_30vgWNXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_30vgWdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_30vgWtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30u4wNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgW9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgXNXWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_30vgXdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30u4w9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgXtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgX9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_30vgYNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30u4wdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgYdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgYtXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_30vgY9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30u4wtXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_30vgZNXWEem1l5O0R0OWkQ" name="Decision(Test(Expressions_Sequence_Expansion_Reduction$initializationFlag$1))" incoming="_30u4wtXWEem1l5O0R0OWkQ _30u4w9XWEem1l5O0R0OWkQ" outgoing="_30u4xNXWEem1l5O0R0OWkQ" decisionInputFlow="_30u4w9XWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30u4ttXWEem1l5O0R0OWkQ" name="Input(tester)" outgoing="_30u4s9XWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" parameter="_30u4rdXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_30u4t9XWEem1l5O0R0OWkQ" name="Fork(tester)" incoming="_30u4s9XWEem1l5O0R0OWkQ" outgoing="_30u4tdXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30u4uNXWEem1l5O0R0OWkQ" name="Return" incoming="_30u4tNXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" parameter="_30u4sNXWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_30vgZdXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_30vgwtXWEem1l5O0R0OWkQ" node="_30vgZtXWEem1l5O0R0OWkQ" group="_30vgZtXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_30vgZtXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_30vgZ9XWEem1l5O0R0OWkQ" name="Expressions_Sequence_Expansion_Reduction$initialization$1" visibility="private" specification="_30vgttXWEem1l5O0R0OWkQ" node="_30vgaNXWEem1l5O0R0OWkQ" group="_30vgaNXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_30vgaNXWEem1l5O0R0OWkQ" name="Body(Expressions_Sequence_Expansion_Reduction$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgadXWEem1l5O0R0OWkQ" target="_30vgeNXWEem1l5O0R0OWkQ" source="_30vgddXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgatXWEem1l5O0R0OWkQ" target="_30vgfNXWEem1l5O0R0OWkQ" source="_30vgeNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30vga9XWEem1l5O0R0OWkQ" target="_30vgidXWEem1l5O0R0OWkQ" source="_30vgeNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgbNXWEem1l5O0R0OWkQ" target="_30vgmNXWEem1l5O0R0OWkQ" source="_30vgeNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgbdXWEem1l5O0R0OWkQ" target="_30vgn9XWEem1l5O0R0OWkQ" source="_30vgm9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgbtXWEem1l5O0R0OWkQ" target="_30vgq9XWEem1l5O0R0OWkQ" source="_30vgotXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgb9XWEem1l5O0R0OWkQ" target="_30vgsdXWEem1l5O0R0OWkQ" source="_30vgptXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30vgcNXWEem1l5O0R0OWkQ" target="_30vgtdXWEem1l5O0R0OWkQ" source="_30vgtNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgcdXWEem1l5O0R0OWkQ" target="_30vgtdXWEem1l5O0R0OWkQ" source="_30vgrtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30vgctXWEem1l5O0R0OWkQ" target="_30vgedXWEem1l5O0R0OWkQ" source="_30vgtdXWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_30vgc9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_30vgdNXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_30vgddXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30vgadXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgdtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgd9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_30vgeNXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30vgadXWEem1l5O0R0OWkQ" outgoing="_30vgatXWEem1l5O0R0OWkQ _30vga9XWEem1l5O0R0OWkQ _30vgbNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vgedXWEem1l5O0R0OWkQ" name="Initialization" incoming="_30vgctXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vgetXWEem1l5O0R0OWkQ" target="_30vgf9XWEem1l5O0R0OWkQ" source="_30vge9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_30vge9XWEem1l5O0R0OWkQ" name="Call(Test$initialization$1)" outgoing="_30vgetXWEem1l5O0R0OWkQ" operation="_30wwoNXWEem1l5O0R0OWkQ">
              <target xmi:id="_30vgfNXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1).target" incoming="_30vgatXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgfdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgftXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vgf9XWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_30vgetXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vggNXWEem1l5O0R0OWkQ" target="_30vgltXWEem1l5O0R0OWkQ" source="_30vggtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vggdXWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_30vggtXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_30vggNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgg9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vghNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_30vghdXWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_30vghtXWEem1l5O0R0OWkQ" name="Iterate(Write(Expressions_Sequence_Expansion_Reduction$initializationFlag$1))" inputElement="_30vgltXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgh9XWEem1l5O0R0OWkQ" target="_30vgk9XWEem1l5O0R0OWkQ" source="_30vgltXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vgiNXWEem1l5O0R0OWkQ" target="_30vgjdXWEem1l5O0R0OWkQ" source="_30vgidXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_30vgidXWEem1l5O0R0OWkQ" name="Iterate(Write(Expressions_Sequence_Expansion_Reduction$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_30vga9XWEem1l5O0R0OWkQ" outgoing="_30vgiNXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgitXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgi9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30vgjNXWEem1l5O0R0OWkQ" name="Write(Expressions_Sequence_Expansion_Reduction$initializationFlag$1)" structuralFeature="_30u4edXWEem1l5O0R0OWkQ">
                  <object xmi:id="_30vgjdXWEem1l5O0R0OWkQ" name="Write(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).object" incoming="_30vgiNXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgjtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgj9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30vgkNXWEem1l5O0R0OWkQ" name="Write(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).result" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgkdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgktXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_30vgk9XWEem1l5O0R0OWkQ" name="Write(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).value" incoming="_30vgh9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vglNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgldXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30vgltXWEem1l5O0R0OWkQ" name="Iterate(Write(Expressions_Sequence_Expansion_Reduction$initializationFlag$1)).inputElement" incoming="_30vggNXWEem1l5O0R0OWkQ" outgoing="_30vgh9XWEem1l5O0R0OWkQ" regionAsInput="_30vghtXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30vgl9XWEem1l5O0R0OWkQ" name="Read(Expressions_Sequence_Expansion_Reduction$initializationFlag$1)" structuralFeature="_30u4edXWEem1l5O0R0OWkQ">
            <object xmi:id="_30vgmNXWEem1l5O0R0OWkQ" name="Read(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).object" incoming="_30vgbNXWEem1l5O0R0OWkQ" type="_30u4cdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgmdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgmtXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_30vgm9XWEem1l5O0R0OWkQ" name="Read(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).result" outgoing="_30vgbdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgnNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgndXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_30vgntXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_30vgn9XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30vgbdXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgoNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgodXWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_30vgotXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30vgbtXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgo9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgpNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vgpdXWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_30vgptXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30vgb9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgp9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgqNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_30vgqdXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_30vgqtXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_30vgq9XWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30vgbtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgrNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgrdXWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_30vgrtXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30vgcdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgr9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgsNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_30vgsdXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30vgb9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgstXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgs9XWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_30vgtNXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30vgcNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_30vgtdXWEem1l5O0R0OWkQ" name="Decision(Test(Expressions_Sequence_Expansion_Reduction$initializationFlag$1))" incoming="_30vgcNXWEem1l5O0R0OWkQ _30vgcdXWEem1l5O0R0OWkQ" outgoing="_30vgctXWEem1l5O0R0OWkQ" decisionInputFlow="_30vgcdXWEem1l5O0R0OWkQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_30vgttXWEem1l5O0R0OWkQ" name="Expressions_Sequence_Expansion_Reduction$initialization$1" visibility="protected" method="_30vgZ9XWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_30vgt9XWEem1l5O0R0OWkQ" name="Expressions_Sequence_Expansion_Reduction" visibility="public" method="_30u4fNXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_30vguNXWEem1l5O0R0OWkQ" name="" visibility="package" type="_30u4cdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgudXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgutXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_30vgu9XWEem1l5O0R0OWkQ" name="run" visibility="public" method="_30u4rNXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_30vgvNXWEem1l5O0R0OWkQ" name="tester" visibility="package" type="_30xUtdXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgvdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgvtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30vgv9XWEem1l5O0R0OWkQ" name="" visibility="package" type="_30u4cdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgwNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgwdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_30vgwtXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_30vgZdXWEem1l5O0R0OWkQ" redefinedOperation="_30wwodXWEem1l5O0R0OWkQ"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_30vgw9XWEem1l5O0R0OWkQ" name="Employee" visibility="public">
        <ownedAttribute xmi:id="_30vgxNXWEem1l5O0R0OWkQ" name="Employee$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgxdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgxtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_30vgx9XWEem1l5O0R0OWkQ" name="age" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgyNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgydXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_30vgytXWEem1l5O0R0OWkQ" name="isMarried" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgy9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgzNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_30vgzdXWEem1l5O0R0OWkQ" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vgztXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vgz9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_30vg0NXWEem1l5O0R0OWkQ" name="title" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vg0dXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vg0tXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_30vg09XWEem1l5O0R0OWkQ" name="id" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vg1NXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vg1dXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30vg1tXWEem1l5O0R0OWkQ" name="Employee$method$1" visibility="private" specification="_30vhvNXWEem1l5O0R0OWkQ" node="_30vg29XWEem1l5O0R0OWkQ _30vg3NXWEem1l5O0R0OWkQ" group="_30vg3NXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_30vg19XWEem1l5O0R0OWkQ" name="" type="_30vgw9XWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vg2NXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vg2dXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30vg2tXWEem1l5O0R0OWkQ" target="_30vg29XWEem1l5O0R0OWkQ" source="_30vg7dXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_30vg3NXWEem1l5O0R0OWkQ" name="Body(Employee$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vg3dXWEem1l5O0R0OWkQ" target="_30vg7dXWEem1l5O0R0OWkQ" source="_30vg6tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vg3tXWEem1l5O0R0OWkQ" target="_30vg79XWEem1l5O0R0OWkQ" source="_30vg7dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vg39XWEem1l5O0R0OWkQ" target="_30vg6NXWEem1l5O0R0OWkQ" source="_30vg7tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vg4NXWEem1l5O0R0OWkQ" target="_30vg89XWEem1l5O0R0OWkQ" source="_30vg7dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vg4dXWEem1l5O0R0OWkQ" target="_30vg-tXWEem1l5O0R0OWkQ" source="_30vg9tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vg4tXWEem1l5O0R0OWkQ" target="_30vhBtXWEem1l5O0R0OWkQ" source="_30vg_dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vg49XWEem1l5O0R0OWkQ" target="_30vhDNXWEem1l5O0R0OWkQ" source="_30vhAdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vg5NXWEem1l5O0R0OWkQ" target="_30vhENXWEem1l5O0R0OWkQ" source="_30vhD9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vg5dXWEem1l5O0R0OWkQ" target="_30vhENXWEem1l5O0R0OWkQ" source="_30vhCdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vg5tXWEem1l5O0R0OWkQ" target="_30vg7tXWEem1l5O0R0OWkQ" source="_30vhENXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30vg59XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vg6NXWEem1l5O0R0OWkQ" name="Body" incoming="_30vg39XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_30vg6dXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_30vg6tXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30vg3dXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vg69XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vg7NXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30vg7dXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30vg3dXWEem1l5O0R0OWkQ" outgoing="_30vg2tXWEem1l5O0R0OWkQ _30vg3tXWEem1l5O0R0OWkQ _30vg4NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_30vg7tXWEem1l5O0R0OWkQ" name="Call(Employee$initialization$1)" incoming="_30vg5tXWEem1l5O0R0OWkQ" outgoing="_30vg39XWEem1l5O0R0OWkQ" operation="_30vhu9XWEem1l5O0R0OWkQ">
              <target xmi:id="_30vg79XWEem1l5O0R0OWkQ" name="Call(Employee$initialization$1).target" incoming="_30vg3tXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vg8NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vg8dXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30vg8tXWEem1l5O0R0OWkQ" name="Read(Employee$initializationFlag$1)" structuralFeature="_30vgxNXWEem1l5O0R0OWkQ">
              <object xmi:id="_30vg89XWEem1l5O0R0OWkQ" name="Read(Employee$initializationFlag$1).object" incoming="_30vg4NXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vg9NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vg9dXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30vg9tXWEem1l5O0R0OWkQ" name="Read(Employee$initializationFlag$1).result" outgoing="_30vg4dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vg99XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vg-NXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30vg-dXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_30vg-tXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30vg4dXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vg-9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vg_NXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30vg_dXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30vg4tXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vg_tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vg_9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vhANXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_30vhAdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30vg49XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhAtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhA9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30vhBNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_30vhBdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_30vhBtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30vg4tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhB9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhCNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_30vhCdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30vg5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhCtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhC9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_30vhDNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30vg49XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhDdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhDtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_30vhD9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30vg5NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30vhENXWEem1l5O0R0OWkQ" name="Decision(Test(Employee$initializationFlag$1))" incoming="_30vg5NXWEem1l5O0R0OWkQ _30vg5dXWEem1l5O0R0OWkQ" outgoing="_30vg5tXWEem1l5O0R0OWkQ" decisionInputFlow="_30vg5dXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_30vg29XWEem1l5O0R0OWkQ" name="Return" incoming="_30vg2tXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" parameter="_30vg19XWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30vhEdXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_30vhwNXWEem1l5O0R0OWkQ" node="_30vhEtXWEem1l5O0R0OWkQ" group="_30vhEtXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_30vhEtXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30vhE9XWEem1l5O0R0OWkQ" name="Employee$initialization$1" visibility="private" specification="_30vhu9XWEem1l5O0R0OWkQ" node="_30vhFNXWEem1l5O0R0OWkQ" group="_30vhFNXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_30vhFNXWEem1l5O0R0OWkQ" name="Body(Employee$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhFdXWEem1l5O0R0OWkQ" target="_30vhKNXWEem1l5O0R0OWkQ" source="_30vhJdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhFtXWEem1l5O0R0OWkQ" target="_30vhN9XWEem1l5O0R0OWkQ" source="_30vhKNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhF9XWEem1l5O0R0OWkQ" target="_30vhSNXWEem1l5O0R0OWkQ" source="_30vhKNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhGNXWEem1l5O0R0OWkQ" target="_30vhWdXWEem1l5O0R0OWkQ" source="_30vhKNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhGdXWEem1l5O0R0OWkQ" target="_30vhatXWEem1l5O0R0OWkQ" source="_30vhKNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhGtXWEem1l5O0R0OWkQ" target="_30vhe9XWEem1l5O0R0OWkQ" source="_30vhKNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhG9XWEem1l5O0R0OWkQ" target="_30vhjtXWEem1l5O0R0OWkQ" source="_30vhKNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhHNXWEem1l5O0R0OWkQ" target="_30vhndXWEem1l5O0R0OWkQ" source="_30vhKNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhHdXWEem1l5O0R0OWkQ" target="_30vhpNXWEem1l5O0R0OWkQ" source="_30vhoNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhHtXWEem1l5O0R0OWkQ" target="_30vhsNXWEem1l5O0R0OWkQ" source="_30vhp9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhH9XWEem1l5O0R0OWkQ" target="_30vhttXWEem1l5O0R0OWkQ" source="_30vhq9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vhINXWEem1l5O0R0OWkQ" target="_30vhutXWEem1l5O0R0OWkQ" source="_30vhudXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhIdXWEem1l5O0R0OWkQ" target="_30vhutXWEem1l5O0R0OWkQ" source="_30vhs9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vhItXWEem1l5O0R0OWkQ" target="_30vhKdXWEem1l5O0R0OWkQ" source="_30vhutXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30vhI9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_30vhJNXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_30vhJdXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30vhFdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhJtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhJ9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30vhKNXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30vhFdXWEem1l5O0R0OWkQ" outgoing="_30vhFtXWEem1l5O0R0OWkQ _30vhF9XWEem1l5O0R0OWkQ _30vhGNXWEem1l5O0R0OWkQ _30vhGdXWEem1l5O0R0OWkQ _30vhGtXWEem1l5O0R0OWkQ _30vhG9XWEem1l5O0R0OWkQ _30vhHNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vhKdXWEem1l5O0R0OWkQ" name="Initialization" incoming="_30vhItXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_30vhKtXWEem1l5O0R0OWkQ" target="_30vhQNXWEem1l5O0R0OWkQ" source="_30vhL9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30vhK9XWEem1l5O0R0OWkQ" target="_30vhUdXWEem1l5O0R0OWkQ" source="_30vhQNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30vhLNXWEem1l5O0R0OWkQ" target="_30vhYtXWEem1l5O0R0OWkQ" source="_30vhUdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30vhLdXWEem1l5O0R0OWkQ" target="_30vhc9XWEem1l5O0R0OWkQ" source="_30vhYtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30vhLtXWEem1l5O0R0OWkQ" target="_30vhhNXWEem1l5O0R0OWkQ" source="_30vhc9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vhL9XWEem1l5O0R0OWkQ" name="Initialize(age)" outgoing="_30vhKtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhMNXWEem1l5O0R0OWkQ" target="_30vhPdXWEem1l5O0R0OWkQ" source="_30vhMtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vhMdXWEem1l5O0R0OWkQ" name="Value(51)">
                  <result xmi:id="_30vhMtXWEem1l5O0R0OWkQ" name="Value(51).result" outgoing="_30vhMNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhM9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhNNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_30vhNdXWEem1l5O0R0OWkQ" value="51">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30vhNtXWEem1l5O0R0OWkQ" name="Write(age)" structuralFeature="_30vgx9XWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_30vhN9XWEem1l5O0R0OWkQ" name="Write(age).object" incoming="_30vhFtXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhONXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhOdXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30vhOtXWEem1l5O0R0OWkQ" name="Write(age).result" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhO9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhPNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_30vhPdXWEem1l5O0R0OWkQ" name="Write(age).value" incoming="_30vhMNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhPtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhP9XWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vhQNXWEem1l5O0R0OWkQ" name="Initialize(isMarried)" incoming="_30vhKtXWEem1l5O0R0OWkQ" outgoing="_30vhK9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhQdXWEem1l5O0R0OWkQ" target="_30vhTtXWEem1l5O0R0OWkQ" source="_30vhQ9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vhQtXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_30vhQ9XWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_30vhQdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhRNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhRdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_30vhRtXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30vhR9XWEem1l5O0R0OWkQ" name="Write(isMarried)" structuralFeature="_30vgytXWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_30vhSNXWEem1l5O0R0OWkQ" name="Write(isMarried).object" incoming="_30vhF9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhSdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhStXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30vhS9XWEem1l5O0R0OWkQ" name="Write(isMarried).result" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhTNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhTdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_30vhTtXWEem1l5O0R0OWkQ" name="Write(isMarried).value" incoming="_30vhQdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhT9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhUNXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vhUdXWEem1l5O0R0OWkQ" name="Initialize(name)" incoming="_30vhK9XWEem1l5O0R0OWkQ" outgoing="_30vhLNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhUtXWEem1l5O0R0OWkQ" target="_30vhX9XWEem1l5O0R0OWkQ" source="_30vhVNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vhU9XWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;)">
                  <result xmi:id="_30vhVNXWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;).result" outgoing="_30vhUtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhVdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhVtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30vhV9XWEem1l5O0R0OWkQ" value="Joan">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30vhWNXWEem1l5O0R0OWkQ" name="Write(name)" structuralFeature="_30vgzdXWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_30vhWdXWEem1l5O0R0OWkQ" name="Write(name).object" incoming="_30vhGNXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhWtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhW9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30vhXNXWEem1l5O0R0OWkQ" name="Write(name).result" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhXdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhXtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_30vhX9XWEem1l5O0R0OWkQ" name="Write(name).value" incoming="_30vhUtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhYNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhYdXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vhYtXWEem1l5O0R0OWkQ" name="Initialize(title)" incoming="_30vhLNXWEem1l5O0R0OWkQ" outgoing="_30vhLdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhY9XWEem1l5O0R0OWkQ" target="_30vhcNXWEem1l5O0R0OWkQ" source="_30vhZdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vhZNXWEem1l5O0R0OWkQ" name="Value(&quot;President&quot;)">
                  <result xmi:id="_30vhZdXWEem1l5O0R0OWkQ" name="Value(&quot;President&quot;).result" outgoing="_30vhY9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhZtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhZ9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30vhaNXWEem1l5O0R0OWkQ" value="President">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30vhadXWEem1l5O0R0OWkQ" name="Write(title)" structuralFeature="_30vg0NXWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_30vhatXWEem1l5O0R0OWkQ" name="Write(title).object" incoming="_30vhGdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vha9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhbNXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30vhbdXWEem1l5O0R0OWkQ" name="Write(title).result" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhbtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhb9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_30vhcNXWEem1l5O0R0OWkQ" name="Write(title).value" incoming="_30vhY9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhcdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhctXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vhc9XWEem1l5O0R0OWkQ" name="Initialize(id)" incoming="_30vhLdXWEem1l5O0R0OWkQ" outgoing="_30vhLtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhdNXWEem1l5O0R0OWkQ" target="_30vhgdXWEem1l5O0R0OWkQ" source="_30vhdtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vhddXWEem1l5O0R0OWkQ" name="Value(1)">
                  <result xmi:id="_30vhdtXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30vhdNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhd9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vheNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_30vhedXWEem1l5O0R0OWkQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30vhetXWEem1l5O0R0OWkQ" name="Write(id)" structuralFeature="_30vg09XWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_30vhe9XWEem1l5O0R0OWkQ" name="Write(id).object" incoming="_30vhGtXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhfNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhfdXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30vhftXWEem1l5O0R0OWkQ" name="Write(id).result" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhf9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhgNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_30vhgdXWEem1l5O0R0OWkQ" name="Write(id).value" incoming="_30vhdNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhgtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhg9XWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vhhNXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_30vhLtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhhdXWEem1l5O0R0OWkQ" target="_30vhm9XWEem1l5O0R0OWkQ" source="_30vhh9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vhhtXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_30vhh9XWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_30vhhdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhiNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhidXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_30vhitXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_30vhi9XWEem1l5O0R0OWkQ" name="Iterate(Write(Employee$initializationFlag$1))" inputElement="_30vhm9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhjNXWEem1l5O0R0OWkQ" target="_30vhmNXWEem1l5O0R0OWkQ" source="_30vhm9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhjdXWEem1l5O0R0OWkQ" target="_30vhktXWEem1l5O0R0OWkQ" source="_30vhjtXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_30vhjtXWEem1l5O0R0OWkQ" name="Iterate(Write(Employee$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_30vhG9XWEem1l5O0R0OWkQ" outgoing="_30vhjdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhj9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhkNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30vhkdXWEem1l5O0R0OWkQ" name="Write(Employee$initializationFlag$1)" structuralFeature="_30vgxNXWEem1l5O0R0OWkQ">
                    <object xmi:id="_30vhktXWEem1l5O0R0OWkQ" name="Write(Employee$initializationFlag$1).object" incoming="_30vhjdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhk9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhlNXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30vhldXWEem1l5O0R0OWkQ" name="Write(Employee$initializationFlag$1).result" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhltXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhl9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_30vhmNXWEem1l5O0R0OWkQ" name="Write(Employee$initializationFlag$1).value" incoming="_30vhjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhmdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhmtXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30vhm9XWEem1l5O0R0OWkQ" name="Iterate(Write(Employee$initializationFlag$1)).inputElement" incoming="_30vhhdXWEem1l5O0R0OWkQ" outgoing="_30vhjNXWEem1l5O0R0OWkQ" regionAsInput="_30vhi9XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30vhnNXWEem1l5O0R0OWkQ" name="Read(Employee$initializationFlag$1)" structuralFeature="_30vgxNXWEem1l5O0R0OWkQ">
              <object xmi:id="_30vhndXWEem1l5O0R0OWkQ" name="Read(Employee$initializationFlag$1).object" incoming="_30vhHNXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhntXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhn9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30vhoNXWEem1l5O0R0OWkQ" name="Read(Employee$initializationFlag$1).result" outgoing="_30vhHdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhodXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhotXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30vho9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_30vhpNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30vhHdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhpdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhptXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30vhp9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30vhHtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhqNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhqdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vhqtXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_30vhq9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30vhH9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhrNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhrdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30vhrtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_30vhr9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_30vhsNXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30vhHtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhsdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhstXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_30vhs9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30vhIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhtNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhtdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_30vhttXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30vhH9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vht9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhuNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_30vhudXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30vhINXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30vhutXWEem1l5O0R0OWkQ" name="Decision(Test(Employee$initializationFlag$1))" incoming="_30vhINXWEem1l5O0R0OWkQ _30vhIdXWEem1l5O0R0OWkQ" outgoing="_30vhItXWEem1l5O0R0OWkQ" decisionInputFlow="_30vhIdXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_30vhu9XWEem1l5O0R0OWkQ" name="Employee$initialization$1" visibility="protected" method="_30vhE9XWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_30vhvNXWEem1l5O0R0OWkQ" name="Employee" visibility="public" method="_30vg1tXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_30vhvdXWEem1l5O0R0OWkQ" name="" visibility="package" type="_30vgw9XWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhvtXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhv9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_30vhwNXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_30vhEdXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_30vhwdXWEem1l5O0R0OWkQ" name="Attribute" visibility="public">
        <ownedAttribute xmi:id="_30vhwtXWEem1l5O0R0OWkQ" name="Attribute$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhw9XWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhxNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_30vhxdXWEem1l5O0R0OWkQ" name="type" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhxtXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhx9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30vhyNXWEem1l5O0R0OWkQ" name="Attribute$method$1" visibility="private" specification="_30viYtXWEem1l5O0R0OWkQ" node="_30vhzdXWEem1l5O0R0OWkQ _30vhztXWEem1l5O0R0OWkQ" group="_30vhztXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_30vhydXWEem1l5O0R0OWkQ" name="" type="_30vhwdXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vhytXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vhy9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhzNXWEem1l5O0R0OWkQ" target="_30vhzdXWEem1l5O0R0OWkQ" source="_30vh39XWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_30vhztXWEem1l5O0R0OWkQ" name="Body(Attribute$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vhz9XWEem1l5O0R0OWkQ" target="_30vh39XWEem1l5O0R0OWkQ" source="_30vh3NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vh0NXWEem1l5O0R0OWkQ" target="_30vh4dXWEem1l5O0R0OWkQ" source="_30vh39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vh0dXWEem1l5O0R0OWkQ" target="_30vh2tXWEem1l5O0R0OWkQ" source="_30vh4NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vh0tXWEem1l5O0R0OWkQ" target="_30vh5dXWEem1l5O0R0OWkQ" source="_30vh39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vh09XWEem1l5O0R0OWkQ" target="_30vh7NXWEem1l5O0R0OWkQ" source="_30vh6NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vh1NXWEem1l5O0R0OWkQ" target="_30vh-NXWEem1l5O0R0OWkQ" source="_30vh79XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vh1dXWEem1l5O0R0OWkQ" target="_30vh_tXWEem1l5O0R0OWkQ" source="_30vh89XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vh1tXWEem1l5O0R0OWkQ" target="_30viAtXWEem1l5O0R0OWkQ" source="_30viAdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vh19XWEem1l5O0R0OWkQ" target="_30viAtXWEem1l5O0R0OWkQ" source="_30vh-9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vh2NXWEem1l5O0R0OWkQ" target="_30vh4NXWEem1l5O0R0OWkQ" source="_30viAtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30vh2dXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vh2tXWEem1l5O0R0OWkQ" name="Body" incoming="_30vh0dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_30vh29XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_30vh3NXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30vhz9XWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vh3dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vh3tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30vh39XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30vhz9XWEem1l5O0R0OWkQ" outgoing="_30vhzNXWEem1l5O0R0OWkQ _30vh0NXWEem1l5O0R0OWkQ _30vh0tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_30vh4NXWEem1l5O0R0OWkQ" name="Call(Attribute$initialization$1)" incoming="_30vh2NXWEem1l5O0R0OWkQ" outgoing="_30vh0dXWEem1l5O0R0OWkQ" operation="_30viYdXWEem1l5O0R0OWkQ">
              <target xmi:id="_30vh4dXWEem1l5O0R0OWkQ" name="Call(Attribute$initialization$1).target" incoming="_30vh0NXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vh4tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vh49XWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30vh5NXWEem1l5O0R0OWkQ" name="Read(Attribute$initializationFlag$1)" structuralFeature="_30vhwtXWEem1l5O0R0OWkQ">
              <object xmi:id="_30vh5dXWEem1l5O0R0OWkQ" name="Read(Attribute$initializationFlag$1).object" incoming="_30vh0tXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vh5tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vh59XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30vh6NXWEem1l5O0R0OWkQ" name="Read(Attribute$initializationFlag$1).result" outgoing="_30vh09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vh6dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vh6tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30vh69XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_30vh7NXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30vh09XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vh7dXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vh7tXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30vh79XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30vh1NXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vh8NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vh8dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vh8tXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_30vh89XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30vh1dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vh9NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vh9dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30vh9tXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_30vh99XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_30vh-NXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30vh1NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vh-dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vh-tXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_30vh-9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30vh19XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vh_NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vh_dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_30vh_tXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30vh1dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vh_9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viANXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_30viAdXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30vh1tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30viAtXWEem1l5O0R0OWkQ" name="Decision(Test(Attribute$initializationFlag$1))" incoming="_30vh1tXWEem1l5O0R0OWkQ _30vh19XWEem1l5O0R0OWkQ" outgoing="_30vh2NXWEem1l5O0R0OWkQ" decisionInputFlow="_30vh19XWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_30vhzdXWEem1l5O0R0OWkQ" name="Return" incoming="_30vhzNXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" parameter="_30vhydXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30viA9XWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_30viZtXWEem1l5O0R0OWkQ" node="_30viBNXWEem1l5O0R0OWkQ" group="_30viBNXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_30viBNXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30viBdXWEem1l5O0R0OWkQ" name="Attribute$initialization$1" visibility="private" specification="_30viYdXWEem1l5O0R0OWkQ" node="_30viBtXWEem1l5O0R0OWkQ" group="_30viBtXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_30viBtXWEem1l5O0R0OWkQ" name="Body(Attribute$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30viB9XWEem1l5O0R0OWkQ" target="_30viFtXWEem1l5O0R0OWkQ" source="_30viE9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30viCNXWEem1l5O0R0OWkQ" target="_30viIdXWEem1l5O0R0OWkQ" source="_30viFtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30viCdXWEem1l5O0R0OWkQ" target="_30viNNXWEem1l5O0R0OWkQ" source="_30viFtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30viCtXWEem1l5O0R0OWkQ" target="_30viQ9XWEem1l5O0R0OWkQ" source="_30viFtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30viC9XWEem1l5O0R0OWkQ" target="_30viStXWEem1l5O0R0OWkQ" source="_30viRtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30viDNXWEem1l5O0R0OWkQ" target="_30viVtXWEem1l5O0R0OWkQ" source="_30viTdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30viDdXWEem1l5O0R0OWkQ" target="_30viXNXWEem1l5O0R0OWkQ" source="_30viUdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30viDtXWEem1l5O0R0OWkQ" target="_30viYNXWEem1l5O0R0OWkQ" source="_30viX9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30viD9XWEem1l5O0R0OWkQ" target="_30viYNXWEem1l5O0R0OWkQ" source="_30viWdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30viENXWEem1l5O0R0OWkQ" target="_30viF9XWEem1l5O0R0OWkQ" source="_30viYNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30viEdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_30viEtXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_30viE9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30viB9XWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viFNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viFdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30viFtXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30viB9XWEem1l5O0R0OWkQ" outgoing="_30viCNXWEem1l5O0R0OWkQ _30viCdXWEem1l5O0R0OWkQ _30viCtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30viF9XWEem1l5O0R0OWkQ" name="Initialization" incoming="_30viENXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_30viGNXWEem1l5O0R0OWkQ" target="_30viKtXWEem1l5O0R0OWkQ" source="_30viGdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30viGdXWEem1l5O0R0OWkQ" name="Initialize(type)" outgoing="_30viGNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30viGtXWEem1l5O0R0OWkQ" target="_30viJ9XWEem1l5O0R0OWkQ" source="_30viHNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30viG9XWEem1l5O0R0OWkQ" name="Value(0)">
                  <result xmi:id="_30viHNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30viGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viHdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viHtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_30viH9XWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30viINXWEem1l5O0R0OWkQ" name="Write(type)" structuralFeature="_30vhxdXWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_30viIdXWEem1l5O0R0OWkQ" name="Write(type).object" incoming="_30viCNXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viItXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viI9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30viJNXWEem1l5O0R0OWkQ" name="Write(type).result" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viJdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viJtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_30viJ9XWEem1l5O0R0OWkQ" name="Write(type).value" incoming="_30viGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viKNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viKdXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30viKtXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_30viGNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30viK9XWEem1l5O0R0OWkQ" target="_30viQdXWEem1l5O0R0OWkQ" source="_30viLdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30viLNXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_30viLdXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_30viK9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viLtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viL9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_30viMNXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_30viMdXWEem1l5O0R0OWkQ" name="Iterate(Write(Attribute$initializationFlag$1))" inputElement="_30viQdXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30viMtXWEem1l5O0R0OWkQ" target="_30viPtXWEem1l5O0R0OWkQ" source="_30viQdXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30viM9XWEem1l5O0R0OWkQ" target="_30viONXWEem1l5O0R0OWkQ" source="_30viNNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_30viNNXWEem1l5O0R0OWkQ" name="Iterate(Write(Attribute$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_30viCdXWEem1l5O0R0OWkQ" outgoing="_30viM9XWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viNdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viNtXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30viN9XWEem1l5O0R0OWkQ" name="Write(Attribute$initializationFlag$1)" structuralFeature="_30vhwtXWEem1l5O0R0OWkQ">
                    <object xmi:id="_30viONXWEem1l5O0R0OWkQ" name="Write(Attribute$initializationFlag$1).object" incoming="_30viM9XWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viOdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viOtXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30viO9XWEem1l5O0R0OWkQ" name="Write(Attribute$initializationFlag$1).result" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viPNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viPdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_30viPtXWEem1l5O0R0OWkQ" name="Write(Attribute$initializationFlag$1).value" incoming="_30viMtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viP9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viQNXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30viQdXWEem1l5O0R0OWkQ" name="Iterate(Write(Attribute$initializationFlag$1)).inputElement" incoming="_30viK9XWEem1l5O0R0OWkQ" outgoing="_30viMtXWEem1l5O0R0OWkQ" regionAsInput="_30viMdXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30viQtXWEem1l5O0R0OWkQ" name="Read(Attribute$initializationFlag$1)" structuralFeature="_30vhwtXWEem1l5O0R0OWkQ">
              <object xmi:id="_30viQ9XWEem1l5O0R0OWkQ" name="Read(Attribute$initializationFlag$1).object" incoming="_30viCtXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viRNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viRdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30viRtXWEem1l5O0R0OWkQ" name="Read(Attribute$initializationFlag$1).result" outgoing="_30viC9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viR9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viSNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30viSdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_30viStXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30viC9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viS9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viTNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30viTdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30viDNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viTtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viT9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30viUNXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_30viUdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30viDdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viUtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viU9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30viVNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_30viVdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_30viVtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30viDNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viV9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viWNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_30viWdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30viD9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viWtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viW9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_30viXNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30viDdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viXdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viXtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_30viX9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30viDtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30viYNXWEem1l5O0R0OWkQ" name="Decision(Test(Attribute$initializationFlag$1))" incoming="_30viDtXWEem1l5O0R0OWkQ _30viD9XWEem1l5O0R0OWkQ" outgoing="_30viENXWEem1l5O0R0OWkQ" decisionInputFlow="_30viD9XWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_30viYdXWEem1l5O0R0OWkQ" name="Attribute$initialization$1" visibility="protected" method="_30viBdXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_30viYtXWEem1l5O0R0OWkQ" name="Attribute" visibility="public" method="_30vhyNXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_30viY9XWEem1l5O0R0OWkQ" name="" visibility="package" type="_30vhwdXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viZNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viZdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_30viZtXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_30viA9XWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_30viZ9XWEem1l5O0R0OWkQ" name="Something" visibility="public">
        <ownedAttribute xmi:id="_30viaNXWEem1l5O0R0OWkQ" name="Something$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viadXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viatXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_30via9XWEem1l5O0R0OWkQ" name="attribute" visibility="public" type="_30vhwdXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vibNXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vibdXWEem1l5O0R0OWkQ" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30vibtXWEem1l5O0R0OWkQ" name="Something$method$1" visibility="private" specification="_30vjHtXWEem1l5O0R0OWkQ" node="_30vic9XWEem1l5O0R0OWkQ _30vidNXWEem1l5O0R0OWkQ" group="_30vidNXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_30vib9XWEem1l5O0R0OWkQ" name="" type="_30viZ9XWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vicNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vicdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30victXWEem1l5O0R0OWkQ" target="_30vic9XWEem1l5O0R0OWkQ" source="_30vihdXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_30vidNXWEem1l5O0R0OWkQ" name="Body(Something$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30viddXWEem1l5O0R0OWkQ" target="_30vihdXWEem1l5O0R0OWkQ" source="_30vigtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vidtXWEem1l5O0R0OWkQ" target="_30vih9XWEem1l5O0R0OWkQ" source="_30vihdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vid9XWEem1l5O0R0OWkQ" target="_30vigNXWEem1l5O0R0OWkQ" source="_30vihtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vieNXWEem1l5O0R0OWkQ" target="_30vii9XWEem1l5O0R0OWkQ" source="_30vihdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30viedXWEem1l5O0R0OWkQ" target="_30viktXWEem1l5O0R0OWkQ" source="_30vijtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vietXWEem1l5O0R0OWkQ" target="_30vintXWEem1l5O0R0OWkQ" source="_30vildXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vie9XWEem1l5O0R0OWkQ" target="_30vipNXWEem1l5O0R0OWkQ" source="_30vimdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vifNXWEem1l5O0R0OWkQ" target="_30viqNXWEem1l5O0R0OWkQ" source="_30vip9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vifdXWEem1l5O0R0OWkQ" target="_30viqNXWEem1l5O0R0OWkQ" source="_30viodXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30viftXWEem1l5O0R0OWkQ" target="_30vihtXWEem1l5O0R0OWkQ" source="_30viqNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30vif9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vigNXWEem1l5O0R0OWkQ" name="Body" incoming="_30vid9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_30vigdXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_30vigtXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30viddXWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vig9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vihNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30vihdXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30viddXWEem1l5O0R0OWkQ" outgoing="_30victXWEem1l5O0R0OWkQ _30vidtXWEem1l5O0R0OWkQ _30vieNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_30vihtXWEem1l5O0R0OWkQ" name="Call(Something$initialization$1)" incoming="_30viftXWEem1l5O0R0OWkQ" outgoing="_30vid9XWEem1l5O0R0OWkQ" operation="_30vjHdXWEem1l5O0R0OWkQ">
              <target xmi:id="_30vih9XWEem1l5O0R0OWkQ" name="Call(Something$initialization$1).target" incoming="_30vidtXWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viiNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viidXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30viitXWEem1l5O0R0OWkQ" name="Read(Something$initializationFlag$1)" structuralFeature="_30viaNXWEem1l5O0R0OWkQ">
              <object xmi:id="_30vii9XWEem1l5O0R0OWkQ" name="Read(Something$initializationFlag$1).object" incoming="_30vieNXWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vijNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vijdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30vijtXWEem1l5O0R0OWkQ" name="Read(Something$initializationFlag$1).result" outgoing="_30viedXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vij9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vikNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30vikdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_30viktXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30viedXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vik9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vilNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30vildXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30vietXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viltXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vil9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vimNXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_30vimdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30vie9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vimtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vim9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30vinNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_30vindXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_30vintXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30vietXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vin9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vioNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_30viodXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30vifdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viotXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vio9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_30vipNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30vie9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vipdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viptXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_30vip9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30vifNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30viqNXWEem1l5O0R0OWkQ" name="Decision(Test(Something$initializationFlag$1))" incoming="_30vifNXWEem1l5O0R0OWkQ _30vifdXWEem1l5O0R0OWkQ" outgoing="_30viftXWEem1l5O0R0OWkQ" decisionInputFlow="_30vifdXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_30vic9XWEem1l5O0R0OWkQ" name="Return" incoming="_30victXWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" parameter="_30vib9XWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30viqdXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_30vjItXWEem1l5O0R0OWkQ" node="_30viqtXWEem1l5O0R0OWkQ" group="_30viqtXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_30viqtXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30viq9XWEem1l5O0R0OWkQ" name="Something$initialization$1" visibility="private" specification="_30vjHdXWEem1l5O0R0OWkQ" node="_30virNXWEem1l5O0R0OWkQ" group="_30virNXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_30virNXWEem1l5O0R0OWkQ" name="Body(Something$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30virdXWEem1l5O0R0OWkQ" target="_30vivNXWEem1l5O0R0OWkQ" source="_30viudXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30virtXWEem1l5O0R0OWkQ" target="_30vi2NXWEem1l5O0R0OWkQ" source="_30vivNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vir9XWEem1l5O0R0OWkQ" target="_30vi8NXWEem1l5O0R0OWkQ" source="_30vivNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30visNXWEem1l5O0R0OWkQ" target="_30vi_9XWEem1l5O0R0OWkQ" source="_30vivNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30visdXWEem1l5O0R0OWkQ" target="_30vjBtXWEem1l5O0R0OWkQ" source="_30vjAtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vistXWEem1l5O0R0OWkQ" target="_30vjEtXWEem1l5O0R0OWkQ" source="_30vjCdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vis9XWEem1l5O0R0OWkQ" target="_30vjGNXWEem1l5O0R0OWkQ" source="_30vjDdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vitNXWEem1l5O0R0OWkQ" target="_30vjHNXWEem1l5O0R0OWkQ" source="_30vjG9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vitdXWEem1l5O0R0OWkQ" target="_30vjHNXWEem1l5O0R0OWkQ" source="_30vjFdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vittXWEem1l5O0R0OWkQ" target="_30vivdXWEem1l5O0R0OWkQ" source="_30vjHNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30vit9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_30viuNXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_30viudXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30virdXWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viutXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30viu9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30vivNXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30virdXWEem1l5O0R0OWkQ" outgoing="_30virtXWEem1l5O0R0OWkQ _30vir9XWEem1l5O0R0OWkQ _30visNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vivdXWEem1l5O0R0OWkQ" name="Initialization" incoming="_30vittXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_30vivtXWEem1l5O0R0OWkQ" target="_30vi5tXWEem1l5O0R0OWkQ" source="_30viv9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30viv9XWEem1l5O0R0OWkQ" name="Initialize(attribute)" outgoing="_30vivtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30viwNXWEem1l5O0R0OWkQ" target="_30vi1NXWEem1l5O0R0OWkQ" source="_30vixdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30viwdXWEem1l5O0R0OWkQ" target="_30vi0dXWEem1l5O0R0OWkQ" source="_30vi1NXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30viwtXWEem1l5O0R0OWkQ" target="_30viyNXWEem1l5O0R0OWkQ" source="_30vixNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30viw9XWEem1l5O0R0OWkQ" target="_30vi5dXWEem1l5O0R0OWkQ" source="_30viytXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_30vixNXWEem1l5O0R0OWkQ" name="Create(Attribute)" outgoing="_30viwtXWEem1l5O0R0OWkQ" classifier="_30vhwdXWEem1l5O0R0OWkQ">
                  <result xmi:id="_30vixdXWEem1l5O0R0OWkQ" name="Create(Attribute).result" outgoing="_30viwNXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vixtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vix9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30viyNXWEem1l5O0R0OWkQ" name="Node(Call(Attribute))" incoming="_30viwtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30viydXWEem1l5O0R0OWkQ" target="_30viytXWEem1l5O0R0OWkQ" source="_30vi1NXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_30viytXWEem1l5O0R0OWkQ" name="Output(Fork(Create(Attribute).result))" incoming="_30viydXWEem1l5O0R0OWkQ" outgoing="_30viw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viy9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vizNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_30vizdXWEem1l5O0R0OWkQ" name="Call(Attribute)" operation="_30viYtXWEem1l5O0R0OWkQ">
                    <result xmi:id="_30viztXWEem1l5O0R0OWkQ" name="Call(Attribute).result()" type="_30vhwdXWEem1l5O0R0OWkQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30viz9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vi0NXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <target xmi:id="_30vi0dXWEem1l5O0R0OWkQ" name="Call(Attribute).target" incoming="_30viwdXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vi0tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vi09XWEem1l5O0R0OWkQ" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_30vi1NXWEem1l5O0R0OWkQ" name="Fork(Create(Attribute).result)" incoming="_30viwNXWEem1l5O0R0OWkQ" outgoing="_30viwdXWEem1l5O0R0OWkQ _30viydXWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_30vi1dXWEem1l5O0R0OWkQ" name="Iterate(Write(attribute))" inputElement="_30vi5dXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30vi1tXWEem1l5O0R0OWkQ" target="_30vi4tXWEem1l5O0R0OWkQ" source="_30vi5dXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30vi19XWEem1l5O0R0OWkQ" target="_30vi3NXWEem1l5O0R0OWkQ" source="_30vi2NXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_30vi2NXWEem1l5O0R0OWkQ" name="Iterate(Write(attribute)).input(Fork(ReadSelf.result))" incoming="_30virtXWEem1l5O0R0OWkQ" outgoing="_30vi19XWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vi2dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vi2tXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30vi29XWEem1l5O0R0OWkQ" name="Write(attribute)" structuralFeature="_30via9XWEem1l5O0R0OWkQ">
                    <object xmi:id="_30vi3NXWEem1l5O0R0OWkQ" name="Write(attribute).object" incoming="_30vi19XWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vi3dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vi3tXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30vi39XWEem1l5O0R0OWkQ" name="Write(attribute).result" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vi4NXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vi4dXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_30vi4tXWEem1l5O0R0OWkQ" name="Write(attribute).value" incoming="_30vi1tXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vi49XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vi5NXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30vi5dXWEem1l5O0R0OWkQ" name="Iterate(Write(attribute)).inputElement" incoming="_30viw9XWEem1l5O0R0OWkQ" outgoing="_30vi1tXWEem1l5O0R0OWkQ" regionAsInput="_30vi1dXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vi5tXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_30vivtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vi59XWEem1l5O0R0OWkQ" target="_30vi_dXWEem1l5O0R0OWkQ" source="_30vi6dXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vi6NXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_30vi6dXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_30vi59XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vi6tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vi69XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_30vi7NXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_30vi7dXWEem1l5O0R0OWkQ" name="Iterate(Write(Something$initializationFlag$1))" inputElement="_30vi_dXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30vi7tXWEem1l5O0R0OWkQ" target="_30vi-tXWEem1l5O0R0OWkQ" source="_30vi_dXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30vi79XWEem1l5O0R0OWkQ" target="_30vi9NXWEem1l5O0R0OWkQ" source="_30vi8NXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_30vi8NXWEem1l5O0R0OWkQ" name="Iterate(Write(Something$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_30vir9XWEem1l5O0R0OWkQ" outgoing="_30vi79XWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vi8dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vi8tXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30vi89XWEem1l5O0R0OWkQ" name="Write(Something$initializationFlag$1)" structuralFeature="_30viaNXWEem1l5O0R0OWkQ">
                    <object xmi:id="_30vi9NXWEem1l5O0R0OWkQ" name="Write(Something$initializationFlag$1).object" incoming="_30vi79XWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vi9dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vi9tXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30vi99XWEem1l5O0R0OWkQ" name="Write(Something$initializationFlag$1).result" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vi-NXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vi-dXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_30vi-tXWEem1l5O0R0OWkQ" name="Write(Something$initializationFlag$1).value" incoming="_30vi7tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vi-9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vi_NXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30vi_dXWEem1l5O0R0OWkQ" name="Iterate(Write(Something$initializationFlag$1)).inputElement" incoming="_30vi59XWEem1l5O0R0OWkQ" outgoing="_30vi7tXWEem1l5O0R0OWkQ" regionAsInput="_30vi7dXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30vi_tXWEem1l5O0R0OWkQ" name="Read(Something$initializationFlag$1)" structuralFeature="_30viaNXWEem1l5O0R0OWkQ">
              <object xmi:id="_30vi_9XWEem1l5O0R0OWkQ" name="Read(Something$initializationFlag$1).object" incoming="_30visNXWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjANXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjAdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30vjAtXWEem1l5O0R0OWkQ" name="Read(Something$initializationFlag$1).result" outgoing="_30visdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjA9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjBNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30vjBdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_30vjBtXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30visdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjB9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjCNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30vjCdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30vistXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjCtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjC9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vjDNXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_30vjDdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30vis9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjDtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjD9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30vjENXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_30vjEdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_30vjEtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30vistXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjE9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjFNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_30vjFdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30vitdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjFtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjF9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_30vjGNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30vis9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjGdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjGtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_30vjG9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30vitNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30vjHNXWEem1l5O0R0OWkQ" name="Decision(Test(Something$initializationFlag$1))" incoming="_30vitNXWEem1l5O0R0OWkQ _30vitdXWEem1l5O0R0OWkQ" outgoing="_30vittXWEem1l5O0R0OWkQ" decisionInputFlow="_30vitdXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_30vjHdXWEem1l5O0R0OWkQ" name="Something$initialization$1" visibility="protected" method="_30viq9XWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_30vjHtXWEem1l5O0R0OWkQ" name="Something" visibility="public" method="_30vibtXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_30vjH9XWEem1l5O0R0OWkQ" name="" visibility="package" type="_30viZ9XWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjINXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjIdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_30vjItXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_30viqdXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_30vjI9XWEem1l5O0R0OWkQ" name="Object" visibility="public">
        <ownedAttribute xmi:id="_30vjJNXWEem1l5O0R0OWkQ" name="Object$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjJdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjJtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_30vjJ9XWEem1l5O0R0OWkQ" name="attr" visibility="public" type="_30vhwdXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjKNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjKdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30vjKtXWEem1l5O0R0OWkQ" name="init$method$1" visibility="private" specification="_30wG4dXWEem1l5O0R0OWkQ" node="_30vjMNXWEem1l5O0R0OWkQ _30vjMdXWEem1l5O0R0OWkQ _30vjMtXWEem1l5O0R0OWkQ" group="_30vjMtXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_30vjK9XWEem1l5O0R0OWkQ" name="attr" type="_30vhwdXWEem1l5O0R0OWkQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjLNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjLdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjLtXWEem1l5O0R0OWkQ" target="_30vjMdXWEem1l5O0R0OWkQ" source="_30vjMNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjL9XWEem1l5O0R0OWkQ" target="_30vjRNXWEem1l5O0R0OWkQ" source="_30vjMdXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_30vjMtXWEem1l5O0R0OWkQ" name="Body(init$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vjM9XWEem1l5O0R0OWkQ" name="ExpressionStatement@f0b114e">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjNNXWEem1l5O0R0OWkQ" target="_30vjPtXWEem1l5O0R0OWkQ" source="_30vjOtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjNdXWEem1l5O0R0OWkQ" target="_30vjR9XWEem1l5O0R0OWkQ" source="_30vjRNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjNtXWEem1l5O0R0OWkQ" target="_30vjS9XWEem1l5O0R0OWkQ" source="_30vjQdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30vjN9XWEem1l5O0R0OWkQ" target="_30vjONXWEem1l5O0R0OWkQ" source="_30vjVNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vjONXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@22fcf167)" incoming="_30vjN9XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_30vjOdXWEem1l5O0R0OWkQ" name="ReadSelf">
                  <result xmi:id="_30vjOtXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30vjNNXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjO9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjPNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_30vjPdXWEem1l5O0R0OWkQ" name="Clear(attr)" structuralFeature="_30vjJ9XWEem1l5O0R0OWkQ">
                <object xmi:id="_30vjPtXWEem1l5O0R0OWkQ" name="Clear(attr).object" incoming="_30vjNNXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjP9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjQNXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_30vjQdXWEem1l5O0R0OWkQ" name="Clear(attr).result" outgoing="_30vjNtXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjQtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjQ9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_30vjRNXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@22fcf167)" incoming="_30vjL9XWEem1l5O0R0OWkQ" outgoing="_30vjNdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vjRdXWEem1l5O0R0OWkQ" name="WriteAll(Object::attr)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjRtXWEem1l5O0R0OWkQ" target="_30vjUdXWEem1l5O0R0OWkQ" source="_30vjR9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_30vjR9XWEem1l5O0R0OWkQ" name="WriteAll(Object::attr).input(Object::attr)" incoming="_30vjNdXWEem1l5O0R0OWkQ" outgoing="_30vjRtXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjSNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjSdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30vjStXWEem1l5O0R0OWkQ" name="Write(attr)" structuralFeature="_30vjJ9XWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_30vjS9XWEem1l5O0R0OWkQ" name="Write(attr).object" incoming="_30vjNtXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjTNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjTdXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30vjTtXWEem1l5O0R0OWkQ" name="Write(attr).result" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjT9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjUNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_30vjUdXWEem1l5O0R0OWkQ" name="Write(attr).value" incoming="_30vjRtXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjUtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjU9XWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vjVNXWEem1l5O0R0OWkQ" name="RightHandSide@190fff61" outgoing="_30vjN9XWEem1l5O0R0OWkQ"/>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_30vjMNXWEem1l5O0R0OWkQ" name="Input(attr)" outgoing="_30vjLtXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" parameter="_30vjK9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_30vjMdXWEem1l5O0R0OWkQ" name="Fork(attr)" incoming="_30vjLtXWEem1l5O0R0OWkQ" outgoing="_30vjL9XWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30vjVdXWEem1l5O0R0OWkQ" name="Object$method$1" visibility="private" specification="_30wG5dXWEem1l5O0R0OWkQ" node="_30vjWtXWEem1l5O0R0OWkQ _30vjW9XWEem1l5O0R0OWkQ" group="_30vjW9XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_30vjVtXWEem1l5O0R0OWkQ" name="" type="_30vjI9XWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjV9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjWNXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjWdXWEem1l5O0R0OWkQ" target="_30vjWtXWEem1l5O0R0OWkQ" source="_30vjbNXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_30vjW9XWEem1l5O0R0OWkQ" name="Body(Object$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjXNXWEem1l5O0R0OWkQ" target="_30vjbNXWEem1l5O0R0OWkQ" source="_30vjadXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjXdXWEem1l5O0R0OWkQ" target="_30vjbtXWEem1l5O0R0OWkQ" source="_30vjbNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vjXtXWEem1l5O0R0OWkQ" target="_30vjZ9XWEem1l5O0R0OWkQ" source="_30vjbdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjX9XWEem1l5O0R0OWkQ" target="_30vjctXWEem1l5O0R0OWkQ" source="_30vjbNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjYNXWEem1l5O0R0OWkQ" target="_30vjedXWEem1l5O0R0OWkQ" source="_30vjddXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjYdXWEem1l5O0R0OWkQ" target="_30vjhdXWEem1l5O0R0OWkQ" source="_30vjfNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjYtXWEem1l5O0R0OWkQ" target="_30wGkNXWEem1l5O0R0OWkQ" source="_30vjgNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vjY9XWEem1l5O0R0OWkQ" target="_30wGlNXWEem1l5O0R0OWkQ" source="_30wGk9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30vjZNXWEem1l5O0R0OWkQ" target="_30wGlNXWEem1l5O0R0OWkQ" source="_30vjiNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30vjZdXWEem1l5O0R0OWkQ" target="_30vjbdXWEem1l5O0R0OWkQ" source="_30wGlNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30vjZtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30vjZ9XWEem1l5O0R0OWkQ" name="Body" incoming="_30vjXtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_30vjaNXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_30vjadXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30vjXNXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjatXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vja9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30vjbNXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30vjXNXWEem1l5O0R0OWkQ" outgoing="_30vjWdXWEem1l5O0R0OWkQ _30vjXdXWEem1l5O0R0OWkQ _30vjX9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_30vjbdXWEem1l5O0R0OWkQ" name="Call(Object$initialization$1)" incoming="_30vjZdXWEem1l5O0R0OWkQ" outgoing="_30vjXtXWEem1l5O0R0OWkQ" operation="_30wG4NXWEem1l5O0R0OWkQ">
              <target xmi:id="_30vjbtXWEem1l5O0R0OWkQ" name="Call(Object$initialization$1).target" incoming="_30vjXdXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjb9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjcNXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30vjcdXWEem1l5O0R0OWkQ" name="Read(Object$initializationFlag$1)" structuralFeature="_30vjJNXWEem1l5O0R0OWkQ">
              <object xmi:id="_30vjctXWEem1l5O0R0OWkQ" name="Read(Object$initializationFlag$1).object" incoming="_30vjX9XWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjc9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjdNXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30vjddXWEem1l5O0R0OWkQ" name="Read(Object$initializationFlag$1).result" outgoing="_30vjYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjdtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjd9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30vjeNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_30vjedXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30vjYNXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjetXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vje9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30vjfNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30vjYdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjfdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjftXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30vjf9XWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_30vjgNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30vjYtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjgdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjgtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30vjg9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_30vjhNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_30vjhdXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30vjYdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjhtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjh9XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_30vjiNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30vjZNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30vjidXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30vjitXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_30wGkNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30vjYtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wGkdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wGktXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_30wGk9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30vjY9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30wGlNXWEem1l5O0R0OWkQ" name="Decision(Test(Object$initializationFlag$1))" incoming="_30vjY9XWEem1l5O0R0OWkQ _30vjZNXWEem1l5O0R0OWkQ" outgoing="_30vjZdXWEem1l5O0R0OWkQ" decisionInputFlow="_30vjZNXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_30vjWtXWEem1l5O0R0OWkQ" name="Return" incoming="_30vjWdXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" parameter="_30vjVtXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30wGldXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_30wG6dXWEem1l5O0R0OWkQ" node="_30wGltXWEem1l5O0R0OWkQ" group="_30wGltXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_30wGltXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30wGl9XWEem1l5O0R0OWkQ" name="Object$initialization$1" visibility="private" specification="_30wG4NXWEem1l5O0R0OWkQ" node="_30wGmNXWEem1l5O0R0OWkQ" group="_30wGmNXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_30wGmNXWEem1l5O0R0OWkQ" name="Body(Object$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wGmdXWEem1l5O0R0OWkQ" target="_30wGp9XWEem1l5O0R0OWkQ" source="_30wGpNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wGmtXWEem1l5O0R0OWkQ" target="_30wGs9XWEem1l5O0R0OWkQ" source="_30wGp9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wGm9XWEem1l5O0R0OWkQ" target="_30wGwtXWEem1l5O0R0OWkQ" source="_30wGp9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wGnNXWEem1l5O0R0OWkQ" target="_30wGydXWEem1l5O0R0OWkQ" source="_30wGxdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wGndXWEem1l5O0R0OWkQ" target="_30wG1dXWEem1l5O0R0OWkQ" source="_30wGzNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wGntXWEem1l5O0R0OWkQ" target="_30wG29XWEem1l5O0R0OWkQ" source="_30wG0NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wGn9XWEem1l5O0R0OWkQ" target="_30wG39XWEem1l5O0R0OWkQ" source="_30wG3tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wGoNXWEem1l5O0R0OWkQ" target="_30wG39XWEem1l5O0R0OWkQ" source="_30wG2NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wGodXWEem1l5O0R0OWkQ" target="_30wGqNXWEem1l5O0R0OWkQ" source="_30wG39XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30wGotXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_30wGo9XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_30wGpNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30wGmdXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wGpdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wGptXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30wGp9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30wGmdXWEem1l5O0R0OWkQ" outgoing="_30wGmtXWEem1l5O0R0OWkQ _30wGm9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wGqNXWEem1l5O0R0OWkQ" name="Initialization" incoming="_30wGodXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wGqdXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wGqtXWEem1l5O0R0OWkQ" target="_30wGwNXWEem1l5O0R0OWkQ" source="_30wGrNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wGq9XWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_30wGrNXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_30wGqtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wGrdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wGrtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_30wGr9XWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_30wGsNXWEem1l5O0R0OWkQ" name="Iterate(Write(Object$initializationFlag$1))" inputElement="_30wGwNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wGsdXWEem1l5O0R0OWkQ" target="_30wGvdXWEem1l5O0R0OWkQ" source="_30wGwNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wGstXWEem1l5O0R0OWkQ" target="_30wGt9XWEem1l5O0R0OWkQ" source="_30wGs9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_30wGs9XWEem1l5O0R0OWkQ" name="Iterate(Write(Object$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_30wGmtXWEem1l5O0R0OWkQ" outgoing="_30wGstXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wGtNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wGtdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30wGttXWEem1l5O0R0OWkQ" name="Write(Object$initializationFlag$1)" structuralFeature="_30vjJNXWEem1l5O0R0OWkQ">
                    <object xmi:id="_30wGt9XWEem1l5O0R0OWkQ" name="Write(Object$initializationFlag$1).object" incoming="_30wGstXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wGuNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wGudXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30wGutXWEem1l5O0R0OWkQ" name="Write(Object$initializationFlag$1).result" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wGu9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wGvNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_30wGvdXWEem1l5O0R0OWkQ" name="Write(Object$initializationFlag$1).value" incoming="_30wGsdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wGvtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wGv9XWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30wGwNXWEem1l5O0R0OWkQ" name="Iterate(Write(Object$initializationFlag$1)).inputElement" incoming="_30wGqtXWEem1l5O0R0OWkQ" outgoing="_30wGsdXWEem1l5O0R0OWkQ" regionAsInput="_30wGsNXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wGwdXWEem1l5O0R0OWkQ" name="Read(Object$initializationFlag$1)" structuralFeature="_30vjJNXWEem1l5O0R0OWkQ">
              <object xmi:id="_30wGwtXWEem1l5O0R0OWkQ" name="Read(Object$initializationFlag$1).object" incoming="_30wGm9XWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wGw9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wGxNXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30wGxdXWEem1l5O0R0OWkQ" name="Read(Object$initializationFlag$1).result" outgoing="_30wGnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wGxtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wGx9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wGyNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_30wGydXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30wGnNXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wGytXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wGy9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30wGzNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30wGndXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wGzdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wGztXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wGz9XWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_30wG0NXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30wGntXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wG0dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wG0tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30wG09XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_30wG1NXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_30wG1dXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30wGndXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wG1tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wG19XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_30wG2NXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30wGoNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wG2dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wG2tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_30wG29XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30wGntXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wG3NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wG3dXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_30wG3tXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30wGn9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30wG39XWEem1l5O0R0OWkQ" name="Decision(Test(Object$initializationFlag$1))" incoming="_30wGn9XWEem1l5O0R0OWkQ _30wGoNXWEem1l5O0R0OWkQ" outgoing="_30wGodXWEem1l5O0R0OWkQ" decisionInputFlow="_30wGoNXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_30wG4NXWEem1l5O0R0OWkQ" name="Object$initialization$1" visibility="protected" method="_30wGl9XWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_30wG4dXWEem1l5O0R0OWkQ" name="init" visibility="public" method="_30vjKtXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_30wG4tXWEem1l5O0R0OWkQ" name="attr" visibility="package" type="_30vhwdXWEem1l5O0R0OWkQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wG49XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wG5NXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_30wG5dXWEem1l5O0R0OWkQ" name="Object" visibility="public" method="_30vjVdXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_30wG5tXWEem1l5O0R0OWkQ" name="" visibility="package" type="_30vjI9XWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wG59XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wG6NXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_30wG6dXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_30wGldXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_30wG6tXWEem1l5O0R0OWkQ" name="Div" visibility="package" node="_30wG-tXWEem1l5O0R0OWkQ _30wG-9XWEem1l5O0R0OWkQ _30wG_NXWEem1l5O0R0OWkQ _30wG_dXWEem1l5O0R0OWkQ _30wG_tXWEem1l5O0R0OWkQ _30wG_9XWEem1l5O0R0OWkQ _30wHANXWEem1l5O0R0OWkQ" group="_30wHANXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_30wG69XWEem1l5O0R0OWkQ" name="x" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wG7NXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wG7dXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wG7tXWEem1l5O0R0OWkQ" name="y" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wG79XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wG8NXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wG8dXWEem1l5O0R0OWkQ" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wG8tXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wG89XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wG9NXWEem1l5O0R0OWkQ" target="_30wG-9XWEem1l5O0R0OWkQ" source="_30wG-tXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wG9dXWEem1l5O0R0OWkQ" target="_30wG_dXWEem1l5O0R0OWkQ" source="_30wG_NXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_30wG9tXWEem1l5O0R0OWkQ" target="_30wG_9XWEem1l5O0R0OWkQ" source="_30wHAdXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wG99XWEem1l5O0R0OWkQ" target="_30wHG9XWEem1l5O0R0OWkQ" source="_30wG-9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wG-NXWEem1l5O0R0OWkQ" target="_30wHI9XWEem1l5O0R0OWkQ" source="_30wG_dXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wG-dXWEem1l5O0R0OWkQ" target="_30wG_tXWEem1l5O0R0OWkQ" source="_30wHDtXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_30wHANXWEem1l5O0R0OWkQ" name="Body(Div)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wHAdXWEem1l5O0R0OWkQ" name="ReturnStatement@dc0ae85" outgoing="_30wG9tXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHAtXWEem1l5O0R0OWkQ" target="_30wHPtXWEem1l5O0R0OWkQ" source="_30wHE9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wHA9XWEem1l5O0R0OWkQ" target="_30wHPdXWEem1l5O0R0OWkQ" source="_30wHEdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHBNXWEem1l5O0R0OWkQ" target="_30wHSdXWEem1l5O0R0OWkQ" source="_30wHE9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wHBdXWEem1l5O0R0OWkQ" target="_30wHVdXWEem1l5O0R0OWkQ" source="_30wHVNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHBtXWEem1l5O0R0OWkQ" target="_30wHVdXWEem1l5O0R0OWkQ" source="_30wHQdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wHB9XWEem1l5O0R0OWkQ" target="_30wHRNXWEem1l5O0R0OWkQ" source="_30wHVdXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30wHCNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wHCdXWEem1l5O0R0OWkQ" target="_30wHStXWEem1l5O0R0OWkQ" source="_30wHVdXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30wHCtXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHC9XWEem1l5O0R0OWkQ" target="_30wHVtXWEem1l5O0R0OWkQ" source="_30wHRtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHDNXWEem1l5O0R0OWkQ" target="_30wHVtXWEem1l5O0R0OWkQ" source="_30wHTNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHDdXWEem1l5O0R0OWkQ" target="_30wHDtXWEem1l5O0R0OWkQ" source="_30wHVtXWEem1l5O0R0OWkQ"/>
            <structuredNodeOutput xmi:id="_30wHDtXWEem1l5O0R0OWkQ" name="ReturnStatement@dc0ae85.output" incoming="_30wHDdXWEem1l5O0R0OWkQ" outgoing="_30wG-dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHD9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHENXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wHEdXWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@1c4f7000)" outgoing="_30wHA9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHEtXWEem1l5O0R0OWkQ" target="_30wHE9XWEem1l5O0R0OWkQ" source="_30wHK9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_30wHE9XWEem1l5O0R0OWkQ" name="Fork('')@3350a135" incoming="_30wHEtXWEem1l5O0R0OWkQ" outgoing="_30wHAtXWEem1l5O0R0OWkQ _30wHBNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wHFNXWEem1l5O0R0OWkQ" name="RightHandSide@e880d7a">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHFdXWEem1l5O0R0OWkQ" target="_30wHL9XWEem1l5O0R0OWkQ" source="_30wHHtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHFtXWEem1l5O0R0OWkQ" target="_30wHMtXWEem1l5O0R0OWkQ" source="_30wHJtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wHF9XWEem1l5O0R0OWkQ" target="_30wHKdXWEem1l5O0R0OWkQ" source="_30wHGdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wHGNXWEem1l5O0R0OWkQ" target="_30wHKdXWEem1l5O0R0OWkQ" source="_30wHIdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wHGdXWEem1l5O0R0OWkQ" name="Passthru(Fork(x))" outgoing="_30wHF9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHGtXWEem1l5O0R0OWkQ" target="_30wHHtXWEem1l5O0R0OWkQ" source="_30wHG9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_30wHG9XWEem1l5O0R0OWkQ" name="Passthru(Fork(x)).input" incoming="_30wG99XWEem1l5O0R0OWkQ" outgoing="_30wHGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHHNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHHdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_30wHHtXWEem1l5O0R0OWkQ" name="Passthru(Fork(x)).output" incoming="_30wHGtXWEem1l5O0R0OWkQ" outgoing="_30wHFdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHH9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHINXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wHIdXWEem1l5O0R0OWkQ" name="Passthru(Fork(y))" outgoing="_30wHGNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHItXWEem1l5O0R0OWkQ" target="_30wHJtXWEem1l5O0R0OWkQ" source="_30wHI9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_30wHI9XWEem1l5O0R0OWkQ" name="Passthru(Fork(y)).input" incoming="_30wG-NXWEem1l5O0R0OWkQ" outgoing="_30wHItXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHJNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHJdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_30wHJtXWEem1l5O0R0OWkQ" name="Passthru(Fork(y)).output" incoming="_30wHItXWEem1l5O0R0OWkQ" outgoing="_30wHFtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHJ9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHKNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wHKdXWEem1l5O0R0OWkQ" name="Node(Call(Div))" incoming="_30wHF9XWEem1l5O0R0OWkQ _30wHGNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHKtXWEem1l5O0R0OWkQ" target="_30wHK9XWEem1l5O0R0OWkQ" source="_30wHNdXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_30wHK9XWEem1l5O0R0OWkQ" name="Output(Call(Div).result(result))" incoming="_30wHKtXWEem1l5O0R0OWkQ" outgoing="_30wHEtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHLNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHLdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wHLtXWEem1l5O0R0OWkQ" name="Call(Div)">
                    <argument xmi:id="_30wHL9XWEem1l5O0R0OWkQ" name="Call(Div).argument(x)" incoming="_30wHFdXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHMNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHMdXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <argument xmi:id="_30wHMtXWEem1l5O0R0OWkQ" name="Call(Div).argument(y)" incoming="_30wHFtXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHM9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHNNXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_30wHNdXWEem1l5O0R0OWkQ" name="Call(Div).result(result)" outgoing="_30wHKtXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHNtXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHN9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wHONXWEem1l5O0R0OWkQ" name="Value(null)">
                <result xmi:id="_30wHOdXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHOtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHO9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralNull" xmi:id="_30wHPNXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wHPdXWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_30wHA9XWEem1l5O0R0OWkQ">
              <argument xmi:id="_30wHPtXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_30wHAtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHP9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHQNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30wHQdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_30wHBtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHQtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHQ9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wHRNXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@37107949.operand2" incoming="_30wHB9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHRdXWEem1l5O0R0OWkQ" target="_30wHRtXWEem1l5O0R0OWkQ" source="_30wHSdXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_30wHRtXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@37107949.operand2.result" incoming="_30wHRdXWEem1l5O0R0OWkQ" outgoing="_30wHC9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHR9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHSNXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:MergeNode" xmi:id="_30wHSdXWEem1l5O0R0OWkQ" name="Merge(Fork('')@3350a135)" incoming="_30wHBNXWEem1l5O0R0OWkQ" outgoing="_30wHRdXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wHStXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@37107949.operand3" incoming="_30wHCdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHS9XWEem1l5O0R0OWkQ" target="_30wHTNXWEem1l5O0R0OWkQ" source="_30wHUNXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_30wHTNXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@37107949.operand3.result" incoming="_30wHS9XWEem1l5O0R0OWkQ" outgoing="_30wHDNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHTdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHTtXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wHT9XWEem1l5O0R0OWkQ" name="Value(0)">
                <result xmi:id="_30wHUNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30wHS9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHUdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHUtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_30wHU9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_30wHVNXWEem1l5O0R0OWkQ" name="Initial(NullCoalescingExpression@37107949)" outgoing="_30wHBdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30wHVdXWEem1l5O0R0OWkQ" name="Decision(NullCoalescingExpression@37107949)" incoming="_30wHBdXWEem1l5O0R0OWkQ _30wHBtXWEem1l5O0R0OWkQ" outgoing="_30wHB9XWEem1l5O0R0OWkQ _30wHCdXWEem1l5O0R0OWkQ" decisionInputFlow="_30wHBtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_30wHVtXWEem1l5O0R0OWkQ" name="Merge(NullCoalescingExpression@37107949.result)" incoming="_30wHC9XWEem1l5O0R0OWkQ _30wHDNXWEem1l5O0R0OWkQ" outgoing="_30wHDdXWEem1l5O0R0OWkQ"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wG-tXWEem1l5O0R0OWkQ" name="Input(x)" outgoing="_30wG9NXWEem1l5O0R0OWkQ" parameter="_30wG69XWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_30wG-9XWEem1l5O0R0OWkQ" name="Fork(x)" incoming="_30wG9NXWEem1l5O0R0OWkQ" outgoing="_30wG99XWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wG_NXWEem1l5O0R0OWkQ" name="Input(y)" outgoing="_30wG9dXWEem1l5O0R0OWkQ" parameter="_30wG7tXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_30wG_dXWEem1l5O0R0OWkQ" name="Fork(y)" incoming="_30wG9dXWEem1l5O0R0OWkQ" outgoing="_30wG-NXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wG_tXWEem1l5O0R0OWkQ" name="Return" incoming="_30wG-dXWEem1l5O0R0OWkQ" parameter="_30wG8dXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_30wG_9XWEem1l5O0R0OWkQ" name="Final" incoming="_30wG9tXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_30wHV9XWEem1l5O0R0OWkQ" name="test" visibility="public" node="_30wHlNXWEem1l5O0R0OWkQ _30wHldXWEem1l5O0R0OWkQ _30wHltXWEem1l5O0R0OWkQ _30wHl9XWEem1l5O0R0OWkQ _30wHmNXWEem1l5O0R0OWkQ _30wHmdXWEem1l5O0R0OWkQ _30wHmtXWEem1l5O0R0OWkQ _30wHm9XWEem1l5O0R0OWkQ _30wHnNXWEem1l5O0R0OWkQ _30wHndXWEem1l5O0R0OWkQ _30wHntXWEem1l5O0R0OWkQ _30wHn9XWEem1l5O0R0OWkQ _30wHoNXWEem1l5O0R0OWkQ _30wHodXWEem1l5O0R0OWkQ _30wHotXWEem1l5O0R0OWkQ _30wHo9XWEem1l5O0R0OWkQ" group="_30wHo9XWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_30wHWNXWEem1l5O0R0OWkQ" name="sum" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHWdXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHWtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHW9XWEem1l5O0R0OWkQ" name="remainder" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHXNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHXdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHXtXWEem1l5O0R0OWkQ" name="bad" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHX9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHYNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHYdXWEem1l5O0R0OWkQ" name="select" visibility="package" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHYtXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHY9XWEem1l5O0R0OWkQ" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHZNXWEem1l5O0R0OWkQ" name="reject" visibility="package" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHZdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHZtXWEem1l5O0R0OWkQ" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHZ9XWEem1l5O0R0OWkQ" name="collect" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHaNXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHadXWEem1l5O0R0OWkQ" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHatXWEem1l5O0R0OWkQ" name="iterate" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHa9XWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHbNXWEem1l5O0R0OWkQ" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHbdXWEem1l5O0R0OWkQ" name="forAll" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHbtXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHb9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHcNXWEem1l5O0R0OWkQ" name="exists" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHcdXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHctXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHc9XWEem1l5O0R0OWkQ" name="one" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHdNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHddXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHdtXWEem1l5O0R0OWkQ" name="unique" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHd9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHeNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHedXWEem1l5O0R0OWkQ" name="jack" visibility="package" type="_30vgw9XWEem1l5O0R0OWkQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHetXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHe9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHfNXWEem1l5O0R0OWkQ" name="joan" visibility="package" type="_30vgw9XWEem1l5O0R0OWkQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHfdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHftXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHf9XWEem1l5O0R0OWkQ" name="something" visibility="package" type="_30viZ9XWEem1l5O0R0OWkQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHgNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHgdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wHgtXWEem1l5O0R0OWkQ" name="obj" visibility="package" type="_30vjI9XWEem1l5O0R0OWkQ" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wHg9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wHhNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHhdXWEem1l5O0R0OWkQ" target="_30wHlNXWEem1l5O0R0OWkQ" source="_30wH4tXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHhtXWEem1l5O0R0OWkQ" target="_30wHldXWEem1l5O0R0OWkQ" source="_30wH5dXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHh9XWEem1l5O0R0OWkQ" target="_30wHltXWEem1l5O0R0OWkQ" source="_30wH6NXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHiNXWEem1l5O0R0OWkQ" target="_30wHl9XWEem1l5O0R0OWkQ" source="_30wH69XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHidXWEem1l5O0R0OWkQ" target="_30wHmNXWEem1l5O0R0OWkQ" source="_30wH7tXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHitXWEem1l5O0R0OWkQ" target="_30wHmdXWEem1l5O0R0OWkQ" source="_30wH8dXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHi9XWEem1l5O0R0OWkQ" target="_30wHmtXWEem1l5O0R0OWkQ" source="_30wH9NXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHjNXWEem1l5O0R0OWkQ" target="_30wHm9XWEem1l5O0R0OWkQ" source="_30wH99XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHjdXWEem1l5O0R0OWkQ" target="_30wHnNXWEem1l5O0R0OWkQ" source="_30wH-tXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHjtXWEem1l5O0R0OWkQ" target="_30wHndXWEem1l5O0R0OWkQ" source="_30wH_dXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHj9XWEem1l5O0R0OWkQ" target="_30wHntXWEem1l5O0R0OWkQ" source="_30wIANXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHkNXWEem1l5O0R0OWkQ" target="_30wHn9XWEem1l5O0R0OWkQ" source="_30wIA9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHkdXWEem1l5O0R0OWkQ" target="_30wHoNXWEem1l5O0R0OWkQ" source="_30wIBtXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHktXWEem1l5O0R0OWkQ" target="_30wHodXWEem1l5O0R0OWkQ" source="_30wICdXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHk9XWEem1l5O0R0OWkQ" target="_30wHotXWEem1l5O0R0OWkQ" source="_30wIDNXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_30wHo9XWEem1l5O0R0OWkQ" name="Body(test)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHpNXWEem1l5O0R0OWkQ" target="_30wIM9XWEem1l5O0R0OWkQ" source="_30wIEdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHpdXWEem1l5O0R0OWkQ" target="_30wILtXWEem1l5O0R0OWkQ" source="_30wID9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHptXWEem1l5O0R0OWkQ" target="_30wIPtXWEem1l5O0R0OWkQ" source="_30wIEdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHp9XWEem1l5O0R0OWkQ" target="_30wIOdXWEem1l5O0R0OWkQ" source="_30wILtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHqNXWEem1l5O0R0OWkQ" target="_30wIRNXWEem1l5O0R0OWkQ" source="_30wIOdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHqdXWEem1l5O0R0OWkQ" target="_30wIc9XWEem1l5O0R0OWkQ" source="_30wIRNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHqtXWEem1l5O0R0OWkQ" target="_30wIi9XWEem1l5O0R0OWkQ" source="_30wIc9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHq9XWEem1l5O0R0OWkQ" target="_30wIqdXWEem1l5O0R0OWkQ" source="_30wIjdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHrNXWEem1l5O0R0OWkQ" target="_30wIo9XWEem1l5O0R0OWkQ" source="_30wIi9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHrdXWEem1l5O0R0OWkQ" target="_30wIy9XWEem1l5O0R0OWkQ" source="_30wIjdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHrtXWEem1l5O0R0OWkQ" target="_30wIxdXWEem1l5O0R0OWkQ" source="_30wIo9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHr9XWEem1l5O0R0OWkQ" target="_30wI7dXWEem1l5O0R0OWkQ" source="_30wIjdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHsNXWEem1l5O0R0OWkQ" target="_30wI59XWEem1l5O0R0OWkQ" source="_30wIxdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHsdXWEem1l5O0R0OWkQ" target="_30wJD9XWEem1l5O0R0OWkQ" source="_30wIjdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHstXWEem1l5O0R0OWkQ" target="_30wJCdXWEem1l5O0R0OWkQ" source="_30wI59XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHs9XWEem1l5O0R0OWkQ" target="_30wJMdXWEem1l5O0R0OWkQ" source="_30wIjdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHtNXWEem1l5O0R0OWkQ" target="_30wJK9XWEem1l5O0R0OWkQ" source="_30wJCdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHtdXWEem1l5O0R0OWkQ" target="_30wJWdXWEem1l5O0R0OWkQ" source="_30wIddXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHttXWEem1l5O0R0OWkQ" target="_30wJW9XWEem1l5O0R0OWkQ" source="_30wIjdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHt9XWEem1l5O0R0OWkQ" target="_30wJTdXWEem1l5O0R0OWkQ" source="_30wJK9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHuNXWEem1l5O0R0OWkQ" target="_30wJjNXWEem1l5O0R0OWkQ" source="_30wJT9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHudXWEem1l5O0R0OWkQ" target="_30wJXNXWEem1l5O0R0OWkQ" source="_30wJTdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHutXWEem1l5O0R0OWkQ" target="_30wJptXWEem1l5O0R0OWkQ" source="_30wJT9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHu9XWEem1l5O0R0OWkQ" target="_30wJjtXWEem1l5O0R0OWkQ" source="_30wJXNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHvNXWEem1l5O0R0OWkQ" target="_30wJutXWEem1l5O0R0OWkQ" source="_30wJT9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHvdXWEem1l5O0R0OWkQ" target="_30wJqNXWEem1l5O0R0OWkQ" source="_30wJjtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHvtXWEem1l5O0R0OWkQ" target="_30wJztXWEem1l5O0R0OWkQ" source="_30wJT9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHv9XWEem1l5O0R0OWkQ" target="_30wJvNXWEem1l5O0R0OWkQ" source="_30wJqNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHwNXWEem1l5O0R0OWkQ" target="_30wtpNXWEem1l5O0R0OWkQ" source="_30wJT9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHwdXWEem1l5O0R0OWkQ" target="_30wJ0NXWEem1l5O0R0OWkQ" source="_30wJvNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHwtXWEem1l5O0R0OWkQ" target="_30wt39XWEem1l5O0R0OWkQ" source="_30wJT9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHw9XWEem1l5O0R0OWkQ" target="_30wtrdXWEem1l5O0R0OWkQ" source="_30wJ0NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHxNXWEem1l5O0R0OWkQ" target="_30wuFNXWEem1l5O0R0OWkQ" source="_30wJT9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHxdXWEem1l5O0R0OWkQ" target="_30wt6NXWEem1l5O0R0OWkQ" source="_30wtrdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHxtXWEem1l5O0R0OWkQ" target="_30wuQ9XWEem1l5O0R0OWkQ" source="_30wJT9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHx9XWEem1l5O0R0OWkQ" target="_30wuLNXWEem1l5O0R0OWkQ" source="_30wt6NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHyNXWEem1l5O0R0OWkQ" target="_30wugtXWEem1l5O0R0OWkQ" source="_30wuLNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHydXWEem1l5O0R0OWkQ" target="_30wuydXWEem1l5O0R0OWkQ" source="_30wugtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHytXWEem1l5O0R0OWkQ" target="_30wvENXWEem1l5O0R0OWkQ" source="_30wuydXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHy9XWEem1l5O0R0OWkQ" target="_30wvGdXWEem1l5O0R0OWkQ" source="_30wvENXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHzNXWEem1l5O0R0OWkQ" target="_30wvPdXWEem1l5O0R0OWkQ" source="_30wvG9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wHzdXWEem1l5O0R0OWkQ" target="_30wvRtXWEem1l5O0R0OWkQ" source="_30wvEtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHztXWEem1l5O0R0OWkQ" target="_30wvMdXWEem1l5O0R0OWkQ" source="_30wvGdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wHz9XWEem1l5O0R0OWkQ" target="_30wvZNXWEem1l5O0R0OWkQ" source="_30wvMdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH0NXWEem1l5O0R0OWkQ" target="_30wviNXWEem1l5O0R0OWkQ" source="_30wvG9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH0dXWEem1l5O0R0OWkQ" target="_30wvjtXWEem1l5O0R0OWkQ" source="_30wvZtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wH0tXWEem1l5O0R0OWkQ" target="_30wvfNXWEem1l5O0R0OWkQ" source="_30wvZNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH09XWEem1l5O0R0OWkQ" target="_30wH4tXWEem1l5O0R0OWkQ" source="_30wIMNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH1NXWEem1l5O0R0OWkQ" target="_30wH5dXWEem1l5O0R0OWkQ" source="_30wIO9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH1dXWEem1l5O0R0OWkQ" target="_30wH6NXWEem1l5O0R0OWkQ" source="_30wIRtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH1tXWEem1l5O0R0OWkQ" target="_30wH69XWEem1l5O0R0OWkQ" source="_30wJXtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH19XWEem1l5O0R0OWkQ" target="_30wH7tXWEem1l5O0R0OWkQ" source="_30wJkNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH2NXWEem1l5O0R0OWkQ" target="_30wH8dXWEem1l5O0R0OWkQ" source="_30wJqtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH2dXWEem1l5O0R0OWkQ" target="_30wH9NXWEem1l5O0R0OWkQ" source="_30wJvtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH2tXWEem1l5O0R0OWkQ" target="_30wH99XWEem1l5O0R0OWkQ" source="_30wJ0tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH29XWEem1l5O0R0OWkQ" target="_30wH-tXWEem1l5O0R0OWkQ" source="_30wtr9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH3NXWEem1l5O0R0OWkQ" target="_30wH_dXWEem1l5O0R0OWkQ" source="_30wt6tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH3dXWEem1l5O0R0OWkQ" target="_30wIANXWEem1l5O0R0OWkQ" source="_30wuLtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH3tXWEem1l5O0R0OWkQ" target="_30wIA9XWEem1l5O0R0OWkQ" source="_30wuhNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH39XWEem1l5O0R0OWkQ" target="_30wIBtXWEem1l5O0R0OWkQ" source="_30wuy9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH4NXWEem1l5O0R0OWkQ" target="_30wICdXWEem1l5O0R0OWkQ" source="_30wvG9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wH4dXWEem1l5O0R0OWkQ" target="_30wIDNXWEem1l5O0R0OWkQ" source="_30wvZtXWEem1l5O0R0OWkQ"/>
          <structuredNodeOutput xmi:id="_30wH4tXWEem1l5O0R0OWkQ" name="Output(sum)" incoming="_30wH09XWEem1l5O0R0OWkQ" outgoing="_30wHhdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wH49XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wH5NXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wH5dXWEem1l5O0R0OWkQ" name="Output(remainder)" incoming="_30wH1NXWEem1l5O0R0OWkQ" outgoing="_30wHhtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wH5tXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wH59XWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wH6NXWEem1l5O0R0OWkQ" name="Output(bad)" incoming="_30wH1dXWEem1l5O0R0OWkQ" outgoing="_30wHh9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wH6dXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wH6tXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wH69XWEem1l5O0R0OWkQ" name="Output(select)" incoming="_30wH1tXWEem1l5O0R0OWkQ" outgoing="_30wHiNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wH7NXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wH7dXWEem1l5O0R0OWkQ" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wH7tXWEem1l5O0R0OWkQ" name="Output(reject)" incoming="_30wH19XWEem1l5O0R0OWkQ" outgoing="_30wHidXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wH79XWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wH8NXWEem1l5O0R0OWkQ" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wH8dXWEem1l5O0R0OWkQ" name="Output(collect)" incoming="_30wH2NXWEem1l5O0R0OWkQ" outgoing="_30wHitXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wH8tXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wH89XWEem1l5O0R0OWkQ" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wH9NXWEem1l5O0R0OWkQ" name="Output(iterate)" incoming="_30wH2dXWEem1l5O0R0OWkQ" outgoing="_30wHi9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wH9dXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wH9tXWEem1l5O0R0OWkQ" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wH99XWEem1l5O0R0OWkQ" name="Output(forAll)" incoming="_30wH2tXWEem1l5O0R0OWkQ" outgoing="_30wHjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wH-NXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wH-dXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wH-tXWEem1l5O0R0OWkQ" name="Output(exists)" incoming="_30wH29XWEem1l5O0R0OWkQ" outgoing="_30wHjdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wH-9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wH_NXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wH_dXWEem1l5O0R0OWkQ" name="Output(one)" incoming="_30wH3NXWEem1l5O0R0OWkQ" outgoing="_30wHjtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wH_tXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wH_9XWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wIANXWEem1l5O0R0OWkQ" name="Output(unique)" incoming="_30wH3dXWEem1l5O0R0OWkQ" outgoing="_30wHj9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIAdXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIAtXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wIA9XWEem1l5O0R0OWkQ" name="Output(jack)" incoming="_30wH3tXWEem1l5O0R0OWkQ" outgoing="_30wHkNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIBNXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIBdXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wIBtXWEem1l5O0R0OWkQ" name="Output(joan)" incoming="_30wH39XWEem1l5O0R0OWkQ" outgoing="_30wHkdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIB9XWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wICNXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wICdXWEem1l5O0R0OWkQ" name="Output(something)" incoming="_30wH4NXWEem1l5O0R0OWkQ" outgoing="_30wHktXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wICtXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIC9XWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_30wIDNXWEem1l5O0R0OWkQ" name="Output(obj)" incoming="_30wH4dXWEem1l5O0R0OWkQ" outgoing="_30wHk9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIDdXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIDtXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wID9XWEem1l5O0R0OWkQ" name="ExpressionStatement@95c0612" outgoing="_30wHpdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIENXWEem1l5O0R0OWkQ" target="_30wIEdXWEem1l5O0R0OWkQ" source="_30wIGdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wIEdXWEem1l5O0R0OWkQ" name="Fork(subtotals)@4e795c09" incoming="_30wIENXWEem1l5O0R0OWkQ" outgoing="_30wHpNXWEem1l5O0R0OWkQ _30wHptXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIEtXWEem1l5O0R0OWkQ" name="RightHandSide@592a89a1">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIE9XWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@592a89a1">
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wIFNXWEem1l5O0R0OWkQ" target="_30wIItXWEem1l5O0R0OWkQ" source="_30wIHNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wIFdXWEem1l5O0R0OWkQ" target="_30wIKNXWEem1l5O0R0OWkQ" source="_30wIItXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIFtXWEem1l5O0R0OWkQ" target="_30wIGdXWEem1l5O0R0OWkQ" source="_30wIHtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIF9XWEem1l5O0R0OWkQ" target="_30wIGdXWEem1l5O0R0OWkQ" source="_30wIJNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIGNXWEem1l5O0R0OWkQ" target="_30wIGdXWEem1l5O0R0OWkQ" source="_30wIKtXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30wIGdXWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@592a89a1.output" incoming="_30wIFtXWEem1l5O0R0OWkQ _30wIF9XWEem1l5O0R0OWkQ _30wIGNXWEem1l5O0R0OWkQ" outgoing="_30wIENXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIGtXWEem1l5O0R0OWkQ" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIG9XWEem1l5O0R0OWkQ" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIHNXWEem1l5O0R0OWkQ" name="SequenceExpressionList@f878e25#1" outgoing="_30wIFNXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wIHdXWEem1l5O0R0OWkQ" name="Value(1)">
                    <result xmi:id="_30wIHtXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30wIFtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIH9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIINXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_30wIIdXWEem1l5O0R0OWkQ" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIItXWEem1l5O0R0OWkQ" name="SequenceExpressionList@f878e25#2" incoming="_30wIFNXWEem1l5O0R0OWkQ" outgoing="_30wIFdXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wII9XWEem1l5O0R0OWkQ" name="Value(2)">
                    <result xmi:id="_30wIJNXWEem1l5O0R0OWkQ" name="Value(2).result" outgoing="_30wIF9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIJdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIJtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_30wIJ9XWEem1l5O0R0OWkQ" value="2">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIKNXWEem1l5O0R0OWkQ" name="SequenceExpressionList@f878e25#3" incoming="_30wIFdXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wIKdXWEem1l5O0R0OWkQ" name="Value(3)">
                    <result xmi:id="_30wIKtXWEem1l5O0R0OWkQ" name="Value(3).result" outgoing="_30wIGNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIK9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wILNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_30wILdXWEem1l5O0R0OWkQ" value="3">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wILtXWEem1l5O0R0OWkQ" name="ExpressionStatement@62d85ba0" incoming="_30wHpdXWEem1l5O0R0OWkQ" outgoing="_30wHp9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIL9XWEem1l5O0R0OWkQ" target="_30wIMNXWEem1l5O0R0OWkQ" source="_30wINtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wIMNXWEem1l5O0R0OWkQ" name="Fork(sum)@6f6fe8a" incoming="_30wIL9XWEem1l5O0R0OWkQ" outgoing="_30wH09XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIMdXWEem1l5O0R0OWkQ" name="RightHandSide@313b0f24">
              <node xmi:type="uml:ReduceAction" xmi:id="_30wIMtXWEem1l5O0R0OWkQ" name="Reduce(+)">
                <collection xmi:id="_30wIM9XWEem1l5O0R0OWkQ" name="Reduce(+).collection" incoming="_30wHpNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wINNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wINdXWEem1l5O0R0OWkQ" value="*"/>
                </collection>
                <reducer xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                <result xmi:id="_30wINtXWEem1l5O0R0OWkQ" name="Reduce(+).result" outgoing="_30wIL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIN9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIONXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIOdXWEem1l5O0R0OWkQ" name="ExpressionStatement@148df1e5" incoming="_30wHp9XWEem1l5O0R0OWkQ" outgoing="_30wHqNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIOtXWEem1l5O0R0OWkQ" target="_30wIO9XWEem1l5O0R0OWkQ" source="_30wIQdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wIO9XWEem1l5O0R0OWkQ" name="Fork(remainder)@66437b24" incoming="_30wIOtXWEem1l5O0R0OWkQ" outgoing="_30wH1NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIPNXWEem1l5O0R0OWkQ" name="RightHandSide@68d5fb88">
              <node xmi:type="uml:ReduceAction" xmi:id="_30wIPdXWEem1l5O0R0OWkQ" name="Reduce(Mod)" isOrdered="true">
                <collection xmi:id="_30wIPtXWEem1l5O0R0OWkQ" name="Reduce(Mod).collection" incoming="_30wHptXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIP9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIQNXWEem1l5O0R0OWkQ" value="*"/>
                </collection>
                <reducer xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                <result xmi:id="_30wIQdXWEem1l5O0R0OWkQ" name="Reduce(Mod).result" outgoing="_30wIOtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIQtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIQ9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIRNXWEem1l5O0R0OWkQ" name="ExpressionStatement@36120e46" incoming="_30wHqNXWEem1l5O0R0OWkQ" outgoing="_30wHqdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIRdXWEem1l5O0R0OWkQ" target="_30wIRtXWEem1l5O0R0OWkQ" source="_30wITdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wIRtXWEem1l5O0R0OWkQ" name="Fork(bad)@6d29d01a" incoming="_30wIRdXWEem1l5O0R0OWkQ" outgoing="_30wH1dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIR9XWEem1l5O0R0OWkQ" name="RightHandSide@f718981">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wISNXWEem1l5O0R0OWkQ" target="_30wIStXWEem1l5O0R0OWkQ" source="_30wIWNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ReduceAction" xmi:id="_30wISdXWEem1l5O0R0OWkQ" name="Reduce(Div)" reducer="_30wG6tXWEem1l5O0R0OWkQ">
                <collection xmi:id="_30wIStXWEem1l5O0R0OWkQ" name="Reduce(Div).collection" incoming="_30wISNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIS9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wITNXWEem1l5O0R0OWkQ" value="*"/>
                </collection>
                <result xmi:id="_30wITdXWEem1l5O0R0OWkQ" name="Reduce(Div).result" outgoing="_30wIRdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wITtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIT9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIUNXWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@7117eaff">
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wIUdXWEem1l5O0R0OWkQ" target="_30wIYdXWEem1l5O0R0OWkQ" source="_30wIW9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wIUtXWEem1l5O0R0OWkQ" target="_30wIZ9XWEem1l5O0R0OWkQ" source="_30wIYdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wIU9XWEem1l5O0R0OWkQ" target="_30wIbdXWEem1l5O0R0OWkQ" source="_30wIZ9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIVNXWEem1l5O0R0OWkQ" target="_30wIWNXWEem1l5O0R0OWkQ" source="_30wIXdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIVdXWEem1l5O0R0OWkQ" target="_30wIWNXWEem1l5O0R0OWkQ" source="_30wIY9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIVtXWEem1l5O0R0OWkQ" target="_30wIWNXWEem1l5O0R0OWkQ" source="_30wIadXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIV9XWEem1l5O0R0OWkQ" target="_30wIWNXWEem1l5O0R0OWkQ" source="_30wIb9XWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30wIWNXWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@7117eaff.output" incoming="_30wIVNXWEem1l5O0R0OWkQ _30wIVdXWEem1l5O0R0OWkQ _30wIVtXWEem1l5O0R0OWkQ _30wIV9XWEem1l5O0R0OWkQ" outgoing="_30wISNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIWdXWEem1l5O0R0OWkQ" value="4"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIWtXWEem1l5O0R0OWkQ" value="4"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIW9XWEem1l5O0R0OWkQ" name="SequenceExpressionList@132c12dd#1" outgoing="_30wIUdXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wIXNXWEem1l5O0R0OWkQ" name="Value(16)">
                    <result xmi:id="_30wIXdXWEem1l5O0R0OWkQ" name="Value(16).result" outgoing="_30wIVNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIXtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIX9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_30wIYNXWEem1l5O0R0OWkQ" value="16">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIYdXWEem1l5O0R0OWkQ" name="SequenceExpressionList@132c12dd#2" incoming="_30wIUdXWEem1l5O0R0OWkQ" outgoing="_30wIUtXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wIYtXWEem1l5O0R0OWkQ" name="Value(2)">
                    <result xmi:id="_30wIY9XWEem1l5O0R0OWkQ" name="Value(2).result" outgoing="_30wIVdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIZNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIZdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_30wIZtXWEem1l5O0R0OWkQ" value="2">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIZ9XWEem1l5O0R0OWkQ" name="SequenceExpressionList@132c12dd#3" incoming="_30wIUtXWEem1l5O0R0OWkQ" outgoing="_30wIU9XWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wIaNXWEem1l5O0R0OWkQ" name="Value(4)">
                    <result xmi:id="_30wIadXWEem1l5O0R0OWkQ" name="Value(4).result" outgoing="_30wIVtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIatXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIa9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_30wIbNXWEem1l5O0R0OWkQ" value="4">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIbdXWEem1l5O0R0OWkQ" name="SequenceExpressionList@132c12dd#4" incoming="_30wIU9XWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wIbtXWEem1l5O0R0OWkQ" name="Value(1)">
                    <result xmi:id="_30wIb9XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30wIV9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIcNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIcdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_30wIctXWEem1l5O0R0OWkQ" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIc9XWEem1l5O0R0OWkQ" name="ExpressionStatement@7ab5a0b8" incoming="_30wHqdXWEem1l5O0R0OWkQ" outgoing="_30wHqtXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIdNXWEem1l5O0R0OWkQ" target="_30wIddXWEem1l5O0R0OWkQ" source="_30wIgNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wIddXWEem1l5O0R0OWkQ" name="Fork(e1)@2c1110de" incoming="_30wIdNXWEem1l5O0R0OWkQ" outgoing="_30wHtdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIdtXWEem1l5O0R0OWkQ" name="RightHandSide@2fea3376">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wId9XWEem1l5O0R0OWkQ" target="_30wIitXWEem1l5O0R0OWkQ" source="_30wIe9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIeNXWEem1l5O0R0OWkQ" target="_30wIh9XWEem1l5O0R0OWkQ" source="_30wIitXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30wIedXWEem1l5O0R0OWkQ" target="_30wIftXWEem1l5O0R0OWkQ" source="_30wIetXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_30wIetXWEem1l5O0R0OWkQ" name="Create(Employee)" outgoing="_30wIedXWEem1l5O0R0OWkQ" classifier="_30vgw9XWEem1l5O0R0OWkQ">
                <result xmi:id="_30wIe9XWEem1l5O0R0OWkQ" name="Create(Employee).result" outgoing="_30wId9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIfNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIfdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIftXWEem1l5O0R0OWkQ" name="Node(Call(Employee))" incoming="_30wIedXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIf9XWEem1l5O0R0OWkQ" target="_30wIgNXWEem1l5O0R0OWkQ" source="_30wIitXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30wIgNXWEem1l5O0R0OWkQ" name="Output(Fork(Create(Employee).result))" incoming="_30wIf9XWEem1l5O0R0OWkQ" outgoing="_30wIdNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIgdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIgtXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_30wIg9XWEem1l5O0R0OWkQ" name="Call(Employee)" operation="_30vhvNXWEem1l5O0R0OWkQ">
                  <result xmi:id="_30wIhNXWEem1l5O0R0OWkQ" name="Call(Employee).result()" type="_30vgw9XWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIhdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIhtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <target xmi:id="_30wIh9XWEem1l5O0R0OWkQ" name="Call(Employee).target" incoming="_30wIeNXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIiNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIidXWEem1l5O0R0OWkQ" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30wIitXWEem1l5O0R0OWkQ" name="Fork(Create(Employee).result)" incoming="_30wId9XWEem1l5O0R0OWkQ" outgoing="_30wIeNXWEem1l5O0R0OWkQ _30wIf9XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIi9XWEem1l5O0R0OWkQ" name="ExpressionStatement@72e447a7" incoming="_30wHqtXWEem1l5O0R0OWkQ" outgoing="_30wHrNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIjNXWEem1l5O0R0OWkQ" target="_30wIjdXWEem1l5O0R0OWkQ" source="_30wImNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wIjdXWEem1l5O0R0OWkQ" name="Fork(e2)@40d5dcf3" incoming="_30wIjNXWEem1l5O0R0OWkQ" outgoing="_30wHq9XWEem1l5O0R0OWkQ _30wHrdXWEem1l5O0R0OWkQ _30wHr9XWEem1l5O0R0OWkQ _30wHsdXWEem1l5O0R0OWkQ _30wHs9XWEem1l5O0R0OWkQ _30wHttXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIjtXWEem1l5O0R0OWkQ" name="RightHandSide@3fd3fc08">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIj9XWEem1l5O0R0OWkQ" target="_30wIotXWEem1l5O0R0OWkQ" source="_30wIk9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIkNXWEem1l5O0R0OWkQ" target="_30wIn9XWEem1l5O0R0OWkQ" source="_30wIotXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30wIkdXWEem1l5O0R0OWkQ" target="_30wIltXWEem1l5O0R0OWkQ" source="_30wIktXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_30wIktXWEem1l5O0R0OWkQ" name="Create(Employee)" outgoing="_30wIkdXWEem1l5O0R0OWkQ" classifier="_30vgw9XWEem1l5O0R0OWkQ">
                <result xmi:id="_30wIk9XWEem1l5O0R0OWkQ" name="Create(Employee).result" outgoing="_30wIj9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIlNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIldXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIltXWEem1l5O0R0OWkQ" name="Node(Call(Employee))" incoming="_30wIkdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIl9XWEem1l5O0R0OWkQ" target="_30wImNXWEem1l5O0R0OWkQ" source="_30wIotXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30wImNXWEem1l5O0R0OWkQ" name="Output(Fork(Create(Employee).result))" incoming="_30wIl9XWEem1l5O0R0OWkQ" outgoing="_30wIjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wImdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wImtXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_30wIm9XWEem1l5O0R0OWkQ" name="Call(Employee)" operation="_30vhvNXWEem1l5O0R0OWkQ">
                  <result xmi:id="_30wInNXWEem1l5O0R0OWkQ" name="Call(Employee).result()" type="_30vgw9XWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIndXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIntXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <target xmi:id="_30wIn9XWEem1l5O0R0OWkQ" name="Call(Employee).target" incoming="_30wIkNXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIoNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIodXWEem1l5O0R0OWkQ" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30wIotXWEem1l5O0R0OWkQ" name="Fork(Create(Employee).result)" incoming="_30wIj9XWEem1l5O0R0OWkQ" outgoing="_30wIkNXWEem1l5O0R0OWkQ _30wIl9XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIo9XWEem1l5O0R0OWkQ" name="ExpressionStatement@309d7b47" incoming="_30wHrNXWEem1l5O0R0OWkQ" outgoing="_30wHrtXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIpNXWEem1l5O0R0OWkQ" target="_30wIstXWEem1l5O0R0OWkQ" source="_30wIr9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIpdXWEem1l5O0R0OWkQ" target="_30wIttXWEem1l5O0R0OWkQ" source="_30wIrNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIptXWEem1l5O0R0OWkQ" target="_30wIr9XWEem1l5O0R0OWkQ" source="_30wIwdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wIp9XWEem1l5O0R0OWkQ" target="_30wIqNXWEem1l5O0R0OWkQ" source="_30wIv9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_30wIqNXWEem1l5O0R0OWkQ" name="Clear(name)" incoming="_30wIp9XWEem1l5O0R0OWkQ" structuralFeature="_30vgzdXWEem1l5O0R0OWkQ">
              <object xmi:id="_30wIqdXWEem1l5O0R0OWkQ" name="Clear(name).object" incoming="_30wHq9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIqtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIq9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30wIrNXWEem1l5O0R0OWkQ" name="Clear(name).result" outgoing="_30wIpdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIrdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIrtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30wIr9XWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@6a17f941)" incoming="_30wIptXWEem1l5O0R0OWkQ" outgoing="_30wIpNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIsNXWEem1l5O0R0OWkQ" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::name)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIsdXWEem1l5O0R0OWkQ" target="_30wIvNXWEem1l5O0R0OWkQ" source="_30wIstXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30wIstXWEem1l5O0R0OWkQ" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::name).input(Expressions_Sequence_Expansion_Reduction::Employee::name)" incoming="_30wIpNXWEem1l5O0R0OWkQ" outgoing="_30wIsdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIs9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wItNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30wItdXWEem1l5O0R0OWkQ" name="Write(name)" structuralFeature="_30vgzdXWEem1l5O0R0OWkQ" isReplaceAll="true">
                <object xmi:id="_30wIttXWEem1l5O0R0OWkQ" name="Write(name).object" incoming="_30wIpdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIt9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIuNXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_30wIudXWEem1l5O0R0OWkQ" name="Write(name).result" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIutXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIu9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:id="_30wIvNXWEem1l5O0R0OWkQ" name="Write(name).value" incoming="_30wIsdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIvdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIvtXWEem1l5O0R0OWkQ" value="1"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIv9XWEem1l5O0R0OWkQ" name="RightHandSide@1ecf0b96" outgoing="_30wIp9XWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wIwNXWEem1l5O0R0OWkQ" name="Value(&quot;Jack&quot;)">
                <result xmi:id="_30wIwdXWEem1l5O0R0OWkQ" name="Value(&quot;Jack&quot;).result" outgoing="_30wIptXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIwtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIw9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_30wIxNXWEem1l5O0R0OWkQ" value="Jack">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wIxdXWEem1l5O0R0OWkQ" name="ExpressionStatement@508bc387" incoming="_30wHrtXWEem1l5O0R0OWkQ" outgoing="_30wHsNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIxtXWEem1l5O0R0OWkQ" target="_30wI1NXWEem1l5O0R0OWkQ" source="_30wI0dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIx9XWEem1l5O0R0OWkQ" target="_30wI2NXWEem1l5O0R0OWkQ" source="_30wIztXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wIyNXWEem1l5O0R0OWkQ" target="_30wI0dXWEem1l5O0R0OWkQ" source="_30wI49XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wIydXWEem1l5O0R0OWkQ" target="_30wIytXWEem1l5O0R0OWkQ" source="_30wI4dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_30wIytXWEem1l5O0R0OWkQ" name="Clear(age)" incoming="_30wIydXWEem1l5O0R0OWkQ" structuralFeature="_30vgx9XWEem1l5O0R0OWkQ">
              <object xmi:id="_30wIy9XWEem1l5O0R0OWkQ" name="Clear(age).object" incoming="_30wHrdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIzNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wIzdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30wIztXWEem1l5O0R0OWkQ" name="Clear(age).result" outgoing="_30wIx9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wIz9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wI0NXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30wI0dXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@718d9c90)" incoming="_30wIyNXWEem1l5O0R0OWkQ" outgoing="_30wIxtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wI0tXWEem1l5O0R0OWkQ" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::age)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wI09XWEem1l5O0R0OWkQ" target="_30wI3tXWEem1l5O0R0OWkQ" source="_30wI1NXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30wI1NXWEem1l5O0R0OWkQ" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::age).input(Expressions_Sequence_Expansion_Reduction::Employee::age)" incoming="_30wIxtXWEem1l5O0R0OWkQ" outgoing="_30wI09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wI1dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wI1tXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30wI19XWEem1l5O0R0OWkQ" name="Write(age)" structuralFeature="_30vgx9XWEem1l5O0R0OWkQ" isReplaceAll="true">
                <object xmi:id="_30wI2NXWEem1l5O0R0OWkQ" name="Write(age).object" incoming="_30wIx9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wI2dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wI2tXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_30wI29XWEem1l5O0R0OWkQ" name="Write(age).result" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wI3NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wI3dXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:id="_30wI3tXWEem1l5O0R0OWkQ" name="Write(age).value" incoming="_30wI09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wI39XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wI4NXWEem1l5O0R0OWkQ" value="1"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wI4dXWEem1l5O0R0OWkQ" name="RightHandSide@5cad8998" outgoing="_30wIydXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wI4tXWEem1l5O0R0OWkQ" name="Value(30)">
                <result xmi:id="_30wI49XWEem1l5O0R0OWkQ" name="Value(30).result" outgoing="_30wIyNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wI5NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wI5dXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_30wI5tXWEem1l5O0R0OWkQ" value="30">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wI59XWEem1l5O0R0OWkQ" name="ExpressionStatement@5e4fd56d" incoming="_30wHsNXWEem1l5O0R0OWkQ" outgoing="_30wHstXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wI6NXWEem1l5O0R0OWkQ" target="_30wI9tXWEem1l5O0R0OWkQ" source="_30wI89XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wI6dXWEem1l5O0R0OWkQ" target="_30wI-tXWEem1l5O0R0OWkQ" source="_30wI8NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wI6tXWEem1l5O0R0OWkQ" target="_30wI89XWEem1l5O0R0OWkQ" source="_30wJBdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wI69XWEem1l5O0R0OWkQ" target="_30wI7NXWEem1l5O0R0OWkQ" source="_30wJA9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_30wI7NXWEem1l5O0R0OWkQ" name="Clear(isMarried)" incoming="_30wI69XWEem1l5O0R0OWkQ" structuralFeature="_30vgytXWEem1l5O0R0OWkQ">
              <object xmi:id="_30wI7dXWEem1l5O0R0OWkQ" name="Clear(isMarried).object" incoming="_30wHr9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wI7tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wI79XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30wI8NXWEem1l5O0R0OWkQ" name="Clear(isMarried).result" outgoing="_30wI6dXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wI8dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wI8tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30wI89XWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@75dfef66)" incoming="_30wI6tXWEem1l5O0R0OWkQ" outgoing="_30wI6NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wI9NXWEem1l5O0R0OWkQ" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::isMarried)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wI9dXWEem1l5O0R0OWkQ" target="_30wJANXWEem1l5O0R0OWkQ" source="_30wI9tXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30wI9tXWEem1l5O0R0OWkQ" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::isMarried).input(Expressions_Sequence_Expansion_Reduction::Employee::isMarried)" incoming="_30wI6NXWEem1l5O0R0OWkQ" outgoing="_30wI9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wI99XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wI-NXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30wI-dXWEem1l5O0R0OWkQ" name="Write(isMarried)" structuralFeature="_30vgytXWEem1l5O0R0OWkQ" isReplaceAll="true">
                <object xmi:id="_30wI-tXWEem1l5O0R0OWkQ" name="Write(isMarried).object" incoming="_30wI6dXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wI-9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wI_NXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_30wI_dXWEem1l5O0R0OWkQ" name="Write(isMarried).result" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wI_tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wI_9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:id="_30wJANXWEem1l5O0R0OWkQ" name="Write(isMarried).value" incoming="_30wI9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJAdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJAtXWEem1l5O0R0OWkQ" value="1"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJA9XWEem1l5O0R0OWkQ" name="RightHandSide@32c2df1b" outgoing="_30wI69XWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wJBNXWEem1l5O0R0OWkQ" name="Value(false)">
                <result xmi:id="_30wJBdXWEem1l5O0R0OWkQ" name="Value(false).result" outgoing="_30wI6tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJBtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJB9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_30wJCNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJCdXWEem1l5O0R0OWkQ" name="ExpressionStatement@7ea6a8c5" incoming="_30wHstXWEem1l5O0R0OWkQ" outgoing="_30wHtNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJCtXWEem1l5O0R0OWkQ" target="_30wJGNXWEem1l5O0R0OWkQ" source="_30wJFdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJC9XWEem1l5O0R0OWkQ" target="_30wJHNXWEem1l5O0R0OWkQ" source="_30wJEtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJDNXWEem1l5O0R0OWkQ" target="_30wJFdXWEem1l5O0R0OWkQ" source="_30wJJ9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wJDdXWEem1l5O0R0OWkQ" target="_30wJDtXWEem1l5O0R0OWkQ" source="_30wJJdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_30wJDtXWEem1l5O0R0OWkQ" name="Clear(title)" incoming="_30wJDdXWEem1l5O0R0OWkQ" structuralFeature="_30vg0NXWEem1l5O0R0OWkQ">
              <object xmi:id="_30wJD9XWEem1l5O0R0OWkQ" name="Clear(title).object" incoming="_30wHsdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJENXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJEdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30wJEtXWEem1l5O0R0OWkQ" name="Clear(title).result" outgoing="_30wJC9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJE9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJFNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30wJFdXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@69907828)" incoming="_30wJDNXWEem1l5O0R0OWkQ" outgoing="_30wJCtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJFtXWEem1l5O0R0OWkQ" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::title)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJF9XWEem1l5O0R0OWkQ" target="_30wJItXWEem1l5O0R0OWkQ" source="_30wJGNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30wJGNXWEem1l5O0R0OWkQ" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::title).input(Expressions_Sequence_Expansion_Reduction::Employee::title)" incoming="_30wJCtXWEem1l5O0R0OWkQ" outgoing="_30wJF9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJGdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJGtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30wJG9XWEem1l5O0R0OWkQ" name="Write(title)" structuralFeature="_30vg0NXWEem1l5O0R0OWkQ" isReplaceAll="true">
                <object xmi:id="_30wJHNXWEem1l5O0R0OWkQ" name="Write(title).object" incoming="_30wJC9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJHdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJHtXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_30wJH9XWEem1l5O0R0OWkQ" name="Write(title).result" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJINXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJIdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:id="_30wJItXWEem1l5O0R0OWkQ" name="Write(title).value" incoming="_30wJF9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJI9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJJNXWEem1l5O0R0OWkQ" value="1"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJJdXWEem1l5O0R0OWkQ" name="RightHandSide@31084b1f" outgoing="_30wJDdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wJJtXWEem1l5O0R0OWkQ" name="Value(&quot;Director&quot;)">
                <result xmi:id="_30wJJ9XWEem1l5O0R0OWkQ" name="Value(&quot;Director&quot;).result" outgoing="_30wJDNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJKNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJKdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_30wJKtXWEem1l5O0R0OWkQ" value="Director">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJK9XWEem1l5O0R0OWkQ" name="ExpressionStatement@61ac7ee4" incoming="_30wHtNXWEem1l5O0R0OWkQ" outgoing="_30wHt9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJLNXWEem1l5O0R0OWkQ" target="_30wJOtXWEem1l5O0R0OWkQ" source="_30wJN9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJLdXWEem1l5O0R0OWkQ" target="_30wJPtXWEem1l5O0R0OWkQ" source="_30wJNNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJLtXWEem1l5O0R0OWkQ" target="_30wJN9XWEem1l5O0R0OWkQ" source="_30wJSdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wJL9XWEem1l5O0R0OWkQ" target="_30wJMNXWEem1l5O0R0OWkQ" source="_30wJR9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_30wJMNXWEem1l5O0R0OWkQ" name="Clear(id)" incoming="_30wJL9XWEem1l5O0R0OWkQ" structuralFeature="_30vg09XWEem1l5O0R0OWkQ">
              <object xmi:id="_30wJMdXWEem1l5O0R0OWkQ" name="Clear(id).object" incoming="_30wHs9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJMtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJM9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30wJNNXWEem1l5O0R0OWkQ" name="Clear(id).result" outgoing="_30wJLdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJNdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJNtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30wJN9XWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@c224649)" incoming="_30wJLtXWEem1l5O0R0OWkQ" outgoing="_30wJLNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJONXWEem1l5O0R0OWkQ" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::id)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJOdXWEem1l5O0R0OWkQ" target="_30wJRNXWEem1l5O0R0OWkQ" source="_30wJOtXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30wJOtXWEem1l5O0R0OWkQ" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::id).input(Expressions_Sequence_Expansion_Reduction::Employee::id)" incoming="_30wJLNXWEem1l5O0R0OWkQ" outgoing="_30wJOdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJO9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJPNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30wJPdXWEem1l5O0R0OWkQ" name="Write(id)" structuralFeature="_30vg09XWEem1l5O0R0OWkQ" isReplaceAll="true">
                <object xmi:id="_30wJPtXWEem1l5O0R0OWkQ" name="Write(id).object" incoming="_30wJLdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJP9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJQNXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_30wJQdXWEem1l5O0R0OWkQ" name="Write(id).result" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJQtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJQ9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:id="_30wJRNXWEem1l5O0R0OWkQ" name="Write(id).value" incoming="_30wJOdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJRdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJRtXWEem1l5O0R0OWkQ" value="1"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJR9XWEem1l5O0R0OWkQ" name="RightHandSide@10d45ab3" outgoing="_30wJL9XWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wJSNXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_30wJSdXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30wJLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJStXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJS9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_30wJTNXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJTdXWEem1l5O0R0OWkQ" name="ExpressionStatement@66763314" incoming="_30wHt9XWEem1l5O0R0OWkQ" outgoing="_30wHudXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJTtXWEem1l5O0R0OWkQ" target="_30wJT9XWEem1l5O0R0OWkQ" source="_30wJVdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wJT9XWEem1l5O0R0OWkQ" name="Fork(employees)@421a2db5" incoming="_30wJTtXWEem1l5O0R0OWkQ" outgoing="_30wHuNXWEem1l5O0R0OWkQ _30wHutXWEem1l5O0R0OWkQ _30wHvNXWEem1l5O0R0OWkQ _30wHvtXWEem1l5O0R0OWkQ _30wHwNXWEem1l5O0R0OWkQ _30wHwtXWEem1l5O0R0OWkQ _30wHxNXWEem1l5O0R0OWkQ _30wHxtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJUNXWEem1l5O0R0OWkQ" name="RightHandSide@4f458c5c">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJUdXWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@4f458c5c">
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wJUtXWEem1l5O0R0OWkQ" target="_30wJWtXWEem1l5O0R0OWkQ" source="_30wJWNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJU9XWEem1l5O0R0OWkQ" target="_30wJVdXWEem1l5O0R0OWkQ" source="_30wJWdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJVNXWEem1l5O0R0OWkQ" target="_30wJVdXWEem1l5O0R0OWkQ" source="_30wJW9XWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30wJVdXWEem1l5O0R0OWkQ" name="SequenceConstructionExpression@4f458c5c.output" incoming="_30wJU9XWEem1l5O0R0OWkQ _30wJVNXWEem1l5O0R0OWkQ" outgoing="_30wJTtXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJVtXWEem1l5O0R0OWkQ" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJV9XWEem1l5O0R0OWkQ" value="2"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJWNXWEem1l5O0R0OWkQ" name="SequenceExpressionList@406fdf1b#1" outgoing="_30wJUtXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:MergeNode" xmi:id="_30wJWdXWEem1l5O0R0OWkQ" name="Merge(Fork(e1)@2c1110de)" incoming="_30wHtdXWEem1l5O0R0OWkQ" outgoing="_30wJU9XWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJWtXWEem1l5O0R0OWkQ" name="SequenceExpressionList@406fdf1b#2" incoming="_30wJUtXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:MergeNode" xmi:id="_30wJW9XWEem1l5O0R0OWkQ" name="Merge(Fork(e2)@40d5dcf3)" incoming="_30wHttXWEem1l5O0R0OWkQ" outgoing="_30wJVNXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJXNXWEem1l5O0R0OWkQ" name="ExpressionStatement@52619c04" incoming="_30wHudXWEem1l5O0R0OWkQ" outgoing="_30wHu9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJXdXWEem1l5O0R0OWkQ" target="_30wJXtXWEem1l5O0R0OWkQ" source="_30wJjdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wJXtXWEem1l5O0R0OWkQ" name="Fork(select)@557fb942" incoming="_30wJXdXWEem1l5O0R0OWkQ" outgoing="_30wH1tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJX9XWEem1l5O0R0OWkQ" name="RightHandSide@69f40eb3">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_30wJYNXWEem1l5O0R0OWkQ" name="SelectOrRejectExpression@69f40eb3" mode="parallel" outputElement="_30wJjdXWEem1l5O0R0OWkQ" inputElement="_30wJjNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJYdXWEem1l5O0R0OWkQ" target="_30wJddXWEem1l5O0R0OWkQ" source="_30wJbdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJYtXWEem1l5O0R0OWkQ" target="_30wJb9XWEem1l5O0R0OWkQ" source="_30wJddXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJY9XWEem1l5O0R0OWkQ" target="_30wJgdXWEem1l5O0R0OWkQ" source="_30wJctXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJZNXWEem1l5O0R0OWkQ" target="_30wJhNXWEem1l5O0R0OWkQ" source="_30wJd9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wJZdXWEem1l5O0R0OWkQ" target="_30wJe9XWEem1l5O0R0OWkQ" source="_30wJbtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wJZtXWEem1l5O0R0OWkQ" target="_30wJe9XWEem1l5O0R0OWkQ" source="_30wJdtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJZ9XWEem1l5O0R0OWkQ" target="_30wJi9XWEem1l5O0R0OWkQ" source="_30wJbdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJaNXWEem1l5O0R0OWkQ" target="_30wJi9XWEem1l5O0R0OWkQ" source="_30wJfdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJadXWEem1l5O0R0OWkQ" target="_30wJitXWEem1l5O0R0OWkQ" source="_30wJi9XWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_30wJatXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJa9XWEem1l5O0R0OWkQ" target="_30wJbdXWEem1l5O0R0OWkQ" source="_30wJjNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJbNXWEem1l5O0R0OWkQ" target="_30wJjdXWEem1l5O0R0OWkQ" source="_30wJitXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_30wJbdXWEem1l5O0R0OWkQ" name="Fork(e)" incoming="_30wJa9XWEem1l5O0R0OWkQ" outgoing="_30wJYdXWEem1l5O0R0OWkQ _30wJZ9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wJbtXWEem1l5O0R0OWkQ" name="Read(age)" outgoing="_30wJZdXWEem1l5O0R0OWkQ" structuralFeature="_30vgx9XWEem1l5O0R0OWkQ">
                  <object xmi:id="_30wJb9XWEem1l5O0R0OWkQ" name="Read(age).object" incoming="_30wJYtXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJcNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJcdXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30wJctXWEem1l5O0R0OWkQ" name="Read(age).result" outgoing="_30wJY9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJc9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJdNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30wJddXWEem1l5O0R0OWkQ" name="Fork(Fork(e))" incoming="_30wJYdXWEem1l5O0R0OWkQ" outgoing="_30wJYtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wJdtXWEem1l5O0R0OWkQ" name="Value(50)" outgoing="_30wJZtXWEem1l5O0R0OWkQ">
                  <result xmi:id="_30wJd9XWEem1l5O0R0OWkQ" name="Value(50).result" outgoing="_30wJZNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJeNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJedXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_30wJetXWEem1l5O0R0OWkQ" value="50">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJe9XWEem1l5O0R0OWkQ" name="Node(Call(>))" incoming="_30wJZdXWEem1l5O0R0OWkQ _30wJZtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJfNXWEem1l5O0R0OWkQ" target="_30wJfdXWEem1l5O0R0OWkQ" source="_30wJh9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_30wJfdXWEem1l5O0R0OWkQ" name="Output(Call(>).result(result))" incoming="_30wJfNXWEem1l5O0R0OWkQ" outgoing="_30wJaNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJftXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJf9XWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wJgNXWEem1l5O0R0OWkQ" name="Call(>)">
                    <argument xmi:id="_30wJgdXWEem1l5O0R0OWkQ" name="Call(>).argument(x)" incoming="_30wJY9XWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJgtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJg9XWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <argument xmi:id="_30wJhNXWEem1l5O0R0OWkQ" name="Call(>).argument(y)" incoming="_30wJZNXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJhdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJhtXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_30wJh9XWEem1l5O0R0OWkQ" name="Call(>).result(result)" outgoing="_30wJfNXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJiNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJidXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
                  </node>
                </node>
                <node xmi:type="uml:MergeNode" xmi:id="_30wJitXWEem1l5O0R0OWkQ" name="Merge(select@69f40eb3)" incoming="_30wJadXWEem1l5O0R0OWkQ" outgoing="_30wJbNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_30wJi9XWEem1l5O0R0OWkQ" name="Decision(select@69f40eb3)" incoming="_30wJZ9XWEem1l5O0R0OWkQ _30wJaNXWEem1l5O0R0OWkQ" outgoing="_30wJadXWEem1l5O0R0OWkQ" decisionInputFlow="_30wJaNXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wJjNXWEem1l5O0R0OWkQ" name="SelectOrRejectExpression@69f40eb3.inputElement" incoming="_30wHuNXWEem1l5O0R0OWkQ" outgoing="_30wJa9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsInput="_30wJYNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wJjdXWEem1l5O0R0OWkQ" name="SelectOrRejectExpression@69f40eb3.outputElement" incoming="_30wJbNXWEem1l5O0R0OWkQ" outgoing="_30wJXdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsOutput="_30wJYNXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJjtXWEem1l5O0R0OWkQ" name="ExpressionStatement@26afba10" incoming="_30wHu9XWEem1l5O0R0OWkQ" outgoing="_30wHvdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJj9XWEem1l5O0R0OWkQ" target="_30wJkNXWEem1l5O0R0OWkQ" source="_30wJp9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wJkNXWEem1l5O0R0OWkQ" name="Fork(reject)@4a1c4ecf" incoming="_30wJj9XWEem1l5O0R0OWkQ" outgoing="_30wH19XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJkdXWEem1l5O0R0OWkQ" name="RightHandSide@5a8cead2">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_30wJktXWEem1l5O0R0OWkQ" name="SelectOrRejectExpression@5a8cead2" mode="parallel" outputElement="_30wJp9XWEem1l5O0R0OWkQ" inputElement="_30wJptXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJk9XWEem1l5O0R0OWkQ" target="_30wJo9XWEem1l5O0R0OWkQ" source="_30wJm9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJlNXWEem1l5O0R0OWkQ" target="_30wJndXWEem1l5O0R0OWkQ" source="_30wJo9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJldXWEem1l5O0R0OWkQ" target="_30wJpdXWEem1l5O0R0OWkQ" source="_30wJm9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJltXWEem1l5O0R0OWkQ" target="_30wJpdXWEem1l5O0R0OWkQ" source="_30wJoNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJl9XWEem1l5O0R0OWkQ" target="_30wJpNXWEem1l5O0R0OWkQ" source="_30wJpdXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_30wJmNXWEem1l5O0R0OWkQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJmdXWEem1l5O0R0OWkQ" target="_30wJm9XWEem1l5O0R0OWkQ" source="_30wJptXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJmtXWEem1l5O0R0OWkQ" target="_30wJp9XWEem1l5O0R0OWkQ" source="_30wJpNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_30wJm9XWEem1l5O0R0OWkQ" name="Fork(e)" incoming="_30wJmdXWEem1l5O0R0OWkQ" outgoing="_30wJk9XWEem1l5O0R0OWkQ _30wJldXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wJnNXWEem1l5O0R0OWkQ" name="Read(isMarried)" structuralFeature="_30vgytXWEem1l5O0R0OWkQ">
                  <object xmi:id="_30wJndXWEem1l5O0R0OWkQ" name="Read(isMarried).object" incoming="_30wJlNXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJntXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJn9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30wJoNXWEem1l5O0R0OWkQ" name="Read(isMarried).result" outgoing="_30wJltXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJodXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJotXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30wJo9XWEem1l5O0R0OWkQ" name="Fork(Fork(e))" incoming="_30wJk9XWEem1l5O0R0OWkQ" outgoing="_30wJlNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_30wJpNXWEem1l5O0R0OWkQ" name="Merge(reject@5a8cead2)" incoming="_30wJl9XWEem1l5O0R0OWkQ" outgoing="_30wJmtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_30wJpdXWEem1l5O0R0OWkQ" name="Decision(reject@5a8cead2)" incoming="_30wJldXWEem1l5O0R0OWkQ _30wJltXWEem1l5O0R0OWkQ" outgoing="_30wJl9XWEem1l5O0R0OWkQ" decisionInputFlow="_30wJltXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wJptXWEem1l5O0R0OWkQ" name="SelectOrRejectExpression@5a8cead2.inputElement" incoming="_30wHutXWEem1l5O0R0OWkQ" outgoing="_30wJmdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsInput="_30wJktXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wJp9XWEem1l5O0R0OWkQ" name="SelectOrRejectExpression@5a8cead2.outputElement" incoming="_30wJmtXWEem1l5O0R0OWkQ" outgoing="_30wJj9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsOutput="_30wJktXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJqNXWEem1l5O0R0OWkQ" name="ExpressionStatement@4ba2863b" incoming="_30wHvdXWEem1l5O0R0OWkQ" outgoing="_30wHv9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJqdXWEem1l5O0R0OWkQ" target="_30wJqtXWEem1l5O0R0OWkQ" source="_30wJu9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wJqtXWEem1l5O0R0OWkQ" name="Fork(collect)@45c60465" incoming="_30wJqdXWEem1l5O0R0OWkQ" outgoing="_30wH2NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJq9XWEem1l5O0R0OWkQ" name="RightHandSide@75432b3">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_30wJrNXWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@75432b3" mode="parallel" outputElement="_30wJu9XWEem1l5O0R0OWkQ" inputElement="_30wJutXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJrdXWEem1l5O0R0OWkQ" target="_30wJudXWEem1l5O0R0OWkQ" source="_30wJsdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJrtXWEem1l5O0R0OWkQ" target="_30wJs9XWEem1l5O0R0OWkQ" source="_30wJudXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJr9XWEem1l5O0R0OWkQ" target="_30wJsdXWEem1l5O0R0OWkQ" source="_30wJutXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJsNXWEem1l5O0R0OWkQ" target="_30wJu9XWEem1l5O0R0OWkQ" source="_30wJttXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_30wJsdXWEem1l5O0R0OWkQ" name="Fork(a)" incoming="_30wJr9XWEem1l5O0R0OWkQ" outgoing="_30wJrdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wJstXWEem1l5O0R0OWkQ" name="Read(name)" structuralFeature="_30vgzdXWEem1l5O0R0OWkQ">
                  <object xmi:id="_30wJs9XWEem1l5O0R0OWkQ" name="Read(name).object" incoming="_30wJrtXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJtNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJtdXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30wJttXWEem1l5O0R0OWkQ" name="Read(name).result" outgoing="_30wJsNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJt9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJuNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30wJudXWEem1l5O0R0OWkQ" name="Fork(Fork(a))" incoming="_30wJrdXWEem1l5O0R0OWkQ" outgoing="_30wJrtXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wJutXWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@75432b3.inputElement" incoming="_30wHvNXWEem1l5O0R0OWkQ" outgoing="_30wJr9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsInput="_30wJrNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wJu9XWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@75432b3.outputElement" incoming="_30wJsNXWEem1l5O0R0OWkQ" outgoing="_30wJqdXWEem1l5O0R0OWkQ" regionAsOutput="_30wJrNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJvNXWEem1l5O0R0OWkQ" name="ExpressionStatement@965cd78" incoming="_30wHv9XWEem1l5O0R0OWkQ" outgoing="_30wHwdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJvdXWEem1l5O0R0OWkQ" target="_30wJvtXWEem1l5O0R0OWkQ" source="_30wJz9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wJvtXWEem1l5O0R0OWkQ" name="Fork(iterate)@4b924d16" incoming="_30wJvdXWEem1l5O0R0OWkQ" outgoing="_30wH2dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJv9XWEem1l5O0R0OWkQ" name="RightHandSide@142a78ce">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_30wJwNXWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@142a78ce" outputElement="_30wJz9XWEem1l5O0R0OWkQ" inputElement="_30wJztXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJwdXWEem1l5O0R0OWkQ" target="_30wJzdXWEem1l5O0R0OWkQ" source="_30wJxdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJwtXWEem1l5O0R0OWkQ" target="_30wJx9XWEem1l5O0R0OWkQ" source="_30wJzdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJw9XWEem1l5O0R0OWkQ" target="_30wJxdXWEem1l5O0R0OWkQ" source="_30wJztXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJxNXWEem1l5O0R0OWkQ" target="_30wJz9XWEem1l5O0R0OWkQ" source="_30wJytXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_30wJxdXWEem1l5O0R0OWkQ" name="Fork(e)" incoming="_30wJw9XWEem1l5O0R0OWkQ" outgoing="_30wJwdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wJxtXWEem1l5O0R0OWkQ" name="Read(name)" structuralFeature="_30vgzdXWEem1l5O0R0OWkQ">
                  <object xmi:id="_30wJx9XWEem1l5O0R0OWkQ" name="Read(name).object" incoming="_30wJwtXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJyNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJydXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30wJytXWEem1l5O0R0OWkQ" name="Read(name).result" outgoing="_30wJxNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJy9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJzNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30wJzdXWEem1l5O0R0OWkQ" name="Fork(Fork(e))" incoming="_30wJwdXWEem1l5O0R0OWkQ" outgoing="_30wJwtXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wJztXWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@142a78ce.inputElement" incoming="_30wHvtXWEem1l5O0R0OWkQ" outgoing="_30wJw9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsInput="_30wJwNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wJz9XWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@142a78ce.outputElement" incoming="_30wJxNXWEem1l5O0R0OWkQ" outgoing="_30wJvdXWEem1l5O0R0OWkQ" regionAsOutput="_30wJwNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJ0NXWEem1l5O0R0OWkQ" name="ExpressionStatement@75c68e57" incoming="_30wHwdXWEem1l5O0R0OWkQ" outgoing="_30wHw9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ0dXWEem1l5O0R0OWkQ" target="_30wJ0tXWEem1l5O0R0OWkQ" source="_30wtqtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wJ0tXWEem1l5O0R0OWkQ" name="Fork(forAll)@3a28ecc9" incoming="_30wJ0dXWEem1l5O0R0OWkQ" outgoing="_30wH2tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJ09XWEem1l5O0R0OWkQ" name="RightHandSide@60031791">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ1NXWEem1l5O0R0OWkQ" target="_30wtp9XWEem1l5O0R0OWkQ" source="_30wtpdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_30wJ1dXWEem1l5O0R0OWkQ" name="ForAllOrExistsOrOneExpression@60031791" mode="parallel" outputElement="_30wtpdXWEem1l5O0R0OWkQ" inputElement="_30wtpNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ1tXWEem1l5O0R0OWkQ" target="_30wtotXWEem1l5O0R0OWkQ" source="_30wtodXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wJ19XWEem1l5O0R0OWkQ" target="_30wtotXWEem1l5O0R0OWkQ" source="_30wJ29XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ2NXWEem1l5O0R0OWkQ" target="_30wto9XWEem1l5O0R0OWkQ" source="_30wtotXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ2dXWEem1l5O0R0OWkQ" target="_30wJ59XWEem1l5O0R0OWkQ" source="_30wtpNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ2tXWEem1l5O0R0OWkQ" target="_30wtpdXWEem1l5O0R0OWkQ" source="_30wtodXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJ29XWEem1l5O0R0OWkQ" name="Compute(Merge(forAll@60031791))" outgoing="_30wJ19XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ3NXWEem1l5O0R0OWkQ" target="_30wJ79XWEem1l5O0R0OWkQ" source="_30wJ59XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ3dXWEem1l5O0R0OWkQ" target="_30wJ6dXWEem1l5O0R0OWkQ" source="_30wJ79XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ3tXWEem1l5O0R0OWkQ" target="_30wJ-9XWEem1l5O0R0OWkQ" source="_30wJ7NXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ39XWEem1l5O0R0OWkQ" target="_30wJ_tXWEem1l5O0R0OWkQ" source="_30wJ8dXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_30wJ4NXWEem1l5O0R0OWkQ" target="_30wJ9dXWEem1l5O0R0OWkQ" source="_30wJ6NXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_30wJ4dXWEem1l5O0R0OWkQ" target="_30wJ9dXWEem1l5O0R0OWkQ" source="_30wJ8NXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ4tXWEem1l5O0R0OWkQ" target="_30wtoNXWEem1l5O0R0OWkQ" source="_30wJ59XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ49XWEem1l5O0R0OWkQ" target="_30wtoNXWEem1l5O0R0OWkQ" source="_30wJ99XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ5NXWEem1l5O0R0OWkQ" target="_30wKBNXWEem1l5O0R0OWkQ" source="_30wtoNXWEem1l5O0R0OWkQ">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_30wJ5dXWEem1l5O0R0OWkQ" name="Value(false)"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ5tXWEem1l5O0R0OWkQ" target="_30wtodXWEem1l5O0R0OWkQ" source="_30wKBNXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_30wJ59XWEem1l5O0R0OWkQ" name="Fork(e)" incoming="_30wJ2dXWEem1l5O0R0OWkQ" outgoing="_30wJ3NXWEem1l5O0R0OWkQ _30wJ4tXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wJ6NXWEem1l5O0R0OWkQ" name="Read(age)" outgoing="_30wJ4NXWEem1l5O0R0OWkQ" structuralFeature="_30vgx9XWEem1l5O0R0OWkQ">
                    <object xmi:id="_30wJ6dXWEem1l5O0R0OWkQ" name="Read(age).object" incoming="_30wJ3dXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJ6tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJ69XWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30wJ7NXWEem1l5O0R0OWkQ" name="Read(age).result" outgoing="_30wJ3tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJ7dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJ7tXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_30wJ79XWEem1l5O0R0OWkQ" name="Fork(Fork(e))" incoming="_30wJ3NXWEem1l5O0R0OWkQ" outgoing="_30wJ3dXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wJ8NXWEem1l5O0R0OWkQ" name="Value(65)" outgoing="_30wJ4dXWEem1l5O0R0OWkQ">
                    <result xmi:id="_30wJ8dXWEem1l5O0R0OWkQ" name="Value(65).result" outgoing="_30wJ39XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJ8tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJ89XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_30wJ9NXWEem1l5O0R0OWkQ" value="65">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wJ9dXWEem1l5O0R0OWkQ" name="Node(Call(&lt;=))" incoming="_30wJ4NXWEem1l5O0R0OWkQ _30wJ4dXWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_30wJ9tXWEem1l5O0R0OWkQ" target="_30wJ99XWEem1l5O0R0OWkQ" source="_30wKAdXWEem1l5O0R0OWkQ"/>
                    <structuredNodeOutput xmi:id="_30wJ99XWEem1l5O0R0OWkQ" name="Output(Call(&lt;=).result(result))" incoming="_30wJ9tXWEem1l5O0R0OWkQ" outgoing="_30wJ49XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJ-NXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJ-dXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wJ-tXWEem1l5O0R0OWkQ" name="Call(&lt;=)">
                      <argument xmi:id="_30wJ-9XWEem1l5O0R0OWkQ" name="Call(&lt;=).argument(x)" incoming="_30wJ3tXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJ_NXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wJ_dXWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <argument xmi:id="_30wJ_tXWEem1l5O0R0OWkQ" name="Call(&lt;=).argument(y)" incoming="_30wJ39XWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wJ_9XWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wKANXWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_30wKAdXWEem1l5O0R0OWkQ" name="Call(&lt;=).result(result)" outgoing="_30wJ9tXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wKAtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wKA9XWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                    </node>
                  </node>
                  <node xmi:type="uml:MergeNode" xmi:id="_30wKBNXWEem1l5O0R0OWkQ" name="Merge(forAll@60031791)" incoming="_30wJ5NXWEem1l5O0R0OWkQ" outgoing="_30wJ5tXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_30wtoNXWEem1l5O0R0OWkQ" name="Decision(forAll@60031791)" incoming="_30wJ4tXWEem1l5O0R0OWkQ _30wJ49XWEem1l5O0R0OWkQ" outgoing="_30wJ5NXWEem1l5O0R0OWkQ" decisionInputFlow="_30wJ49XWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_30wtodXWEem1l5O0R0OWkQ" name="Fork(Merge(forAll@60031791))" incoming="_30wJ5tXWEem1l5O0R0OWkQ" outgoing="_30wJ1tXWEem1l5O0R0OWkQ _30wJ2tXWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:JoinNode" xmi:id="_30wtotXWEem1l5O0R0OWkQ" name="Join(Merge(forAll@60031791))" incoming="_30wJ1tXWEem1l5O0R0OWkQ _30wJ19XWEem1l5O0R0OWkQ" outgoing="_30wJ2NXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ActivityFinalNode" xmi:id="_30wto9XWEem1l5O0R0OWkQ" name="ActivityFinal(Merge(forAll@60031791))" incoming="_30wJ2NXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wtpNXWEem1l5O0R0OWkQ" name="ForAllOrExistsOrOneExpression@60031791.inputElement" incoming="_30wHwNXWEem1l5O0R0OWkQ" outgoing="_30wJ2dXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsInput="_30wJ1dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wtpdXWEem1l5O0R0OWkQ" name="ForAllOrExistsOrOneExpression@60031791.outputElement" incoming="_30wJ2tXWEem1l5O0R0OWkQ" outgoing="_30wJ1NXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsOutput="_30wJ1dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wtptXWEem1l5O0R0OWkQ" name="Call(IsEmpty)">
                <argument xmi:id="_30wtp9XWEem1l5O0R0OWkQ" name="Call(IsEmpty).argument(seq)" incoming="_30wJ1NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wtqNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wtqdXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_30wtqtXWEem1l5O0R0OWkQ" name="Call(IsEmpty).result()" outgoing="_30wJ0dXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wtq9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wtrNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wtrdXWEem1l5O0R0OWkQ" name="ExpressionStatement@47065b92" incoming="_30wHw9XWEem1l5O0R0OWkQ" outgoing="_30wHxdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wtrtXWEem1l5O0R0OWkQ" target="_30wtr9XWEem1l5O0R0OWkQ" source="_30wt5dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wtr9XWEem1l5O0R0OWkQ" name="Fork(exists)@49af55c6" incoming="_30wtrtXWEem1l5O0R0OWkQ" outgoing="_30wH29XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wtsNXWEem1l5O0R0OWkQ" name="RightHandSide@25677cfb">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wtsdXWEem1l5O0R0OWkQ" target="_30wt4tXWEem1l5O0R0OWkQ" source="_30wt4NXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_30wtstXWEem1l5O0R0OWkQ" name="ForAllOrExistsOrOneExpression@25677cfb" mode="parallel" outputElement="_30wt4NXWEem1l5O0R0OWkQ" inputElement="_30wt39XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wts9XWEem1l5O0R0OWkQ" target="_30wt3dXWEem1l5O0R0OWkQ" source="_30wt3NXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wttNXWEem1l5O0R0OWkQ" target="_30wt3dXWEem1l5O0R0OWkQ" source="_30wtuNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wttdXWEem1l5O0R0OWkQ" target="_30wt3tXWEem1l5O0R0OWkQ" source="_30wt3dXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wtttXWEem1l5O0R0OWkQ" target="_30wtwtXWEem1l5O0R0OWkQ" source="_30wt39XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wtt9XWEem1l5O0R0OWkQ" target="_30wt4NXWEem1l5O0R0OWkQ" source="_30wt3NXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wtuNXWEem1l5O0R0OWkQ" name="Compute(Merge(exists@25677cfb))" outgoing="_30wttNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wtudXWEem1l5O0R0OWkQ" target="_30wtytXWEem1l5O0R0OWkQ" source="_30wtwtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wtutXWEem1l5O0R0OWkQ" target="_30wtxNXWEem1l5O0R0OWkQ" source="_30wtytXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wtu9XWEem1l5O0R0OWkQ" target="_30wt0dXWEem1l5O0R0OWkQ" source="_30wtx9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wtvNXWEem1l5O0R0OWkQ" target="_30wt19XWEem1l5O0R0OWkQ" source="_30wtzNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wtvdXWEem1l5O0R0OWkQ" target="_30wt29XWEem1l5O0R0OWkQ" source="_30wtwtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wtvtXWEem1l5O0R0OWkQ" target="_30wt29XWEem1l5O0R0OWkQ" source="_30wt1NXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wtv9XWEem1l5O0R0OWkQ" target="_30wt2tXWEem1l5O0R0OWkQ" source="_30wt29XWEem1l5O0R0OWkQ">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_30wtwNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wtwdXWEem1l5O0R0OWkQ" target="_30wt3NXWEem1l5O0R0OWkQ" source="_30wt2tXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_30wtwtXWEem1l5O0R0OWkQ" name="Fork(e)" incoming="_30wtttXWEem1l5O0R0OWkQ" outgoing="_30wtudXWEem1l5O0R0OWkQ _30wtvdXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wtw9XWEem1l5O0R0OWkQ" name="Read(name)" structuralFeature="_30vgzdXWEem1l5O0R0OWkQ">
                    <object xmi:id="_30wtxNXWEem1l5O0R0OWkQ" name="Read(name).object" incoming="_30wtutXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wtxdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wtxtXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30wtx9XWEem1l5O0R0OWkQ" name="Read(name).result" outgoing="_30wtu9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wtyNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wtydXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_30wtytXWEem1l5O0R0OWkQ" name="Fork(Fork(e))" incoming="_30wtudXWEem1l5O0R0OWkQ" outgoing="_30wtutXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wty9XWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;)">
                    <result xmi:id="_30wtzNXWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;).result" outgoing="_30wtvNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wtzdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wtztXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_30wtz9XWEem1l5O0R0OWkQ" value="Joan">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_30wt0NXWEem1l5O0R0OWkQ" name="Test(==)">
                    <first xmi:id="_30wt0dXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_30wtu9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wt0tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wt09XWEem1l5O0R0OWkQ" value="1"/>
                    </first>
                    <result xmi:id="_30wt1NXWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_30wtvtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wt1dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wt1tXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <second xmi:id="_30wt19XWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_30wtvNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wt2NXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wt2dXWEem1l5O0R0OWkQ" value="1"/>
                    </second>
                  </node>
                  <node xmi:type="uml:MergeNode" xmi:id="_30wt2tXWEem1l5O0R0OWkQ" name="Merge(exists@25677cfb)" incoming="_30wtv9XWEem1l5O0R0OWkQ" outgoing="_30wtwdXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_30wt29XWEem1l5O0R0OWkQ" name="Decision(exists@25677cfb)" incoming="_30wtvdXWEem1l5O0R0OWkQ _30wtvtXWEem1l5O0R0OWkQ" outgoing="_30wtv9XWEem1l5O0R0OWkQ" decisionInputFlow="_30wtvtXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_30wt3NXWEem1l5O0R0OWkQ" name="Fork(Merge(exists@25677cfb))" incoming="_30wtwdXWEem1l5O0R0OWkQ" outgoing="_30wts9XWEem1l5O0R0OWkQ _30wtt9XWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:JoinNode" xmi:id="_30wt3dXWEem1l5O0R0OWkQ" name="Join(Merge(exists@25677cfb))" incoming="_30wts9XWEem1l5O0R0OWkQ _30wttNXWEem1l5O0R0OWkQ" outgoing="_30wttdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ActivityFinalNode" xmi:id="_30wt3tXWEem1l5O0R0OWkQ" name="ActivityFinal(Merge(exists@25677cfb))" incoming="_30wttdXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wt39XWEem1l5O0R0OWkQ" name="ForAllOrExistsOrOneExpression@25677cfb.inputElement" incoming="_30wHwtXWEem1l5O0R0OWkQ" outgoing="_30wtttXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsInput="_30wtstXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wt4NXWEem1l5O0R0OWkQ" name="ForAllOrExistsOrOneExpression@25677cfb.outputElement" incoming="_30wtt9XWEem1l5O0R0OWkQ" outgoing="_30wtsdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsOutput="_30wtstXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wt4dXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
                <argument xmi:id="_30wt4tXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_30wtsdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wt49XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wt5NXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_30wt5dXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_30wtrtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wt5tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wt59XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wt6NXWEem1l5O0R0OWkQ" name="ExpressionStatement@483a2e42" incoming="_30wHxdXWEem1l5O0R0OWkQ" outgoing="_30wHx9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wt6dXWEem1l5O0R0OWkQ" target="_30wt6tXWEem1l5O0R0OWkQ" source="_30wuJtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wt6tXWEem1l5O0R0OWkQ" name="Fork(one)@700f3f81" incoming="_30wt6dXWEem1l5O0R0OWkQ" outgoing="_30wH3NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wt69XWEem1l5O0R0OWkQ" name="RightHandSide@a75682f">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wt7NXWEem1l5O0R0OWkQ" target="_30wuF9XWEem1l5O0R0OWkQ" source="_30wuFdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wt7dXWEem1l5O0R0OWkQ" target="_30wuI9XWEem1l5O0R0OWkQ" source="_30wuGtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wt7tXWEem1l5O0R0OWkQ" target="_30wuKdXWEem1l5O0R0OWkQ" source="_30wuHtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_30wt79XWEem1l5O0R0OWkQ" name="ForAllOrExistsOrOneExpression@a75682f" mode="parallel" outputElement="_30wuFdXWEem1l5O0R0OWkQ" inputElement="_30wuFNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wt8NXWEem1l5O0R0OWkQ" target="_30wuAtXWEem1l5O0R0OWkQ" source="_30wt-tXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wt8dXWEem1l5O0R0OWkQ" target="_30wt_NXWEem1l5O0R0OWkQ" source="_30wuAtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wt8tXWEem1l5O0R0OWkQ" target="_30wuCdXWEem1l5O0R0OWkQ" source="_30wt_9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wt89XWEem1l5O0R0OWkQ" target="_30wuD9XWEem1l5O0R0OWkQ" source="_30wuBNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wt9NXWEem1l5O0R0OWkQ" target="_30wuE9XWEem1l5O0R0OWkQ" source="_30wt-tXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wt9dXWEem1l5O0R0OWkQ" target="_30wuE9XWEem1l5O0R0OWkQ" source="_30wuDNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wt9tXWEem1l5O0R0OWkQ" target="_30wuEtXWEem1l5O0R0OWkQ" source="_30wuE9XWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_30wt99XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wt-NXWEem1l5O0R0OWkQ" target="_30wt-tXWEem1l5O0R0OWkQ" source="_30wuFNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wt-dXWEem1l5O0R0OWkQ" target="_30wuFdXWEem1l5O0R0OWkQ" source="_30wuEtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_30wt-tXWEem1l5O0R0OWkQ" name="Fork(e)" incoming="_30wt-NXWEem1l5O0R0OWkQ" outgoing="_30wt8NXWEem1l5O0R0OWkQ _30wt9NXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wt-9XWEem1l5O0R0OWkQ" name="Read(title)" structuralFeature="_30vg0NXWEem1l5O0R0OWkQ">
                  <object xmi:id="_30wt_NXWEem1l5O0R0OWkQ" name="Read(title).object" incoming="_30wt8dXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wt_dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wt_tXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30wt_9XWEem1l5O0R0OWkQ" name="Read(title).result" outgoing="_30wt8tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuANXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuAdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30wuAtXWEem1l5O0R0OWkQ" name="Fork(Fork(e))" incoming="_30wt8NXWEem1l5O0R0OWkQ" outgoing="_30wt8dXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wuA9XWEem1l5O0R0OWkQ" name="Value(&quot;President&quot;)">
                  <result xmi:id="_30wuBNXWEem1l5O0R0OWkQ" name="Value(&quot;President&quot;).result" outgoing="_30wt89XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuBdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuBtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30wuB9XWEem1l5O0R0OWkQ" value="President">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_30wuCNXWEem1l5O0R0OWkQ" name="Test(==)">
                  <first xmi:id="_30wuCdXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_30wt8tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuCtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuC9XWEem1l5O0R0OWkQ" value="1"/>
                  </first>
                  <result xmi:id="_30wuDNXWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_30wt9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuDdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuDtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <second xmi:id="_30wuD9XWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_30wt89XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuENXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuEdXWEem1l5O0R0OWkQ" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:MergeNode" xmi:id="_30wuEtXWEem1l5O0R0OWkQ" name="Merge(one@a75682f)" incoming="_30wt9tXWEem1l5O0R0OWkQ" outgoing="_30wt-dXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_30wuE9XWEem1l5O0R0OWkQ" name="Decision(one@a75682f)" incoming="_30wt9NXWEem1l5O0R0OWkQ _30wt9dXWEem1l5O0R0OWkQ" outgoing="_30wt9tXWEem1l5O0R0OWkQ" decisionInputFlow="_30wt9dXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wuFNXWEem1l5O0R0OWkQ" name="ForAllOrExistsOrOneExpression@a75682f.inputElement" incoming="_30wHxNXWEem1l5O0R0OWkQ" outgoing="_30wt-NXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsInput="_30wt79XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wuFdXWEem1l5O0R0OWkQ" name="ForAllOrExistsOrOneExpression@a75682f.outputElement" incoming="_30wt-dXWEem1l5O0R0OWkQ" outgoing="_30wt7NXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsOutput="_30wt79XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wuFtXWEem1l5O0R0OWkQ" name="Call(ListSize)">
                <argument xmi:id="_30wuF9XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30wt7NXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuGNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuGdXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_30wuGtXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30wt7dXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuG9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuHNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wuHdXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_30wuHtXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30wt7tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuH9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuINXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_30wuIdXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_30wuItXWEem1l5O0R0OWkQ" name="Test(Test(=1))">
                <first xmi:id="_30wuI9XWEem1l5O0R0OWkQ" name="Test(Test(=1)).first" incoming="_30wt7dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuJNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuJdXWEem1l5O0R0OWkQ" value="1"/>
                </first>
                <result xmi:id="_30wuJtXWEem1l5O0R0OWkQ" name="Test(Test(=1)).result" outgoing="_30wt6dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuJ9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuKNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <second xmi:id="_30wuKdXWEem1l5O0R0OWkQ" name="Test(Test(=1)).second" incoming="_30wt7tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuKtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuK9XWEem1l5O0R0OWkQ" value="1"/>
                </second>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wuLNXWEem1l5O0R0OWkQ" name="ExpressionStatement@4d478304" incoming="_30wHx9XWEem1l5O0R0OWkQ" outgoing="_30wHyNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuLdXWEem1l5O0R0OWkQ" target="_30wuLtXWEem1l5O0R0OWkQ" source="_30wuf9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wuLtXWEem1l5O0R0OWkQ" name="Fork(unique)@6fe66191" incoming="_30wuLdXWEem1l5O0R0OWkQ" outgoing="_30wH3dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wuL9XWEem1l5O0R0OWkQ" name="RightHandSide@e3248c9">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuMNXWEem1l5O0R0OWkQ" target="_30wuRtXWEem1l5O0R0OWkQ" source="_30wuRNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuMdXWEem1l5O0R0OWkQ" target="_30wuTtXWEem1l5O0R0OWkQ" source="_30wuRtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuMtXWEem1l5O0R0OWkQ" target="_30wuedXWEem1l5O0R0OWkQ" source="_30wuRtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30wuM9XWEem1l5O0R0OWkQ" target="_30wuR9XWEem1l5O0R0OWkQ" source="_30wuRdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuNNXWEem1l5O0R0OWkQ" target="_30wufNXWEem1l5O0R0OWkQ" source="_30wuetXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_30wuNdXWEem1l5O0R0OWkQ" name="IsUniqueExpression@e3248c9" mode="parallel" outputElement="_30wuRNXWEem1l5O0R0OWkQ" inputElement="_30wuQ9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuNtXWEem1l5O0R0OWkQ" target="_30wuQtXWEem1l5O0R0OWkQ" source="_30wuOtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuN9XWEem1l5O0R0OWkQ" target="_30wuPNXWEem1l5O0R0OWkQ" source="_30wuQtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuONXWEem1l5O0R0OWkQ" target="_30wuOtXWEem1l5O0R0OWkQ" source="_30wuQ9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuOdXWEem1l5O0R0OWkQ" target="_30wuRNXWEem1l5O0R0OWkQ" source="_30wuP9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ForkNode" xmi:id="_30wuOtXWEem1l5O0R0OWkQ" name="Fork(e)" incoming="_30wuONXWEem1l5O0R0OWkQ" outgoing="_30wuNtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wuO9XWEem1l5O0R0OWkQ" name="Read(id)" structuralFeature="_30vg09XWEem1l5O0R0OWkQ">
                  <object xmi:id="_30wuPNXWEem1l5O0R0OWkQ" name="Read(id).object" incoming="_30wuN9XWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuPdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuPtXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30wuP9XWEem1l5O0R0OWkQ" name="Read(id).result" outgoing="_30wuOdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuQNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuQdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30wuQtXWEem1l5O0R0OWkQ" name="Fork(Fork(e))" incoming="_30wuNtXWEem1l5O0R0OWkQ" outgoing="_30wuN9XWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wuQ9XWEem1l5O0R0OWkQ" name="IsUniqueExpression@e3248c9.inputElement" incoming="_30wHxtXWEem1l5O0R0OWkQ" outgoing="_30wuONXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsInput="_30wuNdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wuRNXWEem1l5O0R0OWkQ" name="IsUniqueExpression@e3248c9.outputElement" incoming="_30wuOdXWEem1l5O0R0OWkQ" outgoing="_30wuMNXWEem1l5O0R0OWkQ" regionAsOutput="_30wuNdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wuRdXWEem1l5O0R0OWkQ" name="Node(Fork(IsUniqueExpression@e3248c9.outputElement))" outgoing="_30wuM9XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ForkNode" xmi:id="_30wuRtXWEem1l5O0R0OWkQ" name="Fork(IsUniqueExpression@e3248c9.outputElement)" incoming="_30wuMNXWEem1l5O0R0OWkQ" outgoing="_30wuMdXWEem1l5O0R0OWkQ _30wuMtXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_30wuR9XWEem1l5O0R0OWkQ" name="Uniqueness(IsUniqueExpression@e3248c9)" incoming="_30wuM9XWEem1l5O0R0OWkQ" mode="parallel" outputElement="_30wuetXWEem1l5O0R0OWkQ" inputElement="_30wuedXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuSNXWEem1l5O0R0OWkQ" target="_30wuXNXWEem1l5O0R0OWkQ" source="_30wuTtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuSdXWEem1l5O0R0OWkQ" target="_30wud9XWEem1l5O0R0OWkQ" source="_30wudtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wuStXWEem1l5O0R0OWkQ" target="_30wud9XWEem1l5O0R0OWkQ" source="_30wuUdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuS9XWEem1l5O0R0OWkQ" target="_30wueNXWEem1l5O0R0OWkQ" source="_30wud9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuTNXWEem1l5O0R0OWkQ" target="_30wuWtXWEem1l5O0R0OWkQ" source="_30wuedXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuTdXWEem1l5O0R0OWkQ" target="_30wuetXWEem1l5O0R0OWkQ" source="_30wudtXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_30wuTtXWEem1l5O0R0OWkQ" name="Uniqueness(IsUniqueExpression@e3248c9).input(Fork(IsUniqueExpression@e3248c9.outputElement))" incoming="_30wuMdXWEem1l5O0R0OWkQ" outgoing="_30wuSNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuT9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuUNXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeInput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wuUdXWEem1l5O0R0OWkQ" name="Compute(Merge(uniqueness@e3248c9))" outgoing="_30wuStXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuUtXWEem1l5O0R0OWkQ" target="_30wuX9XWEem1l5O0R0OWkQ" source="_30wuWtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuU9XWEem1l5O0R0OWkQ" target="_30wua9XWEem1l5O0R0OWkQ" source="_30wuYtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuVNXWEem1l5O0R0OWkQ" target="_30wucdXWEem1l5O0R0OWkQ" source="_30wuZtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuVdXWEem1l5O0R0OWkQ" target="_30wuddXWEem1l5O0R0OWkQ" source="_30wuWtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuVtXWEem1l5O0R0OWkQ" target="_30wuddXWEem1l5O0R0OWkQ" source="_30wubtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuV9XWEem1l5O0R0OWkQ" target="_30wudNXWEem1l5O0R0OWkQ" source="_30wuddXWEem1l5O0R0OWkQ">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_30wuWNXWEem1l5O0R0OWkQ" name="Value(false)"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuWdXWEem1l5O0R0OWkQ" target="_30wudtXWEem1l5O0R0OWkQ" source="_30wudNXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_30wuWtXWEem1l5O0R0OWkQ" name="Fork(each)" incoming="_30wuTNXWEem1l5O0R0OWkQ" outgoing="_30wuUtXWEem1l5O0R0OWkQ _30wuVdXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wuW9XWEem1l5O0R0OWkQ" name="Call(Count)">
                    <argument xmi:id="_30wuXNXWEem1l5O0R0OWkQ" name="Call(Count).argument(seq)" incoming="_30wuSNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuXdXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuXtXWEem1l5O0R0OWkQ" value="*"/>
                    </argument>
                    <argument xmi:id="_30wuX9XWEem1l5O0R0OWkQ" name="Call(Count).argument(element)" incoming="_30wuUtXWEem1l5O0R0OWkQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuYNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuYdXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_30wuYtXWEem1l5O0R0OWkQ" name="Call(Count).result()" outgoing="_30wuU9XWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuY9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuZNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Count"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wuZdXWEem1l5O0R0OWkQ" name="Value(1)">
                    <result xmi:id="_30wuZtXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30wuVNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuZ9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuaNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_30wuadXWEem1l5O0R0OWkQ" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_30wuatXWEem1l5O0R0OWkQ" name="Test(=1)">
                    <first xmi:id="_30wua9XWEem1l5O0R0OWkQ" name="Test(=1).first" incoming="_30wuU9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wubNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wubdXWEem1l5O0R0OWkQ" value="1"/>
                    </first>
                    <result xmi:id="_30wubtXWEem1l5O0R0OWkQ" name="Test(=1).result" outgoing="_30wuVtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wub9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wucNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <second xmi:id="_30wucdXWEem1l5O0R0OWkQ" name="Test(=1).second" incoming="_30wuVNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuctXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuc9XWEem1l5O0R0OWkQ" value="1"/>
                    </second>
                  </node>
                  <node xmi:type="uml:MergeNode" xmi:id="_30wudNXWEem1l5O0R0OWkQ" name="Merge(uniqueness@e3248c9)" incoming="_30wuV9XWEem1l5O0R0OWkQ" outgoing="_30wuWdXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_30wuddXWEem1l5O0R0OWkQ" name="Decision(uniqueness@e3248c9)" incoming="_30wuVdXWEem1l5O0R0OWkQ _30wuVtXWEem1l5O0R0OWkQ" outgoing="_30wuV9XWEem1l5O0R0OWkQ" decisionInputFlow="_30wuVtXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_30wudtXWEem1l5O0R0OWkQ" name="Fork(Merge(uniqueness@e3248c9))" incoming="_30wuWdXWEem1l5O0R0OWkQ" outgoing="_30wuSdXWEem1l5O0R0OWkQ _30wuTdXWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:JoinNode" xmi:id="_30wud9XWEem1l5O0R0OWkQ" name="Join(Merge(uniqueness@e3248c9))" incoming="_30wuSdXWEem1l5O0R0OWkQ _30wuStXWEem1l5O0R0OWkQ" outgoing="_30wuS9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ActivityFinalNode" xmi:id="_30wueNXWEem1l5O0R0OWkQ" name="ActivityFinal(Merge(uniqueness@e3248c9))" incoming="_30wuS9XWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wuedXWEem1l5O0R0OWkQ" name="Uniqueness(IsUniqueExpression@e3248c9).inputElement" incoming="_30wuMtXWEem1l5O0R0OWkQ" outgoing="_30wuTNXWEem1l5O0R0OWkQ" regionAsInput="_30wuR9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wuetXWEem1l5O0R0OWkQ" name="Uniqueness(IsUniqueExpression@e3248c9).outputElement" incoming="_30wuTdXWEem1l5O0R0OWkQ" outgoing="_30wuNNXWEem1l5O0R0OWkQ" regionAsOutput="_30wuR9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wue9XWEem1l5O0R0OWkQ" name="Call(IsEmpty)">
                <argument xmi:id="_30wufNXWEem1l5O0R0OWkQ" name="Call(IsEmpty).argument(seq)" incoming="_30wuNNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wufdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuftXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_30wuf9XWEem1l5O0R0OWkQ" name="Call(IsEmpty).result()" outgoing="_30wuLdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wugNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wugdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wugtXWEem1l5O0R0OWkQ" name="ExpressionStatement@23634480" incoming="_30wHyNXWEem1l5O0R0OWkQ" outgoing="_30wHydXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wug9XWEem1l5O0R0OWkQ" target="_30wuhNXWEem1l5O0R0OWkQ" source="_30wukdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wuhNXWEem1l5O0R0OWkQ" name="Fork(jack)@6aae0b45" incoming="_30wug9XWEem1l5O0R0OWkQ" outgoing="_30wH3tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wuhdXWEem1l5O0R0OWkQ" name="RightHandSide@614aa2f8">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuhtXWEem1l5O0R0OWkQ" target="_30wui9XWEem1l5O0R0OWkQ" source="_30wuwtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuh9XWEem1l5O0R0OWkQ" target="_30wuyNXWEem1l5O0R0OWkQ" source="_30wuxNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30wuiNXWEem1l5O0R0OWkQ" target="_30wuitXWEem1l5O0R0OWkQ" source="_30wulNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuidXWEem1l5O0R0OWkQ" target="_30wujtXWEem1l5O0R0OWkQ" source="_30wuyNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wuitXWEem1l5O0R0OWkQ" name="Call(At)" incoming="_30wuiNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_30wui9XWEem1l5O0R0OWkQ" name="Call(At).argument(seq)" incoming="_30wuhtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wujNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wujdXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_30wujtXWEem1l5O0R0OWkQ" name="Call(At).argument(index)" incoming="_30wuidXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuj9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wukNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_30wukdXWEem1l5O0R0OWkQ" name="Call(At).result()" outgoing="_30wug9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuktXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuk9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wulNXWEem1l5O0R0OWkQ" name="Tuple@57003bc8" outgoing="_30wuiNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuldXWEem1l5O0R0OWkQ" target="_30wuwdXWEem1l5O0R0OWkQ" source="_30wumdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wultXWEem1l5O0R0OWkQ" target="_30wunNXWEem1l5O0R0OWkQ" source="_30wul9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wul9XWEem1l5O0R0OWkQ" name="Primary(SelectOrRejectExpression@acea90b)" outgoing="_30wultXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ReadExtentAction" xmi:id="_30wumNXWEem1l5O0R0OWkQ" name="ReadExtent(Employee)" classifier="_30vgw9XWEem1l5O0R0OWkQ">
                    <result xmi:id="_30wumdXWEem1l5O0R0OWkQ" name="ReadExtent(Employee).result" outgoing="_30wuldXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wumtXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wum9XWEem1l5O0R0OWkQ" value="*"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_30wunNXWEem1l5O0R0OWkQ" name="SelectOrRejectExpression@acea90b" incoming="_30wultXWEem1l5O0R0OWkQ" mode="parallel" outputElement="_30wuwtXWEem1l5O0R0OWkQ" inputElement="_30wuwdXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wundXWEem1l5O0R0OWkQ" target="_30wur9XWEem1l5O0R0OWkQ" source="_30wup9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuntXWEem1l5O0R0OWkQ" target="_30wuqdXWEem1l5O0R0OWkQ" source="_30wur9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wun9XWEem1l5O0R0OWkQ" target="_30wuttXWEem1l5O0R0OWkQ" source="_30wurNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuoNXWEem1l5O0R0OWkQ" target="_30wuvNXWEem1l5O0R0OWkQ" source="_30wusdXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuodXWEem1l5O0R0OWkQ" target="_30wuwNXWEem1l5O0R0OWkQ" source="_30wup9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuotXWEem1l5O0R0OWkQ" target="_30wuwNXWEem1l5O0R0OWkQ" source="_30wuudXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuo9XWEem1l5O0R0OWkQ" target="_30wuv9XWEem1l5O0R0OWkQ" source="_30wuwNXWEem1l5O0R0OWkQ">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_30wupNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wupdXWEem1l5O0R0OWkQ" target="_30wup9XWEem1l5O0R0OWkQ" source="_30wuwdXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuptXWEem1l5O0R0OWkQ" target="_30wuwtXWEem1l5O0R0OWkQ" source="_30wuv9XWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_30wup9XWEem1l5O0R0OWkQ" name="Fork(e)" incoming="_30wupdXWEem1l5O0R0OWkQ" outgoing="_30wundXWEem1l5O0R0OWkQ _30wuodXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wuqNXWEem1l5O0R0OWkQ" name="Read(name)" structuralFeature="_30vgzdXWEem1l5O0R0OWkQ">
                    <object xmi:id="_30wuqdXWEem1l5O0R0OWkQ" name="Read(name).object" incoming="_30wuntXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuqtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuq9XWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30wurNXWEem1l5O0R0OWkQ" name="Read(name).result" outgoing="_30wun9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wurdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wurtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_30wur9XWEem1l5O0R0OWkQ" name="Fork(Fork(e))" incoming="_30wundXWEem1l5O0R0OWkQ" outgoing="_30wuntXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wusNXWEem1l5O0R0OWkQ" name="Value(&quot;Jack&quot;)">
                    <result xmi:id="_30wusdXWEem1l5O0R0OWkQ" name="Value(&quot;Jack&quot;).result" outgoing="_30wuoNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wustXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wus9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_30wutNXWEem1l5O0R0OWkQ" value="Jack">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_30wutdXWEem1l5O0R0OWkQ" name="Test(==)">
                    <first xmi:id="_30wuttXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_30wun9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wut9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuuNXWEem1l5O0R0OWkQ" value="1"/>
                    </first>
                    <result xmi:id="_30wuudXWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_30wuotXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuutXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuu9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <second xmi:id="_30wuvNXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_30wuoNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuvdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuvtXWEem1l5O0R0OWkQ" value="1"/>
                    </second>
                  </node>
                  <node xmi:type="uml:MergeNode" xmi:id="_30wuv9XWEem1l5O0R0OWkQ" name="Merge(select@acea90b)" incoming="_30wuo9XWEem1l5O0R0OWkQ" outgoing="_30wuptXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_30wuwNXWEem1l5O0R0OWkQ" name="Decision(select@acea90b)" incoming="_30wuodXWEem1l5O0R0OWkQ _30wuotXWEem1l5O0R0OWkQ" outgoing="_30wuo9XWEem1l5O0R0OWkQ" decisionInputFlow="_30wuotXWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30wuwdXWEem1l5O0R0OWkQ" name="SelectOrRejectExpression@acea90b.inputElement" incoming="_30wuldXWEem1l5O0R0OWkQ" outgoing="_30wupdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsInput="_30wunNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30wuwtXWEem1l5O0R0OWkQ" name="SelectOrRejectExpression@acea90b.outputElement" incoming="_30wuptXWEem1l5O0R0OWkQ" outgoing="_30wuhtXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsOutput="_30wunNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wuw9XWEem1l5O0R0OWkQ" name="Value(1)">
                  <result xmi:id="_30wuxNXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30wuh9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wuxdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wuxtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_30wux9XWEem1l5O0R0OWkQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_30wuyNXWEem1l5O0R0OWkQ" name="Fork(Call(At).argument(index))" incoming="_30wuh9XWEem1l5O0R0OWkQ" outgoing="_30wuidXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wuydXWEem1l5O0R0OWkQ" name="ExpressionStatement@abbdb8e" incoming="_30wHydXWEem1l5O0R0OWkQ" outgoing="_30wHytXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuytXWEem1l5O0R0OWkQ" target="_30wuy9XWEem1l5O0R0OWkQ" source="_30wu2NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wuy9XWEem1l5O0R0OWkQ" name="Fork(joan)@4b0d7f62" incoming="_30wuytXWEem1l5O0R0OWkQ" outgoing="_30wH39XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wuzNXWEem1l5O0R0OWkQ" name="RightHandSide@5888392f">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuzdXWEem1l5O0R0OWkQ" target="_30wu0tXWEem1l5O0R0OWkQ" source="_30wvCdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wuztXWEem1l5O0R0OWkQ" target="_30wvD9XWEem1l5O0R0OWkQ" source="_30wvC9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30wuz9XWEem1l5O0R0OWkQ" target="_30wu0dXWEem1l5O0R0OWkQ" source="_30wu29XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wu0NXWEem1l5O0R0OWkQ" target="_30wu1dXWEem1l5O0R0OWkQ" source="_30wvD9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wu0dXWEem1l5O0R0OWkQ" name="Call(At)" incoming="_30wuz9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30wu0tXWEem1l5O0R0OWkQ" name="Call(At).argument(seq)" incoming="_30wuzdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wu09XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wu1NXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <argument xmi:id="_30wu1dXWEem1l5O0R0OWkQ" name="Call(At).argument(index)" incoming="_30wu0NXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wu1tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wu19XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_30wu2NXWEem1l5O0R0OWkQ" name="Call(At).result()" outgoing="_30wuytXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wu2dXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wu2tXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wu29XWEem1l5O0R0OWkQ" name="Tuple@21f7fd15" outgoing="_30wuz9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wu3NXWEem1l5O0R0OWkQ" target="_30wvCNXWEem1l5O0R0OWkQ" source="_30wu4NXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30wu3dXWEem1l5O0R0OWkQ" target="_30wu49XWEem1l5O0R0OWkQ" source="_30wu3tXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wu3tXWEem1l5O0R0OWkQ" name="Primary(SelectOrRejectExpression@3967cdc1)" outgoing="_30wu3dXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ReadExtentAction" xmi:id="_30wu39XWEem1l5O0R0OWkQ" name="ReadExtent(Employee)" classifier="_30vgw9XWEem1l5O0R0OWkQ">
                    <result xmi:id="_30wu4NXWEem1l5O0R0OWkQ" name="ReadExtent(Employee).result" outgoing="_30wu3NXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wu4dXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wu4tXWEem1l5O0R0OWkQ" value="*"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_30wu49XWEem1l5O0R0OWkQ" name="SelectOrRejectExpression@3967cdc1" incoming="_30wu3dXWEem1l5O0R0OWkQ" mode="parallel" outputElement="_30wvCdXWEem1l5O0R0OWkQ" inputElement="_30wvCNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wu5NXWEem1l5O0R0OWkQ" target="_30wu9tXWEem1l5O0R0OWkQ" source="_30wu7tXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wu5dXWEem1l5O0R0OWkQ" target="_30wu8NXWEem1l5O0R0OWkQ" source="_30wu9tXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wu5tXWEem1l5O0R0OWkQ" target="_30wu_dXWEem1l5O0R0OWkQ" source="_30wu89XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wu59XWEem1l5O0R0OWkQ" target="_30wvA9XWEem1l5O0R0OWkQ" source="_30wu-NXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wu6NXWEem1l5O0R0OWkQ" target="_30wvB9XWEem1l5O0R0OWkQ" source="_30wu7tXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wu6dXWEem1l5O0R0OWkQ" target="_30wvB9XWEem1l5O0R0OWkQ" source="_30wvANXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wu6tXWEem1l5O0R0OWkQ" target="_30wvBtXWEem1l5O0R0OWkQ" source="_30wvB9XWEem1l5O0R0OWkQ">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_30wu69XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wu7NXWEem1l5O0R0OWkQ" target="_30wu7tXWEem1l5O0R0OWkQ" source="_30wvCNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wu7dXWEem1l5O0R0OWkQ" target="_30wvCdXWEem1l5O0R0OWkQ" source="_30wvBtXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_30wu7tXWEem1l5O0R0OWkQ" name="Fork(e)" incoming="_30wu7NXWEem1l5O0R0OWkQ" outgoing="_30wu5NXWEem1l5O0R0OWkQ _30wu6NXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wu79XWEem1l5O0R0OWkQ" name="Read(name)" structuralFeature="_30vgzdXWEem1l5O0R0OWkQ">
                    <object xmi:id="_30wu8NXWEem1l5O0R0OWkQ" name="Read(name).object" incoming="_30wu5dXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wu8dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wu8tXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30wu89XWEem1l5O0R0OWkQ" name="Read(name).result" outgoing="_30wu5tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wu9NXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wu9dXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_30wu9tXWEem1l5O0R0OWkQ" name="Fork(Fork(e))" incoming="_30wu5NXWEem1l5O0R0OWkQ" outgoing="_30wu5dXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wu99XWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;)">
                    <result xmi:id="_30wu-NXWEem1l5O0R0OWkQ" name="Value(&quot;Joan&quot;).result" outgoing="_30wu59XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wu-dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wu-tXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_30wu-9XWEem1l5O0R0OWkQ" value="Joan">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_30wu_NXWEem1l5O0R0OWkQ" name="Test(==)">
                    <first xmi:id="_30wu_dXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_30wu5tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wu_tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wu_9XWEem1l5O0R0OWkQ" value="1"/>
                    </first>
                    <result xmi:id="_30wvANXWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_30wu6dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvAdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvAtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <second xmi:id="_30wvA9XWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_30wu59XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvBNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvBdXWEem1l5O0R0OWkQ" value="1"/>
                    </second>
                  </node>
                  <node xmi:type="uml:MergeNode" xmi:id="_30wvBtXWEem1l5O0R0OWkQ" name="Merge(select@3967cdc1)" incoming="_30wu6tXWEem1l5O0R0OWkQ" outgoing="_30wu7dXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_30wvB9XWEem1l5O0R0OWkQ" name="Decision(select@3967cdc1)" incoming="_30wu6NXWEem1l5O0R0OWkQ _30wu6dXWEem1l5O0R0OWkQ" outgoing="_30wu6tXWEem1l5O0R0OWkQ" decisionInputFlow="_30wu6dXWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30wvCNXWEem1l5O0R0OWkQ" name="SelectOrRejectExpression@3967cdc1.inputElement" incoming="_30wu3NXWEem1l5O0R0OWkQ" outgoing="_30wu7NXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsInput="_30wu49XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30wvCdXWEem1l5O0R0OWkQ" name="SelectOrRejectExpression@3967cdc1.outputElement" incoming="_30wu7dXWEem1l5O0R0OWkQ" outgoing="_30wuzdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" regionAsOutput="_30wu49XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wvCtXWEem1l5O0R0OWkQ" name="Value(1)">
                  <result xmi:id="_30wvC9XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30wuztXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvDNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvDdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_30wvDtXWEem1l5O0R0OWkQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_30wvD9XWEem1l5O0R0OWkQ" name="Fork(Call(At).argument(index))" incoming="_30wuztXWEem1l5O0R0OWkQ" outgoing="_30wu0NXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvENXWEem1l5O0R0OWkQ" name="ExpressionStatement@4a2aa572" incoming="_30wHytXWEem1l5O0R0OWkQ" outgoing="_30wHy9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvEdXWEem1l5O0R0OWkQ" target="_30wvEtXWEem1l5O0R0OWkQ" source="_30wvFdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wvEtXWEem1l5O0R0OWkQ" name="Fork(myType)@2d558f36" incoming="_30wvEdXWEem1l5O0R0OWkQ" outgoing="_30wHzdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvE9XWEem1l5O0R0OWkQ" name="RightHandSide@2aa5b23d">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wvFNXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_30wvFdXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30wvEdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvFtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvF9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_30wvGNXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvGdXWEem1l5O0R0OWkQ" name="ExpressionStatement@238cd58d" incoming="_30wHy9XWEem1l5O0R0OWkQ" outgoing="_30wHztXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvGtXWEem1l5O0R0OWkQ" target="_30wvG9XWEem1l5O0R0OWkQ" source="_30wvJtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wvG9XWEem1l5O0R0OWkQ" name="Fork(something)@34884474" incoming="_30wvGtXWEem1l5O0R0OWkQ" outgoing="_30wHzNXWEem1l5O0R0OWkQ _30wH0NXWEem1l5O0R0OWkQ _30wH4NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvHNXWEem1l5O0R0OWkQ" name="RightHandSide@34caca22">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvHdXWEem1l5O0R0OWkQ" target="_30wvMNXWEem1l5O0R0OWkQ" source="_30wvIdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvHtXWEem1l5O0R0OWkQ" target="_30wvLdXWEem1l5O0R0OWkQ" source="_30wvMNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30wvH9XWEem1l5O0R0OWkQ" target="_30wvJNXWEem1l5O0R0OWkQ" source="_30wvINXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_30wvINXWEem1l5O0R0OWkQ" name="Create(Something)" outgoing="_30wvH9XWEem1l5O0R0OWkQ" classifier="_30viZ9XWEem1l5O0R0OWkQ">
                <result xmi:id="_30wvIdXWEem1l5O0R0OWkQ" name="Create(Something).result" outgoing="_30wvHdXWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvItXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvI9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvJNXWEem1l5O0R0OWkQ" name="Node(Call(Something))" incoming="_30wvH9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvJdXWEem1l5O0R0OWkQ" target="_30wvJtXWEem1l5O0R0OWkQ" source="_30wvMNXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30wvJtXWEem1l5O0R0OWkQ" name="Output(Fork(Create(Something).result))" incoming="_30wvJdXWEem1l5O0R0OWkQ" outgoing="_30wvGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvJ9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvKNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_30wvKdXWEem1l5O0R0OWkQ" name="Call(Something)" operation="_30vjHtXWEem1l5O0R0OWkQ">
                  <result xmi:id="_30wvKtXWEem1l5O0R0OWkQ" name="Call(Something).result()" type="_30viZ9XWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvK9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvLNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <target xmi:id="_30wvLdXWEem1l5O0R0OWkQ" name="Call(Something).target" incoming="_30wvHtXWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvLtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvL9XWEem1l5O0R0OWkQ" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30wvMNXWEem1l5O0R0OWkQ" name="Fork(Create(Something).result)" incoming="_30wvHdXWEem1l5O0R0OWkQ" outgoing="_30wvHtXWEem1l5O0R0OWkQ _30wvJdXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvMdXWEem1l5O0R0OWkQ" name="ExpressionStatement@19acfc75" incoming="_30wHztXWEem1l5O0R0OWkQ" outgoing="_30wHz9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvMtXWEem1l5O0R0OWkQ" target="_30wvYtXWEem1l5O0R0OWkQ" source="_30wvOtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wvM9XWEem1l5O0R0OWkQ" target="_30wvPtXWEem1l5O0R0OWkQ" source="_30wvNNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvNNXWEem1l5O0R0OWkQ" name="Primary(CollectOrIterateExpression@2f30977b)" outgoing="_30wvM9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvNdXWEem1l5O0R0OWkQ" target="_30wvN9XWEem1l5O0R0OWkQ" source="_30wvPdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wvNtXWEem1l5O0R0OWkQ" name="Read(attribute)" structuralFeature="_30via9XWEem1l5O0R0OWkQ">
                <object xmi:id="_30wvN9XWEem1l5O0R0OWkQ" name="Read(attribute).object" incoming="_30wvNdXWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvONXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvOdXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_30wvOtXWEem1l5O0R0OWkQ" name="Read(attribute).result" outgoing="_30wvMtXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvO9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvPNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_30wvPdXWEem1l5O0R0OWkQ" name="Fork(Fork(something)@34884474)" incoming="_30wHzNXWEem1l5O0R0OWkQ" outgoing="_30wvNdXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_30wvPtXWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@2f30977b" incoming="_30wvM9XWEem1l5O0R0OWkQ" outputElement="_30wvY9XWEem1l5O0R0OWkQ" inputElement="_30wvYtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvP9XWEem1l5O0R0OWkQ" target="_30wvS9XWEem1l5O0R0OWkQ" source="_30wvSdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvQNXWEem1l5O0R0OWkQ" target="_30wvVNXWEem1l5O0R0OWkQ" source="_30wvUdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvQdXWEem1l5O0R0OWkQ" target="_30wvWNXWEem1l5O0R0OWkQ" source="_30wvTtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvQtXWEem1l5O0R0OWkQ" target="_30wvUdXWEem1l5O0R0OWkQ" source="_30wvRtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30wvQ9XWEem1l5O0R0OWkQ" target="_30wvStXWEem1l5O0R0OWkQ" source="_30wvYdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvRNXWEem1l5O0R0OWkQ" target="_30wvSdXWEem1l5O0R0OWkQ" source="_30wvYtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvRdXWEem1l5O0R0OWkQ" target="_30wvY9XWEem1l5O0R0OWkQ" source="_30wvUdXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30wvRtXWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@2f30977b.input(Fork(myType)@2d558f36)" incoming="_30wHzdXWEem1l5O0R0OWkQ" outgoing="_30wvQtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvR9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvSNXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeInput>
              <node xmi:type="uml:ForkNode" xmi:id="_30wvSdXWEem1l5O0R0OWkQ" name="Fork(attr)" incoming="_30wvRNXWEem1l5O0R0OWkQ" outgoing="_30wvP9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_30wvStXWEem1l5O0R0OWkQ" name="Clear(type)" incoming="_30wvQ9XWEem1l5O0R0OWkQ" structuralFeature="_30vhxdXWEem1l5O0R0OWkQ">
                <object xmi:id="_30wvS9XWEem1l5O0R0OWkQ" name="Clear(type).object" incoming="_30wvP9XWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvTNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvTdXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_30wvTtXWEem1l5O0R0OWkQ" name="Clear(type).result" outgoing="_30wvQdXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvT9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvUNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_30wvUdXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@4d881003)" incoming="_30wvQtXWEem1l5O0R0OWkQ" outgoing="_30wvQNXWEem1l5O0R0OWkQ _30wvRdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvUtXWEem1l5O0R0OWkQ" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Attribute::type)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvU9XWEem1l5O0R0OWkQ" target="_30wvXtXWEem1l5O0R0OWkQ" source="_30wvVNXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_30wvVNXWEem1l5O0R0OWkQ" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Attribute::type).input(Expressions_Sequence_Expansion_Reduction::Attribute::type)" incoming="_30wvQNXWEem1l5O0R0OWkQ" outgoing="_30wvU9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvVdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvVtXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30wvV9XWEem1l5O0R0OWkQ" name="Write(type)" structuralFeature="_30vhxdXWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_30wvWNXWEem1l5O0R0OWkQ" name="Write(type).object" incoming="_30wvQdXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvWdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvWtXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30wvW9XWEem1l5O0R0OWkQ" name="Write(type).result" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvXNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvXdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_30wvXtXWEem1l5O0R0OWkQ" name="Write(type).value" incoming="_30wvU9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvX9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvYNXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvYdXWEem1l5O0R0OWkQ" name="RightHandSide@6009748d" outgoing="_30wvQ9XWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_30wvYtXWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@2f30977b.inputElement" incoming="_30wvMtXWEem1l5O0R0OWkQ" outgoing="_30wvRNXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" regionAsInput="_30wvPtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_30wvY9XWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@2f30977b.outputElement" incoming="_30wvRdXWEem1l5O0R0OWkQ" regionAsOutput="_30wvPtXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvZNXWEem1l5O0R0OWkQ" name="ExpressionStatement@630eb9fd" incoming="_30wHz9XWEem1l5O0R0OWkQ" outgoing="_30wH0tXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvZdXWEem1l5O0R0OWkQ" target="_30wvZtXWEem1l5O0R0OWkQ" source="_30wvcdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30wvZtXWEem1l5O0R0OWkQ" name="Fork(obj)@3989d0c0" incoming="_30wvZdXWEem1l5O0R0OWkQ" outgoing="_30wH0dXWEem1l5O0R0OWkQ _30wH4dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvZ9XWEem1l5O0R0OWkQ" name="RightHandSide@4a6211de">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvaNXWEem1l5O0R0OWkQ" target="_30wve9XWEem1l5O0R0OWkQ" source="_30wvbNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvadXWEem1l5O0R0OWkQ" target="_30wveNXWEem1l5O0R0OWkQ" source="_30wve9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30wvatXWEem1l5O0R0OWkQ" target="_30wvb9XWEem1l5O0R0OWkQ" source="_30wva9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_30wva9XWEem1l5O0R0OWkQ" name="Create(Object)" outgoing="_30wvatXWEem1l5O0R0OWkQ" classifier="_30vjI9XWEem1l5O0R0OWkQ">
                <result xmi:id="_30wvbNXWEem1l5O0R0OWkQ" name="Create(Object).result" outgoing="_30wvaNXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvbdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvbtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvb9XWEem1l5O0R0OWkQ" name="Node(Call(Object))" incoming="_30wvatXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvcNXWEem1l5O0R0OWkQ" target="_30wvcdXWEem1l5O0R0OWkQ" source="_30wve9XWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30wvcdXWEem1l5O0R0OWkQ" name="Output(Fork(Create(Object).result))" incoming="_30wvcNXWEem1l5O0R0OWkQ" outgoing="_30wvZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvctXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvc9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_30wvdNXWEem1l5O0R0OWkQ" name="Call(Object)" operation="_30wG5dXWEem1l5O0R0OWkQ">
                  <result xmi:id="_30wvddXWEem1l5O0R0OWkQ" name="Call(Object).result()" type="_30vjI9XWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvdtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvd9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <target xmi:id="_30wveNXWEem1l5O0R0OWkQ" name="Call(Object).target" incoming="_30wvadXWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvedXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvetXWEem1l5O0R0OWkQ" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30wve9XWEem1l5O0R0OWkQ" name="Fork(Create(Object).result)" incoming="_30wvaNXWEem1l5O0R0OWkQ" outgoing="_30wvadXWEem1l5O0R0OWkQ _30wvcNXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvfNXWEem1l5O0R0OWkQ" name="ExpressionStatement@2c3ae2bb" incoming="_30wH0tXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvfdXWEem1l5O0R0OWkQ" target="_30wvmtXWEem1l5O0R0OWkQ" source="_30wvhdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wvftXWEem1l5O0R0OWkQ" target="_30wvidXWEem1l5O0R0OWkQ" source="_30wvf9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvf9XWEem1l5O0R0OWkQ" name="Primary(CollectOrIterateExpression@695471e5)" outgoing="_30wvftXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvgNXWEem1l5O0R0OWkQ" target="_30wvgtXWEem1l5O0R0OWkQ" source="_30wviNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wvgdXWEem1l5O0R0OWkQ" name="Read(attribute)" structuralFeature="_30via9XWEem1l5O0R0OWkQ">
                <object xmi:id="_30wvgtXWEem1l5O0R0OWkQ" name="Read(attribute).object" incoming="_30wvgNXWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvg9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvhNXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_30wvhdXWEem1l5O0R0OWkQ" name="Read(attribute).result" outgoing="_30wvfdXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvhtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvh9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_30wviNXWEem1l5O0R0OWkQ" name="Fork(Fork(something)@34884474)" incoming="_30wH0NXWEem1l5O0R0OWkQ" outgoing="_30wvgNXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_30wvidXWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@695471e5" incoming="_30wvftXWEem1l5O0R0OWkQ" outputElement="_30wvm9XWEem1l5O0R0OWkQ" inputElement="_30wvmtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvitXWEem1l5O0R0OWkQ" target="_30wvk9XWEem1l5O0R0OWkQ" source="_30wvkdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvi9XWEem1l5O0R0OWkQ" target="_30wvltXWEem1l5O0R0OWkQ" source="_30wvjtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvjNXWEem1l5O0R0OWkQ" target="_30wvkdXWEem1l5O0R0OWkQ" source="_30wvmtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvjdXWEem1l5O0R0OWkQ" target="_30wvm9XWEem1l5O0R0OWkQ" source="_30wvmdXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30wvjtXWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@695471e5.input(Fork(obj)@3989d0c0)" incoming="_30wH0dXWEem1l5O0R0OWkQ" outgoing="_30wvi9XWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvj9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvkNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:ForkNode" xmi:id="_30wvkdXWEem1l5O0R0OWkQ" name="Fork(attr)" incoming="_30wvjNXWEem1l5O0R0OWkQ" outgoing="_30wvitXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_30wvktXWEem1l5O0R0OWkQ" name="Call(init)" operation="_30wG4dXWEem1l5O0R0OWkQ">
                <argument xmi:id="_30wvk9XWEem1l5O0R0OWkQ" name="Call(init).argument(attr)" incoming="_30wvitXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvlNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvldXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <target xmi:id="_30wvltXWEem1l5O0R0OWkQ" name="Call(init).target" incoming="_30wvi9XWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvl9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvmNXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:MergeNode" xmi:id="_30wvmdXWEem1l5O0R0OWkQ" name="Merge" outgoing="_30wvjdXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_30wvmtXWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@695471e5.inputElement" incoming="_30wvfdXWEem1l5O0R0OWkQ" outgoing="_30wvjNXWEem1l5O0R0OWkQ" type="_30vhwdXWEem1l5O0R0OWkQ" regionAsInput="_30wvidXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_30wvm9XWEem1l5O0R0OWkQ" name="CollectOrIterateExpression@695471e5.outputElement" incoming="_30wvjdXWEem1l5O0R0OWkQ" regionAsOutput="_30wvidXWEem1l5O0R0OWkQ"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHlNXWEem1l5O0R0OWkQ" name="Output(sum)" incoming="_30wHhdXWEem1l5O0R0OWkQ" parameter="_30wHWNXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHldXWEem1l5O0R0OWkQ" name="Output(remainder)" incoming="_30wHhtXWEem1l5O0R0OWkQ" parameter="_30wHW9XWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHltXWEem1l5O0R0OWkQ" name="Output(bad)" incoming="_30wHh9XWEem1l5O0R0OWkQ" parameter="_30wHXtXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHl9XWEem1l5O0R0OWkQ" name="Output(select)" incoming="_30wHiNXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" parameter="_30wHYdXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHmNXWEem1l5O0R0OWkQ" name="Output(reject)" incoming="_30wHidXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" parameter="_30wHZNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHmdXWEem1l5O0R0OWkQ" name="Output(collect)" incoming="_30wHitXWEem1l5O0R0OWkQ" parameter="_30wHZ9XWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHmtXWEem1l5O0R0OWkQ" name="Output(iterate)" incoming="_30wHi9XWEem1l5O0R0OWkQ" parameter="_30wHatXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHm9XWEem1l5O0R0OWkQ" name="Output(forAll)" incoming="_30wHjNXWEem1l5O0R0OWkQ" parameter="_30wHbdXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHnNXWEem1l5O0R0OWkQ" name="Output(exists)" incoming="_30wHjdXWEem1l5O0R0OWkQ" parameter="_30wHcNXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHndXWEem1l5O0R0OWkQ" name="Output(one)" incoming="_30wHjtXWEem1l5O0R0OWkQ" parameter="_30wHc9XWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHntXWEem1l5O0R0OWkQ" name="Output(unique)" incoming="_30wHj9XWEem1l5O0R0OWkQ" parameter="_30wHdtXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHn9XWEem1l5O0R0OWkQ" name="Output(jack)" incoming="_30wHkNXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" parameter="_30wHedXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHoNXWEem1l5O0R0OWkQ" name="Output(joan)" incoming="_30wHkdXWEem1l5O0R0OWkQ" type="_30vgw9XWEem1l5O0R0OWkQ" parameter="_30wHfNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHodXWEem1l5O0R0OWkQ" name="Output(something)" incoming="_30wHktXWEem1l5O0R0OWkQ" type="_30viZ9XWEem1l5O0R0OWkQ" parameter="_30wHf9XWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wHotXWEem1l5O0R0OWkQ" name="Output(obj)" incoming="_30wHk9XWEem1l5O0R0OWkQ" type="_30vjI9XWEem1l5O0R0OWkQ" parameter="_30wHgtXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_30wvnNXWEem1l5O0R0OWkQ" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_30wvndXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_30wvntXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_30wvn9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_30wvoNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_30wvodXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_30wvotXWEem1l5O0R0OWkQ" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvo9XWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvpNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_30wvpdXWEem1l5O0R0OWkQ" name="tester" visibility="private" type="_30xUtdXWEem1l5O0R0OWkQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvptXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvp9XWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_30wvqNXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_30wwodXWEem1l5O0R0OWkQ" node="_30wvqdXWEem1l5O0R0OWkQ" group="_30wvqdXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_30wvqdXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_30wvqtXWEem1l5O0R0OWkQ" name="done$method$1" visibility="private" specification="_30wwotXWEem1l5O0R0OWkQ" node="_30wvq9XWEem1l5O0R0OWkQ" group="_30wvq9XWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_30wvq9XWEem1l5O0R0OWkQ" name="Body(done$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvrNXWEem1l5O0R0OWkQ" name="ExpressionStatement@6f32940c">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvrdXWEem1l5O0R0OWkQ" target="_30wvsdXWEem1l5O0R0OWkQ" source="_30wvudXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wvrtXWEem1l5O0R0OWkQ" target="_30wvsNXWEem1l5O0R0OWkQ" source="_30wvt9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvr9XWEem1l5O0R0OWkQ" target="_30wvtNXWEem1l5O0R0OWkQ" source="_30wvvtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_30wvsNXWEem1l5O0R0OWkQ" name="Call(done)" incoming="_30wvrtXWEem1l5O0R0OWkQ" operation="_30xUsdXWEem1l5O0R0OWkQ">
              <argument xmi:id="_30wvsdXWEem1l5O0R0OWkQ" name="Call(done).argument(message)" incoming="_30wvrdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvstXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvs9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <target xmi:id="_30wvtNXWEem1l5O0R0OWkQ" name="Call(done).target" incoming="_30wvr9XWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvtdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvttXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wvt9XWEem1l5O0R0OWkQ" name="Tuple@6fba6a89" outgoing="_30wvrtXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wvuNXWEem1l5O0R0OWkQ" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_30wvudXWEem1l5O0R0OWkQ" name="Value(&quot;Done.&quot;).result" outgoing="_30wvrdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvutXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvu9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_30wvvNXWEem1l5O0R0OWkQ" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_30wvvdXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_30wvvtXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30wvr9XWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvv9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvwNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_30wvwdXWEem1l5O0R0OWkQ" name="Test$method$1" visibility="private" specification="_30wwo9XWEem1l5O0R0OWkQ" node="_30wvy9XWEem1l5O0R0OWkQ _30wvzNXWEem1l5O0R0OWkQ _30wvzdXWEem1l5O0R0OWkQ _30wvztXWEem1l5O0R0OWkQ" group="_30wvztXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_30wvwtXWEem1l5O0R0OWkQ" name="tester" type="_30xUtdXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvw9XWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvxNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wvxdXWEem1l5O0R0OWkQ" name="" type="_30wvnNXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wvxtXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wvx9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvyNXWEem1l5O0R0OWkQ" target="_30wvzNXWEem1l5O0R0OWkQ" source="_30wvy9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvydXWEem1l5O0R0OWkQ" target="_30wv7NXWEem1l5O0R0OWkQ" source="_30wvzNXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvytXWEem1l5O0R0OWkQ" target="_30wvzdXWEem1l5O0R0OWkQ" source="_30wwCNXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_30wvztXWEem1l5O0R0OWkQ" name="Body(Test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wvz9XWEem1l5O0R0OWkQ" target="_30wwCNXWEem1l5O0R0OWkQ" source="_30wwBdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wv0NXWEem1l5O0R0OWkQ" target="_30wwCtXWEem1l5O0R0OWkQ" source="_30wwCNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wv0dXWEem1l5O0R0OWkQ" target="_30wv2tXWEem1l5O0R0OWkQ" source="_30wwCdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wv0tXWEem1l5O0R0OWkQ" target="_30wwDtXWEem1l5O0R0OWkQ" source="_30wwCNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wv09XWEem1l5O0R0OWkQ" target="_30wwFdXWEem1l5O0R0OWkQ" source="_30wwEdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wv1NXWEem1l5O0R0OWkQ" target="_30wwIdXWEem1l5O0R0OWkQ" source="_30wwGNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wv1dXWEem1l5O0R0OWkQ" target="_30wwJ9XWEem1l5O0R0OWkQ" source="_30wwHNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wv1tXWEem1l5O0R0OWkQ" target="_30wwK9XWEem1l5O0R0OWkQ" source="_30wwKtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wv19XWEem1l5O0R0OWkQ" target="_30wwK9XWEem1l5O0R0OWkQ" source="_30wwJNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wv2NXWEem1l5O0R0OWkQ" target="_30wwCdXWEem1l5O0R0OWkQ" source="_30wwK9XWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_30wv2dXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wv2tXWEem1l5O0R0OWkQ" name="Body" incoming="_30wv0dXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wv29XWEem1l5O0R0OWkQ" name="ExpressionStatement@373dfdc9">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wv3NXWEem1l5O0R0OWkQ" target="_30wv5tXWEem1l5O0R0OWkQ" source="_30wv4tXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wv3dXWEem1l5O0R0OWkQ" target="_30wv79XWEem1l5O0R0OWkQ" source="_30wv7NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wv3tXWEem1l5O0R0OWkQ" target="_30wv9dXWEem1l5O0R0OWkQ" source="_30wv6dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30wv39XWEem1l5O0R0OWkQ" target="_30wv4NXWEem1l5O0R0OWkQ" source="_30wwA9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wv4NXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@2e1b396a)" incoming="_30wv39XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_30wv4dXWEem1l5O0R0OWkQ" name="ReadSelf">
                  <result xmi:id="_30wv4tXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30wv3NXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wv49XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wv5NXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_30wv5dXWEem1l5O0R0OWkQ" name="Clear(tester)" structuralFeature="_30wvpdXWEem1l5O0R0OWkQ">
                <object xmi:id="_30wv5tXWEem1l5O0R0OWkQ" name="Clear(tester).object" incoming="_30wv3NXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wv59XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wv6NXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_30wv6dXWEem1l5O0R0OWkQ" name="Clear(tester).result" outgoing="_30wv3tXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wv6tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wv69XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_30wv7NXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@2e1b396a)" incoming="_30wvydXWEem1l5O0R0OWkQ" outgoing="_30wv3dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wv7dXWEem1l5O0R0OWkQ" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wv7tXWEem1l5O0R0OWkQ" target="_30wwAtXWEem1l5O0R0OWkQ" source="_30wv79XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_30wv79XWEem1l5O0R0OWkQ" name="WriteAll(Test::tester).input(Test::tester)" incoming="_30wv3dXWEem1l5O0R0OWkQ" outgoing="_30wv7tXWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wv8NXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wv8dXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_30wv8tXWEem1l5O0R0OWkQ" name="Iterate(Write(tester))" inputElement="_30wwAtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wv89XWEem1l5O0R0OWkQ" target="_30wv_9XWEem1l5O0R0OWkQ" source="_30wwAtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30wv9NXWEem1l5O0R0OWkQ" target="_30wv-dXWEem1l5O0R0OWkQ" source="_30wv9dXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_30wv9dXWEem1l5O0R0OWkQ" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_30wv3tXWEem1l5O0R0OWkQ" outgoing="_30wv9NXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wv9tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wv99XWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30wv-NXWEem1l5O0R0OWkQ" name="Write(tester)" structuralFeature="_30wvpdXWEem1l5O0R0OWkQ">
                    <object xmi:id="_30wv-dXWEem1l5O0R0OWkQ" name="Write(tester).object" incoming="_30wv9NXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wv-tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wv-9XWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30wv_NXWEem1l5O0R0OWkQ" name="Write(tester).result" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wv_dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wv_tXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_30wv_9XWEem1l5O0R0OWkQ" name="Write(tester).value" incoming="_30wv89XWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwANXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwAdXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30wwAtXWEem1l5O0R0OWkQ" name="Iterate(Write(tester)).inputElement" incoming="_30wv7tXWEem1l5O0R0OWkQ" outgoing="_30wv89XWEem1l5O0R0OWkQ" regionAsInput="_30wv8tXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wwA9XWEem1l5O0R0OWkQ" name="RightHandSide@41b5df51" outgoing="_30wv39XWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_30wwBNXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_30wwBdXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30wvz9XWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwBtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwB9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_30wwCNXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30wvz9XWEem1l5O0R0OWkQ" outgoing="_30wvytXWEem1l5O0R0OWkQ _30wv0NXWEem1l5O0R0OWkQ _30wv0tXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_30wwCdXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1)" incoming="_30wv2NXWEem1l5O0R0OWkQ" outgoing="_30wv0dXWEem1l5O0R0OWkQ" operation="_30wwoNXWEem1l5O0R0OWkQ">
            <target xmi:id="_30wwCtXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1).target" incoming="_30wv0NXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwC9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwDNXWEem1l5O0R0OWkQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wwDdXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1)" structuralFeature="_30wvotXWEem1l5O0R0OWkQ">
            <object xmi:id="_30wwDtXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).object" incoming="_30wv0tXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwD9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwENXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_30wwEdXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).result" outgoing="_30wv09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwEtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwE9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wwFNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_30wwFdXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30wv09XWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwFtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwF9XWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_30wwGNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30wv1NXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwGdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwGtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wwG9XWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_30wwHNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30wv1dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwHdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwHtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_30wwH9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_30wwINXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_30wwIdXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30wv1NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwItXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwI9XWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_30wwJNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30wv19XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwJdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwJtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_30wwJ9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30wv1dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwKNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwKdXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_30wwKtXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30wv1tXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_30wwK9XWEem1l5O0R0OWkQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_30wv1tXWEem1l5O0R0OWkQ _30wv19XWEem1l5O0R0OWkQ" outgoing="_30wv2NXWEem1l5O0R0OWkQ" decisionInputFlow="_30wv19XWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wvy9XWEem1l5O0R0OWkQ" name="Input(tester)" outgoing="_30wvyNXWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" parameter="_30wvwtXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_30wvzNXWEem1l5O0R0OWkQ" name="Fork(tester)" incoming="_30wvyNXWEem1l5O0R0OWkQ" outgoing="_30wvydXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wvzdXWEem1l5O0R0OWkQ" name="Return" incoming="_30wvytXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" parameter="_30wvxdXWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_30wwLNXWEem1l5O0R0OWkQ" name="done$method$2" visibility="private" specification="_30xUsdXWEem1l5O0R0OWkQ" node="_30wwMtXWEem1l5O0R0OWkQ _30wwM9XWEem1l5O0R0OWkQ _30wwNNXWEem1l5O0R0OWkQ" group="_30wwNNXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_30wwLdXWEem1l5O0R0OWkQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwLtXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwL9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwMNXWEem1l5O0R0OWkQ" target="_30wwM9XWEem1l5O0R0OWkQ" source="_30wwMtXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwMdXWEem1l5O0R0OWkQ" target="_30wwONXWEem1l5O0R0OWkQ" source="_30wwM9XWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_30wwNNXWEem1l5O0R0OWkQ" name="Body(done$method$2)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wwNdXWEem1l5O0R0OWkQ" target="_30wwPtXWEem1l5O0R0OWkQ" source="_30wwNtXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wwNtXWEem1l5O0R0OWkQ" name="ExpressionStatement@91bd793" outgoing="_30wwNdXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wwN9XWEem1l5O0R0OWkQ" name="Call(WriteLine)">
              <argument xmi:id="_30wwONXWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_30wwMdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwOdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwOtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_30wwO9XWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwPNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwPdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wwPtXWEem1l5O0R0OWkQ" name="ExpressionStatement@33c70215" incoming="_30wwNdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwP9XWEem1l5O0R0OWkQ" target="_30wwR9XWEem1l5O0R0OWkQ" source="_30wwU9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30wwQNXWEem1l5O0R0OWkQ" target="_30wwQdXWEem1l5O0R0OWkQ" source="_30wwSNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_30wwQdXWEem1l5O0R0OWkQ" name="Collect(SendSignal(Continue))" incoming="_30wwQNXWEem1l5O0R0OWkQ" mode="parallel" inputElement="_30wwR9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwQtXWEem1l5O0R0OWkQ" target="_30wwRNXWEem1l5O0R0OWkQ" source="_30wwR9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_30wwQ9XWEem1l5O0R0OWkQ" name="SendSignal(Continue)" signal="_30xVRdXWEem1l5O0R0OWkQ">
                <target xmi:id="_30wwRNXWEem1l5O0R0OWkQ" name="SendSignal(Continue).target" incoming="_30wwQtXWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwRdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwRtXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_30wwR9XWEem1l5O0R0OWkQ" name="Collect(SendSignal(Continue)).inputElement" incoming="_30wwP9XWEem1l5O0R0OWkQ" outgoing="_30wwQtXWEem1l5O0R0OWkQ" regionAsInput="_30wwQdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wwSNXWEem1l5O0R0OWkQ" name="Feature(Read(tester).result)" outgoing="_30wwQNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwSdXWEem1l5O0R0OWkQ" target="_30wwVtXWEem1l5O0R0OWkQ" source="_30wwTNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwStXWEem1l5O0R0OWkQ" target="_30wwUNXWEem1l5O0R0OWkQ" source="_30wwVtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_30wwS9XWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_30wwTNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30wwSdXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwTdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwTtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wwT9XWEem1l5O0R0OWkQ" name="Read(tester)" structuralFeature="_30wvpdXWEem1l5O0R0OWkQ">
                <object xmi:id="_30wwUNXWEem1l5O0R0OWkQ" name="Read(tester).object" incoming="_30wwStXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwUdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwUtXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_30wwU9XWEem1l5O0R0OWkQ" name="Read(tester).result" outgoing="_30wwP9XWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwVNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwVdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_30wwVtXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30wwSdXWEem1l5O0R0OWkQ" outgoing="_30wwStXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_30wwMtXWEem1l5O0R0OWkQ" name="Input(message)" outgoing="_30wwMNXWEem1l5O0R0OWkQ" parameter="_30wwLdXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_30wwM9XWEem1l5O0R0OWkQ" name="Fork(message)" incoming="_30wwMNXWEem1l5O0R0OWkQ" outgoing="_30wwMdXWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_30wwV9XWEem1l5O0R0OWkQ" name="Test$initialization$1" visibility="private" specification="_30wwoNXWEem1l5O0R0OWkQ" node="_30wwWNXWEem1l5O0R0OWkQ" group="_30wwWNXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_30wwWNXWEem1l5O0R0OWkQ" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwWdXWEem1l5O0R0OWkQ" target="_30wwZ9XWEem1l5O0R0OWkQ" source="_30wwZNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwWtXWEem1l5O0R0OWkQ" target="_30wwc9XWEem1l5O0R0OWkQ" source="_30wwZ9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwW9XWEem1l5O0R0OWkQ" target="_30wwgtXWEem1l5O0R0OWkQ" source="_30wwZ9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwXNXWEem1l5O0R0OWkQ" target="_30wwidXWEem1l5O0R0OWkQ" source="_30wwhdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwXdXWEem1l5O0R0OWkQ" target="_30wwldXWEem1l5O0R0OWkQ" source="_30wwjNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwXtXWEem1l5O0R0OWkQ" target="_30wwm9XWEem1l5O0R0OWkQ" source="_30wwkNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wwX9XWEem1l5O0R0OWkQ" target="_30wwn9XWEem1l5O0R0OWkQ" source="_30wwntXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwYNXWEem1l5O0R0OWkQ" target="_30wwn9XWEem1l5O0R0OWkQ" source="_30wwmNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30wwYdXWEem1l5O0R0OWkQ" target="_30wwaNXWEem1l5O0R0OWkQ" source="_30wwn9XWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_30wwYtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_30wwY9XWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_30wwZNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30wwWdXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwZdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwZtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_30wwZ9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30wwWdXWEem1l5O0R0OWkQ" outgoing="_30wwWtXWEem1l5O0R0OWkQ _30wwW9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wwaNXWEem1l5O0R0OWkQ" name="Initialization" incoming="_30wwYdXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30wwadXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwatXWEem1l5O0R0OWkQ" target="_30wwgNXWEem1l5O0R0OWkQ" source="_30wwbNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wwa9XWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_30wwbNXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_30wwatXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwbdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwbtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_30wwb9XWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_30wwcNXWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1))" inputElement="_30wwgNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwcdXWEem1l5O0R0OWkQ" target="_30wwfdXWEem1l5O0R0OWkQ" source="_30wwgNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30wwctXWEem1l5O0R0OWkQ" target="_30wwd9XWEem1l5O0R0OWkQ" source="_30wwc9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_30wwc9XWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_30wwWtXWEem1l5O0R0OWkQ" outgoing="_30wwctXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwdNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwddXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30wwdtXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1)" structuralFeature="_30wvotXWEem1l5O0R0OWkQ">
                  <object xmi:id="_30wwd9XWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).object" incoming="_30wwctXWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wweNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwedXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30wwetXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).result" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwe9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwfNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_30wwfdXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).value" incoming="_30wwcdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwftXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwf9XWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30wwgNXWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1)).inputElement" incoming="_30wwatXWEem1l5O0R0OWkQ" outgoing="_30wwcdXWEem1l5O0R0OWkQ" regionAsInput="_30wwcNXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30wwgdXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1)" structuralFeature="_30wvotXWEem1l5O0R0OWkQ">
            <object xmi:id="_30wwgtXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).object" incoming="_30wwW9XWEem1l5O0R0OWkQ" type="_30wvnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwg9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwhNXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_30wwhdXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).result" outgoing="_30wwXNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwhtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwh9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_30wwiNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_30wwidXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30wwXNXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwitXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwi9XWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_30wwjNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30wwXdXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwjdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwjtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30wwj9XWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_30wwkNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30wwXtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwkdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwktXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_30wwk9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_30wwlNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_30wwldXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30wwXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwltXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwl9XWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_30wwmNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30wwYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwmdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwmtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_30wwm9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30wwXtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwnNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwndXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_30wwntXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30wwX9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_30wwn9XWEem1l5O0R0OWkQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_30wwX9XWEem1l5O0R0OWkQ _30wwYNXWEem1l5O0R0OWkQ" outgoing="_30wwYdXWEem1l5O0R0OWkQ" decisionInputFlow="_30wwYNXWEem1l5O0R0OWkQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_30wwoNXWEem1l5O0R0OWkQ" name="Test$initialization$1" visibility="protected" method="_30wwV9XWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_30wwodXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_30wvqNXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_30wwotXWEem1l5O0R0OWkQ" name="done" visibility="public" method="_30wvqtXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_30wwo9XWEem1l5O0R0OWkQ" name="Test" visibility="protected" method="_30wvwdXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_30wwpNXWEem1l5O0R0OWkQ" name="tester" visibility="package" type="_30xUtdXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwpdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30wwptXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_30wwp9XWEem1l5O0R0OWkQ" name="" visibility="package" type="_30wvnNXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30wwqNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xUsNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_30xUsdXWEem1l5O0R0OWkQ" name="done" visibility="public" method="_30wwLNXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_30xUstXWEem1l5O0R0OWkQ" name="message" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xUs9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xUtNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_30xUtdXWEem1l5O0R0OWkQ" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_30xUttXWEem1l5O0R0OWkQ" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xUt9XWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xUuNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30xUudXWEem1l5O0R0OWkQ" name="Tester$method$1" visibility="private" specification="_30xVQNXWEem1l5O0R0OWkQ" node="_30xUvtXWEem1l5O0R0OWkQ _30xUv9XWEem1l5O0R0OWkQ" group="_30xUv9XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_30xUutXWEem1l5O0R0OWkQ" name="" type="_30xUtdXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xUu9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xUvNXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xUvdXWEem1l5O0R0OWkQ" target="_30xUvtXWEem1l5O0R0OWkQ" source="_30xU0NXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_30xUv9XWEem1l5O0R0OWkQ" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xUwNXWEem1l5O0R0OWkQ" target="_30xU0NXWEem1l5O0R0OWkQ" source="_30xUzdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xUwdXWEem1l5O0R0OWkQ" target="_30xU0tXWEem1l5O0R0OWkQ" source="_30xU0NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xUwtXWEem1l5O0R0OWkQ" target="_30xUy9XWEem1l5O0R0OWkQ" source="_30xU0dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xUw9XWEem1l5O0R0OWkQ" target="_30xU1tXWEem1l5O0R0OWkQ" source="_30xU0NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xUxNXWEem1l5O0R0OWkQ" target="_30xU3dXWEem1l5O0R0OWkQ" source="_30xU2dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xUxdXWEem1l5O0R0OWkQ" target="_30xU6dXWEem1l5O0R0OWkQ" source="_30xU4NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xUxtXWEem1l5O0R0OWkQ" target="_30xU79XWEem1l5O0R0OWkQ" source="_30xU5NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xUx9XWEem1l5O0R0OWkQ" target="_30xU89XWEem1l5O0R0OWkQ" source="_30xU8tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xUyNXWEem1l5O0R0OWkQ" target="_30xU89XWEem1l5O0R0OWkQ" source="_30xU7NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xUydXWEem1l5O0R0OWkQ" target="_30xU0dXWEem1l5O0R0OWkQ" source="_30xU89XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30xUytXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xUy9XWEem1l5O0R0OWkQ" name="Body" incoming="_30xUwtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_30xUzNXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_30xUzdXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30xUwNXWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xUztXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xUz9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30xU0NXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30xUwNXWEem1l5O0R0OWkQ" outgoing="_30xUvdXWEem1l5O0R0OWkQ _30xUwdXWEem1l5O0R0OWkQ _30xUw9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_30xU0dXWEem1l5O0R0OWkQ" name="Call(Tester$initialization$1)" incoming="_30xUydXWEem1l5O0R0OWkQ" outgoing="_30xUwtXWEem1l5O0R0OWkQ" operation="_30xVP9XWEem1l5O0R0OWkQ">
              <target xmi:id="_30xU0tXWEem1l5O0R0OWkQ" name="Call(Tester$initialization$1).target" incoming="_30xUwdXWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xU09XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xU1NXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30xU1dXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_30xUttXWEem1l5O0R0OWkQ">
              <object xmi:id="_30xU1tXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).object" incoming="_30xUw9XWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xU19XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xU2NXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30xU2dXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).result" outgoing="_30xUxNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xU2tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xU29XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xU3NXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_30xU3dXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30xUxNXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xU3tXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xU39XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30xU4NXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30xUxdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xU4dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xU4tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xU49XWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_30xU5NXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30xUxtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xU5dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xU5tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30xU59XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_30xU6NXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_30xU6dXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30xUxdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xU6tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xU69XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_30xU7NXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30xUyNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xU7dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xU7tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_30xU79XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30xUxtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xU8NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xU8dXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_30xU8tXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30xUx9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30xU89XWEem1l5O0R0OWkQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_30xUx9XWEem1l5O0R0OWkQ _30xUyNXWEem1l5O0R0OWkQ" outgoing="_30xUydXWEem1l5O0R0OWkQ" decisionInputFlow="_30xUyNXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_30xUvtXWEem1l5O0R0OWkQ" name="Return" incoming="_30xUvdXWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" parameter="_30xUutXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30xU9NXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_30xVRNXWEem1l5O0R0OWkQ" node="_30xU9dXWEem1l5O0R0OWkQ" group="_30xU9dXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_30xU9dXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_30xU9tXWEem1l5O0R0OWkQ" name="Tester$initialization$1" visibility="private" specification="_30xVP9XWEem1l5O0R0OWkQ" node="_30xU99XWEem1l5O0R0OWkQ" group="_30xU99XWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_30xU99XWEem1l5O0R0OWkQ" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xU-NXWEem1l5O0R0OWkQ" target="_30xVBtXWEem1l5O0R0OWkQ" source="_30xVA9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xU-dXWEem1l5O0R0OWkQ" target="_30xVEtXWEem1l5O0R0OWkQ" source="_30xVBtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xU-tXWEem1l5O0R0OWkQ" target="_30xVIdXWEem1l5O0R0OWkQ" source="_30xVBtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xU-9XWEem1l5O0R0OWkQ" target="_30xVKNXWEem1l5O0R0OWkQ" source="_30xVJNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xU_NXWEem1l5O0R0OWkQ" target="_30xVNNXWEem1l5O0R0OWkQ" source="_30xVK9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xU_dXWEem1l5O0R0OWkQ" target="_30xVOtXWEem1l5O0R0OWkQ" source="_30xVL9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xU_tXWEem1l5O0R0OWkQ" target="_30xVPtXWEem1l5O0R0OWkQ" source="_30xVPdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xU_9XWEem1l5O0R0OWkQ" target="_30xVPtXWEem1l5O0R0OWkQ" source="_30xVN9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xVANXWEem1l5O0R0OWkQ" target="_30xVB9XWEem1l5O0R0OWkQ" source="_30xVPtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30xVAdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_30xVAtXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_30xVA9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_30xU-NXWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVBNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVBdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30xVBtXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_30xU-NXWEem1l5O0R0OWkQ" outgoing="_30xU-dXWEem1l5O0R0OWkQ _30xU-tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xVB9XWEem1l5O0R0OWkQ" name="Initialization" incoming="_30xVANXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xVCNXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVCdXWEem1l5O0R0OWkQ" target="_30xVH9XWEem1l5O0R0OWkQ" source="_30xVC9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xVCtXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_30xVC9XWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_30xVCdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVDNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVDdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_30xVDtXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_30xVD9XWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1))" inputElement="_30xVH9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVENXWEem1l5O0R0OWkQ" target="_30xVHNXWEem1l5O0R0OWkQ" source="_30xVH9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVEdXWEem1l5O0R0OWkQ" target="_30xVFtXWEem1l5O0R0OWkQ" source="_30xVEtXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_30xVEtXWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_30xU-dXWEem1l5O0R0OWkQ" outgoing="_30xVEdXWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVE9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVFNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_30xVFdXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1)" structuralFeature="_30xUttXWEem1l5O0R0OWkQ">
                    <object xmi:id="_30xVFtXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).object" incoming="_30xVEdXWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVF9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVGNXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_30xVGdXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).result" type="_30xUtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVGtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVG9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_30xVHNXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).value" incoming="_30xVENXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVHdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVHtXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_30xVH9XWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1)).inputElement" incoming="_30xVCdXWEem1l5O0R0OWkQ" outgoing="_30xVENXWEem1l5O0R0OWkQ" regionAsInput="_30xVD9XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_30xVINXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_30xUttXWEem1l5O0R0OWkQ">
              <object xmi:id="_30xVIdXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).object" incoming="_30xU-tXWEem1l5O0R0OWkQ" type="_30xUtdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVItXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVI9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_30xVJNXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).result" outgoing="_30xU-9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVJdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVJtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xVJ9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_30xVKNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_30xU-9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVKdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVKtXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30xVK9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_30xU_NXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVLNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVLdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xVLtXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_30xVL9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_30xU_dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVMNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVMdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30xVMtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_30xVM9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_30xVNNXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_30xU_NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVNdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVNtXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_30xVN9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_30xU_9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVONXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVOdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_30xVOtXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_30xU_dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVO9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVPNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_30xVPdXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_30xU_tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30xVPtXWEem1l5O0R0OWkQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_30xU_tXWEem1l5O0R0OWkQ _30xU_9XWEem1l5O0R0OWkQ" outgoing="_30xVANXWEem1l5O0R0OWkQ" decisionInputFlow="_30xU_9XWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_30xVP9XWEem1l5O0R0OWkQ" name="Tester$initialization$1" visibility="protected" method="_30xU9tXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_30xVQNXWEem1l5O0R0OWkQ" name="Tester" visibility="public" method="_30xUudXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_30xVQdXWEem1l5O0R0OWkQ" name="" visibility="package" type="_30xUtdXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVQtXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVQ9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_30xVRNXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_30xU9NXWEem1l5O0R0OWkQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_30xVRdXWEem1l5O0R0OWkQ" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_30xVRtXWEem1l5O0R0OWkQ" name="Continue" signal="_30xVRdXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_30xVR9XWEem1l5O0R0OWkQ" name="AssertEqual" visibility="public" node="_30xVZ9XWEem1l5O0R0OWkQ _30xVaNXWEem1l5O0R0OWkQ _30xVadXWEem1l5O0R0OWkQ _30xVatXWEem1l5O0R0OWkQ _30xVa9XWEem1l5O0R0OWkQ _30xVbNXWEem1l5O0R0OWkQ _30xVbdXWEem1l5O0R0OWkQ" group="_30xVbdXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_30xVSNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_30xVSdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_30xVStXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_30xVS9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_30xVTNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_30xVTdXWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVTtXWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVT9XWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_30xVUNXWEem1l5O0R0OWkQ" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVUdXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVUtXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_30xVU9XWEem1l5O0R0OWkQ" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVVNXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVVdXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVVtXWEem1l5O0R0OWkQ" target="_30xVaNXWEem1l5O0R0OWkQ" source="_30xVZ9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVV9XWEem1l5O0R0OWkQ" target="_30xVatXWEem1l5O0R0OWkQ" source="_30xVadXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVWNXWEem1l5O0R0OWkQ" target="_30xVbNXWEem1l5O0R0OWkQ" source="_30xVa9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVWdXWEem1l5O0R0OWkQ" target="_30xVpNXWEem1l5O0R0OWkQ" source="_30xVatXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVWtXWEem1l5O0R0OWkQ" target="_30xVrNXWEem1l5O0R0OWkQ" source="_30xVbNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVW9XWEem1l5O0R0OWkQ" target="_30xV5tXWEem1l5O0R0OWkQ" source="_30xVaNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVXNXWEem1l5O0R0OWkQ" target="_30xWJdXWEem1l5O0R0OWkQ" source="_30xVbNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVXdXWEem1l5O0R0OWkQ" target="_30xWedXWEem1l5O0R0OWkQ" source="_30xVaNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVXtXWEem1l5O0R0OWkQ" target="_30xWidXWEem1l5O0R0OWkQ" source="_30xVbNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVX9XWEem1l5O0R0OWkQ" target="_30xWkdXWEem1l5O0R0OWkQ" source="_30xVatXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVYNXWEem1l5O0R0OWkQ" target="_30xWsNXWEem1l5O0R0OWkQ" source="_30xVbNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVYdXWEem1l5O0R0OWkQ" target="_30xW09XWEem1l5O0R0OWkQ" source="_30xVaNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVYtXWEem1l5O0R0OWkQ" target="_30xW49XWEem1l5O0R0OWkQ" source="_30xVbNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVY9XWEem1l5O0R0OWkQ" target="_30xW69XWEem1l5O0R0OWkQ" source="_30xVatXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVZNXWEem1l5O0R0OWkQ" target="_30xXOtXWEem1l5O0R0OWkQ" source="_30xVaNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVZdXWEem1l5O0R0OWkQ" target="_30xXR9XWEem1l5O0R0OWkQ" source="_30xVbNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVZtXWEem1l5O0R0OWkQ" target="_30xXT9XWEem1l5O0R0OWkQ" source="_30xVatXWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_30xVbdXWEem1l5O0R0OWkQ" name="Body(AssertEqual)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVbtXWEem1l5O0R0OWkQ" target="_30xXY9XWEem1l5O0R0OWkQ" source="_30xXV9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVb9XWEem1l5O0R0OWkQ" target="_30xXZNXWEem1l5O0R0OWkQ" source="_30xXWtXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVcNXWEem1l5O0R0OWkQ" target="_30xXZdXWEem1l5O0R0OWkQ" source="_30xXXdXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVcdXWEem1l5O0R0OWkQ" target="_30xXZtXWEem1l5O0R0OWkQ" source="_30xXYNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_30xVctXWEem1l5O0R0OWkQ" name="IfStatement@2a38c656">
          <edge xmi:type="uml:ControlFlow" xmi:id="_30xVc9XWEem1l5O0R0OWkQ" target="_30xWD9XWEem1l5O0R0OWkQ" source="_30xVz9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVdNXWEem1l5O0R0OWkQ" target="_30xW_9XWEem1l5O0R0OWkQ" source="_30xW89XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVddXWEem1l5O0R0OWkQ" target="_30xXANXWEem1l5O0R0OWkQ" source="_30xW9tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVdtXWEem1l5O0R0OWkQ" target="_30xXAdXWEem1l5O0R0OWkQ" source="_30xW-dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVd9XWEem1l5O0R0OWkQ" target="_30xXAtXWEem1l5O0R0OWkQ" source="_30xW_NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVeNXWEem1l5O0R0OWkQ" target="_30xWMdXWEem1l5O0R0OWkQ" source="_30xWEdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVedXWEem1l5O0R0OWkQ" target="_30xWTtXWEem1l5O0R0OWkQ" source="_30xWEdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVetXWEem1l5O0R0OWkQ" target="_30xWgdXWEem1l5O0R0OWkQ" source="_30xWEdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVe9XWEem1l5O0R0OWkQ" target="_30xW29XWEem1l5O0R0OWkQ" source="_30xWEdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30xVfNXWEem1l5O0R0OWkQ" target="_30xWJ9XWEem1l5O0R0OWkQ" source="_30xWD9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30xVfdXWEem1l5O0R0OWkQ" target="_30xXA9XWEem1l5O0R0OWkQ" source="_30xWJ9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVftXWEem1l5O0R0OWkQ" target="_30xXFdXWEem1l5O0R0OWkQ" source="_30xW_9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVf9XWEem1l5O0R0OWkQ" target="_30xXHdXWEem1l5O0R0OWkQ" source="_30xXANXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVgNXWEem1l5O0R0OWkQ" target="_30xXJdXWEem1l5O0R0OWkQ" source="_30xXAdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVgdXWEem1l5O0R0OWkQ" target="_30xXLdXWEem1l5O0R0OWkQ" source="_30xXAtXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xVgtXWEem1l5O0R0OWkQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVg9XWEem1l5O0R0OWkQ" target="_30xVm9XWEem1l5O0R0OWkQ" source="_30xVpNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVhNXWEem1l5O0R0OWkQ" target="_30xVptXWEem1l5O0R0OWkQ" source="_30xVpNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVhdXWEem1l5O0R0OWkQ" target="_30xVodXWEem1l5O0R0OWkQ" source="_30xVrNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVhtXWEem1l5O0R0OWkQ" target="_30xVrtXWEem1l5O0R0OWkQ" source="_30xVrNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVh9XWEem1l5O0R0OWkQ" target="_30xVtdXWEem1l5O0R0OWkQ" source="_30xVqdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xViNXWEem1l5O0R0OWkQ" target="_30xVttXWEem1l5O0R0OWkQ" source="_30xVsdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVidXWEem1l5O0R0OWkQ" target="_30xVuNXWEem1l5O0R0OWkQ" source="_30xVtdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVitXWEem1l5O0R0OWkQ" target="_30xVv9XWEem1l5O0R0OWkQ" source="_30xVttXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVi9XWEem1l5O0R0OWkQ" target="_30xVxdXWEem1l5O0R0OWkQ" source="_30xVttXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xVjNXWEem1l5O0R0OWkQ" target="_30xVmtXWEem1l5O0R0OWkQ" source="_30xVxdXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30xVjdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xVjtXWEem1l5O0R0OWkQ" target="_30xVt9XWEem1l5O0R0OWkQ" source="_30xVxdXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30xVj9XWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xVkNXWEem1l5O0R0OWkQ" target="_30xVxtXWEem1l5O0R0OWkQ" source="_30xVtNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVkdXWEem1l5O0R0OWkQ" target="_30xVxtXWEem1l5O0R0OWkQ" source="_30xVtdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xVktXWEem1l5O0R0OWkQ" target="_30xVxdXWEem1l5O0R0OWkQ" source="_30xVxtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30xVk9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xVlNXWEem1l5O0R0OWkQ" target="_30xVvtXWEem1l5O0R0OWkQ" source="_30xVxtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30xVldXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVltXWEem1l5O0R0OWkQ" target="_30xVx9XWEem1l5O0R0OWkQ" source="_30xVntXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVl9XWEem1l5O0R0OWkQ" target="_30xVx9XWEem1l5O0R0OWkQ" source="_30xVu9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVmNXWEem1l5O0R0OWkQ" target="_30xVx9XWEem1l5O0R0OWkQ" source="_30xVwtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xVmdXWEem1l5O0R0OWkQ" target="_30xVydXWEem1l5O0R0OWkQ" source="_30xVx9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_30xVmtXWEem1l5O0R0OWkQ" name="Test(==)" incoming="_30xVjNXWEem1l5O0R0OWkQ">
              <first xmi:id="_30xVm9XWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_30xVg9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVnNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVndXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_30xVntXWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_30xVltXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVn9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVoNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_30xVodXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_30xVhdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVotXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVo9XWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30xVpNXWEem1l5O0R0OWkQ" name="Fork(Fork(value1))" incoming="_30xVWdXWEem1l5O0R0OWkQ" outgoing="_30xVg9XWEem1l5O0R0OWkQ _30xVhNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xVpdXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_30xVptXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_30xVhNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVp9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVqNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30xVqdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_30xVh9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVqtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVq9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30xVrNXWEem1l5O0R0OWkQ" name="Fork(Fork(value2))" incoming="_30xVWtXWEem1l5O0R0OWkQ" outgoing="_30xVhdXWEem1l5O0R0OWkQ _30xVhtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xVrdXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_30xVrtXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_30xVhtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVr9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVsNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30xVsdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_30xViNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVstXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVs9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_30xVtNXWEem1l5O0R0OWkQ" name="Initial(Test(==))" outgoing="_30xVkNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30xVtdXWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_30xVh9XWEem1l5O0R0OWkQ" outgoing="_30xVidXWEem1l5O0R0OWkQ _30xVkdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30xVttXWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_30xViNXWEem1l5O0R0OWkQ" outgoing="_30xVitXWEem1l5O0R0OWkQ _30xVi9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xVt9XWEem1l5O0R0OWkQ" name="Call(Not)" incoming="_30xVjtXWEem1l5O0R0OWkQ">
              <argument xmi:id="_30xVuNXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_30xVidXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVudXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVutXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_30xVu9XWEem1l5O0R0OWkQ" name="Call(Not).result(result)" outgoing="_30xVl9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVvNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVvdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xVvtXWEem1l5O0R0OWkQ" name="Call(Not)" incoming="_30xVlNXWEem1l5O0R0OWkQ">
              <argument xmi:id="_30xVv9XWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_30xVitXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVwNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVwdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_30xVwtXWEem1l5O0R0OWkQ" name="Call(Not).result(result)" outgoing="_30xVmNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVw9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVxNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_30xVxdXWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_30xVi9XWEem1l5O0R0OWkQ _30xVktXWEem1l5O0R0OWkQ" outgoing="_30xVjNXWEem1l5O0R0OWkQ _30xVjtXWEem1l5O0R0OWkQ" decisionInputFlow="_30xVi9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30xVxtXWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_30xVkNXWEem1l5O0R0OWkQ _30xVkdXWEem1l5O0R0OWkQ" outgoing="_30xVktXWEem1l5O0R0OWkQ _30xVlNXWEem1l5O0R0OWkQ" decisionInputFlow="_30xVkdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_30xVx9XWEem1l5O0R0OWkQ" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_30xVltXWEem1l5O0R0OWkQ _30xVl9XWEem1l5O0R0OWkQ _30xVmNXWEem1l5O0R0OWkQ" outgoing="_30xVmdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xVyNXWEem1l5O0R0OWkQ" name="Call(Not)">
              <argument xmi:id="_30xVydXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_30xVmdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVytXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVy9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_30xVzNXWEem1l5O0R0OWkQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xVzdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xVztXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xVz9XWEem1l5O0R0OWkQ" name="ExpressionStatement@55ae8d7e" outgoing="_30xVc9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xV0NXWEem1l5O0R0OWkQ" target="_30xV09XWEem1l5O0R0OWkQ" source="_30xWAtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xV0dXWEem1l5O0R0OWkQ" target="_30xV0tXWEem1l5O0R0OWkQ" source="_30xV1tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xV0tXWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_30xV0dXWEem1l5O0R0OWkQ" behavior="_30x9YNXWEem1l5O0R0OWkQ">
              <argument xmi:id="_30xV09XWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_30xV0NXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xV1NXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xV1dXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xV1tXWEem1l5O0R0OWkQ" name="Tuple@55a215e7" outgoing="_30xV0dXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xV19XWEem1l5O0R0OWkQ" target="_30xV8tXWEem1l5O0R0OWkQ" source="_30xV4NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xV2NXWEem1l5O0R0OWkQ" target="_30xV9dXWEem1l5O0R0OWkQ" source="_30xV6dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30xV2dXWEem1l5O0R0OWkQ" target="_30xV7NXWEem1l5O0R0OWkQ" source="_30xV39XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30xV2tXWEem1l5O0R0OWkQ" target="_30xV7NXWEem1l5O0R0OWkQ" source="_30xV5NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xV29XWEem1l5O0R0OWkQ" target="_30xWBtXWEem1l5O0R0OWkQ" source="_30xV7tXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xV3NXWEem1l5O0R0OWkQ" target="_30xWCdXWEem1l5O0R0OWkQ" source="_30xV_NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30xV3dXWEem1l5O0R0OWkQ" target="_30xWANXWEem1l5O0R0OWkQ" source="_30xV7NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30xV3tXWEem1l5O0R0OWkQ" target="_30xWANXWEem1l5O0R0OWkQ" source="_30xV-9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xV39XWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;)" outgoing="_30xV2dXWEem1l5O0R0OWkQ">
                <result xmi:id="_30xV4NXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_30xV19XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xV4dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xV4tXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_30xV49XWEem1l5O0R0OWkQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xV5NXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_30xV2tXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xV5dXWEem1l5O0R0OWkQ" target="_30xV6dXWEem1l5O0R0OWkQ" source="_30xV5tXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_30xV5tXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_30xVW9XWEem1l5O0R0OWkQ" outgoing="_30xV5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xV59XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xV6NXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_30xV6dXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_30xV5dXWEem1l5O0R0OWkQ" outgoing="_30xV2NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xV6tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xV69XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xV7NXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_30xV2dXWEem1l5O0R0OWkQ _30xV2tXWEem1l5O0R0OWkQ" outgoing="_30xV3dXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xV7dXWEem1l5O0R0OWkQ" target="_30xV7tXWEem1l5O0R0OWkQ" source="_30xV-NXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30xV7tXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_30xV7dXWEem1l5O0R0OWkQ" outgoing="_30xV29XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xV79XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xV8NXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xV8dXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_30xV8tXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_30xV19XWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xV89XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xV9NXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_30xV9dXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_30xV2NXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xV9tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xV99XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_30xV-NXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_30xV7dXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xV-dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xV-tXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xV-9XWEem1l5O0R0OWkQ" name="Value(&quot;==&quot;)" outgoing="_30xV3tXWEem1l5O0R0OWkQ">
                <result xmi:id="_30xV_NXWEem1l5O0R0OWkQ" name="Value(&quot;==&quot;).result" outgoing="_30xV3NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xV_dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xV_tXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_30xV_9XWEem1l5O0R0OWkQ" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWANXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_30xV3dXWEem1l5O0R0OWkQ _30xV3tXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWAdXWEem1l5O0R0OWkQ" target="_30xWAtXWEem1l5O0R0OWkQ" source="_30xWDNXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30xWAtXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_30xWAdXWEem1l5O0R0OWkQ" outgoing="_30xV0NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWA9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWBNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xWBdXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_30xWBtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_30xV29XWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWB9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWCNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_30xWCdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_30xV3NXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWCtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWC9XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_30xWDNXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_30xWAdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWDdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWDtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWD9XWEem1l5O0R0OWkQ" name="ExpressionStatement@50154df" incoming="_30xVc9XWEem1l5O0R0OWkQ" outgoing="_30xVfNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWENXWEem1l5O0R0OWkQ" target="_30xWEdXWEem1l5O0R0OWkQ" source="_30xWJtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30xWEdXWEem1l5O0R0OWkQ" name="Fork(s)@588bb214" incoming="_30xWENXWEem1l5O0R0OWkQ" outgoing="_30xVeNXWEem1l5O0R0OWkQ _30xVedXWEem1l5O0R0OWkQ _30xVetXWEem1l5O0R0OWkQ _30xVe9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWEtXWEem1l5O0R0OWkQ" name="RightHandSide@23b2574e">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_30xWE9XWEem1l5O0R0OWkQ" name="CastExpression@23b2574e" mode="parallel" outputElement="_30xWJtXWEem1l5O0R0OWkQ" inputElement="_30xWJdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWFNXWEem1l5O0R0OWkQ" target="_30xWHdXWEem1l5O0R0OWkQ" source="_30xWI9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWFdXWEem1l5O0R0OWkQ" target="_30xWJNXWEem1l5O0R0OWkQ" source="_30xWI9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWFtXWEem1l5O0R0OWkQ" target="_30xWJNXWEem1l5O0R0OWkQ" source="_30xWINXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWF9XWEem1l5O0R0OWkQ" target="_30xWG9XWEem1l5O0R0OWkQ" source="_30xWJNXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_30xWGNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWGdXWEem1l5O0R0OWkQ" target="_30xWI9XWEem1l5O0R0OWkQ" source="_30xWJdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWGtXWEem1l5O0R0OWkQ" target="_30xWJtXWEem1l5O0R0OWkQ" source="_30xWG9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_30xWG9XWEem1l5O0R0OWkQ" name="Merge(CastExpression@23b2574e.operand)" incoming="_30xWF9XWEem1l5O0R0OWkQ" outgoing="_30xWGtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_30xWHNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_30xWHdXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String).object" incoming="_30xWFNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWHtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWH9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_30xWINXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String).result" outgoing="_30xWFtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWIdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWItXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_30xWI9XWEem1l5O0R0OWkQ" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_30xWGdXWEem1l5O0R0OWkQ" outgoing="_30xWFNXWEem1l5O0R0OWkQ _30xWFdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_30xWJNXWEem1l5O0R0OWkQ" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_30xWFdXWEem1l5O0R0OWkQ _30xWFtXWEem1l5O0R0OWkQ" outgoing="_30xWF9XWEem1l5O0R0OWkQ" decisionInputFlow="_30xWFtXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30xWJdXWEem1l5O0R0OWkQ" name="CastExpression@23b2574e.inputElement" incoming="_30xVXNXWEem1l5O0R0OWkQ" outgoing="_30xWGdXWEem1l5O0R0OWkQ" regionAsInput="_30xWE9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_30xWJtXWEem1l5O0R0OWkQ" name="CastExpression@23b2574e.outputElement" incoming="_30xWGtXWEem1l5O0R0OWkQ" outgoing="_30xWENXWEem1l5O0R0OWkQ" regionAsOutput="_30xWE9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_30xWJ9XWEem1l5O0R0OWkQ" name="IfStatement@73a77346" incoming="_30xVfNXWEem1l5O0R0OWkQ" outgoing="_30xVfdXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWKNXWEem1l5O0R0OWkQ" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_30xWKdXWEem1l5O0R0OWkQ" target="_30xWMNXWEem1l5O0R0OWkQ" source="_30xWKtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWKtXWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@2812e7d3)" outgoing="_30xWKdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xWK9XWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_30xWLNXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWLdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWLtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_30xWL9XWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xWMNXWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_30xWKdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_30xWMdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_30xVeNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWMtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWM9XWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_30xWNNXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWNdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWNtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWN9XWEem1l5O0R0OWkQ" name="ExpressionStatement@1d3a5646">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWONXWEem1l5O0R0OWkQ" target="_30xWO9XWEem1l5O0R0OWkQ" source="_30xWatXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30xWOdXWEem1l5O0R0OWkQ" target="_30xWOtXWEem1l5O0R0OWkQ" source="_30xWPtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xWOtXWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_30xWOdXWEem1l5O0R0OWkQ" behavior="_30x9YNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_30xWO9XWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_30xWONXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWPNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWPdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWPtXWEem1l5O0R0OWkQ" name="Tuple@656222d9" outgoing="_30xWOdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWP9XWEem1l5O0R0OWkQ" target="_30xWWtXWEem1l5O0R0OWkQ" source="_30xWSNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWQNXWEem1l5O0R0OWkQ" target="_30xWXdXWEem1l5O0R0OWkQ" source="_30xWUdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30xWQdXWEem1l5O0R0OWkQ" target="_30xWVNXWEem1l5O0R0OWkQ" source="_30xWR9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30xWQtXWEem1l5O0R0OWkQ" target="_30xWVNXWEem1l5O0R0OWkQ" source="_30xWTNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWQ9XWEem1l5O0R0OWkQ" target="_30xWbtXWEem1l5O0R0OWkQ" source="_30xWVtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWRNXWEem1l5O0R0OWkQ" target="_30xWcdXWEem1l5O0R0OWkQ" source="_30xWZNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30xWRdXWEem1l5O0R0OWkQ" target="_30xWaNXWEem1l5O0R0OWkQ" source="_30xWVNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30xWRtXWEem1l5O0R0OWkQ" target="_30xWaNXWEem1l5O0R0OWkQ" source="_30xWY9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xWR9XWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;)" outgoing="_30xWQdXWEem1l5O0R0OWkQ">
                  <result xmi:id="_30xWSNXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;).result" outgoing="_30xWP9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWSdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWStXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30xWS9XWEem1l5O0R0OWkQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWTNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@588bb214)" outgoing="_30xWQtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWTdXWEem1l5O0R0OWkQ" target="_30xWUdXWEem1l5O0R0OWkQ" source="_30xWTtXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_30xWTtXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@588bb214).input" incoming="_30xVedXWEem1l5O0R0OWkQ" outgoing="_30xWTdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWT9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWUNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_30xWUdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@588bb214).output" incoming="_30xWTdXWEem1l5O0R0OWkQ" outgoing="_30xWQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWUtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWU9XWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWVNXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_30xWQdXWEem1l5O0R0OWkQ _30xWQtXWEem1l5O0R0OWkQ" outgoing="_30xWRdXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWVdXWEem1l5O0R0OWkQ" target="_30xWVtXWEem1l5O0R0OWkQ" source="_30xWYNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_30xWVtXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_30xWVdXWEem1l5O0R0OWkQ" outgoing="_30xWQ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWV9XWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWWNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xWWdXWEem1l5O0R0OWkQ" name="Call(Concat)">
                    <argument xmi:id="_30xWWtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_30xWP9XWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWW9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWXNXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <argument xmi:id="_30xWXdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_30xWQNXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWXtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWX9XWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_30xWYNXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_30xWVdXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWYdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWYtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xWY9XWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;)" outgoing="_30xWRtXWEem1l5O0R0OWkQ">
                  <result xmi:id="_30xWZNXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;).result" outgoing="_30xWRNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWZdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWZtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30xWZ9XWEem1l5O0R0OWkQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWaNXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_30xWRdXWEem1l5O0R0OWkQ _30xWRtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWadXWEem1l5O0R0OWkQ" target="_30xWatXWEem1l5O0R0OWkQ" source="_30xWdNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_30xWatXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_30xWadXWEem1l5O0R0OWkQ" outgoing="_30xWONXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWa9XWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWbNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xWbdXWEem1l5O0R0OWkQ" name="Call(Concat)">
                    <argument xmi:id="_30xWbtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_30xWQ9XWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWb9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWcNXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <argument xmi:id="_30xWcdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_30xWRNXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWctXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWc9XWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_30xWdNXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_30xWadXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWddXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWdtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWd9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWeNXWEem1l5O0R0OWkQ" target="_30xWfNXWEem1l5O0R0OWkQ" source="_30xWedXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30xWedXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_30xVXdXWEem1l5O0R0OWkQ" outgoing="_30xWeNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWetXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWe9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_30xWfNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_30xWeNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWfdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWftXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWf9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@588bb214)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWgNXWEem1l5O0R0OWkQ" target="_30xWhNXWEem1l5O0R0OWkQ" source="_30xWgdXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30xWgdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@588bb214).input" incoming="_30xVetXWEem1l5O0R0OWkQ" outgoing="_30xWgNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWgtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWg9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_30xWhNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@588bb214).output" incoming="_30xWgNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWhdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWhtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWh9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWiNXWEem1l5O0R0OWkQ" target="_30xWjNXWEem1l5O0R0OWkQ" source="_30xWidXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30xWidXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_30xVXtXWEem1l5O0R0OWkQ" outgoing="_30xWiNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWitXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWi9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_30xWjNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_30xWiNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWjdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWjtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWj9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWkNXWEem1l5O0R0OWkQ" target="_30xWlNXWEem1l5O0R0OWkQ" source="_30xWkdXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30xWkdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_30xVX9XWEem1l5O0R0OWkQ" outgoing="_30xWkNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWktXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWk9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_30xWlNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_30xWkNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWldXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWltXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xWl9XWEem1l5O0R0OWkQ" name="Value(true)">
              <result xmi:id="_30xWmNXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWmdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWmtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_30xWm9XWEem1l5O0R0OWkQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWnNXWEem1l5O0R0OWkQ" name="ExpressionStatement@4130d86c">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWndXWEem1l5O0R0OWkQ" target="_30xWoNXWEem1l5O0R0OWkQ" source="_30xW0NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30xWntXWEem1l5O0R0OWkQ" target="_30xWn9XWEem1l5O0R0OWkQ" source="_30xWo9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xWn9XWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_30xWntXWEem1l5O0R0OWkQ" behavior="_30x9YNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_30xWoNXWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_30xWndXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWodXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWotXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWo9XWEem1l5O0R0OWkQ" name="Tuple@4034d54c" outgoing="_30xWntXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWpNXWEem1l5O0R0OWkQ" target="_30xWuNXWEem1l5O0R0OWkQ" source="_30xWsNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30xWpdXWEem1l5O0R0OWkQ" target="_30xWt9XWEem1l5O0R0OWkQ" source="_30xWr9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWptXWEem1l5O0R0OWkQ" target="_30xWw9XWEem1l5O0R0OWkQ" source="_30xWsNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30xWp9XWEem1l5O0R0OWkQ" target="_30xWz9XWEem1l5O0R0OWkQ" source="_30xWztXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWqNXWEem1l5O0R0OWkQ" target="_30xWz9XWEem1l5O0R0OWkQ" source="_30xWu9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30xWqdXWEem1l5O0R0OWkQ" target="_30xWvtXWEem1l5O0R0OWkQ" source="_30xWz9XWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_30xWqtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30xWq9XWEem1l5O0R0OWkQ" target="_30xWxNXWEem1l5O0R0OWkQ" source="_30xWz9XWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_30xWrNXWEem1l5O0R0OWkQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWrdXWEem1l5O0R0OWkQ" target="_30xW0NXWEem1l5O0R0OWkQ" source="_30xWwNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWrtXWEem1l5O0R0OWkQ" target="_30xW0NXWEem1l5O0R0OWkQ" source="_30xWxtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWr9XWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@9ffd447)" outgoing="_30xWpdXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ForkNode" xmi:id="_30xWsNXWEem1l5O0R0OWkQ" name="Fork('')@1eaa93e5" incoming="_30xVYNXWEem1l5O0R0OWkQ" outgoing="_30xWpNXWEem1l5O0R0OWkQ _30xWptXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWsdXWEem1l5O0R0OWkQ" name="RightHandSide@7c07a84c"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xWstXWEem1l5O0R0OWkQ" name="Value(null)">
                    <result xmi:id="_30xWs9XWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWtNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWtdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_30xWttXWEem1l5O0R0OWkQ"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xWt9XWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_30xWpdXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_30xWuNXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_30xWpNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWudXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWutXWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_30xWu9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_30xWqNXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWvNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWvdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWvtXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@513c208e.operand2" incoming="_30xWqdXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWv9XWEem1l5O0R0OWkQ" target="_30xWwNXWEem1l5O0R0OWkQ" source="_30xWw9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_30xWwNXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@513c208e.operand2.result" incoming="_30xWv9XWEem1l5O0R0OWkQ" outgoing="_30xWrdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWwdXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWwtXWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_30xWw9XWEem1l5O0R0OWkQ" name="Merge(Fork('')@1eaa93e5)" incoming="_30xWptXWEem1l5O0R0OWkQ" outgoing="_30xWv9XWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xWxNXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@513c208e.operand3" incoming="_30xWq9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xWxdXWEem1l5O0R0OWkQ" target="_30xWxtXWEem1l5O0R0OWkQ" source="_30xWytXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_30xWxtXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@513c208e.operand3.result" incoming="_30xWxdXWEem1l5O0R0OWkQ" outgoing="_30xWrtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWx9XWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWyNXWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xWydXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;)">
                    <result xmi:id="_30xWytXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;).result" outgoing="_30xWxdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xWy9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xWzNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_30xWzdXWEem1l5O0R0OWkQ" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_30xWztXWEem1l5O0R0OWkQ" name="Initial(NullCoalescingExpression@513c208e)" outgoing="_30xWp9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_30xWz9XWEem1l5O0R0OWkQ" name="Decision(NullCoalescingExpression@513c208e)" incoming="_30xWp9XWEem1l5O0R0OWkQ _30xWqNXWEem1l5O0R0OWkQ" outgoing="_30xWqdXWEem1l5O0R0OWkQ _30xWq9XWEem1l5O0R0OWkQ" decisionInputFlow="_30xWqNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_30xW0NXWEem1l5O0R0OWkQ" name="Merge(NullCoalescingExpression@513c208e.result)" incoming="_30xWrdXWEem1l5O0R0OWkQ _30xWrtXWEem1l5O0R0OWkQ" outgoing="_30xWndXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xW0dXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xW0tXWEem1l5O0R0OWkQ" target="_30xW1tXWEem1l5O0R0OWkQ" source="_30xW09XWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30xW09XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_30xVYdXWEem1l5O0R0OWkQ" outgoing="_30xW0tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xW1NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xW1dXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_30xW1tXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_30xW0tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xW19XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xW2NXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xW2dXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@588bb214)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xW2tXWEem1l5O0R0OWkQ" target="_30xW3tXWEem1l5O0R0OWkQ" source="_30xW29XWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30xW29XWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@588bb214).input" incoming="_30xVe9XWEem1l5O0R0OWkQ" outgoing="_30xW2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xW3NXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xW3dXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_30xW3tXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@588bb214).output" incoming="_30xW2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xW39XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xW4NXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xW4dXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xW4tXWEem1l5O0R0OWkQ" target="_30xW5tXWEem1l5O0R0OWkQ" source="_30xW49XWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30xW49XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_30xVYtXWEem1l5O0R0OWkQ" outgoing="_30xW4tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xW5NXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xW5dXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_30xW5tXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_30xW4tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xW59XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xW6NXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xW6dXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xW6tXWEem1l5O0R0OWkQ" target="_30xW7tXWEem1l5O0R0OWkQ" source="_30xW69XWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30xW69XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_30xVY9XWEem1l5O0R0OWkQ" outgoing="_30xW6tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xW7NXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xW7dXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_30xW7tXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_30xW6tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xW79XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xW8NXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_30xW8dXWEem1l5O0R0OWkQ" body="_30xWN9XWEem1l5O0R0OWkQ _30xWd9XWEem1l5O0R0OWkQ _30xWf9XWEem1l5O0R0OWkQ _30xWh9XWEem1l5O0R0OWkQ _30xWj9XWEem1l5O0R0OWkQ" bodyOutput="_30xWfNXWEem1l5O0R0OWkQ _30xWhNXWEem1l5O0R0OWkQ _30xWjNXWEem1l5O0R0OWkQ _30xWlNXWEem1l5O0R0OWkQ" decider="_30xWNNXWEem1l5O0R0OWkQ" successorClause="_30xW8tXWEem1l5O0R0OWkQ" test="_30xWKNXWEem1l5O0R0OWkQ"/>
            <clause xmi:id="_30xW8tXWEem1l5O0R0OWkQ" body="_30xWnNXWEem1l5O0R0OWkQ _30xW0dXWEem1l5O0R0OWkQ _30xW2dXWEem1l5O0R0OWkQ _30xW4dXWEem1l5O0R0OWkQ _30xW6dXWEem1l5O0R0OWkQ" bodyOutput="_30xW1tXWEem1l5O0R0OWkQ _30xW3tXWEem1l5O0R0OWkQ _30xW5tXWEem1l5O0R0OWkQ _30xW7tXWEem1l5O0R0OWkQ" decider="_30xWmNXWEem1l5O0R0OWkQ" predecessorClause="_30xW8dXWEem1l5O0R0OWkQ" test="_30xWl9XWEem1l5O0R0OWkQ"/>
            <result xmi:id="_30xW89XWEem1l5O0R0OWkQ" name="IfStatement@73a77346.result(label)" outgoing="_30xVdNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xW9NXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xW9dXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_30xW9tXWEem1l5O0R0OWkQ" name="IfStatement@73a77346.result(s)" outgoing="_30xVddXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xW99XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xW-NXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_30xW-dXWEem1l5O0R0OWkQ" name="IfStatement@73a77346.result(value2)" outgoing="_30xVdtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xW-tXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xW-9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_30xW_NXWEem1l5O0R0OWkQ" name="IfStatement@73a77346.result(value1)" outgoing="_30xVd9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xW_dXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xW_tXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_30xW_9XWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_30xVdNXWEem1l5O0R0OWkQ" outgoing="_30xVftXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_30xXANXWEem1l5O0R0OWkQ" name="Fork(s)" incoming="_30xVddXWEem1l5O0R0OWkQ" outgoing="_30xVf9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_30xXAdXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_30xVdtXWEem1l5O0R0OWkQ" outgoing="_30xVgNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_30xXAtXWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_30xVd9XWEem1l5O0R0OWkQ" outgoing="_30xVgdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXA9XWEem1l5O0R0OWkQ" name="ExpressionStatement@31b6eb8f" incoming="_30xVfdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXBNXWEem1l5O0R0OWkQ" target="_30xXB9XWEem1l5O0R0OWkQ" source="_30xXD9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xXBdXWEem1l5O0R0OWkQ" target="_30xXBtXWEem1l5O0R0OWkQ" source="_30xXDdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xXBtXWEem1l5O0R0OWkQ" name="Call(WriteLine)" incoming="_30xXBdXWEem1l5O0R0OWkQ">
              <argument xmi:id="_30xXB9XWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_30xXBNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXCNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXCdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_30xXCtXWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXC9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXDNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXDdXWEem1l5O0R0OWkQ" name="Tuple@3f25d83e" outgoing="_30xXBdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xXDtXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;)">
                <result xmi:id="_30xXD9XWEem1l5O0R0OWkQ" name="Value(&quot;&quot;).result" outgoing="_30xXBNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXENXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXEdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_30xXEtXWEem1l5O0R0OWkQ" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXE9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXFNXWEem1l5O0R0OWkQ" target="_30xXGNXWEem1l5O0R0OWkQ" source="_30xXFdXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_30xXFdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_30xVftXWEem1l5O0R0OWkQ" outgoing="_30xXFNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXFtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXF9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_30xXGNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_30xXFNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXGdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXGtXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXG9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXHNXWEem1l5O0R0OWkQ" target="_30xXINXWEem1l5O0R0OWkQ" source="_30xXHdXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_30xXHdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).input" incoming="_30xVf9XWEem1l5O0R0OWkQ" outgoing="_30xXHNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXHtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXH9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_30xXINXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).output" incoming="_30xXHNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXIdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXItXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXI9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXJNXWEem1l5O0R0OWkQ" target="_30xXKNXWEem1l5O0R0OWkQ" source="_30xXJdXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_30xXJdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_30xVgNXWEem1l5O0R0OWkQ" outgoing="_30xXJNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXJtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXJ9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_30xXKNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_30xXJNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXKdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXKtXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXK9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXLNXWEem1l5O0R0OWkQ" target="_30xXMNXWEem1l5O0R0OWkQ" source="_30xXLdXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_30xXLdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_30xVgdXWEem1l5O0R0OWkQ" outgoing="_30xXLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXLtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXL9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_30xXMNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_30xXLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXMdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXMtXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xXM9XWEem1l5O0R0OWkQ" name="Value(true)">
            <result xmi:id="_30xXNNXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXNdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXNtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_30xXN9XWEem1l5O0R0OWkQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXONXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXOdXWEem1l5O0R0OWkQ" target="_30xXPdXWEem1l5O0R0OWkQ" source="_30xXOtXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_30xXOtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_30xVZNXWEem1l5O0R0OWkQ" outgoing="_30xXOdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXO9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXPNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_30xXPdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_30xXOdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXPtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXP9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xXQNXWEem1l5O0R0OWkQ" name="Value(null)">
            <result xmi:id="_30xXQdXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXQtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXQ9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_30xXRNXWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXRdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXRtXWEem1l5O0R0OWkQ" target="_30xXStXWEem1l5O0R0OWkQ" source="_30xXR9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_30xXR9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_30xVZdXWEem1l5O0R0OWkQ" outgoing="_30xXRtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXSNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXSdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_30xXStXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_30xXRtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXS9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXTNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXTdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXTtXWEem1l5O0R0OWkQ" target="_30xXUtXWEem1l5O0R0OWkQ" source="_30xXT9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_30xXT9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_30xVZtXWEem1l5O0R0OWkQ" outgoing="_30xXTtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXUNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXUdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_30xXUtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_30xXTtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXU9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXVNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_30xXVdXWEem1l5O0R0OWkQ" body="_30xVz9XWEem1l5O0R0OWkQ _30xWD9XWEem1l5O0R0OWkQ _30xWJ9XWEem1l5O0R0OWkQ _30xXA9XWEem1l5O0R0OWkQ _30xXE9XWEem1l5O0R0OWkQ _30xXG9XWEem1l5O0R0OWkQ _30xXI9XWEem1l5O0R0OWkQ _30xXK9XWEem1l5O0R0OWkQ" bodyOutput="_30xXGNXWEem1l5O0R0OWkQ _30xXINXWEem1l5O0R0OWkQ _30xXKNXWEem1l5O0R0OWkQ _30xXMNXWEem1l5O0R0OWkQ" decider="_30xVzNXWEem1l5O0R0OWkQ" successorClause="_30xXVtXWEem1l5O0R0OWkQ" test="_30xVgtXWEem1l5O0R0OWkQ"/>
          <clause xmi:id="_30xXVtXWEem1l5O0R0OWkQ" body="_30xXONXWEem1l5O0R0OWkQ _30xXQNXWEem1l5O0R0OWkQ _30xXRdXWEem1l5O0R0OWkQ _30xXTdXWEem1l5O0R0OWkQ" bodyOutput="_30xXPdXWEem1l5O0R0OWkQ _30xXQdXWEem1l5O0R0OWkQ _30xXStXWEem1l5O0R0OWkQ _30xXUtXWEem1l5O0R0OWkQ" decider="_30xXNNXWEem1l5O0R0OWkQ" predecessorClause="_30xXVdXWEem1l5O0R0OWkQ" test="_30xXM9XWEem1l5O0R0OWkQ"/>
          <result xmi:id="_30xXV9XWEem1l5O0R0OWkQ" name="IfStatement@2a38c656.result(label)" outgoing="_30xVbtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXWNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXWdXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_30xXWtXWEem1l5O0R0OWkQ" name="IfStatement@2a38c656.result(s)" outgoing="_30xVb9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXW9XWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXXNXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_30xXXdXWEem1l5O0R0OWkQ" name="IfStatement@2a38c656.result(value2)" outgoing="_30xVcNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXXtXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXX9XWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_30xXYNXWEem1l5O0R0OWkQ" name="IfStatement@2a38c656.result(value1)" outgoing="_30xVcdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXYdXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXYtXWEem1l5O0R0OWkQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_30xXY9XWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_30xVbtXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_30xXZNXWEem1l5O0R0OWkQ" name="Fork(s)" incoming="_30xVb9XWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_30xXZdXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_30xVcNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_30xXZtXWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_30xVcdXWEem1l5O0R0OWkQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_30xVZ9XWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_30xVVtXWEem1l5O0R0OWkQ" parameter="_30xVTdXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_30xVaNXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_30xVVtXWEem1l5O0R0OWkQ" outgoing="_30xVW9XWEem1l5O0R0OWkQ _30xVXdXWEem1l5O0R0OWkQ _30xVYdXWEem1l5O0R0OWkQ _30xVZNXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_30xVadXWEem1l5O0R0OWkQ" name="Input(value1)" outgoing="_30xVV9XWEem1l5O0R0OWkQ" parameter="_30xVUNXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_30xVatXWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_30xVV9XWEem1l5O0R0OWkQ" outgoing="_30xVWdXWEem1l5O0R0OWkQ _30xVX9XWEem1l5O0R0OWkQ _30xVY9XWEem1l5O0R0OWkQ _30xVZtXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_30xVa9XWEem1l5O0R0OWkQ" name="Input(value2)" outgoing="_30xVWNXWEem1l5O0R0OWkQ" parameter="_30xVU9XWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_30xVbNXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_30xVWNXWEem1l5O0R0OWkQ" outgoing="_30xVWtXWEem1l5O0R0OWkQ _30xVXNXWEem1l5O0R0OWkQ _30xVXtXWEem1l5O0R0OWkQ _30xVYNXWEem1l5O0R0OWkQ _30xVYtXWEem1l5O0R0OWkQ _30xVZdXWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_30xXZ9XWEem1l5O0R0OWkQ" name="AssertList" visibility="public" node="_30xXgdXWEem1l5O0R0OWkQ _30xXgtXWEem1l5O0R0OWkQ _30xXg9XWEem1l5O0R0OWkQ _30xXhNXWEem1l5O0R0OWkQ _30xXhdXWEem1l5O0R0OWkQ _30xXhtXWEem1l5O0R0OWkQ _30xXh9XWEem1l5O0R0OWkQ" group="_30xXh9XWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_30xXaNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_30xXadXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_30xXatXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_30xXa9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_30xXbNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_30xXbdXWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXbtXWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXb9XWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_30xXcNXWEem1l5O0R0OWkQ" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXcdXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXctXWEem1l5O0R0OWkQ" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_30xXc9XWEem1l5O0R0OWkQ" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXdNXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXddXWEem1l5O0R0OWkQ" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXdtXWEem1l5O0R0OWkQ" target="_30xXgtXWEem1l5O0R0OWkQ" source="_30xXgdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXd9XWEem1l5O0R0OWkQ" target="_30xXhNXWEem1l5O0R0OWkQ" source="_30xXg9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXeNXWEem1l5O0R0OWkQ" target="_30xXhtXWEem1l5O0R0OWkQ" source="_30xXhdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXedXWEem1l5O0R0OWkQ" target="_30xXpNXWEem1l5O0R0OWkQ" source="_30xXgtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXetXWEem1l5O0R0OWkQ" target="_30xXv9XWEem1l5O0R0OWkQ" source="_30xXhNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXe9XWEem1l5O0R0OWkQ" target="_30xXy9XWEem1l5O0R0OWkQ" source="_30xXhtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXfNXWEem1l5O0R0OWkQ" target="_30x74NXWEem1l5O0R0OWkQ" source="_30xXgtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXfdXWEem1l5O0R0OWkQ" target="_30x749XWEem1l5O0R0OWkQ" source="_30xXhNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXftXWEem1l5O0R0OWkQ" target="_30x75tXWEem1l5O0R0OWkQ" source="_30xXhtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXf9XWEem1l5O0R0OWkQ" target="_30x8GdXWEem1l5O0R0OWkQ" source="_30xXhNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXgNXWEem1l5O0R0OWkQ" target="_30x8JdXWEem1l5O0R0OWkQ" source="_30xXhtXWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_30xXh9XWEem1l5O0R0OWkQ" name="Body(AssertList)">
        <edge xmi:type="uml:ControlFlow" xmi:id="_30xXiNXWEem1l5O0R0OWkQ" target="_30xX0dXWEem1l5O0R0OWkQ" source="_30xXidXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXidXWEem1l5O0R0OWkQ" name="ExpressionStatement@531797a0" outgoing="_30xXiNXWEem1l5O0R0OWkQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXitXWEem1l5O0R0OWkQ" target="_30xXj9XWEem1l5O0R0OWkQ" source="_30xXrNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXi9XWEem1l5O0R0OWkQ" target="_30xXktXWEem1l5O0R0OWkQ" source="_30xXu9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXjNXWEem1l5O0R0OWkQ" target="_30xXldXWEem1l5O0R0OWkQ" source="_30xXx9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30xXjdXWEem1l5O0R0OWkQ" target="_30xXjtXWEem1l5O0R0OWkQ" source="_30xXmNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xXjtXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_30xXjdXWEem1l5O0R0OWkQ" behavior="_30xVR9XWEem1l5O0R0OWkQ">
            <argument xmi:id="_30xXj9XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_30xXitXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXkNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXkdXWEem1l5O0R0OWkQ" value="1"/>
            </argument>
            <argument xmi:id="_30xXktXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_30xXi9XWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXk9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXlNXWEem1l5O0R0OWkQ" value="1"/>
            </argument>
            <argument xmi:id="_30xXldXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_30xXjNXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXltXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXl9XWEem1l5O0R0OWkQ" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXmNXWEem1l5O0R0OWkQ" name="Tuple@4b8f72e" outgoing="_30xXjdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXmdXWEem1l5O0R0OWkQ" target="_30xXsNXWEem1l5O0R0OWkQ" source="_30xXp9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXmtXWEem1l5O0R0OWkQ" target="_30xXs9XWEem1l5O0R0OWkQ" source="_30xXntXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xXm9XWEem1l5O0R0OWkQ" target="_30xXqtXWEem1l5O0R0OWkQ" source="_30xXotXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xXnNXWEem1l5O0R0OWkQ" target="_30xXqtXWEem1l5O0R0OWkQ" source="_30xXndXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xXndXWEem1l5O0R0OWkQ" name="Value(&quot;->size()&quot;)" outgoing="_30xXnNXWEem1l5O0R0OWkQ">
              <result xmi:id="_30xXntXWEem1l5O0R0OWkQ" name="Value(&quot;->size()&quot;).result" outgoing="_30xXmtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXn9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXoNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_30xXodXWEem1l5O0R0OWkQ" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXotXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_30xXm9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXo9XWEem1l5O0R0OWkQ" target="_30xXp9XWEem1l5O0R0OWkQ" source="_30xXpNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30xXpNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_30xXedXWEem1l5O0R0OWkQ" outgoing="_30xXo9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXpdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXptXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_30xXp9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_30xXo9XWEem1l5O0R0OWkQ" outgoing="_30xXmdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXqNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXqdXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXqtXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_30xXm9XWEem1l5O0R0OWkQ _30xXnNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXq9XWEem1l5O0R0OWkQ" target="_30xXrNXWEem1l5O0R0OWkQ" source="_30xXttXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_30xXrNXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_30xXq9XWEem1l5O0R0OWkQ" outgoing="_30xXitXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXrdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXrtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xXr9XWEem1l5O0R0OWkQ" name="Call(Concat)">
                <argument xmi:id="_30xXsNXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_30xXmdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXsdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXstXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30xXs9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_30xXmtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXtNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXtdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_30xXttXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_30xXq9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXt9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXuNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXudXWEem1l5O0R0OWkQ" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXutXWEem1l5O0R0OWkQ" target="_30xXu9XWEem1l5O0R0OWkQ" source="_30xXwtXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_30xXu9XWEem1l5O0R0OWkQ" name="Output(Call(Size).result())" incoming="_30xXutXWEem1l5O0R0OWkQ" outgoing="_30xXi9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXvNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXvdXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xXvtXWEem1l5O0R0OWkQ" name="Call(Size)">
                <argument xmi:id="_30xXv9XWEem1l5O0R0OWkQ" name="Call(Size).argument(seq)" incoming="_30xXetXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXwNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXwdXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_30xXwtXWEem1l5O0R0OWkQ" name="Call(Size).result()" outgoing="_30xXutXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXw9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXxNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xXxdXWEem1l5O0R0OWkQ" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xXxtXWEem1l5O0R0OWkQ" target="_30xXx9XWEem1l5O0R0OWkQ" source="_30xXztXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_30xXx9XWEem1l5O0R0OWkQ" name="Output(Call(Size).result())" incoming="_30xXxtXWEem1l5O0R0OWkQ" outgoing="_30xXjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXyNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXydXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xXytXWEem1l5O0R0OWkQ" name="Call(Size)">
                <argument xmi:id="_30xXy9XWEem1l5O0R0OWkQ" name="Call(Size).argument(seq)" incoming="_30xXe9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXzNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xXzdXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_30xXztXWEem1l5O0R0OWkQ" name="Call(Size).result()" outgoing="_30xXxtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xXz9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xX0NXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xX0dXWEem1l5O0R0OWkQ" name="ForStatement@3089208f" incoming="_30xXiNXWEem1l5O0R0OWkQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX0tXWEem1l5O0R0OWkQ" target="_30x8OtXWEem1l5O0R0OWkQ" source="_30x8DtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX09XWEem1l5O0R0OWkQ" target="_30x77NXWEem1l5O0R0OWkQ" source="_30x8VdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX1NXWEem1l5O0R0OWkQ" target="_30x779XWEem1l5O0R0OWkQ" source="_30x8UdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX1dXWEem1l5O0R0OWkQ" target="_30x76dXWEem1l5O0R0OWkQ" source="_30x8OtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30xX1tXWEem1l5O0R0OWkQ" target="_30xX19XWEem1l5O0R0OWkQ" source="_30x8BNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:LoopNode" xmi:id="_30xX19XWEem1l5O0R0OWkQ" name="Loop(ForStatement@3089208f)" incoming="_30xX1tXWEem1l5O0R0OWkQ" bodyOutput="_30xYBNXWEem1l5O0R0OWkQ _30xYB9XWEem1l5O0R0OWkQ _30xYCtXWEem1l5O0R0OWkQ _30x7xtXWEem1l5O0R0OWkQ _30xYq9XWEem1l5O0R0OWkQ _30xYuNXWEem1l5O0R0OWkQ" bodyPart="_30xX_tXWEem1l5O0R0OWkQ _30xX_9XWEem1l5O0R0OWkQ _30xYu9XWEem1l5O0R0OWkQ _30x7ydXWEem1l5O0R0OWkQ" decider="_30xX-9XWEem1l5O0R0OWkQ" isTestedFirst="true" test="_30xX9NXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX2NXWEem1l5O0R0OWkQ" target="_30xX7tXWEem1l5O0R0OWkQ" source="_30x7ztXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX2dXWEem1l5O0R0OWkQ" target="_30xX79XWEem1l5O0R0OWkQ" source="_30x70dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX2tXWEem1l5O0R0OWkQ" target="_30xX8NXWEem1l5O0R0OWkQ" source="_30x71NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX29XWEem1l5O0R0OWkQ" target="_30xX8dXWEem1l5O0R0OWkQ" source="_30x719XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX3NXWEem1l5O0R0OWkQ" target="_30xX8tXWEem1l5O0R0OWkQ" source="_30x72tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX3dXWEem1l5O0R0OWkQ" target="_30xX89XWEem1l5O0R0OWkQ" source="_30x73dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX3tXWEem1l5O0R0OWkQ" target="_30xX9dXWEem1l5O0R0OWkQ" source="_30xX8tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX39XWEem1l5O0R0OWkQ" target="_30xX-NXWEem1l5O0R0OWkQ" source="_30xX89XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30xX4NXWEem1l5O0R0OWkQ" target="_30xX_9XWEem1l5O0R0OWkQ" source="_30xX_tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX4dXWEem1l5O0R0OWkQ" target="_30xYTdXWEem1l5O0R0OWkQ" source="_30xX8dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX4tXWEem1l5O0R0OWkQ" target="_30xYgNXWEem1l5O0R0OWkQ" source="_30xX8dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX49XWEem1l5O0R0OWkQ" target="_30xYi9XWEem1l5O0R0OWkQ" source="_30xX8dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX5NXWEem1l5O0R0OWkQ" target="_30x7wNXWEem1l5O0R0OWkQ" source="_30xX8dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX5dXWEem1l5O0R0OWkQ" target="_30x7w9XWEem1l5O0R0OWkQ" source="_30x7ytXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX5tXWEem1l5O0R0OWkQ" target="_30xYpdXWEem1l5O0R0OWkQ" source="_30xX8tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX59XWEem1l5O0R0OWkQ" target="_30xYtdXWEem1l5O0R0OWkQ" source="_30xX89XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX6NXWEem1l5O0R0OWkQ" target="_30xYMtXWEem1l5O0R0OWkQ" source="_30xX7tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX6dXWEem1l5O0R0OWkQ" target="_30xYd9XWEem1l5O0R0OWkQ" source="_30xX79XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX6tXWEem1l5O0R0OWkQ" target="_30xYgtXWEem1l5O0R0OWkQ" source="_30xX8NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX69XWEem1l5O0R0OWkQ" target="_30xYjtXWEem1l5O0R0OWkQ" source="_30xX7tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX7NXWEem1l5O0R0OWkQ" target="_30xYltXWEem1l5O0R0OWkQ" source="_30xX79XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30xX7dXWEem1l5O0R0OWkQ" target="_30xYntXWEem1l5O0R0OWkQ" source="_30xX8NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30xX7tXWEem1l5O0R0OWkQ" name="Fork(ForStatement@3089208f.loopVariable(label))" incoming="_30xX2NXWEem1l5O0R0OWkQ" outgoing="_30xX6NXWEem1l5O0R0OWkQ _30xX69XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30xX79XWEem1l5O0R0OWkQ" name="Fork(ForStatement@3089208f.loopVariable(list))" incoming="_30xX2dXWEem1l5O0R0OWkQ" outgoing="_30xX6dXWEem1l5O0R0OWkQ _30xX7NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30xX8NXWEem1l5O0R0OWkQ" name="Fork(ForStatement@3089208f.loopVariable(expected))" incoming="_30xX2tXWEem1l5O0R0OWkQ" outgoing="_30xX6tXWEem1l5O0R0OWkQ _30xX7dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30xX8dXWEem1l5O0R0OWkQ" name="Fork(ForStatement@3089208f.loopVariable(i))" incoming="_30xX29XWEem1l5O0R0OWkQ" outgoing="_30xX4dXWEem1l5O0R0OWkQ _30xX4tXWEem1l5O0R0OWkQ _30xX49XWEem1l5O0R0OWkQ _30xX5NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30xX8tXWEem1l5O0R0OWkQ" name="Fork(ForStatement@3089208f.loopVariable(counter))" incoming="_30xX3NXWEem1l5O0R0OWkQ" outgoing="_30xX3tXWEem1l5O0R0OWkQ _30xX5tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_30xX89XWEem1l5O0R0OWkQ" name="Fork(ForStatement@3089208f.loopVariable(upper))" incoming="_30xX3dXWEem1l5O0R0OWkQ" outgoing="_30xX39XWEem1l5O0R0OWkQ _30xX59XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xX9NXWEem1l5O0R0OWkQ" name="Call(&lt;=)">
              <argument xmi:id="_30xX9dXWEem1l5O0R0OWkQ" name="Call(&lt;=).argument(x)" incoming="_30xX3tXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xX9tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xX99XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_30xX-NXWEem1l5O0R0OWkQ" name="Call(&lt;=).argument(y)" incoming="_30xX39XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xX-dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xX-tXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_30xX-9XWEem1l5O0R0OWkQ" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xX_NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xX_dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xX_tXWEem1l5O0R0OWkQ" name="Values(ForStatement@3089208f)" outgoing="_30xX4NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xX_9XWEem1l5O0R0OWkQ" name="Body(ForStatement@3089208f)" incoming="_30xX4NXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYANXWEem1l5O0R0OWkQ" target="_30xYBNXWEem1l5O0R0OWkQ" source="_30xYkdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYAdXWEem1l5O0R0OWkQ" target="_30xYB9XWEem1l5O0R0OWkQ" source="_30xYmdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYAtXWEem1l5O0R0OWkQ" target="_30xYCtXWEem1l5O0R0OWkQ" source="_30xYodXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYA9XWEem1l5O0R0OWkQ" target="_30xYqNXWEem1l5O0R0OWkQ" source="_30xYr9XWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_30xYBNXWEem1l5O0R0OWkQ" name="label" incoming="_30xYANXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYBdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYBtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_30xYB9XWEem1l5O0R0OWkQ" name="list" incoming="_30xYAdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYCNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYCdXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_30xYCtXWEem1l5O0R0OWkQ" name="expected" incoming="_30xYAtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYC9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYDNXWEem1l5O0R0OWkQ" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xYDdXWEem1l5O0R0OWkQ" name="ExpressionStatement@3697bc93">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYDtXWEem1l5O0R0OWkQ" target="_30xYE9XWEem1l5O0R0OWkQ" source="_30xYadXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYD9XWEem1l5O0R0OWkQ" target="_30xYFtXWEem1l5O0R0OWkQ" source="_30xYfdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYENXWEem1l5O0R0OWkQ" target="_30xYGdXWEem1l5O0R0OWkQ" source="_30xYiNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_30xYEdXWEem1l5O0R0OWkQ" target="_30xYEtXWEem1l5O0R0OWkQ" source="_30xYHNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xYEtXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_30xYEdXWEem1l5O0R0OWkQ" behavior="_30xVR9XWEem1l5O0R0OWkQ">
                  <argument xmi:id="_30xYE9XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_30xYDtXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYFNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYFdXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_30xYFtXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_30xYD9XWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYF9XWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYGNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_30xYGdXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_30xYENXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYGtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYG9XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xYHNXWEem1l5O0R0OWkQ" name="Tuple@3d4be705" outgoing="_30xYEdXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYHdXWEem1l5O0R0OWkQ" target="_30xYPtXWEem1l5O0R0OWkQ" source="_30xYNdXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYHtXWEem1l5O0R0OWkQ" target="_30xYQdXWEem1l5O0R0OWkQ" source="_30xYLNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_30xYH9XWEem1l5O0R0OWkQ" target="_30xYONXWEem1l5O0R0OWkQ" source="_30xYMNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_30xYINXWEem1l5O0R0OWkQ" target="_30xYONXWEem1l5O0R0OWkQ" source="_30xYK9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYIdXWEem1l5O0R0OWkQ" target="_30xYWdXWEem1l5O0R0OWkQ" source="_30xYOtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYItXWEem1l5O0R0OWkQ" target="_30xYXNXWEem1l5O0R0OWkQ" source="_30xYSdXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_30xYI9XWEem1l5O0R0OWkQ" target="_30xYU9XWEem1l5O0R0OWkQ" source="_30xYONXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_30xYJNXWEem1l5O0R0OWkQ" target="_30xYU9XWEem1l5O0R0OWkQ" source="_30xYR9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYJdXWEem1l5O0R0OWkQ" target="_30xYbdXWEem1l5O0R0OWkQ" source="_30xYVdXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYJtXWEem1l5O0R0OWkQ" target="_30xYcNXWEem1l5O0R0OWkQ" source="_30xYY9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_30xYJ9XWEem1l5O0R0OWkQ" target="_30xYZ9XWEem1l5O0R0OWkQ" source="_30xYU9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_30xYKNXWEem1l5O0R0OWkQ" target="_30xYZ9XWEem1l5O0R0OWkQ" source="_30xYYtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYKdXWEem1l5O0R0OWkQ" target="_30xYetXWEem1l5O0R0OWkQ" source="_30xYgNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYKtXWEem1l5O0R0OWkQ" target="_30xYhdXWEem1l5O0R0OWkQ" source="_30xYi9XWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xYK9XWEem1l5O0R0OWkQ" name="Value(&quot;[&quot;)" outgoing="_30xYINXWEem1l5O0R0OWkQ">
                    <result xmi:id="_30xYLNXWEem1l5O0R0OWkQ" name="Value(&quot;[&quot;).result" outgoing="_30xYHtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYLdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYLtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_30xYL9XWEem1l5O0R0OWkQ" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xYMNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_30xYH9XWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYMdXWEem1l5O0R0OWkQ" target="_30xYNdXWEem1l5O0R0OWkQ" source="_30xYMtXWEem1l5O0R0OWkQ"/>
                    <structuredNodeInput xmi:id="_30xYMtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_30xX6NXWEem1l5O0R0OWkQ" outgoing="_30xYMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYM9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYNNXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_30xYNdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_30xYMdXWEem1l5O0R0OWkQ" outgoing="_30xYHdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYNtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYN9XWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xYONXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_30xYH9XWEem1l5O0R0OWkQ _30xYINXWEem1l5O0R0OWkQ" outgoing="_30xYI9XWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYOdXWEem1l5O0R0OWkQ" target="_30xYOtXWEem1l5O0R0OWkQ" source="_30xYRNXWEem1l5O0R0OWkQ"/>
                    <structuredNodeOutput xmi:id="_30xYOtXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_30xYOdXWEem1l5O0R0OWkQ" outgoing="_30xYIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYO9XWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYPNXWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xYPdXWEem1l5O0R0OWkQ" name="Call(Concat)">
                      <argument xmi:id="_30xYPtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_30xYHdXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYP9XWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYQNXWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <argument xmi:id="_30xYQdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_30xYHtXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYQtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYQ9XWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_30xYRNXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_30xYOdXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYRdXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYRtXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xYR9XWEem1l5O0R0OWkQ" name="Node(Call(ToString))" outgoing="_30xYJNXWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYSNXWEem1l5O0R0OWkQ" target="_30xYSdXWEem1l5O0R0OWkQ" source="_30xYUNXWEem1l5O0R0OWkQ"/>
                    <structuredNodeOutput xmi:id="_30xYSdXWEem1l5O0R0OWkQ" name="Output(Call(ToString).result(result))" incoming="_30xYSNXWEem1l5O0R0OWkQ" outgoing="_30xYItXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYStXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYS9XWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xYTNXWEem1l5O0R0OWkQ" name="Call(ToString)">
                      <argument xmi:id="_30xYTdXWEem1l5O0R0OWkQ" name="Call(ToString).argument(x)" incoming="_30xX4dXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYTtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYT9XWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_30xYUNXWEem1l5O0R0OWkQ" name="Call(ToString).result(result)" outgoing="_30xYSNXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYUdXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYUtXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xYU9XWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_30xYI9XWEem1l5O0R0OWkQ _30xYJNXWEem1l5O0R0OWkQ" outgoing="_30xYJ9XWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYVNXWEem1l5O0R0OWkQ" target="_30xYVdXWEem1l5O0R0OWkQ" source="_30xYX9XWEem1l5O0R0OWkQ"/>
                    <structuredNodeOutput xmi:id="_30xYVdXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_30xYVNXWEem1l5O0R0OWkQ" outgoing="_30xYJdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYVtXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYV9XWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xYWNXWEem1l5O0R0OWkQ" name="Call(Concat)">
                      <argument xmi:id="_30xYWdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_30xYIdXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYWtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYW9XWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <argument xmi:id="_30xYXNXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_30xYItXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYXdXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYXtXWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_30xYX9XWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_30xYVNXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYYNXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYYdXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xYYtXWEem1l5O0R0OWkQ" name="Value(&quot;]&quot;)" outgoing="_30xYKNXWEem1l5O0R0OWkQ">
                    <result xmi:id="_30xYY9XWEem1l5O0R0OWkQ" name="Value(&quot;]&quot;).result" outgoing="_30xYJtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYZNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYZdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_30xYZtXWEem1l5O0R0OWkQ" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xYZ9XWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_30xYJ9XWEem1l5O0R0OWkQ _30xYKNXWEem1l5O0R0OWkQ">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYaNXWEem1l5O0R0OWkQ" target="_30xYadXWEem1l5O0R0OWkQ" source="_30xYc9XWEem1l5O0R0OWkQ"/>
                    <structuredNodeOutput xmi:id="_30xYadXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_30xYaNXWEem1l5O0R0OWkQ" outgoing="_30xYDtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYatXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYa9XWEem1l5O0R0OWkQ" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xYbNXWEem1l5O0R0OWkQ" name="Call(Concat)">
                      <argument xmi:id="_30xYbdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_30xYJdXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYbtXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYb9XWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <argument xmi:id="_30xYcNXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_30xYJtXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYcdXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYctXWEem1l5O0R0OWkQ" value="1"/>
                      </argument>
                      <result xmi:id="_30xYc9XWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_30xYaNXWEem1l5O0R0OWkQ">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYdNXWEem1l5O0R0OWkQ" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYddXWEem1l5O0R0OWkQ" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xYdtXWEem1l5O0R0OWkQ" name="Call(At)">
                    <argument xmi:id="_30xYd9XWEem1l5O0R0OWkQ" name="Call(At).argument(seq)" incoming="_30xX6dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYeNXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYedXWEem1l5O0R0OWkQ" value="*"/>
                    </argument>
                    <argument xmi:id="_30xYetXWEem1l5O0R0OWkQ" name="Call(At).argument(index)" incoming="_30xYKdXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYe9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYfNXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_30xYfdXWEem1l5O0R0OWkQ" name="Call(At).result()" outgoing="_30xYD9XWEem1l5O0R0OWkQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYftXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYf9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_30xYgNXWEem1l5O0R0OWkQ" name="Fork(Call(At).argument(index))" incoming="_30xX4tXWEem1l5O0R0OWkQ" outgoing="_30xYKdXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xYgdXWEem1l5O0R0OWkQ" name="Call(At)">
                    <argument xmi:id="_30xYgtXWEem1l5O0R0OWkQ" name="Call(At).argument(seq)" incoming="_30xX6tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYg9XWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYhNXWEem1l5O0R0OWkQ" value="*"/>
                    </argument>
                    <argument xmi:id="_30xYhdXWEem1l5O0R0OWkQ" name="Call(At).argument(index)" incoming="_30xYKtXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYhtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYh9XWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_30xYiNXWEem1l5O0R0OWkQ" name="Call(At).result()" outgoing="_30xYENXWEem1l5O0R0OWkQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYidXWEem1l5O0R0OWkQ"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYitXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_30xYi9XWEem1l5O0R0OWkQ" name="Fork(Call(At).argument(index))" incoming="_30xX49XWEem1l5O0R0OWkQ" outgoing="_30xYKtXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xYjNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYjdXWEem1l5O0R0OWkQ" target="_30xYkdXWEem1l5O0R0OWkQ" source="_30xYjtXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_30xYjtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_30xX69XWEem1l5O0R0OWkQ" outgoing="_30xYjdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYj9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYkNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_30xYkdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_30xYjdXWEem1l5O0R0OWkQ" outgoing="_30xYANXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYktXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYk9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xYlNXWEem1l5O0R0OWkQ" name="Passthru(Fork(list))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYldXWEem1l5O0R0OWkQ" target="_30xYmdXWEem1l5O0R0OWkQ" source="_30xYltXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_30xYltXWEem1l5O0R0OWkQ" name="Passthru(Fork(list)).input" incoming="_30xX7NXWEem1l5O0R0OWkQ" outgoing="_30xYldXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYl9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYmNXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_30xYmdXWEem1l5O0R0OWkQ" name="Passthru(Fork(list)).output" incoming="_30xYldXWEem1l5O0R0OWkQ" outgoing="_30xYAdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYmtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYm9XWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xYnNXWEem1l5O0R0OWkQ" name="Passthru(Fork(expected))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYndXWEem1l5O0R0OWkQ" target="_30xYodXWEem1l5O0R0OWkQ" source="_30xYntXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_30xYntXWEem1l5O0R0OWkQ" name="Passthru(Fork(expected)).input" incoming="_30xX7dXWEem1l5O0R0OWkQ" outgoing="_30xYndXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYn9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYoNXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_30xYodXWEem1l5O0R0OWkQ" name="Passthru(Fork(expected)).output" incoming="_30xYndXWEem1l5O0R0OWkQ" outgoing="_30xYAtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYotXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYo9XWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xYpNXWEem1l5O0R0OWkQ" name="Call(+)">
                <argument xmi:id="_30xYpdXWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_30xX5tXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYptXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYp9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30xYqNXWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_30xYA9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYqdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYqtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_30xYq9XWEem1l5O0R0OWkQ" name="Call(+).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYrNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYrdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30xYrtXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_30xYr9XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30xYA9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYsNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYsdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_30xYstXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30xYs9XWEem1l5O0R0OWkQ" name="Passthru(upper)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30xYtNXWEem1l5O0R0OWkQ" target="_30xYuNXWEem1l5O0R0OWkQ" source="_30xYtdXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_30xYtdXWEem1l5O0R0OWkQ" name="Passthru(upper).input" incoming="_30xX59XWEem1l5O0R0OWkQ" outgoing="_30xYtNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYttXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYt9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_30xYuNXWEem1l5O0R0OWkQ" name="Passthru(upper).output" incoming="_30xYtNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30xYudXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30xYutXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30xYu9XWEem1l5O0R0OWkQ" name="Call(+)">
              <argument xmi:id="_30x7wNXWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_30xX5NXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x7wdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x7wtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_30x7w9XWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_30xX5dXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x7xNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x7xdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_30x7xtXWEem1l5O0R0OWkQ" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x7x9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x7yNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30x7ydXWEem1l5O0R0OWkQ" name="Value(1)">
              <result xmi:id="_30x7ytXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30xX5dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x7y9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x7zNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30x7zdXWEem1l5O0R0OWkQ" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <loopVariable xmi:id="_30x7ztXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.loopVariable(label)" outgoing="_30xX2NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x7z9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x70NXWEem1l5O0R0OWkQ" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_30x70dXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.loopVariable(list)" outgoing="_30xX2dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x70tXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x709XWEem1l5O0R0OWkQ" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_30x71NXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.loopVariable(expected)" outgoing="_30xX2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x71dXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x71tXWEem1l5O0R0OWkQ" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_30x719XWEem1l5O0R0OWkQ" name="ForStatement@3089208f.loopVariable(i)" outgoing="_30xX29XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x72NXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x72dXWEem1l5O0R0OWkQ" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_30x72tXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.loopVariable(counter)" outgoing="_30xX3NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x729XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x73NXWEem1l5O0R0OWkQ" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_30x73dXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.loopVariable(upper)" outgoing="_30xX3dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x73tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x739XWEem1l5O0R0OWkQ" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_30x74NXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.loopVariableInput(label)" incoming="_30xXfNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x74dXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x74tXWEem1l5O0R0OWkQ" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_30x749XWEem1l5O0R0OWkQ" name="ForStatement@3089208f.loopVariableInput(list)" incoming="_30xXfdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x75NXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x75dXWEem1l5O0R0OWkQ" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_30x75tXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.loopVariableInput(expected)" incoming="_30xXftXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x759XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x76NXWEem1l5O0R0OWkQ" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_30x76dXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.loopVariableInput(i)" incoming="_30xX1dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x76tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x769XWEem1l5O0R0OWkQ" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_30x77NXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.loopVariableInput(counter)" incoming="_30xX09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x77dXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x77tXWEem1l5O0R0OWkQ" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_30x779XWEem1l5O0R0OWkQ" name="ForStatement@3089208f.loopVariableInput(upper)" incoming="_30xX1NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x78NXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x78dXWEem1l5O0R0OWkQ" value="1"/>
            </loopVariableInput>
            <result xmi:id="_30x78tXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x789XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x79NXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_30x79dXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x79tXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x799XWEem1l5O0R0OWkQ" value="*"/>
            </result>
            <result xmi:id="_30x7-NXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x7-dXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x7-tXWEem1l5O0R0OWkQ" value="*"/>
            </result>
            <result xmi:id="_30x7-9XWEem1l5O0R0OWkQ" name="ForStatement@3089208f.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x7_NXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x7_dXWEem1l5O0R0OWkQ" value="*"/>
            </result>
            <result xmi:id="_30x7_tXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x7_9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8ANXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_30x8AdXWEem1l5O0R0OWkQ" name="ForStatement@3089208f.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8AtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8A9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x8BNXWEem1l5O0R0OWkQ" name="LoopVariables(ForStatement@3089208f)" outgoing="_30xX1tXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8BdXWEem1l5O0R0OWkQ" target="_30x8MdXWEem1l5O0R0OWkQ" source="_30x8FdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8BtXWEem1l5O0R0OWkQ" target="_30x8NNXWEem1l5O0R0OWkQ" source="_30x8IdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30x8B9XWEem1l5O0R0OWkQ" target="_30x8MNXWEem1l5O0R0OWkQ" source="_30x8EtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30x8CNXWEem1l5O0R0OWkQ" target="_30x8K9XWEem1l5O0R0OWkQ" source="_30x8EtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8CdXWEem1l5O0R0OWkQ" target="_30x8PNXWEem1l5O0R0OWkQ" source="_30x8LdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8CtXWEem1l5O0R0OWkQ" target="_30x8P9XWEem1l5O0R0OWkQ" source="_30x8OtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8C9XWEem1l5O0R0OWkQ" target="_30x8S9XWEem1l5O0R0OWkQ" source="_30x8QtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8DNXWEem1l5O0R0OWkQ" target="_30x8TtXWEem1l5O0R0OWkQ" source="_30x8RtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30x8DdXWEem1l5O0R0OWkQ" name="Value(1)">
              <result xmi:id="_30x8DtXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30xX0tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8D9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8ENXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30x8EdXWEem1l5O0R0OWkQ" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x8EtXWEem1l5O0R0OWkQ" name="Tuple@43fe7bb9" outgoing="_30x8B9XWEem1l5O0R0OWkQ _30x8CNXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x8E9XWEem1l5O0R0OWkQ" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8FNXWEem1l5O0R0OWkQ" target="_30x8FdXWEem1l5O0R0OWkQ" source="_30x8HNXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30x8FdXWEem1l5O0R0OWkQ" name="Output(Call(Size).result())" incoming="_30x8FNXWEem1l5O0R0OWkQ" outgoing="_30x8BdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8FtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8F9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x8GNXWEem1l5O0R0OWkQ" name="Call(Size)">
                  <argument xmi:id="_30x8GdXWEem1l5O0R0OWkQ" name="Call(Size).argument(seq)" incoming="_30xXf9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8GtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8G9XWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_30x8HNXWEem1l5O0R0OWkQ" name="Call(Size).result()" outgoing="_30x8FNXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8HdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8HtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x8H9XWEem1l5O0R0OWkQ" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8INXWEem1l5O0R0OWkQ" target="_30x8IdXWEem1l5O0R0OWkQ" source="_30x8KNXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30x8IdXWEem1l5O0R0OWkQ" name="Output(Call(Size).result())" incoming="_30x8INXWEem1l5O0R0OWkQ" outgoing="_30x8BtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8ItXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8I9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x8JNXWEem1l5O0R0OWkQ" name="Call(Size)">
                  <argument xmi:id="_30x8JdXWEem1l5O0R0OWkQ" name="Call(Size).argument(seq)" incoming="_30xXgNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8JtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8J9XWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_30x8KNXWEem1l5O0R0OWkQ" name="Call(Size).result()" outgoing="_30x8INXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8KdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8KtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x8K9XWEem1l5O0R0OWkQ" name="Node(Call(Min))" incoming="_30x8CNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8LNXWEem1l5O0R0OWkQ" target="_30x8LdXWEem1l5O0R0OWkQ" source="_30x8N9XWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_30x8LdXWEem1l5O0R0OWkQ" name="Output(Call(Min).result(result))" incoming="_30x8LNXWEem1l5O0R0OWkQ" outgoing="_30x8CdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8LtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8L9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x8MNXWEem1l5O0R0OWkQ" name="Call(Min)" incoming="_30x8B9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_30x8MdXWEem1l5O0R0OWkQ" name="Call(Min).argument(x)" incoming="_30x8BdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8MtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8M9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30x8NNXWEem1l5O0R0OWkQ" name="Call(Min).argument(y)" incoming="_30x8BtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8NdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8NtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_30x8N9XWEem1l5O0R0OWkQ" name="Call(Min).result(result)" outgoing="_30x8LNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8ONXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8OdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30x8OtXWEem1l5O0R0OWkQ" name="Fork(Value(1).result)" incoming="_30xX0tXWEem1l5O0R0OWkQ" outgoing="_30xX1dXWEem1l5O0R0OWkQ _30x8CtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x8O9XWEem1l5O0R0OWkQ" name="Call(-)">
              <argument xmi:id="_30x8PNXWEem1l5O0R0OWkQ" name="Call(-).argument(x)" incoming="_30x8CdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8PdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8PtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_30x8P9XWEem1l5O0R0OWkQ" name="Call(-).argument(y)" incoming="_30x8CtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8QNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8QdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_30x8QtXWEem1l5O0R0OWkQ" name="Call(-).result(result)" outgoing="_30x8C9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8Q9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8RNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30x8RdXWEem1l5O0R0OWkQ" name="Value(1)">
              <result xmi:id="_30x8RtXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30x8DNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8R9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8SNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30x8SdXWEem1l5O0R0OWkQ" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x8StXWEem1l5O0R0OWkQ" name="Call(+)">
              <argument xmi:id="_30x8S9XWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_30x8C9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8TNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8TdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_30x8TtXWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_30x8DNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8T9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8UNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_30x8UdXWEem1l5O0R0OWkQ" name="Call(+).result(result)" outgoing="_30xX1NXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8UtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8U9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30x8VNXWEem1l5O0R0OWkQ" name="Value(1)">
              <result xmi:id="_30x8VdXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30xX09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8VtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8V9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_30x8WNXWEem1l5O0R0OWkQ" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_30xXgdXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_30xXdtXWEem1l5O0R0OWkQ" parameter="_30xXbdXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_30xXgtXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_30xXdtXWEem1l5O0R0OWkQ" outgoing="_30xXedXWEem1l5O0R0OWkQ _30xXfNXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_30xXg9XWEem1l5O0R0OWkQ" name="Input(list)" outgoing="_30xXd9XWEem1l5O0R0OWkQ" parameter="_30xXcNXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_30xXhNXWEem1l5O0R0OWkQ" name="Fork(list)" incoming="_30xXd9XWEem1l5O0R0OWkQ" outgoing="_30xXetXWEem1l5O0R0OWkQ _30xXf9XWEem1l5O0R0OWkQ _30xXfdXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_30xXhdXWEem1l5O0R0OWkQ" name="Input(expected)" outgoing="_30xXeNXWEem1l5O0R0OWkQ" parameter="_30xXc9XWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_30xXhtXWEem1l5O0R0OWkQ" name="Fork(expected)" incoming="_30xXeNXWEem1l5O0R0OWkQ" outgoing="_30xXe9XWEem1l5O0R0OWkQ _30xXgNXWEem1l5O0R0OWkQ _30xXftXWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_30x8WdXWEem1l5O0R0OWkQ" name="AssertTrue" visibility="public" node="_30x8bdXWEem1l5O0R0OWkQ _30x8btXWEem1l5O0R0OWkQ _30x8b9XWEem1l5O0R0OWkQ _30x8cNXWEem1l5O0R0OWkQ _30x8cdXWEem1l5O0R0OWkQ" group="_30x8cdXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_30x8WtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_30x8W9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_30x8XNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_30x8XdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_30x8XtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_30x8X9XWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8YNXWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8YdXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_30x8YtXWEem1l5O0R0OWkQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8Y9XWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8ZNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8ZdXWEem1l5O0R0OWkQ" target="_30x8btXWEem1l5O0R0OWkQ" source="_30x8bdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8ZtXWEem1l5O0R0OWkQ" target="_30x8cNXWEem1l5O0R0OWkQ" source="_30x8b9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8Z9XWEem1l5O0R0OWkQ" target="_30x8j9XWEem1l5O0R0OWkQ" source="_30x8cNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8aNXWEem1l5O0R0OWkQ" target="_30x8t9XWEem1l5O0R0OWkQ" source="_30x8btXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8adXWEem1l5O0R0OWkQ" target="_30x8ztXWEem1l5O0R0OWkQ" source="_30x8cNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8atXWEem1l5O0R0OWkQ" target="_30x81tXWEem1l5O0R0OWkQ" source="_30x8btXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8a9XWEem1l5O0R0OWkQ" target="_30x849XWEem1l5O0R0OWkQ" source="_30x8cNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8bNXWEem1l5O0R0OWkQ" target="_30x869XWEem1l5O0R0OWkQ" source="_30x8btXWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_30x8cdXWEem1l5O0R0OWkQ" name="Body(AssertTrue)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8ctXWEem1l5O0R0OWkQ" target="_30x8-dXWEem1l5O0R0OWkQ" source="_30x889XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8c9XWEem1l5O0R0OWkQ" target="_30x8-tXWEem1l5O0R0OWkQ" source="_30x89tXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_30x8dNXWEem1l5O0R0OWkQ" name="IfStatement@16133a82">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x8ddXWEem1l5O0R0OWkQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8dtXWEem1l5O0R0OWkQ" target="_30x8htXWEem1l5O0R0OWkQ" source="_30x8j9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8d9XWEem1l5O0R0OWkQ" target="_30x8kdXWEem1l5O0R0OWkQ" source="_30x8j9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8eNXWEem1l5O0R0OWkQ" target="_30x8l9XWEem1l5O0R0OWkQ" source="_30x8lNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8edXWEem1l5O0R0OWkQ" target="_30x8mNXWEem1l5O0R0OWkQ" source="_30x8idXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8etXWEem1l5O0R0OWkQ" target="_30x8mdXWEem1l5O0R0OWkQ" source="_30x8l9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8e9XWEem1l5O0R0OWkQ" target="_30x8mdXWEem1l5O0R0OWkQ" source="_30x8l9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8fNXWEem1l5O0R0OWkQ" target="_30x8mNXWEem1l5O0R0OWkQ" source="_30x8mdXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30x8fdXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8ftXWEem1l5O0R0OWkQ" target="_30x8jNXWEem1l5O0R0OWkQ" source="_30x8gdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8f9XWEem1l5O0R0OWkQ" target="_30x8m9XWEem1l5O0R0OWkQ" source="_30x8mNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30x8gNXWEem1l5O0R0OWkQ" name="Value(true)">
              <result xmi:id="_30x8gdXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_30x8ftXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8gtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8g9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_30x8hNXWEem1l5O0R0OWkQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_30x8hdXWEem1l5O0R0OWkQ" name="Test(==)">
              <first xmi:id="_30x8htXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_30x8dtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8h9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8iNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_30x8idXWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_30x8edXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8itXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8i9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_30x8jNXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_30x8ftXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8jdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8jtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30x8j9XWEem1l5O0R0OWkQ" name="Fork(Fork(condition))" incoming="_30x8Z9XWEem1l5O0R0OWkQ" outgoing="_30x8dtXWEem1l5O0R0OWkQ _30x8d9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x8kNXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_30x8kdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_30x8d9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8ktXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8k9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30x8lNXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_30x8eNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8ldXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8ltXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30x8l9XWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_30x8eNXWEem1l5O0R0OWkQ" outgoing="_30x8etXWEem1l5O0R0OWkQ _30x8e9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_30x8mNXWEem1l5O0R0OWkQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_30x8edXWEem1l5O0R0OWkQ _30x8fNXWEem1l5O0R0OWkQ" outgoing="_30x8f9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30x8mdXWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_30x8etXWEem1l5O0R0OWkQ _30x8e9XWEem1l5O0R0OWkQ" outgoing="_30x8fNXWEem1l5O0R0OWkQ" decisionInputFlow="_30x8e9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x8mtXWEem1l5O0R0OWkQ" name="Call(Not)">
              <argument xmi:id="_30x8m9XWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_30x8f9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8nNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8ndXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_30x8ntXWEem1l5O0R0OWkQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8n9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8oNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x8odXWEem1l5O0R0OWkQ" name="ExpressionStatement@2aa44e43">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8otXWEem1l5O0R0OWkQ" target="_30x8pdXWEem1l5O0R0OWkQ" source="_30x8v9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30x8o9XWEem1l5O0R0OWkQ" target="_30x8pNXWEem1l5O0R0OWkQ" source="_30x8q9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x8pNXWEem1l5O0R0OWkQ" name="Call(WriteLine)" incoming="_30x8o9XWEem1l5O0R0OWkQ">
              <argument xmi:id="_30x8pdXWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_30x8otXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8ptXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8p9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_30x8qNXWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8qdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8qtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x8q9XWEem1l5O0R0OWkQ" name="Tuple@45333701" outgoing="_30x8o9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8rNXWEem1l5O0R0OWkQ" target="_30x8w9XWEem1l5O0R0OWkQ" source="_30x8sdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8rdXWEem1l5O0R0OWkQ" target="_30x8xtXWEem1l5O0R0OWkQ" source="_30x8utXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30x8rtXWEem1l5O0R0OWkQ" target="_30x8vdXWEem1l5O0R0OWkQ" source="_30x8sNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30x8r9XWEem1l5O0R0OWkQ" target="_30x8vdXWEem1l5O0R0OWkQ" source="_30x8tdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30x8sNXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;)" outgoing="_30x8rtXWEem1l5O0R0OWkQ">
                <result xmi:id="_30x8sdXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_30x8rNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8stXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8s9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_30x8tNXWEem1l5O0R0OWkQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x8tdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_30x8r9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8ttXWEem1l5O0R0OWkQ" target="_30x8utXWEem1l5O0R0OWkQ" source="_30x8t9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_30x8t9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_30x8aNXWEem1l5O0R0OWkQ" outgoing="_30x8ttXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8uNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8udXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_30x8utXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_30x8ttXWEem1l5O0R0OWkQ" outgoing="_30x8rdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8u9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8vNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x8vdXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_30x8rtXWEem1l5O0R0OWkQ _30x8r9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8vtXWEem1l5O0R0OWkQ" target="_30x8v9XWEem1l5O0R0OWkQ" source="_30x8ydXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30x8v9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_30x8vtXWEem1l5O0R0OWkQ" outgoing="_30x8otXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8wNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8wdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x8wtXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_30x8w9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_30x8rNXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8xNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8xdXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_30x8xtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_30x8rdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8x9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8yNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_30x8ydXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_30x8vtXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8ytXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8y9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x8zNXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x8zdXWEem1l5O0R0OWkQ" target="_30x80dXWEem1l5O0R0OWkQ" source="_30x8ztXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_30x8ztXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).input" incoming="_30x8adXWEem1l5O0R0OWkQ" outgoing="_30x8zdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x8z9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x80NXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_30x80dXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).output" incoming="_30x8zdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x80tXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x809XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x81NXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x81dXWEem1l5O0R0OWkQ" target="_30x82dXWEem1l5O0R0OWkQ" source="_30x81tXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_30x81tXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_30x8atXWEem1l5O0R0OWkQ" outgoing="_30x81dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x819XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x82NXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_30x82dXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_30x81dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x82tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x829XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30x83NXWEem1l5O0R0OWkQ" name="Value(true)">
            <result xmi:id="_30x83dXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x83tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x839XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_30x84NXWEem1l5O0R0OWkQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x84dXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x84tXWEem1l5O0R0OWkQ" target="_30x85tXWEem1l5O0R0OWkQ" source="_30x849XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_30x849XWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).input" incoming="_30x8a9XWEem1l5O0R0OWkQ" outgoing="_30x84tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x85NXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x85dXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_30x85tXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).output" incoming="_30x84tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x859XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x86NXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x86dXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x86tXWEem1l5O0R0OWkQ" target="_30x87tXWEem1l5O0R0OWkQ" source="_30x869XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_30x869XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_30x8bNXWEem1l5O0R0OWkQ" outgoing="_30x86tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x87NXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x87dXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_30x87tXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_30x86tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x879XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x88NXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_30x88dXWEem1l5O0R0OWkQ" body="_30x8odXWEem1l5O0R0OWkQ _30x8zNXWEem1l5O0R0OWkQ _30x81NXWEem1l5O0R0OWkQ" bodyOutput="_30x80dXWEem1l5O0R0OWkQ _30x82dXWEem1l5O0R0OWkQ" decider="_30x8ntXWEem1l5O0R0OWkQ" successorClause="_30x88tXWEem1l5O0R0OWkQ" test="_30x8ddXWEem1l5O0R0OWkQ"/>
          <clause xmi:id="_30x88tXWEem1l5O0R0OWkQ" body="_30x84dXWEem1l5O0R0OWkQ _30x86dXWEem1l5O0R0OWkQ" bodyOutput="_30x85tXWEem1l5O0R0OWkQ _30x87tXWEem1l5O0R0OWkQ" decider="_30x83dXWEem1l5O0R0OWkQ" predecessorClause="_30x88dXWEem1l5O0R0OWkQ" test="_30x83NXWEem1l5O0R0OWkQ"/>
          <result xmi:id="_30x889XWEem1l5O0R0OWkQ" name="IfStatement@16133a82.result(condition)" outgoing="_30x8ctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x89NXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x89dXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_30x89tXWEem1l5O0R0OWkQ" name="IfStatement@16133a82.result(label)" outgoing="_30x8c9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x899XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x8-NXWEem1l5O0R0OWkQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_30x8-dXWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_30x8ctXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_30x8-tXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_30x8c9XWEem1l5O0R0OWkQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_30x8bdXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_30x8ZdXWEem1l5O0R0OWkQ" parameter="_30x8X9XWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_30x8btXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_30x8ZdXWEem1l5O0R0OWkQ" outgoing="_30x8aNXWEem1l5O0R0OWkQ _30x8atXWEem1l5O0R0OWkQ _30x8bNXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_30x8b9XWEem1l5O0R0OWkQ" name="Input(condition)" outgoing="_30x8ZtXWEem1l5O0R0OWkQ" parameter="_30x8YtXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_30x8cNXWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_30x8ZtXWEem1l5O0R0OWkQ" outgoing="_30x8Z9XWEem1l5O0R0OWkQ _30x8adXWEem1l5O0R0OWkQ _30x8a9XWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_30x8-9XWEem1l5O0R0OWkQ" name="AssertFalse" visibility="public" node="_30x9DNXWEem1l5O0R0OWkQ _30x9DdXWEem1l5O0R0OWkQ _30x9DtXWEem1l5O0R0OWkQ _30x9D9XWEem1l5O0R0OWkQ _30x9ENXWEem1l5O0R0OWkQ" group="_30x9ENXWEem1l5O0R0OWkQ">
      <elementImport xmi:id="_30x8_NXWEem1l5O0R0OWkQ" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_30x8_dXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_30x8_tXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_30x8_9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_30x9ANXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_30x9AdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_30x9AtXWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9A9XWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9BNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_30x9BdXWEem1l5O0R0OWkQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9BtXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9B9XWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9CNXWEem1l5O0R0OWkQ" target="_30x9DdXWEem1l5O0R0OWkQ" source="_30x9DNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9CdXWEem1l5O0R0OWkQ" target="_30x9D9XWEem1l5O0R0OWkQ" source="_30x9DtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9CtXWEem1l5O0R0OWkQ" target="_30x9MdXWEem1l5O0R0OWkQ" source="_30x9DdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9C9XWEem1l5O0R0OWkQ" target="_30x9VdXWEem1l5O0R0OWkQ" source="_30x9D9XWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_30x9ENXWEem1l5O0R0OWkQ" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x9EdXWEem1l5O0R0OWkQ" name="ExpressionStatement@10867016">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9EtXWEem1l5O0R0OWkQ" target="_30x9FtXWEem1l5O0R0OWkQ" source="_30x9OdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9E9XWEem1l5O0R0OWkQ" target="_30x9GdXWEem1l5O0R0OWkQ" source="_30x9XtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30x9FNXWEem1l5O0R0OWkQ" target="_30x9FdXWEem1l5O0R0OWkQ" source="_30x9HNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x9FdXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_30x9FNXWEem1l5O0R0OWkQ" behavior="_30x8WdXWEem1l5O0R0OWkQ">
            <argument xmi:id="_30x9FtXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_30x9EtXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9F9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9GNXWEem1l5O0R0OWkQ" value="1"/>
            </argument>
            <argument xmi:id="_30x9GdXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_30x9E9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9GtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9G9XWEem1l5O0R0OWkQ" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x9HNXWEem1l5O0R0OWkQ" name="Tuple@33160f78" outgoing="_30x9FNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9HdXWEem1l5O0R0OWkQ" target="_30x9PdXWEem1l5O0R0OWkQ" source="_30x9K9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9HtXWEem1l5O0R0OWkQ" target="_30x9QNXWEem1l5O0R0OWkQ" source="_30x9NNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30x9H9XWEem1l5O0R0OWkQ" target="_30x9N9XWEem1l5O0R0OWkQ" source="_30x9KtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30x9INXWEem1l5O0R0OWkQ" target="_30x9N9XWEem1l5O0R0OWkQ" source="_30x9L9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9IdXWEem1l5O0R0OWkQ" target="_30x9TNXWEem1l5O0R0OWkQ" source="_30x9VdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9ItXWEem1l5O0R0OWkQ" target="_30x9V9XWEem1l5O0R0OWkQ" source="_30x9VdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9I9XWEem1l5O0R0OWkQ" target="_30x9XdXWEem1l5O0R0OWkQ" source="_30x9WtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9JNXWEem1l5O0R0OWkQ" target="_30x9XtXWEem1l5O0R0OWkQ" source="_30x9T9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9JdXWEem1l5O0R0OWkQ" target="_30x9X9XWEem1l5O0R0OWkQ" source="_30x9XdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9JtXWEem1l5O0R0OWkQ" target="_30x9X9XWEem1l5O0R0OWkQ" source="_30x9XdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9J9XWEem1l5O0R0OWkQ" target="_30x9XtXWEem1l5O0R0OWkQ" source="_30x9X9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_30x9KNXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9KdXWEem1l5O0R0OWkQ" target="_30x9UtXWEem1l5O0R0OWkQ" source="_30x9R9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30x9KtXWEem1l5O0R0OWkQ" name="Value(&quot;! &quot;)" outgoing="_30x9H9XWEem1l5O0R0OWkQ">
              <result xmi:id="_30x9K9XWEem1l5O0R0OWkQ" name="Value(&quot;! &quot;).result" outgoing="_30x9HdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9LNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9LdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_30x9LtXWEem1l5O0R0OWkQ" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x9L9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_30x9INXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9MNXWEem1l5O0R0OWkQ" target="_30x9NNXWEem1l5O0R0OWkQ" source="_30x9MdXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_30x9MdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_30x9CtXWEem1l5O0R0OWkQ" outgoing="_30x9MNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9MtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9M9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_30x9NNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_30x9MNXWEem1l5O0R0OWkQ" outgoing="_30x9HtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9NdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9NtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x9N9XWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_30x9H9XWEem1l5O0R0OWkQ _30x9INXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9ONXWEem1l5O0R0OWkQ" target="_30x9OdXWEem1l5O0R0OWkQ" source="_30x9Q9XWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_30x9OdXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_30x9ONXWEem1l5O0R0OWkQ" outgoing="_30x9EtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9OtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9O9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x9PNXWEem1l5O0R0OWkQ" name="Call(Concat)">
                <argument xmi:id="_30x9PdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_30x9HdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9PtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9P9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_30x9QNXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_30x9HtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9QdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9QtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_30x9Q9XWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_30x9ONXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9RNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9RdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30x9RtXWEem1l5O0R0OWkQ" name="Value(false)">
              <result xmi:id="_30x9R9XWEem1l5O0R0OWkQ" name="Value(false).result" outgoing="_30x9KdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9SNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9SdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_30x9StXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_30x9S9XWEem1l5O0R0OWkQ" name="Test(==)">
              <first xmi:id="_30x9TNXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_30x9IdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9TdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9TtXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_30x9T9XWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_30x9JNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9UNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9UdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_30x9UtXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_30x9KdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9U9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9VNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30x9VdXWEem1l5O0R0OWkQ" name="Fork(Fork(condition))" incoming="_30x9C9XWEem1l5O0R0OWkQ" outgoing="_30x9IdXWEem1l5O0R0OWkQ _30x9ItXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x9VtXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_30x9V9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_30x9ItXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9WNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9WdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_30x9WtXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_30x9I9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9W9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9XNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30x9XdXWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_30x9I9XWEem1l5O0R0OWkQ" outgoing="_30x9JdXWEem1l5O0R0OWkQ _30x9JtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_30x9XtXWEem1l5O0R0OWkQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_30x9JNXWEem1l5O0R0OWkQ _30x9J9XWEem1l5O0R0OWkQ" outgoing="_30x9E9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_30x9X9XWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_30x9JdXWEem1l5O0R0OWkQ _30x9JtXWEem1l5O0R0OWkQ" outgoing="_30x9J9XWEem1l5O0R0OWkQ" decisionInputFlow="_30x9JtXWEem1l5O0R0OWkQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_30x9DNXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_30x9CNXWEem1l5O0R0OWkQ" parameter="_30x9AtXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_30x9DdXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_30x9CNXWEem1l5O0R0OWkQ" outgoing="_30x9CtXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_30x9DtXWEem1l5O0R0OWkQ" name="Input(condition)" outgoing="_30x9CdXWEem1l5O0R0OWkQ" parameter="_30x9BdXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_30x9D9XWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_30x9CdXWEem1l5O0R0OWkQ" outgoing="_30x9C9XWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_30x9YNXWEem1l5O0R0OWkQ" name="Write" visibility="public" node="_30x9a9XWEem1l5O0R0OWkQ _30x9bNXWEem1l5O0R0OWkQ _30x9bdXWEem1l5O0R0OWkQ" group="_30x9bdXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_30x9YdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_30x9YtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_30x9Y9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_30x9ZNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_30x9ZdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_30x9ZtXWEem1l5O0R0OWkQ" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9Z9XWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9aNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9adXWEem1l5O0R0OWkQ" target="_30x9bNXWEem1l5O0R0OWkQ" source="_30x9a9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9atXWEem1l5O0R0OWkQ" target="_30x9dtXWEem1l5O0R0OWkQ" source="_30x9bNXWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_30x9bdXWEem1l5O0R0OWkQ" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x9btXWEem1l5O0R0OWkQ" name="ExpressionStatement@20c8bb7f">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9b9XWEem1l5O0R0OWkQ" target="_30x9sdXWEem1l5O0R0OWkQ" source="_30x9vtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_30x9cNXWEem1l5O0R0OWkQ" target="_30x9cdXWEem1l5O0R0OWkQ" source="_30x9stXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_30x9cdXWEem1l5O0R0OWkQ" name="Collect(Call(write))" incoming="_30x9cNXWEem1l5O0R0OWkQ" mode="parallel" inputElement="_30x9sdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9ctXWEem1l5O0R0OWkQ" target="_30x9etXWEem1l5O0R0OWkQ" source="_30x9sNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9c9XWEem1l5O0R0OWkQ" target="_30x9kNXWEem1l5O0R0OWkQ" source="_30x9dtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30x9dNXWEem1l5O0R0OWkQ" target="_30x9edXWEem1l5O0R0OWkQ" source="_30x9g9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9ddXWEem1l5O0R0OWkQ" target="_30x9gNXWEem1l5O0R0OWkQ" source="_30x9sdXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_30x9dtXWEem1l5O0R0OWkQ" name="Collect(Call(write)).input(Fork(value))" incoming="_30x9atXWEem1l5O0R0OWkQ" outgoing="_30x9c9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9d9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9eNXWEem1l5O0R0OWkQ" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_30x9edXWEem1l5O0R0OWkQ" name="Call(write)" incoming="_30x9dNXWEem1l5O0R0OWkQ">
              <argument xmi:id="_30x9etXWEem1l5O0R0OWkQ" name="Call(write).argument(value)" incoming="_30x9ctXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9e9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9fNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_30x9fdXWEem1l5O0R0OWkQ" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9ftXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9f9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_30x9gNXWEem1l5O0R0OWkQ" name="Call(write).target" incoming="_30x9ddXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9gdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9gtXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x9g9XWEem1l5O0R0OWkQ" name="Tuple@3eefaa11" outgoing="_30x9dNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9hNXWEem1l5O0R0OWkQ" target="_30x9mNXWEem1l5O0R0OWkQ" source="_30x9kNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30x9hdXWEem1l5O0R0OWkQ" target="_30x9l9XWEem1l5O0R0OWkQ" source="_30x9j9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9htXWEem1l5O0R0OWkQ" target="_30x9o9XWEem1l5O0R0OWkQ" source="_30x9kNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30x9h9XWEem1l5O0R0OWkQ" target="_30x9r9XWEem1l5O0R0OWkQ" source="_30x9rtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9iNXWEem1l5O0R0OWkQ" target="_30x9r9XWEem1l5O0R0OWkQ" source="_30x9m9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30x9idXWEem1l5O0R0OWkQ" target="_30x9ntXWEem1l5O0R0OWkQ" source="_30x9r9XWEem1l5O0R0OWkQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_30x9itXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_30x9i9XWEem1l5O0R0OWkQ" target="_30x9pNXWEem1l5O0R0OWkQ" source="_30x9r9XWEem1l5O0R0OWkQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_30x9jNXWEem1l5O0R0OWkQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9jdXWEem1l5O0R0OWkQ" target="_30x9sNXWEem1l5O0R0OWkQ" source="_30x9oNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9jtXWEem1l5O0R0OWkQ" target="_30x9sNXWEem1l5O0R0OWkQ" source="_30x9ptXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x9j9XWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@2bb7117d)" outgoing="_30x9hdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ForkNode" xmi:id="_30x9kNXWEem1l5O0R0OWkQ" name="Fork('')@6c98f04" incoming="_30x9c9XWEem1l5O0R0OWkQ" outgoing="_30x9hNXWEem1l5O0R0OWkQ _30x9htXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x9kdXWEem1l5O0R0OWkQ" name="RightHandSide@75152d76"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30x9ktXWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_30x9k9XWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9lNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9ldXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_30x9ltXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x9l9XWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_30x9hdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_30x9mNXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_30x9hNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9mdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9mtXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_30x9m9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_30x9iNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9nNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9ndXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x9ntXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@592a6593.operand2" incoming="_30x9idXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9n9XWEem1l5O0R0OWkQ" target="_30x9oNXWEem1l5O0R0OWkQ" source="_30x9o9XWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30x9oNXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@592a6593.operand2.result" incoming="_30x9n9XWEem1l5O0R0OWkQ" outgoing="_30x9jdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9odXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9otXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_30x9o9XWEem1l5O0R0OWkQ" name="Merge(Fork('')@6c98f04)" incoming="_30x9htXWEem1l5O0R0OWkQ" outgoing="_30x9n9XWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x9pNXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@592a6593.operand3" incoming="_30x9i9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9pdXWEem1l5O0R0OWkQ" target="_30x9ptXWEem1l5O0R0OWkQ" source="_30x9qtXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_30x9ptXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@592a6593.operand3.result" incoming="_30x9pdXWEem1l5O0R0OWkQ" outgoing="_30x9jtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9p9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9qNXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30x9qdXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;)">
                  <result xmi:id="_30x9qtXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;).result" outgoing="_30x9pdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9q9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9rNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_30x9rdXWEem1l5O0R0OWkQ" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_30x9rtXWEem1l5O0R0OWkQ" name="Initial(NullCoalescingExpression@592a6593)" outgoing="_30x9h9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_30x9r9XWEem1l5O0R0OWkQ" name="Decision(NullCoalescingExpression@592a6593)" incoming="_30x9h9XWEem1l5O0R0OWkQ _30x9iNXWEem1l5O0R0OWkQ" outgoing="_30x9idXWEem1l5O0R0OWkQ _30x9i9XWEem1l5O0R0OWkQ" decisionInputFlow="_30x9iNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:MergeNode" xmi:id="_30x9sNXWEem1l5O0R0OWkQ" name="Merge(NullCoalescingExpression@592a6593.result)" incoming="_30x9jdXWEem1l5O0R0OWkQ _30x9jtXWEem1l5O0R0OWkQ" outgoing="_30x9ctXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_30x9sdXWEem1l5O0R0OWkQ" name="Collect(Call(write)).inputElement" incoming="_30x9b9XWEem1l5O0R0OWkQ" outgoing="_30x9ddXWEem1l5O0R0OWkQ" regionAsInput="_30x9cdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x9stXWEem1l5O0R0OWkQ" name="Feature(Call(At).result())" outgoing="_30x9cNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9s9XWEem1l5O0R0OWkQ" target="_30x9uNXWEem1l5O0R0OWkQ" source="_30x9w9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9tNXWEem1l5O0R0OWkQ" target="_30x9y9XWEem1l5O0R0OWkQ" source="_30x9x9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_30x9tdXWEem1l5O0R0OWkQ" target="_30x9t9XWEem1l5O0R0OWkQ" source="_30x9wdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_30x9ttXWEem1l5O0R0OWkQ" target="_30x9u9XWEem1l5O0R0OWkQ" source="_30x9y9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_30x9t9XWEem1l5O0R0OWkQ" name="Call(At)" incoming="_30x9tdXWEem1l5O0R0OWkQ">
              <argument xmi:id="_30x9uNXWEem1l5O0R0OWkQ" name="Call(At).argument(seq)" incoming="_30x9s9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9udXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9utXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <argument xmi:id="_30x9u9XWEem1l5O0R0OWkQ" name="Call(At).argument(index)" incoming="_30x9ttXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9vNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9vdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_30x9vtXWEem1l5O0R0OWkQ" name="Call(At).result()" outgoing="_30x9b9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9v9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9wNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_30x9wdXWEem1l5O0R0OWkQ" name="Tuple@7d13292c" outgoing="_30x9tdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_30x9wtXWEem1l5O0R0OWkQ" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_30x9w9XWEem1l5O0R0OWkQ" name="ReadExtent(StandardOutputChannel).result" outgoing="_30x9s9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9xNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9xdXWEem1l5O0R0OWkQ" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_30x9xtXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_30x9x9XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_30x9tNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_30x9yNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_30x9ydXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_30x9ytXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_30x9y9XWEem1l5O0R0OWkQ" name="Fork(Call(At).argument(index))" incoming="_30x9tNXWEem1l5O0R0OWkQ" outgoing="_30x9ttXWEem1l5O0R0OWkQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_30x9a9XWEem1l5O0R0OWkQ" name="Input(value)" outgoing="_30x9adXWEem1l5O0R0OWkQ" parameter="_30x9ZtXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_30x9bNXWEem1l5O0R0OWkQ" name="Fork(value)" incoming="_30x9adXWEem1l5O0R0OWkQ" outgoing="_30x9atXWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <profileApplication xmi:id="_30x9zNXWEem1l5O0R0OWkQ">
      <eAnnotations xmi:id="_30x9zdXWEem1l5O0R0OWkQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_30x9ztXWEem1l5O0R0OWkQ" base_BehavioralFeature="_30xVRNXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_30x9z9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_30vgwtXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_30yi0NXWEem1l5O0R0OWkQ" base_BehavioralFeature="_30vjHtXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_30yi0dXWEem1l5O0R0OWkQ" base_BehavioralFeature="_30wwodXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_30yi0tXWEem1l5O0R0OWkQ" base_BehavioralFeature="_30viYtXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_30yi09XWEem1l5O0R0OWkQ" base_BehavioralFeature="_30vhvNXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_30yi1NXWEem1l5O0R0OWkQ" base_BehavioralFeature="_30xVQNXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_30yi1dXWEem1l5O0R0OWkQ" base_BehavioralFeature="_30wG5dXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_30yi1tXWEem1l5O0R0OWkQ" base_BehavioralFeature="_30viZtXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_30yi19XWEem1l5O0R0OWkQ" base_BehavioralFeature="_30wG6dXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_30yi2NXWEem1l5O0R0OWkQ" base_BehavioralFeature="_30vjItXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_30yi2dXWEem1l5O0R0OWkQ" base_BehavioralFeature="_30wwo9XWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_30yi2tXWEem1l5O0R0OWkQ" base_BehavioralFeature="_30vhwNXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_30yi29XWEem1l5O0R0OWkQ" base_BehavioralFeature="_30vgt9XWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_30yi3NXWEem1l5O0R0OWkQ" base_BehavioralFeature="_30vgu9XWEem1l5O0R0OWkQ"/>
</xmi:XMI>

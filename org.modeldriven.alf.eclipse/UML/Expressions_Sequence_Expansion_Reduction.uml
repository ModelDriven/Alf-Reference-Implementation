<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_SrNvQK1MEeOdBunZhTRw1w" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_SrNvQa1MEeOdBunZhTRw1w" name="Expressions_Sequence_Expansion_Reduction" classifierBehavior="_SrNvS61MEeOdBunZhTRw1w" isActive="true">
      <packageImport xmi:id="_SrNvQq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-IntegerFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SrNvQ61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SrNvRK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SrNvRa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SrNvRq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SrNvR61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_SrNvSK1MEeOdBunZhTRw1w" name="Expressions_Sequence_Expansion_Reduction$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvSa1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvSq1MEeOdBunZhTRw1w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SrNvS61MEeOdBunZhTRw1w" name="Expressions_Sequence_Expansion_Reduction$classifierBehavior$1" visibility="private" isActive="true" group="_SrNvTK1MEeOdBunZhTRw1w" node="_SrNvTK1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_SrNvTK1MEeOdBunZhTRw1w" name="Body(Expressions_Sequence_Expansion_Reduction$classifierBehavior$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNvTa1MEeOdBunZhTRw1w" name="ExpressionStatement@694a0b72" outgoing="_SrNxg61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNvTq1MEeOdBunZhTRw1w" name="Call(test)" behavior="_StLft61MEeOdBunZhTRw1w">
              <result xmi:id="_SrNvT61MEeOdBunZhTRw1w" name="Call(test).result(sum)" outgoing="_SrNvi61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvUK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvUa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SrNvUq1MEeOdBunZhTRw1w" name="Call(test).result(remainder)" outgoing="_SrNvjK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvU61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvVK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SrNvVa1MEeOdBunZhTRw1w" name="Call(test).result(bad)" outgoing="_SrNvja1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvVq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvV61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SrNvWK1MEeOdBunZhTRw1w" name="Call(test).result(select)" outgoing="_SrNvjq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvWa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvWq1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_SrNvW61MEeOdBunZhTRw1w" name="Call(test).result(reject)" outgoing="_SrNvj61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvXK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvXa1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_SrNvXq1MEeOdBunZhTRw1w" name="Call(test).result(collect)" outgoing="_SrNvkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvX61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvYK1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_SrNvYa1MEeOdBunZhTRw1w" name="Call(test).result(iterate)" outgoing="_SrNvka1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvYq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvY61MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_SrNvZK1MEeOdBunZhTRw1w" name="Call(test).result(forAll)" outgoing="_SrNvkq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvZa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvZq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SrNvZ61MEeOdBunZhTRw1w" name="Call(test).result(exists)" outgoing="_SrNvk61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvaK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvaa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SrNvaq1MEeOdBunZhTRw1w" name="Call(test).result(one)" outgoing="_SrNvlK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNva61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvbK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SrNvba1MEeOdBunZhTRw1w" name="Call(test).result(unique)" outgoing="_SrNvla1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvbq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvb61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SrNvcK1MEeOdBunZhTRw1w" name="Call(test).result(jack)" outgoing="_SrNvlq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvca1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvcq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SrNvc61MEeOdBunZhTRw1w" name="Call(test).result(joan)" outgoing="_SrNvl61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvdK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvda1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SrNvdq1MEeOdBunZhTRw1w" name="Call(test).result(something)" outgoing="_SrNvmK1MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvd61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNveK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SrNvea1MEeOdBunZhTRw1w" name="Call(test).result(obj)" outgoing="_SrNvma1MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNveq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNve61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNvfK1MEeOdBunZhTRw1w" name="Fork(sum)@5ace3de6" outgoing="_SrNxgq1MEeOdBunZhTRw1w" incoming="_SrNvi61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNvfa1MEeOdBunZhTRw1w" name="Fork(remainder)@606423e2" outgoing="_SrNxhK1MEeOdBunZhTRw1w" incoming="_SrNvjK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNvfq1MEeOdBunZhTRw1w" name="Fork(bad)@4e6ffbde" outgoing="_SrNxhq1MEeOdBunZhTRw1w" incoming="_SrNvja1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNvf61MEeOdBunZhTRw1w" name="Fork(select)@1a00d40d" outgoing="_SrNxiK1MEeOdBunZhTRw1w" incoming="_SrNvjq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNvgK1MEeOdBunZhTRw1w" name="Fork(reject)@2c61aed1" outgoing="_SrNxiq1MEeOdBunZhTRw1w" incoming="_SrNvj61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNvga1MEeOdBunZhTRw1w" name="Fork(collect)@411c321a" outgoing="_SrNxjK1MEeOdBunZhTRw1w" incoming="_SrNvkK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNvgq1MEeOdBunZhTRw1w" name="Fork(iterate)@221d6a5b" outgoing="_SrNxjq1MEeOdBunZhTRw1w" incoming="_SrNvka1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNvg61MEeOdBunZhTRw1w" name="Fork(forAll)@39318ddc" outgoing="_SrNxkK1MEeOdBunZhTRw1w" incoming="_SrNvkq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNvhK1MEeOdBunZhTRw1w" name="Fork(exists)@645883d9" outgoing="_SrNxkq1MEeOdBunZhTRw1w" incoming="_SrNvk61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNvha1MEeOdBunZhTRw1w" name="Fork(one)@6f384f06" outgoing="_SrNxlK1MEeOdBunZhTRw1w" incoming="_SrNvlK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNvhq1MEeOdBunZhTRw1w" name="Fork(unique)@59cc4bf5" outgoing="_SrNxlq1MEeOdBunZhTRw1w" incoming="_SrNvla1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNvh61MEeOdBunZhTRw1w" name="Fork(jack)@738eefe1" outgoing="_SrNxmK1MEeOdBunZhTRw1w" incoming="_SrNvlq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNviK1MEeOdBunZhTRw1w" name="Fork(joan)@2d26d80c" outgoing="_SrNxmq1MEeOdBunZhTRw1w" incoming="_SrNvl61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNvia1MEeOdBunZhTRw1w" name="Fork(something)@513212fc" outgoing="_SrNxnK1MEeOdBunZhTRw1w" incoming="_SrNvmK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNviq1MEeOdBunZhTRw1w" name="Fork(obj)@2e7c8809" outgoing="_SrNxnq1MEeOdBunZhTRw1w" incoming="_SrNvma1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvi61MEeOdBunZhTRw1w" source="_SrNvT61MEeOdBunZhTRw1w" target="_SrNvfK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvjK1MEeOdBunZhTRw1w" source="_SrNvUq1MEeOdBunZhTRw1w" target="_SrNvfa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvja1MEeOdBunZhTRw1w" source="_SrNvVa1MEeOdBunZhTRw1w" target="_SrNvfq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvjq1MEeOdBunZhTRw1w" source="_SrNvWK1MEeOdBunZhTRw1w" target="_SrNvf61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvj61MEeOdBunZhTRw1w" source="_SrNvW61MEeOdBunZhTRw1w" target="_SrNvgK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvkK1MEeOdBunZhTRw1w" source="_SrNvXq1MEeOdBunZhTRw1w" target="_SrNvga1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvka1MEeOdBunZhTRw1w" source="_SrNvYa1MEeOdBunZhTRw1w" target="_SrNvgq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvkq1MEeOdBunZhTRw1w" source="_SrNvZK1MEeOdBunZhTRw1w" target="_SrNvg61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvk61MEeOdBunZhTRw1w" source="_SrNvZ61MEeOdBunZhTRw1w" target="_SrNvhK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvlK1MEeOdBunZhTRw1w" source="_SrNvaq1MEeOdBunZhTRw1w" target="_SrNvha1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvla1MEeOdBunZhTRw1w" source="_SrNvba1MEeOdBunZhTRw1w" target="_SrNvhq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvlq1MEeOdBunZhTRw1w" source="_SrNvcK1MEeOdBunZhTRw1w" target="_SrNvh61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvl61MEeOdBunZhTRw1w" source="_SrNvc61MEeOdBunZhTRw1w" target="_SrNviK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvmK1MEeOdBunZhTRw1w" source="_SrNvdq1MEeOdBunZhTRw1w" target="_SrNvia1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvma1MEeOdBunZhTRw1w" source="_SrNvea1MEeOdBunZhTRw1w" target="_SrNviq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNvmq1MEeOdBunZhTRw1w" name="ExpressionStatement@588f1e97" outgoing="_SrNxha1MEeOdBunZhTRw1w" incoming="_SrNxg61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNvm61MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SrNvsq1MEeOdBunZhTRw1w" behavior="_StMujK1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNvnK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SrNvsK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvna1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvnq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNvn61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SrNxgq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvoK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvoa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNvoq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SrNvsa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvo61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvpK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNvpa1MEeOdBunZhTRw1w" name="Tuple@39ca8323" outgoing="_SrNvsq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNvpq1MEeOdBunZhTRw1w" name="Value(&quot;sum&quot;)">
                <result xmi:id="_SrNvp61MEeOdBunZhTRw1w" name="Value(&quot;sum&quot;).result" outgoing="_SrNvsK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvqK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvqa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNvqq1MEeOdBunZhTRw1w" value="sum">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNvq61MEeOdBunZhTRw1w" name="Value(6)">
                <result xmi:id="_SrNvrK1MEeOdBunZhTRw1w" name="Value(6).result" outgoing="_SrNvsa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvra1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvrq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SrNvr61MEeOdBunZhTRw1w" value="6">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvsK1MEeOdBunZhTRw1w" source="_SrNvp61MEeOdBunZhTRw1w" target="_SrNvnK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvsa1MEeOdBunZhTRw1w" source="_SrNvrK1MEeOdBunZhTRw1w" target="_SrNvoq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNvsq1MEeOdBunZhTRw1w" source="_SrNvpa1MEeOdBunZhTRw1w" target="_SrNvm61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNvs61MEeOdBunZhTRw1w" name="ExpressionStatement@2d14d0a7" outgoing="_SrNxh61MEeOdBunZhTRw1w" incoming="_SrNxha1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNvtK1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SrNvy61MEeOdBunZhTRw1w" behavior="_StMujK1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNvta1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SrNvya1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvtq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvt61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNvuK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SrNxhK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvua1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvuq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNvu61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SrNvyq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvvK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvva1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNvvq1MEeOdBunZhTRw1w" name="Tuple@2c1919fc" outgoing="_SrNvy61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNvv61MEeOdBunZhTRw1w" name="Value(&quot;remainder&quot;)">
                <result xmi:id="_SrNvwK1MEeOdBunZhTRw1w" name="Value(&quot;remainder&quot;).result" outgoing="_SrNvya1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvwa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvwq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNvw61MEeOdBunZhTRw1w" value="remainder">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNvxK1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SrNvxa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SrNvyq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvxq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNvx61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SrNvyK1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvya1MEeOdBunZhTRw1w" source="_SrNvwK1MEeOdBunZhTRw1w" target="_SrNvta1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNvyq1MEeOdBunZhTRw1w" source="_SrNvxa1MEeOdBunZhTRw1w" target="_SrNvu61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNvy61MEeOdBunZhTRw1w" source="_SrNvvq1MEeOdBunZhTRw1w" target="_SrNvtK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNvzK1MEeOdBunZhTRw1w" name="ExpressionStatement@272d69d7" outgoing="_SrNxia1MEeOdBunZhTRw1w" incoming="_SrNxh61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNvza1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SrNv5K1MEeOdBunZhTRw1w" behavior="_StMujK1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNvzq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SrNv4q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNvz61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNv0K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNv0a1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SrNxhq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNv0q1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNv061MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNv1K1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SrNv461MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNv1a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNv1q1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNv161MEeOdBunZhTRw1w" name="Tuple@51d4d399" outgoing="_SrNv5K1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNv2K1MEeOdBunZhTRw1w" name="Value(&quot;bad&quot;)">
                <result xmi:id="_SrNv2a1MEeOdBunZhTRw1w" name="Value(&quot;bad&quot;).result" outgoing="_SrNv4q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNv2q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNv261MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNv3K1MEeOdBunZhTRw1w" value="bad">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNv3a1MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_SrNv3q1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_SrNv461MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNv361MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNv4K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SrNv4a1MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNv4q1MEeOdBunZhTRw1w" source="_SrNv2a1MEeOdBunZhTRw1w" target="_SrNvzq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNv461MEeOdBunZhTRw1w" source="_SrNv3q1MEeOdBunZhTRw1w" target="_SrNv1K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNv5K1MEeOdBunZhTRw1w" source="_SrNv161MEeOdBunZhTRw1w" target="_SrNvza1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNv5a1MEeOdBunZhTRw1w" name="ExpressionStatement@1204be1f" outgoing="_SrNxi61MEeOdBunZhTRw1w" incoming="_SrNxia1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNv5q1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_SrNwEa1MEeOdBunZhTRw1w" behavior="_StNUeq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNv561MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_SrNwDq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNv6K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNv6a1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNv6q1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_SrNwD61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNv661MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNv7K1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_SrNv7a1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_SrNwEK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNv7q1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNv761MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNv8K1MEeOdBunZhTRw1w" name="Tuple@740235d6" outgoing="_SrNwEa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNv8a1MEeOdBunZhTRw1w" name="Value(&quot;select.name&quot;)">
                <result xmi:id="_SrNv8q1MEeOdBunZhTRw1w" name="Value(&quot;select.name&quot;).result" outgoing="_SrNwDq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNv861MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNv9K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNv9a1MEeOdBunZhTRw1w" value="select.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SrNv9q1MEeOdBunZhTRw1w" name="Fork(Fork(select)@1a00d40d)" outgoing="_SrNwDa1MEeOdBunZhTRw1w" incoming="_SrNxiK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SrNv961MEeOdBunZhTRw1w" name="Collect(Read(name))" mode="parallel" outputElement="_SrNwAq1MEeOdBunZhTRw1w" inputElement="_SrNwAa1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrNv-K1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SrNyMK1MEeOdBunZhTRw1w">
                  <object xmi:id="_SrNv-a1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_SrNv_61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNv-q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNv-61MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SrNv_K1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_SrNwAK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNv_a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNv_q1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNv_61MEeOdBunZhTRw1w" source="_SrNwAa1MEeOdBunZhTRw1w" target="_SrNv-a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwAK1MEeOdBunZhTRw1w" source="_SrNv_K1MEeOdBunZhTRw1w" target="_SrNwAq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SrNwAa1MEeOdBunZhTRw1w" name="Collect(Read(name)).inputElement" outgoing="_SrNv_61MEeOdBunZhTRw1w" incoming="_SrNwDa1MEeOdBunZhTRw1w" regionAsInput="_SrNv961MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SrNwAq1MEeOdBunZhTRw1w" name="Collect(Read(name)).outputElement" outgoing="_SrNwD61MEeOdBunZhTRw1w" incoming="_SrNwAK1MEeOdBunZhTRw1w" regionAsOutput="_SrNv961MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwA61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@394b7eef">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNwBK1MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;)">
                  <result xmi:id="_SrNwBa1MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;).result" outgoing="_SrNwDK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwBq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwB61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SrNwCK1MEeOdBunZhTRw1w" value="Joan">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <structuredNodeOutput xmi:id="_SrNwCa1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@394b7eef.output" outgoing="_SrNwEK1MEeOdBunZhTRw1w" incoming="_SrNwDK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwCq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwC61MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwDK1MEeOdBunZhTRw1w" source="_SrNwBa1MEeOdBunZhTRw1w" target="_SrNwCa1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwDa1MEeOdBunZhTRw1w" source="_SrNv9q1MEeOdBunZhTRw1w" target="_SrNwAa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwDq1MEeOdBunZhTRw1w" source="_SrNv8q1MEeOdBunZhTRw1w" target="_SrNv561MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwD61MEeOdBunZhTRw1w" source="_SrNwAq1MEeOdBunZhTRw1w" target="_SrNv6q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwEK1MEeOdBunZhTRw1w" source="_SrNwCa1MEeOdBunZhTRw1w" target="_SrNv7a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNwEa1MEeOdBunZhTRw1w" source="_SrNv8K1MEeOdBunZhTRw1w" target="_SrNv5q1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwEq1MEeOdBunZhTRw1w" name="ExpressionStatement@2422ac08" outgoing="_SrNxja1MEeOdBunZhTRw1w" incoming="_SrNxi61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNwE61MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_SrNwPq1MEeOdBunZhTRw1w" behavior="_StNUeq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNwFK1MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_SrNwO61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwFa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwFq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNwF61MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_SrNwPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwGK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwGa1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_SrNwGq1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_SrNwPa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwG61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwHK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwHa1MEeOdBunZhTRw1w" name="Tuple@6810b816" outgoing="_SrNwPq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNwHq1MEeOdBunZhTRw1w" name="Value(&quot;reject.name&quot;)">
                <result xmi:id="_SrNwH61MEeOdBunZhTRw1w" name="Value(&quot;reject.name&quot;).result" outgoing="_SrNwO61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwIK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwIa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNwIq1MEeOdBunZhTRw1w" value="reject.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SrNwI61MEeOdBunZhTRw1w" name="Fork(Fork(reject)@2c61aed1)" outgoing="_SrNwOq1MEeOdBunZhTRw1w" incoming="_SrNxiq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SrNwJK1MEeOdBunZhTRw1w" name="Collect(Read(name))" mode="parallel" outputElement="_SrNwL61MEeOdBunZhTRw1w" inputElement="_SrNwLq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrNwJa1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SrNyMK1MEeOdBunZhTRw1w">
                  <object xmi:id="_SrNwJq1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_SrNwLK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwJ61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwKK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SrNwKa1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_SrNwLa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwKq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwK61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwLK1MEeOdBunZhTRw1w" source="_SrNwLq1MEeOdBunZhTRw1w" target="_SrNwJq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwLa1MEeOdBunZhTRw1w" source="_SrNwKa1MEeOdBunZhTRw1w" target="_SrNwL61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SrNwLq1MEeOdBunZhTRw1w" name="Collect(Read(name)).inputElement" outgoing="_SrNwLK1MEeOdBunZhTRw1w" incoming="_SrNwOq1MEeOdBunZhTRw1w" regionAsInput="_SrNwJK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SrNwL61MEeOdBunZhTRw1w" name="Collect(Read(name)).outputElement" outgoing="_SrNwPK1MEeOdBunZhTRw1w" incoming="_SrNwLa1MEeOdBunZhTRw1w" regionAsOutput="_SrNwJK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwMK1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@526b0318">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNwMa1MEeOdBunZhTRw1w" name="Value(&quot;Jack&quot;)">
                  <result xmi:id="_SrNwMq1MEeOdBunZhTRw1w" name="Value(&quot;Jack&quot;).result" outgoing="_SrNwOa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwM61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwNK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SrNwNa1MEeOdBunZhTRw1w" value="Jack">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <structuredNodeOutput xmi:id="_SrNwNq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@526b0318.output" outgoing="_SrNwPa1MEeOdBunZhTRw1w" incoming="_SrNwOa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwN61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwOK1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwOa1MEeOdBunZhTRw1w" source="_SrNwMq1MEeOdBunZhTRw1w" target="_SrNwNq1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwOq1MEeOdBunZhTRw1w" source="_SrNwI61MEeOdBunZhTRw1w" target="_SrNwLq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwO61MEeOdBunZhTRw1w" source="_SrNwH61MEeOdBunZhTRw1w" target="_SrNwFK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwPK1MEeOdBunZhTRw1w" source="_SrNwL61MEeOdBunZhTRw1w" target="_SrNwF61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwPa1MEeOdBunZhTRw1w" source="_SrNwNq1MEeOdBunZhTRw1w" target="_SrNwGq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNwPq1MEeOdBunZhTRw1w" source="_SrNwHa1MEeOdBunZhTRw1w" target="_SrNwE61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwP61MEeOdBunZhTRw1w" name="ExpressionStatement@688dbbb4" outgoing="_SrNxj61MEeOdBunZhTRw1w" incoming="_SrNxja1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNwQK1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_SrNwZa1MEeOdBunZhTRw1w" behavior="_StNUeq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNwQa1MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_SrNwY61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwQq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwQ61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNwRK1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_SrNxjK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwRa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwRq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_SrNwR61MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_SrNwZK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwSK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwSa1MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwSq1MEeOdBunZhTRw1w" name="Tuple@57f2c505" outgoing="_SrNwZa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNwS61MEeOdBunZhTRw1w" name="Value(&quot;collect.name&quot;)">
                <result xmi:id="_SrNwTK1MEeOdBunZhTRw1w" name="Value(&quot;collect.name&quot;).result" outgoing="_SrNwY61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwTa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwTq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNwT61MEeOdBunZhTRw1w" value="collect.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwUK1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@373845f4">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwUa1MEeOdBunZhTRw1w" name="SequenceExpressionList@34103723#1" outgoing="_SrNwYK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNwUq1MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;)">
                    <result xmi:id="_SrNwU61MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;).result" outgoing="_SrNwYa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwVK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwVa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SrNwVq1MEeOdBunZhTRw1w" value="Joan">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwV61MEeOdBunZhTRw1w" name="SequenceExpressionList@34103723#2" incoming="_SrNwYK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNwWK1MEeOdBunZhTRw1w" name="Value(&quot;Jack&quot;)">
                    <result xmi:id="_SrNwWa1MEeOdBunZhTRw1w" name="Value(&quot;Jack&quot;).result" outgoing="_SrNwYq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwWq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwW61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SrNwXK1MEeOdBunZhTRw1w" value="Jack">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_SrNwXa1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@373845f4.output" outgoing="_SrNwZK1MEeOdBunZhTRw1w" incoming="_SrNwYa1MEeOdBunZhTRw1w _SrNwYq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwXq1MEeOdBunZhTRw1w" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwX61MEeOdBunZhTRw1w" value="2"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SrNwYK1MEeOdBunZhTRw1w" source="_SrNwUa1MEeOdBunZhTRw1w" target="_SrNwV61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwYa1MEeOdBunZhTRw1w" source="_SrNwU61MEeOdBunZhTRw1w" target="_SrNwXa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwYq1MEeOdBunZhTRw1w" source="_SrNwWa1MEeOdBunZhTRw1w" target="_SrNwXa1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwY61MEeOdBunZhTRw1w" source="_SrNwTK1MEeOdBunZhTRw1w" target="_SrNwQa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwZK1MEeOdBunZhTRw1w" source="_SrNwXa1MEeOdBunZhTRw1w" target="_SrNwR61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNwZa1MEeOdBunZhTRw1w" source="_SrNwSq1MEeOdBunZhTRw1w" target="_SrNwQK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwZq1MEeOdBunZhTRw1w" name="ExpressionStatement@595b3515" outgoing="_SrNxka1MEeOdBunZhTRw1w" incoming="_SrNxj61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNwZ61MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_SrNwjK1MEeOdBunZhTRw1w" behavior="_StNUeq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNwaK1MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_SrNwiq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwaa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwaq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNwa61MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_SrNxjq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwbK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwba1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_SrNwbq1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_SrNwi61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwb61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwcK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwca1MEeOdBunZhTRw1w" name="Tuple@1bc3fae5" outgoing="_SrNwjK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNwcq1MEeOdBunZhTRw1w" name="Value(&quot;iterate.name&quot;)">
                <result xmi:id="_SrNwc61MEeOdBunZhTRw1w" name="Value(&quot;iterate.name&quot;).result" outgoing="_SrNwiq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwdK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwda1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNwdq1MEeOdBunZhTRw1w" value="iterate.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwd61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@48d8ad50">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNweK1MEeOdBunZhTRw1w" name="SequenceExpressionList@58e4f461#1" outgoing="_SrNwh61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNwea1MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;)">
                    <result xmi:id="_SrNweq1MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;).result" outgoing="_SrNwiK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwe61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwfK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SrNwfa1MEeOdBunZhTRw1w" value="Joan">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwfq1MEeOdBunZhTRw1w" name="SequenceExpressionList@58e4f461#2" incoming="_SrNwh61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNwf61MEeOdBunZhTRw1w" name="Value(&quot;Jack&quot;)">
                    <result xmi:id="_SrNwgK1MEeOdBunZhTRw1w" name="Value(&quot;Jack&quot;).result" outgoing="_SrNwia1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwga1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwgq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SrNwg61MEeOdBunZhTRw1w" value="Jack">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_SrNwhK1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@48d8ad50.output" outgoing="_SrNwi61MEeOdBunZhTRw1w" incoming="_SrNwiK1MEeOdBunZhTRw1w _SrNwia1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwha1MEeOdBunZhTRw1w" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwhq1MEeOdBunZhTRw1w" value="2"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SrNwh61MEeOdBunZhTRw1w" source="_SrNweK1MEeOdBunZhTRw1w" target="_SrNwfq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwiK1MEeOdBunZhTRw1w" source="_SrNweq1MEeOdBunZhTRw1w" target="_SrNwhK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwia1MEeOdBunZhTRw1w" source="_SrNwgK1MEeOdBunZhTRw1w" target="_SrNwhK1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwiq1MEeOdBunZhTRw1w" source="_SrNwc61MEeOdBunZhTRw1w" target="_SrNwaK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwi61MEeOdBunZhTRw1w" source="_SrNwhK1MEeOdBunZhTRw1w" target="_SrNwbq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNwjK1MEeOdBunZhTRw1w" source="_SrNwca1MEeOdBunZhTRw1w" target="_SrNwZ61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwja1MEeOdBunZhTRw1w" name="ExpressionStatement@684e1b9e" outgoing="_SrNxk61MEeOdBunZhTRw1w" incoming="_SrNxka1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNwjq1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_SrNwnK1MEeOdBunZhTRw1w" behavior="_StN7hq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNwj61MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_SrNwm61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwkK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwka1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNwkq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_SrNxkK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwk61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwlK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwla1MEeOdBunZhTRw1w" name="Tuple@659b2d38" outgoing="_SrNwnK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNwlq1MEeOdBunZhTRw1w" name="Value(&quot;forAll&quot;)">
                <result xmi:id="_SrNwl61MEeOdBunZhTRw1w" name="Value(&quot;forAll&quot;).result" outgoing="_SrNwm61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwmK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwma1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNwmq1MEeOdBunZhTRw1w" value="forAll">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwm61MEeOdBunZhTRw1w" source="_SrNwl61MEeOdBunZhTRw1w" target="_SrNwj61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNwnK1MEeOdBunZhTRw1w" source="_SrNwla1MEeOdBunZhTRw1w" target="_SrNwjq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwna1MEeOdBunZhTRw1w" name="ExpressionStatement@4b4c6695" outgoing="_SrNxla1MEeOdBunZhTRw1w" incoming="_SrNxk61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNwnq1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_SrNwrK1MEeOdBunZhTRw1w" behavior="_StN7hq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNwn61MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_SrNwq61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwoK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwoa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNwoq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_SrNxkq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwo61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwpK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwpa1MEeOdBunZhTRw1w" name="Tuple@4f3eaa3" outgoing="_SrNwrK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNwpq1MEeOdBunZhTRw1w" name="Value(&quot;exists&quot;)">
                <result xmi:id="_SrNwp61MEeOdBunZhTRw1w" name="Value(&quot;exists&quot;).result" outgoing="_SrNwq61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwqK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwqa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNwqq1MEeOdBunZhTRw1w" value="exists">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwq61MEeOdBunZhTRw1w" source="_SrNwp61MEeOdBunZhTRw1w" target="_SrNwn61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNwrK1MEeOdBunZhTRw1w" source="_SrNwpa1MEeOdBunZhTRw1w" target="_SrNwnq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwra1MEeOdBunZhTRw1w" name="ExpressionStatement@6945bc91" outgoing="_SrNxl61MEeOdBunZhTRw1w" incoming="_SrNxla1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNwrq1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_SrNwvK1MEeOdBunZhTRw1w" behavior="_StN7hq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNwr61MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_SrNwu61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwsK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwsa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNwsq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_SrNxlK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNws61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwtK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwta1MEeOdBunZhTRw1w" name="Tuple@73355c4" outgoing="_SrNwvK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNwtq1MEeOdBunZhTRw1w" name="Value(&quot;one&quot;)">
                <result xmi:id="_SrNwt61MEeOdBunZhTRw1w" name="Value(&quot;one&quot;).result" outgoing="_SrNwu61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwuK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwua1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNwuq1MEeOdBunZhTRw1w" value="one">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwu61MEeOdBunZhTRw1w" source="_SrNwt61MEeOdBunZhTRw1w" target="_SrNwr61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNwvK1MEeOdBunZhTRw1w" source="_SrNwta1MEeOdBunZhTRw1w" target="_SrNwrq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwva1MEeOdBunZhTRw1w" name="ExpressionStatement@4b4f8699" outgoing="_SrNxma1MEeOdBunZhTRw1w" incoming="_SrNxl61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNwvq1MEeOdBunZhTRw1w" name="Call(AssertFalse)" incoming="_SrNwzK1MEeOdBunZhTRw1w" behavior="_StN76a1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNwv61MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(label)" incoming="_SrNwy61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwwK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwwa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNwwq1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(condition)" incoming="_SrNxlq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNww61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwxK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwxa1MEeOdBunZhTRw1w" name="Tuple@2d472273" outgoing="_SrNwzK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNwxq1MEeOdBunZhTRw1w" name="Value(&quot;unique&quot;)">
                <result xmi:id="_SrNwx61MEeOdBunZhTRw1w" name="Value(&quot;unique&quot;).result" outgoing="_SrNwy61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNwyK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNwya1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNwyq1MEeOdBunZhTRw1w" value="unique">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNwy61MEeOdBunZhTRw1w" source="_SrNwx61MEeOdBunZhTRw1w" target="_SrNwv61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNwzK1MEeOdBunZhTRw1w" source="_SrNwxa1MEeOdBunZhTRw1w" target="_SrNwvq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNwza1MEeOdBunZhTRw1w" name="ExpressionStatement@5f84d41a" outgoing="_SrNxm61MEeOdBunZhTRw1w" incoming="_SrNxma1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNwzq1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SrNw761MEeOdBunZhTRw1w" behavior="_StMujK1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNwz61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SrNw7K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNw0K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNw0a1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNw0q1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SrNw7a1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNw061MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNw1K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNw1a1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SrNw7q1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNw1q1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNw161MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNw2K1MEeOdBunZhTRw1w" name="Tuple@4e121058" outgoing="_SrNw761MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNw2a1MEeOdBunZhTRw1w" name="Value(&quot;jack.name&quot;)">
                <result xmi:id="_SrNw2q1MEeOdBunZhTRw1w" name="Value(&quot;jack.name&quot;).result" outgoing="_SrNw7K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNw261MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNw3K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNw3a1MEeOdBunZhTRw1w" value="jack.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrNw3q1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SrNyMK1MEeOdBunZhTRw1w">
                <object xmi:id="_SrNw361MEeOdBunZhTRw1w" name="Read(name).object" incoming="_SrNw661MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNw4K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNw4a1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SrNw4q1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_SrNw7a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNw461MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNw5K1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SrNw5a1MEeOdBunZhTRw1w" name="Fork(Fork(jack)@738eefe1)" outgoing="_SrNw661MEeOdBunZhTRw1w" incoming="_SrNxmK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNw5q1MEeOdBunZhTRw1w" name="Value(&quot;Jack&quot;)">
                <result xmi:id="_SrNw561MEeOdBunZhTRw1w" name="Value(&quot;Jack&quot;).result" outgoing="_SrNw7q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNw6K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNw6a1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNw6q1MEeOdBunZhTRw1w" value="Jack">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNw661MEeOdBunZhTRw1w" source="_SrNw5a1MEeOdBunZhTRw1w" target="_SrNw361MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNw7K1MEeOdBunZhTRw1w" source="_SrNw2q1MEeOdBunZhTRw1w" target="_SrNwz61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNw7a1MEeOdBunZhTRw1w" source="_SrNw4q1MEeOdBunZhTRw1w" target="_SrNw0q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNw7q1MEeOdBunZhTRw1w" source="_SrNw561MEeOdBunZhTRw1w" target="_SrNw1a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNw761MEeOdBunZhTRw1w" source="_SrNw2K1MEeOdBunZhTRw1w" target="_SrNwzq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNw8K1MEeOdBunZhTRw1w" name="ExpressionStatement@6b0123f1" outgoing="_SrNxna1MEeOdBunZhTRw1w" incoming="_SrNxm61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNw8a1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SrNxEq1MEeOdBunZhTRw1w" behavior="_StMujK1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNw8q1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SrNxD61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNw861MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNw9K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNw9a1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SrNxEK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNw9q1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNw961MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNw-K1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SrNxEa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNw-a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNw-q1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNw-61MEeOdBunZhTRw1w" name="Tuple@7eb1228d" outgoing="_SrNxEq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNw_K1MEeOdBunZhTRw1w" name="Value(&quot;joan.name&quot;)">
                <result xmi:id="_SrNw_a1MEeOdBunZhTRw1w" name="Value(&quot;joan.name&quot;).result" outgoing="_SrNxD61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNw_q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNw_61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNxAK1MEeOdBunZhTRw1w" value="joan.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrNxAa1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SrNyMK1MEeOdBunZhTRw1w">
                <object xmi:id="_SrNxAq1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_SrNxDq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxA61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxBK1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SrNxBa1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_SrNxEK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxBq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxB61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SrNxCK1MEeOdBunZhTRw1w" name="Fork(Fork(joan)@2d26d80c)" outgoing="_SrNxDq1MEeOdBunZhTRw1w" incoming="_SrNxmq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNxCa1MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;)">
                <result xmi:id="_SrNxCq1MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;).result" outgoing="_SrNxEa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxC61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxDK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNxDa1MEeOdBunZhTRw1w" value="Joan">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxDq1MEeOdBunZhTRw1w" source="_SrNxCK1MEeOdBunZhTRw1w" target="_SrNxAq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxD61MEeOdBunZhTRw1w" source="_SrNw_a1MEeOdBunZhTRw1w" target="_SrNw8q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxEK1MEeOdBunZhTRw1w" source="_SrNxBa1MEeOdBunZhTRw1w" target="_SrNw9a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxEa1MEeOdBunZhTRw1w" source="_SrNxCq1MEeOdBunZhTRw1w" target="_SrNw-K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxEq1MEeOdBunZhTRw1w" source="_SrNw-61MEeOdBunZhTRw1w" target="_SrNw8a1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNxE61MEeOdBunZhTRw1w" name="ExpressionStatement@6d03d1f2" outgoing="_SrNxn61MEeOdBunZhTRw1w" incoming="_SrNxna1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNxFK1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_SrNxRK1MEeOdBunZhTRw1w" behavior="_StNUeq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNxFa1MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_SrNxQa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxFq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxF61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNxGK1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_SrNxQq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxGa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxGq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_SrNxG61MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_SrNxQ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxHK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxHa1MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNxHq1MEeOdBunZhTRw1w" name="Tuple@58acb7bd" outgoing="_SrNxRK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNxH61MEeOdBunZhTRw1w" name="Value(&quot;something.attribute.type&quot;)">
                <result xmi:id="_SrNxIK1MEeOdBunZhTRw1w" name="Value(&quot;something.attribute.type&quot;).result" outgoing="_SrNxQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxIa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxIq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNxI61MEeOdBunZhTRw1w" value="something.attribute.type">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrNxJK1MEeOdBunZhTRw1w" name="Read(attribute)" structuralFeature="_StLeLa1MEeOdBunZhTRw1w">
                <object xmi:id="_SrNxJa1MEeOdBunZhTRw1w" name="Read(attribute).object" incoming="_SrNxPq1MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxJq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxJ61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SrNxKK1MEeOdBunZhTRw1w" name="Read(attribute).result" outgoing="_SrNxP61MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxKa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxKq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SrNxK61MEeOdBunZhTRw1w" name="Fork(Fork(something)@513212fc)" outgoing="_SrNxPq1MEeOdBunZhTRw1w" incoming="_SrNxnK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SrNxLK1MEeOdBunZhTRw1w" name="Fork(Read(attribute).result)" outgoing="_SrNxQK1MEeOdBunZhTRw1w" incoming="_SrNxP61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SrNxLa1MEeOdBunZhTRw1w" name="Collect(Read(type))" mode="parallel" outputElement="_SrNxOK1MEeOdBunZhTRw1w" inputElement="_SrNxN61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrNxLq1MEeOdBunZhTRw1w" name="Read(type)" structuralFeature="_SrOWhq1MEeOdBunZhTRw1w">
                  <object xmi:id="_SrNxL61MEeOdBunZhTRw1w" name="Read(type).object" incoming="_SrNxNa1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxMK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxMa1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SrNxMq1MEeOdBunZhTRw1w" name="Read(type).result" outgoing="_SrNxNq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxM61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxNK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxNa1MEeOdBunZhTRw1w" source="_SrNxN61MEeOdBunZhTRw1w" target="_SrNxL61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxNq1MEeOdBunZhTRw1w" source="_SrNxMq1MEeOdBunZhTRw1w" target="_SrNxOK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SrNxN61MEeOdBunZhTRw1w" name="Collect(Read(type)).inputElement" outgoing="_SrNxNa1MEeOdBunZhTRw1w" incoming="_SrNxQK1MEeOdBunZhTRw1w" regionAsInput="_SrNxLa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SrNxOK1MEeOdBunZhTRw1w" name="Collect(Read(type)).outputElement" outgoing="_SrNxQq1MEeOdBunZhTRw1w" incoming="_SrNxNq1MEeOdBunZhTRw1w" regionAsOutput="_SrNxLa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNxOa1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SrNxOq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SrNxQ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxO61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxPK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SrNxPa1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxPq1MEeOdBunZhTRw1w" source="_SrNxK61MEeOdBunZhTRw1w" target="_SrNxJa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxP61MEeOdBunZhTRw1w" source="_SrNxKK1MEeOdBunZhTRw1w" target="_SrNxLK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxQK1MEeOdBunZhTRw1w" source="_SrNxLK1MEeOdBunZhTRw1w" target="_SrNxN61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxQa1MEeOdBunZhTRw1w" source="_SrNxIK1MEeOdBunZhTRw1w" target="_SrNxFa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxQq1MEeOdBunZhTRw1w" source="_SrNxOK1MEeOdBunZhTRw1w" target="_SrNxGK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxQ61MEeOdBunZhTRw1w" source="_SrNxOq1MEeOdBunZhTRw1w" target="_SrNxG61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxRK1MEeOdBunZhTRw1w" source="_SrNxHq1MEeOdBunZhTRw1w" target="_SrNxFK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNxRa1MEeOdBunZhTRw1w" name="ExpressionStatement@1cd9f1aa" outgoing="_SrNxoK1MEeOdBunZhTRw1w" incoming="_SrNxn61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNxRq1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SrNxca1MEeOdBunZhTRw1w" behavior="_StMujK1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNxR61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SrNxbq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxSK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxSa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNxSq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SrNxb61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxS61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxTK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SrNxTa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SrNxcK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxTq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxT61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNxUK1MEeOdBunZhTRw1w" name="Tuple@60e5d1fd" outgoing="_SrNxca1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNxUa1MEeOdBunZhTRw1w" name="Value(&quot;obj.attr.type&quot;)">
                <result xmi:id="_SrNxUq1MEeOdBunZhTRw1w" name="Value(&quot;obj.attr.type&quot;).result" outgoing="_SrNxbq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxU61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxVK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNxVa1MEeOdBunZhTRw1w" value="obj.attr.type">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrNxVq1MEeOdBunZhTRw1w" name="Read(attr)" structuralFeature="_StLe2q1MEeOdBunZhTRw1w">
                <object xmi:id="_SrNxV61MEeOdBunZhTRw1w" name="Read(attr).object" incoming="_SrNxa61MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxWK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxWa1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SrNxWq1MEeOdBunZhTRw1w" name="Read(attr).result" outgoing="_SrNxbK1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxW61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxXK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SrNxXa1MEeOdBunZhTRw1w" name="Fork(Fork(obj)@2e7c8809)" outgoing="_SrNxa61MEeOdBunZhTRw1w" incoming="_SrNxnq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrNxXq1MEeOdBunZhTRw1w" name="Read(type)" structuralFeature="_SrOWhq1MEeOdBunZhTRw1w">
                <object xmi:id="_SrNxX61MEeOdBunZhTRw1w" name="Read(type).object" incoming="_SrNxba1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxYK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxYa1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SrNxYq1MEeOdBunZhTRw1w" name="Read(type).result" outgoing="_SrNxb61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxY61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxZK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SrNxZa1MEeOdBunZhTRw1w" name="Fork(Read(attr).result)" outgoing="_SrNxba1MEeOdBunZhTRw1w" incoming="_SrNxbK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNxZq1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SrNxZ61MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SrNxcK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxaK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxaa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SrNxaq1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxa61MEeOdBunZhTRw1w" source="_SrNxXa1MEeOdBunZhTRw1w" target="_SrNxV61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxbK1MEeOdBunZhTRw1w" source="_SrNxWq1MEeOdBunZhTRw1w" target="_SrNxZa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxba1MEeOdBunZhTRw1w" source="_SrNxZa1MEeOdBunZhTRw1w" target="_SrNxX61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxbq1MEeOdBunZhTRw1w" source="_SrNxUq1MEeOdBunZhTRw1w" target="_SrNxR61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxb61MEeOdBunZhTRw1w" source="_SrNxYq1MEeOdBunZhTRw1w" target="_SrNxSq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxcK1MEeOdBunZhTRw1w" source="_SrNxZ61MEeOdBunZhTRw1w" target="_SrNxTa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxca1MEeOdBunZhTRw1w" source="_SrNxUK1MEeOdBunZhTRw1w" target="_SrNxRq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNxcq1MEeOdBunZhTRw1w" name="ExpressionStatement@51c73e00" incoming="_SrNxoK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNxc61MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_SrNxga1MEeOdBunZhTRw1w">
              <argument xmi:id="_SrNxdK1MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_SrNxgK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxda1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxdq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SrNxd61MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxeK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxea1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNxeq1MEeOdBunZhTRw1w" name="Tuple@4e798578" outgoing="_SrNxga1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNxe61MEeOdBunZhTRw1w" name="Value(&quot;Done&quot;)">
                <result xmi:id="_SrNxfK1MEeOdBunZhTRw1w" name="Value(&quot;Done&quot;).result" outgoing="_SrNxgK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxfa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxfq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SrNxf61MEeOdBunZhTRw1w" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxgK1MEeOdBunZhTRw1w" source="_SrNxfK1MEeOdBunZhTRw1w" target="_SrNxdK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxga1MEeOdBunZhTRw1w" source="_SrNxeq1MEeOdBunZhTRw1w" target="_SrNxc61MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxgq1MEeOdBunZhTRw1w" source="_SrNvfK1MEeOdBunZhTRw1w" target="_SrNvn61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxg61MEeOdBunZhTRw1w" source="_SrNvTa1MEeOdBunZhTRw1w" target="_SrNvmq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxhK1MEeOdBunZhTRw1w" source="_SrNvfa1MEeOdBunZhTRw1w" target="_SrNvuK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxha1MEeOdBunZhTRw1w" source="_SrNvmq1MEeOdBunZhTRw1w" target="_SrNvs61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxhq1MEeOdBunZhTRw1w" source="_SrNvfq1MEeOdBunZhTRw1w" target="_SrNv0a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxh61MEeOdBunZhTRw1w" source="_SrNvs61MEeOdBunZhTRw1w" target="_SrNvzK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxiK1MEeOdBunZhTRw1w" source="_SrNvf61MEeOdBunZhTRw1w" target="_SrNv9q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxia1MEeOdBunZhTRw1w" source="_SrNvzK1MEeOdBunZhTRw1w" target="_SrNv5a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxiq1MEeOdBunZhTRw1w" source="_SrNvgK1MEeOdBunZhTRw1w" target="_SrNwI61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxi61MEeOdBunZhTRw1w" source="_SrNv5a1MEeOdBunZhTRw1w" target="_SrNwEq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxjK1MEeOdBunZhTRw1w" source="_SrNvga1MEeOdBunZhTRw1w" target="_SrNwRK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxja1MEeOdBunZhTRw1w" source="_SrNwEq1MEeOdBunZhTRw1w" target="_SrNwP61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxjq1MEeOdBunZhTRw1w" source="_SrNvgq1MEeOdBunZhTRw1w" target="_SrNwa61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxj61MEeOdBunZhTRw1w" source="_SrNwP61MEeOdBunZhTRw1w" target="_SrNwZq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxkK1MEeOdBunZhTRw1w" source="_SrNvg61MEeOdBunZhTRw1w" target="_SrNwkq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxka1MEeOdBunZhTRw1w" source="_SrNwZq1MEeOdBunZhTRw1w" target="_SrNwja1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxkq1MEeOdBunZhTRw1w" source="_SrNvhK1MEeOdBunZhTRw1w" target="_SrNwoq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxk61MEeOdBunZhTRw1w" source="_SrNwja1MEeOdBunZhTRw1w" target="_SrNwna1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxlK1MEeOdBunZhTRw1w" source="_SrNvha1MEeOdBunZhTRw1w" target="_SrNwsq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxla1MEeOdBunZhTRw1w" source="_SrNwna1MEeOdBunZhTRw1w" target="_SrNwra1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxlq1MEeOdBunZhTRw1w" source="_SrNvhq1MEeOdBunZhTRw1w" target="_SrNwwq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxl61MEeOdBunZhTRw1w" source="_SrNwra1MEeOdBunZhTRw1w" target="_SrNwva1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxmK1MEeOdBunZhTRw1w" source="_SrNvh61MEeOdBunZhTRw1w" target="_SrNw5a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxma1MEeOdBunZhTRw1w" source="_SrNwva1MEeOdBunZhTRw1w" target="_SrNwza1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxmq1MEeOdBunZhTRw1w" source="_SrNviK1MEeOdBunZhTRw1w" target="_SrNxCK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxm61MEeOdBunZhTRw1w" source="_SrNwza1MEeOdBunZhTRw1w" target="_SrNw8K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxnK1MEeOdBunZhTRw1w" source="_SrNvia1MEeOdBunZhTRw1w" target="_SrNxK61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxna1MEeOdBunZhTRw1w" source="_SrNw8K1MEeOdBunZhTRw1w" target="_SrNxE61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxnq1MEeOdBunZhTRw1w" source="_SrNviq1MEeOdBunZhTRw1w" target="_SrNxXa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxn61MEeOdBunZhTRw1w" source="_SrNxE61MEeOdBunZhTRw1w" target="_SrNxRa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNxoK1MEeOdBunZhTRw1w" source="_SrNxRa1MEeOdBunZhTRw1w" target="_SrNxcq1MEeOdBunZhTRw1w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SrNxoa1MEeOdBunZhTRw1w" name="Expressions_Sequence_Expansion_Reduction$method$1" specification="_SrNyIa1MEeOdBunZhTRw1w" group="_SrNxp61MEeOdBunZhTRw1w" node="_SrNxpq1MEeOdBunZhTRw1w _SrNxp61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_SrNxoq1MEeOdBunZhTRw1w" name="" type="_SrNvQa1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxo61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxpK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNxpa1MEeOdBunZhTRw1w" source="_SrNxra1MEeOdBunZhTRw1w" target="_SrNxpq1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_SrNxp61MEeOdBunZhTRw1w" name="Body(Expressions_Sequence_Expansion_Reduction$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNxqK1MEeOdBunZhTRw1w" name="Body" incoming="_SrNx061MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SrNxqa1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_SrNxqq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SrNx0a1MEeOdBunZhTRw1w" type="_SrNvQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxq61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxrK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SrNxra1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SrNxpa1MEeOdBunZhTRw1w _SrNx0q1MEeOdBunZhTRw1w _SrNx1K1MEeOdBunZhTRw1w" incoming="_SrNx0a1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SrNxrq1MEeOdBunZhTRw1w" name="Call(Expressions_Sequence_Expansion_Reduction$initialization$1)" outgoing="_SrNx061MEeOdBunZhTRw1w" incoming="_SrNx2q1MEeOdBunZhTRw1w" operation="_SrNyIK1MEeOdBunZhTRw1w">
            <target xmi:id="_SrNxr61MEeOdBunZhTRw1w" name="Call(Expressions_Sequence_Expansion_Reduction$initialization$1).target" incoming="_SrNx0q1MEeOdBunZhTRw1w" type="_SrNvQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxsK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxsa1MEeOdBunZhTRw1w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrNxsq1MEeOdBunZhTRw1w" name="Read(Expressions_Sequence_Expansion_Reduction$initializationFlag$1)" structuralFeature="_SrNvSK1MEeOdBunZhTRw1w">
            <object xmi:id="_SrNxs61MEeOdBunZhTRw1w" name="Read(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).object" incoming="_SrNx1K1MEeOdBunZhTRw1w" type="_SrNvQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxtK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxta1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_SrNxtq1MEeOdBunZhTRw1w" name="Read(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).result" outgoing="_SrNx1a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxt61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxuK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNxua1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_SrNxuq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SrNx1a1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxu61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxvK1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SrNxva1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SrNx1q1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxvq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxv61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNxwK1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_SrNxwa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SrNx161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxwq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxw61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SrNxxK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SrNxxa1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_SrNxxq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SrNx1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxx61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxyK1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_SrNxya1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SrNx2a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxyq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxy61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_SrNxzK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SrNx161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNxza1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNxzq1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SrNxz61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SrNx2K1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SrNx0K1MEeOdBunZhTRw1w" name="Decision(Test(Expressions_Sequence_Expansion_Reduction$initializationFlag$1))" outgoing="_SrNx2q1MEeOdBunZhTRw1w" incoming="_SrNx2K1MEeOdBunZhTRw1w _SrNx2a1MEeOdBunZhTRw1w" decisionInputFlow="_SrNx2a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNx0a1MEeOdBunZhTRw1w" source="_SrNxqq1MEeOdBunZhTRw1w" target="_SrNxra1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNx0q1MEeOdBunZhTRw1w" source="_SrNxra1MEeOdBunZhTRw1w" target="_SrNxr61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNx061MEeOdBunZhTRw1w" source="_SrNxrq1MEeOdBunZhTRw1w" target="_SrNxqK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNx1K1MEeOdBunZhTRw1w" source="_SrNxra1MEeOdBunZhTRw1w" target="_SrNxs61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNx1a1MEeOdBunZhTRw1w" source="_SrNxtq1MEeOdBunZhTRw1w" target="_SrNxuq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNx1q1MEeOdBunZhTRw1w" source="_SrNxva1MEeOdBunZhTRw1w" target="_SrNxxq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNx161MEeOdBunZhTRw1w" source="_SrNxwa1MEeOdBunZhTRw1w" target="_SrNxzK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNx2K1MEeOdBunZhTRw1w" source="_SrNxz61MEeOdBunZhTRw1w" target="_SrNx0K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNx2a1MEeOdBunZhTRw1w" source="_SrNxya1MEeOdBunZhTRw1w" target="_SrNx0K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNx2q1MEeOdBunZhTRw1w" source="_SrNx0K1MEeOdBunZhTRw1w" target="_SrNxrq1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SrNx261MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SrNxpq1MEeOdBunZhTRw1w" name="Return" incoming="_SrNxpa1MEeOdBunZhTRw1w" parameter="_SrNxoq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SrNx3K1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_SrNyJa1MEeOdBunZhTRw1w" group="_SrNx3a1MEeOdBunZhTRw1w" node="_SrNx3a1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_SrNx3a1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SrNx3q1MEeOdBunZhTRw1w" name="Expressions_Sequence_Expansion_Reduction$initialization$1" specification="_SrNyIK1MEeOdBunZhTRw1w" group="_SrNx361MEeOdBunZhTRw1w" node="_SrNx361MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_SrNx361MEeOdBunZhTRw1w" name="Body(Expressions_Sequence_Expansion_Reduction$initialization$1)">
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SrNx4K1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_SrNx4a1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SrNyFq1MEeOdBunZhTRw1w" type="_SrNvQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNx4q1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNx461MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SrNx5K1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SrNyF61MEeOdBunZhTRw1w _SrNyGK1MEeOdBunZhTRw1w" incoming="_SrNyFq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNx5a1MEeOdBunZhTRw1w" name="Initialization" incoming="_SrNyHq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNx5q1MEeOdBunZhTRw1w" name="Set(initializationFlag)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNx561MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_SrNx6K1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SrNx9q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNx6a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNx6q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SrNx661MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SrNx7K1MEeOdBunZhTRw1w" name="Write(Expressions_Sequence_Expansion_Reduction$initializationFlag$1)" structuralFeature="_SrNvSK1MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_SrNx7a1MEeOdBunZhTRw1w" name="Write(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).object" incoming="_SrNyF61MEeOdBunZhTRw1w" type="_SrNvQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNx7q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNx761MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SrNx8K1MEeOdBunZhTRw1w" name="Write(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).result" type="_SrNvQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNx8a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNx8q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_SrNx861MEeOdBunZhTRw1w" name="Write(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).value" incoming="_SrNx9q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNx9K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNx9a1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNx9q1MEeOdBunZhTRw1w" source="_SrNx6K1MEeOdBunZhTRw1w" target="_SrNx861MEeOdBunZhTRw1w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrNx961MEeOdBunZhTRw1w" name="Read(Expressions_Sequence_Expansion_Reduction$initializationFlag$1)" structuralFeature="_SrNvSK1MEeOdBunZhTRw1w">
            <object xmi:id="_SrNx-K1MEeOdBunZhTRw1w" name="Read(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).object" incoming="_SrNyGK1MEeOdBunZhTRw1w" type="_SrNvQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNx-a1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNx-q1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_SrNx-61MEeOdBunZhTRw1w" name="Read(Expressions_Sequence_Expansion_Reduction$initializationFlag$1).result" outgoing="_SrNyGa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNx_K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNx_a1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNx_q1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_SrNx_61MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SrNyGa1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyAK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyAa1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SrNyAq1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SrNyGq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyA61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyBK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNyBa1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_SrNyBq1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SrNyG61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyB61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyCK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SrNyCa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SrNyCq1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_SrNyC61MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SrNyGq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyDK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyDa1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_SrNyDq1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SrNyHa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyD61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyEK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_SrNyEa1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SrNyG61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyEq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyE61MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SrNyFK1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SrNyHK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SrNyFa1MEeOdBunZhTRw1w" name="Decision(Test(Expressions_Sequence_Expansion_Reduction$initializationFlag$1))" outgoing="_SrNyHq1MEeOdBunZhTRw1w" incoming="_SrNyHK1MEeOdBunZhTRw1w _SrNyHa1MEeOdBunZhTRw1w" decisionInputFlow="_SrNyHa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyFq1MEeOdBunZhTRw1w" source="_SrNx4a1MEeOdBunZhTRw1w" target="_SrNx5K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyF61MEeOdBunZhTRw1w" source="_SrNx5K1MEeOdBunZhTRw1w" target="_SrNx7a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyGK1MEeOdBunZhTRw1w" source="_SrNx5K1MEeOdBunZhTRw1w" target="_SrNx-K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyGa1MEeOdBunZhTRw1w" source="_SrNx-61MEeOdBunZhTRw1w" target="_SrNx_61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyGq1MEeOdBunZhTRw1w" source="_SrNyAq1MEeOdBunZhTRw1w" target="_SrNyC61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyG61MEeOdBunZhTRw1w" source="_SrNyBq1MEeOdBunZhTRw1w" target="_SrNyEa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNyHK1MEeOdBunZhTRw1w" source="_SrNyFK1MEeOdBunZhTRw1w" target="_SrNyFa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyHa1MEeOdBunZhTRw1w" source="_SrNyDq1MEeOdBunZhTRw1w" target="_SrNyFa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SrNyHq1MEeOdBunZhTRw1w" source="_SrNyFa1MEeOdBunZhTRw1w" target="_SrNx5a1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SrNyH61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_SrNyIK1MEeOdBunZhTRw1w" name="Expressions_Sequence_Expansion_Reduction$initialization$1" visibility="protected" method="_SrNx3q1MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_SrNyIa1MEeOdBunZhTRw1w" name="Expressions_Sequence_Expansion_Reduction" visibility="package" method="_SrNxoa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_SrNyIq1MEeOdBunZhTRw1w" name="" visibility="package" type="_SrNvQa1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyI61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyJK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SrNyJa1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_SrNx3K1MEeOdBunZhTRw1w"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SrNyJq1MEeOdBunZhTRw1w" name="Employee">
        <ownedAttribute xmi:id="_SrNyJ61MEeOdBunZhTRw1w" name="Employee$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyKK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyKa1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SrNyKq1MEeOdBunZhTRw1w" name="age" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyK61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyLK1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SrNyLa1MEeOdBunZhTRw1w" name="isMarried" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyLq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyL61MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SrNyMK1MEeOdBunZhTRw1w" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyMa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyMq1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SrNyM61MEeOdBunZhTRw1w" name="title" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyNK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyNa1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SrNyNq1MEeOdBunZhTRw1w" name="id" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyN61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyOK1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SrNyOa1MEeOdBunZhTRw1w" name="Employee$method$1" specification="_SrOWfa1MEeOdBunZhTRw1w" group="_SrNyP61MEeOdBunZhTRw1w" node="_SrNyPq1MEeOdBunZhTRw1w _SrNyP61MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SrNyOq1MEeOdBunZhTRw1w" name="" type="_SrNyJq1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyO61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyPK1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyPa1MEeOdBunZhTRw1w" source="_SrNyRa1MEeOdBunZhTRw1w" target="_SrNyPq1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_SrNyP61MEeOdBunZhTRw1w" name="Body(Employee$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNyQK1MEeOdBunZhTRw1w" name="Body" incoming="_SrNya61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SrNyQa1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SrNyQq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SrNyaa1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyQ61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyRK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNyRa1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SrNyPa1MEeOdBunZhTRw1w _SrNyaq1MEeOdBunZhTRw1w _SrNybK1MEeOdBunZhTRw1w" incoming="_SrNyaa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SrNyRq1MEeOdBunZhTRw1w" name="Call(Employee$initialization$1)" outgoing="_SrNya61MEeOdBunZhTRw1w" incoming="_SrNycq1MEeOdBunZhTRw1w" operation="_SrOWfK1MEeOdBunZhTRw1w">
              <target xmi:id="_SrNyR61MEeOdBunZhTRw1w" name="Call(Employee$initialization$1).target" incoming="_SrNyaq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNySK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNySa1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrNySq1MEeOdBunZhTRw1w" name="Read(Employee$initializationFlag$1)" structuralFeature="_SrNyJ61MEeOdBunZhTRw1w">
              <object xmi:id="_SrNyS61MEeOdBunZhTRw1w" name="Read(Employee$initializationFlag$1).object" incoming="_SrNybK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyTK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyTa1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SrNyTq1MEeOdBunZhTRw1w" name="Read(Employee$initializationFlag$1).result" outgoing="_SrNyba1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyT61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyUK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrNyUa1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SrNyUq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SrNyba1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyU61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyVK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SrNyVa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SrNybq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyVq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyV61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNyWK1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SrNyWa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SrNyb61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyWq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyW61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SrNyXK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SrNyXa1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SrNyXq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SrNybq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyX61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyYK1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SrNyYa1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SrNyca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyYq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyY61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SrNyZK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SrNyb61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyZa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyZq1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SrNyZ61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SrNycK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SrNyaK1MEeOdBunZhTRw1w" name="Decision(Test(Employee$initializationFlag$1))" outgoing="_SrNycq1MEeOdBunZhTRw1w" incoming="_SrNycK1MEeOdBunZhTRw1w _SrNyca1MEeOdBunZhTRw1w" decisionInputFlow="_SrNyca1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyaa1MEeOdBunZhTRw1w" source="_SrNyQq1MEeOdBunZhTRw1w" target="_SrNyRa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyaq1MEeOdBunZhTRw1w" source="_SrNyRa1MEeOdBunZhTRw1w" target="_SrNyR61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNya61MEeOdBunZhTRw1w" source="_SrNyRq1MEeOdBunZhTRw1w" target="_SrNyQK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNybK1MEeOdBunZhTRw1w" source="_SrNyRa1MEeOdBunZhTRw1w" target="_SrNyS61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyba1MEeOdBunZhTRw1w" source="_SrNyTq1MEeOdBunZhTRw1w" target="_SrNyUq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNybq1MEeOdBunZhTRw1w" source="_SrNyVa1MEeOdBunZhTRw1w" target="_SrNyXq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyb61MEeOdBunZhTRw1w" source="_SrNyWa1MEeOdBunZhTRw1w" target="_SrNyZK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNycK1MEeOdBunZhTRw1w" source="_SrNyZ61MEeOdBunZhTRw1w" target="_SrNyaK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyca1MEeOdBunZhTRw1w" source="_SrNyYa1MEeOdBunZhTRw1w" target="_SrNyaK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrNycq1MEeOdBunZhTRw1w" source="_SrNyaK1MEeOdBunZhTRw1w" target="_SrNyRq1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SrNyc61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SrNyPq1MEeOdBunZhTRw1w" name="Return" incoming="_SrNyPa1MEeOdBunZhTRw1w" parameter="_SrNyOq1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SrNydK1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_SrOWga1MEeOdBunZhTRw1w" group="_SrNyda1MEeOdBunZhTRw1w" node="_SrNyda1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SrNyda1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SrNydq1MEeOdBunZhTRw1w" name="Employee$initialization$1" specification="_SrOWfK1MEeOdBunZhTRw1w" group="_SrNyd61MEeOdBunZhTRw1w" node="_SrNyd61MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SrNyd61MEeOdBunZhTRw1w" name="Body(Employee$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SrNyeK1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SrNyea1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SrOWba1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyeq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNye61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SrNyfK1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SrOWbq1MEeOdBunZhTRw1w _SrOWb61MEeOdBunZhTRw1w _SrOWcK1MEeOdBunZhTRw1w _SrOWca1MEeOdBunZhTRw1w _SrOWcq1MEeOdBunZhTRw1w _SrOWc61MEeOdBunZhTRw1w _SrOWdK1MEeOdBunZhTRw1w" incoming="_SrOWba1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNyfa1MEeOdBunZhTRw1w" name="Initialization" incoming="_SrOWeq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNyfq1MEeOdBunZhTRw1w" name="Initialize(age)" outgoing="_SrNy5K1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNyf61MEeOdBunZhTRw1w" name="Value(51)">
                  <result xmi:id="_SrNygK1MEeOdBunZhTRw1w" name="Value(51).result" outgoing="_SrNyjq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyga1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNygq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SrNyg61MEeOdBunZhTRw1w" value="51">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SrNyhK1MEeOdBunZhTRw1w" name="Write(age)" structuralFeature="_SrNyKq1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SrNyha1MEeOdBunZhTRw1w" name="Write(age).object" incoming="_SrOWbq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyhq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyh61MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SrNyiK1MEeOdBunZhTRw1w" name="Write(age).result" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyia1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyiq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SrNyi61MEeOdBunZhTRw1w" name="Write(age).value" incoming="_SrNyjq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyjK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyja1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyjq1MEeOdBunZhTRw1w" source="_SrNygK1MEeOdBunZhTRw1w" target="_SrNyi61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNyj61MEeOdBunZhTRw1w" name="Initialize(isMarried)" outgoing="_SrNy5a1MEeOdBunZhTRw1w" incoming="_SrNy5K1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNykK1MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_SrNyka1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SrNyn61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNykq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyk61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SrNylK1MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SrNyla1MEeOdBunZhTRw1w" name="Write(isMarried)" structuralFeature="_SrNyLa1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SrNylq1MEeOdBunZhTRw1w" name="Write(isMarried).object" incoming="_SrOWb61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyl61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNymK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SrNyma1MEeOdBunZhTRw1w" name="Write(isMarried).result" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNymq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNym61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SrNynK1MEeOdBunZhTRw1w" name="Write(isMarried).value" incoming="_SrNyn61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyna1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNynq1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNyn61MEeOdBunZhTRw1w" source="_SrNyka1MEeOdBunZhTRw1w" target="_SrNynK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNyoK1MEeOdBunZhTRw1w" name="Initialize(name)" outgoing="_SrNy5q1MEeOdBunZhTRw1w" incoming="_SrNy5a1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNyoa1MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;)">
                  <result xmi:id="_SrNyoq1MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;).result" outgoing="_SrNysK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyo61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNypK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SrNypa1MEeOdBunZhTRw1w" value="Joan">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SrNypq1MEeOdBunZhTRw1w" name="Write(name)" structuralFeature="_SrNyMK1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SrNyp61MEeOdBunZhTRw1w" name="Write(name).object" incoming="_SrOWcK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyqK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyqa1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SrNyqq1MEeOdBunZhTRw1w" name="Write(name).result" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyq61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyrK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SrNyra1MEeOdBunZhTRw1w" name="Write(name).value" incoming="_SrNysK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyrq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyr61MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNysK1MEeOdBunZhTRw1w" source="_SrNyoq1MEeOdBunZhTRw1w" target="_SrNyra1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNysa1MEeOdBunZhTRw1w" name="Initialize(title)" outgoing="_SrNy561MEeOdBunZhTRw1w" incoming="_SrNy5q1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNysq1MEeOdBunZhTRw1w" name="Value(&quot;President&quot;)">
                  <result xmi:id="_SrNys61MEeOdBunZhTRw1w" name="Value(&quot;President&quot;).result" outgoing="_SrNywa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNytK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyta1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SrNytq1MEeOdBunZhTRw1w" value="President">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SrNyt61MEeOdBunZhTRw1w" name="Write(title)" structuralFeature="_SrNyM61MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SrNyuK1MEeOdBunZhTRw1w" name="Write(title).object" incoming="_SrOWca1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyua1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyuq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SrNyu61MEeOdBunZhTRw1w" name="Write(title).result" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyvK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyva1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SrNyvq1MEeOdBunZhTRw1w" name="Write(title).value" incoming="_SrNywa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyv61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNywK1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNywa1MEeOdBunZhTRw1w" source="_SrNys61MEeOdBunZhTRw1w" target="_SrNyvq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNywq1MEeOdBunZhTRw1w" name="Initialize(id)" outgoing="_SrNy6K1MEeOdBunZhTRw1w" incoming="_SrNy561MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNyw61MEeOdBunZhTRw1w" name="Value(1)">
                  <result xmi:id="_SrNyxK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SrNy0q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyxa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyxq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SrNyx61MEeOdBunZhTRw1w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SrNyyK1MEeOdBunZhTRw1w" name="Write(id)" structuralFeature="_SrNyNq1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SrNyya1MEeOdBunZhTRw1w" name="Write(id).object" incoming="_SrOWcq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyyq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyy61MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SrNyzK1MEeOdBunZhTRw1w" name="Write(id).result" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNyza1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNyzq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SrNyz61MEeOdBunZhTRw1w" name="Write(id).value" incoming="_SrNy0q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNy0K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNy0a1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNy0q1MEeOdBunZhTRw1w" source="_SrNyxK1MEeOdBunZhTRw1w" target="_SrNyz61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrNy061MEeOdBunZhTRw1w" name="Set(initializationFlag)" incoming="_SrNy6K1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrNy1K1MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_SrNy1a1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SrNy461MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNy1q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNy161MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SrNy2K1MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SrNy2a1MEeOdBunZhTRw1w" name="Write(Employee$initializationFlag$1)" structuralFeature="_SrNyJ61MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SrNy2q1MEeOdBunZhTRw1w" name="Write(Employee$initializationFlag$1).object" incoming="_SrOWc61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNy261MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNy3K1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SrNy3a1MEeOdBunZhTRw1w" name="Write(Employee$initializationFlag$1).result" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNy3q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNy361MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SrNy4K1MEeOdBunZhTRw1w" name="Write(Employee$initializationFlag$1).value" incoming="_SrNy461MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrNy4a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrNy4q1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrNy461MEeOdBunZhTRw1w" source="_SrNy1a1MEeOdBunZhTRw1w" target="_SrNy4K1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SrNy5K1MEeOdBunZhTRw1w" source="_SrNyfq1MEeOdBunZhTRw1w" target="_SrNyj61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SrNy5a1MEeOdBunZhTRw1w" source="_SrNyj61MEeOdBunZhTRw1w" target="_SrNyoK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SrNy5q1MEeOdBunZhTRw1w" source="_SrNyoK1MEeOdBunZhTRw1w" target="_SrNysa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SrNy561MEeOdBunZhTRw1w" source="_SrNysa1MEeOdBunZhTRw1w" target="_SrNywq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SrNy6K1MEeOdBunZhTRw1w" source="_SrNywq1MEeOdBunZhTRw1w" target="_SrNy061MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrNy6a1MEeOdBunZhTRw1w" name="Read(Employee$initializationFlag$1)" structuralFeature="_SrNyJ61MEeOdBunZhTRw1w">
              <object xmi:id="_SrNy6q1MEeOdBunZhTRw1w" name="Read(Employee$initializationFlag$1).object" incoming="_SrOWdK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWUK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWUa1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SrOWUq1MEeOdBunZhTRw1w" name="Read(Employee$initializationFlag$1).result" outgoing="_SrOWda1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWU61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWVK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrOWVa1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SrOWVq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SrOWda1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWV61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWWK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SrOWWa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SrOWdq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWWq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWW61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrOWXK1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SrOWXa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SrOWd61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWXq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWX61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SrOWYK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SrOWYa1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SrOWYq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SrOWdq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWY61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWZK1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SrOWZa1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SrOWea1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWZq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWZ61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SrOWaK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SrOWd61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWaa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWaq1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SrOWa61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SrOWeK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SrOWbK1MEeOdBunZhTRw1w" name="Decision(Test(Employee$initializationFlag$1))" outgoing="_SrOWeq1MEeOdBunZhTRw1w" incoming="_SrOWeK1MEeOdBunZhTRw1w _SrOWea1MEeOdBunZhTRw1w" decisionInputFlow="_SrOWea1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWba1MEeOdBunZhTRw1w" source="_SrNyea1MEeOdBunZhTRw1w" target="_SrNyfK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWbq1MEeOdBunZhTRw1w" source="_SrNyfK1MEeOdBunZhTRw1w" target="_SrNyha1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWb61MEeOdBunZhTRw1w" source="_SrNyfK1MEeOdBunZhTRw1w" target="_SrNylq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWcK1MEeOdBunZhTRw1w" source="_SrNyfK1MEeOdBunZhTRw1w" target="_SrNyp61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWca1MEeOdBunZhTRw1w" source="_SrNyfK1MEeOdBunZhTRw1w" target="_SrNyuK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWcq1MEeOdBunZhTRw1w" source="_SrNyfK1MEeOdBunZhTRw1w" target="_SrNyya1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWc61MEeOdBunZhTRw1w" source="_SrNyfK1MEeOdBunZhTRw1w" target="_SrNy2q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWdK1MEeOdBunZhTRw1w" source="_SrNyfK1MEeOdBunZhTRw1w" target="_SrNy6q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWda1MEeOdBunZhTRw1w" source="_SrOWUq1MEeOdBunZhTRw1w" target="_SrOWVq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWdq1MEeOdBunZhTRw1w" source="_SrOWWa1MEeOdBunZhTRw1w" target="_SrOWYq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWd61MEeOdBunZhTRw1w" source="_SrOWXa1MEeOdBunZhTRw1w" target="_SrOWaK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrOWeK1MEeOdBunZhTRw1w" source="_SrOWa61MEeOdBunZhTRw1w" target="_SrOWbK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWea1MEeOdBunZhTRw1w" source="_SrOWZa1MEeOdBunZhTRw1w" target="_SrOWbK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrOWeq1MEeOdBunZhTRw1w" source="_SrOWbK1MEeOdBunZhTRw1w" target="_SrNyfa1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SrOWe61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SrOWfK1MEeOdBunZhTRw1w" name="Employee$initialization$1" visibility="protected" method="_SrNydq1MEeOdBunZhTRw1w"/>
        <ownedOperation xmi:id="_SrOWfa1MEeOdBunZhTRw1w" name="Employee" visibility="package" method="_SrNyOa1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SrOWfq1MEeOdBunZhTRw1w" name="" visibility="package" type="_SrNyJq1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWf61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWgK1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SrOWga1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_SrNydK1MEeOdBunZhTRw1w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SrOWgq1MEeOdBunZhTRw1w" name="Attribute">
        <ownedAttribute xmi:id="_SrOWg61MEeOdBunZhTRw1w" name="Attribute$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWhK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWha1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SrOWhq1MEeOdBunZhTRw1w" name="type" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWh61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWiK1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SrOWia1MEeOdBunZhTRw1w" name="Attribute$method$1" specification="_StLeJK1MEeOdBunZhTRw1w" group="_SrOWj61MEeOdBunZhTRw1w" node="_SrOWjq1MEeOdBunZhTRw1w _SrOWj61MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SrOWiq1MEeOdBunZhTRw1w" name="" type="_SrOWgq1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWi61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWjK1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWja1MEeOdBunZhTRw1w" source="_SrOWla1MEeOdBunZhTRw1w" target="_SrOWjq1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_SrOWj61MEeOdBunZhTRw1w" name="Body(Attribute$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrOWkK1MEeOdBunZhTRw1w" name="Body" incoming="_SrOWu61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SrOWka1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SrOWkq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SrOWua1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWk61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWlK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SrOWla1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SrOWja1MEeOdBunZhTRw1w _SrOWuq1MEeOdBunZhTRw1w _SrOWvK1MEeOdBunZhTRw1w" incoming="_SrOWua1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SrOWlq1MEeOdBunZhTRw1w" name="Call(Attribute$initialization$1)" outgoing="_SrOWu61MEeOdBunZhTRw1w" incoming="_SrOWwq1MEeOdBunZhTRw1w" operation="_StLeI61MEeOdBunZhTRw1w">
              <target xmi:id="_SrOWl61MEeOdBunZhTRw1w" name="Call(Attribute$initialization$1).target" incoming="_SrOWuq1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWmK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWma1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrOWmq1MEeOdBunZhTRw1w" name="Read(Attribute$initializationFlag$1)" structuralFeature="_SrOWg61MEeOdBunZhTRw1w">
              <object xmi:id="_SrOWm61MEeOdBunZhTRw1w" name="Read(Attribute$initializationFlag$1).object" incoming="_SrOWvK1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWnK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWna1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SrOWnq1MEeOdBunZhTRw1w" name="Read(Attribute$initializationFlag$1).result" outgoing="_SrOWva1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWn61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWoK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrOWoa1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SrOWoq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SrOWva1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWo61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWpK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SrOWpa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SrOWvq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWpq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWp61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrOWqK1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SrOWqa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SrOWv61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWqq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWq61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SrOWrK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SrOWra1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SrOWrq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SrOWvq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWr61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWsK1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SrOWsa1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SrOWwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWsq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWs61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SrOWtK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SrOWv61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWta1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWtq1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SrOWt61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SrOWwK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SrOWuK1MEeOdBunZhTRw1w" name="Decision(Test(Attribute$initializationFlag$1))" outgoing="_SrOWwq1MEeOdBunZhTRw1w" incoming="_SrOWwK1MEeOdBunZhTRw1w _SrOWwa1MEeOdBunZhTRw1w" decisionInputFlow="_SrOWwa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWua1MEeOdBunZhTRw1w" source="_SrOWkq1MEeOdBunZhTRw1w" target="_SrOWla1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWuq1MEeOdBunZhTRw1w" source="_SrOWla1MEeOdBunZhTRw1w" target="_SrOWl61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrOWu61MEeOdBunZhTRw1w" source="_SrOWlq1MEeOdBunZhTRw1w" target="_SrOWkK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWvK1MEeOdBunZhTRw1w" source="_SrOWla1MEeOdBunZhTRw1w" target="_SrOWm61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWva1MEeOdBunZhTRw1w" source="_SrOWnq1MEeOdBunZhTRw1w" target="_SrOWoq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWvq1MEeOdBunZhTRw1w" source="_SrOWpa1MEeOdBunZhTRw1w" target="_SrOWrq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWv61MEeOdBunZhTRw1w" source="_SrOWqa1MEeOdBunZhTRw1w" target="_SrOWtK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrOWwK1MEeOdBunZhTRw1w" source="_SrOWt61MEeOdBunZhTRw1w" target="_SrOWuK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOWwa1MEeOdBunZhTRw1w" source="_SrOWsa1MEeOdBunZhTRw1w" target="_SrOWuK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrOWwq1MEeOdBunZhTRw1w" source="_SrOWuK1MEeOdBunZhTRw1w" target="_SrOWlq1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SrOWw61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SrOWjq1MEeOdBunZhTRw1w" name="Return" incoming="_SrOWja1MEeOdBunZhTRw1w" parameter="_SrOWiq1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SrOWxK1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_StLeKK1MEeOdBunZhTRw1w" group="_SrOWxa1MEeOdBunZhTRw1w" node="_SrOWxa1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SrOWxa1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SrOWxq1MEeOdBunZhTRw1w" name="Attribute$initialization$1" specification="_StLeI61MEeOdBunZhTRw1w" group="_SrOWx61MEeOdBunZhTRw1w" node="_SrOWx61MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SrOWx61MEeOdBunZhTRw1w" name="Body(Attribute$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SrOWyK1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SrOWya1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SrOXEK1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOWyq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOWy61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SrOWzK1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SrOXEa1MEeOdBunZhTRw1w _SrOXEq1MEeOdBunZhTRw1w _SrOXE61MEeOdBunZhTRw1w" incoming="_SrOXEK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrOWza1MEeOdBunZhTRw1w" name="Initialization" incoming="_StLeIa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrOWzq1MEeOdBunZhTRw1w" name="Initialize(type)" outgoing="_SrOW8K1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrOWz61MEeOdBunZhTRw1w" name="Value(0)">
                  <result xmi:id="_SrOW0K1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SrOW3q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOW0a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOW0q1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SrOW061MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SrOW1K1MEeOdBunZhTRw1w" name="Write(type)" structuralFeature="_SrOWhq1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SrOW1a1MEeOdBunZhTRw1w" name="Write(type).object" incoming="_SrOXEa1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOW1q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOW161MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SrOW2K1MEeOdBunZhTRw1w" name="Write(type).result" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOW2a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOW2q1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SrOW261MEeOdBunZhTRw1w" name="Write(type).value" incoming="_SrOW3q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOW3K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOW3a1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOW3q1MEeOdBunZhTRw1w" source="_SrOW0K1MEeOdBunZhTRw1w" target="_SrOW261MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SrOW361MEeOdBunZhTRw1w" name="Set(initializationFlag)" incoming="_SrOW8K1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrOW4K1MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_SrOW4a1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SrOW761MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOW4q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOW461MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SrOW5K1MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SrOW5a1MEeOdBunZhTRw1w" name="Write(Attribute$initializationFlag$1)" structuralFeature="_SrOWg61MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SrOW5q1MEeOdBunZhTRw1w" name="Write(Attribute$initializationFlag$1).object" incoming="_SrOXEq1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOW561MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOW6K1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SrOW6a1MEeOdBunZhTRw1w" name="Write(Attribute$initializationFlag$1).result" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOW6q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOW661MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SrOW7K1MEeOdBunZhTRw1w" name="Write(Attribute$initializationFlag$1).value" incoming="_SrOW761MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOW7a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOW7q1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOW761MEeOdBunZhTRw1w" source="_SrOW4a1MEeOdBunZhTRw1w" target="_SrOW7K1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SrOW8K1MEeOdBunZhTRw1w" source="_SrOWzq1MEeOdBunZhTRw1w" target="_SrOW361MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SrOW8a1MEeOdBunZhTRw1w" name="Read(Attribute$initializationFlag$1)" structuralFeature="_SrOWg61MEeOdBunZhTRw1w">
              <object xmi:id="_SrOW8q1MEeOdBunZhTRw1w" name="Read(Attribute$initializationFlag$1).object" incoming="_SrOXE61MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOW861MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOW9K1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SrOW9a1MEeOdBunZhTRw1w" name="Read(Attribute$initializationFlag$1).result" outgoing="_SrOXFK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOW9q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOW961MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SrOW-K1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SrOW-a1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SrOXFK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOW-q1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOW-61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SrOW_K1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SrOXFa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOW_a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOW_q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SrOW_61MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SrOXAK1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SrOXFq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOXAa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOXAq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SrOXA61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SrOXBK1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SrOXBa1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SrOXFa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOXBq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOXB61MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SrOXCK1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_StLeIK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOXCa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOXCq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SrOXC61MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SrOXFq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SrOXDK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SrOXDa1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SrOXDq1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SrOXF61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SrOXD61MEeOdBunZhTRw1w" name="Decision(Test(Attribute$initializationFlag$1))" outgoing="_StLeIa1MEeOdBunZhTRw1w" incoming="_SrOXF61MEeOdBunZhTRw1w _StLeIK1MEeOdBunZhTRw1w" decisionInputFlow="_StLeIK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOXEK1MEeOdBunZhTRw1w" source="_SrOWya1MEeOdBunZhTRw1w" target="_SrOWzK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOXEa1MEeOdBunZhTRw1w" source="_SrOWzK1MEeOdBunZhTRw1w" target="_SrOW1a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOXEq1MEeOdBunZhTRw1w" source="_SrOWzK1MEeOdBunZhTRw1w" target="_SrOW5q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOXE61MEeOdBunZhTRw1w" source="_SrOWzK1MEeOdBunZhTRw1w" target="_SrOW8q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOXFK1MEeOdBunZhTRw1w" source="_SrOW9a1MEeOdBunZhTRw1w" target="_SrOW-a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOXFa1MEeOdBunZhTRw1w" source="_SrOW_K1MEeOdBunZhTRw1w" target="_SrOXBa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SrOXFq1MEeOdBunZhTRw1w" source="_SrOXAK1MEeOdBunZhTRw1w" target="_SrOXC61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SrOXF61MEeOdBunZhTRw1w" source="_SrOXDq1MEeOdBunZhTRw1w" target="_SrOXD61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLeIK1MEeOdBunZhTRw1w" source="_SrOXCK1MEeOdBunZhTRw1w" target="_SrOXD61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StLeIa1MEeOdBunZhTRw1w" source="_SrOXD61MEeOdBunZhTRw1w" target="_SrOWza1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_StLeIq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_StLeI61MEeOdBunZhTRw1w" name="Attribute$initialization$1" visibility="protected" method="_SrOWxq1MEeOdBunZhTRw1w"/>
        <ownedOperation xmi:id="_StLeJK1MEeOdBunZhTRw1w" name="Attribute" visibility="package" method="_SrOWia1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_StLeJa1MEeOdBunZhTRw1w" name="" visibility="package" type="_SrOWgq1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeJq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeJ61MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_StLeKK1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_SrOWxK1MEeOdBunZhTRw1w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_StLeKa1MEeOdBunZhTRw1w" name="Something">
        <ownedAttribute xmi:id="_StLeKq1MEeOdBunZhTRw1w" name="Something$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeK61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeLK1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_StLeLa1MEeOdBunZhTRw1w" name="attribute" visibility="public" type="_SrOWgq1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeLq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeL61MEeOdBunZhTRw1w" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_StLeMK1MEeOdBunZhTRw1w" name="Something$method$1" specification="_StLe0a1MEeOdBunZhTRw1w" group="_StLeNq1MEeOdBunZhTRw1w" node="_StLeNa1MEeOdBunZhTRw1w _StLeNq1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_StLeMa1MEeOdBunZhTRw1w" name="" type="_StLeKa1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeMq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeM61MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StLeNK1MEeOdBunZhTRw1w" source="_StLePK1MEeOdBunZhTRw1w" target="_StLeNa1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_StLeNq1MEeOdBunZhTRw1w" name="Body(Something$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLeN61MEeOdBunZhTRw1w" name="Body" incoming="_StLeYq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_StLeOK1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_StLeOa1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_StLeYK1MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeOq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeO61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StLePK1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_StLeNK1MEeOdBunZhTRw1w _StLeYa1MEeOdBunZhTRw1w _StLeY61MEeOdBunZhTRw1w" incoming="_StLeYK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_StLePa1MEeOdBunZhTRw1w" name="Call(Something$initialization$1)" outgoing="_StLeYq1MEeOdBunZhTRw1w" incoming="_StLeaa1MEeOdBunZhTRw1w" operation="_StLe0K1MEeOdBunZhTRw1w">
              <target xmi:id="_StLePq1MEeOdBunZhTRw1w" name="Call(Something$initialization$1).target" incoming="_StLeYa1MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeP61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeQK1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StLeQa1MEeOdBunZhTRw1w" name="Read(Something$initializationFlag$1)" structuralFeature="_StLeKq1MEeOdBunZhTRw1w">
              <object xmi:id="_StLeQq1MEeOdBunZhTRw1w" name="Read(Something$initializationFlag$1).object" incoming="_StLeY61MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeQ61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeRK1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_StLeRa1MEeOdBunZhTRw1w" name="Read(Something$initializationFlag$1).result" outgoing="_StLeZK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeRq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeR61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StLeSK1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_StLeSa1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_StLeZK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeSq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeS61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_StLeTK1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_StLeZa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeTa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeTq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StLeT61MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_StLeUK1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_StLeZq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeUa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeUq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_StLeU61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_StLeVK1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_StLeVa1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_StLeZa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeVq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeV61MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_StLeWK1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_StLeaK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeWa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeWq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_StLeW61MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_StLeZq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeXK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeXa1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_StLeXq1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_StLeZ61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_StLeX61MEeOdBunZhTRw1w" name="Decision(Test(Something$initializationFlag$1))" outgoing="_StLeaa1MEeOdBunZhTRw1w" incoming="_StLeZ61MEeOdBunZhTRw1w _StLeaK1MEeOdBunZhTRw1w" decisionInputFlow="_StLeaK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLeYK1MEeOdBunZhTRw1w" source="_StLeOa1MEeOdBunZhTRw1w" target="_StLePK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLeYa1MEeOdBunZhTRw1w" source="_StLePK1MEeOdBunZhTRw1w" target="_StLePq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StLeYq1MEeOdBunZhTRw1w" source="_StLePa1MEeOdBunZhTRw1w" target="_StLeN61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLeY61MEeOdBunZhTRw1w" source="_StLePK1MEeOdBunZhTRw1w" target="_StLeQq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLeZK1MEeOdBunZhTRw1w" source="_StLeRa1MEeOdBunZhTRw1w" target="_StLeSa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLeZa1MEeOdBunZhTRw1w" source="_StLeTK1MEeOdBunZhTRw1w" target="_StLeVa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLeZq1MEeOdBunZhTRw1w" source="_StLeUK1MEeOdBunZhTRw1w" target="_StLeW61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StLeZ61MEeOdBunZhTRw1w" source="_StLeXq1MEeOdBunZhTRw1w" target="_StLeX61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLeaK1MEeOdBunZhTRw1w" source="_StLeWK1MEeOdBunZhTRw1w" target="_StLeX61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StLeaa1MEeOdBunZhTRw1w" source="_StLeX61MEeOdBunZhTRw1w" target="_StLePa1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_StLeaq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLeNa1MEeOdBunZhTRw1w" name="Return" incoming="_StLeNK1MEeOdBunZhTRw1w" parameter="_StLeMa1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_StLea61MEeOdBunZhTRw1w" name="destroy$method$1" specification="_StLe1a1MEeOdBunZhTRw1w" group="_StLebK1MEeOdBunZhTRw1w" node="_StLebK1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_StLebK1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_StLeba1MEeOdBunZhTRw1w" name="Something$initialization$1" specification="_StLe0K1MEeOdBunZhTRw1w" group="_StLebq1MEeOdBunZhTRw1w" node="_StLebq1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_StLebq1MEeOdBunZhTRw1w" name="Body(Something$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_StLeb61MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_StLecK1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_StLexa1MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeca1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLecq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StLec61MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_StLexq1MEeOdBunZhTRw1w _StLex61MEeOdBunZhTRw1w _StLeyK1MEeOdBunZhTRw1w" incoming="_StLexa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLedK1MEeOdBunZhTRw1w" name="Initialization" incoming="_StLezq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLeda1MEeOdBunZhTRw1w" name="Initialize(attribute)" outgoing="_StLepa1MEeOdBunZhTRw1w">
                <node xmi:type="uml:CallOperationAction" xmi:id="_StLedq1MEeOdBunZhTRw1w" name="Call(Attribute)" operation="_StLeJK1MEeOdBunZhTRw1w">
                  <result xmi:id="_StLed61MEeOdBunZhTRw1w" name="Call(Attribute).result()" outgoing="_StLek61MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeeK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeea1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <target xmi:id="_StLeeq1MEeOdBunZhTRw1w" name="Call(Attribute).target" incoming="_StLekq1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLee61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLefK1MEeOdBunZhTRw1w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_StLefa1MEeOdBunZhTRw1w" name="Create(Attribute)" classifier="_SrOWgq1MEeOdBunZhTRw1w">
                  <result xmi:id="_StLefq1MEeOdBunZhTRw1w" name="Create(Attribute).result" outgoing="_StLekq1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLef61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLegK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_StLega1MEeOdBunZhTRw1w" name="Iterate(Write(attribute))" inputElement="_StLeka1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_StLegq1MEeOdBunZhTRw1w" name="Write(attribute)" structuralFeature="_StLeLa1MEeOdBunZhTRw1w">
                    <object xmi:id="_StLeg61MEeOdBunZhTRw1w" name="Write(attribute).object" incoming="_StLekK1MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLehK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeha1MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_StLehq1MEeOdBunZhTRw1w" name="Write(attribute).result" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeh61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeiK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:id="_StLeia1MEeOdBunZhTRw1w" name="Write(attribute).value" incoming="_StLej61MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeiq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLei61MEeOdBunZhTRw1w" value="1"/>
                    </value>
                  </node>
                  <structuredNodeInput xmi:id="_StLejK1MEeOdBunZhTRw1w" name="Iterate(Write(attribute)).input(Fork(ReadSelf.result))" outgoing="_StLekK1MEeOdBunZhTRw1w" incoming="_StLexq1MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeja1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLejq1MEeOdBunZhTRw1w" value="1"/>
                  </structuredNodeInput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StLej61MEeOdBunZhTRw1w" source="_StLeka1MEeOdBunZhTRw1w" target="_StLeia1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StLekK1MEeOdBunZhTRw1w" source="_StLejK1MEeOdBunZhTRw1w" target="_StLeg61MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_StLeka1MEeOdBunZhTRw1w" name="Iterate(Write(attribute)).inputElement" outgoing="_StLej61MEeOdBunZhTRw1w" incoming="_StLek61MEeOdBunZhTRw1w" regionAsInput="_StLega1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StLekq1MEeOdBunZhTRw1w" source="_StLefq1MEeOdBunZhTRw1w" target="_StLeeq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StLek61MEeOdBunZhTRw1w" source="_StLed61MEeOdBunZhTRw1w" target="_StLeka1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLelK1MEeOdBunZhTRw1w" name="Set(initializationFlag)" incoming="_StLepa1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StLela1MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_StLelq1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_StLepK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLel61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLemK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_StLema1MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_StLemq1MEeOdBunZhTRw1w" name="Write(Something$initializationFlag$1)" structuralFeature="_StLeKq1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_StLem61MEeOdBunZhTRw1w" name="Write(Something$initializationFlag$1).object" incoming="_StLex61MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLenK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLena1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_StLenq1MEeOdBunZhTRw1w" name="Write(Something$initializationFlag$1).result" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLen61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeoK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_StLeoa1MEeOdBunZhTRw1w" name="Write(Something$initializationFlag$1).value" incoming="_StLepK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeoq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeo61MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StLepK1MEeOdBunZhTRw1w" source="_StLelq1MEeOdBunZhTRw1w" target="_StLeoa1MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ControlFlow" xmi:id="_StLepa1MEeOdBunZhTRw1w" source="_StLeda1MEeOdBunZhTRw1w" target="_StLelK1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StLepq1MEeOdBunZhTRw1w" name="Read(Something$initializationFlag$1)" structuralFeature="_StLeKq1MEeOdBunZhTRw1w">
              <object xmi:id="_StLep61MEeOdBunZhTRw1w" name="Read(Something$initializationFlag$1).object" incoming="_StLeyK1MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeqK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLeqa1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_StLeqq1MEeOdBunZhTRw1w" name="Read(Something$initializationFlag$1).result" outgoing="_StLeya1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeq61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLerK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StLera1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_StLerq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_StLeya1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLer61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLesK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_StLesa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_StLeyq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLesq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLes61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StLetK1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_StLeta1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_StLey61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLetq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLet61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_StLeuK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_StLeua1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_StLeuq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_StLeyq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLeu61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLevK1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_StLeva1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_StLeza1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLevq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLev61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_StLewK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_StLey61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLewa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLewq1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_StLew61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_StLezK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_StLexK1MEeOdBunZhTRw1w" name="Decision(Test(Something$initializationFlag$1))" outgoing="_StLezq1MEeOdBunZhTRw1w" incoming="_StLezK1MEeOdBunZhTRw1w _StLeza1MEeOdBunZhTRw1w" decisionInputFlow="_StLeza1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLexa1MEeOdBunZhTRw1w" source="_StLecK1MEeOdBunZhTRw1w" target="_StLec61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLexq1MEeOdBunZhTRw1w" source="_StLec61MEeOdBunZhTRw1w" target="_StLejK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLex61MEeOdBunZhTRw1w" source="_StLec61MEeOdBunZhTRw1w" target="_StLem61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLeyK1MEeOdBunZhTRw1w" source="_StLec61MEeOdBunZhTRw1w" target="_StLep61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLeya1MEeOdBunZhTRw1w" source="_StLeqq1MEeOdBunZhTRw1w" target="_StLerq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLeyq1MEeOdBunZhTRw1w" source="_StLesa1MEeOdBunZhTRw1w" target="_StLeuq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLey61MEeOdBunZhTRw1w" source="_StLeta1MEeOdBunZhTRw1w" target="_StLewK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StLezK1MEeOdBunZhTRw1w" source="_StLew61MEeOdBunZhTRw1w" target="_StLexK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLeza1MEeOdBunZhTRw1w" source="_StLeva1MEeOdBunZhTRw1w" target="_StLexK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StLezq1MEeOdBunZhTRw1w" source="_StLexK1MEeOdBunZhTRw1w" target="_StLedK1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_StLez61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_StLe0K1MEeOdBunZhTRw1w" name="Something$initialization$1" visibility="protected" method="_StLeba1MEeOdBunZhTRw1w"/>
        <ownedOperation xmi:id="_StLe0a1MEeOdBunZhTRw1w" name="Something" visibility="package" method="_StLeMK1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_StLe0q1MEeOdBunZhTRw1w" name="" visibility="package" type="_StLeKa1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLe061MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLe1K1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_StLe1a1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_StLea61MEeOdBunZhTRw1w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_StLe1q1MEeOdBunZhTRw1w" name="Object">
        <ownedAttribute xmi:id="_StLe161MEeOdBunZhTRw1w" name="Object$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLe2K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLe2a1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_StLe2q1MEeOdBunZhTRw1w" name="attr" visibility="public" type="_SrOWgq1MEeOdBunZhTRw1w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLe261MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLe3K1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_StLe3a1MEeOdBunZhTRw1w" name="init$method$1" specification="_StLfiK1MEeOdBunZhTRw1w" group="_StLe5a1MEeOdBunZhTRw1w" node="_StLe461MEeOdBunZhTRw1w _StLe5K1MEeOdBunZhTRw1w _StLe5a1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_StLe3q1MEeOdBunZhTRw1w" name="attr" type="_SrOWgq1MEeOdBunZhTRw1w">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLe361MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLe4K1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StLe4a1MEeOdBunZhTRw1w" source="_StLe461MEeOdBunZhTRw1w" target="_StLe5K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StLe4q1MEeOdBunZhTRw1w" source="_StLe5K1MEeOdBunZhTRw1w" target="_StLe861MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_StLe5a1MEeOdBunZhTRw1w" name="Body(init$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLe5q1MEeOdBunZhTRw1w" name="ExpressionStatement@43f04617">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLe561MEeOdBunZhTRw1w" name="Expression(LeftHandSide@5389b2d9)" incoming="_StLfB61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_StLe6K1MEeOdBunZhTRw1w" name="ReadSelf">
                  <result xmi:id="_StLe6a1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_StLfBK1MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLe6q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLe661MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_StLe7K1MEeOdBunZhTRw1w" name="Clear(attr)" structuralFeature="_StLe2q1MEeOdBunZhTRw1w">
                <object xmi:id="_StLe7a1MEeOdBunZhTRw1w" name="Clear(attr).object" incoming="_StLfBK1MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLe7q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLe761MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_StLe8K1MEeOdBunZhTRw1w" name="Clear(attr).result" outgoing="_StLfBq1MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLe8a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLe8q1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_StLe861MEeOdBunZhTRw1w" name="Fork(LeftHandSide@5389b2d9)" outgoing="_StLfBa1MEeOdBunZhTRw1w" incoming="_StLe4q1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLe9K1MEeOdBunZhTRw1w" name="WriteAll(Object::attr)">
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_StLe9a1MEeOdBunZhTRw1w" name="Write(attr)" structuralFeature="_StLe2q1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_StLe9q1MEeOdBunZhTRw1w" name="Write(attr).object" incoming="_StLfBq1MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLe961MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLe-K1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_StLe-a1MEeOdBunZhTRw1w" name="Write(attr).result" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLe-q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLe-61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_StLe_K1MEeOdBunZhTRw1w" name="Write(attr).value" incoming="_StLfAq1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLe_a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLe_q1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <structuredNodeInput xmi:id="_StLe_61MEeOdBunZhTRw1w" name="WriteAll(Object::attr).input(Object::attr)" outgoing="_StLfAq1MEeOdBunZhTRw1w" incoming="_StLfBa1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfAK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfAa1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeInput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfAq1MEeOdBunZhTRw1w" source="_StLe_61MEeOdBunZhTRw1w" target="_StLe_K1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLfA61MEeOdBunZhTRw1w" name="RightHandSide@6bb15d1f" outgoing="_StLfB61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfBK1MEeOdBunZhTRw1w" source="_StLe6a1MEeOdBunZhTRw1w" target="_StLe7a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfBa1MEeOdBunZhTRw1w" source="_StLe861MEeOdBunZhTRw1w" target="_StLe_61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfBq1MEeOdBunZhTRw1w" source="_StLe8K1MEeOdBunZhTRw1w" target="_StLe9q1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_StLfB61MEeOdBunZhTRw1w" source="_StLfA61MEeOdBunZhTRw1w" target="_StLe561MEeOdBunZhTRw1w"/>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLe461MEeOdBunZhTRw1w" name="Input(attr)" outgoing="_StLe4a1MEeOdBunZhTRw1w" parameter="_StLe3q1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_StLe5K1MEeOdBunZhTRw1w" name="Fork(attr)" outgoing="_StLe4q1MEeOdBunZhTRw1w" incoming="_StLe4a1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_StLfCK1MEeOdBunZhTRw1w" name="Object$method$1" specification="_StLfjK1MEeOdBunZhTRw1w" group="_StLfDq1MEeOdBunZhTRw1w" node="_StLfDa1MEeOdBunZhTRw1w _StLfDq1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_StLfCa1MEeOdBunZhTRw1w" name="" type="_StLe1q1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfCq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfC61MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfDK1MEeOdBunZhTRw1w" source="_StLfFK1MEeOdBunZhTRw1w" target="_StLfDa1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_StLfDq1MEeOdBunZhTRw1w" name="Body(Object$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLfD61MEeOdBunZhTRw1w" name="Body" incoming="_StLfOq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_StLfEK1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_StLfEa1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_StLfOK1MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfEq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfE61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StLfFK1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_StLfDK1MEeOdBunZhTRw1w _StLfOa1MEeOdBunZhTRw1w _StLfO61MEeOdBunZhTRw1w" incoming="_StLfOK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_StLfFa1MEeOdBunZhTRw1w" name="Call(Object$initialization$1)" outgoing="_StLfOq1MEeOdBunZhTRw1w" incoming="_StLfQa1MEeOdBunZhTRw1w" operation="_StLfh61MEeOdBunZhTRw1w">
              <target xmi:id="_StLfFq1MEeOdBunZhTRw1w" name="Call(Object$initialization$1).target" incoming="_StLfOa1MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfF61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfGK1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StLfGa1MEeOdBunZhTRw1w" name="Read(Object$initializationFlag$1)" structuralFeature="_StLe161MEeOdBunZhTRw1w">
              <object xmi:id="_StLfGq1MEeOdBunZhTRw1w" name="Read(Object$initializationFlag$1).object" incoming="_StLfO61MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfG61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfHK1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_StLfHa1MEeOdBunZhTRw1w" name="Read(Object$initializationFlag$1).result" outgoing="_StLfPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfHq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfH61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StLfIK1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_StLfIa1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_StLfPK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfIq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfI61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_StLfJK1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_StLfPa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfJa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfJq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StLfJ61MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_StLfKK1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_StLfPq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfKa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfKq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_StLfK61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_StLfLK1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_StLfLa1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_StLfPa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfLq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfL61MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_StLfMK1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_StLfQK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfMa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfMq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_StLfM61MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_StLfPq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfNK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfNa1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_StLfNq1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_StLfP61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_StLfN61MEeOdBunZhTRw1w" name="Decision(Test(Object$initializationFlag$1))" outgoing="_StLfQa1MEeOdBunZhTRw1w" incoming="_StLfP61MEeOdBunZhTRw1w _StLfQK1MEeOdBunZhTRw1w" decisionInputFlow="_StLfQK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfOK1MEeOdBunZhTRw1w" source="_StLfEa1MEeOdBunZhTRw1w" target="_StLfFK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfOa1MEeOdBunZhTRw1w" source="_StLfFK1MEeOdBunZhTRw1w" target="_StLfFq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StLfOq1MEeOdBunZhTRw1w" source="_StLfFa1MEeOdBunZhTRw1w" target="_StLfD61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfO61MEeOdBunZhTRw1w" source="_StLfFK1MEeOdBunZhTRw1w" target="_StLfGq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfPK1MEeOdBunZhTRw1w" source="_StLfHa1MEeOdBunZhTRw1w" target="_StLfIa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfPa1MEeOdBunZhTRw1w" source="_StLfJK1MEeOdBunZhTRw1w" target="_StLfLa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfPq1MEeOdBunZhTRw1w" source="_StLfKK1MEeOdBunZhTRw1w" target="_StLfM61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StLfP61MEeOdBunZhTRw1w" source="_StLfNq1MEeOdBunZhTRw1w" target="_StLfN61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfQK1MEeOdBunZhTRw1w" source="_StLfMK1MEeOdBunZhTRw1w" target="_StLfN61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StLfQa1MEeOdBunZhTRw1w" source="_StLfN61MEeOdBunZhTRw1w" target="_StLfFa1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_StLfQq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLfDa1MEeOdBunZhTRw1w" name="Return" incoming="_StLfDK1MEeOdBunZhTRw1w" parameter="_StLfCa1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_StLfQ61MEeOdBunZhTRw1w" name="destroy$method$1" specification="_StLfkK1MEeOdBunZhTRw1w" group="_StLfRK1MEeOdBunZhTRw1w" node="_StLfRK1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_StLfRK1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_StLfRa1MEeOdBunZhTRw1w" name="Object$initialization$1" specification="_StLfh61MEeOdBunZhTRw1w" group="_StLfRq1MEeOdBunZhTRw1w" node="_StLfRq1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_StLfRq1MEeOdBunZhTRw1w" name="Body(Object$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_StLfR61MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_StLfSK1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_StLffa1MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfSa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfSq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StLfS61MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_StLffq1MEeOdBunZhTRw1w _StLff61MEeOdBunZhTRw1w" incoming="_StLffa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLfTK1MEeOdBunZhTRw1w" name="Initialization" incoming="_StLfha1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLfTa1MEeOdBunZhTRw1w" name="Set(initializationFlag)">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StLfTq1MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_StLfT61MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_StLfXa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfUK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfUa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_StLfUq1MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_StLfU61MEeOdBunZhTRw1w" name="Write(Object$initializationFlag$1)" structuralFeature="_StLe161MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_StLfVK1MEeOdBunZhTRw1w" name="Write(Object$initializationFlag$1).object" incoming="_StLffq1MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfVa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfVq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_StLfV61MEeOdBunZhTRw1w" name="Write(Object$initializationFlag$1).result" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfWK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfWa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_StLfWq1MEeOdBunZhTRw1w" name="Write(Object$initializationFlag$1).value" incoming="_StLfXa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfW61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfXK1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfXa1MEeOdBunZhTRw1w" source="_StLfT61MEeOdBunZhTRw1w" target="_StLfWq1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StLfXq1MEeOdBunZhTRw1w" name="Read(Object$initializationFlag$1)" structuralFeature="_StLe161MEeOdBunZhTRw1w">
              <object xmi:id="_StLfX61MEeOdBunZhTRw1w" name="Read(Object$initializationFlag$1).object" incoming="_StLff61MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfYK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfYa1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_StLfYq1MEeOdBunZhTRw1w" name="Read(Object$initializationFlag$1).result" outgoing="_StLfgK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfY61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfZK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StLfZa1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_StLfZq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_StLfgK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfZ61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfaK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_StLfaa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_StLfga1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfaq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfa61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StLfbK1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_StLfba1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_StLfgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfbq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfb61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_StLfcK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_StLfca1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_StLfcq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_StLfga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfc61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfdK1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_StLfda1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_StLfhK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfdq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfd61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_StLfeK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_StLfgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfea1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfeq1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_StLfe61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_StLfg61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_StLffK1MEeOdBunZhTRw1w" name="Decision(Test(Object$initializationFlag$1))" outgoing="_StLfha1MEeOdBunZhTRw1w" incoming="_StLfg61MEeOdBunZhTRw1w _StLfhK1MEeOdBunZhTRw1w" decisionInputFlow="_StLfhK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLffa1MEeOdBunZhTRw1w" source="_StLfSK1MEeOdBunZhTRw1w" target="_StLfS61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLffq1MEeOdBunZhTRw1w" source="_StLfS61MEeOdBunZhTRw1w" target="_StLfVK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLff61MEeOdBunZhTRw1w" source="_StLfS61MEeOdBunZhTRw1w" target="_StLfX61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfgK1MEeOdBunZhTRw1w" source="_StLfYq1MEeOdBunZhTRw1w" target="_StLfZq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfga1MEeOdBunZhTRw1w" source="_StLfaa1MEeOdBunZhTRw1w" target="_StLfcq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfgq1MEeOdBunZhTRw1w" source="_StLfba1MEeOdBunZhTRw1w" target="_StLfeK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StLfg61MEeOdBunZhTRw1w" source="_StLfe61MEeOdBunZhTRw1w" target="_StLffK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfhK1MEeOdBunZhTRw1w" source="_StLfda1MEeOdBunZhTRw1w" target="_StLffK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StLfha1MEeOdBunZhTRw1w" source="_StLffK1MEeOdBunZhTRw1w" target="_StLfTK1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_StLfhq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_StLfh61MEeOdBunZhTRw1w" name="Object$initialization$1" visibility="protected" method="_StLfRa1MEeOdBunZhTRw1w"/>
        <ownedOperation xmi:id="_StLfiK1MEeOdBunZhTRw1w" name="init" visibility="public" method="_StLe3a1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_StLfia1MEeOdBunZhTRw1w" name="attr" visibility="package" type="_SrOWgq1MEeOdBunZhTRw1w">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfiq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfi61MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_StLfjK1MEeOdBunZhTRw1w" name="Object" visibility="package" method="_StLfCK1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_StLfja1MEeOdBunZhTRw1w" name="" visibility="package" type="_StLe1q1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfjq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfj61MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_StLfkK1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_StLfQ61MEeOdBunZhTRw1w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_StLfka1MEeOdBunZhTRw1w" name="Bad" visibility="package" group="_StLfp61MEeOdBunZhTRw1w" node="_StLfoa1MEeOdBunZhTRw1w _StLfoq1MEeOdBunZhTRw1w _StLfo61MEeOdBunZhTRw1w _StLfpK1MEeOdBunZhTRw1w _StLfpa1MEeOdBunZhTRw1w _StLfpq1MEeOdBunZhTRw1w _StLfp61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_StLfkq1MEeOdBunZhTRw1w" name="x" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfk61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLflK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLfla1MEeOdBunZhTRw1w" name="y" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLflq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfl61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLfmK1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfma1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfmq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfm61MEeOdBunZhTRw1w" source="_StLfoa1MEeOdBunZhTRw1w" target="_StLfoq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfnK1MEeOdBunZhTRw1w" source="_StLfo61MEeOdBunZhTRw1w" target="_StLfpK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_StLfna1MEeOdBunZhTRw1w" source="_StLfqK1MEeOdBunZhTRw1w" target="_StLfpq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfnq1MEeOdBunZhTRw1w" source="_StLfoq1MEeOdBunZhTRw1w" target="_StLfqq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfn61MEeOdBunZhTRw1w" source="_StLfpK1MEeOdBunZhTRw1w" target="_StLfra1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLfoK1MEeOdBunZhTRw1w" source="_StLfs61MEeOdBunZhTRw1w" target="_StLfpa1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_StLfp61MEeOdBunZhTRw1w" name="Body(Bad)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLfqK1MEeOdBunZhTRw1w" name="ReturnStatement@770a3b5" outgoing="_StLfna1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StLfqa1MEeOdBunZhTRw1w" name="Call(Div)">
              <argument xmi:id="_StLfqq1MEeOdBunZhTRw1w" name="Call(Div).argument(x)" incoming="_StLfnq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfq61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfrK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_StLfra1MEeOdBunZhTRw1w" name="Call(Div).argument(y)" incoming="_StLfn61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfrq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfr61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_StLfsK1MEeOdBunZhTRw1w" name="Call(Div).result(result)" outgoing="_StLftq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfsa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfsq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
            </node>
            <structuredNodeOutput xmi:id="_StLfs61MEeOdBunZhTRw1w" name="ReturnStatement@770a3b5.output" outgoing="_StLfoK1MEeOdBunZhTRw1w" incoming="_StLftq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLftK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfta1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeOutput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StLftq1MEeOdBunZhTRw1w" source="_StLfsK1MEeOdBunZhTRw1w" target="_StLfs61MEeOdBunZhTRw1w"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLfoa1MEeOdBunZhTRw1w" name="Input(x)" outgoing="_StLfm61MEeOdBunZhTRw1w" parameter="_StLfkq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_StLfoq1MEeOdBunZhTRw1w" name="Fork(x)" outgoing="_StLfnq1MEeOdBunZhTRw1w" incoming="_StLfm61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLfo61MEeOdBunZhTRw1w" name="Input(y)" outgoing="_StLfnK1MEeOdBunZhTRw1w" parameter="_StLfla1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_StLfpK1MEeOdBunZhTRw1w" name="Fork(y)" outgoing="_StLfn61MEeOdBunZhTRw1w" incoming="_StLfnK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLfpa1MEeOdBunZhTRw1w" name="Return" incoming="_StLfoK1MEeOdBunZhTRw1w" parameter="_StLfmK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityFinalNode" xmi:id="_StLfpq1MEeOdBunZhTRw1w" name="Final" incoming="_StLfna1MEeOdBunZhTRw1w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_StLft61MEeOdBunZhTRw1w" name="test" group="_StLgA61MEeOdBunZhTRw1w" node="_StLf9K1MEeOdBunZhTRw1w _StLf9a1MEeOdBunZhTRw1w _StLf9q1MEeOdBunZhTRw1w _StLf961MEeOdBunZhTRw1w _StLf-K1MEeOdBunZhTRw1w _StLf-a1MEeOdBunZhTRw1w _StLf-q1MEeOdBunZhTRw1w _StLf-61MEeOdBunZhTRw1w _StLf_K1MEeOdBunZhTRw1w _StLf_a1MEeOdBunZhTRw1w _StLf_q1MEeOdBunZhTRw1w _StLf_61MEeOdBunZhTRw1w _StLgAK1MEeOdBunZhTRw1w _StLgAa1MEeOdBunZhTRw1w _StLgAq1MEeOdBunZhTRw1w _StLgA61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_StLfuK1MEeOdBunZhTRw1w" name="sum" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfua1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfuq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLfu61MEeOdBunZhTRw1w" name="remainder" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfvK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfva1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLfvq1MEeOdBunZhTRw1w" name="bad" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfv61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfwK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLfwa1MEeOdBunZhTRw1w" name="select" visibility="package" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfwq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfw61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLfxK1MEeOdBunZhTRw1w" name="reject" visibility="package" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfxa1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfxq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLfx61MEeOdBunZhTRw1w" name="collect" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfyK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfya1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLfyq1MEeOdBunZhTRw1w" name="iterate" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfy61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfzK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLfza1MEeOdBunZhTRw1w" name="forAll" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLfzq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLfz61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLf0K1MEeOdBunZhTRw1w" name="exists" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLf0a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLf0q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLf061MEeOdBunZhTRw1w" name="one" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLf1K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLf1a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLf1q1MEeOdBunZhTRw1w" name="unique" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLf161MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLf2K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLf2a1MEeOdBunZhTRw1w" name="jack" visibility="package" type="_SrNyJq1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLf2q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLf261MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLf3K1MEeOdBunZhTRw1w" name="joan" visibility="package" type="_SrNyJq1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLf3a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLf3q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLf361MEeOdBunZhTRw1w" name="something" visibility="package" type="_StLeKa1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLf4K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLf4a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_StLf4q1MEeOdBunZhTRw1w" name="obj" visibility="package" type="_StLe1q1MEeOdBunZhTRw1w" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLf461MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLf5K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf5a1MEeOdBunZhTRw1w" source="_StMuIa1MEeOdBunZhTRw1w" target="_StLf9K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf5q1MEeOdBunZhTRw1w" source="_StMuJK1MEeOdBunZhTRw1w" target="_StLf9a1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf561MEeOdBunZhTRw1w" source="_StMuJ61MEeOdBunZhTRw1w" target="_StLf9q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf6K1MEeOdBunZhTRw1w" source="_StMuKq1MEeOdBunZhTRw1w" target="_StLf961MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf6a1MEeOdBunZhTRw1w" source="_StMuLa1MEeOdBunZhTRw1w" target="_StLf-K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf6q1MEeOdBunZhTRw1w" source="_StMuMK1MEeOdBunZhTRw1w" target="_StLf-a1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf661MEeOdBunZhTRw1w" source="_StMuM61MEeOdBunZhTRw1w" target="_StLf-q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf7K1MEeOdBunZhTRw1w" source="_StMuNq1MEeOdBunZhTRw1w" target="_StLf-61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf7a1MEeOdBunZhTRw1w" source="_StMuOa1MEeOdBunZhTRw1w" target="_StLf_K1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf7q1MEeOdBunZhTRw1w" source="_StMuPK1MEeOdBunZhTRw1w" target="_StLf_a1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf761MEeOdBunZhTRw1w" source="_StMuP61MEeOdBunZhTRw1w" target="_StLf_q1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf8K1MEeOdBunZhTRw1w" source="_StMuQq1MEeOdBunZhTRw1w" target="_StLf_61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf8a1MEeOdBunZhTRw1w" source="_StMuRa1MEeOdBunZhTRw1w" target="_StLgAK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf8q1MEeOdBunZhTRw1w" source="_StMuSK1MEeOdBunZhTRw1w" target="_StLgAa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_StLf861MEeOdBunZhTRw1w" source="_StMuS61MEeOdBunZhTRw1w" target="_StLgAq1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_StLgA61MEeOdBunZhTRw1w" name="Body(test)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLgBK1MEeOdBunZhTRw1w" name="ExpressionStatement@4e1e53f3" outgoing="_StMuT61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StLgBa1MEeOdBunZhTRw1w" name="Fork(subtotals)@6456f657" outgoing="_StMuTq1MEeOdBunZhTRw1w _StMuUK1MEeOdBunZhTRw1w" incoming="_StMFPa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLgBq1MEeOdBunZhTRw1w" name="RightHandSide@29199e96">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLgB61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@29199e96">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLgCK1MEeOdBunZhTRw1w" name="SequenceExpressionList@77fb5526#1" outgoing="_StMFOK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StLgCa1MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_StLgCq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StMFOq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLgC61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLgDK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_StLgDa1MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLgDq1MEeOdBunZhTRw1w" name="SequenceExpressionList@77fb5526#2" outgoing="_StMFOa1MEeOdBunZhTRw1w" incoming="_StMFOK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StLgD61MEeOdBunZhTRw1w" name="Value(2)">
                    <result xmi:id="_StLgEK1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_StMFO61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StLgEa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StLgEq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_StLgE61MEeOdBunZhTRw1w" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StLgFK1MEeOdBunZhTRw1w" name="SequenceExpressionList@77fb5526#3" incoming="_StMFOa1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMFMK1MEeOdBunZhTRw1w" name="Value(3)">
                    <result xmi:id="_StMFMa1MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_StMFPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFMq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFM61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_StMFNK1MEeOdBunZhTRw1w" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_StMFNa1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@29199e96.output" outgoing="_StMFPa1MEeOdBunZhTRw1w" incoming="_StMFOq1MEeOdBunZhTRw1w _StMFO61MEeOdBunZhTRw1w _StMFPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFNq1MEeOdBunZhTRw1w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFN61MEeOdBunZhTRw1w" value="3"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_StMFOK1MEeOdBunZhTRw1w" source="_StLgCK1MEeOdBunZhTRw1w" target="_StLgDq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_StMFOa1MEeOdBunZhTRw1w" source="_StLgDq1MEeOdBunZhTRw1w" target="_StLgFK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFOq1MEeOdBunZhTRw1w" source="_StLgCq1MEeOdBunZhTRw1w" target="_StMFNa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFO61MEeOdBunZhTRw1w" source="_StLgEK1MEeOdBunZhTRw1w" target="_StMFNa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFPK1MEeOdBunZhTRw1w" source="_StMFMa1MEeOdBunZhTRw1w" target="_StMFNa1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFPa1MEeOdBunZhTRw1w" source="_StMFNa1MEeOdBunZhTRw1w" target="_StLgBa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFPq1MEeOdBunZhTRw1w" name="ExpressionStatement@1958d267" outgoing="_StMuUa1MEeOdBunZhTRw1w" incoming="_StMuT61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMFP61MEeOdBunZhTRw1w" name="Fork(sum)@2eb7d2a1" outgoing="_StMufa1MEeOdBunZhTRw1w" incoming="_StMFSK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFQK1MEeOdBunZhTRw1w" name="RightHandSide@26655ffd">
              <node xmi:type="uml:ReduceAction" xmi:id="_StMFQa1MEeOdBunZhTRw1w" name="Reduce(+)">
                <collection xmi:id="_StMFQq1MEeOdBunZhTRw1w" name="Reduce(+).collection" incoming="_StMuTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFQ61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFRK1MEeOdBunZhTRw1w" value="*"/>
                </collection>
                <reducer xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                <result xmi:id="_StMFRa1MEeOdBunZhTRw1w" name="Reduce(+).result" outgoing="_StMFSK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFRq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFR61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFSK1MEeOdBunZhTRw1w" source="_StMFRa1MEeOdBunZhTRw1w" target="_StMFP61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFSa1MEeOdBunZhTRw1w" name="ExpressionStatement@1efa5e53" outgoing="_StMuUq1MEeOdBunZhTRw1w" incoming="_StMuUa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMFSq1MEeOdBunZhTRw1w" name="Fork(remainder)@4ea5b4cd" outgoing="_StMufq1MEeOdBunZhTRw1w" incoming="_StMFU61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFS61MEeOdBunZhTRw1w" name="RightHandSide@61012711">
              <node xmi:type="uml:ReduceAction" xmi:id="_StMFTK1MEeOdBunZhTRw1w" name="Reduce(Mod)" isOrdered="true">
                <collection xmi:id="_StMFTa1MEeOdBunZhTRw1w" name="Reduce(Mod).collection" incoming="_StMuUK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFTq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFT61MEeOdBunZhTRw1w" value="*"/>
                </collection>
                <reducer xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                <result xmi:id="_StMFUK1MEeOdBunZhTRw1w" name="Reduce(Mod).result" outgoing="_StMFU61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFUa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFUq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFU61MEeOdBunZhTRw1w" source="_StMFUK1MEeOdBunZhTRw1w" target="_StMFSq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFVK1MEeOdBunZhTRw1w" name="ExpressionStatement@477247e6" outgoing="_StMuU61MEeOdBunZhTRw1w" incoming="_StMuUq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMFVa1MEeOdBunZhTRw1w" name="Fork(bad)@352046ad" outgoing="_StMuf61MEeOdBunZhTRw1w" incoming="_StMFgq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFVq1MEeOdBunZhTRw1w" name="RightHandSide@5a00231a">
              <node xmi:type="uml:ReduceAction" xmi:id="_StMFV61MEeOdBunZhTRw1w" name="Reduce(Bad)" reducer="_StLfka1MEeOdBunZhTRw1w">
                <collection xmi:id="_StMFWK1MEeOdBunZhTRw1w" name="Reduce(Bad).collection" incoming="_StMFga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFWa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFWq1MEeOdBunZhTRw1w" value="*"/>
                </collection>
                <result xmi:id="_StMFW61MEeOdBunZhTRw1w" name="Reduce(Bad).result" outgoing="_StMFgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFXK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFXa1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFXq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@7b28b3a0">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFX61MEeOdBunZhTRw1w" name="SequenceExpressionList@46500cd3#1" outgoing="_StMFeq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMFYK1MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_StMFYa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StMFfa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFYq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFY61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_StMFZK1MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFZa1MEeOdBunZhTRw1w" name="SequenceExpressionList@46500cd3#2" outgoing="_StMFe61MEeOdBunZhTRw1w" incoming="_StMFeq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMFZq1MEeOdBunZhTRw1w" name="Value(0)">
                    <result xmi:id="_StMFZ61MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_StMFfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFaK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFaa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_StMFaq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFa61MEeOdBunZhTRw1w" name="SequenceExpressionList@46500cd3#3" outgoing="_StMFfK1MEeOdBunZhTRw1w" incoming="_StMFe61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMFbK1MEeOdBunZhTRw1w" name="Value(4)">
                    <result xmi:id="_StMFba1MEeOdBunZhTRw1w" name="Value(4).result" outgoing="_StMFf61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFbq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFb61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_StMFcK1MEeOdBunZhTRw1w" value="4">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFca1MEeOdBunZhTRw1w" name="SequenceExpressionList@46500cd3#4" incoming="_StMFfK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMFcq1MEeOdBunZhTRw1w" name="Value(2)">
                    <result xmi:id="_StMFc61MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_StMFgK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFdK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFda1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_StMFdq1MEeOdBunZhTRw1w" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_StMFd61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@7b28b3a0.output" outgoing="_StMFga1MEeOdBunZhTRw1w" incoming="_StMFfa1MEeOdBunZhTRw1w _StMFfq1MEeOdBunZhTRw1w _StMFf61MEeOdBunZhTRw1w _StMFgK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFeK1MEeOdBunZhTRw1w" value="4"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFea1MEeOdBunZhTRw1w" value="4"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_StMFeq1MEeOdBunZhTRw1w" source="_StMFX61MEeOdBunZhTRw1w" target="_StMFZa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_StMFe61MEeOdBunZhTRw1w" source="_StMFZa1MEeOdBunZhTRw1w" target="_StMFa61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_StMFfK1MEeOdBunZhTRw1w" source="_StMFa61MEeOdBunZhTRw1w" target="_StMFca1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFfa1MEeOdBunZhTRw1w" source="_StMFYa1MEeOdBunZhTRw1w" target="_StMFd61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFfq1MEeOdBunZhTRw1w" source="_StMFZ61MEeOdBunZhTRw1w" target="_StMFd61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFf61MEeOdBunZhTRw1w" source="_StMFba1MEeOdBunZhTRw1w" target="_StMFd61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFgK1MEeOdBunZhTRw1w" source="_StMFc61MEeOdBunZhTRw1w" target="_StMFd61MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFga1MEeOdBunZhTRw1w" source="_StMFd61MEeOdBunZhTRw1w" target="_StMFWK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFgq1MEeOdBunZhTRw1w" source="_StMFW61MEeOdBunZhTRw1w" target="_StMFVa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFg61MEeOdBunZhTRw1w" name="ExpressionStatement@2c5069d4" outgoing="_StMuVK1MEeOdBunZhTRw1w" incoming="_StMuU61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMFhK1MEeOdBunZhTRw1w" name="Fork(e1)@4bcb5109" outgoing="_StMuX61MEeOdBunZhTRw1w" incoming="_StMFkq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFha1MEeOdBunZhTRw1w" name="RightHandSide@11354cbf">
              <node xmi:type="uml:CallOperationAction" xmi:id="_StMFhq1MEeOdBunZhTRw1w" name="Call(Employee)" operation="_SrOWfa1MEeOdBunZhTRw1w">
                <result xmi:id="_StMFh61MEeOdBunZhTRw1w" name="Call(Employee).result()" outgoing="_StMFkq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFiK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFia1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_StMFiq1MEeOdBunZhTRw1w" name="Call(Employee).target" incoming="_StMFka1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFi61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFjK1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_StMFja1MEeOdBunZhTRw1w" name="Create(Employee)" classifier="_SrNyJq1MEeOdBunZhTRw1w">
                <result xmi:id="_StMFjq1MEeOdBunZhTRw1w" name="Create(Employee).result" outgoing="_StMFka1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFj61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFkK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFka1MEeOdBunZhTRw1w" source="_StMFjq1MEeOdBunZhTRw1w" target="_StMFiq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFkq1MEeOdBunZhTRw1w" source="_StMFh61MEeOdBunZhTRw1w" target="_StMFhK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFk61MEeOdBunZhTRw1w" name="ExpressionStatement@93d2feb" outgoing="_StMuVq1MEeOdBunZhTRw1w" incoming="_StMuVK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMFlK1MEeOdBunZhTRw1w" name="Fork(e2)@6d850967" outgoing="_StMuVa1MEeOdBunZhTRw1w _StMuV61MEeOdBunZhTRw1w _StMuWa1MEeOdBunZhTRw1w _StMuW61MEeOdBunZhTRw1w _StMuXa1MEeOdBunZhTRw1w _StMuYK1MEeOdBunZhTRw1w" incoming="_StMFoq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFla1MEeOdBunZhTRw1w" name="RightHandSide@392c815d">
              <node xmi:type="uml:CallOperationAction" xmi:id="_StMFlq1MEeOdBunZhTRw1w" name="Call(Employee)" operation="_SrOWfa1MEeOdBunZhTRw1w">
                <result xmi:id="_StMFl61MEeOdBunZhTRw1w" name="Call(Employee).result()" outgoing="_StMFoq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFmK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFma1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_StMFmq1MEeOdBunZhTRw1w" name="Call(Employee).target" incoming="_StMFoa1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFm61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFnK1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_StMFna1MEeOdBunZhTRw1w" name="Create(Employee)" classifier="_SrNyJq1MEeOdBunZhTRw1w">
                <result xmi:id="_StMFnq1MEeOdBunZhTRw1w" name="Create(Employee).result" outgoing="_StMFoa1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFn61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFoK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFoa1MEeOdBunZhTRw1w" source="_StMFnq1MEeOdBunZhTRw1w" target="_StMFmq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFoq1MEeOdBunZhTRw1w" source="_StMFl61MEeOdBunZhTRw1w" target="_StMFlK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFo61MEeOdBunZhTRw1w" name="ExpressionStatement@51a10ec3" outgoing="_StMuWK1MEeOdBunZhTRw1w" incoming="_StMuVq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFpK1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@6027288c)" incoming="_StMFxa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_StMFpa1MEeOdBunZhTRw1w" name="Clear(name)" structuralFeature="_SrNyMK1MEeOdBunZhTRw1w">
              <object xmi:id="_StMFpq1MEeOdBunZhTRw1w" name="Clear(name).object" incoming="_StMuVa1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFp61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFqK1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_StMFqa1MEeOdBunZhTRw1w" name="Clear(name).result" outgoing="_StMFw61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFqq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFq61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StMFrK1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@6027288c)" outgoing="_StMFwq1MEeOdBunZhTRw1w" incoming="_StMFxK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFra1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::name)">
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_StMFrq1MEeOdBunZhTRw1w" name="Write(name)" structuralFeature="_SrNyMK1MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_StMFr61MEeOdBunZhTRw1w" name="Write(name).object" incoming="_StMFw61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFsK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFsa1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_StMFsq1MEeOdBunZhTRw1w" name="Write(name).result" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFs61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFtK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_StMFta1MEeOdBunZhTRw1w" name="Write(name).value" incoming="_StMFu61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFtq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFt61MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <structuredNodeInput xmi:id="_StMFuK1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::name).input(Expressions_Sequence_Expansion_Reduction::Employee::name)" outgoing="_StMFu61MEeOdBunZhTRw1w" incoming="_StMFwq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFua1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFuq1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFu61MEeOdBunZhTRw1w" source="_StMFuK1MEeOdBunZhTRw1w" target="_StMFta1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFvK1MEeOdBunZhTRw1w" name="RightHandSide@b523a2f" outgoing="_StMFxa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMFva1MEeOdBunZhTRw1w" name="Value(&quot;Jack&quot;)">
                <result xmi:id="_StMFvq1MEeOdBunZhTRw1w" name="Value(&quot;Jack&quot;).result" outgoing="_StMFxK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFv61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFwK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_StMFwa1MEeOdBunZhTRw1w" value="Jack">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFwq1MEeOdBunZhTRw1w" source="_StMFrK1MEeOdBunZhTRw1w" target="_StMFuK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFw61MEeOdBunZhTRw1w" source="_StMFqa1MEeOdBunZhTRw1w" target="_StMFr61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMFxK1MEeOdBunZhTRw1w" source="_StMFvq1MEeOdBunZhTRw1w" target="_StMFrK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StMFxa1MEeOdBunZhTRw1w" source="_StMFvK1MEeOdBunZhTRw1w" target="_StMFpK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFxq1MEeOdBunZhTRw1w" name="ExpressionStatement@5a552ff6" outgoing="_StMuWq1MEeOdBunZhTRw1w" incoming="_StMuWK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMFx61MEeOdBunZhTRw1w" name="Expression(LeftHandSide@7ac18c84)" incoming="_StMF6K1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_StMFyK1MEeOdBunZhTRw1w" name="Clear(age)" structuralFeature="_SrNyKq1MEeOdBunZhTRw1w">
              <object xmi:id="_StMFya1MEeOdBunZhTRw1w" name="Clear(age).object" incoming="_StMuV61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFyq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFy61MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_StMFzK1MEeOdBunZhTRw1w" name="Clear(age).result" outgoing="_StMF5q1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMFza1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMFzq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StMFz61MEeOdBunZhTRw1w" name="Fork(LeftHandSide@7ac18c84)" outgoing="_StMF5a1MEeOdBunZhTRw1w" incoming="_StMF561MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMF0K1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::age)">
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_StMF0a1MEeOdBunZhTRw1w" name="Write(age)" structuralFeature="_SrNyKq1MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_StMF0q1MEeOdBunZhTRw1w" name="Write(age).object" incoming="_StMF5q1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMF061MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMF1K1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_StMF1a1MEeOdBunZhTRw1w" name="Write(age).result" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMF1q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMF161MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_StMF2K1MEeOdBunZhTRw1w" name="Write(age).value" incoming="_StMF3q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMF2a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMF2q1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <structuredNodeInput xmi:id="_StMF261MEeOdBunZhTRw1w" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::age).input(Expressions_Sequence_Expansion_Reduction::Employee::age)" outgoing="_StMF3q1MEeOdBunZhTRw1w" incoming="_StMF5a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMF3K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMF3a1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMF3q1MEeOdBunZhTRw1w" source="_StMF261MEeOdBunZhTRw1w" target="_StMF2K1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMF361MEeOdBunZhTRw1w" name="RightHandSide@3162b662" outgoing="_StMF6K1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMF4K1MEeOdBunZhTRw1w" name="Value(30)">
                <result xmi:id="_StMF4a1MEeOdBunZhTRw1w" name="Value(30).result" outgoing="_StMF561MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMF4q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMF461MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_StMF5K1MEeOdBunZhTRw1w" value="30">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMF5a1MEeOdBunZhTRw1w" source="_StMFz61MEeOdBunZhTRw1w" target="_StMF261MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMF5q1MEeOdBunZhTRw1w" source="_StMFzK1MEeOdBunZhTRw1w" target="_StMF0q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMF561MEeOdBunZhTRw1w" source="_StMF4a1MEeOdBunZhTRw1w" target="_StMFz61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StMF6K1MEeOdBunZhTRw1w" source="_StMF361MEeOdBunZhTRw1w" target="_StMFx61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMF6a1MEeOdBunZhTRw1w" name="ExpressionStatement@787b712b" outgoing="_StMuXK1MEeOdBunZhTRw1w" incoming="_StMuWq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMF6q1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@420094f1)" incoming="_StMGC61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_StMF661MEeOdBunZhTRw1w" name="Clear(isMarried)" structuralFeature="_SrNyLa1MEeOdBunZhTRw1w">
              <object xmi:id="_StMF7K1MEeOdBunZhTRw1w" name="Clear(isMarried).object" incoming="_StMuWa1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMF7a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMF7q1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_StMF761MEeOdBunZhTRw1w" name="Clear(isMarried).result" outgoing="_StMGCa1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMF8K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMF8a1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StMF8q1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@420094f1)" outgoing="_StMGCK1MEeOdBunZhTRw1w" incoming="_StMGCq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMF861MEeOdBunZhTRw1w" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::isMarried)">
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_StMF9K1MEeOdBunZhTRw1w" name="Write(isMarried)" structuralFeature="_SrNyLa1MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_StMF9a1MEeOdBunZhTRw1w" name="Write(isMarried).object" incoming="_StMGCa1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMF9q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMF961MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_StMF-K1MEeOdBunZhTRw1w" name="Write(isMarried).result" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMF-a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMF-q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_StMF-61MEeOdBunZhTRw1w" name="Write(isMarried).value" incoming="_StMGAa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMF_K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMF_a1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <structuredNodeInput xmi:id="_StMF_q1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::isMarried).input(Expressions_Sequence_Expansion_Reduction::Employee::isMarried)" outgoing="_StMGAa1MEeOdBunZhTRw1w" incoming="_StMGCK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMF_61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGAK1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGAa1MEeOdBunZhTRw1w" source="_StMF_q1MEeOdBunZhTRw1w" target="_StMF-61MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGAq1MEeOdBunZhTRw1w" name="RightHandSide@9ca7b80" outgoing="_StMGC61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMGA61MEeOdBunZhTRw1w" name="Value(false)">
                <result xmi:id="_StMGBK1MEeOdBunZhTRw1w" name="Value(false).result" outgoing="_StMGCq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGBa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGBq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_StMGB61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGCK1MEeOdBunZhTRw1w" source="_StMF8q1MEeOdBunZhTRw1w" target="_StMF_q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGCa1MEeOdBunZhTRw1w" source="_StMF761MEeOdBunZhTRw1w" target="_StMF9a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGCq1MEeOdBunZhTRw1w" source="_StMGBK1MEeOdBunZhTRw1w" target="_StMF8q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StMGC61MEeOdBunZhTRw1w" source="_StMGAq1MEeOdBunZhTRw1w" target="_StMF6q1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGDK1MEeOdBunZhTRw1w" name="ExpressionStatement@42fbf013" outgoing="_StMuXq1MEeOdBunZhTRw1w" incoming="_StMuXK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGDa1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@3fe05aaa)" incoming="_StMGLq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_StMGDq1MEeOdBunZhTRw1w" name="Clear(title)" structuralFeature="_SrNyM61MEeOdBunZhTRw1w">
              <object xmi:id="_StMGD61MEeOdBunZhTRw1w" name="Clear(title).object" incoming="_StMuW61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGEK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGEa1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_StMGEq1MEeOdBunZhTRw1w" name="Clear(title).result" outgoing="_StMGLK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGE61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGFK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StMGFa1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@3fe05aaa)" outgoing="_StMGK61MEeOdBunZhTRw1w" incoming="_StMGLa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGFq1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::title)">
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_StMGF61MEeOdBunZhTRw1w" name="Write(title)" structuralFeature="_SrNyM61MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_StMGGK1MEeOdBunZhTRw1w" name="Write(title).object" incoming="_StMGLK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGGa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGGq1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_StMGG61MEeOdBunZhTRw1w" name="Write(title).result" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGHK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGHa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_StMGHq1MEeOdBunZhTRw1w" name="Write(title).value" incoming="_StMGJK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGH61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGIK1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <structuredNodeInput xmi:id="_StMGIa1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::title).input(Expressions_Sequence_Expansion_Reduction::Employee::title)" outgoing="_StMGJK1MEeOdBunZhTRw1w" incoming="_StMGK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGIq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGI61MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGJK1MEeOdBunZhTRw1w" source="_StMGIa1MEeOdBunZhTRw1w" target="_StMGHq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGJa1MEeOdBunZhTRw1w" name="RightHandSide@90eed0c" outgoing="_StMGLq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMGJq1MEeOdBunZhTRw1w" name="Value(&quot;Director&quot;)">
                <result xmi:id="_StMGJ61MEeOdBunZhTRw1w" name="Value(&quot;Director&quot;).result" outgoing="_StMGLa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGKK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGKa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_StMGKq1MEeOdBunZhTRw1w" value="Director">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGK61MEeOdBunZhTRw1w" source="_StMGFa1MEeOdBunZhTRw1w" target="_StMGIa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGLK1MEeOdBunZhTRw1w" source="_StMGEq1MEeOdBunZhTRw1w" target="_StMGGK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGLa1MEeOdBunZhTRw1w" source="_StMGJ61MEeOdBunZhTRw1w" target="_StMGFa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StMGLq1MEeOdBunZhTRw1w" source="_StMGJa1MEeOdBunZhTRw1w" target="_StMGDa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGL61MEeOdBunZhTRw1w" name="ExpressionStatement@6d58f86a" outgoing="_StMuYa1MEeOdBunZhTRw1w" incoming="_StMuXq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGMK1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@f4da8a0)" incoming="_StMGUa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_StMGMa1MEeOdBunZhTRw1w" name="Clear(id)" structuralFeature="_SrNyNq1MEeOdBunZhTRw1w">
              <object xmi:id="_StMGMq1MEeOdBunZhTRw1w" name="Clear(id).object" incoming="_StMuXa1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGM61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGNK1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_StMGNa1MEeOdBunZhTRw1w" name="Clear(id).result" outgoing="_StMGT61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGNq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGN61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StMGOK1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@f4da8a0)" outgoing="_StMGTq1MEeOdBunZhTRw1w" incoming="_StMGUK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGOa1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::id)">
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_StMGOq1MEeOdBunZhTRw1w" name="Write(id)" structuralFeature="_SrNyNq1MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_StMGO61MEeOdBunZhTRw1w" name="Write(id).object" incoming="_StMGT61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGPK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGPa1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_StMGPq1MEeOdBunZhTRw1w" name="Write(id).result" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGP61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGQK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_StMGQa1MEeOdBunZhTRw1w" name="Write(id).value" incoming="_StMGR61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGQq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGQ61MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <structuredNodeInput xmi:id="_StMGRK1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Employee::id).input(Expressions_Sequence_Expansion_Reduction::Employee::id)" outgoing="_StMGR61MEeOdBunZhTRw1w" incoming="_StMGTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGRa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGRq1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGR61MEeOdBunZhTRw1w" source="_StMGRK1MEeOdBunZhTRw1w" target="_StMGQa1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGSK1MEeOdBunZhTRw1w" name="RightHandSide@4afd9d24" outgoing="_StMGUa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMGSa1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_StMGSq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StMGUK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGS61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGTK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_StMGTa1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGTq1MEeOdBunZhTRw1w" source="_StMGOK1MEeOdBunZhTRw1w" target="_StMGRK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGT61MEeOdBunZhTRw1w" source="_StMGNa1MEeOdBunZhTRw1w" target="_StMGO61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGUK1MEeOdBunZhTRw1w" source="_StMGSq1MEeOdBunZhTRw1w" target="_StMGOK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StMGUa1MEeOdBunZhTRw1w" source="_StMGSK1MEeOdBunZhTRw1w" target="_StMGMK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGUq1MEeOdBunZhTRw1w" name="ExpressionStatement@31e4b362" outgoing="_StMuY61MEeOdBunZhTRw1w" incoming="_StMuYa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMGU61MEeOdBunZhTRw1w" name="Fork(employees)@686cc6cb" outgoing="_StMuYq1MEeOdBunZhTRw1w _StMuZK1MEeOdBunZhTRw1w _StMuZq1MEeOdBunZhTRw1w _StMuaK1MEeOdBunZhTRw1w _StMuaq1MEeOdBunZhTRw1w _StMubK1MEeOdBunZhTRw1w _StMubq1MEeOdBunZhTRw1w _StMucK1MEeOdBunZhTRw1w" incoming="_StMGYK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGVK1MEeOdBunZhTRw1w" name="RightHandSide@1dbd0085">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGVa1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@1dbd0085">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGVq1MEeOdBunZhTRw1w" name="SequenceExpressionList@636d2b03#1" outgoing="_StMGXa1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:MergeNode" xmi:id="_StMGV61MEeOdBunZhTRw1w" name="Merge(Fork(e1)@4bcb5109)" outgoing="_StMGXq1MEeOdBunZhTRw1w" incoming="_StMuX61MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGWK1MEeOdBunZhTRw1w" name="SequenceExpressionList@636d2b03#2" incoming="_StMGXa1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:MergeNode" xmi:id="_StMGWa1MEeOdBunZhTRw1w" name="Merge(Fork(e2)@6d850967)" outgoing="_StMGX61MEeOdBunZhTRw1w" incoming="_StMuYK1MEeOdBunZhTRw1w"/>
                </node>
                <structuredNodeOutput xmi:id="_StMGWq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@1dbd0085.output" outgoing="_StMGYK1MEeOdBunZhTRw1w" incoming="_StMGXq1MEeOdBunZhTRw1w _StMGX61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGW61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGXK1MEeOdBunZhTRw1w" value="2"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_StMGXa1MEeOdBunZhTRw1w" source="_StMGVq1MEeOdBunZhTRw1w" target="_StMGWK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGXq1MEeOdBunZhTRw1w" source="_StMGV61MEeOdBunZhTRw1w" target="_StMGWq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGX61MEeOdBunZhTRw1w" source="_StMGWa1MEeOdBunZhTRw1w" target="_StMGWq1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGYK1MEeOdBunZhTRw1w" source="_StMGWq1MEeOdBunZhTRw1w" target="_StMGU61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGYa1MEeOdBunZhTRw1w" name="ExpressionStatement@76961f1f" outgoing="_StMuZa1MEeOdBunZhTRw1w" incoming="_StMuY61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMGYq1MEeOdBunZhTRw1w" name="Fork(select)@608d8ce4" outgoing="_StMugK1MEeOdBunZhTRw1w" incoming="_StMGi61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGY61MEeOdBunZhTRw1w" name="RightHandSide@6a972b98">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_StMGZK1MEeOdBunZhTRw1w" name="SelectOrRejectExpression@6a972b98" mode="parallel" outputElement="_StMGiq1MEeOdBunZhTRw1w" inputElement="_StMGia1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ForkNode" xmi:id="_StMGZa1MEeOdBunZhTRw1w" name="Fork(e)" outgoing="_StMGf61MEeOdBunZhTRw1w _StMGg61MEeOdBunZhTRw1w" incoming="_StMGh61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StMGZq1MEeOdBunZhTRw1w" name="Read(age)" structuralFeature="_SrNyKq1MEeOdBunZhTRw1w">
                  <object xmi:id="_StMGZ61MEeOdBunZhTRw1w" name="Read(age).object" incoming="_StMGgK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGaK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGaa1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_StMGaq1MEeOdBunZhTRw1w" name="Read(age).result" outgoing="_StMGga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGa61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGbK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_StMGba1MEeOdBunZhTRw1w" name="Fork(Fork(e))" outgoing="_StMGgK1MEeOdBunZhTRw1w" incoming="_StMGf61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMGbq1MEeOdBunZhTRw1w" name="Value(50)">
                  <result xmi:id="_StMGb61MEeOdBunZhTRw1w" name="Value(50).result" outgoing="_StMGgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGcK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGca1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_StMGcq1MEeOdBunZhTRw1w" value="50">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_StMGc61MEeOdBunZhTRw1w" name="Call(>)">
                  <argument xmi:id="_StMGdK1MEeOdBunZhTRw1w" name="Call(>).argument(x)" incoming="_StMGga1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGda1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGdq1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_StMGd61MEeOdBunZhTRw1w" name="Call(>).argument(y)" incoming="_StMGgq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGeK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGea1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_StMGeq1MEeOdBunZhTRw1w" name="Call(>).result(result)" outgoing="_StMGhK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGe61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGfK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
                </node>
                <node xmi:type="uml:MergeNode" xmi:id="_StMGfa1MEeOdBunZhTRw1w" name="Merge(select@6a972b98)" outgoing="_StMGiK1MEeOdBunZhTRw1w" incoming="_StMGha1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_StMGfq1MEeOdBunZhTRw1w" name="Decision(select@6a972b98)" outgoing="_StMGha1MEeOdBunZhTRw1w" incoming="_StMGg61MEeOdBunZhTRw1w _StMGhK1MEeOdBunZhTRw1w" decisionInputFlow="_StMGhK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGf61MEeOdBunZhTRw1w" source="_StMGZa1MEeOdBunZhTRw1w" target="_StMGba1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGgK1MEeOdBunZhTRw1w" source="_StMGba1MEeOdBunZhTRw1w" target="_StMGZ61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGga1MEeOdBunZhTRw1w" source="_StMGaq1MEeOdBunZhTRw1w" target="_StMGdK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGgq1MEeOdBunZhTRw1w" source="_StMGb61MEeOdBunZhTRw1w" target="_StMGd61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGg61MEeOdBunZhTRw1w" source="_StMGZa1MEeOdBunZhTRw1w" target="_StMGfq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGhK1MEeOdBunZhTRw1w" source="_StMGeq1MEeOdBunZhTRw1w" target="_StMGfq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGha1MEeOdBunZhTRw1w" source="_StMGfq1MEeOdBunZhTRw1w" target="_StMGfa1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_StMGhq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGh61MEeOdBunZhTRw1w" source="_StMGia1MEeOdBunZhTRw1w" target="_StMGZa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGiK1MEeOdBunZhTRw1w" source="_StMGfa1MEeOdBunZhTRw1w" target="_StMGiq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMGia1MEeOdBunZhTRw1w" name="SelectOrRejectExpression@6a972b98.inputElement" outgoing="_StMGh61MEeOdBunZhTRw1w" incoming="_StMuYq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsInput="_StMGZK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMGiq1MEeOdBunZhTRw1w" name="SelectOrRejectExpression@6a972b98.outputElement" outgoing="_StMGi61MEeOdBunZhTRw1w" incoming="_StMGiK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsOutput="_StMGZK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGi61MEeOdBunZhTRw1w" source="_StMGiq1MEeOdBunZhTRw1w" target="_StMGYq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGjK1MEeOdBunZhTRw1w" name="ExpressionStatement@18942c42" outgoing="_StMuZ61MEeOdBunZhTRw1w" incoming="_StMuZa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMGja1MEeOdBunZhTRw1w" name="Fork(reject)@344ae0f6" outgoing="_StMuga1MEeOdBunZhTRw1w" incoming="_StMGpa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGjq1MEeOdBunZhTRw1w" name="RightHandSide@5803f6fa">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_StMGj61MEeOdBunZhTRw1w" name="SelectOrRejectExpression@5803f6fa" mode="parallel" outputElement="_StMGpK1MEeOdBunZhTRw1w" inputElement="_StMGo61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ForkNode" xmi:id="_StMGkK1MEeOdBunZhTRw1w" name="Fork(e)" outgoing="_StMGm61MEeOdBunZhTRw1w _StMGna1MEeOdBunZhTRw1w" incoming="_StMGoa1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StMGka1MEeOdBunZhTRw1w" name="Read(isMarried)" structuralFeature="_SrNyLa1MEeOdBunZhTRw1w">
                  <object xmi:id="_StMGkq1MEeOdBunZhTRw1w" name="Read(isMarried).object" incoming="_StMGnK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGk61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGlK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_StMGla1MEeOdBunZhTRw1w" name="Read(isMarried).result" outgoing="_StMGnq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGlq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGl61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_StMGmK1MEeOdBunZhTRw1w" name="Fork(Fork(e))" outgoing="_StMGnK1MEeOdBunZhTRw1w" incoming="_StMGm61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_StMGma1MEeOdBunZhTRw1w" name="Merge(reject@5803f6fa)" outgoing="_StMGoq1MEeOdBunZhTRw1w" incoming="_StMGn61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_StMGmq1MEeOdBunZhTRw1w" name="Decision(reject@5803f6fa)" outgoing="_StMGn61MEeOdBunZhTRw1w" incoming="_StMGna1MEeOdBunZhTRw1w _StMGnq1MEeOdBunZhTRw1w" decisionInputFlow="_StMGnq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGm61MEeOdBunZhTRw1w" source="_StMGkK1MEeOdBunZhTRw1w" target="_StMGmK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGnK1MEeOdBunZhTRw1w" source="_StMGmK1MEeOdBunZhTRw1w" target="_StMGkq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGna1MEeOdBunZhTRw1w" source="_StMGkK1MEeOdBunZhTRw1w" target="_StMGmq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGnq1MEeOdBunZhTRw1w" source="_StMGla1MEeOdBunZhTRw1w" target="_StMGmq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGn61MEeOdBunZhTRw1w" source="_StMGmq1MEeOdBunZhTRw1w" target="_StMGma1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_StMGoK1MEeOdBunZhTRw1w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGoa1MEeOdBunZhTRw1w" source="_StMGo61MEeOdBunZhTRw1w" target="_StMGkK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGoq1MEeOdBunZhTRw1w" source="_StMGma1MEeOdBunZhTRw1w" target="_StMGpK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMGo61MEeOdBunZhTRw1w" name="SelectOrRejectExpression@5803f6fa.inputElement" outgoing="_StMGoa1MEeOdBunZhTRw1w" incoming="_StMuZK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsInput="_StMGj61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMGpK1MEeOdBunZhTRw1w" name="SelectOrRejectExpression@5803f6fa.outputElement" outgoing="_StMGpa1MEeOdBunZhTRw1w" incoming="_StMGoq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsOutput="_StMGj61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGpa1MEeOdBunZhTRw1w" source="_StMGpK1MEeOdBunZhTRw1w" target="_StMGja1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGpq1MEeOdBunZhTRw1w" name="ExpressionStatement@533a0b63" outgoing="_StMuaa1MEeOdBunZhTRw1w" incoming="_StMuZ61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMGp61MEeOdBunZhTRw1w" name="Fork(collect)@76a4cb85" outgoing="_StMugq1MEeOdBunZhTRw1w" incoming="_StMGua1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGqK1MEeOdBunZhTRw1w" name="RightHandSide@7da056b2">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_StMGqa1MEeOdBunZhTRw1w" name="CollectOrIterateExpression@7da056b2" mode="parallel" outputElement="_StMGuK1MEeOdBunZhTRw1w" inputElement="_StMGt61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ForkNode" xmi:id="_StMGqq1MEeOdBunZhTRw1w" name="Fork(a)" outgoing="_StMGs61MEeOdBunZhTRw1w" incoming="_StMGta1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StMGq61MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SrNyMK1MEeOdBunZhTRw1w">
                  <object xmi:id="_StMGrK1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_StMGtK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGra1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGrq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_StMGr61MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_StMGtq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGsK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGsa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_StMGsq1MEeOdBunZhTRw1w" name="Fork(Fork(a))" outgoing="_StMGtK1MEeOdBunZhTRw1w" incoming="_StMGs61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGs61MEeOdBunZhTRw1w" source="_StMGqq1MEeOdBunZhTRw1w" target="_StMGsq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGtK1MEeOdBunZhTRw1w" source="_StMGsq1MEeOdBunZhTRw1w" target="_StMGrK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGta1MEeOdBunZhTRw1w" source="_StMGt61MEeOdBunZhTRw1w" target="_StMGqq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGtq1MEeOdBunZhTRw1w" source="_StMGr61MEeOdBunZhTRw1w" target="_StMGuK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMGt61MEeOdBunZhTRw1w" name="CollectOrIterateExpression@7da056b2.inputElement" outgoing="_StMGta1MEeOdBunZhTRw1w" incoming="_StMuZq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsInput="_StMGqa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMGuK1MEeOdBunZhTRw1w" name="CollectOrIterateExpression@7da056b2.outputElement" outgoing="_StMGua1MEeOdBunZhTRw1w" incoming="_StMGtq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsOutput="_StMGqa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGua1MEeOdBunZhTRw1w" source="_StMGuK1MEeOdBunZhTRw1w" target="_StMGp61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGuq1MEeOdBunZhTRw1w" name="ExpressionStatement@211d5e99" outgoing="_StMua61MEeOdBunZhTRw1w" incoming="_StMuaa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMGu61MEeOdBunZhTRw1w" name="Fork(iterate)@4240fc6" outgoing="_StMug61MEeOdBunZhTRw1w" incoming="_StMGza1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGvK1MEeOdBunZhTRw1w" name="RightHandSide@2bcc7fa1">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_StMGva1MEeOdBunZhTRw1w" name="CollectOrIterateExpression@2bcc7fa1" outputElement="_StMGzK1MEeOdBunZhTRw1w" inputElement="_StMGy61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ForkNode" xmi:id="_StMGvq1MEeOdBunZhTRw1w" name="Fork(e)" outgoing="_StMGx61MEeOdBunZhTRw1w" incoming="_StMGya1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StMGv61MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SrNyMK1MEeOdBunZhTRw1w">
                  <object xmi:id="_StMGwK1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_StMGyK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGwa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGwq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_StMGw61MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_StMGyq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMGxK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMGxa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_StMGxq1MEeOdBunZhTRw1w" name="Fork(Fork(e))" outgoing="_StMGyK1MEeOdBunZhTRw1w" incoming="_StMGx61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGx61MEeOdBunZhTRw1w" source="_StMGvq1MEeOdBunZhTRw1w" target="_StMGxq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGyK1MEeOdBunZhTRw1w" source="_StMGxq1MEeOdBunZhTRw1w" target="_StMGwK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGya1MEeOdBunZhTRw1w" source="_StMGy61MEeOdBunZhTRw1w" target="_StMGvq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGyq1MEeOdBunZhTRw1w" source="_StMGw61MEeOdBunZhTRw1w" target="_StMGzK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMGy61MEeOdBunZhTRw1w" name="CollectOrIterateExpression@2bcc7fa1.inputElement" outgoing="_StMGya1MEeOdBunZhTRw1w" incoming="_StMuaK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsInput="_StMGva1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMGzK1MEeOdBunZhTRw1w" name="CollectOrIterateExpression@2bcc7fa1.outputElement" outgoing="_StMGza1MEeOdBunZhTRw1w" incoming="_StMGyq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsOutput="_StMGva1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMGza1MEeOdBunZhTRw1w" source="_StMGzK1MEeOdBunZhTRw1w" target="_StMGu61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMGzq1MEeOdBunZhTRw1w" name="ExpressionStatement@723d01d4" outgoing="_StMuba1MEeOdBunZhTRw1w" incoming="_StMua61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMGz61MEeOdBunZhTRw1w" name="Fork(forAll)@2f0a78fd" outgoing="_StMuhK1MEeOdBunZhTRw1w" incoming="_StMsSK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMG0K1MEeOdBunZhTRw1w" name="RightHandSide@370e6896">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_StMG0a1MEeOdBunZhTRw1w" name="ForAllOrExistsOrOneExpression@370e6896" mode="parallel" outputElement="_StMG_61MEeOdBunZhTRw1w" inputElement="_StMG_q1MEeOdBunZhTRw1w">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMG0q1MEeOdBunZhTRw1w" name="Compute(Merge(forAll@370e6896))" outgoing="_StMG-q1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ForkNode" xmi:id="_StMG061MEeOdBunZhTRw1w" name="Fork(e)" outgoing="_StMG7q1MEeOdBunZhTRw1w _StMG8q1MEeOdBunZhTRw1w" incoming="_StMG_K1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StMG1K1MEeOdBunZhTRw1w" name="Read(age)" structuralFeature="_SrNyKq1MEeOdBunZhTRw1w">
                    <object xmi:id="_StMG1a1MEeOdBunZhTRw1w" name="Read(age).object" incoming="_StMG761MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMG1q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMG161MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_StMG2K1MEeOdBunZhTRw1w" name="Read(age).result" outgoing="_StMG8K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMG2a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMG2q1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_StMG261MEeOdBunZhTRw1w" name="Fork(Fork(e))" outgoing="_StMG761MEeOdBunZhTRw1w" incoming="_StMG7q1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMG3K1MEeOdBunZhTRw1w" name="Value(65)">
                    <result xmi:id="_StMG3a1MEeOdBunZhTRw1w" name="Value(65).result" outgoing="_StMG8a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMG3q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMG361MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_StMG4K1MEeOdBunZhTRw1w" value="65">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_StMG4a1MEeOdBunZhTRw1w" name="Call(&lt;=)">
                    <argument xmi:id="_StMG4q1MEeOdBunZhTRw1w" name="Call(&lt;=).argument(x)" incoming="_StMG8K1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMG461MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMG5K1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_StMG5a1MEeOdBunZhTRw1w" name="Call(&lt;=).argument(y)" incoming="_StMG8a1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMG5q1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMG561MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_StMG6K1MEeOdBunZhTRw1w" name="Call(&lt;=).result(result)" outgoing="_StMG861MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMG6a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMG6q1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                  </node>
                  <node xmi:type="uml:MergeNode" xmi:id="_StMG661MEeOdBunZhTRw1w" name="Merge(forAll@370e6896)" outgoing="_StMG9q1MEeOdBunZhTRw1w" incoming="_StMG9K1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_StMG7K1MEeOdBunZhTRw1w" name="Decision(forAll@370e6896)" outgoing="_StMG9K1MEeOdBunZhTRw1w" incoming="_StMG8q1MEeOdBunZhTRw1w _StMG861MEeOdBunZhTRw1w" decisionInputFlow="_StMG861MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_StMG7a1MEeOdBunZhTRw1w" name="Fork(Merge(forAll@370e6896))" outgoing="_StMG-a1MEeOdBunZhTRw1w _StMG_a1MEeOdBunZhTRw1w" incoming="_StMG9q1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMG7q1MEeOdBunZhTRw1w" source="_StMG061MEeOdBunZhTRw1w" target="_StMG261MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMG761MEeOdBunZhTRw1w" source="_StMG261MEeOdBunZhTRw1w" target="_StMG1a1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMG8K1MEeOdBunZhTRw1w" source="_StMG2K1MEeOdBunZhTRw1w" target="_StMG4q1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMG8a1MEeOdBunZhTRw1w" source="_StMG3a1MEeOdBunZhTRw1w" target="_StMG5a1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMG8q1MEeOdBunZhTRw1w" source="_StMG061MEeOdBunZhTRw1w" target="_StMG7K1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMG861MEeOdBunZhTRw1w" source="_StMG6K1MEeOdBunZhTRw1w" target="_StMG7K1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMG9K1MEeOdBunZhTRw1w" source="_StMG7K1MEeOdBunZhTRw1w" target="_StMG661MEeOdBunZhTRw1w">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_StMG9a1MEeOdBunZhTRw1w" name="Value(false)"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMG9q1MEeOdBunZhTRw1w" source="_StMG661MEeOdBunZhTRw1w" target="_StMG7a1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:JoinNode" xmi:id="_StMG961MEeOdBunZhTRw1w" name="Join(Merge(forAll@370e6896))" outgoing="_StMG-61MEeOdBunZhTRw1w" incoming="_StMG-a1MEeOdBunZhTRw1w _StMG-q1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_StMG-K1MEeOdBunZhTRw1w" name="ActivityFinal(Merge(forAll@370e6896))" incoming="_StMG-61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMG-a1MEeOdBunZhTRw1w" source="_StMG7a1MEeOdBunZhTRw1w" target="_StMG961MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_StMG-q1MEeOdBunZhTRw1w" source="_StMG0q1MEeOdBunZhTRw1w" target="_StMG961MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMG-61MEeOdBunZhTRw1w" source="_StMG961MEeOdBunZhTRw1w" target="_StMG-K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMG_K1MEeOdBunZhTRw1w" source="_StMG_q1MEeOdBunZhTRw1w" target="_StMG061MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMG_a1MEeOdBunZhTRw1w" source="_StMG7a1MEeOdBunZhTRw1w" target="_StMG_61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMG_q1MEeOdBunZhTRw1w" name="ForAllOrExistsOrOneExpression@370e6896.inputElement" outgoing="_StMG_K1MEeOdBunZhTRw1w" incoming="_StMuaq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsInput="_StMG0a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMG_61MEeOdBunZhTRw1w" name="ForAllOrExistsOrOneExpression@370e6896.outputElement" outgoing="_StMsR61MEeOdBunZhTRw1w" incoming="_StMG_a1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsOutput="_StMG0a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_StMsQK1MEeOdBunZhTRw1w" name="Call(IsEmpty)">
                <argument xmi:id="_StMsQa1MEeOdBunZhTRw1w" name="Call(IsEmpty).argument(seq)" incoming="_StMsR61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsQq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsQ61MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_StMsRK1MEeOdBunZhTRw1w" name="Call(IsEmpty).result()" outgoing="_StMsSK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsRa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsRq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsR61MEeOdBunZhTRw1w" source="_StMG_61MEeOdBunZhTRw1w" target="_StMsQa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsSK1MEeOdBunZhTRw1w" source="_StMsRK1MEeOdBunZhTRw1w" target="_StMGz61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMsSa1MEeOdBunZhTRw1w" name="ExpressionStatement@320f85c1" outgoing="_StMub61MEeOdBunZhTRw1w" incoming="_StMuba1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMsSq1MEeOdBunZhTRw1w" name="Fork(exists)@32f1817" outgoing="_StMuha1MEeOdBunZhTRw1w" incoming="_StMsg61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMsS61MEeOdBunZhTRw1w" name="RightHandSide@16a28a96">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_StMsTK1MEeOdBunZhTRw1w" name="ForAllOrExistsOrOneExpression@16a28a96" mode="parallel" outputElement="_StMseq1MEeOdBunZhTRw1w" inputElement="_StMsea1MEeOdBunZhTRw1w">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMsTa1MEeOdBunZhTRw1w" name="Compute(Merge(exists@16a28a96))" outgoing="_StMsda1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ForkNode" xmi:id="_StMsTq1MEeOdBunZhTRw1w" name="Fork(e)" outgoing="_StMsaa1MEeOdBunZhTRw1w _StMsba1MEeOdBunZhTRw1w" incoming="_StMsd61MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StMsT61MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SrNyMK1MEeOdBunZhTRw1w">
                    <object xmi:id="_StMsUK1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_StMsaq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsUa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsUq1MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_StMsU61MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_StMsa61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsVK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsVa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_StMsVq1MEeOdBunZhTRw1w" name="Fork(Fork(e))" outgoing="_StMsaq1MEeOdBunZhTRw1w" incoming="_StMsaa1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMsV61MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;)">
                    <result xmi:id="_StMsWK1MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;).result" outgoing="_StMsbK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsWa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsWq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_StMsW61MEeOdBunZhTRw1w" value="Joan">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_StMsXK1MEeOdBunZhTRw1w" name="Test(==)">
                    <first xmi:id="_StMsXa1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_StMsa61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsXq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsX61MEeOdBunZhTRw1w" value="1"/>
                    </first>
                    <result xmi:id="_StMsYK1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_StMsbq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsYa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsYq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <second xmi:id="_StMsY61MEeOdBunZhTRw1w" name="Test(==).second" incoming="_StMsbK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsZK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsZa1MEeOdBunZhTRw1w" value="1"/>
                    </second>
                  </node>
                  <node xmi:type="uml:MergeNode" xmi:id="_StMsZq1MEeOdBunZhTRw1w" name="Merge(exists@16a28a96)" outgoing="_StMsca1MEeOdBunZhTRw1w" incoming="_StMsb61MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_StMsZ61MEeOdBunZhTRw1w" name="Decision(exists@16a28a96)" outgoing="_StMsb61MEeOdBunZhTRw1w" incoming="_StMsba1MEeOdBunZhTRw1w _StMsbq1MEeOdBunZhTRw1w" decisionInputFlow="_StMsbq1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_StMsaK1MEeOdBunZhTRw1w" name="Fork(Merge(exists@16a28a96))" outgoing="_StMsdK1MEeOdBunZhTRw1w _StMseK1MEeOdBunZhTRw1w" incoming="_StMsca1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsaa1MEeOdBunZhTRw1w" source="_StMsTq1MEeOdBunZhTRw1w" target="_StMsVq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsaq1MEeOdBunZhTRw1w" source="_StMsVq1MEeOdBunZhTRw1w" target="_StMsUK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsa61MEeOdBunZhTRw1w" source="_StMsU61MEeOdBunZhTRw1w" target="_StMsXa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsbK1MEeOdBunZhTRw1w" source="_StMsWK1MEeOdBunZhTRw1w" target="_StMsY61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsba1MEeOdBunZhTRw1w" source="_StMsTq1MEeOdBunZhTRw1w" target="_StMsZ61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsbq1MEeOdBunZhTRw1w" source="_StMsYK1MEeOdBunZhTRw1w" target="_StMsZ61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsb61MEeOdBunZhTRw1w" source="_StMsZ61MEeOdBunZhTRw1w" target="_StMsZq1MEeOdBunZhTRw1w">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_StMscK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsca1MEeOdBunZhTRw1w" source="_StMsZq1MEeOdBunZhTRw1w" target="_StMsaK1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:JoinNode" xmi:id="_StMscq1MEeOdBunZhTRw1w" name="Join(Merge(exists@16a28a96))" outgoing="_StMsdq1MEeOdBunZhTRw1w" incoming="_StMsdK1MEeOdBunZhTRw1w _StMsda1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_StMsc61MEeOdBunZhTRw1w" name="ActivityFinal(Merge(exists@16a28a96))" incoming="_StMsdq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsdK1MEeOdBunZhTRw1w" source="_StMsaK1MEeOdBunZhTRw1w" target="_StMscq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_StMsda1MEeOdBunZhTRw1w" source="_StMsTa1MEeOdBunZhTRw1w" target="_StMscq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsdq1MEeOdBunZhTRw1w" source="_StMscq1MEeOdBunZhTRw1w" target="_StMsc61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsd61MEeOdBunZhTRw1w" source="_StMsea1MEeOdBunZhTRw1w" target="_StMsTq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMseK1MEeOdBunZhTRw1w" source="_StMsaK1MEeOdBunZhTRw1w" target="_StMseq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMsea1MEeOdBunZhTRw1w" name="ForAllOrExistsOrOneExpression@16a28a96.inputElement" outgoing="_StMsd61MEeOdBunZhTRw1w" incoming="_StMubK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsInput="_StMsTK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMseq1MEeOdBunZhTRw1w" name="ForAllOrExistsOrOneExpression@16a28a96.outputElement" outgoing="_StMsgq1MEeOdBunZhTRw1w" incoming="_StMseK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsOutput="_StMsTK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_StMse61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
                <argument xmi:id="_StMsfK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_StMsgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsfa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsfq1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_StMsf61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_StMsg61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsgK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsga1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsgq1MEeOdBunZhTRw1w" source="_StMseq1MEeOdBunZhTRw1w" target="_StMsfK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsg61MEeOdBunZhTRw1w" source="_StMsf61MEeOdBunZhTRw1w" target="_StMsSq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMshK1MEeOdBunZhTRw1w" name="ExpressionStatement@14be37c9" outgoing="_StMuca1MEeOdBunZhTRw1w" incoming="_StMub61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMsha1MEeOdBunZhTRw1w" name="Fork(one)@2148ce5" outgoing="_StMuhq1MEeOdBunZhTRw1w" incoming="_StMsx61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMshq1MEeOdBunZhTRw1w" name="RightHandSide@47339158">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_StMsh61MEeOdBunZhTRw1w" name="ForAllOrExistsOrOneExpression@47339158" mode="parallel" outputElement="_StMsra1MEeOdBunZhTRw1w" inputElement="_StMsrK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ForkNode" xmi:id="_StMsiK1MEeOdBunZhTRw1w" name="Fork(e)" outgoing="_StMsoq1MEeOdBunZhTRw1w _StMspq1MEeOdBunZhTRw1w" incoming="_StMsqq1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StMsia1MEeOdBunZhTRw1w" name="Read(title)" structuralFeature="_SrNyM61MEeOdBunZhTRw1w">
                  <object xmi:id="_StMsiq1MEeOdBunZhTRw1w" name="Read(title).object" incoming="_StMso61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsi61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsjK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_StMsja1MEeOdBunZhTRw1w" name="Read(title).result" outgoing="_StMspK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsjq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsj61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_StMskK1MEeOdBunZhTRw1w" name="Fork(Fork(e))" outgoing="_StMso61MEeOdBunZhTRw1w" incoming="_StMsoq1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMska1MEeOdBunZhTRw1w" name="Value(&quot;President&quot;)">
                  <result xmi:id="_StMskq1MEeOdBunZhTRw1w" name="Value(&quot;President&quot;).result" outgoing="_StMspa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsk61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMslK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_StMsla1MEeOdBunZhTRw1w" value="President">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_StMslq1MEeOdBunZhTRw1w" name="Test(==)">
                  <first xmi:id="_StMsl61MEeOdBunZhTRw1w" name="Test(==).first" incoming="_StMspK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsmK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsma1MEeOdBunZhTRw1w" value="1"/>
                  </first>
                  <result xmi:id="_StMsmq1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_StMsp61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsm61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsnK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <second xmi:id="_StMsna1MEeOdBunZhTRw1w" name="Test(==).second" incoming="_StMspa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsnq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsn61MEeOdBunZhTRw1w" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:MergeNode" xmi:id="_StMsoK1MEeOdBunZhTRw1w" name="Merge(one@47339158)" outgoing="_StMsq61MEeOdBunZhTRw1w" incoming="_StMsqK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_StMsoa1MEeOdBunZhTRw1w" name="Decision(one@47339158)" outgoing="_StMsqK1MEeOdBunZhTRw1w" incoming="_StMspq1MEeOdBunZhTRw1w _StMsp61MEeOdBunZhTRw1w" decisionInputFlow="_StMsp61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsoq1MEeOdBunZhTRw1w" source="_StMsiK1MEeOdBunZhTRw1w" target="_StMskK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMso61MEeOdBunZhTRw1w" source="_StMskK1MEeOdBunZhTRw1w" target="_StMsiq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMspK1MEeOdBunZhTRw1w" source="_StMsja1MEeOdBunZhTRw1w" target="_StMsl61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMspa1MEeOdBunZhTRw1w" source="_StMskq1MEeOdBunZhTRw1w" target="_StMsna1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMspq1MEeOdBunZhTRw1w" source="_StMsiK1MEeOdBunZhTRw1w" target="_StMsoa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsp61MEeOdBunZhTRw1w" source="_StMsmq1MEeOdBunZhTRw1w" target="_StMsoa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsqK1MEeOdBunZhTRw1w" source="_StMsoa1MEeOdBunZhTRw1w" target="_StMsoK1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_StMsqa1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsqq1MEeOdBunZhTRw1w" source="_StMsrK1MEeOdBunZhTRw1w" target="_StMsiK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsq61MEeOdBunZhTRw1w" source="_StMsoK1MEeOdBunZhTRw1w" target="_StMsra1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMsrK1MEeOdBunZhTRw1w" name="ForAllOrExistsOrOneExpression@47339158.inputElement" outgoing="_StMsqq1MEeOdBunZhTRw1w" incoming="_StMubq1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsInput="_StMsh61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMsra1MEeOdBunZhTRw1w" name="ForAllOrExistsOrOneExpression@47339158.outputElement" outgoing="_StMsxK1MEeOdBunZhTRw1w" incoming="_StMsq61MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsOutput="_StMsh61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_StMsrq1MEeOdBunZhTRw1w" name="Call(ListSize)">
                <argument xmi:id="_StMsr61MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_StMsxK1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMssK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMssa1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_StMssq1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_StMsxa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMss61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMstK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMsta1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_StMstq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StMsxq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMst61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsuK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_StMsua1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_StMsuq1MEeOdBunZhTRw1w" name="Test(Test(=1))">
                <first xmi:id="_StMsu61MEeOdBunZhTRw1w" name="Test(Test(=1)).first" incoming="_StMsxa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsvK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsva1MEeOdBunZhTRw1w" value="1"/>
                </first>
                <result xmi:id="_StMsvq1MEeOdBunZhTRw1w" name="Test(Test(=1)).result" outgoing="_StMsx61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsv61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMswK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <second xmi:id="_StMswa1MEeOdBunZhTRw1w" name="Test(Test(=1)).second" incoming="_StMsxq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMswq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMsw61MEeOdBunZhTRw1w" value="1"/>
                </second>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsxK1MEeOdBunZhTRw1w" source="_StMsra1MEeOdBunZhTRw1w" target="_StMsr61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsxa1MEeOdBunZhTRw1w" source="_StMssq1MEeOdBunZhTRw1w" target="_StMsu61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsxq1MEeOdBunZhTRw1w" source="_StMstq1MEeOdBunZhTRw1w" target="_StMswa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMsx61MEeOdBunZhTRw1w" source="_StMsvq1MEeOdBunZhTRw1w" target="_StMsha1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMsyK1MEeOdBunZhTRw1w" name="ExpressionStatement@1810af25" outgoing="_StMucq1MEeOdBunZhTRw1w" incoming="_StMuca1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMsya1MEeOdBunZhTRw1w" name="Fork(unique)@57b5ee6" outgoing="_StMuh61MEeOdBunZhTRw1w" incoming="_StMtHa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMsyq1MEeOdBunZhTRw1w" name="RightHandSide@1d4a4744">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_StMsy61MEeOdBunZhTRw1w" name="IsUniqueExpression@1d4a4744" mode="parallel" outputElement="_StMs2q1MEeOdBunZhTRw1w" inputElement="_StMs2a1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ForkNode" xmi:id="_StMszK1MEeOdBunZhTRw1w" name="Fork(e)" outgoing="_StMs1a1MEeOdBunZhTRw1w" incoming="_StMs161MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StMsza1MEeOdBunZhTRw1w" name="Read(id)" structuralFeature="_SrNyNq1MEeOdBunZhTRw1w">
                  <object xmi:id="_StMszq1MEeOdBunZhTRw1w" name="Read(id).object" incoming="_StMs1q1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMsz61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMs0K1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_StMs0a1MEeOdBunZhTRw1w" name="Read(id).result" outgoing="_StMs2K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMs0q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMs061MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_StMs1K1MEeOdBunZhTRw1w" name="Fork(Fork(e))" outgoing="_StMs1q1MEeOdBunZhTRw1w" incoming="_StMs1a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMs1a1MEeOdBunZhTRw1w" source="_StMszK1MEeOdBunZhTRw1w" target="_StMs1K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMs1q1MEeOdBunZhTRw1w" source="_StMs1K1MEeOdBunZhTRw1w" target="_StMszq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMs161MEeOdBunZhTRw1w" source="_StMs2a1MEeOdBunZhTRw1w" target="_StMszK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMs2K1MEeOdBunZhTRw1w" source="_StMs0a1MEeOdBunZhTRw1w" target="_StMs2q1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMs2a1MEeOdBunZhTRw1w" name="IsUniqueExpression@1d4a4744.inputElement" outgoing="_StMs161MEeOdBunZhTRw1w" incoming="_StMucK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsInput="_StMsy61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMs2q1MEeOdBunZhTRw1w" name="IsUniqueExpression@1d4a4744.outputElement" outgoing="_StMtGK1MEeOdBunZhTRw1w" incoming="_StMs2K1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsOutput="_StMsy61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMs261MEeOdBunZhTRw1w" name="Node(Fork(IsUniqueExpression@1d4a4744.outputElement))" outgoing="_StMtG61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ForkNode" xmi:id="_StMs3K1MEeOdBunZhTRw1w" name="Fork(IsUniqueExpression@1d4a4744.outputElement)" outgoing="_StMtGa1MEeOdBunZhTRw1w _StMtGq1MEeOdBunZhTRw1w" incoming="_StMtGK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_StMs3a1MEeOdBunZhTRw1w" name="Uniqueness(IsUniqueExpression@1d4a4744)" incoming="_StMtG61MEeOdBunZhTRw1w" mode="parallel" outputElement="_StMtEK1MEeOdBunZhTRw1w" inputElement="_StMtD61MEeOdBunZhTRw1w">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMs3q1MEeOdBunZhTRw1w" name="Compute(Merge(uniqueness@1d4a4744))" outgoing="_StMtC61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ForkNode" xmi:id="_StMs361MEeOdBunZhTRw1w" name="Fork(each)" outgoing="_StMs_K1MEeOdBunZhTRw1w _StMs_61MEeOdBunZhTRw1w" incoming="_StMtDa1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_StMs4K1MEeOdBunZhTRw1w" name="Call(Count)">
                    <argument xmi:id="_StMs4a1MEeOdBunZhTRw1w" name="Call(Count).argument(seq)" incoming="_StMtCa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMs4q1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMs461MEeOdBunZhTRw1w" value="*"/>
                    </argument>
                    <argument xmi:id="_StMs5K1MEeOdBunZhTRw1w" name="Call(Count).argument(element)" incoming="_StMs_K1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMs5a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMs5q1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_StMs561MEeOdBunZhTRw1w" name="Call(Count).result()" outgoing="_StMs_a1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMs6K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMs6a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Count"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMs6q1MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_StMs661MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StMs_q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMs7K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMs7a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_StMs7q1MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_StMs761MEeOdBunZhTRw1w" name="Test(=1)">
                    <first xmi:id="_StMs8K1MEeOdBunZhTRw1w" name="Test(=1).first" incoming="_StMs_a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMs8a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMs8q1MEeOdBunZhTRw1w" value="1"/>
                    </first>
                    <result xmi:id="_StMs861MEeOdBunZhTRw1w" name="Test(=1).result" outgoing="_StMtAK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMs9K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMs9a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <second xmi:id="_StMs9q1MEeOdBunZhTRw1w" name="Test(=1).second" incoming="_StMs_q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMs961MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMs-K1MEeOdBunZhTRw1w" value="1"/>
                    </second>
                  </node>
                  <node xmi:type="uml:MergeNode" xmi:id="_StMs-a1MEeOdBunZhTRw1w" name="Merge(uniqueness@1d4a4744)" outgoing="_StMtA61MEeOdBunZhTRw1w" incoming="_StMtAa1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_StMs-q1MEeOdBunZhTRw1w" name="Decision(uniqueness@1d4a4744)" outgoing="_StMtAa1MEeOdBunZhTRw1w" incoming="_StMs_61MEeOdBunZhTRw1w _StMtAK1MEeOdBunZhTRw1w" decisionInputFlow="_StMtAK1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_StMs-61MEeOdBunZhTRw1w" name="Fork(Merge(uniqueness@1d4a4744))" outgoing="_StMtCq1MEeOdBunZhTRw1w _StMtDq1MEeOdBunZhTRw1w" incoming="_StMtA61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMs_K1MEeOdBunZhTRw1w" source="_StMs361MEeOdBunZhTRw1w" target="_StMs5K1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMs_a1MEeOdBunZhTRw1w" source="_StMs561MEeOdBunZhTRw1w" target="_StMs8K1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMs_q1MEeOdBunZhTRw1w" source="_StMs661MEeOdBunZhTRw1w" target="_StMs9q1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMs_61MEeOdBunZhTRw1w" source="_StMs361MEeOdBunZhTRw1w" target="_StMs-q1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtAK1MEeOdBunZhTRw1w" source="_StMs861MEeOdBunZhTRw1w" target="_StMs-q1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtAa1MEeOdBunZhTRw1w" source="_StMs-q1MEeOdBunZhTRw1w" target="_StMs-a1MEeOdBunZhTRw1w">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_StMtAq1MEeOdBunZhTRw1w" name="Value(false)"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtA61MEeOdBunZhTRw1w" source="_StMs-a1MEeOdBunZhTRw1w" target="_StMs-61MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:JoinNode" xmi:id="_StMtBK1MEeOdBunZhTRw1w" name="Join(Merge(uniqueness@1d4a4744))" outgoing="_StMtDK1MEeOdBunZhTRw1w" incoming="_StMtCq1MEeOdBunZhTRw1w _StMtC61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_StMtBa1MEeOdBunZhTRw1w" name="ActivityFinal(Merge(uniqueness@1d4a4744))" incoming="_StMtDK1MEeOdBunZhTRw1w"/>
                <structuredNodeInput xmi:id="_StMtBq1MEeOdBunZhTRw1w" name="Uniqueness(IsUniqueExpression@1d4a4744).input(Fork(IsUniqueExpression@1d4a4744.outputElement))" outgoing="_StMtCa1MEeOdBunZhTRw1w" incoming="_StMtGa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtB61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtCK1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeInput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtCa1MEeOdBunZhTRw1w" source="_StMtBq1MEeOdBunZhTRw1w" target="_StMs4a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtCq1MEeOdBunZhTRw1w" source="_StMs-61MEeOdBunZhTRw1w" target="_StMtBK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_StMtC61MEeOdBunZhTRw1w" source="_StMs3q1MEeOdBunZhTRw1w" target="_StMtBK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtDK1MEeOdBunZhTRw1w" source="_StMtBK1MEeOdBunZhTRw1w" target="_StMtBa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtDa1MEeOdBunZhTRw1w" source="_StMtD61MEeOdBunZhTRw1w" target="_StMs361MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtDq1MEeOdBunZhTRw1w" source="_StMs-61MEeOdBunZhTRw1w" target="_StMtEK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMtD61MEeOdBunZhTRw1w" name="Uniqueness(IsUniqueExpression@1d4a4744).inputElement" outgoing="_StMtDa1MEeOdBunZhTRw1w" incoming="_StMtGq1MEeOdBunZhTRw1w" regionAsInput="_StMs3a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_StMtEK1MEeOdBunZhTRw1w" name="Uniqueness(IsUniqueExpression@1d4a4744).outputElement" outgoing="_StMtHK1MEeOdBunZhTRw1w" incoming="_StMtDq1MEeOdBunZhTRw1w" regionAsOutput="_StMs3a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_StMtEa1MEeOdBunZhTRw1w" name="Call(IsEmpty)">
                <argument xmi:id="_StMtEq1MEeOdBunZhTRw1w" name="Call(IsEmpty).argument(seq)" incoming="_StMtHK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtE61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtFK1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_StMtFa1MEeOdBunZhTRw1w" name="Call(IsEmpty).result()" outgoing="_StMtHa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtFq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtF61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtGK1MEeOdBunZhTRw1w" source="_StMs2q1MEeOdBunZhTRw1w" target="_StMs3K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtGa1MEeOdBunZhTRw1w" source="_StMs3K1MEeOdBunZhTRw1w" target="_StMtBq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtGq1MEeOdBunZhTRw1w" source="_StMs3K1MEeOdBunZhTRw1w" target="_StMtD61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_StMtG61MEeOdBunZhTRw1w" source="_StMs261MEeOdBunZhTRw1w" target="_StMs3a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtHK1MEeOdBunZhTRw1w" source="_StMtEK1MEeOdBunZhTRw1w" target="_StMtEq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtHa1MEeOdBunZhTRw1w" source="_StMtFa1MEeOdBunZhTRw1w" target="_StMsya1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMtHq1MEeOdBunZhTRw1w" name="ExpressionStatement@39b0196a" outgoing="_StMuc61MEeOdBunZhTRw1w" incoming="_StMucq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMtH61MEeOdBunZhTRw1w" name="Fork(jack)@18806dc1" outgoing="_StMuiK1MEeOdBunZhTRw1w" incoming="_StMtYq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMtIK1MEeOdBunZhTRw1w" name="RightHandSide@17a5a678">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_StMtIa1MEeOdBunZhTRw1w" name="Call(At)" incoming="_StMtYK1MEeOdBunZhTRw1w">
                <argument xmi:id="_StMtIq1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_StMtXq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtI61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtJK1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <argument xmi:id="_StMtJa1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_StMtYa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtJq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtJ61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_StMtKK1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_StMtYq1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtKa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtKq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMtK61MEeOdBunZhTRw1w" name="Tuple@36da7777" outgoing="_StMtYK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_StMtLK1MEeOdBunZhTRw1w" name="ReadExtent(Employee)" classifier="_SrNyJq1MEeOdBunZhTRw1w">
                  <result xmi:id="_StMtLa1MEeOdBunZhTRw1w" name="ReadExtent(Employee).result" outgoing="_StMtXK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtLq1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtL61MEeOdBunZhTRw1w" value="*"/>
                  </result>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_StMtMK1MEeOdBunZhTRw1w" name="SelectOrRejectExpression@5b184a5e" mode="parallel" outputElement="_StMtVq1MEeOdBunZhTRw1w" inputElement="_StMtVa1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ForkNode" xmi:id="_StMtMa1MEeOdBunZhTRw1w" name="Fork(e)" outgoing="_StMtS61MEeOdBunZhTRw1w _StMtT61MEeOdBunZhTRw1w" incoming="_StMtU61MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StMtMq1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SrNyMK1MEeOdBunZhTRw1w">
                    <object xmi:id="_StMtM61MEeOdBunZhTRw1w" name="Read(name).object" incoming="_StMtTK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtNK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtNa1MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_StMtNq1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_StMtTa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtN61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtOK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_StMtOa1MEeOdBunZhTRw1w" name="Fork(Fork(e))" outgoing="_StMtTK1MEeOdBunZhTRw1w" incoming="_StMtS61MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMtOq1MEeOdBunZhTRw1w" name="Value(&quot;Jack&quot;)">
                    <result xmi:id="_StMtO61MEeOdBunZhTRw1w" name="Value(&quot;Jack&quot;).result" outgoing="_StMtTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtPK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtPa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_StMtPq1MEeOdBunZhTRw1w" value="Jack">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_StMtP61MEeOdBunZhTRw1w" name="Test(==)">
                    <first xmi:id="_StMtQK1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_StMtTa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtQa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtQq1MEeOdBunZhTRw1w" value="1"/>
                    </first>
                    <result xmi:id="_StMtQ61MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_StMtUK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtRK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtRa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <second xmi:id="_StMtRq1MEeOdBunZhTRw1w" name="Test(==).second" incoming="_StMtTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtR61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtSK1MEeOdBunZhTRw1w" value="1"/>
                    </second>
                  </node>
                  <node xmi:type="uml:MergeNode" xmi:id="_StMtSa1MEeOdBunZhTRw1w" name="Merge(select@5b184a5e)" outgoing="_StMtVK1MEeOdBunZhTRw1w" incoming="_StMtUa1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_StMtSq1MEeOdBunZhTRw1w" name="Decision(select@5b184a5e)" outgoing="_StMtUa1MEeOdBunZhTRw1w" incoming="_StMtT61MEeOdBunZhTRw1w _StMtUK1MEeOdBunZhTRw1w" decisionInputFlow="_StMtUK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtS61MEeOdBunZhTRw1w" source="_StMtMa1MEeOdBunZhTRw1w" target="_StMtOa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtTK1MEeOdBunZhTRw1w" source="_StMtOa1MEeOdBunZhTRw1w" target="_StMtM61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtTa1MEeOdBunZhTRw1w" source="_StMtNq1MEeOdBunZhTRw1w" target="_StMtQK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtTq1MEeOdBunZhTRw1w" source="_StMtO61MEeOdBunZhTRw1w" target="_StMtRq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtT61MEeOdBunZhTRw1w" source="_StMtMa1MEeOdBunZhTRw1w" target="_StMtSq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtUK1MEeOdBunZhTRw1w" source="_StMtQ61MEeOdBunZhTRw1w" target="_StMtSq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtUa1MEeOdBunZhTRw1w" source="_StMtSq1MEeOdBunZhTRw1w" target="_StMtSa1MEeOdBunZhTRw1w">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_StMtUq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtU61MEeOdBunZhTRw1w" source="_StMtVa1MEeOdBunZhTRw1w" target="_StMtMa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtVK1MEeOdBunZhTRw1w" source="_StMtSa1MEeOdBunZhTRw1w" target="_StMtVq1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_StMtVa1MEeOdBunZhTRw1w" name="SelectOrRejectExpression@5b184a5e.inputElement" outgoing="_StMtU61MEeOdBunZhTRw1w" incoming="_StMtXK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsInput="_StMtMK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_StMtVq1MEeOdBunZhTRw1w" name="SelectOrRejectExpression@5b184a5e.outputElement" outgoing="_StMtXq1MEeOdBunZhTRw1w" incoming="_StMtVK1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsOutput="_StMtMK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMtV61MEeOdBunZhTRw1w" name="Value(1)">
                  <result xmi:id="_StMtWK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StMtX61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtWa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtWq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_StMtW61MEeOdBunZhTRw1w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtXK1MEeOdBunZhTRw1w" source="_StMtLa1MEeOdBunZhTRw1w" target="_StMtVa1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_StMtXa1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_StMtYa1MEeOdBunZhTRw1w" incoming="_StMtX61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtXq1MEeOdBunZhTRw1w" source="_StMtVq1MEeOdBunZhTRw1w" target="_StMtIq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtX61MEeOdBunZhTRw1w" source="_StMtWK1MEeOdBunZhTRw1w" target="_StMtXa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_StMtYK1MEeOdBunZhTRw1w" source="_StMtK61MEeOdBunZhTRw1w" target="_StMtIa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtYa1MEeOdBunZhTRw1w" source="_StMtXa1MEeOdBunZhTRw1w" target="_StMtJa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtYq1MEeOdBunZhTRw1w" source="_StMtKK1MEeOdBunZhTRw1w" target="_StMtH61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMtY61MEeOdBunZhTRw1w" name="ExpressionStatement@36673fe4" outgoing="_StMudK1MEeOdBunZhTRw1w" incoming="_StMuc61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMtZK1MEeOdBunZhTRw1w" name="Fork(joan)@71b557ab" outgoing="_StMuia1MEeOdBunZhTRw1w" incoming="_StMtp61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMtZa1MEeOdBunZhTRw1w" name="RightHandSide@388ed5df">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_StMtZq1MEeOdBunZhTRw1w" name="Call(At)" incoming="_StMtpa1MEeOdBunZhTRw1w">
                <argument xmi:id="_StMtZ61MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_StMto61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtaK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtaa1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <argument xmi:id="_StMtaq1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_StMtpq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMta61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtbK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_StMtba1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_StMtp61MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtbq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtb61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMtcK1MEeOdBunZhTRw1w" name="Tuple@8418482" outgoing="_StMtpa1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_StMtca1MEeOdBunZhTRw1w" name="ReadExtent(Employee)" classifier="_SrNyJq1MEeOdBunZhTRw1w">
                  <result xmi:id="_StMtcq1MEeOdBunZhTRw1w" name="ReadExtent(Employee).result" outgoing="_StMtoa1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtc61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtdK1MEeOdBunZhTRw1w" value="*"/>
                  </result>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_StMtda1MEeOdBunZhTRw1w" name="SelectOrRejectExpression@3b6f93b3" mode="parallel" outputElement="_StMtm61MEeOdBunZhTRw1w" inputElement="_StMtmq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ForkNode" xmi:id="_StMtdq1MEeOdBunZhTRw1w" name="Fork(e)" outgoing="_StMtkK1MEeOdBunZhTRw1w _StMtlK1MEeOdBunZhTRw1w" incoming="_StMtmK1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StMtd61MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SrNyMK1MEeOdBunZhTRw1w">
                    <object xmi:id="_StMteK1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_StMtka1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtea1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMteq1MEeOdBunZhTRw1w" value="1"/>
                    </object>
                    <result xmi:id="_StMte61MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_StMtkq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtfK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtfa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_StMtfq1MEeOdBunZhTRw1w" name="Fork(Fork(e))" outgoing="_StMtka1MEeOdBunZhTRw1w" incoming="_StMtkK1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMtf61MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;)">
                    <result xmi:id="_StMtgK1MEeOdBunZhTRw1w" name="Value(&quot;Joan&quot;).result" outgoing="_StMtk61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtga1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtgq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_StMtg61MEeOdBunZhTRw1w" value="Joan">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_StMthK1MEeOdBunZhTRw1w" name="Test(==)">
                    <first xmi:id="_StMtha1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_StMtkq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMthq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMth61MEeOdBunZhTRw1w" value="1"/>
                    </first>
                    <result xmi:id="_StMtiK1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_StMtla1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtia1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtiq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <second xmi:id="_StMti61MEeOdBunZhTRw1w" name="Test(==).second" incoming="_StMtk61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtjK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtja1MEeOdBunZhTRw1w" value="1"/>
                    </second>
                  </node>
                  <node xmi:type="uml:MergeNode" xmi:id="_StMtjq1MEeOdBunZhTRw1w" name="Merge(select@3b6f93b3)" outgoing="_StMtma1MEeOdBunZhTRw1w" incoming="_StMtlq1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_StMtj61MEeOdBunZhTRw1w" name="Decision(select@3b6f93b3)" outgoing="_StMtlq1MEeOdBunZhTRw1w" incoming="_StMtlK1MEeOdBunZhTRw1w _StMtla1MEeOdBunZhTRw1w" decisionInputFlow="_StMtla1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtkK1MEeOdBunZhTRw1w" source="_StMtdq1MEeOdBunZhTRw1w" target="_StMtfq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtka1MEeOdBunZhTRw1w" source="_StMtfq1MEeOdBunZhTRw1w" target="_StMteK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtkq1MEeOdBunZhTRw1w" source="_StMte61MEeOdBunZhTRw1w" target="_StMtha1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtk61MEeOdBunZhTRw1w" source="_StMtgK1MEeOdBunZhTRw1w" target="_StMti61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtlK1MEeOdBunZhTRw1w" source="_StMtdq1MEeOdBunZhTRw1w" target="_StMtj61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtla1MEeOdBunZhTRw1w" source="_StMtiK1MEeOdBunZhTRw1w" target="_StMtj61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtlq1MEeOdBunZhTRw1w" source="_StMtj61MEeOdBunZhTRw1w" target="_StMtjq1MEeOdBunZhTRw1w">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_StMtl61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtmK1MEeOdBunZhTRw1w" source="_StMtmq1MEeOdBunZhTRw1w" target="_StMtdq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtma1MEeOdBunZhTRw1w" source="_StMtjq1MEeOdBunZhTRw1w" target="_StMtm61MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_StMtmq1MEeOdBunZhTRw1w" name="SelectOrRejectExpression@3b6f93b3.inputElement" outgoing="_StMtmK1MEeOdBunZhTRw1w" incoming="_StMtoa1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsInput="_StMtda1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_StMtm61MEeOdBunZhTRw1w" name="SelectOrRejectExpression@3b6f93b3.outputElement" outgoing="_StMto61MEeOdBunZhTRw1w" incoming="_StMtma1MEeOdBunZhTRw1w" type="_SrNyJq1MEeOdBunZhTRw1w" regionAsOutput="_StMtda1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMtnK1MEeOdBunZhTRw1w" name="Value(1)">
                  <result xmi:id="_StMtna1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StMtpK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtnq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtn61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_StMtoK1MEeOdBunZhTRw1w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtoa1MEeOdBunZhTRw1w" source="_StMtcq1MEeOdBunZhTRw1w" target="_StMtmq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_StMtoq1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_StMtpq1MEeOdBunZhTRw1w" incoming="_StMtpK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMto61MEeOdBunZhTRw1w" source="_StMtm61MEeOdBunZhTRw1w" target="_StMtZ61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtpK1MEeOdBunZhTRw1w" source="_StMtna1MEeOdBunZhTRw1w" target="_StMtoq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_StMtpa1MEeOdBunZhTRw1w" source="_StMtcK1MEeOdBunZhTRw1w" target="_StMtZq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtpq1MEeOdBunZhTRw1w" source="_StMtoq1MEeOdBunZhTRw1w" target="_StMtaq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtp61MEeOdBunZhTRw1w" source="_StMtba1MEeOdBunZhTRw1w" target="_StMtZK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMtqK1MEeOdBunZhTRw1w" name="ExpressionStatement@1f0713d1" outgoing="_StMuda1MEeOdBunZhTRw1w" incoming="_StMudK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMtqa1MEeOdBunZhTRw1w" name="Fork(myType)@304b46da" outgoing="_StMud61MEeOdBunZhTRw1w" incoming="_StMtsK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMtqq1MEeOdBunZhTRw1w" name="RightHandSide@1e18aafb">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StMtq61MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_StMtrK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StMtsK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtra1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtrq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_StMtr61MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtsK1MEeOdBunZhTRw1w" source="_StMtrK1MEeOdBunZhTRw1w" target="_StMtqa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMtsa1MEeOdBunZhTRw1w" name="ExpressionStatement@60d40be2" outgoing="_StMueK1MEeOdBunZhTRw1w" incoming="_StMuda1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMtsq1MEeOdBunZhTRw1w" name="Fork(something)@5183829d" outgoing="_StMudq1MEeOdBunZhTRw1w _StMueq1MEeOdBunZhTRw1w _StMuiq1MEeOdBunZhTRw1w" incoming="_StMtwK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMts61MEeOdBunZhTRw1w" name="RightHandSide@10f43b3a">
              <node xmi:type="uml:CallOperationAction" xmi:id="_StMttK1MEeOdBunZhTRw1w" name="Call(Something)" operation="_StLe0a1MEeOdBunZhTRw1w">
                <result xmi:id="_StMtta1MEeOdBunZhTRw1w" name="Call(Something).result()" outgoing="_StMtwK1MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMttq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtt61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_StMtuK1MEeOdBunZhTRw1w" name="Call(Something).target" incoming="_StMtv61MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtua1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtuq1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_StMtu61MEeOdBunZhTRw1w" name="Create(Something)" classifier="_StLeKa1MEeOdBunZhTRw1w">
                <result xmi:id="_StMtvK1MEeOdBunZhTRw1w" name="Create(Something).result" outgoing="_StMtv61MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtva1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtvq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtv61MEeOdBunZhTRw1w" source="_StMtvK1MEeOdBunZhTRw1w" target="_StMtuK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMtwK1MEeOdBunZhTRw1w" source="_StMtta1MEeOdBunZhTRw1w" target="_StMtsq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMtwa1MEeOdBunZhTRw1w" name="ExpressionStatement@784ffeb1" outgoing="_StMuea1MEeOdBunZhTRw1w" incoming="_StMueK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StMtwq1MEeOdBunZhTRw1w" name="Read(attribute)" structuralFeature="_StLeLa1MEeOdBunZhTRw1w">
              <object xmi:id="_StMtw61MEeOdBunZhTRw1w" name="Read(attribute).object" incoming="_StMt8a1MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtxK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtxa1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_StMtxq1MEeOdBunZhTRw1w" name="Read(attribute).result" outgoing="_StMt8q1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtx61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMtyK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StMtya1MEeOdBunZhTRw1w" name="Fork(Fork(something)@5183829d)" outgoing="_StMt8a1MEeOdBunZhTRw1w" incoming="_StMudq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_StMtyq1MEeOdBunZhTRw1w" name="CollectOrIterateExpression@3b7f2e85" outputElement="_StMt8K1MEeOdBunZhTRw1w" inputElement="_StMt761MEeOdBunZhTRw1w">
              <node xmi:type="uml:ForkNode" xmi:id="_StMty61MEeOdBunZhTRw1w" name="Fork(attr)" outgoing="_StMt6K1MEeOdBunZhTRw1w" incoming="_StMt7a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMtzK1MEeOdBunZhTRw1w" name="Expression(LeftHandSide@7e30cac)" incoming="_StMt7K1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_StMtza1MEeOdBunZhTRw1w" name="Clear(type)" structuralFeature="_SrOWhq1MEeOdBunZhTRw1w">
                <object xmi:id="_StMtzq1MEeOdBunZhTRw1w" name="Clear(type).object" incoming="_StMt6K1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMtz61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMt0K1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_StMt0a1MEeOdBunZhTRw1w" name="Clear(type).result" outgoing="_StMt6q1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMt0q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMt061MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_StMt1K1MEeOdBunZhTRw1w" name="Fork(LeftHandSide@7e30cac)" outgoing="_StMt6a1MEeOdBunZhTRw1w _StMt7q1MEeOdBunZhTRw1w" incoming="_StMt661MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMt1a1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Attribute::type)">
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_StMt1q1MEeOdBunZhTRw1w" name="Write(type)" structuralFeature="_SrOWhq1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_StMt161MEeOdBunZhTRw1w" name="Write(type).object" incoming="_StMt6q1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMt2K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMt2a1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_StMt2q1MEeOdBunZhTRw1w" name="Write(type).result" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMt261MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMt3K1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_StMt3a1MEeOdBunZhTRw1w" name="Write(type).value" incoming="_StMt461MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMt3q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMt361MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <structuredNodeInput xmi:id="_StMt4K1MEeOdBunZhTRw1w" name="WriteAll(Expressions_Sequence_Expansion_Reduction::Attribute::type).input(Expressions_Sequence_Expansion_Reduction::Attribute::type)" outgoing="_StMt461MEeOdBunZhTRw1w" incoming="_StMt6a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMt4a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMt4q1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeInput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StMt461MEeOdBunZhTRw1w" source="_StMt4K1MEeOdBunZhTRw1w" target="_StMt3a1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMt5K1MEeOdBunZhTRw1w" name="RightHandSide@1e7f5c37" outgoing="_StMt7K1MEeOdBunZhTRw1w"/>
              <structuredNodeInput xmi:id="_StMt5a1MEeOdBunZhTRw1w" name="CollectOrIterateExpression@3b7f2e85.input(Fork(myType)@304b46da)" outgoing="_StMt661MEeOdBunZhTRw1w" incoming="_StMud61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMt5q1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMt561MEeOdBunZhTRw1w" value="*"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMt6K1MEeOdBunZhTRw1w" source="_StMty61MEeOdBunZhTRw1w" target="_StMtzq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMt6a1MEeOdBunZhTRw1w" source="_StMt1K1MEeOdBunZhTRw1w" target="_StMt4K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMt6q1MEeOdBunZhTRw1w" source="_StMt0a1MEeOdBunZhTRw1w" target="_StMt161MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMt661MEeOdBunZhTRw1w" source="_StMt5a1MEeOdBunZhTRw1w" target="_StMt1K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_StMt7K1MEeOdBunZhTRw1w" source="_StMt5K1MEeOdBunZhTRw1w" target="_StMtzK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMt7a1MEeOdBunZhTRw1w" source="_StMt761MEeOdBunZhTRw1w" target="_StMty61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMt7q1MEeOdBunZhTRw1w" source="_StMt1K1MEeOdBunZhTRw1w" target="_StMt8K1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_StMt761MEeOdBunZhTRw1w" name="CollectOrIterateExpression@3b7f2e85.inputElement" outgoing="_StMt7a1MEeOdBunZhTRw1w" incoming="_StMt8q1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" regionAsInput="_StMtyq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_StMt8K1MEeOdBunZhTRw1w" name="CollectOrIterateExpression@3b7f2e85.outputElement" incoming="_StMt7q1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" regionAsOutput="_StMtyq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMt8a1MEeOdBunZhTRw1w" source="_StMtya1MEeOdBunZhTRw1w" target="_StMtw61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMt8q1MEeOdBunZhTRw1w" source="_StMtxq1MEeOdBunZhTRw1w" target="_StMt761MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMt861MEeOdBunZhTRw1w" name="ExpressionStatement@1216eacf" outgoing="_StMufK1MEeOdBunZhTRw1w" incoming="_StMuea1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StMt9K1MEeOdBunZhTRw1w" name="Fork(obj)@2cc04a4c" outgoing="_StMue61MEeOdBunZhTRw1w _StMui61MEeOdBunZhTRw1w" incoming="_StMuAq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMt9a1MEeOdBunZhTRw1w" name="RightHandSide@44dda88">
              <node xmi:type="uml:CallOperationAction" xmi:id="_StMt9q1MEeOdBunZhTRw1w" name="Call(Object)" operation="_StLfjK1MEeOdBunZhTRw1w">
                <result xmi:id="_StMt961MEeOdBunZhTRw1w" name="Call(Object).result()" outgoing="_StMuAq1MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMt-K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMt-a1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_StMt-q1MEeOdBunZhTRw1w" name="Call(Object).target" incoming="_StMuAa1MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMt-61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMt_K1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_StMt_a1MEeOdBunZhTRw1w" name="Create(Object)" classifier="_StLe1q1MEeOdBunZhTRw1w">
                <result xmi:id="_StMt_q1MEeOdBunZhTRw1w" name="Create(Object).result" outgoing="_StMuAa1MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMt_61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuAK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuAa1MEeOdBunZhTRw1w" source="_StMt_q1MEeOdBunZhTRw1w" target="_StMt-q1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuAq1MEeOdBunZhTRw1w" source="_StMt961MEeOdBunZhTRw1w" target="_StMt9K1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StMuA61MEeOdBunZhTRw1w" name="ExpressionStatement@290bcd0f" incoming="_StMufK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_StMuBK1MEeOdBunZhTRw1w" name="Read(attribute)" structuralFeature="_StLeLa1MEeOdBunZhTRw1w">
              <object xmi:id="_StMuBa1MEeOdBunZhTRw1w" name="Read(attribute).object" incoming="_StMuH61MEeOdBunZhTRw1w" type="_StLeKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuBq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuB61MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_StMuCK1MEeOdBunZhTRw1w" name="Read(attribute).result" outgoing="_StMuIK1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuCa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuCq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StMuC61MEeOdBunZhTRw1w" name="Fork(Fork(something)@5183829d)" outgoing="_StMuH61MEeOdBunZhTRw1w" incoming="_StMueq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_StMuDK1MEeOdBunZhTRw1w" name="CollectOrIterateExpression@1d6dd08a" outputElement="_StMuHq1MEeOdBunZhTRw1w" inputElement="_StMuHa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ForkNode" xmi:id="_StMuDa1MEeOdBunZhTRw1w" name="Fork(attr)" outgoing="_StMuGa1MEeOdBunZhTRw1w" incoming="_StMuG61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_StMuDq1MEeOdBunZhTRw1w" name="Call(init)" operation="_StLfiK1MEeOdBunZhTRw1w">
                <argument xmi:id="_StMuD61MEeOdBunZhTRw1w" name="Call(init).argument(attr)" incoming="_StMuGa1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuEK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuEa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <target xmi:id="_StMuEq1MEeOdBunZhTRw1w" name="Call(init).target" incoming="_StMuGq1MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuE61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuFK1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:MergeNode" xmi:id="_StMuFa1MEeOdBunZhTRw1w" name="Merge" outgoing="_StMuHK1MEeOdBunZhTRw1w"/>
              <structuredNodeInput xmi:id="_StMuFq1MEeOdBunZhTRw1w" name="CollectOrIterateExpression@1d6dd08a.input(Fork(obj)@2cc04a4c)" outgoing="_StMuGq1MEeOdBunZhTRw1w" incoming="_StMue61MEeOdBunZhTRw1w" type="_StLe1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuF61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuGK1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuGa1MEeOdBunZhTRw1w" source="_StMuDa1MEeOdBunZhTRw1w" target="_StMuD61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuGq1MEeOdBunZhTRw1w" source="_StMuFq1MEeOdBunZhTRw1w" target="_StMuEq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuG61MEeOdBunZhTRw1w" source="_StMuHa1MEeOdBunZhTRw1w" target="_StMuDa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuHK1MEeOdBunZhTRw1w" source="_StMuFa1MEeOdBunZhTRw1w" target="_StMuHq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_StMuHa1MEeOdBunZhTRw1w" name="CollectOrIterateExpression@1d6dd08a.inputElement" outgoing="_StMuG61MEeOdBunZhTRw1w" incoming="_StMuIK1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" regionAsInput="_StMuDK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ExpansionNode" xmi:id="_StMuHq1MEeOdBunZhTRw1w" name="CollectOrIterateExpression@1d6dd08a.outputElement" incoming="_StMuHK1MEeOdBunZhTRw1w" type="_SrOWgq1MEeOdBunZhTRw1w" regionAsOutput="_StMuDK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuH61MEeOdBunZhTRw1w" source="_StMuC61MEeOdBunZhTRw1w" target="_StMuBa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuIK1MEeOdBunZhTRw1w" source="_StMuCK1MEeOdBunZhTRw1w" target="_StMuHa1MEeOdBunZhTRw1w"/>
          </node>
          <structuredNodeOutput xmi:id="_StMuIa1MEeOdBunZhTRw1w" name="Output(sum)" outgoing="_StLf5a1MEeOdBunZhTRw1w" incoming="_StMufa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuIq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuI61MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuJK1MEeOdBunZhTRw1w" name="Output(remainder)" outgoing="_StLf5q1MEeOdBunZhTRw1w" incoming="_StMufq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuJa1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuJq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuJ61MEeOdBunZhTRw1w" name="Output(bad)" outgoing="_StLf561MEeOdBunZhTRw1w" incoming="_StMuf61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuKK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuKa1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuKq1MEeOdBunZhTRw1w" name="Output(select)" outgoing="_StLf6K1MEeOdBunZhTRw1w" incoming="_StMugK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuK61MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuLK1MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuLa1MEeOdBunZhTRw1w" name="Output(reject)" outgoing="_StLf6a1MEeOdBunZhTRw1w" incoming="_StMuga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuLq1MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuL61MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuMK1MEeOdBunZhTRw1w" name="Output(collect)" outgoing="_StLf6q1MEeOdBunZhTRw1w" incoming="_StMugq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuMa1MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuMq1MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuM61MEeOdBunZhTRw1w" name="Output(iterate)" outgoing="_StLf661MEeOdBunZhTRw1w" incoming="_StMug61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuNK1MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuNa1MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuNq1MEeOdBunZhTRw1w" name="Output(forAll)" outgoing="_StLf7K1MEeOdBunZhTRw1w" incoming="_StMuhK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuN61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuOK1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuOa1MEeOdBunZhTRw1w" name="Output(exists)" outgoing="_StLf7a1MEeOdBunZhTRw1w" incoming="_StMuha1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuOq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuO61MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuPK1MEeOdBunZhTRw1w" name="Output(one)" outgoing="_StLf7q1MEeOdBunZhTRw1w" incoming="_StMuhq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuPa1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuPq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuP61MEeOdBunZhTRw1w" name="Output(unique)" outgoing="_StLf761MEeOdBunZhTRw1w" incoming="_StMuh61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuQK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuQa1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuQq1MEeOdBunZhTRw1w" name="Output(jack)" outgoing="_StLf8K1MEeOdBunZhTRw1w" incoming="_StMuiK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuQ61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuRK1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuRa1MEeOdBunZhTRw1w" name="Output(joan)" outgoing="_StLf8a1MEeOdBunZhTRw1w" incoming="_StMuia1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuRq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuR61MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuSK1MEeOdBunZhTRw1w" name="Output(something)" outgoing="_StLf8q1MEeOdBunZhTRw1w" incoming="_StMuiq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuSa1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuSq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_StMuS61MEeOdBunZhTRw1w" name="Output(obj)" outgoing="_StLf861MEeOdBunZhTRw1w" incoming="_StMui61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StMuTK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StMuTa1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuTq1MEeOdBunZhTRw1w" source="_StLgBa1MEeOdBunZhTRw1w" target="_StMFQq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuT61MEeOdBunZhTRw1w" source="_StLgBK1MEeOdBunZhTRw1w" target="_StMFPq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuUK1MEeOdBunZhTRw1w" source="_StLgBa1MEeOdBunZhTRw1w" target="_StMFTa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuUa1MEeOdBunZhTRw1w" source="_StMFPq1MEeOdBunZhTRw1w" target="_StMFSa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuUq1MEeOdBunZhTRw1w" source="_StMFSa1MEeOdBunZhTRw1w" target="_StMFVK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuU61MEeOdBunZhTRw1w" source="_StMFVK1MEeOdBunZhTRw1w" target="_StMFg61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuVK1MEeOdBunZhTRw1w" source="_StMFg61MEeOdBunZhTRw1w" target="_StMFk61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuVa1MEeOdBunZhTRw1w" source="_StMFlK1MEeOdBunZhTRw1w" target="_StMFpq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuVq1MEeOdBunZhTRw1w" source="_StMFk61MEeOdBunZhTRw1w" target="_StMFo61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuV61MEeOdBunZhTRw1w" source="_StMFlK1MEeOdBunZhTRw1w" target="_StMFya1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuWK1MEeOdBunZhTRw1w" source="_StMFo61MEeOdBunZhTRw1w" target="_StMFxq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuWa1MEeOdBunZhTRw1w" source="_StMFlK1MEeOdBunZhTRw1w" target="_StMF7K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuWq1MEeOdBunZhTRw1w" source="_StMFxq1MEeOdBunZhTRw1w" target="_StMF6a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuW61MEeOdBunZhTRw1w" source="_StMFlK1MEeOdBunZhTRw1w" target="_StMGD61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuXK1MEeOdBunZhTRw1w" source="_StMF6a1MEeOdBunZhTRw1w" target="_StMGDK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuXa1MEeOdBunZhTRw1w" source="_StMFlK1MEeOdBunZhTRw1w" target="_StMGMq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuXq1MEeOdBunZhTRw1w" source="_StMGDK1MEeOdBunZhTRw1w" target="_StMGL61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuX61MEeOdBunZhTRw1w" source="_StMFhK1MEeOdBunZhTRw1w" target="_StMGV61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuYK1MEeOdBunZhTRw1w" source="_StMFlK1MEeOdBunZhTRw1w" target="_StMGWa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuYa1MEeOdBunZhTRw1w" source="_StMGL61MEeOdBunZhTRw1w" target="_StMGUq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuYq1MEeOdBunZhTRw1w" source="_StMGU61MEeOdBunZhTRw1w" target="_StMGia1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuY61MEeOdBunZhTRw1w" source="_StMGUq1MEeOdBunZhTRw1w" target="_StMGYa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuZK1MEeOdBunZhTRw1w" source="_StMGU61MEeOdBunZhTRw1w" target="_StMGo61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuZa1MEeOdBunZhTRw1w" source="_StMGYa1MEeOdBunZhTRw1w" target="_StMGjK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuZq1MEeOdBunZhTRw1w" source="_StMGU61MEeOdBunZhTRw1w" target="_StMGt61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuZ61MEeOdBunZhTRw1w" source="_StMGjK1MEeOdBunZhTRw1w" target="_StMGpq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuaK1MEeOdBunZhTRw1w" source="_StMGU61MEeOdBunZhTRw1w" target="_StMGy61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuaa1MEeOdBunZhTRw1w" source="_StMGpq1MEeOdBunZhTRw1w" target="_StMGuq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuaq1MEeOdBunZhTRw1w" source="_StMGU61MEeOdBunZhTRw1w" target="_StMG_q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMua61MEeOdBunZhTRw1w" source="_StMGuq1MEeOdBunZhTRw1w" target="_StMGzq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMubK1MEeOdBunZhTRw1w" source="_StMGU61MEeOdBunZhTRw1w" target="_StMsea1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuba1MEeOdBunZhTRw1w" source="_StMGzq1MEeOdBunZhTRw1w" target="_StMsSa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMubq1MEeOdBunZhTRw1w" source="_StMGU61MEeOdBunZhTRw1w" target="_StMsrK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMub61MEeOdBunZhTRw1w" source="_StMsSa1MEeOdBunZhTRw1w" target="_StMshK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMucK1MEeOdBunZhTRw1w" source="_StMGU61MEeOdBunZhTRw1w" target="_StMs2a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuca1MEeOdBunZhTRw1w" source="_StMshK1MEeOdBunZhTRw1w" target="_StMsyK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMucq1MEeOdBunZhTRw1w" source="_StMsyK1MEeOdBunZhTRw1w" target="_StMtHq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuc61MEeOdBunZhTRw1w" source="_StMtHq1MEeOdBunZhTRw1w" target="_StMtY61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMudK1MEeOdBunZhTRw1w" source="_StMtY61MEeOdBunZhTRw1w" target="_StMtqK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuda1MEeOdBunZhTRw1w" source="_StMtqK1MEeOdBunZhTRw1w" target="_StMtsa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMudq1MEeOdBunZhTRw1w" source="_StMtsq1MEeOdBunZhTRw1w" target="_StMtya1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMud61MEeOdBunZhTRw1w" source="_StMtqa1MEeOdBunZhTRw1w" target="_StMt5a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMueK1MEeOdBunZhTRw1w" source="_StMtsa1MEeOdBunZhTRw1w" target="_StMtwa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMuea1MEeOdBunZhTRw1w" source="_StMtwa1MEeOdBunZhTRw1w" target="_StMt861MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMueq1MEeOdBunZhTRw1w" source="_StMtsq1MEeOdBunZhTRw1w" target="_StMuC61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMue61MEeOdBunZhTRw1w" source="_StMt9K1MEeOdBunZhTRw1w" target="_StMuFq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StMufK1MEeOdBunZhTRw1w" source="_StMt861MEeOdBunZhTRw1w" target="_StMuA61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMufa1MEeOdBunZhTRw1w" source="_StMFP61MEeOdBunZhTRw1w" target="_StMuIa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMufq1MEeOdBunZhTRw1w" source="_StMFSq1MEeOdBunZhTRw1w" target="_StMuJK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuf61MEeOdBunZhTRw1w" source="_StMFVa1MEeOdBunZhTRw1w" target="_StMuJ61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMugK1MEeOdBunZhTRw1w" source="_StMGYq1MEeOdBunZhTRw1w" target="_StMuKq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuga1MEeOdBunZhTRw1w" source="_StMGja1MEeOdBunZhTRw1w" target="_StMuLa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMugq1MEeOdBunZhTRw1w" source="_StMGp61MEeOdBunZhTRw1w" target="_StMuMK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMug61MEeOdBunZhTRw1w" source="_StMGu61MEeOdBunZhTRw1w" target="_StMuM61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuhK1MEeOdBunZhTRw1w" source="_StMGz61MEeOdBunZhTRw1w" target="_StMuNq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuha1MEeOdBunZhTRw1w" source="_StMsSq1MEeOdBunZhTRw1w" target="_StMuOa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuhq1MEeOdBunZhTRw1w" source="_StMsha1MEeOdBunZhTRw1w" target="_StMuPK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuh61MEeOdBunZhTRw1w" source="_StMsya1MEeOdBunZhTRw1w" target="_StMuP61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuiK1MEeOdBunZhTRw1w" source="_StMtH61MEeOdBunZhTRw1w" target="_StMuQq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuia1MEeOdBunZhTRw1w" source="_StMtZK1MEeOdBunZhTRw1w" target="_StMuRa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMuiq1MEeOdBunZhTRw1w" source="_StMtsq1MEeOdBunZhTRw1w" target="_StMuSK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StMui61MEeOdBunZhTRw1w" source="_StMt9K1MEeOdBunZhTRw1w" target="_StMuS61MEeOdBunZhTRw1w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLf9K1MEeOdBunZhTRw1w" name="Output(sum)" incoming="_StLf5a1MEeOdBunZhTRw1w" parameter="_StLfuK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLf9a1MEeOdBunZhTRw1w" name="Output(remainder)" incoming="_StLf5q1MEeOdBunZhTRw1w" parameter="_StLfu61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLf9q1MEeOdBunZhTRw1w" name="Output(bad)" incoming="_StLf561MEeOdBunZhTRw1w" parameter="_StLfvq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLf961MEeOdBunZhTRw1w" name="Output(select)" incoming="_StLf6K1MEeOdBunZhTRw1w" parameter="_StLfwa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLf-K1MEeOdBunZhTRw1w" name="Output(reject)" incoming="_StLf6a1MEeOdBunZhTRw1w" parameter="_StLfxK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLf-a1MEeOdBunZhTRw1w" name="Output(collect)" incoming="_StLf6q1MEeOdBunZhTRw1w" parameter="_StLfx61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLf-q1MEeOdBunZhTRw1w" name="Output(iterate)" incoming="_StLf661MEeOdBunZhTRw1w" parameter="_StLfyq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLf-61MEeOdBunZhTRw1w" name="Output(forAll)" incoming="_StLf7K1MEeOdBunZhTRw1w" parameter="_StLfza1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLf_K1MEeOdBunZhTRw1w" name="Output(exists)" incoming="_StLf7a1MEeOdBunZhTRw1w" parameter="_StLf0K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLf_a1MEeOdBunZhTRw1w" name="Output(one)" incoming="_StLf7q1MEeOdBunZhTRw1w" parameter="_StLf061MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLf_q1MEeOdBunZhTRw1w" name="Output(unique)" incoming="_StLf761MEeOdBunZhTRw1w" parameter="_StLf1q1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLf_61MEeOdBunZhTRw1w" name="Output(jack)" incoming="_StLf8K1MEeOdBunZhTRw1w" parameter="_StLf2a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLgAK1MEeOdBunZhTRw1w" name="Output(joan)" incoming="_StLf8a1MEeOdBunZhTRw1w" parameter="_StLf3K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLgAa1MEeOdBunZhTRw1w" name="Output(something)" incoming="_StLf8q1MEeOdBunZhTRw1w" parameter="_StLf361MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_StLgAq1MEeOdBunZhTRw1w" name="Output(obj)" incoming="_StLf861MEeOdBunZhTRw1w" parameter="_StLf4q1MEeOdBunZhTRw1w"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_StMujK1MEeOdBunZhTRw1w" name="AssertEqual" group="_StNTbq1MEeOdBunZhTRw1w" node="_StNTaK1MEeOdBunZhTRw1w _StNTaa1MEeOdBunZhTRw1w _StNTaq1MEeOdBunZhTRw1w _StNTa61MEeOdBunZhTRw1w _StNTbK1MEeOdBunZhTRw1w _StNTba1MEeOdBunZhTRw1w _StNTbq1MEeOdBunZhTRw1w">
      <packageImport xmi:id="_StNTUK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_StNTUa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_StNTUq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_StNTU61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_StNTVK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_StNTVa1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTVq1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTV61MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_StNTWK1MEeOdBunZhTRw1w" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTWa1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTWq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_StNTW61MEeOdBunZhTRw1w" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTXK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTXa1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTXq1MEeOdBunZhTRw1w" source="_StNTaK1MEeOdBunZhTRw1w" target="_StNTaa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTX61MEeOdBunZhTRw1w" source="_StNTaq1MEeOdBunZhTRw1w" target="_StNTa61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTYK1MEeOdBunZhTRw1w" source="_StNTbK1MEeOdBunZhTRw1w" target="_StNTba1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTYa1MEeOdBunZhTRw1w" source="_StNTa61MEeOdBunZhTRw1w" target="_StNTeq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTYq1MEeOdBunZhTRw1w" source="_StNTba1MEeOdBunZhTRw1w" target="_StNTgq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTY61MEeOdBunZhTRw1w" source="_StNTaa1MEeOdBunZhTRw1w" target="_StNTtK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTZK1MEeOdBunZhTRw1w" source="_StNTba1MEeOdBunZhTRw1w" target="_StNT1a1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTZa1MEeOdBunZhTRw1w" source="_StNTba1MEeOdBunZhTRw1w" target="_StNT561MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTZq1MEeOdBunZhTRw1w" source="_StNTba1MEeOdBunZhTRw1w" target="_StNUBa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTZ61MEeOdBunZhTRw1w" source="_StNTba1MEeOdBunZhTRw1w" target="_StNUKa1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_StNTbq1MEeOdBunZhTRw1w" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_StNTb61MEeOdBunZhTRw1w" name="IfStatement@67908e95">
          <node xmi:type="uml:TestIdentityAction" xmi:id="_StNTcK1MEeOdBunZhTRw1w" name="Test(==)" incoming="_StNUaK1MEeOdBunZhTRw1w">
            <first xmi:id="_StNTca1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_StNUX61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTcq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTc61MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_StNTdK1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_StNUcq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTda1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTdq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_StNTd61MEeOdBunZhTRw1w" name="Test(==).second" incoming="_StNUYa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTeK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTea1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_StNTeq1MEeOdBunZhTRw1w" name="Fork(Fork(value1))" outgoing="_StNUX61MEeOdBunZhTRw1w _StNUYK1MEeOdBunZhTRw1w" incoming="_StNTYa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNTe61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_StNTfK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_StNUYK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTfa1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTfq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_StNTf61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_StNUY61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTgK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTga1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_StNTgq1MEeOdBunZhTRw1w" name="Fork(Fork(value2))" outgoing="_StNUYa1MEeOdBunZhTRw1w _StNUYq1MEeOdBunZhTRw1w" incoming="_StNTYq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNTg61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_StNThK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_StNUYq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTha1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNThq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_StNTh61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_StNUZK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTiK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTia1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_StNTiq1MEeOdBunZhTRw1w" name="Initial(Test(==))" outgoing="_StNUbK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_StNTi61MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_StNUZa1MEeOdBunZhTRw1w _StNUba1MEeOdBunZhTRw1w" incoming="_StNUY61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_StNTjK1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_StNUZq1MEeOdBunZhTRw1w _StNUZ61MEeOdBunZhTRw1w" incoming="_StNUZK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNTja1MEeOdBunZhTRw1w" name="Call(Not)" incoming="_StNUaq1MEeOdBunZhTRw1w">
            <argument xmi:id="_StNTjq1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_StNUZa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTj61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTkK1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_StNTka1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_StNUc61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTkq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTk61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNTlK1MEeOdBunZhTRw1w" name="Call(Not)" incoming="_StNUcK1MEeOdBunZhTRw1w">
            <argument xmi:id="_StNTla1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_StNUZq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTlq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTl61MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_StNTmK1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_StNUdK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTma1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTmq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_StNTm61MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_StNUaK1MEeOdBunZhTRw1w _StNUaq1MEeOdBunZhTRw1w" incoming="_StNUZ61MEeOdBunZhTRw1w _StNUbq1MEeOdBunZhTRw1w" decisionInputFlow="_StNUZ61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_StNTnK1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_StNUbq1MEeOdBunZhTRw1w _StNUcK1MEeOdBunZhTRw1w" incoming="_StNUbK1MEeOdBunZhTRw1w _StNUba1MEeOdBunZhTRw1w" decisionInputFlow="_StNUba1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:MergeNode" xmi:id="_StNTna1MEeOdBunZhTRw1w" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" outgoing="_StNUda1MEeOdBunZhTRw1w" incoming="_StNUcq1MEeOdBunZhTRw1w _StNUc61MEeOdBunZhTRw1w _StNUdK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNTnq1MEeOdBunZhTRw1w" name="Call(Not)">
            <argument xmi:id="_StNTn61MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_StNUda1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNToK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNToa1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_StNToq1MEeOdBunZhTRw1w" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTo61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTpK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNTpa1MEeOdBunZhTRw1w" name="ExpressionStatement@22d6c624" outgoing="_StNUdq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNTpq1MEeOdBunZhTRw1w" name="Call(Write)" incoming="_StNTza1MEeOdBunZhTRw1w" behavior="_StN8Pq1MEeOdBunZhTRw1w">
              <argument xmi:id="_StNTp61MEeOdBunZhTRw1w" name="Call(Write).argument(value)" incoming="_StNTzK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTqK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTqa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNTqq1MEeOdBunZhTRw1w" name="Tuple@62d141a7" outgoing="_StNTza1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StNTq61MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_StNTrK1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;).result" outgoing="_StNTya1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTra1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTrq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_StNTr61MEeOdBunZhTRw1w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNTsK1MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_StNTsa1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_StNTya1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTsq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTs61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_StNTtK1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_StNTY61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTta1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTtq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_StNTt61MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_StNTyq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTuK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTua1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StNTuq1MEeOdBunZhTRw1w" name="Value(&quot;==&quot;)">
                <result xmi:id="_StNTu61MEeOdBunZhTRw1w" name="Value(&quot;==&quot;).result" outgoing="_StNTy61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTvK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTva1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_StNTvq1MEeOdBunZhTRw1w" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNTv61MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_StNTwK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_StNTyq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTwa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTwq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_StNTw61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_StNTy61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTxK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTxa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_StNTxq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_StNTzK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNTx61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNTyK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTya1MEeOdBunZhTRw1w" source="_StNTrK1MEeOdBunZhTRw1w" target="_StNTsa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTyq1MEeOdBunZhTRw1w" source="_StNTt61MEeOdBunZhTRw1w" target="_StNTwK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTy61MEeOdBunZhTRw1w" source="_StNTu61MEeOdBunZhTRw1w" target="_StNTw61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StNTzK1MEeOdBunZhTRw1w" source="_StNTxq1MEeOdBunZhTRw1w" target="_StNTp61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StNTza1MEeOdBunZhTRw1w" source="_StNTqq1MEeOdBunZhTRw1w" target="_StNTpq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNTzq1MEeOdBunZhTRw1w" name="ExpressionStatement@6915bf98" outgoing="_StNUd61MEeOdBunZhTRw1w" incoming="_StNUdq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNTz61MEeOdBunZhTRw1w" name="Call(Write)" incoming="_StNUSa1MEeOdBunZhTRw1w" behavior="_StN8Pq1MEeOdBunZhTRw1w">
              <argument xmi:id="_StNT0K1MEeOdBunZhTRw1w" name="Call(Write).argument(value)" incoming="_StNUSK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNT0a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNT0q1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNT061MEeOdBunZhTRw1w" name="Tuple@6d1e4208" outgoing="_StNUSa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNT1K1MEeOdBunZhTRw1w" name="Call(IsEmpty)">
                <argument xmi:id="_StNT1a1MEeOdBunZhTRw1w" name="Call(IsEmpty).argument(seq)" incoming="_StNTZK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNT1q1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNT161MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_StNT2K1MEeOdBunZhTRw1w" name="Call(IsEmpty).result()" outgoing="_StNUQa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNT2a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNT2q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNT261MEeOdBunZhTRw1w" name="ConditionalTestExpression@647af9aa.operand2" incoming="_StNUQq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StNT3K1MEeOdBunZhTRw1w" name="Value(&quot;null&quot;)">
                  <result xmi:id="_StNT3a1MEeOdBunZhTRw1w" name="Value(&quot;null&quot;).result" outgoing="_StNT5K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNT3q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNT361MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_StNT4K1MEeOdBunZhTRw1w" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <structuredNodeOutput xmi:id="_StNT4a1MEeOdBunZhTRw1w" name="ConditionalTestExpression@647af9aa.operand2.result" outgoing="_StNURq1MEeOdBunZhTRw1w" incoming="_StNT5K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNT4q1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNT461MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StNT5K1MEeOdBunZhTRw1w" source="_StNT3a1MEeOdBunZhTRw1w" target="_StNT4a1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNT5a1MEeOdBunZhTRw1w" name="ConditionalTestExpression@647af9aa.operand3" incoming="_StNURK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_StNT5q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_StNT561MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).object" incoming="_StNTZa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNT6K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNT6a1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_StNT6q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).result" outgoing="_StNUNa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNT661MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNT7K1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNT7a1MEeOdBunZhTRw1w" name="ConditionalTestExpression@3c1b622d.operand2" incoming="_StNUNq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StNT7q1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_StNT761MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;).result" outgoing="_StNUI61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNT8K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNT8a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_StNT8q1MEeOdBunZhTRw1w" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_StNT861MEeOdBunZhTRw1w" name="CastExpression@16781aaa" mode="parallel" outputElement="_StNUBq1MEeOdBunZhTRw1w" inputElement="_StNUBa1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:MergeNode" xmi:id="_StNT9K1MEeOdBunZhTRw1w" name="Merge(CastExpression@16781aaa.operand)" outgoing="_StNUBK1MEeOdBunZhTRw1w" incoming="_StNUAa1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_StNT9a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_StNT9q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).object" incoming="_StNT_q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNT961MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNT-K1MEeOdBunZhTRw1w" value="1"/>
                      </object>
                      <result xmi:id="_StNT-a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).result" outgoing="_StNUAK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNT-q1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNT-61MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_StNT_K1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(String).object)" outgoing="_StNT_q1MEeOdBunZhTRw1w _StNT_61MEeOdBunZhTRw1w" incoming="_StNUA61MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_StNT_a1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(String).result)" outgoing="_StNUAa1MEeOdBunZhTRw1w" incoming="_StNT_61MEeOdBunZhTRw1w _StNUAK1MEeOdBunZhTRw1w" decisionInputFlow="_StNUAK1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_StNT_q1MEeOdBunZhTRw1w" source="_StNT_K1MEeOdBunZhTRw1w" target="_StNT9q1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_StNT_61MEeOdBunZhTRw1w" source="_StNT_K1MEeOdBunZhTRw1w" target="_StNT_a1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUAK1MEeOdBunZhTRw1w" source="_StNT-a1MEeOdBunZhTRw1w" target="_StNT_a1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUAa1MEeOdBunZhTRw1w" source="_StNT_a1MEeOdBunZhTRw1w" target="_StNT9K1MEeOdBunZhTRw1w">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_StNUAq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUA61MEeOdBunZhTRw1w" source="_StNUBa1MEeOdBunZhTRw1w" target="_StNT_K1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUBK1MEeOdBunZhTRw1w" source="_StNT9K1MEeOdBunZhTRw1w" target="_StNUBq1MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_StNUBa1MEeOdBunZhTRw1w" name="CastExpression@16781aaa.inputElement" outgoing="_StNUA61MEeOdBunZhTRw1w" incoming="_StNTZq1MEeOdBunZhTRw1w" regionAsInput="_StNT861MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_StNUBq1MEeOdBunZhTRw1w" name="CastExpression@16781aaa.outputElement" outgoing="_StNUJK1MEeOdBunZhTRw1w" incoming="_StNUBK1MEeOdBunZhTRw1w" regionAsOutput="_StNT861MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNUB61MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_StNUCK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_StNUI61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUCa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUCq1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_StNUC61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_StNUJK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUDK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUDa1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_StNUDq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_StNUJa1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUD61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUEK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StNUEa1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_StNUEq1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;).result" outgoing="_StNUJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUE61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUFK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_StNUFa1MEeOdBunZhTRw1w" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNUFq1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_StNUF61MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_StNUJa1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUGK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUGa1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_StNUGq1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_StNUJq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUG61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUHK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_StNUHa1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_StNUJ61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUHq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUH61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <structuredNodeOutput xmi:id="_StNUIK1MEeOdBunZhTRw1w" name="ConditionalTestExpression@3c1b622d.operand2.result" outgoing="_StNUOq1MEeOdBunZhTRw1w" incoming="_StNUJ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUIa1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUIq1MEeOdBunZhTRw1w" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUI61MEeOdBunZhTRw1w" source="_StNT761MEeOdBunZhTRw1w" target="_StNUCK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUJK1MEeOdBunZhTRw1w" source="_StNUBq1MEeOdBunZhTRw1w" target="_StNUC61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUJa1MEeOdBunZhTRw1w" source="_StNUDq1MEeOdBunZhTRw1w" target="_StNUF61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUJq1MEeOdBunZhTRw1w" source="_StNUEq1MEeOdBunZhTRw1w" target="_StNUGq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUJ61MEeOdBunZhTRw1w" source="_StNUHa1MEeOdBunZhTRw1w" target="_StNUIK1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNUKK1MEeOdBunZhTRw1w" name="ConditionalTestExpression@3c1b622d.operand3" incoming="_StNUOK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:MergeNode" xmi:id="_StNUKa1MEeOdBunZhTRw1w" name="Merge(Fork(value2))" outgoing="_StNULa1MEeOdBunZhTRw1w" incoming="_StNTZ61MEeOdBunZhTRw1w"/>
                  <structuredNodeOutput xmi:id="_StNUKq1MEeOdBunZhTRw1w" name="ConditionalTestExpression@3c1b622d.operand3.result" outgoing="_StNUO61MEeOdBunZhTRw1w" incoming="_StNULa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUK61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNULK1MEeOdBunZhTRw1w" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StNULa1MEeOdBunZhTRw1w" source="_StNUKa1MEeOdBunZhTRw1w" target="_StNUKq1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_StNULq1MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@3c1b622d)" outgoing="_StNUNK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_StNUL61MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@3c1b622d)" outgoing="_StNUNq1MEeOdBunZhTRw1w _StNUOK1MEeOdBunZhTRw1w" incoming="_StNUNK1MEeOdBunZhTRw1w _StNUNa1MEeOdBunZhTRw1w" decisionInputFlow="_StNUNa1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_StNUMK1MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@3c1b622d.result)" outgoing="_StNUPK1MEeOdBunZhTRw1w" incoming="_StNUOq1MEeOdBunZhTRw1w _StNUO61MEeOdBunZhTRw1w"/>
                <structuredNodeOutput xmi:id="_StNUMa1MEeOdBunZhTRw1w" name="ConditionalTestExpression@647af9aa.operand3.result" outgoing="_StNUR61MEeOdBunZhTRw1w" incoming="_StNUPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUMq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUM61MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_StNUNK1MEeOdBunZhTRw1w" source="_StNULq1MEeOdBunZhTRw1w" target="_StNUL61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUNa1MEeOdBunZhTRw1w" source="_StNT6q1MEeOdBunZhTRw1w" target="_StNUL61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_StNUNq1MEeOdBunZhTRw1w" source="_StNUL61MEeOdBunZhTRw1w" target="_StNT7a1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_StNUN61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_StNUOK1MEeOdBunZhTRw1w" source="_StNUL61MEeOdBunZhTRw1w" target="_StNUKK1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_StNUOa1MEeOdBunZhTRw1w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUOq1MEeOdBunZhTRw1w" source="_StNUIK1MEeOdBunZhTRw1w" target="_StNUMK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUO61MEeOdBunZhTRw1w" source="_StNUKq1MEeOdBunZhTRw1w" target="_StNUMK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUPK1MEeOdBunZhTRw1w" source="_StNUMK1MEeOdBunZhTRw1w" target="_StNUMa1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_StNUPa1MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@647af9aa)" outgoing="_StNUQK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_StNUPq1MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@647af9aa)" outgoing="_StNUQq1MEeOdBunZhTRw1w _StNURK1MEeOdBunZhTRw1w" incoming="_StNUQK1MEeOdBunZhTRw1w _StNUQa1MEeOdBunZhTRw1w" decisionInputFlow="_StNUQa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_StNUP61MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@647af9aa.result)" outgoing="_StNUSK1MEeOdBunZhTRw1w" incoming="_StNURq1MEeOdBunZhTRw1w _StNUR61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_StNUQK1MEeOdBunZhTRw1w" source="_StNUPa1MEeOdBunZhTRw1w" target="_StNUPq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUQa1MEeOdBunZhTRw1w" source="_StNT2K1MEeOdBunZhTRw1w" target="_StNUPq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_StNUQq1MEeOdBunZhTRw1w" source="_StNUPq1MEeOdBunZhTRw1w" target="_StNT261MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_StNUQ61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_StNURK1MEeOdBunZhTRw1w" source="_StNUPq1MEeOdBunZhTRw1w" target="_StNT5a1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_StNURa1MEeOdBunZhTRw1w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StNURq1MEeOdBunZhTRw1w" source="_StNT4a1MEeOdBunZhTRw1w" target="_StNUP61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUR61MEeOdBunZhTRw1w" source="_StNUMa1MEeOdBunZhTRw1w" target="_StNUP61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUSK1MEeOdBunZhTRw1w" source="_StNUP61MEeOdBunZhTRw1w" target="_StNT0K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StNUSa1MEeOdBunZhTRw1w" source="_StNT061MEeOdBunZhTRw1w" target="_StNTz61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNUSq1MEeOdBunZhTRw1w" name="ExpressionStatement@3658e21a" incoming="_StNUd61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNUS61MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_StNUWa1MEeOdBunZhTRw1w">
              <argument xmi:id="_StNUTK1MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_StNUWK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUTa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUTq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_StNUT61MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUUK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUUa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNUUq1MEeOdBunZhTRw1w" name="Tuple@8194e0f" outgoing="_StNUWa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StNUU61MEeOdBunZhTRw1w" name="Value(&quot;&quot;)">
                <result xmi:id="_StNUVK1MEeOdBunZhTRw1w" name="Value(&quot;&quot;).result" outgoing="_StNUWK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUVa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUVq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_StNUV61MEeOdBunZhTRw1w" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUWK1MEeOdBunZhTRw1w" source="_StNUVK1MEeOdBunZhTRw1w" target="_StNUTK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StNUWa1MEeOdBunZhTRw1w" source="_StNUUq1MEeOdBunZhTRw1w" target="_StNUS61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StNUWq1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_StNUW61MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUXK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUXa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_StNUXq1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUX61MEeOdBunZhTRw1w" source="_StNTeq1MEeOdBunZhTRw1w" target="_StNTca1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUYK1MEeOdBunZhTRw1w" source="_StNTeq1MEeOdBunZhTRw1w" target="_StNTfK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUYa1MEeOdBunZhTRw1w" source="_StNTgq1MEeOdBunZhTRw1w" target="_StNTd61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUYq1MEeOdBunZhTRw1w" source="_StNTgq1MEeOdBunZhTRw1w" target="_StNThK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUY61MEeOdBunZhTRw1w" source="_StNTf61MEeOdBunZhTRw1w" target="_StNTi61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUZK1MEeOdBunZhTRw1w" source="_StNTh61MEeOdBunZhTRw1w" target="_StNTjK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUZa1MEeOdBunZhTRw1w" source="_StNTi61MEeOdBunZhTRw1w" target="_StNTjq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUZq1MEeOdBunZhTRw1w" source="_StNTjK1MEeOdBunZhTRw1w" target="_StNTla1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUZ61MEeOdBunZhTRw1w" source="_StNTjK1MEeOdBunZhTRw1w" target="_StNTm61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StNUaK1MEeOdBunZhTRw1w" source="_StNTm61MEeOdBunZhTRw1w" target="_StNTcK1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_StNUaa1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StNUaq1MEeOdBunZhTRw1w" source="_StNTm61MEeOdBunZhTRw1w" target="_StNTja1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_StNUa61MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StNUbK1MEeOdBunZhTRw1w" source="_StNTiq1MEeOdBunZhTRw1w" target="_StNTnK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUba1MEeOdBunZhTRw1w" source="_StNTi61MEeOdBunZhTRw1w" target="_StNTnK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StNUbq1MEeOdBunZhTRw1w" source="_StNTnK1MEeOdBunZhTRw1w" target="_StNTm61MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_StNUb61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StNUcK1MEeOdBunZhTRw1w" source="_StNTnK1MEeOdBunZhTRw1w" target="_StNTlK1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_StNUca1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUcq1MEeOdBunZhTRw1w" source="_StNTdK1MEeOdBunZhTRw1w" target="_StNTna1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUc61MEeOdBunZhTRw1w" source="_StNTka1MEeOdBunZhTRw1w" target="_StNTna1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUdK1MEeOdBunZhTRw1w" source="_StNTmK1MEeOdBunZhTRw1w" target="_StNTna1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUda1MEeOdBunZhTRw1w" source="_StNTna1MEeOdBunZhTRw1w" target="_StNTn61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StNUdq1MEeOdBunZhTRw1w" source="_StNTpa1MEeOdBunZhTRw1w" target="_StNTzq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StNUd61MEeOdBunZhTRw1w" source="_StNTzq1MEeOdBunZhTRw1w" target="_StNUSq1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_StNUeK1MEeOdBunZhTRw1w" body="_StNTpa1MEeOdBunZhTRw1w _StNTzq1MEeOdBunZhTRw1w _StNUSq1MEeOdBunZhTRw1w" decider="_StNToq1MEeOdBunZhTRw1w" successorClause="_StNUea1MEeOdBunZhTRw1w" test="_StNTcK1MEeOdBunZhTRw1w _StNTe61MEeOdBunZhTRw1w _StNTg61MEeOdBunZhTRw1w _StNTja1MEeOdBunZhTRw1w _StNTlK1MEeOdBunZhTRw1w _StNTnq1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_StNUea1MEeOdBunZhTRw1w" decider="_StNUW61MEeOdBunZhTRw1w" predecessorClause="_StNUeK1MEeOdBunZhTRw1w" test="_StNUWq1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_StNTaK1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_StNTXq1MEeOdBunZhTRw1w" parameter="_StNTVa1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_StNTaa1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_StNTY61MEeOdBunZhTRw1w" incoming="_StNTXq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_StNTaq1MEeOdBunZhTRw1w" name="Input(value1)" outgoing="_StNTX61MEeOdBunZhTRw1w" parameter="_StNTWK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_StNTa61MEeOdBunZhTRw1w" name="Fork(value1)" outgoing="_StNTYa1MEeOdBunZhTRw1w" incoming="_StNTX61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_StNTbK1MEeOdBunZhTRw1w" name="Input(value2)" outgoing="_StNTYK1MEeOdBunZhTRw1w" parameter="_StNTW61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_StNTba1MEeOdBunZhTRw1w" name="Fork(value2)" outgoing="_StNTYq1MEeOdBunZhTRw1w _StNTZK1MEeOdBunZhTRw1w _StNTZa1MEeOdBunZhTRw1w _StNTZq1MEeOdBunZhTRw1w _StNTZ61MEeOdBunZhTRw1w" incoming="_StNTYK1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_StNUeq1MEeOdBunZhTRw1w" name="AssertList" group="_StNUmq1MEeOdBunZhTRw1w" node="_StNUlK1MEeOdBunZhTRw1w _StNUla1MEeOdBunZhTRw1w _StNUlq1MEeOdBunZhTRw1w _StNUl61MEeOdBunZhTRw1w _StNUmK1MEeOdBunZhTRw1w _StNUma1MEeOdBunZhTRw1w _StNUmq1MEeOdBunZhTRw1w">
      <packageImport xmi:id="_StNUe61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_StNUfK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_StNUfa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_StNUfq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_StNUf61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_StNUgK1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUga1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUgq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_StNUg61MEeOdBunZhTRw1w" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUhK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUha1MEeOdBunZhTRw1w" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_StNUhq1MEeOdBunZhTRw1w" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUh61MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUiK1MEeOdBunZhTRw1w" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUia1MEeOdBunZhTRw1w" source="_StNUlK1MEeOdBunZhTRw1w" target="_StNUla1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUiq1MEeOdBunZhTRw1w" source="_StNUlq1MEeOdBunZhTRw1w" target="_StNUl61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUi61MEeOdBunZhTRw1w" source="_StNUmK1MEeOdBunZhTRw1w" target="_StNUma1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUjK1MEeOdBunZhTRw1w" source="_StNUla1MEeOdBunZhTRw1w" target="_StNUra1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUja1MEeOdBunZhTRw1w" source="_StNUl61MEeOdBunZhTRw1w" target="_StNUt61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUjq1MEeOdBunZhTRw1w" source="_StNUma1MEeOdBunZhTRw1w" target="_StNUvq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUj61MEeOdBunZhTRw1w" source="_StNUma1MEeOdBunZhTRw1w" target="_StN7F61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUkK1MEeOdBunZhTRw1w" source="_StNUl61MEeOdBunZhTRw1w" target="_StN7Gq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUka1MEeOdBunZhTRw1w" source="_StNUla1MEeOdBunZhTRw1w" target="_StN7Ha1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUkq1MEeOdBunZhTRw1w" source="_StNUl61MEeOdBunZhTRw1w" target="_StN7Ta1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUk61MEeOdBunZhTRw1w" source="_StNUma1MEeOdBunZhTRw1w" target="_StN7VK1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_StNUmq1MEeOdBunZhTRw1w" name="Body(AssertList)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNUm61MEeOdBunZhTRw1w" name="ExpressionStatement@1da3fa09" outgoing="_StN7ha1MEeOdBunZhTRw1w">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNUnK1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_StNUyK1MEeOdBunZhTRw1w" behavior="_StMujK1MEeOdBunZhTRw1w">
            <argument xmi:id="_StNUna1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_StNUxa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUnq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUn61MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <argument xmi:id="_StNUoK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_StNUxq1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUoa1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUoq1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <argument xmi:id="_StNUo61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_StNUx61MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUpK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUpa1MEeOdBunZhTRw1w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNUpq1MEeOdBunZhTRw1w" name="Tuple@606b74e6" outgoing="_StNUyK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StNUp61MEeOdBunZhTRw1w" name="Value(&quot;->size()&quot;)">
              <result xmi:id="_StNUqK1MEeOdBunZhTRw1w" name="Value(&quot;->size()&quot;).result" outgoing="_StNUxK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUqa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUqq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_StNUq61MEeOdBunZhTRw1w" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNUrK1MEeOdBunZhTRw1w" name="Call(Concat)">
              <argument xmi:id="_StNUra1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_StNUjK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUrq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUr61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_StNUsK1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_StNUxK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUsa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUsq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_StNUs61MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_StNUxa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUtK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUta1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNUtq1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_StN8eq1MEeOdBunZhTRw1w">
              <argument xmi:id="_StNUt61MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_StNUja1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUuK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUua1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_StNUuq1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_StNUxq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUu61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUvK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNUva1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_StN8eq1MEeOdBunZhTRw1w">
              <argument xmi:id="_StNUvq1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_StNUjq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUv61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUwK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_StNUwa1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_StNUx61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNUwq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNUw61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUxK1MEeOdBunZhTRw1w" source="_StNUqK1MEeOdBunZhTRw1w" target="_StNUsK1MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUxa1MEeOdBunZhTRw1w" source="_StNUs61MEeOdBunZhTRw1w" target="_StNUna1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUxq1MEeOdBunZhTRw1w" source="_StNUuq1MEeOdBunZhTRw1w" target="_StNUoK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StNUx61MEeOdBunZhTRw1w" source="_StNUwa1MEeOdBunZhTRw1w" target="_StNUo61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StNUyK1MEeOdBunZhTRw1w" source="_StNUpq1MEeOdBunZhTRw1w" target="_StNUnK1MEeOdBunZhTRw1w"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNUya1MEeOdBunZhTRw1w" name="ForStatement@559d34c7" incoming="_StN7ha1MEeOdBunZhTRw1w">
          <node xmi:type="uml:LoopNode" xmi:id="_StNUyq1MEeOdBunZhTRw1w" name="Loop(ForStatement@559d34c7)" incoming="_StN7hK1MEeOdBunZhTRw1w" bodyOutput="_StN6u61MEeOdBunZhTRw1w _StN6vq1MEeOdBunZhTRw1w _StN6wa1MEeOdBunZhTRw1w _StN6zq1MEeOdBunZhTRw1w _StN63a1MEeOdBunZhTRw1w _StN66a1MEeOdBunZhTRw1w" bodyPart="_StNU261MEeOdBunZhTRw1w _StNU3a1MEeOdBunZhTRw1w _StN6x61MEeOdBunZhTRw1w _StN60a1MEeOdBunZhTRw1w _StN61q1MEeOdBunZhTRw1w _StN64K1MEeOdBunZhTRw1w _StN65a1MEeOdBunZhTRw1w" decider="_StNU2K1MEeOdBunZhTRw1w" isTestedFirst="true" test="_StNU0a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_StNUy61MEeOdBunZhTRw1w" name="Fork(ForStatement@559d34c7.loopVariable(expected))" outgoing="_StN7Aa1MEeOdBunZhTRw1w _StN7Aq1MEeOdBunZhTRw1w" incoming="_StN67a1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_StNUzK1MEeOdBunZhTRw1w" name="Fork(ForStatement@559d34c7.loopVariable(list))" outgoing="_StN7AK1MEeOdBunZhTRw1w _StN7A61MEeOdBunZhTRw1w" incoming="_StN67q1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_StNUza1MEeOdBunZhTRw1w" name="Fork(ForStatement@559d34c7.loopVariable(label))" outgoing="_StN6_61MEeOdBunZhTRw1w _StN7BK1MEeOdBunZhTRw1w" incoming="_StN6761MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_StNUzq1MEeOdBunZhTRw1w" name="Fork(ForStatement@559d34c7.loopVariable(i))" outgoing="_StN6-q1MEeOdBunZhTRw1w" incoming="_StN68K1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_StNUz61MEeOdBunZhTRw1w" name="Fork(ForStatement@559d34c7.loopVariable(counter))" outgoing="_StN6861MEeOdBunZhTRw1w _StN6_K1MEeOdBunZhTRw1w" incoming="_StN68a1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_StNU0K1MEeOdBunZhTRw1w" name="Fork(ForStatement@559d34c7.loopVariable(upper))" outgoing="_StN69K1MEeOdBunZhTRw1w _StN6_q1MEeOdBunZhTRw1w" incoming="_StN68q1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNU0a1MEeOdBunZhTRw1w" name="Call(&lt;=)">
              <argument xmi:id="_StNU0q1MEeOdBunZhTRw1w" name="Call(&lt;=).argument(x)" incoming="_StN6861MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNU061MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNU1K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_StNU1a1MEeOdBunZhTRw1w" name="Call(&lt;=).argument(y)" incoming="_StN69K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNU1q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNU161MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_StNU2K1MEeOdBunZhTRw1w" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNU2a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNU2q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNU261MEeOdBunZhTRw1w" name="Values(ForStatement@559d34c7)" outgoing="_StN69q1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ForkNode" xmi:id="_StNU3K1MEeOdBunZhTRw1w" name="Fork(i)" outgoing="_StN6961MEeOdBunZhTRw1w _StN6-K1MEeOdBunZhTRw1w _StN6-a1MEeOdBunZhTRw1w" incoming="_StN69a1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNU3a1MEeOdBunZhTRw1w" name="Body(ForStatement@559d34c7)" incoming="_StN69q1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNU3q1MEeOdBunZhTRw1w" name="ExpressionStatement@778cd80">
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNU361MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_StN6oq1MEeOdBunZhTRw1w" behavior="_StMujK1MEeOdBunZhTRw1w">
                  <argument xmi:id="_StNU4K1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_StN6n61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNU4a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNU4q1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_StNU461MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_StN6oK1MEeOdBunZhTRw1w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNU5K1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNU5a1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_StNU5q1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_StN6oa1MEeOdBunZhTRw1w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNU561MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNU6K1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_StNU6a1MEeOdBunZhTRw1w" name="Tuple@22d41d44" outgoing="_StN6oq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StNU6q1MEeOdBunZhTRw1w" name="Value(&quot;[&quot;)">
                    <result xmi:id="_StNU661MEeOdBunZhTRw1w" name="Value(&quot;[&quot;).result" outgoing="_StN6mK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNU7K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNU7a1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_StNU7q1MEeOdBunZhTRw1w" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_StNU761MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_StNU8K1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_StN6_61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNU8a1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNU8q1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_StNU861MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_StN6mK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StNU9K1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StNU9a1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_StNU9q1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_StN6ma1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6YK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6Ya1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN6Yq1MEeOdBunZhTRw1w" name="Call(ToString)">
                    <argument xmi:id="_StN6Y61MEeOdBunZhTRw1w" name="Call(ToString).argument(x)" incoming="_StN6961MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6ZK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6Za1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_StN6Zq1MEeOdBunZhTRw1w" name="Call(ToString).result(result)" outgoing="_StN6mq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6Z61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6aK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN6aa1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_StN6aq1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_StN6ma1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6a61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6bK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_StN6ba1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_StN6mq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6bq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6b61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_StN6cK1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_StN6m61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6ca1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6cq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StN6c61MEeOdBunZhTRw1w" name="Value(&quot;]&quot;)">
                    <result xmi:id="_StN6dK1MEeOdBunZhTRw1w" name="Value(&quot;]&quot;).result" outgoing="_StN6nK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6da1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6dq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_StN6d61MEeOdBunZhTRw1w" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN6eK1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_StN6ea1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_StN6m61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6eq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6e61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_StN6fK1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_StN6nK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6fa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6fq1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_StN6f61MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_StN6n61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6gK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6ga1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN6gq1MEeOdBunZhTRw1w" name="Call(At)">
                    <argument xmi:id="_StN6g61MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_StN7AK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6hK1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6ha1MEeOdBunZhTRw1w" value="*"/>
                    </argument>
                    <argument xmi:id="_StN6hq1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_StN6na1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6h61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6iK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_StN6ia1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_StN6oK1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6iq1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6i61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_StN6jK1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_StN6na1MEeOdBunZhTRw1w" incoming="_StN6-K1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN6ja1MEeOdBunZhTRw1w" name="Call(At)">
                    <argument xmi:id="_StN6jq1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_StN7Aa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6j61MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6kK1MEeOdBunZhTRw1w" value="*"/>
                    </argument>
                    <argument xmi:id="_StN6ka1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_StN6nq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6kq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6k61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_StN6lK1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_StN6oa1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6la1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6lq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_StN6l61MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_StN6nq1MEeOdBunZhTRw1w" incoming="_StN6-a1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6mK1MEeOdBunZhTRw1w" source="_StNU661MEeOdBunZhTRw1w" target="_StNU861MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6ma1MEeOdBunZhTRw1w" source="_StNU9q1MEeOdBunZhTRw1w" target="_StN6aq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6mq1MEeOdBunZhTRw1w" source="_StN6Zq1MEeOdBunZhTRw1w" target="_StN6ba1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6m61MEeOdBunZhTRw1w" source="_StN6cK1MEeOdBunZhTRw1w" target="_StN6ea1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6nK1MEeOdBunZhTRw1w" source="_StN6dK1MEeOdBunZhTRw1w" target="_StN6fK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6na1MEeOdBunZhTRw1w" source="_StN6jK1MEeOdBunZhTRw1w" target="_StN6hq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6nq1MEeOdBunZhTRw1w" source="_StN6l61MEeOdBunZhTRw1w" target="_StN6ka1MEeOdBunZhTRw1w"/>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6n61MEeOdBunZhTRw1w" source="_StN6f61MEeOdBunZhTRw1w" target="_StNU4K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6oK1MEeOdBunZhTRw1w" source="_StN6ia1MEeOdBunZhTRw1w" target="_StNU461MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6oa1MEeOdBunZhTRw1w" source="_StN6lK1MEeOdBunZhTRw1w" target="_StNU5q1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_StN6oq1MEeOdBunZhTRw1w" source="_StNU6a1MEeOdBunZhTRw1w" target="_StNU361MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN6o61MEeOdBunZhTRw1w" name="Passthru(Fork(expected))">
                <structuredNodeInput xmi:id="_StN6pK1MEeOdBunZhTRw1w" name="Passthru(Fork(expected)).input" outgoing="_StN6qq1MEeOdBunZhTRw1w" incoming="_StN7Aq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6pa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6pq1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_StN6p61MEeOdBunZhTRw1w" name="Passthru(Fork(expected)).output" outgoing="_StN6xK1MEeOdBunZhTRw1w" incoming="_StN6qq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6qK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6qa1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6qq1MEeOdBunZhTRw1w" source="_StN6pK1MEeOdBunZhTRw1w" target="_StN6p61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN6q61MEeOdBunZhTRw1w" name="Passthru(Fork(list))">
                <structuredNodeInput xmi:id="_StN6rK1MEeOdBunZhTRw1w" name="Passthru(Fork(list)).input" outgoing="_StN6sq1MEeOdBunZhTRw1w" incoming="_StN7A61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6ra1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6rq1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_StN6r61MEeOdBunZhTRw1w" name="Passthru(Fork(list)).output" outgoing="_StN6xa1MEeOdBunZhTRw1w" incoming="_StN6sq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6sK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6sa1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6sq1MEeOdBunZhTRw1w" source="_StN6rK1MEeOdBunZhTRw1w" target="_StN6r61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN6s61MEeOdBunZhTRw1w" name="Passthru(Fork(label))">
                <structuredNodeInput xmi:id="_StN6tK1MEeOdBunZhTRw1w" name="Passthru(Fork(label)).input" outgoing="_StN6uq1MEeOdBunZhTRw1w" incoming="_StN7BK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6ta1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6tq1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_StN6t61MEeOdBunZhTRw1w" name="Passthru(Fork(label)).output" outgoing="_StN6xq1MEeOdBunZhTRw1w" incoming="_StN6uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6uK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6ua1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6uq1MEeOdBunZhTRw1w" source="_StN6tK1MEeOdBunZhTRw1w" target="_StN6t61MEeOdBunZhTRw1w"/>
              </node>
              <structuredNodeOutput xmi:id="_StN6u61MEeOdBunZhTRw1w" name="expected" incoming="_StN6xK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6vK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6va1MEeOdBunZhTRw1w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_StN6vq1MEeOdBunZhTRw1w" name="list" incoming="_StN6xa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6v61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6wK1MEeOdBunZhTRw1w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_StN6wa1MEeOdBunZhTRw1w" name="label" incoming="_StN6xq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6wq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6w61MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6xK1MEeOdBunZhTRw1w" source="_StN6p61MEeOdBunZhTRw1w" target="_StN6u61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6xa1MEeOdBunZhTRw1w" source="_StN6r61MEeOdBunZhTRw1w" target="_StN6vq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6xq1MEeOdBunZhTRw1w" source="_StN6t61MEeOdBunZhTRw1w" target="_StN6wa1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN6x61MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_StN6yK1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_StN6-q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6ya1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6yq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_StN6y61MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_StN6-61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6zK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6za1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_StN6zq1MEeOdBunZhTRw1w" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6z61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN60K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StN60a1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_StN60q1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StN6-61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6061MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN61K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_StN61a1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN61q1MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_StN6161MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_StN6_K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN62K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN62a1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_StN62q1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_StN6_a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6261MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN63K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_StN63a1MEeOdBunZhTRw1w" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN63q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6361MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StN64K1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_StN64a1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StN6_a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN64q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6461MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_StN65K1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN65a1MEeOdBunZhTRw1w" name="Passthru(Passthru(upper))">
              <structuredNodeInput xmi:id="_StN65q1MEeOdBunZhTRw1w" name="Passthru(Passthru(upper)).input" outgoing="_StN67K1MEeOdBunZhTRw1w" incoming="_StN6_q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN6561MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN66K1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_StN66a1MEeOdBunZhTRw1w" name="Passthru(Passthru(upper)).output" incoming="_StN67K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN66q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN6661MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StN67K1MEeOdBunZhTRw1w" source="_StN65q1MEeOdBunZhTRw1w" target="_StN66a1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN67a1MEeOdBunZhTRw1w" source="_StN7Ba1MEeOdBunZhTRw1w" target="_StNUy61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN67q1MEeOdBunZhTRw1w" source="_StN7CK1MEeOdBunZhTRw1w" target="_StNUzK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6761MEeOdBunZhTRw1w" source="_StN7C61MEeOdBunZhTRw1w" target="_StNUza1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN68K1MEeOdBunZhTRw1w" source="_StN7Dq1MEeOdBunZhTRw1w" target="_StNUzq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN68a1MEeOdBunZhTRw1w" source="_StN7Ea1MEeOdBunZhTRw1w" target="_StNUz61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN68q1MEeOdBunZhTRw1w" source="_StN7FK1MEeOdBunZhTRw1w" target="_StNU0K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6861MEeOdBunZhTRw1w" source="_StNUz61MEeOdBunZhTRw1w" target="_StNU0q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN69K1MEeOdBunZhTRw1w" source="_StNU0K1MEeOdBunZhTRw1w" target="_StNU1a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN69a1MEeOdBunZhTRw1w" source="_StN7Dq1MEeOdBunZhTRw1w" target="_StNU3K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StN69q1MEeOdBunZhTRw1w" source="_StNU261MEeOdBunZhTRw1w" target="_StNU3a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6961MEeOdBunZhTRw1w" source="_StNU3K1MEeOdBunZhTRw1w" target="_StN6Y61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6-K1MEeOdBunZhTRw1w" source="_StNU3K1MEeOdBunZhTRw1w" target="_StN6jK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6-a1MEeOdBunZhTRw1w" source="_StNU3K1MEeOdBunZhTRw1w" target="_StN6l61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6-q1MEeOdBunZhTRw1w" source="_StNUzq1MEeOdBunZhTRw1w" target="_StN6yK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6-61MEeOdBunZhTRw1w" source="_StN60q1MEeOdBunZhTRw1w" target="_StN6y61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6_K1MEeOdBunZhTRw1w" source="_StNUz61MEeOdBunZhTRw1w" target="_StN6161MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6_a1MEeOdBunZhTRw1w" source="_StN64a1MEeOdBunZhTRw1w" target="_StN62q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6_q1MEeOdBunZhTRw1w" source="_StNU0K1MEeOdBunZhTRw1w" target="_StN65q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN6_61MEeOdBunZhTRw1w" source="_StNUza1MEeOdBunZhTRw1w" target="_StNU8K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7AK1MEeOdBunZhTRw1w" source="_StNUzK1MEeOdBunZhTRw1w" target="_StN6g61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7Aa1MEeOdBunZhTRw1w" source="_StNUy61MEeOdBunZhTRw1w" target="_StN6jq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7Aq1MEeOdBunZhTRw1w" source="_StNUy61MEeOdBunZhTRw1w" target="_StN6pK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7A61MEeOdBunZhTRw1w" source="_StNUzK1MEeOdBunZhTRw1w" target="_StN6rK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7BK1MEeOdBunZhTRw1w" source="_StNUza1MEeOdBunZhTRw1w" target="_StN6tK1MEeOdBunZhTRw1w"/>
            <loopVariable xmi:id="_StN7Ba1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.loopVariable(expected)" outgoing="_StN67a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Bq1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7B61MEeOdBunZhTRw1w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_StN7CK1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.loopVariable(list)" outgoing="_StN67q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Ca1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Cq1MEeOdBunZhTRw1w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_StN7C61MEeOdBunZhTRw1w" name="ForStatement@559d34c7.loopVariable(label)" outgoing="_StN6761MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7DK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Da1MEeOdBunZhTRw1w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_StN7Dq1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.loopVariable(i)" outgoing="_StN68K1MEeOdBunZhTRw1w _StN69a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7D61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7EK1MEeOdBunZhTRw1w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_StN7Ea1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.loopVariable(counter)" outgoing="_StN68a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Eq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7E61MEeOdBunZhTRw1w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_StN7FK1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.loopVariable(upper)" outgoing="_StN68q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Fa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Fq1MEeOdBunZhTRw1w" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_StN7F61MEeOdBunZhTRw1w" name="ForStatement@559d34c7.loopVariableInput(expected)" incoming="_StNUj61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7GK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Ga1MEeOdBunZhTRw1w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_StN7Gq1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.loopVariableInput(list)" incoming="_StNUkK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7G61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7HK1MEeOdBunZhTRw1w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_StN7Ha1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.loopVariableInput(label)" incoming="_StNUka1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Hq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7H61MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_StN7IK1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.loopVariableInput(i)" incoming="_StN7g61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Ia1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Iq1MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_StN7I61MEeOdBunZhTRw1w" name="ForStatement@559d34c7.loopVariableInput(counter)" incoming="_StN7ga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7JK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Ja1MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_StN7Jq1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.loopVariableInput(upper)" incoming="_StN7gq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7J61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7KK1MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <result xmi:id="_StN7Ka1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Kq1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7K61MEeOdBunZhTRw1w" value="*"/>
            </result>
            <result xmi:id="_StN7LK1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7La1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Lq1MEeOdBunZhTRw1w" value="*"/>
            </result>
            <result xmi:id="_StN7L61MEeOdBunZhTRw1w" name="ForStatement@559d34c7.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7MK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Ma1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <result xmi:id="_StN7Mq1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7M61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7NK1MEeOdBunZhTRw1w" value="*"/>
            </result>
            <result xmi:id="_StN7Na1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Nq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7N61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <result xmi:id="_StN7OK1MEeOdBunZhTRw1w" name="ForStatement@559d34c7.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Oa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Oq1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN7O61MEeOdBunZhTRw1w" name="LoopVariables(ForStatement@559d34c7)" outgoing="_StN7hK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StN7PK1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_StN7Pa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StN7gK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Pq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7P61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_StN7QK1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN7Qa1MEeOdBunZhTRw1w" name="Call(Min)" incoming="_StN7e61MEeOdBunZhTRw1w">
              <argument xmi:id="_StN7Qq1MEeOdBunZhTRw1w" name="Call(Min).argument(x)" incoming="_StN7ea1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Q61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7RK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_StN7Ra1MEeOdBunZhTRw1w" name="Call(Min).argument(y)" incoming="_StN7eq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Rq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7R61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_StN7SK1MEeOdBunZhTRw1w" name="Call(Min).result(result)" outgoing="_StN7fK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Sa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Sq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN7S61MEeOdBunZhTRw1w" name="Tuple@62a315e5" outgoing="_StN7e61MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN7TK1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_StN8eq1MEeOdBunZhTRw1w">
                <argument xmi:id="_StN7Ta1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_StNUkq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Tq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7T61MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_StN7UK1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_StN7ea1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Ua1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Uq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN7U61MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_StN8eq1MEeOdBunZhTRw1w">
                <argument xmi:id="_StN7VK1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_StNUk61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Va1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Vq1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_StN7V61MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_StN7eq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7WK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Wa1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StN7Wq1MEeOdBunZhTRw1w" name="Fork(Value(1).result)" outgoing="_StN7g61MEeOdBunZhTRw1w _StN7fa1MEeOdBunZhTRw1w" incoming="_StN7gK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN7W61MEeOdBunZhTRw1w" name="Call(-)">
              <argument xmi:id="_StN7XK1MEeOdBunZhTRw1w" name="Call(-).argument(x)" incoming="_StN7fK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Xa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Xq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_StN7X61MEeOdBunZhTRw1w" name="Call(-).argument(y)" incoming="_StN7fa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7YK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7Ya1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_StN7Yq1MEeOdBunZhTRw1w" name="Call(-).result(result)" outgoing="_StN7fq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Y61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7ZK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StN7Za1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_StN7Zq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StN7f61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7Z61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7aK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_StN7aa1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN7aq1MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_StN7a61MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_StN7fq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7bK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7ba1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_StN7bq1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_StN7f61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7b61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7cK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_StN7ca1MEeOdBunZhTRw1w" name="Call(+).result(result)" outgoing="_StN7gq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7cq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7c61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StN7dK1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_StN7da1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StN7ga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7dq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7d61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_StN7eK1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7ea1MEeOdBunZhTRw1w" source="_StN7UK1MEeOdBunZhTRw1w" target="_StN7Qq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7eq1MEeOdBunZhTRw1w" source="_StN7V61MEeOdBunZhTRw1w" target="_StN7Ra1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StN7e61MEeOdBunZhTRw1w" source="_StN7S61MEeOdBunZhTRw1w" target="_StN7Qa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7fK1MEeOdBunZhTRw1w" source="_StN7SK1MEeOdBunZhTRw1w" target="_StN7XK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7fa1MEeOdBunZhTRw1w" source="_StN7Wq1MEeOdBunZhTRw1w" target="_StN7X61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7fq1MEeOdBunZhTRw1w" source="_StN7Yq1MEeOdBunZhTRw1w" target="_StN7a61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7f61MEeOdBunZhTRw1w" source="_StN7Zq1MEeOdBunZhTRw1w" target="_StN7bq1MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7gK1MEeOdBunZhTRw1w" source="_StN7Pa1MEeOdBunZhTRw1w" target="_StN7Wq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7ga1MEeOdBunZhTRw1w" source="_StN7da1MEeOdBunZhTRw1w" target="_StN7I61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7gq1MEeOdBunZhTRw1w" source="_StN7ca1MEeOdBunZhTRw1w" target="_StN7Jq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7g61MEeOdBunZhTRw1w" source="_StN7Wq1MEeOdBunZhTRw1w" target="_StN7IK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StN7hK1MEeOdBunZhTRw1w" source="_StN7O61MEeOdBunZhTRw1w" target="_StNUyq1MEeOdBunZhTRw1w"/>
        </node>
        <edge xmi:type="uml:ControlFlow" xmi:id="_StN7ha1MEeOdBunZhTRw1w" source="_StNUm61MEeOdBunZhTRw1w" target="_StNUya1MEeOdBunZhTRw1w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_StNUlK1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_StNUia1MEeOdBunZhTRw1w" parameter="_StNUgK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_StNUla1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_StNUjK1MEeOdBunZhTRw1w _StNUka1MEeOdBunZhTRw1w" incoming="_StNUia1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_StNUlq1MEeOdBunZhTRw1w" name="Input(list)" outgoing="_StNUiq1MEeOdBunZhTRw1w" parameter="_StNUg61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_StNUl61MEeOdBunZhTRw1w" name="Fork(list)" outgoing="_StNUja1MEeOdBunZhTRw1w _StNUkq1MEeOdBunZhTRw1w _StNUkK1MEeOdBunZhTRw1w" incoming="_StNUiq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_StNUmK1MEeOdBunZhTRw1w" name="Input(expected)" outgoing="_StNUi61MEeOdBunZhTRw1w" parameter="_StNUhq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_StNUma1MEeOdBunZhTRw1w" name="Fork(expected)" outgoing="_StNUjq1MEeOdBunZhTRw1w _StNUk61MEeOdBunZhTRw1w _StNUj61MEeOdBunZhTRw1w" incoming="_StNUi61MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_StN7hq1MEeOdBunZhTRw1w" name="AssertTrue" group="_StN7mq1MEeOdBunZhTRw1w" node="_StN7lq1MEeOdBunZhTRw1w _StN7l61MEeOdBunZhTRw1w _StN7mK1MEeOdBunZhTRw1w _StN7ma1MEeOdBunZhTRw1w _StN7mq1MEeOdBunZhTRw1w">
      <packageImport xmi:id="_StN7h61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_StN7iK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_StN7ia1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_StN7iq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_StN7i61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_StN7jK1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7ja1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7jq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_StN7j61MEeOdBunZhTRw1w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7kK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7ka1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7kq1MEeOdBunZhTRw1w" source="_StN7lq1MEeOdBunZhTRw1w" target="_StN7l61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7k61MEeOdBunZhTRw1w" source="_StN7mK1MEeOdBunZhTRw1w" target="_StN7ma1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7lK1MEeOdBunZhTRw1w" source="_StN7ma1MEeOdBunZhTRw1w" target="_StN7q61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7la1MEeOdBunZhTRw1w" source="_StN7l61MEeOdBunZhTRw1w" target="_StN7z61MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_StN7mq1MEeOdBunZhTRw1w" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_StN7m61MEeOdBunZhTRw1w" name="IfStatement@65cff094">
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StN7nK1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_StN7na1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_StN75a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7nq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7n61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_StN7oK1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_StN7oa1MEeOdBunZhTRw1w" name="Test(==)">
            <first xmi:id="_StN7oq1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_StN73a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7o61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7pK1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_StN7pa1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_StN74K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7pq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7p61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_StN7qK1MEeOdBunZhTRw1w" name="Test(==).second" incoming="_StN75a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7qa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7qq1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_StN7q61MEeOdBunZhTRw1w" name="Fork(Fork(condition))" outgoing="_StN73a1MEeOdBunZhTRw1w _StN73q1MEeOdBunZhTRw1w" incoming="_StN7lK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN7rK1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_StN7ra1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_StN73q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7rq1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7r61MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_StN7sK1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_StN7361MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7sa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7sq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_StN7s61MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_StN74a1MEeOdBunZhTRw1w _StN74q1MEeOdBunZhTRw1w" incoming="_StN7361MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:MergeNode" xmi:id="_StN7tK1MEeOdBunZhTRw1w" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_StN75q1MEeOdBunZhTRw1w" incoming="_StN74K1MEeOdBunZhTRw1w _StN7461MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_StN7ta1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_StN7461MEeOdBunZhTRw1w" incoming="_StN74a1MEeOdBunZhTRw1w _StN74q1MEeOdBunZhTRw1w" decisionInputFlow="_StN74q1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN7tq1MEeOdBunZhTRw1w" name="Call(Not)">
            <argument xmi:id="_StN7t61MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_StN75q1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7uK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7ua1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_StN7uq1MEeOdBunZhTRw1w" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7u61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7vK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN7va1MEeOdBunZhTRw1w" name="ExpressionStatement@186d940e">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN7vq1MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_StN7161MEeOdBunZhTRw1w">
              <argument xmi:id="_StN7v61MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_StN71q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7wK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7wa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_StN7wq1MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7w61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7xK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN7xa1MEeOdBunZhTRw1w" name="Tuple@54929367" outgoing="_StN7161MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StN7xq1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_StN7x61MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;).result" outgoing="_StN71a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7yK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7ya1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_StN7yq1MEeOdBunZhTRw1w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN7y61MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_StN7zK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_StN71a1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7za1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7zq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_StN7z61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_StN7la1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN70K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN70a1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_StN70q1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_StN71q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN7061MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN71K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_StN71a1MEeOdBunZhTRw1w" source="_StN7x61MEeOdBunZhTRw1w" target="_StN7zK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN71q1MEeOdBunZhTRw1w" source="_StN70q1MEeOdBunZhTRw1w" target="_StN7v61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StN7161MEeOdBunZhTRw1w" source="_StN7xa1MEeOdBunZhTRw1w" target="_StN7vq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StN72K1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_StN72a1MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN72q1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN7261MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_StN73K1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN73a1MEeOdBunZhTRw1w" source="_StN7q61MEeOdBunZhTRw1w" target="_StN7oq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN73q1MEeOdBunZhTRw1w" source="_StN7q61MEeOdBunZhTRw1w" target="_StN7ra1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7361MEeOdBunZhTRw1w" source="_StN7sK1MEeOdBunZhTRw1w" target="_StN7s61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN74K1MEeOdBunZhTRw1w" source="_StN7pa1MEeOdBunZhTRw1w" target="_StN7tK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN74a1MEeOdBunZhTRw1w" source="_StN7s61MEeOdBunZhTRw1w" target="_StN7ta1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN74q1MEeOdBunZhTRw1w" source="_StN7s61MEeOdBunZhTRw1w" target="_StN7ta1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7461MEeOdBunZhTRw1w" source="_StN7ta1MEeOdBunZhTRw1w" target="_StN7tK1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_StN75K1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN75a1MEeOdBunZhTRw1w" source="_StN7na1MEeOdBunZhTRw1w" target="_StN7qK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN75q1MEeOdBunZhTRw1w" source="_StN7tK1MEeOdBunZhTRw1w" target="_StN7t61MEeOdBunZhTRw1w"/>
          <clause xmi:id="_StN7561MEeOdBunZhTRw1w" body="_StN7va1MEeOdBunZhTRw1w" decider="_StN7uq1MEeOdBunZhTRw1w" successorClause="_StN76K1MEeOdBunZhTRw1w" test="_StN7nK1MEeOdBunZhTRw1w _StN7oa1MEeOdBunZhTRw1w _StN7rK1MEeOdBunZhTRw1w _StN7tq1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_StN76K1MEeOdBunZhTRw1w" decider="_StN72a1MEeOdBunZhTRw1w" predecessorClause="_StN7561MEeOdBunZhTRw1w" test="_StN72K1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_StN7lq1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_StN7kq1MEeOdBunZhTRw1w" parameter="_StN7jK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_StN7l61MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_StN7la1MEeOdBunZhTRw1w" incoming="_StN7kq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_StN7mK1MEeOdBunZhTRw1w" name="Input(condition)" outgoing="_StN7k61MEeOdBunZhTRw1w" parameter="_StN7j61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_StN7ma1MEeOdBunZhTRw1w" name="Fork(condition)" outgoing="_StN7lK1MEeOdBunZhTRw1w" incoming="_StN7k61MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_StN76a1MEeOdBunZhTRw1w" name="AssertFalse" group="_StN7_q1MEeOdBunZhTRw1w" node="_StN7-q1MEeOdBunZhTRw1w _StN7-61MEeOdBunZhTRw1w _StN7_K1MEeOdBunZhTRw1w _StN7_a1MEeOdBunZhTRw1w _StN7_q1MEeOdBunZhTRw1w">
      <elementImport xmi:id="_StN76q1MEeOdBunZhTRw1w" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_StN7661MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_StN77K1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_StN77a1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_StN77q1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_StN7761MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_StN78K1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN78a1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN78q1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_StN7861MEeOdBunZhTRw1w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN79K1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN79a1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StN79q1MEeOdBunZhTRw1w" source="_StN7-q1MEeOdBunZhTRw1w" target="_StN7-61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7961MEeOdBunZhTRw1w" source="_StN7_K1MEeOdBunZhTRw1w" target="_StN7_a1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7-K1MEeOdBunZhTRw1w" source="_StN7-61MEeOdBunZhTRw1w" target="_StN8Ea1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StN7-a1MEeOdBunZhTRw1w" source="_StN7_a1MEeOdBunZhTRw1w" target="_StN8Jq1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_StN7_q1MEeOdBunZhTRw1w" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN7_61MEeOdBunZhTRw1w" name="ExpressionStatement@72666ee8">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN8AK1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_StN8Pa1MEeOdBunZhTRw1w" behavior="_StN7hq1MEeOdBunZhTRw1w">
            <argument xmi:id="_StN8Aa1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_StN8O61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Aq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8A61MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <argument xmi:id="_StN8BK1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_StN8PK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Ba1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8Bq1MEeOdBunZhTRw1w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN8B61MEeOdBunZhTRw1w" name="Tuple@56e6cb60" outgoing="_StN8Pa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StN8CK1MEeOdBunZhTRw1w" name="Value(&quot;! &quot;)">
              <result xmi:id="_StN8Ca1MEeOdBunZhTRw1w" name="Value(&quot;! &quot;).result" outgoing="_StN8Ma1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Cq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8C61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_StN8DK1MEeOdBunZhTRw1w" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN8Da1MEeOdBunZhTRw1w" name="Call(Concat)">
              <argument xmi:id="_StN8Dq1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_StN8Ma1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8D61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8EK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_StN8Ea1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_StN7-K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Eq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8E61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_StN8FK1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_StN8O61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Fa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8Fq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StN8F61MEeOdBunZhTRw1w" name="Value(false)">
              <result xmi:id="_StN8GK1MEeOdBunZhTRw1w" name="Value(false).result" outgoing="_StN8Oq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Ga1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8Gq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_StN8G61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_StN8HK1MEeOdBunZhTRw1w" name="Test(==)">
              <first xmi:id="_StN8Ha1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_StN8Mq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Hq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8H61MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_StN8IK1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_StN8Na1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Ia1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8Iq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_StN8I61MEeOdBunZhTRw1w" name="Test(==).second" incoming="_StN8Oq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8JK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8Ja1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StN8Jq1MEeOdBunZhTRw1w" name="Fork(Fork(condition))" outgoing="_StN8Mq1MEeOdBunZhTRw1w _StN8M61MEeOdBunZhTRw1w" incoming="_StN7-a1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN8J61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
              <argument xmi:id="_StN8KK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_StN8M61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Ka1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8Kq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_StN8K61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_StN8NK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8LK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8La1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StN8Lq1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_StN8Nq1MEeOdBunZhTRw1w _StN8N61MEeOdBunZhTRw1w" incoming="_StN8NK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_StN8L61MEeOdBunZhTRw1w" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_StN8PK1MEeOdBunZhTRw1w" incoming="_StN8Na1MEeOdBunZhTRw1w _StN8OK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_StN8MK1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_StN8OK1MEeOdBunZhTRw1w" incoming="_StN8Nq1MEeOdBunZhTRw1w _StN8N61MEeOdBunZhTRw1w" decisionInputFlow="_StN8N61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8Ma1MEeOdBunZhTRw1w" source="_StN8Ca1MEeOdBunZhTRw1w" target="_StN8Dq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8Mq1MEeOdBunZhTRw1w" source="_StN8Jq1MEeOdBunZhTRw1w" target="_StN8Ha1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8M61MEeOdBunZhTRw1w" source="_StN8Jq1MEeOdBunZhTRw1w" target="_StN8KK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8NK1MEeOdBunZhTRw1w" source="_StN8K61MEeOdBunZhTRw1w" target="_StN8Lq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8Na1MEeOdBunZhTRw1w" source="_StN8IK1MEeOdBunZhTRw1w" target="_StN8L61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8Nq1MEeOdBunZhTRw1w" source="_StN8Lq1MEeOdBunZhTRw1w" target="_StN8MK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8N61MEeOdBunZhTRw1w" source="_StN8Lq1MEeOdBunZhTRw1w" target="_StN8MK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8OK1MEeOdBunZhTRw1w" source="_StN8MK1MEeOdBunZhTRw1w" target="_StN8L61MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_StN8Oa1MEeOdBunZhTRw1w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8Oq1MEeOdBunZhTRw1w" source="_StN8GK1MEeOdBunZhTRw1w" target="_StN8I61MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8O61MEeOdBunZhTRw1w" source="_StN8FK1MEeOdBunZhTRw1w" target="_StN8Aa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8PK1MEeOdBunZhTRw1w" source="_StN8L61MEeOdBunZhTRw1w" target="_StN8BK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StN8Pa1MEeOdBunZhTRw1w" source="_StN8B61MEeOdBunZhTRw1w" target="_StN8AK1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_StN7-q1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_StN79q1MEeOdBunZhTRw1w" parameter="_StN78K1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_StN7-61MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_StN7-K1MEeOdBunZhTRw1w" incoming="_StN79q1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_StN7_K1MEeOdBunZhTRw1w" name="Input(condition)" outgoing="_StN7961MEeOdBunZhTRw1w" parameter="_StN7861MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_StN7_a1MEeOdBunZhTRw1w" name="Fork(condition)" outgoing="_StN7-a1MEeOdBunZhTRw1w" incoming="_StN7961MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_StN8Pq1MEeOdBunZhTRw1w" name="Write" group="_StN8S61MEeOdBunZhTRw1w" node="_StN8Sa1MEeOdBunZhTRw1w _StN8Sq1MEeOdBunZhTRw1w _StN8S61MEeOdBunZhTRw1w">
      <packageImport xmi:id="_StN8P61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_StN8QK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_StN8Qa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_StN8Qq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_StN8Q61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_StN8RK1MEeOdBunZhTRw1w" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Ra1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8Rq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8R61MEeOdBunZhTRw1w" source="_StN8Sa1MEeOdBunZhTRw1w" target="_StN8Sq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8SK1MEeOdBunZhTRw1w" source="_StN8Sq1MEeOdBunZhTRw1w" target="_StN8WK1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_StN8S61MEeOdBunZhTRw1w" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN8TK1MEeOdBunZhTRw1w" name="ExpressionStatement@47d04dac">
          <node xmi:type="uml:ExpansionRegion" xmi:id="_StN8Ta1MEeOdBunZhTRw1w" name="Collect(Call(write))" incoming="_StN8ea1MEeOdBunZhTRw1w" mode="parallel" inputElement="_StN8Xa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_StN8Tq1MEeOdBunZhTRw1w" name="Call(write)">
              <argument xmi:id="_StN8T61MEeOdBunZhTRw1w" name="Call(write).argument(value)" incoming="_StN8W61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8UK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8Ua1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_StN8Uq1MEeOdBunZhTRw1w" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8U61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8VK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_StN8Va1MEeOdBunZhTRw1w" name="Call(write).target" incoming="_StN8XK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Vq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8V61MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <structuredNodeInput xmi:id="_StN8WK1MEeOdBunZhTRw1w" name="Collect(Call(write)).input(Fork(value))" outgoing="_StN8W61MEeOdBunZhTRw1w" incoming="_StN8SK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Wa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8Wq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeInput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8W61MEeOdBunZhTRw1w" source="_StN8WK1MEeOdBunZhTRw1w" target="_StN8T61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8XK1MEeOdBunZhTRw1w" source="_StN8Xa1MEeOdBunZhTRw1w" target="_StN8Va1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_StN8Xa1MEeOdBunZhTRw1w" name="Collect(Call(write)).inputElement" outgoing="_StN8XK1MEeOdBunZhTRw1w" incoming="_StN8eK1MEeOdBunZhTRw1w" regionAsInput="_StN8Ta1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN8Xq1MEeOdBunZhTRw1w" name="Feature(Call(At).result())" outgoing="_StN8ea1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN8X61MEeOdBunZhTRw1w" name="Call(At)" incoming="_StN8dq1MEeOdBunZhTRw1w">
              <argument xmi:id="_StN8YK1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_StN8dK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Ya1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8Yq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_StN8Y61MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_StN8d61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8ZK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8Za1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_StN8Zq1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_StN8eK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8Z61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8aK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN8aa1MEeOdBunZhTRw1w" name="Tuple@2b2ad8c4" outgoing="_StN8dq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_StN8aq1MEeOdBunZhTRw1w" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_StN8a61MEeOdBunZhTRw1w" name="ReadExtent(StandardOutputChannel).result" outgoing="_StN8dK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8bK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8ba1MEeOdBunZhTRw1w" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_StN8bq1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_StN8b61MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_StN8da1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8cK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8ca1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_StN8cq1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_StN8c61MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_StN8d61MEeOdBunZhTRw1w" incoming="_StN8da1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8dK1MEeOdBunZhTRw1w" source="_StN8a61MEeOdBunZhTRw1w" target="_StN8YK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8da1MEeOdBunZhTRw1w" source="_StN8b61MEeOdBunZhTRw1w" target="_StN8c61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_StN8dq1MEeOdBunZhTRw1w" source="_StN8aa1MEeOdBunZhTRw1w" target="_StN8X61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8d61MEeOdBunZhTRw1w" source="_StN8c61MEeOdBunZhTRw1w" target="_StN8Y61MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8eK1MEeOdBunZhTRw1w" source="_StN8Zq1MEeOdBunZhTRw1w" target="_StN8Xa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_StN8ea1MEeOdBunZhTRw1w" source="_StN8Xq1MEeOdBunZhTRw1w" target="_StN8Ta1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_StN8Sa1MEeOdBunZhTRw1w" name="Input(value)" outgoing="_StN8R61MEeOdBunZhTRw1w" parameter="_StN8RK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_StN8Sq1MEeOdBunZhTRw1w" name="Fork(value)" outgoing="_StN8SK1MEeOdBunZhTRw1w" incoming="_StN8R61MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_StN8eq1MEeOdBunZhTRw1w" clientDependency="_StN8ma1MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionFunctions$size__any__" group="_StN8ia1MEeOdBunZhTRw1w" node="_StN8ha1MEeOdBunZhTRw1w _StN8hq1MEeOdBunZhTRw1w _StN8h61MEeOdBunZhTRw1w _StN8iK1MEeOdBunZhTRw1w _StN8ia1MEeOdBunZhTRw1w">
      <ownedParameter xmi:id="_StN8e61MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8fK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8fa1MEeOdBunZhTRw1w" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_StN8fq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8f61MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8gK1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8ga1MEeOdBunZhTRw1w" source="_StN8ha1MEeOdBunZhTRw1w" target="_StN8hq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_StN8gq1MEeOdBunZhTRw1w" source="_StN8iq1MEeOdBunZhTRw1w" target="_StN8iK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8g61MEeOdBunZhTRw1w" source="_StN8hq1MEeOdBunZhTRw1w" target="_StN8jK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8hK1MEeOdBunZhTRw1w" source="_StN8kq1MEeOdBunZhTRw1w" target="_StN8h61MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_StN8ia1MEeOdBunZhTRw1w" name="Body(size)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_StN8iq1MEeOdBunZhTRw1w" name="ReturnStatement@22536490" outgoing="_StN8gq1MEeOdBunZhTRw1w">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_StN8i61MEeOdBunZhTRw1w" name="Call(Size)">
            <argument xmi:id="_StN8jK1MEeOdBunZhTRw1w" name="Call(Size).argument(seq)" incoming="_StN8g61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8ja1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8jq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_StN8j61MEeOdBunZhTRw1w" name="Call(Size).result()" outgoing="_StN8la1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8kK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8ka1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
          </node>
          <structuredNodeOutput xmi:id="_StN8kq1MEeOdBunZhTRw1w" name="ReturnStatement@22536490.output" outgoing="_StN8hK1MEeOdBunZhTRw1w" incoming="_StN8la1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_StN8k61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_StN8lK1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_StN8la1MEeOdBunZhTRw1w" source="_StN8j61MEeOdBunZhTRw1w" target="_StN8kq1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_StN8ha1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_StN8ga1MEeOdBunZhTRw1w" parameter="_StN8e61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_StN8hq1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_StN8g61MEeOdBunZhTRw1w" incoming="_StN8ga1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_StN8h61MEeOdBunZhTRw1w" name="Return" incoming="_StN8hK1MEeOdBunZhTRw1w" parameter="_StN8fq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_StN8iK1MEeOdBunZhTRw1w" name="Final" incoming="_StN8gq1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_StN8lq1MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_StN8l61MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_StN8mK1MEeOdBunZhTRw1w">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmqbdYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmqbdIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_StN8ma1MEeOdBunZhTRw1w" client="_StN8eq1MEeOdBunZhTRw1w" supplier="_StN8lq1MEeOdBunZhTRw1w"/>
    <profileApplication xmi:id="_StN8mq1MEeOdBunZhTRw1w">
      <eAnnotations xmi:id="_StN8m61MEeOdBunZhTRw1w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/StandardL2.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_StOhcK1MEeOdBunZhTRw1w" base_BehavioralFeature="_StLe0a1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_StOhca1MEeOdBunZhTRw1w" base_BehavioralFeature="_SrNyJa1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_StOhcq1MEeOdBunZhTRw1w" base_BehavioralFeature="_StLe1a1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_StOhc61MEeOdBunZhTRw1w" base_BehavioralFeature="_SrOWga1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_StPIgK1MEeOdBunZhTRw1w" base_BehavioralFeature="_SrNyIa1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_StPIga1MEeOdBunZhTRw1w" base_BehavioralFeature="_StLeKK1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_StPIgq1MEeOdBunZhTRw1w" base_BehavioralFeature="_StLfjK1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_StPIg61MEeOdBunZhTRw1w" base_BehavioralFeature="_SrOWfa1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_StPIhK1MEeOdBunZhTRw1w" base_BehavioralFeature="_StLeJK1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_StPvkK1MEeOdBunZhTRw1w" base_BehavioralFeature="_StLfkK1MEeOdBunZhTRw1w"/>
</xmi:XMI>

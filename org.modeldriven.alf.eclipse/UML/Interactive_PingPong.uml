<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_SLUWwCcoEeSLVrU2ifxtpw" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_SLUWwScoEeSLVrU2ifxtpw" name="Interactive_PingPong" classifierBehavior="_SLUWyicoEeSLVrU2ifxtpw" isActive="true">
      <packageImport xmi:id="_SLUWwicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SLUWwycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SLUWxCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SLUWxScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SLUWxicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_SLUWxycoEeSLVrU2ifxtpw" name="Interactive_PingPong$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUWyCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUWyScoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SLUWyicoEeSLVrU2ifxtpw" name="Interactive_PingPong$classifierBehavior$1" visibility="private" isActive="true" node="_SLUWyycoEeSLVrU2ifxtpw" group="_SLUWyycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SLUWyycoEeSLVrU2ifxtpw" name="Body(Interactive_PingPong$classifierBehavior$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_SLUWzCcoEeSLVrU2ifxtpw" target="_SLUW8icoEeSLVrU2ifxtpw" source="_SLUW1icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SLUWzScoEeSLVrU2ifxtpw" target="_SLUXDicoEeSLVrU2ifxtpw" source="_SLUW8icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SLUWzicoEeSLVrU2ifxtpw" target="_SLUXGycoEeSLVrU2ifxtpw" source="_SLUXDicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUWzycoEeSLVrU2ifxtpw" target="_SLUXNScoEeSLVrU2ifxtpw" source="_SLUXHScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW0CcoEeSLVrU2ifxtpw" target="_SLUXQCcoEeSLVrU2ifxtpw" source="_SLUW9CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW0ScoEeSLVrU2ifxtpw" target="_SLUXSicoEeSLVrU2ifxtpw" source="_SLUW2CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW0icoEeSLVrU2ifxtpw" target="_SLUXUicoEeSLVrU2ifxtpw" source="_SLUW2CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW0ycoEeSLVrU2ifxtpw" target="_SLUXVScoEeSLVrU2ifxtpw" source="_SLUXHScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW1CcoEeSLVrU2ifxtpw" target="_SLUXYicoEeSLVrU2ifxtpw" source="_SLUW9CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SLUW1ScoEeSLVrU2ifxtpw" target="_SLUXMicoEeSLVrU2ifxtpw" source="_SLUXGycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUW1icoEeSLVrU2ifxtpw" name="ExpressionStatement@5d2736c8" outgoing="_SLUWzCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW1ycoEeSLVrU2ifxtpw" target="_SLUW2CcoEeSLVrU2ifxtpw" source="_SLUW3ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SLUW2CcoEeSLVrU2ifxtpw" name="Fork(a)@3480e5ef" incoming="_SLUW1ycoEeSLVrU2ifxtpw" outgoing="_SLUW0ScoEeSLVrU2ifxtpw _SLUW0icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUW2ScoEeSLVrU2ifxtpw" name="RightHandSide@813e762">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUW2icoEeSLVrU2ifxtpw" name="InstanceCreationExpression@813e762">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW2ycoEeSLVrU2ifxtpw" target="_SLUW5icoEeSLVrU2ifxtpw" source="_SLUW6icoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW3CcoEeSLVrU2ifxtpw" target="_SLUW7ScoEeSLVrU2ifxtpw" source="_SLUW4ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW3ScoEeSLVrU2ifxtpw" target="_SLUW7ycoEeSLVrU2ifxtpw" source="_SLUW7ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW3icoEeSLVrU2ifxtpw" target="_SLUW3ycoEeSLVrU2ifxtpw" source="_SLUW7ScoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SLUW3ycoEeSLVrU2ifxtpw" name="Output(Call(A).result())" incoming="_SLUW3icoEeSLVrU2ifxtpw" outgoing="_SLUW1ycoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUW4CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUW4ScoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_SLUW4icoEeSLVrU2ifxtpw" name="Call(A)" operation="_SLUY_CcoEeSLVrU2ifxtpw">
                  <result xmi:id="_SLUW4ycoEeSLVrU2ifxtpw" name="Call(A).result()" outgoing="_SLUW3CcoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUW5CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUW5ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_SLUW5icoEeSLVrU2ifxtpw" name="Call(A).target" incoming="_SLUW2ycoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUW5ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUW6CcoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_SLUW6ScoEeSLVrU2ifxtpw" name="Create(A)" classifier="_SLUX8CcoEeSLVrU2ifxtpw">
                  <result xmi:id="_SLUW6icoEeSLVrU2ifxtpw" name="Create(A).result" outgoing="_SLUW2ycoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUW6ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUW7CcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SLUW7ScoEeSLVrU2ifxtpw" name="Fork(Call(A).result())" incoming="_SLUW3CcoEeSLVrU2ifxtpw" outgoing="_SLUW3ScoEeSLVrU2ifxtpw _SLUW3icoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_SLUW7icoEeSLVrU2ifxtpw" name="Start(A)">
                  <object xmi:id="_SLUW7ycoEeSLVrU2ifxtpw" name="Start(A).object" incoming="_SLUW3ScoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUW8CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUW8ScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUW8icoEeSLVrU2ifxtpw" name="ExpressionStatement@77fc98a8" incoming="_SLUWzCcoEeSLVrU2ifxtpw" outgoing="_SLUWzScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW8ycoEeSLVrU2ifxtpw" target="_SLUW9CcoEeSLVrU2ifxtpw" source="_SLUW-ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SLUW9CcoEeSLVrU2ifxtpw" name="Fork(b)@2b9a7e2b" incoming="_SLUW8ycoEeSLVrU2ifxtpw" outgoing="_SLUW0CcoEeSLVrU2ifxtpw _SLUW1CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUW9ScoEeSLVrU2ifxtpw" name="RightHandSide@e9c6c54">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUW9icoEeSLVrU2ifxtpw" name="InstanceCreationExpression@e9c6c54">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW9ycoEeSLVrU2ifxtpw" target="_SLUXAicoEeSLVrU2ifxtpw" source="_SLUXBicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW-CcoEeSLVrU2ifxtpw" target="_SLUXCScoEeSLVrU2ifxtpw" source="_SLUW_ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW-ScoEeSLVrU2ifxtpw" target="_SLUXCycoEeSLVrU2ifxtpw" source="_SLUXCScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUW-icoEeSLVrU2ifxtpw" target="_SLUW-ycoEeSLVrU2ifxtpw" source="_SLUXCScoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SLUW-ycoEeSLVrU2ifxtpw" name="Output(Call(B).result())" incoming="_SLUW-icoEeSLVrU2ifxtpw" outgoing="_SLUW8ycoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUW_CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUW_ScoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_SLUW_icoEeSLVrU2ifxtpw" name="Call(B)" operation="_SLU-2CcoEeSLVrU2ifxtpw">
                  <result xmi:id="_SLUW_ycoEeSLVrU2ifxtpw" name="Call(B).result()" outgoing="_SLUW-CcoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXACcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXAScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <target xmi:id="_SLUXAicoEeSLVrU2ifxtpw" name="Call(B).target" incoming="_SLUW9ycoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXAycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXBCcoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_SLUXBScoEeSLVrU2ifxtpw" name="Create(B)" classifier="_SLUZCCcoEeSLVrU2ifxtpw">
                  <result xmi:id="_SLUXBicoEeSLVrU2ifxtpw" name="Create(B).result" outgoing="_SLUW9ycoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXBycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXCCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SLUXCScoEeSLVrU2ifxtpw" name="Fork(Call(B).result())" incoming="_SLUW-CcoEeSLVrU2ifxtpw" outgoing="_SLUW-ScoEeSLVrU2ifxtpw _SLUW-icoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_SLUXCicoEeSLVrU2ifxtpw" name="Start(B)">
                  <object xmi:id="_SLUXCycoEeSLVrU2ifxtpw" name="Start(B).object" incoming="_SLUW-ScoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXDCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXDScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUXDicoEeSLVrU2ifxtpw" name="ExpressionStatement@6ba964d4" incoming="_SLUWzScoEeSLVrU2ifxtpw" outgoing="_SLUWzicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXDycoEeSLVrU2ifxtpw" target="_SLUXEicoEeSLVrU2ifxtpw" source="_SLUXFycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLUXECcoEeSLVrU2ifxtpw" target="_SLUXEScoEeSLVrU2ifxtpw" source="_SLUXFScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUXEScoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_SLUXECcoEeSLVrU2ifxtpw" behavior="_SLU-6ycoEeSLVrU2ifxtpw">
              <argument xmi:id="_SLUXEicoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_SLUXDycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXEycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXFCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUXFScoEeSLVrU2ifxtpw" name="Tuple@361fcd76" outgoing="_SLUXECcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUXFicoEeSLVrU2ifxtpw" name="Value(&quot;Enter n: &quot;)">
                <result xmi:id="_SLUXFycoEeSLVrU2ifxtpw" name="Value(&quot;Enter n: &quot;).result" outgoing="_SLUXDycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXGCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXGScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SLUXGicoEeSLVrU2ifxtpw" value="Enter n: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUXGycoEeSLVrU2ifxtpw" name="ExpressionStatement@226cdb22" incoming="_SLUWzicoEeSLVrU2ifxtpw" outgoing="_SLUW1ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXHCcoEeSLVrU2ifxtpw" target="_SLUXHScoEeSLVrU2ifxtpw" source="_SLUXJScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SLUXHScoEeSLVrU2ifxtpw" name="Fork(n)@2e45fed6" incoming="_SLUXHCcoEeSLVrU2ifxtpw" outgoing="_SLUWzycoEeSLVrU2ifxtpw _SLUW0ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUXHicoEeSLVrU2ifxtpw" name="RightHandSide@755dab55">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXHycoEeSLVrU2ifxtpw" target="_SLUXIicoEeSLVrU2ifxtpw" source="_SLUXLicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SLUXICcoEeSLVrU2ifxtpw" target="_SLUXIScoEeSLVrU2ifxtpw" source="_SLUXKCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUXIScoEeSLVrU2ifxtpw" name="Call(ToInteger)" incoming="_SLUXICcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SLUXIicoEeSLVrU2ifxtpw" name="Call(ToInteger).argument(x)" incoming="_SLUXHycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXIycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXJCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SLUXJScoEeSLVrU2ifxtpw" name="Call(ToInteger).result(result)" outgoing="_SLUXHCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXJicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXJycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToInteger"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUXKCcoEeSLVrU2ifxtpw" name="Tuple@61bb4056" outgoing="_SLUXICcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXKScoEeSLVrU2ifxtpw" target="_SLUXMScoEeSLVrU2ifxtpw" source="_SLUXKycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUXKicoEeSLVrU2ifxtpw" name="Call(ReadLine)">
                  <result xmi:id="_SLUXKycoEeSLVrU2ifxtpw" name="Call(ReadLine).result(errorStatus)" outgoing="_SLUXKScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXLCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXLScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <result xmi:id="_SLUXLicoEeSLVrU2ifxtpw" name="Call(ReadLine).result(result)" outgoing="_SLUXHycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXLycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXMCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-ReadLine"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SLUXMScoEeSLVrU2ifxtpw" name="Fork(error)@efa8718" incoming="_SLUXKScoEeSLVrU2ifxtpw"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_SLUXMicoEeSLVrU2ifxtpw" name="IfStatement@58403262" incoming="_SLUW1ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLUXMycoEeSLVrU2ifxtpw" target="_SLUXTCcoEeSLVrU2ifxtpw" source="_SLUXOycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUXNCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$notEmpty__PrimitiveTypes$Integer__)" behavior="_SLU_JycoEeSLVrU2ifxtpw">
              <argument xmi:id="_SLUXNScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$notEmpty__PrimitiveTypes$Integer__).argument(seq)" incoming="_SLUWzycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXNicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXNycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SLUXOCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$notEmpty__PrimitiveTypes$Integer__).result()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXOScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXOicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUXOycoEeSLVrU2ifxtpw" name="ExpressionStatement@b0a7ad4" outgoing="_SLUXMycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SLUXPCcoEeSLVrU2ifxtpw" target="_SLUXPScoEeSLVrU2ifxtpw" source="_SLUXSycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SLUXPScoEeSLVrU2ifxtpw" name="Collect(SendSignal(Start))" incoming="_SLUXPCcoEeSLVrU2ifxtpw" mode="parallel" inputElement="_SLUXSicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXPicoEeSLVrU2ifxtpw" target="_SLUXRCcoEeSLVrU2ifxtpw" source="_SLUXQCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXPycoEeSLVrU2ifxtpw" target="_SLUXRycoEeSLVrU2ifxtpw" source="_SLUXSicoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SLUXQCcoEeSLVrU2ifxtpw" name="Collect(SendSignal(Start)).input(Fork(b)@2b9a7e2b)" incoming="_SLUW0CcoEeSLVrU2ifxtpw" outgoing="_SLUXPicoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXQScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXQicoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:SendSignalAction" xmi:id="_SLUXQycoEeSLVrU2ifxtpw" name="SendSignal(Start)" signal="_SLUZAScoEeSLVrU2ifxtpw">
                  <argument xmi:id="_SLUXRCcoEeSLVrU2ifxtpw" name="SendSignal(Start).argument(b)" incoming="_SLUXPicoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXRScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXRicoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <target xmi:id="_SLUXRycoEeSLVrU2ifxtpw" name="SendSignal(Start).target" incoming="_SLUXPycoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXSCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXSScoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SLUXSicoEeSLVrU2ifxtpw" name="Collect(SendSignal(Start)).inputElement" incoming="_SLUW0ScoEeSLVrU2ifxtpw" outgoing="_SLUXPycoEeSLVrU2ifxtpw" regionAsInput="_SLUXPScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUXSycoEeSLVrU2ifxtpw" name="Feature(Fork(a)@3480e5ef)" outgoing="_SLUXPCcoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUXTCcoEeSLVrU2ifxtpw" name="ExpressionStatement@ed33a88" incoming="_SLUXMycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SLUXTScoEeSLVrU2ifxtpw" target="_SLUXTicoEeSLVrU2ifxtpw" source="_SLUXYycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SLUXTicoEeSLVrU2ifxtpw" name="Collect(SendSignal(Start))" incoming="_SLUXTScoEeSLVrU2ifxtpw" mode="parallel" inputElement="_SLUXYicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXTycoEeSLVrU2ifxtpw" target="_SLUXWScoEeSLVrU2ifxtpw" source="_SLUXUicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXUCcoEeSLVrU2ifxtpw" target="_SLUXXCcoEeSLVrU2ifxtpw" source="_SLUXVScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXUScoEeSLVrU2ifxtpw" target="_SLUXXycoEeSLVrU2ifxtpw" source="_SLUXYicoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SLUXUicoEeSLVrU2ifxtpw" name="Collect(SendSignal(Start)).input(Fork(a)@3480e5ef)" incoming="_SLUW0icoEeSLVrU2ifxtpw" outgoing="_SLUXTycoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXUycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXVCcoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <structuredNodeInput xmi:id="_SLUXVScoEeSLVrU2ifxtpw" name="Collect(SendSignal(Start)).input(Fork(n)@2e45fed6)" incoming="_SLUW0ycoEeSLVrU2ifxtpw" outgoing="_SLUXUCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXVicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXVycoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:SendSignalAction" xmi:id="_SLUXWCcoEeSLVrU2ifxtpw" name="SendSignal(Start)" signal="_SLU-3ScoEeSLVrU2ifxtpw">
                  <argument xmi:id="_SLUXWScoEeSLVrU2ifxtpw" name="SendSignal(Start).argument(a)" incoming="_SLUXTycoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXWicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXWycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SLUXXCcoEeSLVrU2ifxtpw" name="SendSignal(Start).argument(n)" incoming="_SLUXUCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXXScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXXicoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <target xmi:id="_SLUXXycoEeSLVrU2ifxtpw" name="SendSignal(Start).target" incoming="_SLUXUScoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXYCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXYScoEeSLVrU2ifxtpw" value="1"/>
                  </target>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SLUXYicoEeSLVrU2ifxtpw" name="Collect(SendSignal(Start)).inputElement" incoming="_SLUW1CcoEeSLVrU2ifxtpw" outgoing="_SLUXUScoEeSLVrU2ifxtpw" regionAsInput="_SLUXTicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUXYycoEeSLVrU2ifxtpw" name="Feature(Fork(b)@2b9a7e2b)" outgoing="_SLUXTScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUXZCcoEeSLVrU2ifxtpw" name="Value(true)">
              <result xmi:id="_SLUXZScoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXZicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXZycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_SLUXaCcoEeSLVrU2ifxtpw" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <clause xmi:id="_SLUXaScoEeSLVrU2ifxtpw" body="_SLUXOycoEeSLVrU2ifxtpw _SLUXTCcoEeSLVrU2ifxtpw" decider="_SLUXOCcoEeSLVrU2ifxtpw" successorClause="_SLUXaicoEeSLVrU2ifxtpw" test="_SLUXNCcoEeSLVrU2ifxtpw"/>
            <clause xmi:id="_SLUXaicoEeSLVrU2ifxtpw" decider="_SLUXZScoEeSLVrU2ifxtpw" predecessorClause="_SLUXaScoEeSLVrU2ifxtpw" test="_SLUXZCcoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SLUXaycoEeSLVrU2ifxtpw" name="Interactive_PingPong$method$1" specification="_SLUX6ycoEeSLVrU2ifxtpw" node="_SLUXcCcoEeSLVrU2ifxtpw _SLUXcScoEeSLVrU2ifxtpw" group="_SLUXcScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SLUXbCcoEeSLVrU2ifxtpw" name="" type="_SLUWwScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXbScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXbicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXbycoEeSLVrU2ifxtpw" target="_SLUXcCcoEeSLVrU2ifxtpw" source="_SLUXgicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SLUXcScoEeSLVrU2ifxtpw" name="Body(Interactive_PingPong$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXcicoEeSLVrU2ifxtpw" target="_SLUXgicoEeSLVrU2ifxtpw" source="_SLUXfycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXcycoEeSLVrU2ifxtpw" target="_SLUXhCcoEeSLVrU2ifxtpw" source="_SLUXgicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SLUXdCcoEeSLVrU2ifxtpw" target="_SLUXfScoEeSLVrU2ifxtpw" source="_SLUXgycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXdScoEeSLVrU2ifxtpw" target="_SLUXiCcoEeSLVrU2ifxtpw" source="_SLUXgicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXdicoEeSLVrU2ifxtpw" target="_SLUXjycoEeSLVrU2ifxtpw" source="_SLUXiycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXdycoEeSLVrU2ifxtpw" target="_SLUXmycoEeSLVrU2ifxtpw" source="_SLUXkicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXeCcoEeSLVrU2ifxtpw" target="_SLUXoScoEeSLVrU2ifxtpw" source="_SLUXlicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SLUXeScoEeSLVrU2ifxtpw" target="_SLUXpScoEeSLVrU2ifxtpw" source="_SLUXpCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXeicoEeSLVrU2ifxtpw" target="_SLUXpScoEeSLVrU2ifxtpw" source="_SLUXnicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SLUXeycoEeSLVrU2ifxtpw" target="_SLUXgycoEeSLVrU2ifxtpw" source="_SLUXpScoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SLUXfCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUXfScoEeSLVrU2ifxtpw" name="Body" incoming="_SLUXdCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SLUXficoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SLUXfycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SLUXcicoEeSLVrU2ifxtpw" type="_SLUWwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXgCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXgScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SLUXgicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SLUXcicoEeSLVrU2ifxtpw" outgoing="_SLUXbycoEeSLVrU2ifxtpw _SLUXcycoEeSLVrU2ifxtpw _SLUXdScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SLUXgycoEeSLVrU2ifxtpw" name="Call(Interactive_PingPong$initialization$1)" incoming="_SLUXeycoEeSLVrU2ifxtpw" outgoing="_SLUXdCcoEeSLVrU2ifxtpw" operation="_SLUX6icoEeSLVrU2ifxtpw">
            <target xmi:id="_SLUXhCcoEeSLVrU2ifxtpw" name="Call(Interactive_PingPong$initialization$1).target" incoming="_SLUXcycoEeSLVrU2ifxtpw" type="_SLUWwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXhScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXhicoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SLUXhycoEeSLVrU2ifxtpw" name="Read(Interactive_PingPong$initializationFlag$1)" structuralFeature="_SLUWxycoEeSLVrU2ifxtpw">
            <object xmi:id="_SLUXiCcoEeSLVrU2ifxtpw" name="Read(Interactive_PingPong$initializationFlag$1).object" incoming="_SLUXdScoEeSLVrU2ifxtpw" type="_SLUWwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXiScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXiicoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SLUXiycoEeSLVrU2ifxtpw" name="Read(Interactive_PingPong$initializationFlag$1).result" outgoing="_SLUXdicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXjCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXjScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUXjicoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SLUXjycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SLUXdicoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXkCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXkScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SLUXkicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SLUXdycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXkycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXlCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUXlScoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SLUXlicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SLUXeCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXlycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXmCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SLUXmScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SLUXmicoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SLUXmycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SLUXdycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXnCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXnScoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SLUXnicoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SLUXeicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXnycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXoCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SLUXoScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SLUXeCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXoicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXoycoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SLUXpCcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SLUXeScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SLUXpScoEeSLVrU2ifxtpw" name="Decision(Test(Interactive_PingPong$initializationFlag$1))" incoming="_SLUXeScoEeSLVrU2ifxtpw _SLUXeicoEeSLVrU2ifxtpw" outgoing="_SLUXeycoEeSLVrU2ifxtpw" decisionInputFlow="_SLUXeicoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SLUXcCcoEeSLVrU2ifxtpw" name="Return" incoming="_SLUXbycoEeSLVrU2ifxtpw" parameter="_SLUXbCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SLUXpicoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SLUX7ycoEeSLVrU2ifxtpw" node="_SLUXpycoEeSLVrU2ifxtpw" group="_SLUXpycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SLUXpycoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SLUXqCcoEeSLVrU2ifxtpw" name="Interactive_PingPong$initialization$1" specification="_SLUX6icoEeSLVrU2ifxtpw" node="_SLUXqScoEeSLVrU2ifxtpw" group="_SLUXqScoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SLUXqScoEeSLVrU2ifxtpw" name="Body(Interactive_PingPong$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXqicoEeSLVrU2ifxtpw" target="_SLUXuCcoEeSLVrU2ifxtpw" source="_SLUXtScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXqycoEeSLVrU2ifxtpw" target="_SLUXwicoEeSLVrU2ifxtpw" source="_SLUXuCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXrCcoEeSLVrU2ifxtpw" target="_SLUXzCcoEeSLVrU2ifxtpw" source="_SLUXuCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXrScoEeSLVrU2ifxtpw" target="_SLUX0ycoEeSLVrU2ifxtpw" source="_SLUXzycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXricoEeSLVrU2ifxtpw" target="_SLUX3ycoEeSLVrU2ifxtpw" source="_SLUX1icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXrycoEeSLVrU2ifxtpw" target="_SLUX5ScoEeSLVrU2ifxtpw" source="_SLUX2icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SLUXsCcoEeSLVrU2ifxtpw" target="_SLUX6ScoEeSLVrU2ifxtpw" source="_SLUX6CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXsScoEeSLVrU2ifxtpw" target="_SLUX6ScoEeSLVrU2ifxtpw" source="_SLUX4icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SLUXsicoEeSLVrU2ifxtpw" target="_SLUXuScoEeSLVrU2ifxtpw" source="_SLUX6ScoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SLUXsycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SLUXtCcoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SLUXtScoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SLUXqicoEeSLVrU2ifxtpw" type="_SLUWwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXticoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXtycoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SLUXuCcoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SLUXqicoEeSLVrU2ifxtpw" outgoing="_SLUXqycoEeSLVrU2ifxtpw _SLUXrCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUXuScoEeSLVrU2ifxtpw" name="Initialization" incoming="_SLUXsicoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUXuicoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUXuycoEeSLVrU2ifxtpw" target="_SLUXyCcoEeSLVrU2ifxtpw" source="_SLUXvScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUXvCcoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_SLUXvScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SLUXuycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXvicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXvycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SLUXwCcoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SLUXwScoEeSLVrU2ifxtpw" name="Write(Interactive_PingPong$initializationFlag$1)" structuralFeature="_SLUWxycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_SLUXwicoEeSLVrU2ifxtpw" name="Write(Interactive_PingPong$initializationFlag$1).object" incoming="_SLUXqycoEeSLVrU2ifxtpw" type="_SLUWwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXwycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXxCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SLUXxScoEeSLVrU2ifxtpw" name="Write(Interactive_PingPong$initializationFlag$1).result" type="_SLUWwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXxicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXxycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_SLUXyCcoEeSLVrU2ifxtpw" name="Write(Interactive_PingPong$initializationFlag$1).value" incoming="_SLUXuycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXyScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXyicoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SLUXyycoEeSLVrU2ifxtpw" name="Read(Interactive_PingPong$initializationFlag$1)" structuralFeature="_SLUWxycoEeSLVrU2ifxtpw">
            <object xmi:id="_SLUXzCcoEeSLVrU2ifxtpw" name="Read(Interactive_PingPong$initializationFlag$1).object" incoming="_SLUXrCcoEeSLVrU2ifxtpw" type="_SLUWwScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUXzScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUXzicoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SLUXzycoEeSLVrU2ifxtpw" name="Read(Interactive_PingPong$initializationFlag$1).result" outgoing="_SLUXrScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUX0CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUX0ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUX0icoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SLUX0ycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SLUXrScoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUX1CcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUX1ScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SLUX1icoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SLUXricoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUX1ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUX2CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUX2ScoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SLUX2icoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SLUXrycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUX2ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUX3CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SLUX3ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SLUX3icoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SLUX3ycoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SLUXricoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUX4CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUX4ScoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SLUX4icoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SLUXsScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUX4ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUX5CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SLUX5ScoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SLUXrycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUX5icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUX5ycoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SLUX6CcoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SLUXsCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SLUX6ScoEeSLVrU2ifxtpw" name="Decision(Test(Interactive_PingPong$initializationFlag$1))" incoming="_SLUXsCcoEeSLVrU2ifxtpw _SLUXsScoEeSLVrU2ifxtpw" outgoing="_SLUXsicoEeSLVrU2ifxtpw" decisionInputFlow="_SLUXsScoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_SLUX6icoEeSLVrU2ifxtpw" name="Interactive_PingPong$initialization$1" visibility="protected" method="_SLUXqCcoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_SLUX6ycoEeSLVrU2ifxtpw" name="Interactive_PingPong" visibility="package" method="_SLUXaycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SLUX7CcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SLUWwScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUX7ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUX7icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SLUX7ycoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SLUXpicoEeSLVrU2ifxtpw"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SLUX8CcoEeSLVrU2ifxtpw" name="A" visibility="package" classifierBehavior="_SLUX9CcoEeSLVrU2ifxtpw" isActive="true">
        <ownedAttribute xmi:id="_SLUX8ScoEeSLVrU2ifxtpw" name="A$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUX8icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUX8ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SLUX9CcoEeSLVrU2ifxtpw" name="A$classifierBehavior$1" visibility="private" isActive="true" node="_SLUX9ScoEeSLVrU2ifxtpw" group="_SLUX9ScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SLUX9ScoEeSLVrU2ifxtpw" name="Body(A$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLUX9icoEeSLVrU2ifxtpw" target="_SLUYBicoEeSLVrU2ifxtpw" source="_SLUX_CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUX9ycoEeSLVrU2ifxtpw" target="_SLUYIicoEeSLVrU2ifxtpw" source="_SLUX_ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLUX-CcoEeSLVrU2ifxtpw" target="_SLUYFicoEeSLVrU2ifxtpw" source="_SLUYBicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUX-ScoEeSLVrU2ifxtpw" target="_SLUYcCcoEeSLVrU2ifxtpw" source="_SLUYGCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUX-icoEeSLVrU2ifxtpw" target="_SLUYcycoEeSLVrU2ifxtpw" source="_SLUX_ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLUX-ycoEeSLVrU2ifxtpw" target="_SLUYIycoEeSLVrU2ifxtpw" source="_SLUYFicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUX_CcoEeSLVrU2ifxtpw" name="AcceptStatement@59e44c30" outgoing="_SLUX9icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SLUX_ScoEeSLVrU2ifxtpw" target="_SLUYACcoEeSLVrU2ifxtpw" source="_SLUYBScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUX_icoEeSLVrU2ifxtpw" target="_SLUX_ycoEeSLVrU2ifxtpw" source="_SLUYAScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SLUX_ycoEeSLVrU2ifxtpw" name="Fork(Accept(Start).result)" incoming="_SLUX_icoEeSLVrU2ifxtpw" outgoing="_SLUX9ycoEeSLVrU2ifxtpw _SLUX-icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_SLUYACcoEeSLVrU2ifxtpw" name="Accept(Start)" incoming="_SLUX_ScoEeSLVrU2ifxtpw">
                <result xmi:id="_SLUYAScoEeSLVrU2ifxtpw" name="Accept(Start).result" outgoing="_SLUX_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYAicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYAycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <trigger xmi:id="_SLUYBCcoEeSLVrU2ifxtpw" event="_SLU-5ycoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SLUYBScoEeSLVrU2ifxtpw" name="Initial(Accept(Start))" outgoing="_SLUX_ScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYBicoEeSLVrU2ifxtpw" name="ExpressionStatement@4b630011" incoming="_SLUX9icoEeSLVrU2ifxtpw" outgoing="_SLUX-CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYBycoEeSLVrU2ifxtpw" target="_SLUYCicoEeSLVrU2ifxtpw" source="_SLUYEicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SLUYCCcoEeSLVrU2ifxtpw" target="_SLUYCScoEeSLVrU2ifxtpw" source="_SLUYECcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUYCScoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SLUYCCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SLUYCicoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SLUYBycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYCycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYDCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SLUYDScoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYDicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYDycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYECcoEeSLVrU2ifxtpw" name="Tuple@6a315701" outgoing="_SLUYCCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUYEScoEeSLVrU2ifxtpw" name="Value(&quot;Starting A&quot;)">
                  <result xmi:id="_SLUYEicoEeSLVrU2ifxtpw" name="Value(&quot;Starting A&quot;).result" outgoing="_SLUYBycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYEycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYFCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SLUYFScoEeSLVrU2ifxtpw" value="Starting A">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYFicoEeSLVrU2ifxtpw" name="ExpressionStatement@37e94da2" incoming="_SLUX-CcoEeSLVrU2ifxtpw" outgoing="_SLUX-ycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYFycoEeSLVrU2ifxtpw" target="_SLUYGCcoEeSLVrU2ifxtpw" source="_SLUYHycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SLUYGCcoEeSLVrU2ifxtpw" name="Fork(b)@688ce81f" incoming="_SLUYFycoEeSLVrU2ifxtpw" outgoing="_SLUX-ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYGScoEeSLVrU2ifxtpw" name="RightHandSide@7adb80d8">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYGicoEeSLVrU2ifxtpw" target="_SLUYHCcoEeSLVrU2ifxtpw" source="_SLUYIicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SLUYGycoEeSLVrU2ifxtpw" name="Read(b)" structuralFeature="_SLUZAicoEeSLVrU2ifxtpw">
                  <object xmi:id="_SLUYHCcoEeSLVrU2ifxtpw" name="Read(b).object" incoming="_SLUYGicoEeSLVrU2ifxtpw" type="_SLUZAScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYHScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYHicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SLUYHycoEeSLVrU2ifxtpw" name="Read(b).result" outgoing="_SLUYFycoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYICcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYIScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SLUYIicoEeSLVrU2ifxtpw" name="Fork(Fork(Accept(Start).result))" incoming="_SLUX9ycoEeSLVrU2ifxtpw" outgoing="_SLUYGicoEeSLVrU2ifxtpw"/>
              </node>
            </node>
            <node xmi:type="uml:LoopNode" xmi:id="_SLUYIycoEeSLVrU2ifxtpw" name="WhileStatement@43a8c21c" incoming="_SLUX-ycoEeSLVrU2ifxtpw" bodyOutput="_SLUYNScoEeSLVrU2ifxtpw _SLUYOCcoEeSLVrU2ifxtpw" bodyPart="_SLUYMCcoEeSLVrU2ifxtpw" decider="_SLUYLCcoEeSLVrU2ifxtpw" isTestedFirst="true" test="_SLUYKycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYJCcoEeSLVrU2ifxtpw" target="_SLUYKScoEeSLVrU2ifxtpw" source="_SLUYaicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYJScoEeSLVrU2ifxtpw" target="_SLUYKicoEeSLVrU2ifxtpw" source="_SLUYbScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYJicoEeSLVrU2ifxtpw" target="_SLUYWCcoEeSLVrU2ifxtpw" source="_SLUYKScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYJycoEeSLVrU2ifxtpw" target="_SLUYXCcoEeSLVrU2ifxtpw" source="_SLUYKScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYKCcoEeSLVrU2ifxtpw" target="_SLUYZCcoEeSLVrU2ifxtpw" source="_SLUYKicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SLUYKScoEeSLVrU2ifxtpw" name="Fork(WhileStatement@43a8c21c.loopVariable(b))" incoming="_SLUYJCcoEeSLVrU2ifxtpw" outgoing="_SLUYJicoEeSLVrU2ifxtpw _SLUYJycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SLUYKicoEeSLVrU2ifxtpw" name="Fork(WhileStatement@43a8c21c.loopVariable(start))" incoming="_SLUYJScoEeSLVrU2ifxtpw" outgoing="_SLUYKCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUYKycoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_SLUYLCcoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYLScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYLicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SLUYLycoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYMCcoEeSLVrU2ifxtpw" name="BodyPart(WhileStatement@43a8c21c)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYMScoEeSLVrU2ifxtpw" target="_SLUYNScoEeSLVrU2ifxtpw" source="_SLUYXycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYMicoEeSLVrU2ifxtpw" target="_SLUYOCcoEeSLVrU2ifxtpw" source="_SLUYZycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SLUYMycoEeSLVrU2ifxtpw" target="_SLUYQCcoEeSLVrU2ifxtpw" source="_SLUYOycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SLUYNCcoEeSLVrU2ifxtpw" target="_SLUYUCcoEeSLVrU2ifxtpw" source="_SLUYQCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SLUYNScoEeSLVrU2ifxtpw" name="b" incoming="_SLUYMScoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYNicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYNycoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
                <structuredNodeOutput xmi:id="_SLUYOCcoEeSLVrU2ifxtpw" name="start" incoming="_SLUYMicoEeSLVrU2ifxtpw" type="_SLUZAScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYOScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYOicoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYOycoEeSLVrU2ifxtpw" name="AcceptStatement@78e1d5c9" outgoing="_SLUYMycoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_SLUYPCcoEeSLVrU2ifxtpw" target="_SLUYPScoEeSLVrU2ifxtpw" source="_SLUYPycoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:AcceptEventAction" xmi:id="_SLUYPScoEeSLVrU2ifxtpw" name="Accept(Ping)" incoming="_SLUYPCcoEeSLVrU2ifxtpw">
                    <trigger xmi:id="_SLUYPicoEeSLVrU2ifxtpw" event="_SLU-6CcoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:InitialNode" xmi:id="_SLUYPycoEeSLVrU2ifxtpw" name="Initial(Accept(Ping))" outgoing="_SLUYPCcoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYQCcoEeSLVrU2ifxtpw" name="ExpressionStatement@59aa0eff" incoming="_SLUYMycoEeSLVrU2ifxtpw" outgoing="_SLUYNCcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYQScoEeSLVrU2ifxtpw" target="_SLUYRCcoEeSLVrU2ifxtpw" source="_SLUYTCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_SLUYQicoEeSLVrU2ifxtpw" target="_SLUYQycoEeSLVrU2ifxtpw" source="_SLUYSicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUYQycoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SLUYQicoEeSLVrU2ifxtpw">
                    <argument xmi:id="_SLUYRCcoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SLUYQScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYRScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYRicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SLUYRycoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYSCcoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYSScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYSicoEeSLVrU2ifxtpw" name="Tuple@712d3d44" outgoing="_SLUYQicoEeSLVrU2ifxtpw">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUYSycoEeSLVrU2ifxtpw" name="Value(&quot;Ping!&quot;)">
                      <result xmi:id="_SLUYTCcoEeSLVrU2ifxtpw" name="Value(&quot;Ping!&quot;).result" outgoing="_SLUYQScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYTScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYTicoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralString" xmi:id="_SLUYTycoEeSLVrU2ifxtpw" value="Ping!">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYUCcoEeSLVrU2ifxtpw" name="ExpressionStatement@69e3ba17" incoming="_SLUYNCcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_SLUYUScoEeSLVrU2ifxtpw" target="_SLUYUicoEeSLVrU2ifxtpw" source="_SLUYWScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_SLUYUicoEeSLVrU2ifxtpw" name="Collect(SendSignal(Pong))" incoming="_SLUYUScoEeSLVrU2ifxtpw" mode="parallel" inputElement="_SLUYWCcoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYUycoEeSLVrU2ifxtpw" target="_SLUYVScoEeSLVrU2ifxtpw" source="_SLUYWCcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:SendSignalAction" xmi:id="_SLUYVCcoEeSLVrU2ifxtpw" name="SendSignal(Pong)" signal="_SLU-5CcoEeSLVrU2ifxtpw">
                      <target xmi:id="_SLUYVScoEeSLVrU2ifxtpw" name="SendSignal(Pong).target" incoming="_SLUYUycoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYVicoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYVycoEeSLVrU2ifxtpw" value="1"/>
                      </target>
                    </node>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SLUYWCcoEeSLVrU2ifxtpw" name="Collect(SendSignal(Pong)).inputElement" incoming="_SLUYJicoEeSLVrU2ifxtpw" outgoing="_SLUYUycoEeSLVrU2ifxtpw" regionAsInput="_SLUYUicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYWScoEeSLVrU2ifxtpw" name="Feature(Fork(b)@688ce81f)" outgoing="_SLUYUScoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYWicoEeSLVrU2ifxtpw" name="Passthru(Fork(b)@688ce81f)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYWycoEeSLVrU2ifxtpw" target="_SLUYXycoEeSLVrU2ifxtpw" source="_SLUYXCcoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SLUYXCcoEeSLVrU2ifxtpw" name="Passthru(Fork(b)@688ce81f).input" incoming="_SLUYJycoEeSLVrU2ifxtpw" outgoing="_SLUYWycoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYXScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYXicoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_SLUYXycoEeSLVrU2ifxtpw" name="Passthru(Fork(b)@688ce81f).output" incoming="_SLUYWycoEeSLVrU2ifxtpw" outgoing="_SLUYMScoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYYCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYYScoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYYicoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(Start).result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYYycoEeSLVrU2ifxtpw" target="_SLUYZycoEeSLVrU2ifxtpw" source="_SLUYZCcoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SLUYZCcoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(Start).result)).input" incoming="_SLUYKCcoEeSLVrU2ifxtpw" outgoing="_SLUYYycoEeSLVrU2ifxtpw" type="_SLUZAScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYZScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYZicoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_SLUYZycoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(Start).result)).output" incoming="_SLUYYycoEeSLVrU2ifxtpw" outgoing="_SLUYMicoEeSLVrU2ifxtpw" type="_SLUZAScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYaCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYaScoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                </node>
              </node>
              <loopVariable xmi:id="_SLUYaicoEeSLVrU2ifxtpw" name="WhileStatement@43a8c21c.loopVariable(b)" outgoing="_SLUYJCcoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYaycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYbCcoEeSLVrU2ifxtpw" value="1"/>
              </loopVariable>
              <loopVariable xmi:id="_SLUYbScoEeSLVrU2ifxtpw" name="WhileStatement@43a8c21c.loopVariable(start)" outgoing="_SLUYJScoEeSLVrU2ifxtpw" type="_SLUZAScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYbicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYbycoEeSLVrU2ifxtpw" value="1"/>
              </loopVariable>
              <loopVariableInput xmi:id="_SLUYcCcoEeSLVrU2ifxtpw" name="WhileStatement@43a8c21c.loopVariableInput(b)" incoming="_SLUX-ScoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYcScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYcicoEeSLVrU2ifxtpw" value="1"/>
              </loopVariableInput>
              <loopVariableInput xmi:id="_SLUYcycoEeSLVrU2ifxtpw" name="WhileStatement@43a8c21c.loopVariableInput(start)" incoming="_SLUX-icoEeSLVrU2ifxtpw" type="_SLUZAScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYdCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYdScoEeSLVrU2ifxtpw" value="1"/>
              </loopVariableInput>
              <result xmi:id="_SLUYdicoEeSLVrU2ifxtpw" name="WhileStatement@43a8c21c.result(b)" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYdycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYeCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SLUYeScoEeSLVrU2ifxtpw" name="WhileStatement@43a8c21c.result(start)" type="_SLUZAScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYeicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYeycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SLUYfCcoEeSLVrU2ifxtpw" name="A$method$1" specification="_SLUY_CcoEeSLVrU2ifxtpw" node="_SLUYgScoEeSLVrU2ifxtpw _SLUYgicoEeSLVrU2ifxtpw" group="_SLUYgicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SLUYfScoEeSLVrU2ifxtpw" name="" type="_SLUX8CcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYficoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYfycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYgCcoEeSLVrU2ifxtpw" target="_SLUYgScoEeSLVrU2ifxtpw" source="_SLUYkycoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SLUYgicoEeSLVrU2ifxtpw" name="Body(A$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYgycoEeSLVrU2ifxtpw" target="_SLUYkycoEeSLVrU2ifxtpw" source="_SLUYkCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYhCcoEeSLVrU2ifxtpw" target="_SLUYlScoEeSLVrU2ifxtpw" source="_SLUYkycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLUYhScoEeSLVrU2ifxtpw" target="_SLUYjicoEeSLVrU2ifxtpw" source="_SLUYlCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYhicoEeSLVrU2ifxtpw" target="_SLUYmScoEeSLVrU2ifxtpw" source="_SLUYkycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYhycoEeSLVrU2ifxtpw" target="_SLUYoCcoEeSLVrU2ifxtpw" source="_SLUYnCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYiCcoEeSLVrU2ifxtpw" target="_SLUYrCcoEeSLVrU2ifxtpw" source="_SLUYoycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYiScoEeSLVrU2ifxtpw" target="_SLUYsicoEeSLVrU2ifxtpw" source="_SLUYpycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLUYiicoEeSLVrU2ifxtpw" target="_SLUYticoEeSLVrU2ifxtpw" source="_SLUYtScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYiycoEeSLVrU2ifxtpw" target="_SLUYticoEeSLVrU2ifxtpw" source="_SLUYrycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLUYjCcoEeSLVrU2ifxtpw" target="_SLUYlCcoEeSLVrU2ifxtpw" source="_SLUYticoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SLUYjScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYjicoEeSLVrU2ifxtpw" name="Body" incoming="_SLUYhScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SLUYjycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SLUYkCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SLUYgycoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYkScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYkicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SLUYkycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SLUYgycoEeSLVrU2ifxtpw" outgoing="_SLUYgCcoEeSLVrU2ifxtpw _SLUYhCcoEeSLVrU2ifxtpw _SLUYhicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SLUYlCcoEeSLVrU2ifxtpw" name="Call(A$initialization$1)" incoming="_SLUYjCcoEeSLVrU2ifxtpw" outgoing="_SLUYhScoEeSLVrU2ifxtpw" operation="_SLUY-ycoEeSLVrU2ifxtpw">
              <target xmi:id="_SLUYlScoEeSLVrU2ifxtpw" name="Call(A$initialization$1).target" incoming="_SLUYhCcoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYlicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYlycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SLUYmCcoEeSLVrU2ifxtpw" name="Read(A$initializationFlag$1)" structuralFeature="_SLUX8ScoEeSLVrU2ifxtpw">
              <object xmi:id="_SLUYmScoEeSLVrU2ifxtpw" name="Read(A$initializationFlag$1).object" incoming="_SLUYhicoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYmicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYmycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SLUYnCcoEeSLVrU2ifxtpw" name="Read(A$initializationFlag$1).result" outgoing="_SLUYhycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYnScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYnicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUYnycoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SLUYoCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SLUYhycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYoScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYoicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SLUYoycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SLUYiCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYpCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYpScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUYpicoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SLUYpycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SLUYiScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYqCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYqScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SLUYqicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SLUYqycoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SLUYrCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SLUYiCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYrScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYricoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SLUYrycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SLUYiycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYsCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYsScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SLUYsicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SLUYiScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYsycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYtCcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SLUYtScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SLUYiicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SLUYticoEeSLVrU2ifxtpw" name="Decision(Test(A$initializationFlag$1))" incoming="_SLUYiicoEeSLVrU2ifxtpw _SLUYiycoEeSLVrU2ifxtpw" outgoing="_SLUYjCcoEeSLVrU2ifxtpw" decisionInputFlow="_SLUYiycoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SLUYgScoEeSLVrU2ifxtpw" name="Return" incoming="_SLUYgCcoEeSLVrU2ifxtpw" parameter="_SLUYfScoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SLUYtycoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SLUZACcoEeSLVrU2ifxtpw" node="_SLUYuCcoEeSLVrU2ifxtpw" group="_SLUYuCcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SLUYuCcoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SLUYuScoEeSLVrU2ifxtpw" name="A$initialization$1" specification="_SLUY-ycoEeSLVrU2ifxtpw" node="_SLUYuicoEeSLVrU2ifxtpw" group="_SLUYuicoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SLUYuicoEeSLVrU2ifxtpw" name="Body(A$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYuycoEeSLVrU2ifxtpw" target="_SLUYyScoEeSLVrU2ifxtpw" source="_SLUYxicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYvCcoEeSLVrU2ifxtpw" target="_SLUY0ycoEeSLVrU2ifxtpw" source="_SLUYyScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYvScoEeSLVrU2ifxtpw" target="_SLUY3ScoEeSLVrU2ifxtpw" source="_SLUYyScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYvicoEeSLVrU2ifxtpw" target="_SLUY5CcoEeSLVrU2ifxtpw" source="_SLUY4CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYvycoEeSLVrU2ifxtpw" target="_SLUY8CcoEeSLVrU2ifxtpw" source="_SLUY5ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYwCcoEeSLVrU2ifxtpw" target="_SLUY9icoEeSLVrU2ifxtpw" source="_SLUY6ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLUYwScoEeSLVrU2ifxtpw" target="_SLUY-icoEeSLVrU2ifxtpw" source="_SLUY-ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYwicoEeSLVrU2ifxtpw" target="_SLUY-icoEeSLVrU2ifxtpw" source="_SLUY8ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLUYwycoEeSLVrU2ifxtpw" target="_SLUYyicoEeSLVrU2ifxtpw" source="_SLUY-icoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SLUYxCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SLUYxScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SLUYxicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SLUYuycoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYxycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUYyCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SLUYyScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SLUYuycoEeSLVrU2ifxtpw" outgoing="_SLUYvCcoEeSLVrU2ifxtpw _SLUYvScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYyicoEeSLVrU2ifxtpw" name="Initialization" incoming="_SLUYwycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUYyycoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUYzCcoEeSLVrU2ifxtpw" target="_SLUY2ScoEeSLVrU2ifxtpw" source="_SLUYzicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUYzScoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SLUYzicoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SLUYzCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUYzycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUY0CcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SLUY0ScoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SLUY0icoEeSLVrU2ifxtpw" name="Write(A$initializationFlag$1)" structuralFeature="_SLUX8ScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SLUY0ycoEeSLVrU2ifxtpw" name="Write(A$initializationFlag$1).object" incoming="_SLUYvCcoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUY1CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUY1ScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SLUY1icoEeSLVrU2ifxtpw" name="Write(A$initializationFlag$1).result" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUY1ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUY2CcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SLUY2ScoEeSLVrU2ifxtpw" name="Write(A$initializationFlag$1).value" incoming="_SLUYzCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUY2icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUY2ycoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SLUY3CcoEeSLVrU2ifxtpw" name="Read(A$initializationFlag$1)" structuralFeature="_SLUX8ScoEeSLVrU2ifxtpw">
              <object xmi:id="_SLUY3ScoEeSLVrU2ifxtpw" name="Read(A$initializationFlag$1).object" incoming="_SLUYvScoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUY3icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUY3ycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SLUY4CcoEeSLVrU2ifxtpw" name="Read(A$initializationFlag$1).result" outgoing="_SLUYvicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUY4ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUY4icoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUY4ycoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SLUY5CcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SLUYvicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUY5ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUY5icoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SLUY5ycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SLUYvycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUY6CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUY6ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUY6icoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SLUY6ycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SLUYwCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUY7CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUY7ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SLUY7icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SLUY7ycoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SLUY8CcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SLUYvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUY8ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUY8icoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SLUY8ycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SLUYwicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUY9CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUY9ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SLUY9icoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SLUYwCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUY9ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUY-CcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SLUY-ScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SLUYwScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SLUY-icoEeSLVrU2ifxtpw" name="Decision(Test(A$initializationFlag$1))" incoming="_SLUYwScoEeSLVrU2ifxtpw _SLUYwicoEeSLVrU2ifxtpw" outgoing="_SLUYwycoEeSLVrU2ifxtpw" decisionInputFlow="_SLUYwicoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SLUY-ycoEeSLVrU2ifxtpw" name="A$initialization$1" visibility="protected" method="_SLUYuScoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SLUY_CcoEeSLVrU2ifxtpw" name="A" visibility="package" method="_SLUYfCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SLUY_ScoEeSLVrU2ifxtpw" name="" visibility="package" type="_SLUX8CcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUY_icoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUY_ycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SLUZACcoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SLUYtycoEeSLVrU2ifxtpw"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_SLUZAScoEeSLVrU2ifxtpw" name="Start" visibility="package">
          <ownedAttribute xmi:id="_SLUZAicoEeSLVrU2ifxtpw" name="b" visibility="public" type="_SLUZCCcoEeSLVrU2ifxtpw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZAycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZBCcoEeSLVrU2ifxtpw" value="1"/>
          </ownedAttribute>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_SLUZBScoEeSLVrU2ifxtpw" name="Ping" visibility="package"/>
        <ownedReception xmi:id="_SLUZBicoEeSLVrU2ifxtpw" name="Start" signal="_SLUZAScoEeSLVrU2ifxtpw"/>
        <ownedReception xmi:id="_SLUZBycoEeSLVrU2ifxtpw" name="Ping" signal="_SLUZBScoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SLUZCCcoEeSLVrU2ifxtpw" name="B" visibility="package" classifierBehavior="_SLUZDCcoEeSLVrU2ifxtpw" isActive="true">
        <ownedAttribute xmi:id="_SLUZCScoEeSLVrU2ifxtpw" name="B$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZCicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZCycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SLUZDCcoEeSLVrU2ifxtpw" name="B$classifierBehavior$1" visibility="private" isActive="true" node="_SLUZDScoEeSLVrU2ifxtpw" group="_SLUZDScoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SLUZDScoEeSLVrU2ifxtpw" name="Body(B$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZDicoEeSLVrU2ifxtpw" target="_SLUZHycoEeSLVrU2ifxtpw" source="_SLUZFScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZDycoEeSLVrU2ifxtpw" target="_SLUZOycoEeSLVrU2ifxtpw" source="_SLUZGCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZECcoEeSLVrU2ifxtpw" target="_SLUZLycoEeSLVrU2ifxtpw" source="_SLUZHycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZEScoEeSLVrU2ifxtpw" target="_SLU-CCcoEeSLVrU2ifxtpw" source="_SLUZGCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZEicoEeSLVrU2ifxtpw" target="_SLU-CycoEeSLVrU2ifxtpw" source="_SLUZMScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZEycoEeSLVrU2ifxtpw" target="_SLU-OCcoEeSLVrU2ifxtpw" source="_SLUZGCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZFCcoEeSLVrU2ifxtpw" target="_SLUZPCcoEeSLVrU2ifxtpw" source="_SLUZLycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZFScoEeSLVrU2ifxtpw" name="AcceptStatement@2413c502" outgoing="_SLUZDicoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZFicoEeSLVrU2ifxtpw" target="_SLUZGScoEeSLVrU2ifxtpw" source="_SLUZHicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZFycoEeSLVrU2ifxtpw" target="_SLUZGCcoEeSLVrU2ifxtpw" source="_SLUZGicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SLUZGCcoEeSLVrU2ifxtpw" name="Fork(Accept(Start).result)" incoming="_SLUZFycoEeSLVrU2ifxtpw" outgoing="_SLUZDycoEeSLVrU2ifxtpw _SLUZEycoEeSLVrU2ifxtpw _SLUZEScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_SLUZGScoEeSLVrU2ifxtpw" name="Accept(Start)" incoming="_SLUZFicoEeSLVrU2ifxtpw">
                <result xmi:id="_SLUZGicoEeSLVrU2ifxtpw" name="Accept(Start).result" outgoing="_SLUZFycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZGycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZHCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <trigger xmi:id="_SLUZHScoEeSLVrU2ifxtpw" event="_SLU-6ScoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SLUZHicoEeSLVrU2ifxtpw" name="Initial(Accept(Start))" outgoing="_SLUZFicoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZHycoEeSLVrU2ifxtpw" name="ExpressionStatement@225e7bd5" incoming="_SLUZDicoEeSLVrU2ifxtpw" outgoing="_SLUZECcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZICcoEeSLVrU2ifxtpw" target="_SLUZIycoEeSLVrU2ifxtpw" source="_SLUZKycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZIScoEeSLVrU2ifxtpw" target="_SLUZIicoEeSLVrU2ifxtpw" source="_SLUZKScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUZIicoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SLUZIScoEeSLVrU2ifxtpw">
                <argument xmi:id="_SLUZIycoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SLUZICcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZJCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZJScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SLUZJicoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZJycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZKCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZKScoEeSLVrU2ifxtpw" name="Tuple@781c3b15" outgoing="_SLUZIScoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUZKicoEeSLVrU2ifxtpw" name="Value(&quot;Starting B&quot;)">
                  <result xmi:id="_SLUZKycoEeSLVrU2ifxtpw" name="Value(&quot;Starting B&quot;).result" outgoing="_SLUZICcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZLCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZLScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SLUZLicoEeSLVrU2ifxtpw" value="Starting B">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZLycoEeSLVrU2ifxtpw" name="ExpressionStatement@2928a5f3" incoming="_SLUZECcoEeSLVrU2ifxtpw" outgoing="_SLUZFCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZMCcoEeSLVrU2ifxtpw" target="_SLUZMScoEeSLVrU2ifxtpw" source="_SLUZOCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SLUZMScoEeSLVrU2ifxtpw" name="Fork(a)@38078054" incoming="_SLUZMCcoEeSLVrU2ifxtpw" outgoing="_SLUZEicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZMicoEeSLVrU2ifxtpw" name="RightHandSide@747a2788">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZMycoEeSLVrU2ifxtpw" target="_SLUZNScoEeSLVrU2ifxtpw" source="_SLUZOycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SLUZNCcoEeSLVrU2ifxtpw" name="Read(a)" structuralFeature="_SLU-3icoEeSLVrU2ifxtpw">
                  <object xmi:id="_SLUZNScoEeSLVrU2ifxtpw" name="Read(a).object" incoming="_SLUZMycoEeSLVrU2ifxtpw" type="_SLU-3ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZNicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZNycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SLUZOCcoEeSLVrU2ifxtpw" name="Read(a).result" outgoing="_SLUZMCcoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZOScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZOicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SLUZOycoEeSLVrU2ifxtpw" name="Fork(Fork(Accept(Start).result))" incoming="_SLUZDycoEeSLVrU2ifxtpw" outgoing="_SLUZMycoEeSLVrU2ifxtpw"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZPCcoEeSLVrU2ifxtpw" name="ForStatement@421935c" incoming="_SLUZFCcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZPScoEeSLVrU2ifxtpw" target="_SLU-OScoEeSLVrU2ifxtpw" source="_SLU-LScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZPicoEeSLVrU2ifxtpw" target="_SLU-EScoEeSLVrU2ifxtpw" source="_SLU-VCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZPycoEeSLVrU2ifxtpw" target="_SLU-FCcoEeSLVrU2ifxtpw" source="_SLU-UCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZQCcoEeSLVrU2ifxtpw" target="_SLU-DicoEeSLVrU2ifxtpw" source="_SLU-OScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZQScoEeSLVrU2ifxtpw" target="_SLUZQicoEeSLVrU2ifxtpw" source="_SLU-JicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:LoopNode" xmi:id="_SLUZQicoEeSLVrU2ifxtpw" name="Loop(ForStatement@421935c)" incoming="_SLUZQScoEeSLVrU2ifxtpw" bodyOutput="_SLUZbCcoEeSLVrU2ifxtpw _SLUZbycoEeSLVrU2ifxtpw _SLU92icoEeSLVrU2ifxtpw _SLU96ScoEeSLVrU2ifxtpw _SLU99icoEeSLVrU2ifxtpw" bodyPart="_SLUZZCcoEeSLVrU2ifxtpw _SLUZZicoEeSLVrU2ifxtpw _SLU90ycoEeSLVrU2ifxtpw _SLU93ScoEeSLVrU2ifxtpw _SLU94icoEeSLVrU2ifxtpw _SLU97CcoEeSLVrU2ifxtpw _SLU98ScoEeSLVrU2ifxtpw" decider="_SLUZYScoEeSLVrU2ifxtpw" isTestedFirst="true" test="_SLUZWicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZQycoEeSLVrU2ifxtpw" target="_SLUZVScoEeSLVrU2ifxtpw" source="_SLU9-ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZRCcoEeSLVrU2ifxtpw" target="_SLUZVicoEeSLVrU2ifxtpw" source="_SLU9_CcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZRScoEeSLVrU2ifxtpw" target="_SLUZVycoEeSLVrU2ifxtpw" source="_SLU9_ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZRicoEeSLVrU2ifxtpw" target="_SLUZWCcoEeSLVrU2ifxtpw" source="_SLU-AicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZRycoEeSLVrU2ifxtpw" target="_SLUZWScoEeSLVrU2ifxtpw" source="_SLU-BScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZSCcoEeSLVrU2ifxtpw" target="_SLUZWycoEeSLVrU2ifxtpw" source="_SLUZWCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZSScoEeSLVrU2ifxtpw" target="_SLUZXicoEeSLVrU2ifxtpw" source="_SLUZWScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZSicoEeSLVrU2ifxtpw" target="_SLUZZScoEeSLVrU2ifxtpw" source="_SLU9_ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZSycoEeSLVrU2ifxtpw" target="_SLUZZicoEeSLVrU2ifxtpw" source="_SLUZZCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZTCcoEeSLVrU2ifxtpw" target="_SLUZhScoEeSLVrU2ifxtpw" source="_SLUZZScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZTScoEeSLVrU2ifxtpw" target="_SLU91CcoEeSLVrU2ifxtpw" source="_SLUZVycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZTicoEeSLVrU2ifxtpw" target="_SLU91ycoEeSLVrU2ifxtpw" source="_SLU93icoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZTycoEeSLVrU2ifxtpw" target="_SLU94ycoEeSLVrU2ifxtpw" source="_SLUZWCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZUCcoEeSLVrU2ifxtpw" target="_SLU95icoEeSLVrU2ifxtpw" source="_SLU97ScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZUScoEeSLVrU2ifxtpw" target="_SLU98ycoEeSLVrU2ifxtpw" source="_SLUZWScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZUicoEeSLVrU2ifxtpw" target="_SLUZnScoEeSLVrU2ifxtpw" source="_SLUZVicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZUycoEeSLVrU2ifxtpw" target="_SLUZticoEeSLVrU2ifxtpw" source="_SLUZVScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZVCcoEeSLVrU2ifxtpw" target="_SLUZvicoEeSLVrU2ifxtpw" source="_SLUZVicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_SLUZVScoEeSLVrU2ifxtpw" name="Fork(ForStatement@421935c.loopVariable(start))" incoming="_SLUZQycoEeSLVrU2ifxtpw" outgoing="_SLUZUycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_SLUZVicoEeSLVrU2ifxtpw" name="Fork(ForStatement@421935c.loopVariable(a))" incoming="_SLUZRCcoEeSLVrU2ifxtpw" outgoing="_SLUZUicoEeSLVrU2ifxtpw _SLUZVCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_SLUZVycoEeSLVrU2ifxtpw" name="Fork(ForStatement@421935c.loopVariable(i))" incoming="_SLUZRScoEeSLVrU2ifxtpw" outgoing="_SLUZTScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_SLUZWCcoEeSLVrU2ifxtpw" name="Fork(ForStatement@421935c.loopVariable(counter))" incoming="_SLUZRicoEeSLVrU2ifxtpw" outgoing="_SLUZSCcoEeSLVrU2ifxtpw _SLUZTycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_SLUZWScoEeSLVrU2ifxtpw" name="Fork(ForStatement@421935c.loopVariable(upper))" incoming="_SLUZRycoEeSLVrU2ifxtpw" outgoing="_SLUZSScoEeSLVrU2ifxtpw _SLUZUScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUZWicoEeSLVrU2ifxtpw" name="Call(&lt;=)">
                  <argument xmi:id="_SLUZWycoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(x)" incoming="_SLUZSCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZXCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZXScoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SLUZXicoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(y)" incoming="_SLUZSScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZXycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZYCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_SLUZYScoEeSLVrU2ifxtpw" name="Call(&lt;=).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZYicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZYycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZZCcoEeSLVrU2ifxtpw" name="Values(ForStatement@421935c)" outgoing="_SLUZSycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ForkNode" xmi:id="_SLUZZScoEeSLVrU2ifxtpw" name="Fork(i)" incoming="_SLUZSicoEeSLVrU2ifxtpw" outgoing="_SLUZTCcoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZZicoEeSLVrU2ifxtpw" name="Body(ForStatement@421935c)" incoming="_SLUZSycoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZZycoEeSLVrU2ifxtpw" target="_SLUZbCcoEeSLVrU2ifxtpw" source="_SLUZuScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZaCcoEeSLVrU2ifxtpw" target="_SLUZbycoEeSLVrU2ifxtpw" source="_SLU90CcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZaScoEeSLVrU2ifxtpw" target="_SLUZlScoEeSLVrU2ifxtpw" source="_SLUZcicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZaicoEeSLVrU2ifxtpw" target="_SLUZnycoEeSLVrU2ifxtpw" source="_SLUZlScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZaycoEeSLVrU2ifxtpw" target="_SLUZpCcoEeSLVrU2ifxtpw" source="_SLUZnycoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_SLUZbCcoEeSLVrU2ifxtpw" name="start" incoming="_SLUZZycoEeSLVrU2ifxtpw" type="_SLU-3ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZbScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZbicoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                  <structuredNodeOutput xmi:id="_SLUZbycoEeSLVrU2ifxtpw" name="a" incoming="_SLUZaCcoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZcCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZcScoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZcicoEeSLVrU2ifxtpw" name="ExpressionStatement@6b1d09" outgoing="_SLUZaScoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZcycoEeSLVrU2ifxtpw" target="_SLUZdicoEeSLVrU2ifxtpw" source="_SLUZkicoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZdCcoEeSLVrU2ifxtpw" target="_SLUZdScoEeSLVrU2ifxtpw" source="_SLUZfCcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUZdScoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SLUZdCcoEeSLVrU2ifxtpw">
                      <argument xmi:id="_SLUZdicoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SLUZcycoEeSLVrU2ifxtpw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZdycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZeCcoEeSLVrU2ifxtpw" value="1"/>
                      </argument>
                      <result xmi:id="_SLUZeScoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZeicoEeSLVrU2ifxtpw"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZeycoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZfCcoEeSLVrU2ifxtpw" name="Tuple@615d8588" outgoing="_SLUZdCcoEeSLVrU2ifxtpw">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZfScoEeSLVrU2ifxtpw" target="_SLUZjCcoEeSLVrU2ifxtpw" source="_SLUZgCcoEeSLVrU2ifxtpw"/>
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZficoEeSLVrU2ifxtpw" target="_SLUZjycoEeSLVrU2ifxtpw" source="_SLUZiCcoEeSLVrU2ifxtpw"/>
                      <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUZfycoEeSLVrU2ifxtpw" name="Value(&quot;i = &quot;)">
                        <result xmi:id="_SLUZgCcoEeSLVrU2ifxtpw" name="Value(&quot;i = &quot;).result" outgoing="_SLUZfScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZgScoEeSLVrU2ifxtpw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZgicoEeSLVrU2ifxtpw" value="1"/>
                        </result>
                        <value xmi:type="uml:LiteralString" xmi:id="_SLUZgycoEeSLVrU2ifxtpw" value="i = ">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        </value>
                      </node>
                      <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUZhCcoEeSLVrU2ifxtpw" name="Call(ToString)">
                        <argument xmi:id="_SLUZhScoEeSLVrU2ifxtpw" name="Call(ToString).argument(x)" incoming="_SLUZTCcoEeSLVrU2ifxtpw">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZhicoEeSLVrU2ifxtpw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZhycoEeSLVrU2ifxtpw" value="1"/>
                        </argument>
                        <result xmi:id="_SLUZiCcoEeSLVrU2ifxtpw" name="Call(ToString).result(result)" outgoing="_SLUZficoEeSLVrU2ifxtpw">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZiScoEeSLVrU2ifxtpw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZiicoEeSLVrU2ifxtpw" value="1"/>
                        </result>
                        <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                      </node>
                      <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUZiycoEeSLVrU2ifxtpw" name="Call(Concat)">
                        <argument xmi:id="_SLUZjCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SLUZfScoEeSLVrU2ifxtpw">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZjScoEeSLVrU2ifxtpw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZjicoEeSLVrU2ifxtpw" value="1"/>
                        </argument>
                        <argument xmi:id="_SLUZjycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SLUZficoEeSLVrU2ifxtpw">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZkCcoEeSLVrU2ifxtpw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZkScoEeSLVrU2ifxtpw" value="1"/>
                        </argument>
                        <result xmi:id="_SLUZkicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SLUZcycoEeSLVrU2ifxtpw">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZkycoEeSLVrU2ifxtpw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZlCcoEeSLVrU2ifxtpw" value="1"/>
                        </result>
                        <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                      </node>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZlScoEeSLVrU2ifxtpw" name="ExpressionStatement@5939bbce" incoming="_SLUZaScoEeSLVrU2ifxtpw" outgoing="_SLUZaicoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZlicoEeSLVrU2ifxtpw" target="_SLUZlycoEeSLVrU2ifxtpw" source="_SLUZnicoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ExpansionRegion" xmi:id="_SLUZlycoEeSLVrU2ifxtpw" name="Collect(SendSignal(Ping))" incoming="_SLUZlicoEeSLVrU2ifxtpw" mode="parallel" inputElement="_SLUZnScoEeSLVrU2ifxtpw">
                      <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZmCcoEeSLVrU2ifxtpw" target="_SLUZmicoEeSLVrU2ifxtpw" source="_SLUZnScoEeSLVrU2ifxtpw"/>
                      <node xmi:type="uml:SendSignalAction" xmi:id="_SLUZmScoEeSLVrU2ifxtpw" name="SendSignal(Ping)" signal="_SLUZBScoEeSLVrU2ifxtpw">
                        <target xmi:id="_SLUZmicoEeSLVrU2ifxtpw" name="SendSignal(Ping).target" incoming="_SLUZmCcoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZmycoEeSLVrU2ifxtpw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZnCcoEeSLVrU2ifxtpw" value="1"/>
                        </target>
                      </node>
                    </node>
                    <node xmi:type="uml:ExpansionNode" xmi:id="_SLUZnScoEeSLVrU2ifxtpw" name="Collect(SendSignal(Ping)).inputElement" incoming="_SLUZUicoEeSLVrU2ifxtpw" outgoing="_SLUZmCcoEeSLVrU2ifxtpw" regionAsInput="_SLUZlycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZnicoEeSLVrU2ifxtpw" name="Feature(Fork(a)@38078054)" outgoing="_SLUZlicoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZnycoEeSLVrU2ifxtpw" name="AcceptStatement@22aab688" incoming="_SLUZaicoEeSLVrU2ifxtpw" outgoing="_SLUZaycoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZoCcoEeSLVrU2ifxtpw" target="_SLUZoScoEeSLVrU2ifxtpw" source="_SLUZoycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:AcceptEventAction" xmi:id="_SLUZoScoEeSLVrU2ifxtpw" name="Accept(Pong)" incoming="_SLUZoCcoEeSLVrU2ifxtpw">
                      <trigger xmi:id="_SLUZoicoEeSLVrU2ifxtpw" event="_SLU-6icoEeSLVrU2ifxtpw"/>
                    </node>
                    <node xmi:type="uml:InitialNode" xmi:id="_SLUZoycoEeSLVrU2ifxtpw" name="Initial(Accept(Pong))" outgoing="_SLUZoCcoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZpCcoEeSLVrU2ifxtpw" name="ExpressionStatement@23959d6f" incoming="_SLUZaycoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZpScoEeSLVrU2ifxtpw" target="_SLUZqCcoEeSLVrU2ifxtpw" source="_SLUZsCcoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ControlFlow" xmi:id="_SLUZpicoEeSLVrU2ifxtpw" target="_SLUZpycoEeSLVrU2ifxtpw" source="_SLUZricoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLUZpycoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SLUZpicoEeSLVrU2ifxtpw">
                      <argument xmi:id="_SLUZqCcoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SLUZpScoEeSLVrU2ifxtpw">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZqScoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZqicoEeSLVrU2ifxtpw" value="1"/>
                      </argument>
                      <result xmi:id="_SLUZqycoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZrCcoEeSLVrU2ifxtpw"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZrScoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                      <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
                    </node>
                    <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZricoEeSLVrU2ifxtpw" name="Tuple@4a7ef04f" outgoing="_SLUZpicoEeSLVrU2ifxtpw">
                      <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLUZrycoEeSLVrU2ifxtpw" name="Value(&quot;Pong!&quot;)">
                        <result xmi:id="_SLUZsCcoEeSLVrU2ifxtpw" name="Value(&quot;Pong!&quot;).result" outgoing="_SLUZpScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZsScoEeSLVrU2ifxtpw" value="1"/>
                          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZsicoEeSLVrU2ifxtpw" value="1"/>
                        </result>
                        <value xmi:type="uml:LiteralString" xmi:id="_SLUZsycoEeSLVrU2ifxtpw" value="Pong!">
                          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        </value>
                      </node>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZtCcoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(Start).result))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZtScoEeSLVrU2ifxtpw" target="_SLUZuScoEeSLVrU2ifxtpw" source="_SLUZticoEeSLVrU2ifxtpw"/>
                    <structuredNodeInput xmi:id="_SLUZticoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(Start).result)).input" incoming="_SLUZUycoEeSLVrU2ifxtpw" outgoing="_SLUZtScoEeSLVrU2ifxtpw" type="_SLU-3ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZtycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZuCcoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_SLUZuScoEeSLVrU2ifxtpw" name="Passthru(Fork(Accept(Start).result)).output" incoming="_SLUZtScoEeSLVrU2ifxtpw" outgoing="_SLUZZycoEeSLVrU2ifxtpw" type="_SLU-3ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZuicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZuycoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLUZvCcoEeSLVrU2ifxtpw" name="Passthru(Fork(a)@38078054)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SLUZvScoEeSLVrU2ifxtpw" target="_SLU90CcoEeSLVrU2ifxtpw" source="_SLUZvicoEeSLVrU2ifxtpw"/>
                    <structuredNodeInput xmi:id="_SLUZvicoEeSLVrU2ifxtpw" name="Passthru(Fork(a)@38078054).input" incoming="_SLUZVCcoEeSLVrU2ifxtpw" outgoing="_SLUZvScoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUZvycoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUZwCcoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_SLU90CcoEeSLVrU2ifxtpw" name="Passthru(Fork(a)@38078054).output" incoming="_SLUZvScoEeSLVrU2ifxtpw" outgoing="_SLUZaCcoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU90ScoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU90icoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeOutput>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLU90ycoEeSLVrU2ifxtpw" name="Call(+)">
                  <argument xmi:id="_SLU91CcoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_SLUZTScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU91ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU91icoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SLU91ycoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_SLUZTicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU92CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU92ScoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_SLU92icoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU92ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU93CcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLU93ScoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SLU93icoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SLUZTicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU93ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU94CcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SLU94ScoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLU94icoEeSLVrU2ifxtpw" name="Call(+)">
                  <argument xmi:id="_SLU94ycoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_SLUZTycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU95CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU95ScoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SLU95icoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_SLUZUCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU95ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU96CcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_SLU96ScoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU96icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU96ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLU97CcoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SLU97ScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SLUZUCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU97icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU97ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SLU98CcoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLU98ScoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU98icoEeSLVrU2ifxtpw" target="_SLU99icoEeSLVrU2ifxtpw" source="_SLU98ycoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SLU98ycoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).input" incoming="_SLUZUScoEeSLVrU2ifxtpw" outgoing="_SLU98icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU99CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU99ScoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_SLU99icoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).output" incoming="_SLU98icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU99ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU9-CcoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeOutput>
                </node>
                <loopVariable xmi:id="_SLU9-ScoEeSLVrU2ifxtpw" name="ForStatement@421935c.loopVariable(start)" outgoing="_SLUZQycoEeSLVrU2ifxtpw" type="_SLU-3ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU9-icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU9-ycoEeSLVrU2ifxtpw" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_SLU9_CcoEeSLVrU2ifxtpw" name="ForStatement@421935c.loopVariable(a)" outgoing="_SLUZRCcoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU9_ScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU9_icoEeSLVrU2ifxtpw" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_SLU9_ycoEeSLVrU2ifxtpw" name="ForStatement@421935c.loopVariable(i)" outgoing="_SLUZRScoEeSLVrU2ifxtpw _SLUZSicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-ACcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-AScoEeSLVrU2ifxtpw" value="*"/>
                </loopVariable>
                <loopVariable xmi:id="_SLU-AicoEeSLVrU2ifxtpw" name="ForStatement@421935c.loopVariable(counter)" outgoing="_SLUZRicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-AycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-BCcoEeSLVrU2ifxtpw" value="1"/>
                </loopVariable>
                <loopVariable xmi:id="_SLU-BScoEeSLVrU2ifxtpw" name="ForStatement@421935c.loopVariable(upper)" outgoing="_SLUZRycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-BicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-BycoEeSLVrU2ifxtpw" value="1"/>
                </loopVariable>
                <loopVariableInput xmi:id="_SLU-CCcoEeSLVrU2ifxtpw" name="ForStatement@421935c.loopVariableInput(start)" incoming="_SLUZEScoEeSLVrU2ifxtpw" type="_SLU-3ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-CScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-CicoEeSLVrU2ifxtpw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_SLU-CycoEeSLVrU2ifxtpw" name="ForStatement@421935c.loopVariableInput(a)" incoming="_SLUZEicoEeSLVrU2ifxtpw" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-DCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-DScoEeSLVrU2ifxtpw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_SLU-DicoEeSLVrU2ifxtpw" name="ForStatement@421935c.loopVariableInput(i)" incoming="_SLUZQCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-DycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-ECcoEeSLVrU2ifxtpw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_SLU-EScoEeSLVrU2ifxtpw" name="ForStatement@421935c.loopVariableInput(counter)" incoming="_SLUZPicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-EicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-EycoEeSLVrU2ifxtpw" value="1"/>
                </loopVariableInput>
                <loopVariableInput xmi:id="_SLU-FCcoEeSLVrU2ifxtpw" name="ForStatement@421935c.loopVariableInput(upper)" incoming="_SLUZPycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-FScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-FicoEeSLVrU2ifxtpw" value="1"/>
                </loopVariableInput>
                <result xmi:id="_SLU-FycoEeSLVrU2ifxtpw" name="ForStatement@421935c.result(start)" type="_SLU-3ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-GCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-GScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <result xmi:id="_SLU-GicoEeSLVrU2ifxtpw" name="ForStatement@421935c.result(a)" type="_SLUX8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-GycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-HCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <result xmi:id="_SLU-HScoEeSLVrU2ifxtpw" name="ForStatement@421935c.result(i)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-HicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-HycoEeSLVrU2ifxtpw" value="*"/>
                </result>
                <result xmi:id="_SLU-ICcoEeSLVrU2ifxtpw" name="ForStatement@421935c.result(counter)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-IScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-IicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <result xmi:id="_SLU-IycoEeSLVrU2ifxtpw" name="ForStatement@421935c.result(upper)" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-JCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-JScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLU-JicoEeSLVrU2ifxtpw" name="LoopVariables(ForStatement@421935c)" outgoing="_SLUZQScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-JycoEeSLVrU2ifxtpw" target="_SLU-MicoEeSLVrU2ifxtpw" source="_SLU-OCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-KCcoEeSLVrU2ifxtpw" target="_SLU-OycoEeSLVrU2ifxtpw" source="_SLU-NScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-KScoEeSLVrU2ifxtpw" target="_SLU-PicoEeSLVrU2ifxtpw" source="_SLU-OScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-KicoEeSLVrU2ifxtpw" target="_SLU-SicoEeSLVrU2ifxtpw" source="_SLU-QScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-KycoEeSLVrU2ifxtpw" target="_SLU-TScoEeSLVrU2ifxtpw" source="_SLU-RScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLU-LCcoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SLU-LScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SLUZPScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-LicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-LycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SLU-MCcoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SLU-MScoEeSLVrU2ifxtpw" name="Read(n)" structuralFeature="_SLU-4ScoEeSLVrU2ifxtpw">
                  <object xmi:id="_SLU-MicoEeSLVrU2ifxtpw" name="Read(n).object" incoming="_SLU-JycoEeSLVrU2ifxtpw" type="_SLU-3ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-MycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-NCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SLU-NScoEeSLVrU2ifxtpw" name="Read(n).result" outgoing="_SLU-KCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-NicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-NycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SLU-OCcoEeSLVrU2ifxtpw" name="Fork(Fork(Accept(Start).result))" incoming="_SLUZEycoEeSLVrU2ifxtpw" outgoing="_SLU-JycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ForkNode" xmi:id="_SLU-OScoEeSLVrU2ifxtpw" name="Fork(Value(1).result)" incoming="_SLUZPScoEeSLVrU2ifxtpw" outgoing="_SLUZQCcoEeSLVrU2ifxtpw _SLU-KScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLU-OicoEeSLVrU2ifxtpw" name="Call(-)">
                  <argument xmi:id="_SLU-OycoEeSLVrU2ifxtpw" name="Call(-).argument(x)" incoming="_SLU-KCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-PCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-PScoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SLU-PicoEeSLVrU2ifxtpw" name="Call(-).argument(y)" incoming="_SLU-KScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-PycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-QCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_SLU-QScoEeSLVrU2ifxtpw" name="Call(-).result(result)" outgoing="_SLU-KicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-QicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-QycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLU-RCcoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SLU-RScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SLU-KycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-RicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-RycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SLU-SCcoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLU-SScoEeSLVrU2ifxtpw" name="Call(+)">
                  <argument xmi:id="_SLU-SicoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_SLU-KicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-SycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-TCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SLU-TScoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_SLU-KycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-TicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-TycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_SLU-UCcoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_SLUZPycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-UScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-UicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLU-UycoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_SLU-VCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SLUZPicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-VScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-VicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SLU-VycoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SLU-WCcoEeSLVrU2ifxtpw" name="B$method$1" specification="_SLU-2CcoEeSLVrU2ifxtpw" node="_SLU-XScoEeSLVrU2ifxtpw _SLU-XicoEeSLVrU2ifxtpw" group="_SLU-XicoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SLU-WScoEeSLVrU2ifxtpw" name="" type="_SLUZCCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-WicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-WycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-XCcoEeSLVrU2ifxtpw" target="_SLU-XScoEeSLVrU2ifxtpw" source="_SLU-bycoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SLU-XicoEeSLVrU2ifxtpw" name="Body(B$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-XycoEeSLVrU2ifxtpw" target="_SLU-bycoEeSLVrU2ifxtpw" source="_SLU-bCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-YCcoEeSLVrU2ifxtpw" target="_SLU-cScoEeSLVrU2ifxtpw" source="_SLU-bycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLU-YScoEeSLVrU2ifxtpw" target="_SLU-aicoEeSLVrU2ifxtpw" source="_SLU-cCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-YicoEeSLVrU2ifxtpw" target="_SLU-dScoEeSLVrU2ifxtpw" source="_SLU-bycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-YycoEeSLVrU2ifxtpw" target="_SLU-fCcoEeSLVrU2ifxtpw" source="_SLU-eCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-ZCcoEeSLVrU2ifxtpw" target="_SLU-iCcoEeSLVrU2ifxtpw" source="_SLU-fycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-ZScoEeSLVrU2ifxtpw" target="_SLU-jicoEeSLVrU2ifxtpw" source="_SLU-gycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLU-ZicoEeSLVrU2ifxtpw" target="_SLU-kicoEeSLVrU2ifxtpw" source="_SLU-kScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-ZycoEeSLVrU2ifxtpw" target="_SLU-kicoEeSLVrU2ifxtpw" source="_SLU-iycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLU-aCcoEeSLVrU2ifxtpw" target="_SLU-cCcoEeSLVrU2ifxtpw" source="_SLU-kicoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SLU-aScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLU-aicoEeSLVrU2ifxtpw" name="Body" incoming="_SLU-YScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SLU-aycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SLU-bCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SLU-XycoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-bScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-bicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SLU-bycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SLU-XycoEeSLVrU2ifxtpw" outgoing="_SLU-XCcoEeSLVrU2ifxtpw _SLU-YCcoEeSLVrU2ifxtpw _SLU-YicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SLU-cCcoEeSLVrU2ifxtpw" name="Call(B$initialization$1)" incoming="_SLU-aCcoEeSLVrU2ifxtpw" outgoing="_SLU-YScoEeSLVrU2ifxtpw" operation="_SLU-1ycoEeSLVrU2ifxtpw">
              <target xmi:id="_SLU-cScoEeSLVrU2ifxtpw" name="Call(B$initialization$1).target" incoming="_SLU-YCcoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-cicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-cycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SLU-dCcoEeSLVrU2ifxtpw" name="Read(B$initializationFlag$1)" structuralFeature="_SLUZCScoEeSLVrU2ifxtpw">
              <object xmi:id="_SLU-dScoEeSLVrU2ifxtpw" name="Read(B$initializationFlag$1).object" incoming="_SLU-YicoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-dicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-dycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SLU-eCcoEeSLVrU2ifxtpw" name="Read(B$initializationFlag$1).result" outgoing="_SLU-YycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-eScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-eicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLU-eycoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SLU-fCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SLU-YycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-fScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-ficoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SLU-fycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SLU-ZCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-gCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-gScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLU-gicoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SLU-gycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SLU-ZScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-hCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-hScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SLU-hicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SLU-hycoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SLU-iCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SLU-ZCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-iScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-iicoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SLU-iycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SLU-ZycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-jCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-jScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SLU-jicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SLU-ZScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-jycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-kCcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SLU-kScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SLU-ZicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SLU-kicoEeSLVrU2ifxtpw" name="Decision(Test(B$initializationFlag$1))" incoming="_SLU-ZicoEeSLVrU2ifxtpw _SLU-ZycoEeSLVrU2ifxtpw" outgoing="_SLU-aCcoEeSLVrU2ifxtpw" decisionInputFlow="_SLU-ZycoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SLU-XScoEeSLVrU2ifxtpw" name="Return" incoming="_SLU-XCcoEeSLVrU2ifxtpw" parameter="_SLU-WScoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SLU-kycoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SLU-3CcoEeSLVrU2ifxtpw" node="_SLU-lCcoEeSLVrU2ifxtpw" group="_SLU-lCcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SLU-lCcoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SLU-lScoEeSLVrU2ifxtpw" name="B$initialization$1" specification="_SLU-1ycoEeSLVrU2ifxtpw" node="_SLU-licoEeSLVrU2ifxtpw" group="_SLU-licoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SLU-licoEeSLVrU2ifxtpw" name="Body(B$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-lycoEeSLVrU2ifxtpw" target="_SLU-pScoEeSLVrU2ifxtpw" source="_SLU-oicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-mCcoEeSLVrU2ifxtpw" target="_SLU-rycoEeSLVrU2ifxtpw" source="_SLU-pScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-mScoEeSLVrU2ifxtpw" target="_SLU-uScoEeSLVrU2ifxtpw" source="_SLU-pScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-micoEeSLVrU2ifxtpw" target="_SLU-wCcoEeSLVrU2ifxtpw" source="_SLU-vCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-mycoEeSLVrU2ifxtpw" target="_SLU-zCcoEeSLVrU2ifxtpw" source="_SLU-wycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-nCcoEeSLVrU2ifxtpw" target="_SLU-0icoEeSLVrU2ifxtpw" source="_SLU-xycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLU-nScoEeSLVrU2ifxtpw" target="_SLU-1icoEeSLVrU2ifxtpw" source="_SLU-1ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-nicoEeSLVrU2ifxtpw" target="_SLU-1icoEeSLVrU2ifxtpw" source="_SLU-zycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLU-nycoEeSLVrU2ifxtpw" target="_SLU-picoEeSLVrU2ifxtpw" source="_SLU-1icoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SLU-oCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SLU-oScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SLU-oicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SLU-lycoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-oycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-pCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SLU-pScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SLU-lycoEeSLVrU2ifxtpw" outgoing="_SLU-mCcoEeSLVrU2ifxtpw _SLU-mScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLU-picoEeSLVrU2ifxtpw" name="Initialization" incoming="_SLU-nycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLU-pycoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-qCcoEeSLVrU2ifxtpw" target="_SLU-tScoEeSLVrU2ifxtpw" source="_SLU-qicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLU-qScoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SLU-qicoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SLU-qCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-qycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-rCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SLU-rScoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SLU-ricoEeSLVrU2ifxtpw" name="Write(B$initializationFlag$1)" structuralFeature="_SLUZCScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SLU-rycoEeSLVrU2ifxtpw" name="Write(B$initializationFlag$1).object" incoming="_SLU-mCcoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-sCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-sScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SLU-sicoEeSLVrU2ifxtpw" name="Write(B$initializationFlag$1).result" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-sycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-tCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SLU-tScoEeSLVrU2ifxtpw" name="Write(B$initializationFlag$1).value" incoming="_SLU-qCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-ticoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-tycoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SLU-uCcoEeSLVrU2ifxtpw" name="Read(B$initializationFlag$1)" structuralFeature="_SLUZCScoEeSLVrU2ifxtpw">
              <object xmi:id="_SLU-uScoEeSLVrU2ifxtpw" name="Read(B$initializationFlag$1).object" incoming="_SLU-mScoEeSLVrU2ifxtpw" type="_SLUZCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-uicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-uycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SLU-vCcoEeSLVrU2ifxtpw" name="Read(B$initializationFlag$1).result" outgoing="_SLU-micoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-vScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-vicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLU-vycoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SLU-wCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SLU-micoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-wScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-wicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SLU-wycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SLU-mycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-xCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-xScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLU-xicoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SLU-xycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SLU-nCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-yCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-yScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SLU-yicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SLU-yycoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SLU-zCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SLU-mycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-zScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-zicoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SLU-zycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SLU-nicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-0CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-0ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SLU-0icoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SLU-nCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-0ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-1CcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SLU-1ScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SLU-nScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SLU-1icoEeSLVrU2ifxtpw" name="Decision(Test(B$initializationFlag$1))" incoming="_SLU-nScoEeSLVrU2ifxtpw _SLU-nicoEeSLVrU2ifxtpw" outgoing="_SLU-nycoEeSLVrU2ifxtpw" decisionInputFlow="_SLU-nicoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SLU-1ycoEeSLVrU2ifxtpw" name="B$initialization$1" visibility="protected" method="_SLU-lScoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SLU-2CcoEeSLVrU2ifxtpw" name="B" visibility="package" method="_SLU-WCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SLU-2ScoEeSLVrU2ifxtpw" name="" visibility="package" type="_SLUZCCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-2icoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-2ycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SLU-3CcoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SLU-kycoEeSLVrU2ifxtpw"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_SLU-3ScoEeSLVrU2ifxtpw" name="Start" visibility="package">
          <ownedAttribute xmi:id="_SLU-3icoEeSLVrU2ifxtpw" name="a" visibility="public" type="_SLUX8CcoEeSLVrU2ifxtpw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-3ycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-4CcoEeSLVrU2ifxtpw" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_SLU-4ScoEeSLVrU2ifxtpw" name="n" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-4icoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-4ycoEeSLVrU2ifxtpw" value="1"/>
          </ownedAttribute>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_SLU-5CcoEeSLVrU2ifxtpw" name="Pong" visibility="package"/>
        <ownedReception xmi:id="_SLU-5ScoEeSLVrU2ifxtpw" name="Start" signal="_SLU-3ScoEeSLVrU2ifxtpw"/>
        <ownedReception xmi:id="_SLU-5icoEeSLVrU2ifxtpw" name="Pong" signal="_SLU-5CcoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SLU-5ycoEeSLVrU2ifxtpw" name="Event(Start)" signal="_SLUZAScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SLU-6CcoEeSLVrU2ifxtpw" name="Event(Ping)" signal="_SLUZBScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SLU-6ScoEeSLVrU2ifxtpw" name="Event(Start)" signal="_SLU-3ScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_SLU-6icoEeSLVrU2ifxtpw" name="Event(Pong)" signal="_SLU-5CcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SLU-6ycoEeSLVrU2ifxtpw" name="Write" node="_SLU-9icoEeSLVrU2ifxtpw _SLU-9ycoEeSLVrU2ifxtpw _SLU--CcoEeSLVrU2ifxtpw" group="_SLU--CcoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SLU-7CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SLU-7ScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SLU-7icoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SLU-7ycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SLU-8CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SLU-8ScoEeSLVrU2ifxtpw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU-8icoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU-8ycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-9CcoEeSLVrU2ifxtpw" target="_SLU-9ycoEeSLVrU2ifxtpw" source="_SLU-9icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-9ScoEeSLVrU2ifxtpw" target="_SLU-_ycoEeSLVrU2ifxtpw" source="_SLU-9ycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SLU--CcoEeSLVrU2ifxtpw" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLU--ScoEeSLVrU2ifxtpw" name="ExpressionStatement@78de4645">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU--icoEeSLVrU2ifxtpw" target="_SLU_DCcoEeSLVrU2ifxtpw" source="_SLU_GScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SLU--ycoEeSLVrU2ifxtpw" target="_SLU-_CcoEeSLVrU2ifxtpw" source="_SLU_DScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_SLU-_CcoEeSLVrU2ifxtpw" name="Collect(Call(write))" incoming="_SLU--ycoEeSLVrU2ifxtpw" mode="parallel" inputElement="_SLU_DCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-_ScoEeSLVrU2ifxtpw" target="_SLU_AycoEeSLVrU2ifxtpw" source="_SLU-_ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU-_icoEeSLVrU2ifxtpw" target="_SLU_CScoEeSLVrU2ifxtpw" source="_SLU_DCcoEeSLVrU2ifxtpw"/>
            <structuredNodeInput xmi:id="_SLU-_ycoEeSLVrU2ifxtpw" name="Collect(Call(write)).input(Fork(value))" incoming="_SLU-9ScoEeSLVrU2ifxtpw" outgoing="_SLU-_ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_ACcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_AScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SLU_AicoEeSLVrU2ifxtpw" name="Call(write)">
              <argument xmi:id="_SLU_AycoEeSLVrU2ifxtpw" name="Call(write).argument(value)" incoming="_SLU-_ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_BCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_BScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SLU_BicoEeSLVrU2ifxtpw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_BycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_CCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_SLU_CScoEeSLVrU2ifxtpw" name="Call(write).target" incoming="_SLU-_icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_CicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_CycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SLU_DCcoEeSLVrU2ifxtpw" name="Collect(Call(write)).inputElement" incoming="_SLU--icoEeSLVrU2ifxtpw" outgoing="_SLU-_icoEeSLVrU2ifxtpw" regionAsInput="_SLU-_CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLU_DScoEeSLVrU2ifxtpw" name="Feature(Call(At).result())" outgoing="_SLU--ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU_DicoEeSLVrU2ifxtpw" target="_SLU_EycoEeSLVrU2ifxtpw" source="_SLU_HicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU_DycoEeSLVrU2ifxtpw" target="_SLU_JicoEeSLVrU2ifxtpw" source="_SLU_IicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SLU_ECcoEeSLVrU2ifxtpw" target="_SLU_EicoEeSLVrU2ifxtpw" source="_SLU_HCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU_EScoEeSLVrU2ifxtpw" target="_SLU_FicoEeSLVrU2ifxtpw" source="_SLU_JicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLU_EicoEeSLVrU2ifxtpw" name="Call(At)" incoming="_SLU_ECcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SLU_EycoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_SLU_DicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_FCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_FScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SLU_FicoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_SLU_EScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_FycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_GCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SLU_GScoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_SLU--icoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_GicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_GycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLU_HCcoEeSLVrU2ifxtpw" name="Tuple@1b86be2e" outgoing="_SLU_ECcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_SLU_HScoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_SLU_HicoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel).result" outgoing="_SLU_DicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_HycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_ICcoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SLU_IScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_SLU_IicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SLU_DycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_IycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_JCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SLU_JScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SLU_JicoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_SLU_DycoEeSLVrU2ifxtpw" outgoing="_SLU_EScoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SLU-9icoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_SLU-9CcoEeSLVrU2ifxtpw" parameter="_SLU-8ScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SLU-9ycoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_SLU-9CcoEeSLVrU2ifxtpw" outgoing="_SLU-9ScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SLU_JycoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$notEmpty__PrimitiveTypes$Integer__" node="_SLU_MicoEeSLVrU2ifxtpw _SLU_MycoEeSLVrU2ifxtpw _SLU_NCcoEeSLVrU2ifxtpw _SLU_NScoEeSLVrU2ifxtpw _SLU_NicoEeSLVrU2ifxtpw" group="_SLU_NicoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SLU_KCcoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_KScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_KicoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SLU_KycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_LCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_LScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU_LicoEeSLVrU2ifxtpw" target="_SLU_MycoEeSLVrU2ifxtpw" source="_SLU_MicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SLU_LycoEeSLVrU2ifxtpw" target="_SLU_NScoEeSLVrU2ifxtpw" source="_SLU_NycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU_MCcoEeSLVrU2ifxtpw" target="_SLU_PScoEeSLVrU2ifxtpw" source="_SLU_MycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU_MScoEeSLVrU2ifxtpw" target="_SLU_NCcoEeSLVrU2ifxtpw" source="_SLU_OScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SLU_NicoEeSLVrU2ifxtpw" name="Body(notEmpty)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SLU_NycoEeSLVrU2ifxtpw" name="ReturnStatement@4a45c61d" outgoing="_SLU_LycoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SLU_OCcoEeSLVrU2ifxtpw" target="_SLU_OScoEeSLVrU2ifxtpw" source="_SLU_QCcoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SLU_OScoEeSLVrU2ifxtpw" name="ReturnStatement@4a45c61d.output" incoming="_SLU_OCcoEeSLVrU2ifxtpw" outgoing="_SLU_MScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_OicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_OycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SLU_PCcoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_SLU_PScoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SLU_MCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_PicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_PycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SLU_QCcoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SLU_OCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLU_QScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLU_QicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SLU_MicoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SLU_LicoEeSLVrU2ifxtpw" parameter="_SLU_KCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SLU_MycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SLU_LicoEeSLVrU2ifxtpw" outgoing="_SLU_MCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SLU_NCcoEeSLVrU2ifxtpw" name="Return" incoming="_SLU_MScoEeSLVrU2ifxtpw" parameter="_SLU_KycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SLU_NScoEeSLVrU2ifxtpw" name="Final" incoming="_SLU_LycoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SLU_QycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SLU_RCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SLU_RScoEeSLVrU2ifxtpw">
          <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmsQvYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmsQvIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SLU_RicoEeSLVrU2ifxtpw" client="_SLU_JycoEeSLVrU2ifxtpw" supplier="_SLU_QycoEeSLVrU2ifxtpw"/>
    <profileApplication xmi:id="_SLU_RycoEeSLVrU2ifxtpw">
      <eAnnotations xmi:id="_SLU_SCcoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_SLU_SScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SLU-3CcoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SLU_SicoEeSLVrU2ifxtpw" base_BehavioralFeature="_SLUX7ycoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SLU_SycoEeSLVrU2ifxtpw" base_BehavioralFeature="_SLUZACcoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SLU_TCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SLU-2CcoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SLU_TScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SLUX6ycoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SLU_TicoEeSLVrU2ifxtpw" base_BehavioralFeature="_SLUY_CcoEeSLVrU2ifxtpw"/>
</xmi:XMI>

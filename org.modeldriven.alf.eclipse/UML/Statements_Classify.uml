<?xml version="1.1" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_emJR4M2iEeiCta8rX3fxAA" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_emJR4c2iEeiCta8rX3fxAA" name="Statements_Classify" visibility="public">
      <packageImport xmi:id="_emJR4s2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_emJR482iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_emJR5M2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_emJR5c2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_emJR5s2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_emJR582iEeiCta8rX3fxAA" general="_emLuZs2iEeiCta8rX3fxAA"/>
      <ownedAttribute xmi:id="_emJR6M2iEeiCta8rX3fxAA" name="Statements_Classify$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJR6c2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJR6s2iEeiCta8rX3fxAA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJR682iEeiCta8rX3fxAA" name="Statements_Classify$method$1" visibility="private" specification="_emJ5Yc2iEeiCta8rX3fxAA" node="_emJR8M2iEeiCta8rX3fxAA _emJR8c2iEeiCta8rX3fxAA" group="_emJR8c2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_emJR7M2iEeiCta8rX3fxAA" name="" type="_emJR4c2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJR7c2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJR7s2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emJR782iEeiCta8rX3fxAA" target="_emJR8M2iEeiCta8rX3fxAA" source="_emJSGs2iEeiCta8rX3fxAA"/>
        <structuredNode xmi:id="_emJR8c2iEeiCta8rX3fxAA" name="Body(Statements_Classify$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJR8s2iEeiCta8rX3fxAA" target="_emJSGs2iEeiCta8rX3fxAA" source="_emJSF82iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJR882iEeiCta8rX3fxAA" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJR9M2iEeiCta8rX3fxAA" name="ExpressionStatement@228f78b9">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emJR9c2iEeiCta8rX3fxAA" target="_emJSDc2iEeiCta8rX3fxAA" source="_emJR-82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emJR9s2iEeiCta8rX3fxAA" target="_emJSDM2iEeiCta8rX3fxAA" source="_emJR-c2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emJR982iEeiCta8rX3fxAA" target="_emJSBs2iEeiCta8rX3fxAA" source="_emJSAM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emJR-M2iEeiCta8rX3fxAA" target="_emJSA82iEeiCta8rX3fxAA" source="_emJR-c2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJR-c2iEeiCta8rX3fxAA" name="Tuple@d173636" outgoing="_emJR9s2iEeiCta8rX3fxAA _emJR-M2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJR-s2iEeiCta8rX3fxAA" name="Value(null)">
                  <result xmi:id="_emJR-82iEeiCta8rX3fxAA" name="Value(null).result" outgoing="_emJR9c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJR_M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJR_c2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_emJR_s2iEeiCta8rX3fxAA"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_emJR_82iEeiCta8rX3fxAA" name="ReadSelf">
                <result xmi:id="_emJSAM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJR982iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSAc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSAs2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJSA82iEeiCta8rX3fxAA" name="Node(Call(run))" incoming="_emJR-M2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSBM2iEeiCta8rX3fxAA" target="_emJSCc2iEeiCta8rX3fxAA" source="_emJSEM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSBc2iEeiCta8rX3fxAA" target="_emJSE82iEeiCta8rX3fxAA" source="_emJSBs2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_emJSBs2iEeiCta8rX3fxAA" name="Input(Call(run).target)" incoming="_emJR982iEeiCta8rX3fxAA" outgoing="_emJSBc2iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSB82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSCM2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_emJSCc2iEeiCta8rX3fxAA" name="Output(Call(run).result())" incoming="_emJSBM2iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSCs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSC82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_emJSDM2iEeiCta8rX3fxAA" name="Call(run)" incoming="_emJR9s2iEeiCta8rX3fxAA" operation="_emJ5Zc2iEeiCta8rX3fxAA">
                  <argument xmi:id="_emJSDc2iEeiCta8rX3fxAA" name="Call(run).argument(tester)" incoming="_emJR9c2iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSDs2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSD82iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_emJSEM2iEeiCta8rX3fxAA" name="Call(run).result()" outgoing="_emJSBM2iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSEc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSEs2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <target xmi:id="_emJSE82iEeiCta8rX3fxAA" name="Call(run).target" incoming="_emJSBc2iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSFM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSFc2iEeiCta8rX3fxAA" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_emJSFs2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_emJSF82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJR8s2iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSGM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSGc2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_emJSGs2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emJR8s2iEeiCta8rX3fxAA" outgoing="_emJR782iEeiCta8rX3fxAA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_emJR8M2iEeiCta8rX3fxAA" name="Return" incoming="_emJR782iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" parameter="_emJR7M2iEeiCta8rX3fxAA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJSG82iEeiCta8rX3fxAA" name="run$method$1" visibility="private" specification="_emJ5Zc2iEeiCta8rX3fxAA" node="_emJSJc2iEeiCta8rX3fxAA _emJSJs2iEeiCta8rX3fxAA _emJSJ82iEeiCta8rX3fxAA _emJSKM2iEeiCta8rX3fxAA" group="_emJSKM2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_emJSHM2iEeiCta8rX3fxAA" name="tester" type="_emLveM2iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSHc2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSHs2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_emJSH82iEeiCta8rX3fxAA" name="" type="_emJR4c2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSIM2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSIc2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSIs2iEeiCta8rX3fxAA" target="_emJSJs2iEeiCta8rX3fxAA" source="_emJSJc2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSI82iEeiCta8rX3fxAA" target="_emJSJ82iEeiCta8rX3fxAA" source="_emJSas2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSJM2iEeiCta8rX3fxAA" target="_emJSc82iEeiCta8rX3fxAA" source="_emJSJs2iEeiCta8rX3fxAA"/>
        <structuredNode xmi:id="_emJSKM2iEeiCta8rX3fxAA" name="Body(run$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSKc2iEeiCta8rX3fxAA" target="_emJSas2iEeiCta8rX3fxAA" source="_emJSZ82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSKs2iEeiCta8rX3fxAA" target="_emJSes2iEeiCta8rX3fxAA" source="_emJSas2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emJSK82iEeiCta8rX3fxAA" target="_emJSNc2iEeiCta8rX3fxAA" source="_emJSec2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emJSLM2iEeiCta8rX3fxAA" target="_emJSec2iEeiCta8rX3fxAA" source="_emJSa82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSLc2iEeiCta8rX3fxAA" target="_emJ48c2iEeiCta8rX3fxAA" source="_emJSas2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSLs2iEeiCta8rX3fxAA" target="_emJ4-M2iEeiCta8rX3fxAA" source="_emJ49M2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSL82iEeiCta8rX3fxAA" target="_emJ5BM2iEeiCta8rX3fxAA" source="_emJ4-82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSMM2iEeiCta8rX3fxAA" target="_emJ5Cs2iEeiCta8rX3fxAA" source="_emJ4_82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emJSMc2iEeiCta8rX3fxAA" target="_emJ5Ds2iEeiCta8rX3fxAA" source="_emJ5Dc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSMs2iEeiCta8rX3fxAA" target="_emJ5Ds2iEeiCta8rX3fxAA" source="_emJ5B82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emJSM82iEeiCta8rX3fxAA" target="_emJSa82iEeiCta8rX3fxAA" source="_emJ5Ds2iEeiCta8rX3fxAA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_emJSNM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJSNc2iEeiCta8rX3fxAA" name="Body" incoming="_emJSK82iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJSNs2iEeiCta8rX3fxAA" name="ExpressionStatement@6c2e9c38">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSN82iEeiCta8rX3fxAA" target="_emJSOc2iEeiCta8rX3fxAA" source="_emJSRc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_emJSOM2iEeiCta8rX3fxAA" name="SendSignal(Start)" signal="_emLuYM2iEeiCta8rX3fxAA">
                <target xmi:id="_emJSOc2iEeiCta8rX3fxAA" name="SendSignal(Start).target" incoming="_emJSN82iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSOs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSO82iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJSPM2iEeiCta8rX3fxAA" name="InstanceCreationExpression@f5341c6">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSPc2iEeiCta8rX3fxAA" target="_emJSYM2iEeiCta8rX3fxAA" source="_emJSSc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSPs2iEeiCta8rX3fxAA" target="_emJSXc2iEeiCta8rX3fxAA" source="_emJSYM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSP82iEeiCta8rX3fxAA" target="_emJSV82iEeiCta8rX3fxAA" source="_emJSTs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emJSQM2iEeiCta8rX3fxAA" target="_emJSUc2iEeiCta8rX3fxAA" source="_emJSTM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emJSQc2iEeiCta8rX3fxAA" target="_emJSUc2iEeiCta8rX3fxAA" source="_emJSSM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSQs2iEeiCta8rX3fxAA" target="_emJSYc2iEeiCta8rX3fxAA" source="_emJSU82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSQ82iEeiCta8rX3fxAA" target="_emJSY82iEeiCta8rX3fxAA" source="_emJSYc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSRM2iEeiCta8rX3fxAA" target="_emJSRc2iEeiCta8rX3fxAA" source="_emJSYc2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_emJSRc2iEeiCta8rX3fxAA" name="Output(Output(Fork(Create(TestRunner).result)))" incoming="_emJSRM2iEeiCta8rX3fxAA" outgoing="_emJSN82iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSRs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSR82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_emJSSM2iEeiCta8rX3fxAA" name="Create(TestRunner)" outgoing="_emJSQc2iEeiCta8rX3fxAA" classifier="_emLH-M2iEeiCta8rX3fxAA">
                  <result xmi:id="_emJSSc2iEeiCta8rX3fxAA" name="Create(TestRunner).result" outgoing="_emJSPc2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSSs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSS82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJSTM2iEeiCta8rX3fxAA" name="Tuple@437e1544" outgoing="_emJSQM2iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_emJSTc2iEeiCta8rX3fxAA" name="ReadSelf">
                    <result xmi:id="_emJSTs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJSP82iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJST82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSUM2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJSUc2iEeiCta8rX3fxAA" name="Node(Call(TestRunner))" incoming="_emJSQc2iEeiCta8rX3fxAA _emJSQM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSUs2iEeiCta8rX3fxAA" target="_emJSU82iEeiCta8rX3fxAA" source="_emJSYM2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_emJSU82iEeiCta8rX3fxAA" name="Output(Fork(Create(TestRunner).result))" incoming="_emJSUs2iEeiCta8rX3fxAA" outgoing="_emJSQs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSVM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSVc2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_emJSVs2iEeiCta8rX3fxAA" name="Call(TestRunner)" operation="_emLuTs2iEeiCta8rX3fxAA">
                    <argument xmi:id="_emJSV82iEeiCta8rX3fxAA" name="Call(TestRunner).argument(outer)" incoming="_emJSP82iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSWM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSWc2iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <result xmi:id="_emJSWs2iEeiCta8rX3fxAA" name="Call(TestRunner).result()" type="_emLH-M2iEeiCta8rX3fxAA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSW82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSXM2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <target xmi:id="_emJSXc2iEeiCta8rX3fxAA" name="Call(TestRunner).target" incoming="_emJSPs2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSXs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSX82iEeiCta8rX3fxAA" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_emJSYM2iEeiCta8rX3fxAA" name="Fork(Create(TestRunner).result)" incoming="_emJSPc2iEeiCta8rX3fxAA" outgoing="_emJSPs2iEeiCta8rX3fxAA _emJSUs2iEeiCta8rX3fxAA"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_emJSYc2iEeiCta8rX3fxAA" name="Fork(Output(Fork(Create(TestRunner).result)))" incoming="_emJSQs2iEeiCta8rX3fxAA" outgoing="_emJSQ82iEeiCta8rX3fxAA _emJSRM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_emJSYs2iEeiCta8rX3fxAA" name="Start(TestRunner)" isSynchronous="false">
                  <object xmi:id="_emJSY82iEeiCta8rX3fxAA" name="Start(TestRunner).object" incoming="_emJSQ82iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSZM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSZc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_emJSZs2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_emJSZ82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJSKc2iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSaM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSac2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_emJSas2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emJSKc2iEeiCta8rX3fxAA" outgoing="_emJSI82iEeiCta8rX3fxAA _emJSKs2iEeiCta8rX3fxAA _emJSLc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJSa82iEeiCta8rX3fxAA" name="Super" incoming="_emJSM82iEeiCta8rX3fxAA" outgoing="_emJSLM2iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJSbM2iEeiCta8rX3fxAA" name="ExpressionStatement@1c4c533d">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJSbc2iEeiCta8rX3fxAA" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJSbs2iEeiCta8rX3fxAA" target="_emJSb82iEeiCta8rX3fxAA" source="_emJSds2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_emJSb82iEeiCta8rX3fxAA" name="Output(Call(Test$method$1).result())" incoming="_emJSbs2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJScM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJScc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_emJScs2iEeiCta8rX3fxAA" name="Call(Test$method$1)" behavior="_emLucs2iEeiCta8rX3fxAA">
                  <argument xmi:id="_emJSc82iEeiCta8rX3fxAA" name="Call(Test$method$1).argument(tester)" incoming="_emJSJM2iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSdM2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSdc2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_emJSds2iEeiCta8rX3fxAA" name="Call(Test$method$1).result()" outgoing="_emJSbs2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSd82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSeM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_emJSec2iEeiCta8rX3fxAA" name="Call(Statements_Classify$initialization$1)" incoming="_emJSLM2iEeiCta8rX3fxAA" outgoing="_emJSK82iEeiCta8rX3fxAA" operation="_emJ5YM2iEeiCta8rX3fxAA">
            <target xmi:id="_emJSes2iEeiCta8rX3fxAA" name="Call(Statements_Classify$initialization$1).target" incoming="_emJSKs2iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJSe82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJSfM2iEeiCta8rX3fxAA" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emJ48M2iEeiCta8rX3fxAA" name="Read(Statements_Classify$initializationFlag$1)" structuralFeature="_emJR6M2iEeiCta8rX3fxAA">
            <object xmi:id="_emJ48c2iEeiCta8rX3fxAA" name="Read(Statements_Classify$initializationFlag$1).object" incoming="_emJSLc2iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ48s2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ4882iEeiCta8rX3fxAA" value="1"/>
            </object>
            <result xmi:id="_emJ49M2iEeiCta8rX3fxAA" name="Read(Statements_Classify$initializationFlag$1).result" outgoing="_emJSLs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ49c2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ49s2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_emJ4982iEeiCta8rX3fxAA" name="Call(ListSize)">
            <argument xmi:id="_emJ4-M2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emJSLs2iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ4-c2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ4-s2iEeiCta8rX3fxAA" value="*"/>
            </argument>
            <result xmi:id="_emJ4-82iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emJSL82iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ4_M2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ4_c2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ4_s2iEeiCta8rX3fxAA" name="Value(0)">
            <result xmi:id="_emJ4_82iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emJSMM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5AM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5Ac2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_emJ5As2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_emJ5A82iEeiCta8rX3fxAA" name="Test(Size==0)">
            <first xmi:id="_emJ5BM2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emJSL82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5Bc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5Bs2iEeiCta8rX3fxAA" value="1"/>
            </first>
            <result xmi:id="_emJ5B82iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emJSMs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5CM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5Cc2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <second xmi:id="_emJ5Cs2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emJSMM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5C82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5DM2iEeiCta8rX3fxAA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_emJ5Dc2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emJSMc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_emJ5Ds2iEeiCta8rX3fxAA" name="Decision(Test(Statements_Classify$initializationFlag$1))" incoming="_emJSMc2iEeiCta8rX3fxAA _emJSMs2iEeiCta8rX3fxAA" outgoing="_emJSM82iEeiCta8rX3fxAA" decisionInputFlow="_emJSMs2iEeiCta8rX3fxAA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_emJSJc2iEeiCta8rX3fxAA" name="Input(tester)" outgoing="_emJSIs2iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" parameter="_emJSHM2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_emJSJs2iEeiCta8rX3fxAA" name="Fork(tester)" incoming="_emJSIs2iEeiCta8rX3fxAA" outgoing="_emJSJM2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_emJSJ82iEeiCta8rX3fxAA" name="Return" incoming="_emJSI82iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" parameter="_emJSH82iEeiCta8rX3fxAA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ5D82iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emJ5bM2iEeiCta8rX3fxAA" node="_emJ5EM2iEeiCta8rX3fxAA" group="_emJ5EM2iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_emJ5EM2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ5Ec2iEeiCta8rX3fxAA" name="Statements_Classify$initialization$1" visibility="private" specification="_emJ5YM2iEeiCta8rX3fxAA" node="_emJ5Es2iEeiCta8rX3fxAA" group="_emJ5Es2iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_emJ5Es2iEeiCta8rX3fxAA" name="Body(Statements_Classify$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5E82iEeiCta8rX3fxAA" target="_emJ5Is2iEeiCta8rX3fxAA" source="_emJ5H82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5FM2iEeiCta8rX3fxAA" target="_emJ5Js2iEeiCta8rX3fxAA" source="_emJ5Is2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5Fc2iEeiCta8rX3fxAA" target="_emJ5M82iEeiCta8rX3fxAA" source="_emJ5Is2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5Fs2iEeiCta8rX3fxAA" target="_emJ5Qs2iEeiCta8rX3fxAA" source="_emJ5Is2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5F82iEeiCta8rX3fxAA" target="_emJ5Sc2iEeiCta8rX3fxAA" source="_emJ5Rc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5GM2iEeiCta8rX3fxAA" target="_emJ5Vc2iEeiCta8rX3fxAA" source="_emJ5TM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5Gc2iEeiCta8rX3fxAA" target="_emJ5W82iEeiCta8rX3fxAA" source="_emJ5UM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emJ5Gs2iEeiCta8rX3fxAA" target="_emJ5X82iEeiCta8rX3fxAA" source="_emJ5Xs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5G82iEeiCta8rX3fxAA" target="_emJ5X82iEeiCta8rX3fxAA" source="_emJ5WM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emJ5HM2iEeiCta8rX3fxAA" target="_emJ5I82iEeiCta8rX3fxAA" source="_emJ5X82iEeiCta8rX3fxAA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_emJ5Hc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_emJ5Hs2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_emJ5H82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJ5E82iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5IM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5Ic2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_emJ5Is2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emJ5E82iEeiCta8rX3fxAA" outgoing="_emJ5FM2iEeiCta8rX3fxAA _emJ5Fc2iEeiCta8rX3fxAA _emJ5Fs2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ5I82iEeiCta8rX3fxAA" name="Initialization" incoming="_emJ5HM2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ5JM2iEeiCta8rX3fxAA" target="_emJ5Kc2iEeiCta8rX3fxAA" source="_emJ5Jc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emJ5Jc2iEeiCta8rX3fxAA" name="Call(Test$initialization$1)" outgoing="_emJ5JM2iEeiCta8rX3fxAA" operation="_emLvas2iEeiCta8rX3fxAA">
              <target xmi:id="_emJ5Js2iEeiCta8rX3fxAA" name="Call(Test$initialization$1).target" incoming="_emJ5FM2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5J82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5KM2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ5Kc2iEeiCta8rX3fxAA" name="Set(initializationFlag)" incoming="_emJ5JM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5Ks2iEeiCta8rX3fxAA" target="_emJ5QM2iEeiCta8rX3fxAA" source="_emJ5LM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ5K82iEeiCta8rX3fxAA" name="Value(true)">
                <result xmi:id="_emJ5LM2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emJ5Ks2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5Lc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5Ls2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_emJ5L82iEeiCta8rX3fxAA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_emJ5MM2iEeiCta8rX3fxAA" name="Iterate(Write(Statements_Classify$initializationFlag$1))" inputElement="_emJ5QM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5Mc2iEeiCta8rX3fxAA" target="_emJ5Pc2iEeiCta8rX3fxAA" source="_emJ5QM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5Ms2iEeiCta8rX3fxAA" target="_emJ5N82iEeiCta8rX3fxAA" source="_emJ5M82iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_emJ5M82iEeiCta8rX3fxAA" name="Iterate(Write(Statements_Classify$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emJ5Fc2iEeiCta8rX3fxAA" outgoing="_emJ5Ms2iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5NM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5Nc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emJ5Ns2iEeiCta8rX3fxAA" name="Write(Statements_Classify$initializationFlag$1)" structuralFeature="_emJR6M2iEeiCta8rX3fxAA">
                  <object xmi:id="_emJ5N82iEeiCta8rX3fxAA" name="Write(Statements_Classify$initializationFlag$1).object" incoming="_emJ5Ms2iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5OM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5Oc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emJ5Os2iEeiCta8rX3fxAA" name="Write(Statements_Classify$initializationFlag$1).result" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5O82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5PM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:id="_emJ5Pc2iEeiCta8rX3fxAA" name="Write(Statements_Classify$initializationFlag$1).value" incoming="_emJ5Mc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5Ps2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5P82iEeiCta8rX3fxAA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_emJ5QM2iEeiCta8rX3fxAA" name="Iterate(Write(Statements_Classify$initializationFlag$1)).inputElement" incoming="_emJ5Ks2iEeiCta8rX3fxAA" outgoing="_emJ5Mc2iEeiCta8rX3fxAA" regionAsInput="_emJ5MM2iEeiCta8rX3fxAA"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emJ5Qc2iEeiCta8rX3fxAA" name="Read(Statements_Classify$initializationFlag$1)" structuralFeature="_emJR6M2iEeiCta8rX3fxAA">
            <object xmi:id="_emJ5Qs2iEeiCta8rX3fxAA" name="Read(Statements_Classify$initializationFlag$1).object" incoming="_emJ5Fs2iEeiCta8rX3fxAA" type="_emJR4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5Q82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5RM2iEeiCta8rX3fxAA" value="1"/>
            </object>
            <result xmi:id="_emJ5Rc2iEeiCta8rX3fxAA" name="Read(Statements_Classify$initializationFlag$1).result" outgoing="_emJ5F82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5Rs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5R82iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_emJ5SM2iEeiCta8rX3fxAA" name="Call(ListSize)">
            <argument xmi:id="_emJ5Sc2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emJ5F82iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5Ss2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5S82iEeiCta8rX3fxAA" value="*"/>
            </argument>
            <result xmi:id="_emJ5TM2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emJ5GM2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5Tc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5Ts2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ5T82iEeiCta8rX3fxAA" name="Value(0)">
            <result xmi:id="_emJ5UM2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emJ5Gc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5Uc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5Us2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_emJ5U82iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_emJ5VM2iEeiCta8rX3fxAA" name="Test(Size==0)">
            <first xmi:id="_emJ5Vc2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emJ5GM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5Vs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5V82iEeiCta8rX3fxAA" value="1"/>
            </first>
            <result xmi:id="_emJ5WM2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emJ5G82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5Wc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5Ws2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <second xmi:id="_emJ5W82iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emJ5Gc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5XM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5Xc2iEeiCta8rX3fxAA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_emJ5Xs2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emJ5Gs2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_emJ5X82iEeiCta8rX3fxAA" name="Decision(Test(Statements_Classify$initializationFlag$1))" incoming="_emJ5Gs2iEeiCta8rX3fxAA _emJ5G82iEeiCta8rX3fxAA" outgoing="_emJ5HM2iEeiCta8rX3fxAA" decisionInputFlow="_emJ5G82iEeiCta8rX3fxAA"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_emJ5YM2iEeiCta8rX3fxAA" name="Statements_Classify$initialization$1" visibility="protected" method="_emJ5Ec2iEeiCta8rX3fxAA"/>
      <ownedOperation xmi:id="_emJ5Yc2iEeiCta8rX3fxAA" name="Statements_Classify" visibility="public" method="_emJR682iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_emJ5Ys2iEeiCta8rX3fxAA" name="" visibility="package" type="_emJR4c2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5Y82iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5ZM2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_emJ5Zc2iEeiCta8rX3fxAA" name="run" visibility="public" method="_emJSG82iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_emJ5Zs2iEeiCta8rX3fxAA" name="tester" visibility="package" type="_emLveM2iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5Z82iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5aM2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_emJ5ac2iEeiCta8rX3fxAA" name="" visibility="package" type="_emJR4c2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5as2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5a82iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_emJ5bM2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emJ5D82iEeiCta8rX3fxAA" redefinedOperation="_emLvd82iEeiCta8rX3fxAA"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emJ5bc2iEeiCta8rX3fxAA" name="Monitor" visibility="package">
        <ownedAttribute xmi:id="_emJ5bs2iEeiCta8rX3fxAA" name="Monitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5b82iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5cM2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ5cc2iEeiCta8rX3fxAA" name="Monitor$method$1" visibility="private" specification="_emJ5-M2iEeiCta8rX3fxAA" node="_emJ5ds2iEeiCta8rX3fxAA _emJ5d82iEeiCta8rX3fxAA" group="_emJ5d82iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emJ5cs2iEeiCta8rX3fxAA" name="" type="_emJ5bc2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5c82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5dM2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5dc2iEeiCta8rX3fxAA" target="_emJ5ds2iEeiCta8rX3fxAA" source="_emJ5iM2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emJ5d82iEeiCta8rX3fxAA" name="Body(Monitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5eM2iEeiCta8rX3fxAA" target="_emJ5iM2iEeiCta8rX3fxAA" source="_emJ5hc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5ec2iEeiCta8rX3fxAA" target="_emJ5is2iEeiCta8rX3fxAA" source="_emJ5iM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ5es2iEeiCta8rX3fxAA" target="_emJ5g82iEeiCta8rX3fxAA" source="_emJ5ic2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5e82iEeiCta8rX3fxAA" target="_emJ5js2iEeiCta8rX3fxAA" source="_emJ5iM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5fM2iEeiCta8rX3fxAA" target="_emJ5lc2iEeiCta8rX3fxAA" source="_emJ5kc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5fc2iEeiCta8rX3fxAA" target="_emJ5oc2iEeiCta8rX3fxAA" source="_emJ5mM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5fs2iEeiCta8rX3fxAA" target="_emJ5p82iEeiCta8rX3fxAA" source="_emJ5nM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ5f82iEeiCta8rX3fxAA" target="_emJ5q82iEeiCta8rX3fxAA" source="_emJ5qs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5gM2iEeiCta8rX3fxAA" target="_emJ5q82iEeiCta8rX3fxAA" source="_emJ5pM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ5gc2iEeiCta8rX3fxAA" target="_emJ5ic2iEeiCta8rX3fxAA" source="_emJ5q82iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emJ5gs2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ5g82iEeiCta8rX3fxAA" name="Body" incoming="_emJ5es2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emJ5hM2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emJ5hc2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJ5eM2iEeiCta8rX3fxAA" type="_emJ5bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5hs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5h82iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emJ5iM2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emJ5eM2iEeiCta8rX3fxAA" outgoing="_emJ5dc2iEeiCta8rX3fxAA _emJ5ec2iEeiCta8rX3fxAA _emJ5e82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emJ5ic2iEeiCta8rX3fxAA" name="Call(Monitor$initialization$1)" incoming="_emJ5gc2iEeiCta8rX3fxAA" outgoing="_emJ5es2iEeiCta8rX3fxAA" operation="_emJ5982iEeiCta8rX3fxAA">
              <target xmi:id="_emJ5is2iEeiCta8rX3fxAA" name="Call(Monitor$initialization$1).target" incoming="_emJ5ec2iEeiCta8rX3fxAA" type="_emJ5bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5i82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5jM2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emJ5jc2iEeiCta8rX3fxAA" name="Read(Monitor$initializationFlag$1)" structuralFeature="_emJ5bs2iEeiCta8rX3fxAA">
              <object xmi:id="_emJ5js2iEeiCta8rX3fxAA" name="Read(Monitor$initializationFlag$1).object" incoming="_emJ5e82iEeiCta8rX3fxAA" type="_emJ5bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5j82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5kM2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emJ5kc2iEeiCta8rX3fxAA" name="Read(Monitor$initializationFlag$1).result" outgoing="_emJ5fM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5ks2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5k82iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emJ5lM2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emJ5lc2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emJ5fM2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5ls2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5l82iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emJ5mM2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emJ5fc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5mc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5ms2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ5m82iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emJ5nM2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emJ5fs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5nc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5ns2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emJ5n82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emJ5oM2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emJ5oc2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emJ5fc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5os2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5o82iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emJ5pM2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emJ5gM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5pc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5ps2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emJ5p82iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emJ5fs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5qM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5qc2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emJ5qs2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emJ5f82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emJ5q82iEeiCta8rX3fxAA" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_emJ5f82iEeiCta8rX3fxAA _emJ5gM2iEeiCta8rX3fxAA" outgoing="_emJ5gc2iEeiCta8rX3fxAA" decisionInputFlow="_emJ5gM2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emJ5ds2iEeiCta8rX3fxAA" name="Return" incoming="_emJ5dc2iEeiCta8rX3fxAA" type="_emJ5bc2iEeiCta8rX3fxAA" parameter="_emJ5cs2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ5rM2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emJ5_M2iEeiCta8rX3fxAA" node="_emJ5rc2iEeiCta8rX3fxAA" group="_emJ5rc2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emJ5rc2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ5rs2iEeiCta8rX3fxAA" name="Monitor$initialization$1" visibility="private" specification="_emJ5982iEeiCta8rX3fxAA" node="_emJ5r82iEeiCta8rX3fxAA" group="_emJ5r82iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emJ5r82iEeiCta8rX3fxAA" name="Body(Monitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5sM2iEeiCta8rX3fxAA" target="_emJ5vs2iEeiCta8rX3fxAA" source="_emJ5u82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5sc2iEeiCta8rX3fxAA" target="_emJ5ys2iEeiCta8rX3fxAA" source="_emJ5vs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5ss2iEeiCta8rX3fxAA" target="_emJ52c2iEeiCta8rX3fxAA" source="_emJ5vs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5s82iEeiCta8rX3fxAA" target="_emJ54M2iEeiCta8rX3fxAA" source="_emJ53M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5tM2iEeiCta8rX3fxAA" target="_emJ57M2iEeiCta8rX3fxAA" source="_emJ5482iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5tc2iEeiCta8rX3fxAA" target="_emJ58s2iEeiCta8rX3fxAA" source="_emJ5582iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ5ts2iEeiCta8rX3fxAA" target="_emJ59s2iEeiCta8rX3fxAA" source="_emJ59c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5t82iEeiCta8rX3fxAA" target="_emJ59s2iEeiCta8rX3fxAA" source="_emJ5782iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ5uM2iEeiCta8rX3fxAA" target="_emJ5v82iEeiCta8rX3fxAA" source="_emJ59s2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emJ5uc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emJ5us2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emJ5u82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJ5sM2iEeiCta8rX3fxAA" type="_emJ5bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5vM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5vc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emJ5vs2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emJ5sM2iEeiCta8rX3fxAA" outgoing="_emJ5sc2iEeiCta8rX3fxAA _emJ5ss2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ5v82iEeiCta8rX3fxAA" name="Initialization" incoming="_emJ5uM2iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ5wM2iEeiCta8rX3fxAA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5wc2iEeiCta8rX3fxAA" target="_emJ5182iEeiCta8rX3fxAA" source="_emJ5w82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ5ws2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emJ5w82iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emJ5wc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5xM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5xc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emJ5xs2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emJ5x82iEeiCta8rX3fxAA" name="Iterate(Write(Monitor$initializationFlag$1))" inputElement="_emJ5182iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5yM2iEeiCta8rX3fxAA" target="_emJ51M2iEeiCta8rX3fxAA" source="_emJ5182iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ5yc2iEeiCta8rX3fxAA" target="_emJ5zs2iEeiCta8rX3fxAA" source="_emJ5ys2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emJ5ys2iEeiCta8rX3fxAA" name="Iterate(Write(Monitor$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emJ5sc2iEeiCta8rX3fxAA" outgoing="_emJ5yc2iEeiCta8rX3fxAA" type="_emJ5bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5y82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5zM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emJ5zc2iEeiCta8rX3fxAA" name="Write(Monitor$initializationFlag$1)" structuralFeature="_emJ5bs2iEeiCta8rX3fxAA">
                    <object xmi:id="_emJ5zs2iEeiCta8rX3fxAA" name="Write(Monitor$initializationFlag$1).object" incoming="_emJ5yc2iEeiCta8rX3fxAA" type="_emJ5bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5z82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ50M2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emJ50c2iEeiCta8rX3fxAA" name="Write(Monitor$initializationFlag$1).result" type="_emJ5bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ50s2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5082iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emJ51M2iEeiCta8rX3fxAA" name="Write(Monitor$initializationFlag$1).value" incoming="_emJ5yM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ51c2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ51s2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emJ5182iEeiCta8rX3fxAA" name="Iterate(Write(Monitor$initializationFlag$1)).inputElement" incoming="_emJ5wc2iEeiCta8rX3fxAA" outgoing="_emJ5yM2iEeiCta8rX3fxAA" regionAsInput="_emJ5x82iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emJ52M2iEeiCta8rX3fxAA" name="Read(Monitor$initializationFlag$1)" structuralFeature="_emJ5bs2iEeiCta8rX3fxAA">
              <object xmi:id="_emJ52c2iEeiCta8rX3fxAA" name="Read(Monitor$initializationFlag$1).object" incoming="_emJ5ss2iEeiCta8rX3fxAA" type="_emJ5bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ52s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5282iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emJ53M2iEeiCta8rX3fxAA" name="Read(Monitor$initializationFlag$1).result" outgoing="_emJ5s82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ53c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ53s2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emJ5382iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emJ54M2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emJ5s82iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ54c2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ54s2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emJ5482iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emJ5tM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ55M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ55c2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ55s2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emJ5582iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emJ5tc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ56M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ56c2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emJ56s2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emJ5682iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emJ57M2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emJ5tM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ57c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ57s2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emJ5782iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emJ5t82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ58M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ58c2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emJ58s2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emJ5tc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5882iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ59M2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emJ59c2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emJ5ts2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emJ59s2iEeiCta8rX3fxAA" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_emJ5ts2iEeiCta8rX3fxAA _emJ5t82iEeiCta8rX3fxAA" outgoing="_emJ5uM2iEeiCta8rX3fxAA" decisionInputFlow="_emJ5t82iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emJ5982iEeiCta8rX3fxAA" name="Monitor$initialization$1" visibility="protected" method="_emJ5rs2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emJ5-M2iEeiCta8rX3fxAA" name="Monitor" visibility="public" method="_emJ5cc2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emJ5-c2iEeiCta8rX3fxAA" name="" visibility="package" type="_emJ5bc2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ5-s2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ5-82iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_emJ5_M2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emJ5rM2iEeiCta8rX3fxAA"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emJ5_c2iEeiCta8rX3fxAA" name="InActiveMonitor" visibility="package">
        <generalization xmi:id="_emJ5_s2iEeiCta8rX3fxAA" general="_emJ5bc2iEeiCta8rX3fxAA"/>
        <ownedAttribute xmi:id="_emJ5_82iEeiCta8rX3fxAA" name="InActiveMonitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6AM2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6Ac2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ6As2iEeiCta8rX3fxAA" name="InActiveMonitor$method$1" visibility="private" specification="_emJ6j82iEeiCta8rX3fxAA" node="_emJ6B82iEeiCta8rX3fxAA _emJ6CM2iEeiCta8rX3fxAA" group="_emJ6CM2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emJ6A82iEeiCta8rX3fxAA" name="" type="_emJ5_c2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6BM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6Bc2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6Bs2iEeiCta8rX3fxAA" target="_emJ6B82iEeiCta8rX3fxAA" source="_emJ6Gc2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emJ6CM2iEeiCta8rX3fxAA" name="Body(InActiveMonitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6Cc2iEeiCta8rX3fxAA" target="_emJ6Gc2iEeiCta8rX3fxAA" source="_emJ6Fs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6Cs2iEeiCta8rX3fxAA" target="_emJ6G82iEeiCta8rX3fxAA" source="_emJ6Gc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ6C82iEeiCta8rX3fxAA" target="_emJ6FM2iEeiCta8rX3fxAA" source="_emJ6Gs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6DM2iEeiCta8rX3fxAA" target="_emJ6H82iEeiCta8rX3fxAA" source="_emJ6Gc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6Dc2iEeiCta8rX3fxAA" target="_emJ6Js2iEeiCta8rX3fxAA" source="_emJ6Is2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6Ds2iEeiCta8rX3fxAA" target="_emJ6Ms2iEeiCta8rX3fxAA" source="_emJ6Kc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6D82iEeiCta8rX3fxAA" target="_emJ6OM2iEeiCta8rX3fxAA" source="_emJ6Lc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ6EM2iEeiCta8rX3fxAA" target="_emJ6PM2iEeiCta8rX3fxAA" source="_emJ6O82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6Ec2iEeiCta8rX3fxAA" target="_emJ6PM2iEeiCta8rX3fxAA" source="_emJ6Nc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ6Es2iEeiCta8rX3fxAA" target="_emJ6Gs2iEeiCta8rX3fxAA" source="_emJ6PM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emJ6E82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ6FM2iEeiCta8rX3fxAA" name="Body" incoming="_emJ6C82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emJ6Fc2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emJ6Fs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJ6Cc2iEeiCta8rX3fxAA" type="_emJ5_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6F82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6GM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emJ6Gc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emJ6Cc2iEeiCta8rX3fxAA" outgoing="_emJ6Bs2iEeiCta8rX3fxAA _emJ6Cs2iEeiCta8rX3fxAA _emJ6DM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emJ6Gs2iEeiCta8rX3fxAA" name="Call(InActiveMonitor$initialization$1)" incoming="_emJ6Es2iEeiCta8rX3fxAA" outgoing="_emJ6C82iEeiCta8rX3fxAA" operation="_emJ6js2iEeiCta8rX3fxAA">
              <target xmi:id="_emJ6G82iEeiCta8rX3fxAA" name="Call(InActiveMonitor$initialization$1).target" incoming="_emJ6Cs2iEeiCta8rX3fxAA" type="_emJ5_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6HM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6Hc2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emJ6Hs2iEeiCta8rX3fxAA" name="Read(InActiveMonitor$initializationFlag$1)" structuralFeature="_emJ5_82iEeiCta8rX3fxAA">
              <object xmi:id="_emJ6H82iEeiCta8rX3fxAA" name="Read(InActiveMonitor$initializationFlag$1).object" incoming="_emJ6DM2iEeiCta8rX3fxAA" type="_emJ5_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6IM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6Ic2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emJ6Is2iEeiCta8rX3fxAA" name="Read(InActiveMonitor$initializationFlag$1).result" outgoing="_emJ6Dc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6I82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6JM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emJ6Jc2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emJ6Js2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emJ6Dc2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6J82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6KM2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emJ6Kc2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emJ6Ds2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6Ks2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6K82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ6LM2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emJ6Lc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emJ6D82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6Ls2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6L82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emJ6MM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emJ6Mc2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emJ6Ms2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emJ6Ds2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6M82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6NM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emJ6Nc2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emJ6Ec2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6Ns2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6N82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emJ6OM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emJ6D82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6Oc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6Os2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emJ6O82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emJ6EM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emJ6PM2iEeiCta8rX3fxAA" name="Decision(Test(InActiveMonitor$initializationFlag$1))" incoming="_emJ6EM2iEeiCta8rX3fxAA _emJ6Ec2iEeiCta8rX3fxAA" outgoing="_emJ6Es2iEeiCta8rX3fxAA" decisionInputFlow="_emJ6Ec2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emJ6B82iEeiCta8rX3fxAA" name="Return" incoming="_emJ6Bs2iEeiCta8rX3fxAA" type="_emJ5_c2iEeiCta8rX3fxAA" parameter="_emJ6A82iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ6Pc2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emJ6k82iEeiCta8rX3fxAA" node="_emJ6Ps2iEeiCta8rX3fxAA" group="_emJ6Ps2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emJ6Ps2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ6P82iEeiCta8rX3fxAA" name="InActiveMonitor$initialization$1" visibility="private" specification="_emJ6js2iEeiCta8rX3fxAA" node="_emJ6QM2iEeiCta8rX3fxAA" group="_emJ6QM2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emJ6QM2iEeiCta8rX3fxAA" name="Body(InActiveMonitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6Qc2iEeiCta8rX3fxAA" target="_emJ6UM2iEeiCta8rX3fxAA" source="_emJ6Tc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6Qs2iEeiCta8rX3fxAA" target="_emJ6VM2iEeiCta8rX3fxAA" source="_emJ6UM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6Q82iEeiCta8rX3fxAA" target="_emJ6Yc2iEeiCta8rX3fxAA" source="_emJ6UM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6RM2iEeiCta8rX3fxAA" target="_emJ6cM2iEeiCta8rX3fxAA" source="_emJ6UM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6Rc2iEeiCta8rX3fxAA" target="_emJ6d82iEeiCta8rX3fxAA" source="_emJ6c82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6Rs2iEeiCta8rX3fxAA" target="_emJ6g82iEeiCta8rX3fxAA" source="_emJ6es2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6R82iEeiCta8rX3fxAA" target="_emJ6ic2iEeiCta8rX3fxAA" source="_emJ6fs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ6SM2iEeiCta8rX3fxAA" target="_emJ6jc2iEeiCta8rX3fxAA" source="_emJ6jM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6Sc2iEeiCta8rX3fxAA" target="_emJ6jc2iEeiCta8rX3fxAA" source="_emJ6hs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ6Ss2iEeiCta8rX3fxAA" target="_emJ6Uc2iEeiCta8rX3fxAA" source="_emJ6jc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emJ6S82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emJ6TM2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emJ6Tc2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJ6Qc2iEeiCta8rX3fxAA" type="_emJ5_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6Ts2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6T82iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emJ6UM2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emJ6Qc2iEeiCta8rX3fxAA" outgoing="_emJ6Qs2iEeiCta8rX3fxAA _emJ6Q82iEeiCta8rX3fxAA _emJ6RM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ6Uc2iEeiCta8rX3fxAA" name="Initialization" incoming="_emJ6Ss2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_emJ6Us2iEeiCta8rX3fxAA" target="_emJ6V82iEeiCta8rX3fxAA" source="_emJ6U82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_emJ6U82iEeiCta8rX3fxAA" name="Call(Monitor$initialization$1)" outgoing="_emJ6Us2iEeiCta8rX3fxAA" operation="_emJ5982iEeiCta8rX3fxAA">
                <target xmi:id="_emJ6VM2iEeiCta8rX3fxAA" name="Call(Monitor$initialization$1).target" incoming="_emJ6Qs2iEeiCta8rX3fxAA" type="_emJ5bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6Vc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6Vs2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ6V82iEeiCta8rX3fxAA" name="Set(initializationFlag)" incoming="_emJ6Us2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6WM2iEeiCta8rX3fxAA" target="_emJ6bs2iEeiCta8rX3fxAA" source="_emJ6Ws2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ6Wc2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emJ6Ws2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emJ6WM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6W82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6XM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emJ6Xc2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emJ6Xs2iEeiCta8rX3fxAA" name="Iterate(Write(InActiveMonitor$initializationFlag$1))" inputElement="_emJ6bs2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6X82iEeiCta8rX3fxAA" target="_emJ6a82iEeiCta8rX3fxAA" source="_emJ6bs2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6YM2iEeiCta8rX3fxAA" target="_emJ6Zc2iEeiCta8rX3fxAA" source="_emJ6Yc2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emJ6Yc2iEeiCta8rX3fxAA" name="Iterate(Write(InActiveMonitor$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emJ6Q82iEeiCta8rX3fxAA" outgoing="_emJ6YM2iEeiCta8rX3fxAA" type="_emJ5_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6Ys2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6Y82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emJ6ZM2iEeiCta8rX3fxAA" name="Write(InActiveMonitor$initializationFlag$1)" structuralFeature="_emJ5_82iEeiCta8rX3fxAA">
                    <object xmi:id="_emJ6Zc2iEeiCta8rX3fxAA" name="Write(InActiveMonitor$initializationFlag$1).object" incoming="_emJ6YM2iEeiCta8rX3fxAA" type="_emJ5_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6Zs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6Z82iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emJ6aM2iEeiCta8rX3fxAA" name="Write(InActiveMonitor$initializationFlag$1).result" type="_emJ5_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6ac2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6as2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emJ6a82iEeiCta8rX3fxAA" name="Write(InActiveMonitor$initializationFlag$1).value" incoming="_emJ6X82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6bM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6bc2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emJ6bs2iEeiCta8rX3fxAA" name="Iterate(Write(InActiveMonitor$initializationFlag$1)).inputElement" incoming="_emJ6WM2iEeiCta8rX3fxAA" outgoing="_emJ6X82iEeiCta8rX3fxAA" regionAsInput="_emJ6Xs2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emJ6b82iEeiCta8rX3fxAA" name="Read(InActiveMonitor$initializationFlag$1)" structuralFeature="_emJ5_82iEeiCta8rX3fxAA">
              <object xmi:id="_emJ6cM2iEeiCta8rX3fxAA" name="Read(InActiveMonitor$initializationFlag$1).object" incoming="_emJ6RM2iEeiCta8rX3fxAA" type="_emJ5_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6cc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6cs2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emJ6c82iEeiCta8rX3fxAA" name="Read(InActiveMonitor$initializationFlag$1).result" outgoing="_emJ6Rc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6dM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6dc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emJ6ds2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emJ6d82iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emJ6Rc2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6eM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6ec2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emJ6es2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emJ6Rs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6e82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6fM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ6fc2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emJ6fs2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emJ6R82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6f82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6gM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emJ6gc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emJ6gs2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emJ6g82iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emJ6Rs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6hM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6hc2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emJ6hs2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emJ6Sc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6h82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6iM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emJ6ic2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emJ6R82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6is2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6i82iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emJ6jM2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emJ6SM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emJ6jc2iEeiCta8rX3fxAA" name="Decision(Test(InActiveMonitor$initializationFlag$1))" incoming="_emJ6SM2iEeiCta8rX3fxAA _emJ6Sc2iEeiCta8rX3fxAA" outgoing="_emJ6Ss2iEeiCta8rX3fxAA" decisionInputFlow="_emJ6Sc2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emJ6js2iEeiCta8rX3fxAA" name="InActiveMonitor$initialization$1" visibility="protected" method="_emJ6P82iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emJ6j82iEeiCta8rX3fxAA" name="InActiveMonitor" visibility="public" method="_emJ6As2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emJ6kM2iEeiCta8rX3fxAA" name="" visibility="package" type="_emJ5_c2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6kc2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6ks2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_emJ6k82iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emJ6Pc2iEeiCta8rX3fxAA" redefinedOperation="_emJ5_M2iEeiCta8rX3fxAA"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emJ6lM2iEeiCta8rX3fxAA" name="ActiveMonitor" visibility="package" classifierBehavior="_emJ6nM2iEeiCta8rX3fxAA" isActive="true">
        <generalization xmi:id="_emJ6lc2iEeiCta8rX3fxAA" general="_emJ5bc2iEeiCta8rX3fxAA"/>
        <ownedAttribute xmi:id="_emJ6ls2iEeiCta8rX3fxAA" name="ActiveMonitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6l82iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6mM2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_emJ6mc2iEeiCta8rX3fxAA" name="n" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6ms2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6m82iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ6nM2iEeiCta8rX3fxAA" name="ActiveMonitor$classifierBehavior$1" visibility="private" isActive="true" node="_emJ6nc2iEeiCta8rX3fxAA" group="_emJ6nc2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emJ6nc2iEeiCta8rX3fxAA" name="Body(ActiveMonitor$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ6ns2iEeiCta8rX3fxAA" target="_emJ6x82iEeiCta8rX3fxAA" source="_emJ6n82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ6n82iEeiCta8rX3fxAA" name="ExpressionStatement@7abbc7b8" outgoing="_emJ6ns2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6oM2iEeiCta8rX3fxAA" target="_emJ6q82iEeiCta8rX3fxAA" source="_emJ6p82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6oc2iEeiCta8rX3fxAA" target="_emJ6tM2iEeiCta8rX3fxAA" source="_emJ6sc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6os2iEeiCta8rX3fxAA" target="_emJ6uM2iEeiCta8rX3fxAA" source="_emJ6rs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6o82iEeiCta8rX3fxAA" target="_emJ6sc2iEeiCta8rX3fxAA" source="_emJ6w82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emJ6pM2iEeiCta8rX3fxAA" target="_emJ6pc2iEeiCta8rX3fxAA" source="_emJ6wc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ6pc2iEeiCta8rX3fxAA" name="Expression(LeftHandSide@37969114)" incoming="_emJ6pM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_emJ6ps2iEeiCta8rX3fxAA" name="ReadSelf">
                  <result xmi:id="_emJ6p82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJ6oM2iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6qM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6qc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_emJ6qs2iEeiCta8rX3fxAA" name="Clear(n)" structuralFeature="_emJ6mc2iEeiCta8rX3fxAA">
                <object xmi:id="_emJ6q82iEeiCta8rX3fxAA" name="Clear(n).object" incoming="_emJ6oM2iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6rM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6rc2iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_emJ6rs2iEeiCta8rX3fxAA" name="Clear(n).result" outgoing="_emJ6os2iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6r82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6sM2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_emJ6sc2iEeiCta8rX3fxAA" name="Fork(LeftHandSide@37969114)" incoming="_emJ6o82iEeiCta8rX3fxAA" outgoing="_emJ6oc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ6ss2iEeiCta8rX3fxAA" name="WriteAll(ActiveMonitor::n)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6s82iEeiCta8rX3fxAA" target="_emJ6vs2iEeiCta8rX3fxAA" source="_emJ6tM2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_emJ6tM2iEeiCta8rX3fxAA" name="WriteAll(ActiveMonitor::n).input(ActiveMonitor::n)" incoming="_emJ6oc2iEeiCta8rX3fxAA" outgoing="_emJ6s82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6tc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6ts2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emJ6t82iEeiCta8rX3fxAA" name="Write(n)" structuralFeature="_emJ6mc2iEeiCta8rX3fxAA" isReplaceAll="true">
                  <object xmi:id="_emJ6uM2iEeiCta8rX3fxAA" name="Write(n).object" incoming="_emJ6os2iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6uc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6us2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emJ6u82iEeiCta8rX3fxAA" name="Write(n).result" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6vM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6vc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:id="_emJ6vs2iEeiCta8rX3fxAA" name="Write(n).value" incoming="_emJ6s82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6v82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6wM2iEeiCta8rX3fxAA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ6wc2iEeiCta8rX3fxAA" name="RightHandSide@47df4071" outgoing="_emJ6pM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ6ws2iEeiCta8rX3fxAA" name="Value(1)">
                  <result xmi:id="_emJ6w82iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_emJ6o82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6xM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6xc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_emJ6xs2iEeiCta8rX3fxAA" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ6x82iEeiCta8rX3fxAA" name="ExpressionStatement@436eac6e" incoming="_emJ6ns2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6yM2iEeiCta8rX3fxAA" target="_emJ60M2iEeiCta8rX3fxAA" source="_emJ6082iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emJ6yc2iEeiCta8rX3fxAA" target="_emJ6ys2iEeiCta8rX3fxAA" source="_emJ60c2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_emJ6ys2iEeiCta8rX3fxAA" name="Collect(SendSignal(Continue))" incoming="_emJ6yc2iEeiCta8rX3fxAA" mode="parallel" inputElement="_emJ60M2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6y82iEeiCta8rX3fxAA" target="_emJ6zc2iEeiCta8rX3fxAA" source="_emJ60M2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:SendSignalAction" xmi:id="_emJ6zM2iEeiCta8rX3fxAA" name="SendSignal(Continue)" signal="_emLuYc2iEeiCta8rX3fxAA">
                  <target xmi:id="_emJ6zc2iEeiCta8rX3fxAA" name="SendSignal(Continue).target" incoming="_emJ6y82iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6zs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6z82iEeiCta8rX3fxAA" value="1"/>
                  </target>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_emJ60M2iEeiCta8rX3fxAA" name="Collect(SendSignal(Continue)).inputElement" incoming="_emJ6yM2iEeiCta8rX3fxAA" outgoing="_emJ6y82iEeiCta8rX3fxAA" regionAsInput="_emJ6ys2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ60c2iEeiCta8rX3fxAA" name="Feature(ReadExtent(TestRunner).result)" outgoing="_emJ6yc2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_emJ60s2iEeiCta8rX3fxAA" name="ReadExtent(TestRunner)" classifier="_emLH-M2iEeiCta8rX3fxAA">
                  <result xmi:id="_emJ6082iEeiCta8rX3fxAA" name="ReadExtent(TestRunner).result" outgoing="_emJ6yM2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ61M2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ61c2iEeiCta8rX3fxAA" value="*"/>
                  </result>
                </node>
              </node>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ61s2iEeiCta8rX3fxAA" name="ActiveMonitor$method$1" visibility="private" specification="_emJ7ds2iEeiCta8rX3fxAA" node="_emJ6282iEeiCta8rX3fxAA _emJ63M2iEeiCta8rX3fxAA" group="_emJ63M2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emJ6182iEeiCta8rX3fxAA" name="" type="_emJ6lM2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ62M2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ62c2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ62s2iEeiCta8rX3fxAA" target="_emJ6282iEeiCta8rX3fxAA" source="_emJ67c2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emJ63M2iEeiCta8rX3fxAA" name="Body(ActiveMonitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ63c2iEeiCta8rX3fxAA" target="_emJ67c2iEeiCta8rX3fxAA" source="_emJ66s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ63s2iEeiCta8rX3fxAA" target="_emJ6782iEeiCta8rX3fxAA" source="_emJ67c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ6382iEeiCta8rX3fxAA" target="_emJ66M2iEeiCta8rX3fxAA" source="_emJ67s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ64M2iEeiCta8rX3fxAA" target="_emJ6882iEeiCta8rX3fxAA" source="_emJ67c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ64c2iEeiCta8rX3fxAA" target="_emJ6-s2iEeiCta8rX3fxAA" source="_emJ69s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ64s2iEeiCta8rX3fxAA" target="_emJ7Bs2iEeiCta8rX3fxAA" source="_emJ6_c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ6482iEeiCta8rX3fxAA" target="_emJ7DM2iEeiCta8rX3fxAA" source="_emJ7Ac2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ65M2iEeiCta8rX3fxAA" target="_emJ7EM2iEeiCta8rX3fxAA" source="_emJ7D82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ65c2iEeiCta8rX3fxAA" target="_emJ7EM2iEeiCta8rX3fxAA" source="_emJ7Cc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ65s2iEeiCta8rX3fxAA" target="_emJ67s2iEeiCta8rX3fxAA" source="_emJ7EM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emJ6582iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ66M2iEeiCta8rX3fxAA" name="Body" incoming="_emJ6382iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emJ66c2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emJ66s2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJ63c2iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6682iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ67M2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emJ67c2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emJ63c2iEeiCta8rX3fxAA" outgoing="_emJ62s2iEeiCta8rX3fxAA _emJ63s2iEeiCta8rX3fxAA _emJ64M2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emJ67s2iEeiCta8rX3fxAA" name="Call(ActiveMonitor$initialization$1)" incoming="_emJ65s2iEeiCta8rX3fxAA" outgoing="_emJ6382iEeiCta8rX3fxAA" operation="_emJ7dc2iEeiCta8rX3fxAA">
              <target xmi:id="_emJ6782iEeiCta8rX3fxAA" name="Call(ActiveMonitor$initialization$1).target" incoming="_emJ63s2iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ68M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ68c2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emJ68s2iEeiCta8rX3fxAA" name="Read(ActiveMonitor$initializationFlag$1)" structuralFeature="_emJ6ls2iEeiCta8rX3fxAA">
              <object xmi:id="_emJ6882iEeiCta8rX3fxAA" name="Read(ActiveMonitor$initializationFlag$1).object" incoming="_emJ64M2iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ69M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ69c2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emJ69s2iEeiCta8rX3fxAA" name="Read(ActiveMonitor$initializationFlag$1).result" outgoing="_emJ64c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6982iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6-M2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emJ6-c2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emJ6-s2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emJ64c2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6-82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6_M2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emJ6_c2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emJ64s2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ6_s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ6_82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ7AM2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emJ7Ac2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emJ6482iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7As2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7A82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emJ7BM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emJ7Bc2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emJ7Bs2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emJ64s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7B82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7CM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emJ7Cc2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emJ65c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7Cs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7C82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emJ7DM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emJ6482iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7Dc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7Ds2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emJ7D82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emJ65M2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emJ7EM2iEeiCta8rX3fxAA" name="Decision(Test(ActiveMonitor$initializationFlag$1))" incoming="_emJ65M2iEeiCta8rX3fxAA _emJ65c2iEeiCta8rX3fxAA" outgoing="_emJ65s2iEeiCta8rX3fxAA" decisionInputFlow="_emJ65c2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emJ6282iEeiCta8rX3fxAA" name="Return" incoming="_emJ62s2iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" parameter="_emJ6182iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ7Ec2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emJ7es2iEeiCta8rX3fxAA" node="_emJ7Es2iEeiCta8rX3fxAA" group="_emJ7Es2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emJ7Es2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ7E82iEeiCta8rX3fxAA" name="ActiveMonitor$initialization$1" visibility="private" specification="_emJ7dc2iEeiCta8rX3fxAA" node="_emJ7FM2iEeiCta8rX3fxAA" group="_emJ7FM2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emJ7FM2iEeiCta8rX3fxAA" name="Body(ActiveMonitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7Fc2iEeiCta8rX3fxAA" target="_emJ7Jc2iEeiCta8rX3fxAA" source="_emJ7Is2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7Fs2iEeiCta8rX3fxAA" target="_emJ7Ks2iEeiCta8rX3fxAA" source="_emJ7Jc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7F82iEeiCta8rX3fxAA" target="_emJ7Nc2iEeiCta8rX3fxAA" source="_emJ7Jc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7GM2iEeiCta8rX3fxAA" target="_emJ7SM2iEeiCta8rX3fxAA" source="_emJ7Jc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7Gc2iEeiCta8rX3fxAA" target="_emJ7V82iEeiCta8rX3fxAA" source="_emJ7Jc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7Gs2iEeiCta8rX3fxAA" target="_emJ7Xs2iEeiCta8rX3fxAA" source="_emJ7Ws2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7G82iEeiCta8rX3fxAA" target="_emJ7as2iEeiCta8rX3fxAA" source="_emJ7Yc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7HM2iEeiCta8rX3fxAA" target="_emJ7cM2iEeiCta8rX3fxAA" source="_emJ7Zc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ7Hc2iEeiCta8rX3fxAA" target="_emJ7dM2iEeiCta8rX3fxAA" source="_emJ7c82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7Hs2iEeiCta8rX3fxAA" target="_emJ7dM2iEeiCta8rX3fxAA" source="_emJ7bc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ7H82iEeiCta8rX3fxAA" target="_emJ7Js2iEeiCta8rX3fxAA" source="_emJ7dM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emJ7IM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emJ7Ic2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emJ7Is2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJ7Fc2iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7I82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7JM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emJ7Jc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emJ7Fc2iEeiCta8rX3fxAA" outgoing="_emJ7Fs2iEeiCta8rX3fxAA _emJ7F82iEeiCta8rX3fxAA _emJ7GM2iEeiCta8rX3fxAA _emJ7Gc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ7Js2iEeiCta8rX3fxAA" name="Initialization" incoming="_emJ7H82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_emJ7J82iEeiCta8rX3fxAA" target="_emJ7Lc2iEeiCta8rX3fxAA" source="_emJ7Kc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emJ7KM2iEeiCta8rX3fxAA" target="_emJ7Ps2iEeiCta8rX3fxAA" source="_emJ7Lc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_emJ7Kc2iEeiCta8rX3fxAA" name="Call(Monitor$initialization$1)" outgoing="_emJ7J82iEeiCta8rX3fxAA" operation="_emJ5982iEeiCta8rX3fxAA">
                <target xmi:id="_emJ7Ks2iEeiCta8rX3fxAA" name="Call(Monitor$initialization$1).target" incoming="_emJ7Fs2iEeiCta8rX3fxAA" type="_emJ5bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7K82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7LM2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ7Lc2iEeiCta8rX3fxAA" name="Initialize(n)" incoming="_emJ7J82iEeiCta8rX3fxAA" outgoing="_emJ7KM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7Ls2iEeiCta8rX3fxAA" target="_emJ7O82iEeiCta8rX3fxAA" source="_emJ7MM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ7L82iEeiCta8rX3fxAA" name="Value(0)">
                  <result xmi:id="_emJ7MM2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emJ7Ls2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7Mc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7Ms2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_emJ7M82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emJ7NM2iEeiCta8rX3fxAA" name="Write(n)" structuralFeature="_emJ6mc2iEeiCta8rX3fxAA" isReplaceAll="true">
                  <object xmi:id="_emJ7Nc2iEeiCta8rX3fxAA" name="Write(n).object" incoming="_emJ7F82iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7Ns2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7N82iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emJ7OM2iEeiCta8rX3fxAA" name="Write(n).result" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7Oc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7Os2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:id="_emJ7O82iEeiCta8rX3fxAA" name="Write(n).value" incoming="_emJ7Ls2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7PM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7Pc2iEeiCta8rX3fxAA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ7Ps2iEeiCta8rX3fxAA" name="Set(initializationFlag)" incoming="_emJ7KM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7P82iEeiCta8rX3fxAA" target="_emJ7Vc2iEeiCta8rX3fxAA" source="_emJ7Qc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ7QM2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emJ7Qc2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emJ7P82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7Qs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7Q82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emJ7RM2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emJ7Rc2iEeiCta8rX3fxAA" name="Iterate(Write(ActiveMonitor$initializationFlag$1))" inputElement="_emJ7Vc2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7Rs2iEeiCta8rX3fxAA" target="_emJ7Us2iEeiCta8rX3fxAA" source="_emJ7Vc2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7R82iEeiCta8rX3fxAA" target="_emJ7TM2iEeiCta8rX3fxAA" source="_emJ7SM2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emJ7SM2iEeiCta8rX3fxAA" name="Iterate(Write(ActiveMonitor$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emJ7GM2iEeiCta8rX3fxAA" outgoing="_emJ7R82iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7Sc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7Ss2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emJ7S82iEeiCta8rX3fxAA" name="Write(ActiveMonitor$initializationFlag$1)" structuralFeature="_emJ6ls2iEeiCta8rX3fxAA">
                    <object xmi:id="_emJ7TM2iEeiCta8rX3fxAA" name="Write(ActiveMonitor$initializationFlag$1).object" incoming="_emJ7R82iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7Tc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7Ts2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emJ7T82iEeiCta8rX3fxAA" name="Write(ActiveMonitor$initializationFlag$1).result" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7UM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7Uc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emJ7Us2iEeiCta8rX3fxAA" name="Write(ActiveMonitor$initializationFlag$1).value" incoming="_emJ7Rs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7U82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7VM2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emJ7Vc2iEeiCta8rX3fxAA" name="Iterate(Write(ActiveMonitor$initializationFlag$1)).inputElement" incoming="_emJ7P82iEeiCta8rX3fxAA" outgoing="_emJ7Rs2iEeiCta8rX3fxAA" regionAsInput="_emJ7Rc2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emJ7Vs2iEeiCta8rX3fxAA" name="Read(ActiveMonitor$initializationFlag$1)" structuralFeature="_emJ6ls2iEeiCta8rX3fxAA">
              <object xmi:id="_emJ7V82iEeiCta8rX3fxAA" name="Read(ActiveMonitor$initializationFlag$1).object" incoming="_emJ7Gc2iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7WM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7Wc2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emJ7Ws2iEeiCta8rX3fxAA" name="Read(ActiveMonitor$initializationFlag$1).result" outgoing="_emJ7Gs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7W82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7XM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emJ7Xc2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emJ7Xs2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emJ7Gs2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7X82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7YM2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emJ7Yc2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emJ7G82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7Ys2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7Y82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ7ZM2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emJ7Zc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emJ7HM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7Zs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7Z82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emJ7aM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emJ7ac2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emJ7as2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emJ7G82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7a82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7bM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emJ7bc2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emJ7Hs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7bs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7b82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emJ7cM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emJ7HM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7cc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7cs2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emJ7c82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emJ7Hc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emJ7dM2iEeiCta8rX3fxAA" name="Decision(Test(ActiveMonitor$initializationFlag$1))" incoming="_emJ7Hc2iEeiCta8rX3fxAA _emJ7Hs2iEeiCta8rX3fxAA" outgoing="_emJ7H82iEeiCta8rX3fxAA" decisionInputFlow="_emJ7Hs2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emJ7dc2iEeiCta8rX3fxAA" name="ActiveMonitor$initialization$1" visibility="protected" method="_emJ7E82iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emJ7ds2iEeiCta8rX3fxAA" name="ActiveMonitor" visibility="public" method="_emJ61s2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emJ7d82iEeiCta8rX3fxAA" name="" visibility="package" type="_emJ6lM2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7eM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7ec2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_emJ7es2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emJ7Ec2iEeiCta8rX3fxAA" redefinedOperation="_emJ5_M2iEeiCta8rX3fxAA"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emJ7e82iEeiCta8rX3fxAA" name="Employee" visibility="package">
        <ownedAttribute xmi:id="_emJ7fM2iEeiCta8rX3fxAA" name="Employee$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7fc2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7fs2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ7f82iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emJ8Bs2iEeiCta8rX3fxAA" node="_emJ7gM2iEeiCta8rX3fxAA" group="_emJ7gM2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emJ7gM2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ7gc2iEeiCta8rX3fxAA" name="Employee$method$1" visibility="private" specification="_emJ8B82iEeiCta8rX3fxAA" node="_emJ7hs2iEeiCta8rX3fxAA _emJ7h82iEeiCta8rX3fxAA" group="_emJ7h82iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emJ7gs2iEeiCta8rX3fxAA" name="" type="_emJ7e82iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7g82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7hM2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7hc2iEeiCta8rX3fxAA" target="_emJ7hs2iEeiCta8rX3fxAA" source="_emJ7mM2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emJ7h82iEeiCta8rX3fxAA" name="Body(Employee$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7iM2iEeiCta8rX3fxAA" target="_emJ7mM2iEeiCta8rX3fxAA" source="_emJ7lc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7ic2iEeiCta8rX3fxAA" target="_emJ7ms2iEeiCta8rX3fxAA" source="_emJ7mM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ7is2iEeiCta8rX3fxAA" target="_emJ7k82iEeiCta8rX3fxAA" source="_emJ7mc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7i82iEeiCta8rX3fxAA" target="_emJ7ns2iEeiCta8rX3fxAA" source="_emJ7mM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7jM2iEeiCta8rX3fxAA" target="_emJ7pc2iEeiCta8rX3fxAA" source="_emJ7oc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7jc2iEeiCta8rX3fxAA" target="_emJ7sc2iEeiCta8rX3fxAA" source="_emJ7qM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7js2iEeiCta8rX3fxAA" target="_emJ7t82iEeiCta8rX3fxAA" source="_emJ7rM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ7j82iEeiCta8rX3fxAA" target="_emJ7u82iEeiCta8rX3fxAA" source="_emJ7us2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7kM2iEeiCta8rX3fxAA" target="_emJ7u82iEeiCta8rX3fxAA" source="_emJ7tM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ7kc2iEeiCta8rX3fxAA" target="_emJ7mc2iEeiCta8rX3fxAA" source="_emJ7u82iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emJ7ks2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ7k82iEeiCta8rX3fxAA" name="Body" incoming="_emJ7is2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emJ7lM2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emJ7lc2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJ7iM2iEeiCta8rX3fxAA" type="_emJ7e82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7ls2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7l82iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emJ7mM2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emJ7iM2iEeiCta8rX3fxAA" outgoing="_emJ7hc2iEeiCta8rX3fxAA _emJ7ic2iEeiCta8rX3fxAA _emJ7i82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emJ7mc2iEeiCta8rX3fxAA" name="Call(Employee$initialization$1)" incoming="_emJ7kc2iEeiCta8rX3fxAA" outgoing="_emJ7is2iEeiCta8rX3fxAA" operation="_emJ8Bc2iEeiCta8rX3fxAA">
              <target xmi:id="_emJ7ms2iEeiCta8rX3fxAA" name="Call(Employee$initialization$1).target" incoming="_emJ7ic2iEeiCta8rX3fxAA" type="_emJ7e82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7m82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7nM2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emJ7nc2iEeiCta8rX3fxAA" name="Read(Employee$initializationFlag$1)" structuralFeature="_emJ7fM2iEeiCta8rX3fxAA">
              <object xmi:id="_emJ7ns2iEeiCta8rX3fxAA" name="Read(Employee$initializationFlag$1).object" incoming="_emJ7i82iEeiCta8rX3fxAA" type="_emJ7e82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7n82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7oM2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emJ7oc2iEeiCta8rX3fxAA" name="Read(Employee$initializationFlag$1).result" outgoing="_emJ7jM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7os2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7o82iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emJ7pM2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emJ7pc2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emJ7jM2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7ps2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7p82iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emJ7qM2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emJ7jc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7qc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7qs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ7q82iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emJ7rM2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emJ7js2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7rc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7rs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emJ7r82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emJ7sM2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emJ7sc2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emJ7jc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7ss2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7s82iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emJ7tM2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emJ7kM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7tc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7ts2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emJ7t82iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emJ7js2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7uM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7uc2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emJ7us2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emJ7j82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emJ7u82iEeiCta8rX3fxAA" name="Decision(Test(Employee$initializationFlag$1))" incoming="_emJ7j82iEeiCta8rX3fxAA _emJ7kM2iEeiCta8rX3fxAA" outgoing="_emJ7kc2iEeiCta8rX3fxAA" decisionInputFlow="_emJ7kM2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emJ7hs2iEeiCta8rX3fxAA" name="Return" incoming="_emJ7hc2iEeiCta8rX3fxAA" type="_emJ7e82iEeiCta8rX3fxAA" parameter="_emJ7gs2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ7vM2iEeiCta8rX3fxAA" name="Employee$initialization$1" visibility="private" specification="_emJ8Bc2iEeiCta8rX3fxAA" node="_emJ7vc2iEeiCta8rX3fxAA" group="_emJ7vc2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emJ7vc2iEeiCta8rX3fxAA" name="Body(Employee$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7vs2iEeiCta8rX3fxAA" target="_emJ7zM2iEeiCta8rX3fxAA" source="_emJ7yc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7v82iEeiCta8rX3fxAA" target="_emJ72M2iEeiCta8rX3fxAA" source="_emJ7zM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7wM2iEeiCta8rX3fxAA" target="_emJ7582iEeiCta8rX3fxAA" source="_emJ7zM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7wc2iEeiCta8rX3fxAA" target="_emJ77s2iEeiCta8rX3fxAA" source="_emJ76s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7ws2iEeiCta8rX3fxAA" target="_emJ7-s2iEeiCta8rX3fxAA" source="_emJ78c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7w82iEeiCta8rX3fxAA" target="_emJ8AM2iEeiCta8rX3fxAA" source="_emJ79c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ7xM2iEeiCta8rX3fxAA" target="_emJ8BM2iEeiCta8rX3fxAA" source="_emJ8A82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7xc2iEeiCta8rX3fxAA" target="_emJ8BM2iEeiCta8rX3fxAA" source="_emJ7_c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ7xs2iEeiCta8rX3fxAA" target="_emJ7zc2iEeiCta8rX3fxAA" source="_emJ8BM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emJ7x82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emJ7yM2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emJ7yc2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJ7vs2iEeiCta8rX3fxAA" type="_emJ7e82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7ys2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7y82iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emJ7zM2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emJ7vs2iEeiCta8rX3fxAA" outgoing="_emJ7v82iEeiCta8rX3fxAA _emJ7wM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ7zc2iEeiCta8rX3fxAA" name="Initialization" incoming="_emJ7xs2iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ7zs2iEeiCta8rX3fxAA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7z82iEeiCta8rX3fxAA" target="_emJ75c2iEeiCta8rX3fxAA" source="_emJ70c2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ70M2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emJ70c2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emJ7z82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ70s2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7082iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emJ71M2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emJ71c2iEeiCta8rX3fxAA" name="Iterate(Write(Employee$initializationFlag$1))" inputElement="_emJ75c2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ71s2iEeiCta8rX3fxAA" target="_emJ74s2iEeiCta8rX3fxAA" source="_emJ75c2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ7182iEeiCta8rX3fxAA" target="_emJ73M2iEeiCta8rX3fxAA" source="_emJ72M2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emJ72M2iEeiCta8rX3fxAA" name="Iterate(Write(Employee$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emJ7v82iEeiCta8rX3fxAA" outgoing="_emJ7182iEeiCta8rX3fxAA" type="_emJ7e82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ72c2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ72s2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emJ7282iEeiCta8rX3fxAA" name="Write(Employee$initializationFlag$1)" structuralFeature="_emJ7fM2iEeiCta8rX3fxAA">
                    <object xmi:id="_emJ73M2iEeiCta8rX3fxAA" name="Write(Employee$initializationFlag$1).object" incoming="_emJ7182iEeiCta8rX3fxAA" type="_emJ7e82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ73c2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ73s2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emJ7382iEeiCta8rX3fxAA" name="Write(Employee$initializationFlag$1).result" type="_emJ7e82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ74M2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ74c2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emJ74s2iEeiCta8rX3fxAA" name="Write(Employee$initializationFlag$1).value" incoming="_emJ71s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7482iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ75M2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emJ75c2iEeiCta8rX3fxAA" name="Iterate(Write(Employee$initializationFlag$1)).inputElement" incoming="_emJ7z82iEeiCta8rX3fxAA" outgoing="_emJ71s2iEeiCta8rX3fxAA" regionAsInput="_emJ71c2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emJ75s2iEeiCta8rX3fxAA" name="Read(Employee$initializationFlag$1)" structuralFeature="_emJ7fM2iEeiCta8rX3fxAA">
              <object xmi:id="_emJ7582iEeiCta8rX3fxAA" name="Read(Employee$initializationFlag$1).object" incoming="_emJ7wM2iEeiCta8rX3fxAA" type="_emJ7e82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ76M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ76c2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emJ76s2iEeiCta8rX3fxAA" name="Read(Employee$initializationFlag$1).result" outgoing="_emJ7wc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7682iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ77M2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emJ77c2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emJ77s2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emJ7wc2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7782iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ78M2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emJ78c2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emJ7ws2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ78s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7882iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ79M2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emJ79c2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emJ7w82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ79s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7982iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emJ7-M2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emJ7-c2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emJ7-s2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emJ7ws2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7-82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7_M2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emJ7_c2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emJ7xc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ7_s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ7_82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emJ8AM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emJ7w82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8Ac2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8As2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emJ8A82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emJ7xM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emJ8BM2iEeiCta8rX3fxAA" name="Decision(Test(Employee$initializationFlag$1))" incoming="_emJ7xM2iEeiCta8rX3fxAA _emJ7xc2iEeiCta8rX3fxAA" outgoing="_emJ7xs2iEeiCta8rX3fxAA" decisionInputFlow="_emJ7xc2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emJ8Bc2iEeiCta8rX3fxAA" name="Employee$initialization$1" visibility="protected" method="_emJ7vM2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emJ8Bs2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emJ7f82iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emJ8B82iEeiCta8rX3fxAA" name="Employee" visibility="public" method="_emJ7gc2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emJ8CM2iEeiCta8rX3fxAA" name="" visibility="package" type="_emJ7e82iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8Cc2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8Cs2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emJ8C82iEeiCta8rX3fxAA" name="Administrator" visibility="package">
        <generalization xmi:id="_emJ8DM2iEeiCta8rX3fxAA" general="_emJ7e82iEeiCta8rX3fxAA"/>
        <ownedAttribute xmi:id="_emJ8Dc2iEeiCta8rX3fxAA" name="Administrator$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8Ds2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8D82iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ8EM2iEeiCta8rX3fxAA" name="Administrator$method$1" visibility="private" specification="_emJ8nc2iEeiCta8rX3fxAA" node="_emJ8Fc2iEeiCta8rX3fxAA _emJ8Fs2iEeiCta8rX3fxAA" group="_emJ8Fs2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emJ8Ec2iEeiCta8rX3fxAA" name="" type="_emJ8C82iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8Es2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8E82iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8FM2iEeiCta8rX3fxAA" target="_emJ8Fc2iEeiCta8rX3fxAA" source="_emJ8J82iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emJ8Fs2iEeiCta8rX3fxAA" name="Body(Administrator$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8F82iEeiCta8rX3fxAA" target="_emJ8J82iEeiCta8rX3fxAA" source="_emJ8JM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8GM2iEeiCta8rX3fxAA" target="_emJ8Kc2iEeiCta8rX3fxAA" source="_emJ8J82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ8Gc2iEeiCta8rX3fxAA" target="_emJ8Is2iEeiCta8rX3fxAA" source="_emJ8KM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8Gs2iEeiCta8rX3fxAA" target="_emJ8Lc2iEeiCta8rX3fxAA" source="_emJ8J82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8G82iEeiCta8rX3fxAA" target="_emJ8NM2iEeiCta8rX3fxAA" source="_emJ8MM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8HM2iEeiCta8rX3fxAA" target="_emJ8QM2iEeiCta8rX3fxAA" source="_emJ8N82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8Hc2iEeiCta8rX3fxAA" target="_emJ8Rs2iEeiCta8rX3fxAA" source="_emJ8O82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ8Hs2iEeiCta8rX3fxAA" target="_emJ8Ss2iEeiCta8rX3fxAA" source="_emJ8Sc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8H82iEeiCta8rX3fxAA" target="_emJ8Ss2iEeiCta8rX3fxAA" source="_emJ8Q82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ8IM2iEeiCta8rX3fxAA" target="_emJ8KM2iEeiCta8rX3fxAA" source="_emJ8Ss2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emJ8Ic2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ8Is2iEeiCta8rX3fxAA" name="Body" incoming="_emJ8Gc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emJ8I82iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emJ8JM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJ8F82iEeiCta8rX3fxAA" type="_emJ8C82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8Jc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8Js2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emJ8J82iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emJ8F82iEeiCta8rX3fxAA" outgoing="_emJ8FM2iEeiCta8rX3fxAA _emJ8GM2iEeiCta8rX3fxAA _emJ8Gs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emJ8KM2iEeiCta8rX3fxAA" name="Call(Administrator$initialization$1)" incoming="_emJ8IM2iEeiCta8rX3fxAA" outgoing="_emJ8Gc2iEeiCta8rX3fxAA" operation="_emJ8nM2iEeiCta8rX3fxAA">
              <target xmi:id="_emJ8Kc2iEeiCta8rX3fxAA" name="Call(Administrator$initialization$1).target" incoming="_emJ8GM2iEeiCta8rX3fxAA" type="_emJ8C82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8Ks2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8K82iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emJ8LM2iEeiCta8rX3fxAA" name="Read(Administrator$initializationFlag$1)" structuralFeature="_emJ8Dc2iEeiCta8rX3fxAA">
              <object xmi:id="_emJ8Lc2iEeiCta8rX3fxAA" name="Read(Administrator$initializationFlag$1).object" incoming="_emJ8Gs2iEeiCta8rX3fxAA" type="_emJ8C82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8Ls2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8L82iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emJ8MM2iEeiCta8rX3fxAA" name="Read(Administrator$initializationFlag$1).result" outgoing="_emJ8G82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8Mc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8Ms2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emJ8M82iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emJ8NM2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emJ8G82iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8Nc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8Ns2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emJ8N82iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emJ8HM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8OM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8Oc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ8Os2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emJ8O82iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emJ8Hc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8PM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8Pc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emJ8Ps2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emJ8P82iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emJ8QM2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emJ8HM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8Qc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8Qs2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emJ8Q82iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emJ8H82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8RM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8Rc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emJ8Rs2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emJ8Hc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8R82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8SM2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emJ8Sc2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emJ8Hs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emJ8Ss2iEeiCta8rX3fxAA" name="Decision(Test(Administrator$initializationFlag$1))" incoming="_emJ8Hs2iEeiCta8rX3fxAA _emJ8H82iEeiCta8rX3fxAA" outgoing="_emJ8IM2iEeiCta8rX3fxAA" decisionInputFlow="_emJ8H82iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emJ8Fc2iEeiCta8rX3fxAA" name="Return" incoming="_emJ8FM2iEeiCta8rX3fxAA" type="_emJ8C82iEeiCta8rX3fxAA" parameter="_emJ8Ec2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ8S82iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emJ8oc2iEeiCta8rX3fxAA" node="_emJ8TM2iEeiCta8rX3fxAA" group="_emJ8TM2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emJ8TM2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ8Tc2iEeiCta8rX3fxAA" name="Administrator$initialization$1" visibility="private" specification="_emJ8nM2iEeiCta8rX3fxAA" node="_emJ8Ts2iEeiCta8rX3fxAA" group="_emJ8Ts2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emJ8Ts2iEeiCta8rX3fxAA" name="Body(Administrator$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8T82iEeiCta8rX3fxAA" target="_emJ8Xs2iEeiCta8rX3fxAA" source="_emJ8W82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8UM2iEeiCta8rX3fxAA" target="_emJ8Ys2iEeiCta8rX3fxAA" source="_emJ8Xs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8Uc2iEeiCta8rX3fxAA" target="_emJ8b82iEeiCta8rX3fxAA" source="_emJ8Xs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8Us2iEeiCta8rX3fxAA" target="_emJ8fs2iEeiCta8rX3fxAA" source="_emJ8Xs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8U82iEeiCta8rX3fxAA" target="_emJ8hc2iEeiCta8rX3fxAA" source="_emJ8gc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8VM2iEeiCta8rX3fxAA" target="_emJ8kc2iEeiCta8rX3fxAA" source="_emJ8iM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8Vc2iEeiCta8rX3fxAA" target="_emJ8l82iEeiCta8rX3fxAA" source="_emJ8jM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ8Vs2iEeiCta8rX3fxAA" target="_emJ8m82iEeiCta8rX3fxAA" source="_emJ8ms2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8V82iEeiCta8rX3fxAA" target="_emJ8m82iEeiCta8rX3fxAA" source="_emJ8lM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emJ8WM2iEeiCta8rX3fxAA" target="_emJ8X82iEeiCta8rX3fxAA" source="_emJ8m82iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emJ8Wc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emJ8Ws2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emJ8W82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emJ8T82iEeiCta8rX3fxAA" type="_emJ8C82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8XM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8Xc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emJ8Xs2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emJ8T82iEeiCta8rX3fxAA" outgoing="_emJ8UM2iEeiCta8rX3fxAA _emJ8Uc2iEeiCta8rX3fxAA _emJ8Us2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ8X82iEeiCta8rX3fxAA" name="Initialization" incoming="_emJ8WM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_emJ8YM2iEeiCta8rX3fxAA" target="_emJ8Zc2iEeiCta8rX3fxAA" source="_emJ8Yc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_emJ8Yc2iEeiCta8rX3fxAA" name="Call(Employee$initialization$1)" outgoing="_emJ8YM2iEeiCta8rX3fxAA" operation="_emJ8Bc2iEeiCta8rX3fxAA">
                <target xmi:id="_emJ8Ys2iEeiCta8rX3fxAA" name="Call(Employee$initialization$1).target" incoming="_emJ8UM2iEeiCta8rX3fxAA" type="_emJ7e82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8Y82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8ZM2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emJ8Zc2iEeiCta8rX3fxAA" name="Set(initializationFlag)" incoming="_emJ8YM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8Zs2iEeiCta8rX3fxAA" target="_emJ8fM2iEeiCta8rX3fxAA" source="_emJ8aM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ8Z82iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emJ8aM2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emJ8Zs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8ac2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8as2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emJ8a82iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emJ8bM2iEeiCta8rX3fxAA" name="Iterate(Write(Administrator$initializationFlag$1))" inputElement="_emJ8fM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8bc2iEeiCta8rX3fxAA" target="_emJ8ec2iEeiCta8rX3fxAA" source="_emJ8fM2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8bs2iEeiCta8rX3fxAA" target="_emJ8c82iEeiCta8rX3fxAA" source="_emJ8b82iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emJ8b82iEeiCta8rX3fxAA" name="Iterate(Write(Administrator$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emJ8Uc2iEeiCta8rX3fxAA" outgoing="_emJ8bs2iEeiCta8rX3fxAA" type="_emJ8C82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8cM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8cc2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emJ8cs2iEeiCta8rX3fxAA" name="Write(Administrator$initializationFlag$1)" structuralFeature="_emJ8Dc2iEeiCta8rX3fxAA">
                    <object xmi:id="_emJ8c82iEeiCta8rX3fxAA" name="Write(Administrator$initializationFlag$1).object" incoming="_emJ8bs2iEeiCta8rX3fxAA" type="_emJ8C82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8dM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8dc2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emJ8ds2iEeiCta8rX3fxAA" name="Write(Administrator$initializationFlag$1).result" type="_emJ8C82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8d82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8eM2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emJ8ec2iEeiCta8rX3fxAA" name="Write(Administrator$initializationFlag$1).value" incoming="_emJ8bc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8es2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8e82iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emJ8fM2iEeiCta8rX3fxAA" name="Iterate(Write(Administrator$initializationFlag$1)).inputElement" incoming="_emJ8Zs2iEeiCta8rX3fxAA" outgoing="_emJ8bc2iEeiCta8rX3fxAA" regionAsInput="_emJ8bM2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emJ8fc2iEeiCta8rX3fxAA" name="Read(Administrator$initializationFlag$1)" structuralFeature="_emJ8Dc2iEeiCta8rX3fxAA">
              <object xmi:id="_emJ8fs2iEeiCta8rX3fxAA" name="Read(Administrator$initializationFlag$1).object" incoming="_emJ8Us2iEeiCta8rX3fxAA" type="_emJ8C82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8f82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8gM2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emJ8gc2iEeiCta8rX3fxAA" name="Read(Administrator$initializationFlag$1).result" outgoing="_emJ8U82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8gs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8g82iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emJ8hM2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emJ8hc2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emJ8U82iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8hs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8h82iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emJ8iM2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emJ8VM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8ic2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8is2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emJ8i82iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emJ8jM2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emJ8Vc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8jc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8js2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emJ8j82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emJ8kM2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emJ8kc2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emJ8VM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8ks2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8k82iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emJ8lM2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emJ8V82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8lc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8ls2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emJ8l82iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emJ8Vc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8mM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8mc2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emJ8ms2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emJ8Vs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emJ8m82iEeiCta8rX3fxAA" name="Decision(Test(Administrator$initializationFlag$1))" incoming="_emJ8Vs2iEeiCta8rX3fxAA _emJ8V82iEeiCta8rX3fxAA" outgoing="_emJ8WM2iEeiCta8rX3fxAA" decisionInputFlow="_emJ8V82iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emJ8nM2iEeiCta8rX3fxAA" name="Administrator$initialization$1" visibility="protected" method="_emJ8Tc2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emJ8nc2iEeiCta8rX3fxAA" name="Administrator" visibility="public" method="_emJ8EM2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emJ8ns2iEeiCta8rX3fxAA" name="" visibility="package" type="_emJ8C82iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8n82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8oM2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_emJ8oc2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emJ8S82iEeiCta8rX3fxAA" redefinedOperation="_emJ8Bs2iEeiCta8rX3fxAA"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emJ8os2iEeiCta8rX3fxAA" name="Staff" visibility="package">
        <generalization xmi:id="_emJ8o82iEeiCta8rX3fxAA" general="_emJ7e82iEeiCta8rX3fxAA"/>
        <ownedAttribute xmi:id="_emJ8pM2iEeiCta8rX3fxAA" name="Staff$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8pc2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8ps2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emJ8p82iEeiCta8rX3fxAA" name="Staff$method$1" visibility="private" specification="_emKgiM2iEeiCta8rX3fxAA" node="_emKgAM2iEeiCta8rX3fxAA _emKgAc2iEeiCta8rX3fxAA" group="_emKgAc2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emJ8qM2iEeiCta8rX3fxAA" name="" type="_emJ8os2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emJ8qc2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emJ8qs2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emJ8q82iEeiCta8rX3fxAA" target="_emKgAM2iEeiCta8rX3fxAA" source="_emKgEs2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emKgAc2iEeiCta8rX3fxAA" name="Body(Staff$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgAs2iEeiCta8rX3fxAA" target="_emKgEs2iEeiCta8rX3fxAA" source="_emKgD82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgA82iEeiCta8rX3fxAA" target="_emKgFM2iEeiCta8rX3fxAA" source="_emKgEs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKgBM2iEeiCta8rX3fxAA" target="_emKgDc2iEeiCta8rX3fxAA" source="_emKgE82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgBc2iEeiCta8rX3fxAA" target="_emKgGM2iEeiCta8rX3fxAA" source="_emKgEs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgBs2iEeiCta8rX3fxAA" target="_emKgH82iEeiCta8rX3fxAA" source="_emKgG82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgB82iEeiCta8rX3fxAA" target="_emKgK82iEeiCta8rX3fxAA" source="_emKgIs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgCM2iEeiCta8rX3fxAA" target="_emKgMc2iEeiCta8rX3fxAA" source="_emKgJs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKgCc2iEeiCta8rX3fxAA" target="_emKgNc2iEeiCta8rX3fxAA" source="_emKgNM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgCs2iEeiCta8rX3fxAA" target="_emKgNc2iEeiCta8rX3fxAA" source="_emKgLs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKgC82iEeiCta8rX3fxAA" target="_emKgE82iEeiCta8rX3fxAA" source="_emKgNc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emKgDM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKgDc2iEeiCta8rX3fxAA" name="Body" incoming="_emKgBM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emKgDs2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emKgD82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emKgAs2iEeiCta8rX3fxAA" type="_emJ8os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgEM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgEc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emKgEs2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emKgAs2iEeiCta8rX3fxAA" outgoing="_emJ8q82iEeiCta8rX3fxAA _emKgA82iEeiCta8rX3fxAA _emKgBc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emKgE82iEeiCta8rX3fxAA" name="Call(Staff$initialization$1)" incoming="_emKgC82iEeiCta8rX3fxAA" outgoing="_emKgBM2iEeiCta8rX3fxAA" operation="_emKgh82iEeiCta8rX3fxAA">
              <target xmi:id="_emKgFM2iEeiCta8rX3fxAA" name="Call(Staff$initialization$1).target" incoming="_emKgA82iEeiCta8rX3fxAA" type="_emJ8os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgFc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgFs2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emKgF82iEeiCta8rX3fxAA" name="Read(Staff$initializationFlag$1)" structuralFeature="_emJ8pM2iEeiCta8rX3fxAA">
              <object xmi:id="_emKgGM2iEeiCta8rX3fxAA" name="Read(Staff$initializationFlag$1).object" incoming="_emKgBc2iEeiCta8rX3fxAA" type="_emJ8os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgGc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgGs2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emKgG82iEeiCta8rX3fxAA" name="Read(Staff$initializationFlag$1).result" outgoing="_emKgBs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgHM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgHc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emKgHs2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emKgH82iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emKgBs2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgIM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgIc2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emKgIs2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emKgB82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgI82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgJM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKgJc2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emKgJs2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emKgCM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgJ82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgKM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emKgKc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emKgKs2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emKgK82iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emKgB82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgLM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgLc2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emKgLs2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emKgCs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgL82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgMM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emKgMc2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emKgCM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgMs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgM82iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emKgNM2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emKgCc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emKgNc2iEeiCta8rX3fxAA" name="Decision(Test(Staff$initializationFlag$1))" incoming="_emKgCc2iEeiCta8rX3fxAA _emKgCs2iEeiCta8rX3fxAA" outgoing="_emKgC82iEeiCta8rX3fxAA" decisionInputFlow="_emKgCs2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emKgAM2iEeiCta8rX3fxAA" name="Return" incoming="_emJ8q82iEeiCta8rX3fxAA" type="_emJ8os2iEeiCta8rX3fxAA" parameter="_emJ8qM2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKgNs2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emKgjM2iEeiCta8rX3fxAA" node="_emKgN82iEeiCta8rX3fxAA" group="_emKgN82iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emKgN82iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKgOM2iEeiCta8rX3fxAA" name="Staff$initialization$1" visibility="private" specification="_emKgh82iEeiCta8rX3fxAA" node="_emKgOc2iEeiCta8rX3fxAA" group="_emKgOc2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emKgOc2iEeiCta8rX3fxAA" name="Body(Staff$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgOs2iEeiCta8rX3fxAA" target="_emKgSc2iEeiCta8rX3fxAA" source="_emKgRs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgO82iEeiCta8rX3fxAA" target="_emKgTc2iEeiCta8rX3fxAA" source="_emKgSc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgPM2iEeiCta8rX3fxAA" target="_emKgWs2iEeiCta8rX3fxAA" source="_emKgSc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgPc2iEeiCta8rX3fxAA" target="_emKgac2iEeiCta8rX3fxAA" source="_emKgSc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgPs2iEeiCta8rX3fxAA" target="_emKgcM2iEeiCta8rX3fxAA" source="_emKgbM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgP82iEeiCta8rX3fxAA" target="_emKgfM2iEeiCta8rX3fxAA" source="_emKgc82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgQM2iEeiCta8rX3fxAA" target="_emKggs2iEeiCta8rX3fxAA" source="_emKgd82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKgQc2iEeiCta8rX3fxAA" target="_emKghs2iEeiCta8rX3fxAA" source="_emKghc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgQs2iEeiCta8rX3fxAA" target="_emKghs2iEeiCta8rX3fxAA" source="_emKgf82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKgQ82iEeiCta8rX3fxAA" target="_emKgSs2iEeiCta8rX3fxAA" source="_emKghs2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emKgRM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emKgRc2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emKgRs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emKgOs2iEeiCta8rX3fxAA" type="_emJ8os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgR82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgSM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emKgSc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emKgOs2iEeiCta8rX3fxAA" outgoing="_emKgO82iEeiCta8rX3fxAA _emKgPM2iEeiCta8rX3fxAA _emKgPc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKgSs2iEeiCta8rX3fxAA" name="Initialization" incoming="_emKgQ82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_emKgS82iEeiCta8rX3fxAA" target="_emKgUM2iEeiCta8rX3fxAA" source="_emKgTM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_emKgTM2iEeiCta8rX3fxAA" name="Call(Employee$initialization$1)" outgoing="_emKgS82iEeiCta8rX3fxAA" operation="_emJ8Bc2iEeiCta8rX3fxAA">
                <target xmi:id="_emKgTc2iEeiCta8rX3fxAA" name="Call(Employee$initialization$1).target" incoming="_emKgO82iEeiCta8rX3fxAA" type="_emJ7e82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgTs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgT82iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKgUM2iEeiCta8rX3fxAA" name="Set(initializationFlag)" incoming="_emKgS82iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgUc2iEeiCta8rX3fxAA" target="_emKgZ82iEeiCta8rX3fxAA" source="_emKgU82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKgUs2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emKgU82iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emKgUc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgVM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgVc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emKgVs2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emKgV82iEeiCta8rX3fxAA" name="Iterate(Write(Staff$initializationFlag$1))" inputElement="_emKgZ82iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgWM2iEeiCta8rX3fxAA" target="_emKgZM2iEeiCta8rX3fxAA" source="_emKgZ82iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgWc2iEeiCta8rX3fxAA" target="_emKgXs2iEeiCta8rX3fxAA" source="_emKgWs2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emKgWs2iEeiCta8rX3fxAA" name="Iterate(Write(Staff$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emKgPM2iEeiCta8rX3fxAA" outgoing="_emKgWc2iEeiCta8rX3fxAA" type="_emJ8os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgW82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgXM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emKgXc2iEeiCta8rX3fxAA" name="Write(Staff$initializationFlag$1)" structuralFeature="_emJ8pM2iEeiCta8rX3fxAA">
                    <object xmi:id="_emKgXs2iEeiCta8rX3fxAA" name="Write(Staff$initializationFlag$1).object" incoming="_emKgWc2iEeiCta8rX3fxAA" type="_emJ8os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgX82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgYM2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emKgYc2iEeiCta8rX3fxAA" name="Write(Staff$initializationFlag$1).result" type="_emJ8os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgYs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgY82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emKgZM2iEeiCta8rX3fxAA" name="Write(Staff$initializationFlag$1).value" incoming="_emKgWM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgZc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgZs2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emKgZ82iEeiCta8rX3fxAA" name="Iterate(Write(Staff$initializationFlag$1)).inputElement" incoming="_emKgUc2iEeiCta8rX3fxAA" outgoing="_emKgWM2iEeiCta8rX3fxAA" regionAsInput="_emKgV82iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emKgaM2iEeiCta8rX3fxAA" name="Read(Staff$initializationFlag$1)" structuralFeature="_emJ8pM2iEeiCta8rX3fxAA">
              <object xmi:id="_emKgac2iEeiCta8rX3fxAA" name="Read(Staff$initializationFlag$1).object" incoming="_emKgPc2iEeiCta8rX3fxAA" type="_emJ8os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgas2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKga82iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emKgbM2iEeiCta8rX3fxAA" name="Read(Staff$initializationFlag$1).result" outgoing="_emKgPs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgbc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgbs2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emKgb82iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emKgcM2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emKgPs2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgcc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgcs2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emKgc82iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emKgP82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgdM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgdc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKgds2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emKgd82iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emKgQM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgeM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgec2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emKges2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emKge82iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emKgfM2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emKgP82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgfc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgfs2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emKgf82iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emKgQs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKggM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKggc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emKggs2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emKgQM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgg82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKghM2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emKghc2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emKgQc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emKghs2iEeiCta8rX3fxAA" name="Decision(Test(Staff$initializationFlag$1))" incoming="_emKgQc2iEeiCta8rX3fxAA _emKgQs2iEeiCta8rX3fxAA" outgoing="_emKgQ82iEeiCta8rX3fxAA" decisionInputFlow="_emKgQs2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emKgh82iEeiCta8rX3fxAA" name="Staff$initialization$1" visibility="protected" method="_emKgOM2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emKgiM2iEeiCta8rX3fxAA" name="Staff" visibility="public" method="_emJ8p82iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emKgic2iEeiCta8rX3fxAA" name="" visibility="package" type="_emJ8os2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgis2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgi82iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_emKgjM2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emKgNs2iEeiCta8rX3fxAA" redefinedOperation="_emJ8Bs2iEeiCta8rX3fxAA"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emKgjc2iEeiCta8rX3fxAA" name="PartTime" visibility="package">
        <generalization xmi:id="_emKgjs2iEeiCta8rX3fxAA" general="_emJ7e82iEeiCta8rX3fxAA"/>
        <ownedAttribute xmi:id="_emKgj82iEeiCta8rX3fxAA" name="PartTime$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgkM2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgkc2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKgks2iEeiCta8rX3fxAA" name="PartTime$method$1" visibility="private" specification="_emKhH82iEeiCta8rX3fxAA" node="_emKgl82iEeiCta8rX3fxAA _emKgmM2iEeiCta8rX3fxAA" group="_emKgmM2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emKgk82iEeiCta8rX3fxAA" name="" type="_emKgjc2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKglM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKglc2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgls2iEeiCta8rX3fxAA" target="_emKgl82iEeiCta8rX3fxAA" source="_emKgqc2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emKgmM2iEeiCta8rX3fxAA" name="Body(PartTime$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgmc2iEeiCta8rX3fxAA" target="_emKgqc2iEeiCta8rX3fxAA" source="_emKgps2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgms2iEeiCta8rX3fxAA" target="_emKgq82iEeiCta8rX3fxAA" source="_emKgqc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKgm82iEeiCta8rX3fxAA" target="_emKgpM2iEeiCta8rX3fxAA" source="_emKgqs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgnM2iEeiCta8rX3fxAA" target="_emKgr82iEeiCta8rX3fxAA" source="_emKgqc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgnc2iEeiCta8rX3fxAA" target="_emKgts2iEeiCta8rX3fxAA" source="_emKgss2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgns2iEeiCta8rX3fxAA" target="_emKgws2iEeiCta8rX3fxAA" source="_emKguc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgn82iEeiCta8rX3fxAA" target="_emKgyM2iEeiCta8rX3fxAA" source="_emKgvc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKgoM2iEeiCta8rX3fxAA" target="_emKgzM2iEeiCta8rX3fxAA" source="_emKgy82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKgoc2iEeiCta8rX3fxAA" target="_emKgzM2iEeiCta8rX3fxAA" source="_emKgxc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKgos2iEeiCta8rX3fxAA" target="_emKgqs2iEeiCta8rX3fxAA" source="_emKgzM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emKgo82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKgpM2iEeiCta8rX3fxAA" name="Body" incoming="_emKgm82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emKgpc2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emKgps2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emKgmc2iEeiCta8rX3fxAA" type="_emKgjc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgp82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgqM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emKgqc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emKgmc2iEeiCta8rX3fxAA" outgoing="_emKgls2iEeiCta8rX3fxAA _emKgms2iEeiCta8rX3fxAA _emKgnM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emKgqs2iEeiCta8rX3fxAA" name="Call(PartTime$initialization$1)" incoming="_emKgos2iEeiCta8rX3fxAA" outgoing="_emKgm82iEeiCta8rX3fxAA" operation="_emKhHs2iEeiCta8rX3fxAA">
              <target xmi:id="_emKgq82iEeiCta8rX3fxAA" name="Call(PartTime$initialization$1).target" incoming="_emKgms2iEeiCta8rX3fxAA" type="_emKgjc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgrM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgrc2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emKgrs2iEeiCta8rX3fxAA" name="Read(PartTime$initializationFlag$1)" structuralFeature="_emKgj82iEeiCta8rX3fxAA">
              <object xmi:id="_emKgr82iEeiCta8rX3fxAA" name="Read(PartTime$initializationFlag$1).object" incoming="_emKgnM2iEeiCta8rX3fxAA" type="_emKgjc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgsM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgsc2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emKgss2iEeiCta8rX3fxAA" name="Read(PartTime$initializationFlag$1).result" outgoing="_emKgnc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgs82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgtM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emKgtc2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emKgts2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emKgnc2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgt82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKguM2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emKguc2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emKgns2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgus2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgu82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKgvM2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emKgvc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emKgn82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgvs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgv82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emKgwM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emKgwc2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emKgws2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emKgns2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgw82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgxM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emKgxc2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emKgoc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgxs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgx82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emKgyM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emKgn82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKgyc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKgys2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emKgy82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emKgoM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emKgzM2iEeiCta8rX3fxAA" name="Decision(Test(PartTime$initializationFlag$1))" incoming="_emKgoM2iEeiCta8rX3fxAA _emKgoc2iEeiCta8rX3fxAA" outgoing="_emKgos2iEeiCta8rX3fxAA" decisionInputFlow="_emKgoc2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emKgl82iEeiCta8rX3fxAA" name="Return" incoming="_emKgls2iEeiCta8rX3fxAA" type="_emKgjc2iEeiCta8rX3fxAA" parameter="_emKgk82iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKgzc2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emKhI82iEeiCta8rX3fxAA" node="_emKgzs2iEeiCta8rX3fxAA" group="_emKgzs2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emKgzs2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKgz82iEeiCta8rX3fxAA" name="PartTime$initialization$1" visibility="private" specification="_emKhHs2iEeiCta8rX3fxAA" node="_emKg0M2iEeiCta8rX3fxAA" group="_emKg0M2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emKg0M2iEeiCta8rX3fxAA" name="Body(PartTime$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKg0c2iEeiCta8rX3fxAA" target="_emKg4M2iEeiCta8rX3fxAA" source="_emKg3c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKg0s2iEeiCta8rX3fxAA" target="_emKg5M2iEeiCta8rX3fxAA" source="_emKg4M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKg082iEeiCta8rX3fxAA" target="_emKg8c2iEeiCta8rX3fxAA" source="_emKg4M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKg1M2iEeiCta8rX3fxAA" target="_emKhAM2iEeiCta8rX3fxAA" source="_emKg4M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKg1c2iEeiCta8rX3fxAA" target="_emKhB82iEeiCta8rX3fxAA" source="_emKhA82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKg1s2iEeiCta8rX3fxAA" target="_emKhE82iEeiCta8rX3fxAA" source="_emKhCs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKg182iEeiCta8rX3fxAA" target="_emKhGc2iEeiCta8rX3fxAA" source="_emKhDs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKg2M2iEeiCta8rX3fxAA" target="_emKhHc2iEeiCta8rX3fxAA" source="_emKhHM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKg2c2iEeiCta8rX3fxAA" target="_emKhHc2iEeiCta8rX3fxAA" source="_emKhFs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKg2s2iEeiCta8rX3fxAA" target="_emKg4c2iEeiCta8rX3fxAA" source="_emKhHc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emKg282iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emKg3M2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emKg3c2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emKg0c2iEeiCta8rX3fxAA" type="_emKgjc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKg3s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKg382iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emKg4M2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emKg0c2iEeiCta8rX3fxAA" outgoing="_emKg0s2iEeiCta8rX3fxAA _emKg082iEeiCta8rX3fxAA _emKg1M2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKg4c2iEeiCta8rX3fxAA" name="Initialization" incoming="_emKg2s2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_emKg4s2iEeiCta8rX3fxAA" target="_emKg582iEeiCta8rX3fxAA" source="_emKg482iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_emKg482iEeiCta8rX3fxAA" name="Call(Employee$initialization$1)" outgoing="_emKg4s2iEeiCta8rX3fxAA" operation="_emJ8Bc2iEeiCta8rX3fxAA">
                <target xmi:id="_emKg5M2iEeiCta8rX3fxAA" name="Call(Employee$initialization$1).target" incoming="_emKg0s2iEeiCta8rX3fxAA" type="_emJ7e82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKg5c2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKg5s2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKg582iEeiCta8rX3fxAA" name="Set(initializationFlag)" incoming="_emKg4s2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emKg6M2iEeiCta8rX3fxAA" target="_emKg_s2iEeiCta8rX3fxAA" source="_emKg6s2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKg6c2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emKg6s2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emKg6M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKg682iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKg7M2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emKg7c2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emKg7s2iEeiCta8rX3fxAA" name="Iterate(Write(PartTime$initializationFlag$1))" inputElement="_emKg_s2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emKg782iEeiCta8rX3fxAA" target="_emKg-82iEeiCta8rX3fxAA" source="_emKg_s2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emKg8M2iEeiCta8rX3fxAA" target="_emKg9c2iEeiCta8rX3fxAA" source="_emKg8c2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emKg8c2iEeiCta8rX3fxAA" name="Iterate(Write(PartTime$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emKg082iEeiCta8rX3fxAA" outgoing="_emKg8M2iEeiCta8rX3fxAA" type="_emKgjc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKg8s2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKg882iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emKg9M2iEeiCta8rX3fxAA" name="Write(PartTime$initializationFlag$1)" structuralFeature="_emKgj82iEeiCta8rX3fxAA">
                    <object xmi:id="_emKg9c2iEeiCta8rX3fxAA" name="Write(PartTime$initializationFlag$1).object" incoming="_emKg8M2iEeiCta8rX3fxAA" type="_emKgjc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKg9s2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKg982iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emKg-M2iEeiCta8rX3fxAA" name="Write(PartTime$initializationFlag$1).result" type="_emKgjc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKg-c2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKg-s2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emKg-82iEeiCta8rX3fxAA" name="Write(PartTime$initializationFlag$1).value" incoming="_emKg782iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKg_M2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKg_c2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emKg_s2iEeiCta8rX3fxAA" name="Iterate(Write(PartTime$initializationFlag$1)).inputElement" incoming="_emKg6M2iEeiCta8rX3fxAA" outgoing="_emKg782iEeiCta8rX3fxAA" regionAsInput="_emKg7s2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emKg_82iEeiCta8rX3fxAA" name="Read(PartTime$initializationFlag$1)" structuralFeature="_emKgj82iEeiCta8rX3fxAA">
              <object xmi:id="_emKhAM2iEeiCta8rX3fxAA" name="Read(PartTime$initializationFlag$1).object" incoming="_emKg1M2iEeiCta8rX3fxAA" type="_emKgjc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhAc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhAs2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emKhA82iEeiCta8rX3fxAA" name="Read(PartTime$initializationFlag$1).result" outgoing="_emKg1c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhBM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhBc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emKhBs2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emKhB82iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emKg1c2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhCM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhCc2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emKhCs2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emKg1s2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhC82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhDM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKhDc2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emKhDs2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emKg182iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhD82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhEM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emKhEc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emKhEs2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emKhE82iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emKg1s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhFM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhFc2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emKhFs2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emKg2c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhF82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhGM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emKhGc2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emKg182iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhGs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhG82iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emKhHM2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emKg2M2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emKhHc2iEeiCta8rX3fxAA" name="Decision(Test(PartTime$initializationFlag$1))" incoming="_emKg2M2iEeiCta8rX3fxAA _emKg2c2iEeiCta8rX3fxAA" outgoing="_emKg2s2iEeiCta8rX3fxAA" decisionInputFlow="_emKg2c2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emKhHs2iEeiCta8rX3fxAA" name="PartTime$initialization$1" visibility="protected" method="_emKgz82iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emKhH82iEeiCta8rX3fxAA" name="PartTime" visibility="public" method="_emKgks2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emKhIM2iEeiCta8rX3fxAA" name="" visibility="package" type="_emKgjc2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhIc2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhIs2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_emKhI82iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emKgzc2iEeiCta8rX3fxAA" redefinedOperation="_emJ8Bs2iEeiCta8rX3fxAA"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emKhJM2iEeiCta8rX3fxAA" name="Issue" visibility="package">
        <ownedAttribute xmi:id="_emKhJc2iEeiCta8rX3fxAA" name="Issue$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhJs2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhJ82iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKhKM2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emKhr82iEeiCta8rX3fxAA" node="_emKhKc2iEeiCta8rX3fxAA" group="_emKhKc2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emKhKc2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKhKs2iEeiCta8rX3fxAA" name="Issue$method$1" visibility="private" specification="_emKhsM2iEeiCta8rX3fxAA" node="_emKhL82iEeiCta8rX3fxAA _emKhMM2iEeiCta8rX3fxAA" group="_emKhMM2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emKhK82iEeiCta8rX3fxAA" name="" type="_emKhJM2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhLM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhLc2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhLs2iEeiCta8rX3fxAA" target="_emKhL82iEeiCta8rX3fxAA" source="_emKhQc2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emKhMM2iEeiCta8rX3fxAA" name="Body(Issue$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhMc2iEeiCta8rX3fxAA" target="_emKhQc2iEeiCta8rX3fxAA" source="_emKhPs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhMs2iEeiCta8rX3fxAA" target="_emKhQ82iEeiCta8rX3fxAA" source="_emKhQc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKhM82iEeiCta8rX3fxAA" target="_emKhPM2iEeiCta8rX3fxAA" source="_emKhQs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhNM2iEeiCta8rX3fxAA" target="_emKhR82iEeiCta8rX3fxAA" source="_emKhQc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhNc2iEeiCta8rX3fxAA" target="_emKhTs2iEeiCta8rX3fxAA" source="_emKhSs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhNs2iEeiCta8rX3fxAA" target="_emKhWs2iEeiCta8rX3fxAA" source="_emKhUc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhN82iEeiCta8rX3fxAA" target="_emKhYM2iEeiCta8rX3fxAA" source="_emKhVc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKhOM2iEeiCta8rX3fxAA" target="_emKhZM2iEeiCta8rX3fxAA" source="_emKhY82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhOc2iEeiCta8rX3fxAA" target="_emKhZM2iEeiCta8rX3fxAA" source="_emKhXc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKhOs2iEeiCta8rX3fxAA" target="_emKhQs2iEeiCta8rX3fxAA" source="_emKhZM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emKhO82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKhPM2iEeiCta8rX3fxAA" name="Body" incoming="_emKhM82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emKhPc2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emKhPs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emKhMc2iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhP82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhQM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emKhQc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emKhMc2iEeiCta8rX3fxAA" outgoing="_emKhLs2iEeiCta8rX3fxAA _emKhMs2iEeiCta8rX3fxAA _emKhNM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emKhQs2iEeiCta8rX3fxAA" name="Call(Issue$initialization$1)" incoming="_emKhOs2iEeiCta8rX3fxAA" outgoing="_emKhM82iEeiCta8rX3fxAA" operation="_emKhrs2iEeiCta8rX3fxAA">
              <target xmi:id="_emKhQ82iEeiCta8rX3fxAA" name="Call(Issue$initialization$1).target" incoming="_emKhMs2iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhRM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhRc2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emKhRs2iEeiCta8rX3fxAA" name="Read(Issue$initializationFlag$1)" structuralFeature="_emKhJc2iEeiCta8rX3fxAA">
              <object xmi:id="_emKhR82iEeiCta8rX3fxAA" name="Read(Issue$initializationFlag$1).object" incoming="_emKhNM2iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhSM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhSc2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emKhSs2iEeiCta8rX3fxAA" name="Read(Issue$initializationFlag$1).result" outgoing="_emKhNc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhS82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhTM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emKhTc2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emKhTs2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emKhNc2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhT82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhUM2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emKhUc2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emKhNs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhUs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhU82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKhVM2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emKhVc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emKhN82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhVs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhV82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emKhWM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emKhWc2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emKhWs2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emKhNs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhW82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhXM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emKhXc2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emKhOc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhXs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhX82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emKhYM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emKhN82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhYc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhYs2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emKhY82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emKhOM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emKhZM2iEeiCta8rX3fxAA" name="Decision(Test(Issue$initializationFlag$1))" incoming="_emKhOM2iEeiCta8rX3fxAA _emKhOc2iEeiCta8rX3fxAA" outgoing="_emKhOs2iEeiCta8rX3fxAA" decisionInputFlow="_emKhOc2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emKhL82iEeiCta8rX3fxAA" name="Return" incoming="_emKhLs2iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA" parameter="_emKhK82iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKhZc2iEeiCta8rX3fxAA" name="Issue$initialization$1" visibility="private" specification="_emKhrs2iEeiCta8rX3fxAA" node="_emKhZs2iEeiCta8rX3fxAA" group="_emKhZs2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emKhZs2iEeiCta8rX3fxAA" name="Body(Issue$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhZ82iEeiCta8rX3fxAA" target="_emKhdc2iEeiCta8rX3fxAA" source="_emKhcs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhaM2iEeiCta8rX3fxAA" target="_emKhgc2iEeiCta8rX3fxAA" source="_emKhdc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhac2iEeiCta8rX3fxAA" target="_emKhkM2iEeiCta8rX3fxAA" source="_emKhdc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhas2iEeiCta8rX3fxAA" target="_emKhl82iEeiCta8rX3fxAA" source="_emKhk82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKha82iEeiCta8rX3fxAA" target="_emKho82iEeiCta8rX3fxAA" source="_emKhms2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhbM2iEeiCta8rX3fxAA" target="_emKhqc2iEeiCta8rX3fxAA" source="_emKhns2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKhbc2iEeiCta8rX3fxAA" target="_emKhrc2iEeiCta8rX3fxAA" source="_emKhrM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhbs2iEeiCta8rX3fxAA" target="_emKhrc2iEeiCta8rX3fxAA" source="_emKhps2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKhb82iEeiCta8rX3fxAA" target="_emKhds2iEeiCta8rX3fxAA" source="_emKhrc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emKhcM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emKhcc2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emKhcs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emKhZ82iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhc82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhdM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emKhdc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emKhZ82iEeiCta8rX3fxAA" outgoing="_emKhaM2iEeiCta8rX3fxAA _emKhac2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKhds2iEeiCta8rX3fxAA" name="Initialization" incoming="_emKhb82iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKhd82iEeiCta8rX3fxAA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emKheM2iEeiCta8rX3fxAA" target="_emKhjs2iEeiCta8rX3fxAA" source="_emKhes2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKhec2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emKhes2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emKheM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhe82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhfM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emKhfc2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emKhfs2iEeiCta8rX3fxAA" name="Iterate(Write(Issue$initializationFlag$1))" inputElement="_emKhjs2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhf82iEeiCta8rX3fxAA" target="_emKhi82iEeiCta8rX3fxAA" source="_emKhjs2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhgM2iEeiCta8rX3fxAA" target="_emKhhc2iEeiCta8rX3fxAA" source="_emKhgc2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emKhgc2iEeiCta8rX3fxAA" name="Iterate(Write(Issue$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emKhaM2iEeiCta8rX3fxAA" outgoing="_emKhgM2iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhgs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhg82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emKhhM2iEeiCta8rX3fxAA" name="Write(Issue$initializationFlag$1)" structuralFeature="_emKhJc2iEeiCta8rX3fxAA">
                    <object xmi:id="_emKhhc2iEeiCta8rX3fxAA" name="Write(Issue$initializationFlag$1).object" incoming="_emKhgM2iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhhs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhh82iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emKhiM2iEeiCta8rX3fxAA" name="Write(Issue$initializationFlag$1).result" type="_emKhJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhic2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhis2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emKhi82iEeiCta8rX3fxAA" name="Write(Issue$initializationFlag$1).value" incoming="_emKhf82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhjM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhjc2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emKhjs2iEeiCta8rX3fxAA" name="Iterate(Write(Issue$initializationFlag$1)).inputElement" incoming="_emKheM2iEeiCta8rX3fxAA" outgoing="_emKhf82iEeiCta8rX3fxAA" regionAsInput="_emKhfs2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emKhj82iEeiCta8rX3fxAA" name="Read(Issue$initializationFlag$1)" structuralFeature="_emKhJc2iEeiCta8rX3fxAA">
              <object xmi:id="_emKhkM2iEeiCta8rX3fxAA" name="Read(Issue$initializationFlag$1).object" incoming="_emKhac2iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhkc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhks2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emKhk82iEeiCta8rX3fxAA" name="Read(Issue$initializationFlag$1).result" outgoing="_emKhas2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhlM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhlc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emKhls2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emKhl82iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emKhas2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhmM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhmc2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emKhms2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emKha82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhm82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhnM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKhnc2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emKhns2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emKhbM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhn82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhoM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emKhoc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emKhos2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emKho82iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emKha82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhpM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhpc2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emKhps2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emKhbs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhp82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhqM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emKhqc2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emKhbM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhqs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhq82iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emKhrM2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emKhbc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emKhrc2iEeiCta8rX3fxAA" name="Decision(Test(Issue$initializationFlag$1))" incoming="_emKhbc2iEeiCta8rX3fxAA _emKhbs2iEeiCta8rX3fxAA" outgoing="_emKhb82iEeiCta8rX3fxAA" decisionInputFlow="_emKhbs2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emKhrs2iEeiCta8rX3fxAA" name="Issue$initialization$1" visibility="protected" method="_emKhZc2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emKhr82iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emKhKM2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emKhsM2iEeiCta8rX3fxAA" name="Issue" visibility="public" method="_emKhKs2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emKhsc2iEeiCta8rX3fxAA" name="" visibility="package" type="_emKhJM2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhss2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhs82iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emKhtM2iEeiCta8rX3fxAA" name="Pending" visibility="package">
        <generalization xmi:id="_emKhtc2iEeiCta8rX3fxAA" general="_emKhJM2iEeiCta8rX3fxAA"/>
        <ownedAttribute xmi:id="_emKhts2iEeiCta8rX3fxAA" name="Pending$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKht82iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhuM2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKhuc2iEeiCta8rX3fxAA" name="Pending$method$1" visibility="private" specification="_emKiRs2iEeiCta8rX3fxAA" node="_emKhvs2iEeiCta8rX3fxAA _emKhv82iEeiCta8rX3fxAA" group="_emKhv82iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emKhus2iEeiCta8rX3fxAA" name="" type="_emKhtM2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhu82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhvM2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhvc2iEeiCta8rX3fxAA" target="_emKhvs2iEeiCta8rX3fxAA" source="_emKh0M2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emKhv82iEeiCta8rX3fxAA" name="Body(Pending$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhwM2iEeiCta8rX3fxAA" target="_emKh0M2iEeiCta8rX3fxAA" source="_emKhzc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhwc2iEeiCta8rX3fxAA" target="_emKh0s2iEeiCta8rX3fxAA" source="_emKh0M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKhws2iEeiCta8rX3fxAA" target="_emKhy82iEeiCta8rX3fxAA" source="_emKh0c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhw82iEeiCta8rX3fxAA" target="_emKh1s2iEeiCta8rX3fxAA" source="_emKh0M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhxM2iEeiCta8rX3fxAA" target="_emKh3c2iEeiCta8rX3fxAA" source="_emKh2c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhxc2iEeiCta8rX3fxAA" target="_emKh6c2iEeiCta8rX3fxAA" source="_emKh4M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhxs2iEeiCta8rX3fxAA" target="_emKh782iEeiCta8rX3fxAA" source="_emKh5M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKhx82iEeiCta8rX3fxAA" target="_emKh882iEeiCta8rX3fxAA" source="_emKh8s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKhyM2iEeiCta8rX3fxAA" target="_emKh882iEeiCta8rX3fxAA" source="_emKh7M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKhyc2iEeiCta8rX3fxAA" target="_emKh0c2iEeiCta8rX3fxAA" source="_emKh882iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emKhys2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKhy82iEeiCta8rX3fxAA" name="Body" incoming="_emKhws2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emKhzM2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emKhzc2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emKhwM2iEeiCta8rX3fxAA" type="_emKhtM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKhzs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKhz82iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emKh0M2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emKhwM2iEeiCta8rX3fxAA" outgoing="_emKhvc2iEeiCta8rX3fxAA _emKhwc2iEeiCta8rX3fxAA _emKhw82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emKh0c2iEeiCta8rX3fxAA" name="Call(Pending$initialization$1)" incoming="_emKhyc2iEeiCta8rX3fxAA" outgoing="_emKhws2iEeiCta8rX3fxAA" operation="_emKiRc2iEeiCta8rX3fxAA">
              <target xmi:id="_emKh0s2iEeiCta8rX3fxAA" name="Call(Pending$initialization$1).target" incoming="_emKhwc2iEeiCta8rX3fxAA" type="_emKhtM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKh082iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKh1M2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emKh1c2iEeiCta8rX3fxAA" name="Read(Pending$initializationFlag$1)" structuralFeature="_emKhts2iEeiCta8rX3fxAA">
              <object xmi:id="_emKh1s2iEeiCta8rX3fxAA" name="Read(Pending$initializationFlag$1).object" incoming="_emKhw82iEeiCta8rX3fxAA" type="_emKhtM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKh182iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKh2M2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emKh2c2iEeiCta8rX3fxAA" name="Read(Pending$initializationFlag$1).result" outgoing="_emKhxM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKh2s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKh282iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emKh3M2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emKh3c2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emKhxM2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKh3s2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKh382iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emKh4M2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emKhxc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKh4c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKh4s2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKh482iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emKh5M2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emKhxs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKh5c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKh5s2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emKh582iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emKh6M2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emKh6c2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emKhxc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKh6s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKh682iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emKh7M2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emKhyM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKh7c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKh7s2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emKh782iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emKhxs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKh8M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKh8c2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emKh8s2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emKhx82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emKh882iEeiCta8rX3fxAA" name="Decision(Test(Pending$initializationFlag$1))" incoming="_emKhx82iEeiCta8rX3fxAA _emKhyM2iEeiCta8rX3fxAA" outgoing="_emKhyc2iEeiCta8rX3fxAA" decisionInputFlow="_emKhyM2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emKhvs2iEeiCta8rX3fxAA" name="Return" incoming="_emKhvc2iEeiCta8rX3fxAA" type="_emKhtM2iEeiCta8rX3fxAA" parameter="_emKhus2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKh9M2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emKiSs2iEeiCta8rX3fxAA" node="_emKh9c2iEeiCta8rX3fxAA" group="_emKh9c2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emKh9c2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKh9s2iEeiCta8rX3fxAA" name="Pending$initialization$1" visibility="private" specification="_emKiRc2iEeiCta8rX3fxAA" node="_emKh982iEeiCta8rX3fxAA" group="_emKh982iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emKh982iEeiCta8rX3fxAA" name="Body(Pending$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKh-M2iEeiCta8rX3fxAA" target="_emKiB82iEeiCta8rX3fxAA" source="_emKiBM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKh-c2iEeiCta8rX3fxAA" target="_emKiC82iEeiCta8rX3fxAA" source="_emKiB82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKh-s2iEeiCta8rX3fxAA" target="_emKiGM2iEeiCta8rX3fxAA" source="_emKiB82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKh-82iEeiCta8rX3fxAA" target="_emKiJ82iEeiCta8rX3fxAA" source="_emKiB82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKh_M2iEeiCta8rX3fxAA" target="_emKiLs2iEeiCta8rX3fxAA" source="_emKiKs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKh_c2iEeiCta8rX3fxAA" target="_emKiOs2iEeiCta8rX3fxAA" source="_emKiMc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKh_s2iEeiCta8rX3fxAA" target="_emKiQM2iEeiCta8rX3fxAA" source="_emKiNc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKh_82iEeiCta8rX3fxAA" target="_emKiRM2iEeiCta8rX3fxAA" source="_emKiQ82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKiAM2iEeiCta8rX3fxAA" target="_emKiRM2iEeiCta8rX3fxAA" source="_emKiPc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKiAc2iEeiCta8rX3fxAA" target="_emKiCM2iEeiCta8rX3fxAA" source="_emKiRM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emKiAs2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emKiA82iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emKiBM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emKh-M2iEeiCta8rX3fxAA" type="_emKhtM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiBc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiBs2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emKiB82iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emKh-M2iEeiCta8rX3fxAA" outgoing="_emKh-c2iEeiCta8rX3fxAA _emKh-s2iEeiCta8rX3fxAA _emKh-82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKiCM2iEeiCta8rX3fxAA" name="Initialization" incoming="_emKiAc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_emKiCc2iEeiCta8rX3fxAA" target="_emKiDs2iEeiCta8rX3fxAA" source="_emKiCs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_emKiCs2iEeiCta8rX3fxAA" name="Call(Issue$initialization$1)" outgoing="_emKiCc2iEeiCta8rX3fxAA" operation="_emKhrs2iEeiCta8rX3fxAA">
                <target xmi:id="_emKiC82iEeiCta8rX3fxAA" name="Call(Issue$initialization$1).target" incoming="_emKh-c2iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiDM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiDc2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKiDs2iEeiCta8rX3fxAA" name="Set(initializationFlag)" incoming="_emKiCc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emKiD82iEeiCta8rX3fxAA" target="_emKiJc2iEeiCta8rX3fxAA" source="_emKiEc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKiEM2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emKiEc2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emKiD82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiEs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiE82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emKiFM2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emKiFc2iEeiCta8rX3fxAA" name="Iterate(Write(Pending$initializationFlag$1))" inputElement="_emKiJc2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emKiFs2iEeiCta8rX3fxAA" target="_emKiIs2iEeiCta8rX3fxAA" source="_emKiJc2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emKiF82iEeiCta8rX3fxAA" target="_emKiHM2iEeiCta8rX3fxAA" source="_emKiGM2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emKiGM2iEeiCta8rX3fxAA" name="Iterate(Write(Pending$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emKh-s2iEeiCta8rX3fxAA" outgoing="_emKiF82iEeiCta8rX3fxAA" type="_emKhtM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiGc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiGs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emKiG82iEeiCta8rX3fxAA" name="Write(Pending$initializationFlag$1)" structuralFeature="_emKhts2iEeiCta8rX3fxAA">
                    <object xmi:id="_emKiHM2iEeiCta8rX3fxAA" name="Write(Pending$initializationFlag$1).object" incoming="_emKiF82iEeiCta8rX3fxAA" type="_emKhtM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiHc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiHs2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emKiH82iEeiCta8rX3fxAA" name="Write(Pending$initializationFlag$1).result" type="_emKhtM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiIM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiIc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emKiIs2iEeiCta8rX3fxAA" name="Write(Pending$initializationFlag$1).value" incoming="_emKiFs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiI82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiJM2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emKiJc2iEeiCta8rX3fxAA" name="Iterate(Write(Pending$initializationFlag$1)).inputElement" incoming="_emKiD82iEeiCta8rX3fxAA" outgoing="_emKiFs2iEeiCta8rX3fxAA" regionAsInput="_emKiFc2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emKiJs2iEeiCta8rX3fxAA" name="Read(Pending$initializationFlag$1)" structuralFeature="_emKhts2iEeiCta8rX3fxAA">
              <object xmi:id="_emKiJ82iEeiCta8rX3fxAA" name="Read(Pending$initializationFlag$1).object" incoming="_emKh-82iEeiCta8rX3fxAA" type="_emKhtM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiKM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiKc2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emKiKs2iEeiCta8rX3fxAA" name="Read(Pending$initializationFlag$1).result" outgoing="_emKh_M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiK82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiLM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emKiLc2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emKiLs2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emKh_M2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiL82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiMM2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emKiMc2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emKh_c2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiMs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiM82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKiNM2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emKiNc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emKh_s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiNs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiN82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emKiOM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emKiOc2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emKiOs2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emKh_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiO82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiPM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emKiPc2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emKiAM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiPs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiP82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emKiQM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emKh_s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiQc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiQs2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emKiQ82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emKh_82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emKiRM2iEeiCta8rX3fxAA" name="Decision(Test(Pending$initializationFlag$1))" incoming="_emKh_82iEeiCta8rX3fxAA _emKiAM2iEeiCta8rX3fxAA" outgoing="_emKiAc2iEeiCta8rX3fxAA" decisionInputFlow="_emKiAM2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emKiRc2iEeiCta8rX3fxAA" name="Pending$initialization$1" visibility="protected" method="_emKh9s2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emKiRs2iEeiCta8rX3fxAA" name="Pending" visibility="public" method="_emKhuc2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emKiR82iEeiCta8rX3fxAA" name="" visibility="package" type="_emKhtM2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiSM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiSc2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_emKiSs2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emKh9M2iEeiCta8rX3fxAA" redefinedOperation="_emKhr82iEeiCta8rX3fxAA"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emKiS82iEeiCta8rX3fxAA" name="InProcess" visibility="package">
        <generalization xmi:id="_emKiTM2iEeiCta8rX3fxAA" general="_emKhJM2iEeiCta8rX3fxAA"/>
        <ownedAttribute xmi:id="_emKiTc2iEeiCta8rX3fxAA" name="InProcess$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiTs2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiT82iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKiUM2iEeiCta8rX3fxAA" name="InProcess$method$1" visibility="private" specification="_emKi3c2iEeiCta8rX3fxAA" node="_emKiVc2iEeiCta8rX3fxAA _emKiVs2iEeiCta8rX3fxAA" group="_emKiVs2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emKiUc2iEeiCta8rX3fxAA" name="" type="_emKiS82iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiUs2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiU82iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emKiVM2iEeiCta8rX3fxAA" target="_emKiVc2iEeiCta8rX3fxAA" source="_emKiZ82iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emKiVs2iEeiCta8rX3fxAA" name="Body(InProcess$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKiV82iEeiCta8rX3fxAA" target="_emKiZ82iEeiCta8rX3fxAA" source="_emKiZM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKiWM2iEeiCta8rX3fxAA" target="_emKiac2iEeiCta8rX3fxAA" source="_emKiZ82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKiWc2iEeiCta8rX3fxAA" target="_emKiYs2iEeiCta8rX3fxAA" source="_emKiaM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKiWs2iEeiCta8rX3fxAA" target="_emKibc2iEeiCta8rX3fxAA" source="_emKiZ82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKiW82iEeiCta8rX3fxAA" target="_emKidM2iEeiCta8rX3fxAA" source="_emKicM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKiXM2iEeiCta8rX3fxAA" target="_emKigM2iEeiCta8rX3fxAA" source="_emKid82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKiXc2iEeiCta8rX3fxAA" target="_emKihs2iEeiCta8rX3fxAA" source="_emKie82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKiXs2iEeiCta8rX3fxAA" target="_emKiis2iEeiCta8rX3fxAA" source="_emKiic2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKiX82iEeiCta8rX3fxAA" target="_emKiis2iEeiCta8rX3fxAA" source="_emKig82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKiYM2iEeiCta8rX3fxAA" target="_emKiaM2iEeiCta8rX3fxAA" source="_emKiis2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emKiYc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKiYs2iEeiCta8rX3fxAA" name="Body" incoming="_emKiWc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emKiY82iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emKiZM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emKiV82iEeiCta8rX3fxAA" type="_emKiS82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiZc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiZs2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emKiZ82iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emKiV82iEeiCta8rX3fxAA" outgoing="_emKiVM2iEeiCta8rX3fxAA _emKiWM2iEeiCta8rX3fxAA _emKiWs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emKiaM2iEeiCta8rX3fxAA" name="Call(InProcess$initialization$1)" incoming="_emKiYM2iEeiCta8rX3fxAA" outgoing="_emKiWc2iEeiCta8rX3fxAA" operation="_emKi3M2iEeiCta8rX3fxAA">
              <target xmi:id="_emKiac2iEeiCta8rX3fxAA" name="Call(InProcess$initialization$1).target" incoming="_emKiWM2iEeiCta8rX3fxAA" type="_emKiS82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKias2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKia82iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emKibM2iEeiCta8rX3fxAA" name="Read(InProcess$initializationFlag$1)" structuralFeature="_emKiTc2iEeiCta8rX3fxAA">
              <object xmi:id="_emKibc2iEeiCta8rX3fxAA" name="Read(InProcess$initializationFlag$1).object" incoming="_emKiWs2iEeiCta8rX3fxAA" type="_emKiS82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKibs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKib82iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emKicM2iEeiCta8rX3fxAA" name="Read(InProcess$initializationFlag$1).result" outgoing="_emKiW82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKicc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKics2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emKic82iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emKidM2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emKiW82iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKidc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKids2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emKid82iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emKiXM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKieM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiec2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKies2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emKie82iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emKiXc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKifM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKifc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emKifs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emKif82iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emKigM2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emKiXM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKigc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKigs2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emKig82iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emKiX82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKihM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKihc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emKihs2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emKiXc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKih82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiiM2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emKiic2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emKiXs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emKiis2iEeiCta8rX3fxAA" name="Decision(Test(InProcess$initializationFlag$1))" incoming="_emKiXs2iEeiCta8rX3fxAA _emKiX82iEeiCta8rX3fxAA" outgoing="_emKiYM2iEeiCta8rX3fxAA" decisionInputFlow="_emKiX82iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emKiVc2iEeiCta8rX3fxAA" name="Return" incoming="_emKiVM2iEeiCta8rX3fxAA" type="_emKiS82iEeiCta8rX3fxAA" parameter="_emKiUc2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKii82iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emKi4c2iEeiCta8rX3fxAA" node="_emKijM2iEeiCta8rX3fxAA" group="_emKijM2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emKijM2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKijc2iEeiCta8rX3fxAA" name="InProcess$initialization$1" visibility="private" specification="_emKi3M2iEeiCta8rX3fxAA" node="_emKijs2iEeiCta8rX3fxAA" group="_emKijs2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emKijs2iEeiCta8rX3fxAA" name="Body(InProcess$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKij82iEeiCta8rX3fxAA" target="_emKins2iEeiCta8rX3fxAA" source="_emKim82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKikM2iEeiCta8rX3fxAA" target="_emKios2iEeiCta8rX3fxAA" source="_emKins2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKikc2iEeiCta8rX3fxAA" target="_emKir82iEeiCta8rX3fxAA" source="_emKins2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKiks2iEeiCta8rX3fxAA" target="_emKivs2iEeiCta8rX3fxAA" source="_emKins2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKik82iEeiCta8rX3fxAA" target="_emKixc2iEeiCta8rX3fxAA" source="_emKiwc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKilM2iEeiCta8rX3fxAA" target="_emKi0c2iEeiCta8rX3fxAA" source="_emKiyM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKilc2iEeiCta8rX3fxAA" target="_emKi182iEeiCta8rX3fxAA" source="_emKizM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKils2iEeiCta8rX3fxAA" target="_emKi282iEeiCta8rX3fxAA" source="_emKi2s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKil82iEeiCta8rX3fxAA" target="_emKi282iEeiCta8rX3fxAA" source="_emKi1M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKimM2iEeiCta8rX3fxAA" target="_emKin82iEeiCta8rX3fxAA" source="_emKi282iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emKimc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emKims2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emKim82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emKij82iEeiCta8rX3fxAA" type="_emKiS82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKinM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKinc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emKins2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emKij82iEeiCta8rX3fxAA" outgoing="_emKikM2iEeiCta8rX3fxAA _emKikc2iEeiCta8rX3fxAA _emKiks2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKin82iEeiCta8rX3fxAA" name="Initialization" incoming="_emKimM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_emKioM2iEeiCta8rX3fxAA" target="_emKipc2iEeiCta8rX3fxAA" source="_emKioc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_emKioc2iEeiCta8rX3fxAA" name="Call(Issue$initialization$1)" outgoing="_emKioM2iEeiCta8rX3fxAA" operation="_emKhrs2iEeiCta8rX3fxAA">
                <target xmi:id="_emKios2iEeiCta8rX3fxAA" name="Call(Issue$initialization$1).target" incoming="_emKikM2iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKio82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKipM2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKipc2iEeiCta8rX3fxAA" name="Set(initializationFlag)" incoming="_emKioM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emKips2iEeiCta8rX3fxAA" target="_emKivM2iEeiCta8rX3fxAA" source="_emKiqM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKip82iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emKiqM2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emKips2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiqc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiqs2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emKiq82iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emKirM2iEeiCta8rX3fxAA" name="Iterate(Write(InProcess$initializationFlag$1))" inputElement="_emKivM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emKirc2iEeiCta8rX3fxAA" target="_emKiuc2iEeiCta8rX3fxAA" source="_emKivM2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emKirs2iEeiCta8rX3fxAA" target="_emKis82iEeiCta8rX3fxAA" source="_emKir82iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emKir82iEeiCta8rX3fxAA" name="Iterate(Write(InProcess$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emKikc2iEeiCta8rX3fxAA" outgoing="_emKirs2iEeiCta8rX3fxAA" type="_emKiS82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKisM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKisc2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emKiss2iEeiCta8rX3fxAA" name="Write(InProcess$initializationFlag$1)" structuralFeature="_emKiTc2iEeiCta8rX3fxAA">
                    <object xmi:id="_emKis82iEeiCta8rX3fxAA" name="Write(InProcess$initializationFlag$1).object" incoming="_emKirs2iEeiCta8rX3fxAA" type="_emKiS82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKitM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKitc2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emKits2iEeiCta8rX3fxAA" name="Write(InProcess$initializationFlag$1).result" type="_emKiS82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKit82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiuM2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emKiuc2iEeiCta8rX3fxAA" name="Write(InProcess$initializationFlag$1).value" incoming="_emKirc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKius2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiu82iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emKivM2iEeiCta8rX3fxAA" name="Iterate(Write(InProcess$initializationFlag$1)).inputElement" incoming="_emKips2iEeiCta8rX3fxAA" outgoing="_emKirc2iEeiCta8rX3fxAA" regionAsInput="_emKirM2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emKivc2iEeiCta8rX3fxAA" name="Read(InProcess$initializationFlag$1)" structuralFeature="_emKiTc2iEeiCta8rX3fxAA">
              <object xmi:id="_emKivs2iEeiCta8rX3fxAA" name="Read(InProcess$initializationFlag$1).object" incoming="_emKiks2iEeiCta8rX3fxAA" type="_emKiS82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiv82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiwM2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emKiwc2iEeiCta8rX3fxAA" name="Read(InProcess$initializationFlag$1).result" outgoing="_emKik82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiws2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiw82iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emKixM2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emKixc2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emKik82iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKixs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKix82iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emKiyM2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emKilM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKiyc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKiys2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKiy82iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emKizM2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emKilc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKizc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKizs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emKiz82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emKi0M2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emKi0c2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emKilM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKi0s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKi082iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emKi1M2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emKil82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKi1c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKi1s2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emKi182iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emKilc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKi2M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKi2c2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emKi2s2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emKils2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emKi282iEeiCta8rX3fxAA" name="Decision(Test(InProcess$initializationFlag$1))" incoming="_emKils2iEeiCta8rX3fxAA _emKil82iEeiCta8rX3fxAA" outgoing="_emKimM2iEeiCta8rX3fxAA" decisionInputFlow="_emKil82iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emKi3M2iEeiCta8rX3fxAA" name="InProcess$initialization$1" visibility="protected" method="_emKijc2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emKi3c2iEeiCta8rX3fxAA" name="InProcess" visibility="public" method="_emKiUM2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emKi3s2iEeiCta8rX3fxAA" name="" visibility="package" type="_emKiS82iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKi382iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKi4M2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_emKi4c2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emKii82iEeiCta8rX3fxAA" redefinedOperation="_emKhr82iEeiCta8rX3fxAA"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emKi4s2iEeiCta8rX3fxAA" name="Overdue" visibility="package">
        <generalization xmi:id="_emKi482iEeiCta8rX3fxAA" general="_emKhJM2iEeiCta8rX3fxAA"/>
        <ownedAttribute xmi:id="_emKi5M2iEeiCta8rX3fxAA" name="Overdue$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKi5c2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKi5s2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKi582iEeiCta8rX3fxAA" name="Overdue$method$1" visibility="private" specification="_emLHXM2iEeiCta8rX3fxAA" node="_emKi7M2iEeiCta8rX3fxAA _emKi7c2iEeiCta8rX3fxAA" group="_emKi7c2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emKi6M2iEeiCta8rX3fxAA" name="" type="_emKi4s2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKi6c2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKi6s2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emKi682iEeiCta8rX3fxAA" target="_emKi7M2iEeiCta8rX3fxAA" source="_emKi_s2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emKi7c2iEeiCta8rX3fxAA" name="Body(Overdue$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKi7s2iEeiCta8rX3fxAA" target="_emKi_s2iEeiCta8rX3fxAA" source="_emKi-82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKi782iEeiCta8rX3fxAA" target="_emKjAM2iEeiCta8rX3fxAA" source="_emKi_s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKi8M2iEeiCta8rX3fxAA" target="_emKi-c2iEeiCta8rX3fxAA" source="_emKi_82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKi8c2iEeiCta8rX3fxAA" target="_emKjBM2iEeiCta8rX3fxAA" source="_emKi_s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKi8s2iEeiCta8rX3fxAA" target="_emKjC82iEeiCta8rX3fxAA" source="_emKjB82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKi882iEeiCta8rX3fxAA" target="_emKjF82iEeiCta8rX3fxAA" source="_emKjDs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKi9M2iEeiCta8rX3fxAA" target="_emKjHc2iEeiCta8rX3fxAA" source="_emKjEs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKi9c2iEeiCta8rX3fxAA" target="_emKjIc2iEeiCta8rX3fxAA" source="_emKjIM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKi9s2iEeiCta8rX3fxAA" target="_emKjIc2iEeiCta8rX3fxAA" source="_emKjGs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emKi982iEeiCta8rX3fxAA" target="_emKi_82iEeiCta8rX3fxAA" source="_emKjIc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emKi-M2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emKi-c2iEeiCta8rX3fxAA" name="Body" incoming="_emKi8M2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emKi-s2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emKi-82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emKi7s2iEeiCta8rX3fxAA" type="_emKi4s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKi_M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKi_c2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emKi_s2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emKi7s2iEeiCta8rX3fxAA" outgoing="_emKi682iEeiCta8rX3fxAA _emKi782iEeiCta8rX3fxAA _emKi8c2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emKi_82iEeiCta8rX3fxAA" name="Call(Overdue$initialization$1)" incoming="_emKi982iEeiCta8rX3fxAA" outgoing="_emKi8M2iEeiCta8rX3fxAA" operation="_emLHW82iEeiCta8rX3fxAA">
              <target xmi:id="_emKjAM2iEeiCta8rX3fxAA" name="Call(Overdue$initialization$1).target" incoming="_emKi782iEeiCta8rX3fxAA" type="_emKi4s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKjAc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKjAs2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emKjA82iEeiCta8rX3fxAA" name="Read(Overdue$initializationFlag$1)" structuralFeature="_emKi5M2iEeiCta8rX3fxAA">
              <object xmi:id="_emKjBM2iEeiCta8rX3fxAA" name="Read(Overdue$initializationFlag$1).object" incoming="_emKi8c2iEeiCta8rX3fxAA" type="_emKi4s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKjBc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKjBs2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emKjB82iEeiCta8rX3fxAA" name="Read(Overdue$initializationFlag$1).result" outgoing="_emKi8s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKjCM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKjCc2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emKjCs2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emKjC82iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emKi8s2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKjDM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKjDc2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emKjDs2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emKi882iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKjD82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKjEM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emKjEc2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emKjEs2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emKi9M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKjE82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKjFM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emKjFc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emKjFs2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emKjF82iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emKi882iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKjGM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKjGc2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emKjGs2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emKi9s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKjG82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKjHM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emKjHc2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emKi9M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emKjHs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emKjH82iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emKjIM2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emKi9c2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emKjIc2iEeiCta8rX3fxAA" name="Decision(Test(Overdue$initializationFlag$1))" incoming="_emKi9c2iEeiCta8rX3fxAA _emKi9s2iEeiCta8rX3fxAA" outgoing="_emKi982iEeiCta8rX3fxAA" decisionInputFlow="_emKi9s2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emKi7M2iEeiCta8rX3fxAA" name="Return" incoming="_emKi682iEeiCta8rX3fxAA" type="_emKi4s2iEeiCta8rX3fxAA" parameter="_emKi6M2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKjIs2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emLHYM2iEeiCta8rX3fxAA" node="_emKjI82iEeiCta8rX3fxAA" group="_emKjI82iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emKjI82iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emKjJM2iEeiCta8rX3fxAA" name="Overdue$initialization$1" visibility="private" specification="_emLHW82iEeiCta8rX3fxAA" node="_emKjJc2iEeiCta8rX3fxAA" group="_emKjJc2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emKjJc2iEeiCta8rX3fxAA" name="Body(Overdue$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKjJs2iEeiCta8rX3fxAA" target="_emLHHc2iEeiCta8rX3fxAA" source="_emLHGs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emKjJ82iEeiCta8rX3fxAA" target="_emLHIc2iEeiCta8rX3fxAA" source="_emLHHc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHEM2iEeiCta8rX3fxAA" target="_emLHLs2iEeiCta8rX3fxAA" source="_emLHHc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHEc2iEeiCta8rX3fxAA" target="_emLHPc2iEeiCta8rX3fxAA" source="_emLHHc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHEs2iEeiCta8rX3fxAA" target="_emLHRM2iEeiCta8rX3fxAA" source="_emLHQM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHE82iEeiCta8rX3fxAA" target="_emLHUM2iEeiCta8rX3fxAA" source="_emLHR82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHFM2iEeiCta8rX3fxAA" target="_emLHVs2iEeiCta8rX3fxAA" source="_emLHS82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLHFc2iEeiCta8rX3fxAA" target="_emLHWs2iEeiCta8rX3fxAA" source="_emLHWc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHFs2iEeiCta8rX3fxAA" target="_emLHWs2iEeiCta8rX3fxAA" source="_emLHU82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLHF82iEeiCta8rX3fxAA" target="_emLHHs2iEeiCta8rX3fxAA" source="_emLHWs2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emLHGM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emLHGc2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emLHGs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emKjJs2iEeiCta8rX3fxAA" type="_emKi4s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHG82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHHM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emLHHc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emKjJs2iEeiCta8rX3fxAA" outgoing="_emKjJ82iEeiCta8rX3fxAA _emLHEM2iEeiCta8rX3fxAA _emLHEc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLHHs2iEeiCta8rX3fxAA" name="Initialization" incoming="_emLHF82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLHH82iEeiCta8rX3fxAA" target="_emLHJM2iEeiCta8rX3fxAA" source="_emLHIM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_emLHIM2iEeiCta8rX3fxAA" name="Call(Issue$initialization$1)" outgoing="_emLHH82iEeiCta8rX3fxAA" operation="_emKhrs2iEeiCta8rX3fxAA">
                <target xmi:id="_emLHIc2iEeiCta8rX3fxAA" name="Call(Issue$initialization$1).target" incoming="_emKjJ82iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHIs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHI82iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLHJM2iEeiCta8rX3fxAA" name="Set(initializationFlag)" incoming="_emLHH82iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHJc2iEeiCta8rX3fxAA" target="_emLHO82iEeiCta8rX3fxAA" source="_emLHJ82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLHJs2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emLHJ82iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emLHJc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHKM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHKc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emLHKs2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emLHK82iEeiCta8rX3fxAA" name="Iterate(Write(Overdue$initializationFlag$1))" inputElement="_emLHO82iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHLM2iEeiCta8rX3fxAA" target="_emLHOM2iEeiCta8rX3fxAA" source="_emLHO82iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHLc2iEeiCta8rX3fxAA" target="_emLHMs2iEeiCta8rX3fxAA" source="_emLHLs2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emLHLs2iEeiCta8rX3fxAA" name="Iterate(Write(Overdue$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emLHEM2iEeiCta8rX3fxAA" outgoing="_emLHLc2iEeiCta8rX3fxAA" type="_emKi4s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHL82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHMM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emLHMc2iEeiCta8rX3fxAA" name="Write(Overdue$initializationFlag$1)" structuralFeature="_emKi5M2iEeiCta8rX3fxAA">
                    <object xmi:id="_emLHMs2iEeiCta8rX3fxAA" name="Write(Overdue$initializationFlag$1).object" incoming="_emLHLc2iEeiCta8rX3fxAA" type="_emKi4s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHM82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHNM2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emLHNc2iEeiCta8rX3fxAA" name="Write(Overdue$initializationFlag$1).result" type="_emKi4s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHNs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHN82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emLHOM2iEeiCta8rX3fxAA" name="Write(Overdue$initializationFlag$1).value" incoming="_emLHLM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHOc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHOs2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emLHO82iEeiCta8rX3fxAA" name="Iterate(Write(Overdue$initializationFlag$1)).inputElement" incoming="_emLHJc2iEeiCta8rX3fxAA" outgoing="_emLHLM2iEeiCta8rX3fxAA" regionAsInput="_emLHK82iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emLHPM2iEeiCta8rX3fxAA" name="Read(Overdue$initializationFlag$1)" structuralFeature="_emKi5M2iEeiCta8rX3fxAA">
              <object xmi:id="_emLHPc2iEeiCta8rX3fxAA" name="Read(Overdue$initializationFlag$1).object" incoming="_emLHEc2iEeiCta8rX3fxAA" type="_emKi4s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHPs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHP82iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emLHQM2iEeiCta8rX3fxAA" name="Read(Overdue$initializationFlag$1).result" outgoing="_emLHEs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHQc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHQs2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLHQ82iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emLHRM2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emLHEs2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHRc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHRs2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emLHR82iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emLHE82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHSM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHSc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLHSs2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emLHS82iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emLHFM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHTM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHTc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emLHTs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emLHT82iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emLHUM2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emLHE82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHUc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHUs2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emLHU82iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emLHFs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHVM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHVc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emLHVs2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emLHFM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHV82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHWM2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emLHWc2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emLHFc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emLHWs2iEeiCta8rX3fxAA" name="Decision(Test(Overdue$initializationFlag$1))" incoming="_emLHFc2iEeiCta8rX3fxAA _emLHFs2iEeiCta8rX3fxAA" outgoing="_emLHF82iEeiCta8rX3fxAA" decisionInputFlow="_emLHFs2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emLHW82iEeiCta8rX3fxAA" name="Overdue$initialization$1" visibility="protected" method="_emKjJM2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emLHXM2iEeiCta8rX3fxAA" name="Overdue" visibility="public" method="_emKi582iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emLHXc2iEeiCta8rX3fxAA" name="" visibility="package" type="_emKi4s2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHXs2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHX82iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_emLHYM2iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emKjIs2iEeiCta8rX3fxAA" redefinedOperation="_emKhr82iEeiCta8rX3fxAA"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emLHYc2iEeiCta8rX3fxAA" name="Resolved" visibility="package">
        <generalization xmi:id="_emLHYs2iEeiCta8rX3fxAA" general="_emKhJM2iEeiCta8rX3fxAA"/>
        <ownedAttribute xmi:id="_emLHY82iEeiCta8rX3fxAA" name="Resolved$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHZM2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHZc2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLHZs2iEeiCta8rX3fxAA" name="Resolved$method$1" visibility="private" specification="_emLH882iEeiCta8rX3fxAA" node="_emLHa82iEeiCta8rX3fxAA _emLHbM2iEeiCta8rX3fxAA" group="_emLHbM2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emLHZ82iEeiCta8rX3fxAA" name="" type="_emLHYc2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHaM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHac2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHas2iEeiCta8rX3fxAA" target="_emLHa82iEeiCta8rX3fxAA" source="_emLHfc2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emLHbM2iEeiCta8rX3fxAA" name="Body(Resolved$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHbc2iEeiCta8rX3fxAA" target="_emLHfc2iEeiCta8rX3fxAA" source="_emLHes2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHbs2iEeiCta8rX3fxAA" target="_emLHf82iEeiCta8rX3fxAA" source="_emLHfc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLHb82iEeiCta8rX3fxAA" target="_emLHeM2iEeiCta8rX3fxAA" source="_emLHfs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHcM2iEeiCta8rX3fxAA" target="_emLHg82iEeiCta8rX3fxAA" source="_emLHfc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHcc2iEeiCta8rX3fxAA" target="_emLHis2iEeiCta8rX3fxAA" source="_emLHhs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHcs2iEeiCta8rX3fxAA" target="_emLHls2iEeiCta8rX3fxAA" source="_emLHjc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHc82iEeiCta8rX3fxAA" target="_emLHnM2iEeiCta8rX3fxAA" source="_emLHkc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLHdM2iEeiCta8rX3fxAA" target="_emLHoM2iEeiCta8rX3fxAA" source="_emLHn82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHdc2iEeiCta8rX3fxAA" target="_emLHoM2iEeiCta8rX3fxAA" source="_emLHmc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLHds2iEeiCta8rX3fxAA" target="_emLHfs2iEeiCta8rX3fxAA" source="_emLHoM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emLHd82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLHeM2iEeiCta8rX3fxAA" name="Body" incoming="_emLHb82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emLHec2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emLHes2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLHbc2iEeiCta8rX3fxAA" type="_emLHYc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHe82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHfM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emLHfc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emLHbc2iEeiCta8rX3fxAA" outgoing="_emLHas2iEeiCta8rX3fxAA _emLHbs2iEeiCta8rX3fxAA _emLHcM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emLHfs2iEeiCta8rX3fxAA" name="Call(Resolved$initialization$1)" incoming="_emLHds2iEeiCta8rX3fxAA" outgoing="_emLHb82iEeiCta8rX3fxAA" operation="_emLH8s2iEeiCta8rX3fxAA">
              <target xmi:id="_emLHf82iEeiCta8rX3fxAA" name="Call(Resolved$initialization$1).target" incoming="_emLHbs2iEeiCta8rX3fxAA" type="_emLHYc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHgM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHgc2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emLHgs2iEeiCta8rX3fxAA" name="Read(Resolved$initializationFlag$1)" structuralFeature="_emLHY82iEeiCta8rX3fxAA">
              <object xmi:id="_emLHg82iEeiCta8rX3fxAA" name="Read(Resolved$initializationFlag$1).object" incoming="_emLHcM2iEeiCta8rX3fxAA" type="_emLHYc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHhM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHhc2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emLHhs2iEeiCta8rX3fxAA" name="Read(Resolved$initializationFlag$1).result" outgoing="_emLHcc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHh82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHiM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLHic2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emLHis2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emLHcc2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHi82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHjM2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emLHjc2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emLHcs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHjs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHj82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLHkM2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emLHkc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emLHc82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHks2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHk82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emLHlM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emLHlc2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emLHls2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emLHcs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHl82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHmM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emLHmc2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emLHdc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHms2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHm82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emLHnM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emLHc82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHnc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHns2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emLHn82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emLHdM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emLHoM2iEeiCta8rX3fxAA" name="Decision(Test(Resolved$initializationFlag$1))" incoming="_emLHdM2iEeiCta8rX3fxAA _emLHdc2iEeiCta8rX3fxAA" outgoing="_emLHds2iEeiCta8rX3fxAA" decisionInputFlow="_emLHdc2iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emLHa82iEeiCta8rX3fxAA" name="Return" incoming="_emLHas2iEeiCta8rX3fxAA" type="_emLHYc2iEeiCta8rX3fxAA" parameter="_emLHZ82iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLHoc2iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emLH982iEeiCta8rX3fxAA" node="_emLHos2iEeiCta8rX3fxAA" group="_emLHos2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emLHos2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLHo82iEeiCta8rX3fxAA" name="Resolved$initialization$1" visibility="private" specification="_emLH8s2iEeiCta8rX3fxAA" node="_emLHpM2iEeiCta8rX3fxAA" group="_emLHpM2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emLHpM2iEeiCta8rX3fxAA" name="Body(Resolved$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHpc2iEeiCta8rX3fxAA" target="_emLHtM2iEeiCta8rX3fxAA" source="_emLHsc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHps2iEeiCta8rX3fxAA" target="_emLHuM2iEeiCta8rX3fxAA" source="_emLHtM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHp82iEeiCta8rX3fxAA" target="_emLHxc2iEeiCta8rX3fxAA" source="_emLHtM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHqM2iEeiCta8rX3fxAA" target="_emLH1M2iEeiCta8rX3fxAA" source="_emLHtM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHqc2iEeiCta8rX3fxAA" target="_emLH282iEeiCta8rX3fxAA" source="_emLH182iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHqs2iEeiCta8rX3fxAA" target="_emLH582iEeiCta8rX3fxAA" source="_emLH3s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHq82iEeiCta8rX3fxAA" target="_emLH7c2iEeiCta8rX3fxAA" source="_emLH4s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLHrM2iEeiCta8rX3fxAA" target="_emLH8c2iEeiCta8rX3fxAA" source="_emLH8M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHrc2iEeiCta8rX3fxAA" target="_emLH8c2iEeiCta8rX3fxAA" source="_emLH6s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLHrs2iEeiCta8rX3fxAA" target="_emLHtc2iEeiCta8rX3fxAA" source="_emLH8c2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emLHr82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emLHsM2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emLHsc2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLHpc2iEeiCta8rX3fxAA" type="_emLHYc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHss2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHs82iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emLHtM2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emLHpc2iEeiCta8rX3fxAA" outgoing="_emLHps2iEeiCta8rX3fxAA _emLHp82iEeiCta8rX3fxAA _emLHqM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLHtc2iEeiCta8rX3fxAA" name="Initialization" incoming="_emLHrs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLHts2iEeiCta8rX3fxAA" target="_emLHu82iEeiCta8rX3fxAA" source="_emLHt82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_emLHt82iEeiCta8rX3fxAA" name="Call(Issue$initialization$1)" outgoing="_emLHts2iEeiCta8rX3fxAA" operation="_emKhrs2iEeiCta8rX3fxAA">
                <target xmi:id="_emLHuM2iEeiCta8rX3fxAA" name="Call(Issue$initialization$1).target" incoming="_emLHps2iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHuc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHus2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLHu82iEeiCta8rX3fxAA" name="Set(initializationFlag)" incoming="_emLHts2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHvM2iEeiCta8rX3fxAA" target="_emLH0s2iEeiCta8rX3fxAA" source="_emLHvs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLHvc2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emLHvs2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emLHvM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHv82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHwM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emLHwc2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emLHws2iEeiCta8rX3fxAA" name="Iterate(Write(Resolved$initializationFlag$1))" inputElement="_emLH0s2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHw82iEeiCta8rX3fxAA" target="_emLHz82iEeiCta8rX3fxAA" source="_emLH0s2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLHxM2iEeiCta8rX3fxAA" target="_emLHyc2iEeiCta8rX3fxAA" source="_emLHxc2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emLHxc2iEeiCta8rX3fxAA" name="Iterate(Write(Resolved$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emLHp82iEeiCta8rX3fxAA" outgoing="_emLHxM2iEeiCta8rX3fxAA" type="_emLHYc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHxs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHx82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emLHyM2iEeiCta8rX3fxAA" name="Write(Resolved$initializationFlag$1)" structuralFeature="_emLHY82iEeiCta8rX3fxAA">
                    <object xmi:id="_emLHyc2iEeiCta8rX3fxAA" name="Write(Resolved$initializationFlag$1).object" incoming="_emLHxM2iEeiCta8rX3fxAA" type="_emLHYc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHys2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHy82iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emLHzM2iEeiCta8rX3fxAA" name="Write(Resolved$initializationFlag$1).result" type="_emLHYc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLHzc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLHzs2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emLHz82iEeiCta8rX3fxAA" name="Write(Resolved$initializationFlag$1).value" incoming="_emLHw82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLH0M2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLH0c2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emLH0s2iEeiCta8rX3fxAA" name="Iterate(Write(Resolved$initializationFlag$1)).inputElement" incoming="_emLHvM2iEeiCta8rX3fxAA" outgoing="_emLHw82iEeiCta8rX3fxAA" regionAsInput="_emLHws2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emLH082iEeiCta8rX3fxAA" name="Read(Resolved$initializationFlag$1)" structuralFeature="_emLHY82iEeiCta8rX3fxAA">
              <object xmi:id="_emLH1M2iEeiCta8rX3fxAA" name="Read(Resolved$initializationFlag$1).object" incoming="_emLHqM2iEeiCta8rX3fxAA" type="_emLHYc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLH1c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLH1s2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emLH182iEeiCta8rX3fxAA" name="Read(Resolved$initializationFlag$1).result" outgoing="_emLHqc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLH2M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLH2c2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLH2s2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emLH282iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emLHqc2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLH3M2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLH3c2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emLH3s2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emLHqs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLH382iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLH4M2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLH4c2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emLH4s2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emLHq82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLH482iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLH5M2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emLH5c2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emLH5s2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emLH582iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emLHqs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLH6M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLH6c2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emLH6s2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emLHrc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLH682iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLH7M2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emLH7c2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emLHq82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLH7s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLH782iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emLH8M2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emLHrM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emLH8c2iEeiCta8rX3fxAA" name="Decision(Test(Resolved$initializationFlag$1))" incoming="_emLHrM2iEeiCta8rX3fxAA _emLHrc2iEeiCta8rX3fxAA" outgoing="_emLHrs2iEeiCta8rX3fxAA" decisionInputFlow="_emLHrc2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emLH8s2iEeiCta8rX3fxAA" name="Resolved$initialization$1" visibility="protected" method="_emLHo82iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emLH882iEeiCta8rX3fxAA" name="Resolved" visibility="public" method="_emLHZs2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emLH9M2iEeiCta8rX3fxAA" name="" visibility="package" type="_emLHYc2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLH9c2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLH9s2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_emLH982iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emLHoc2iEeiCta8rX3fxAA" redefinedOperation="_emKhr82iEeiCta8rX3fxAA"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emLH-M2iEeiCta8rX3fxAA" name="TestRunner" visibility="package" classifierBehavior="_emLH_82iEeiCta8rX3fxAA" isActive="true">
        <ownedAttribute xmi:id="_emLH-c2iEeiCta8rX3fxAA" name="TestRunner$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLH-s2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLH-82iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_emLH_M2iEeiCta8rX3fxAA" name="outer" visibility="private" type="_emLuZs2iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLH_c2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLH_s2iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLH_82iEeiCta8rX3fxAA" name="TestRunner$classifierBehavior$1" visibility="private" isActive="true" node="_emLIAM2iEeiCta8rX3fxAA" group="_emLIAM2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emLIAM2iEeiCta8rX3fxAA" name="Body(TestRunner$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIAc2iEeiCta8rX3fxAA" target="_emLII82iEeiCta8rX3fxAA" source="_emLIHs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIAs2iEeiCta8rX3fxAA" target="_emLIPM2iEeiCta8rX3fxAA" source="_emLII82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIA82iEeiCta8rX3fxAA" target="_emLIU82iEeiCta8rX3fxAA" source="_emLIOc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIBM2iEeiCta8rX3fxAA" target="_emLIQc2iEeiCta8rX3fxAA" source="_emLIPM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIBc2iEeiCta8rX3fxAA" target="_emLIa82iEeiCta8rX3fxAA" source="_emLIOc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIBs2iEeiCta8rX3fxAA" target="_emLIWc2iEeiCta8rX3fxAA" source="_emLIQc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIB82iEeiCta8rX3fxAA" target="_emLIg82iEeiCta8rX3fxAA" source="_emLIOc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLICM2iEeiCta8rX3fxAA" target="_emLIcc2iEeiCta8rX3fxAA" source="_emLIWc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLICc2iEeiCta8rX3fxAA" target="_emLIm82iEeiCta8rX3fxAA" source="_emLIOc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLICs2iEeiCta8rX3fxAA" target="_emLIic2iEeiCta8rX3fxAA" source="_emLIcc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIC82iEeiCta8rX3fxAA" target="_emLIs82iEeiCta8rX3fxAA" source="_emLIOs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIDM2iEeiCta8rX3fxAA" target="_emLIoc2iEeiCta8rX3fxAA" source="_emLIic2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIDc2iEeiCta8rX3fxAA" target="_emLIy82iEeiCta8rX3fxAA" source="_emLIOs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIDs2iEeiCta8rX3fxAA" target="_emLIuc2iEeiCta8rX3fxAA" source="_emLIoc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLID82iEeiCta8rX3fxAA" target="_emLI482iEeiCta8rX3fxAA" source="_emLIOs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIEM2iEeiCta8rX3fxAA" target="_emLI0c2iEeiCta8rX3fxAA" source="_emLIuc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIEc2iEeiCta8rX3fxAA" target="_emLJEs2iEeiCta8rX3fxAA" source="_emLIOs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIEs2iEeiCta8rX3fxAA" target="_emLI6c2iEeiCta8rX3fxAA" source="_emLI0c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIE82iEeiCta8rX3fxAA" target="_emLJM82iEeiCta8rX3fxAA" source="_emLIO82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIFM2iEeiCta8rX3fxAA" target="_emLJIc2iEeiCta8rX3fxAA" source="_emLI6c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIFc2iEeiCta8rX3fxAA" target="_emLJS82iEeiCta8rX3fxAA" source="_emLIO82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIFs2iEeiCta8rX3fxAA" target="_emLJOc2iEeiCta8rX3fxAA" source="_emLJIc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIF82iEeiCta8rX3fxAA" target="_emLJY82iEeiCta8rX3fxAA" source="_emLIO82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIGM2iEeiCta8rX3fxAA" target="_emLJUc2iEeiCta8rX3fxAA" source="_emLJOc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIGc2iEeiCta8rX3fxAA" target="_emLJe82iEeiCta8rX3fxAA" source="_emLIO82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIGs2iEeiCta8rX3fxAA" target="_emLJac2iEeiCta8rX3fxAA" source="_emLJUc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIG82iEeiCta8rX3fxAA" target="_emLJk82iEeiCta8rX3fxAA" source="_emLIO82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIHM2iEeiCta8rX3fxAA" target="_emLJgc2iEeiCta8rX3fxAA" source="_emLJac2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLIHc2iEeiCta8rX3fxAA" target="_emLJmc2iEeiCta8rX3fxAA" source="_emLJgc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLIHs2iEeiCta8rX3fxAA" name="AcceptStatement@64693088" outgoing="_emLIAc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLIH82iEeiCta8rX3fxAA" target="_emLIIM2iEeiCta8rX3fxAA" source="_emLIIs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_emLIIM2iEeiCta8rX3fxAA" name="Accept(Start)" incoming="_emLIH82iEeiCta8rX3fxAA">
                <trigger xmi:id="_emLIIc2iEeiCta8rX3fxAA" event="_emLuZM2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_emLIIs2iEeiCta8rX3fxAA" name="Initial(Accept(Start))" outgoing="_emLIH82iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLII82iEeiCta8rX3fxAA" name="ExpressionStatement@68e63f3c" incoming="_emLIAc2iEeiCta8rX3fxAA" outgoing="_emLIAs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIJM2iEeiCta8rX3fxAA" target="_emLIOc2iEeiCta8rX3fxAA" source="_emLIKc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIJc2iEeiCta8rX3fxAA" target="_emLIOs2iEeiCta8rX3fxAA" source="_emLILM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIJs2iEeiCta8rX3fxAA" target="_emLIO82iEeiCta8rX3fxAA" source="_emLIL82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIJ82iEeiCta8rX3fxAA" target="_emLIMs2iEeiCta8rX3fxAA" source="_emLINs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_emLIKM2iEeiCta8rX3fxAA" name="Call(test)" operation="_emLuVc2iEeiCta8rX3fxAA">
                <result xmi:id="_emLIKc2iEeiCta8rX3fxAA" name="Call(test).result(employee)" outgoing="_emLIJM2iEeiCta8rX3fxAA" type="_emJ7e82iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIKs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIK82iEeiCta8rX3fxAA" value="1"/>
                </result>
                <result xmi:id="_emLILM2iEeiCta8rX3fxAA" name="Call(test).result(monitor)" outgoing="_emLIJc2iEeiCta8rX3fxAA" type="_emJ5bc2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLILc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLILs2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <result xmi:id="_emLIL82iEeiCta8rX3fxAA" name="Call(test).result(issue)" outgoing="_emLIJs2iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIMM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIMc2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <target xmi:id="_emLIMs2iEeiCta8rX3fxAA" name="Call(test).target" incoming="_emLIJ82iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIM82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLINM2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_emLINc2iEeiCta8rX3fxAA" name="ReadSelf">
                <result xmi:id="_emLINs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLIJ82iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIN82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIOM2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_emLIOc2iEeiCta8rX3fxAA" name="Fork(employee)@41dc4d6" incoming="_emLIJM2iEeiCta8rX3fxAA" outgoing="_emLIA82iEeiCta8rX3fxAA _emLIBc2iEeiCta8rX3fxAA _emLIB82iEeiCta8rX3fxAA _emLICc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_emLIOs2iEeiCta8rX3fxAA" name="Fork(monitor)@125e529e" incoming="_emLIJc2iEeiCta8rX3fxAA" outgoing="_emLIC82iEeiCta8rX3fxAA _emLIDc2iEeiCta8rX3fxAA _emLID82iEeiCta8rX3fxAA _emLIEc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_emLIO82iEeiCta8rX3fxAA" name="Fork(issue)@31785843" incoming="_emLIJs2iEeiCta8rX3fxAA" outgoing="_emLIE82iEeiCta8rX3fxAA _emLIFc2iEeiCta8rX3fxAA _emLIF82iEeiCta8rX3fxAA _emLIGc2iEeiCta8rX3fxAA _emLIG82iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLIPM2iEeiCta8rX3fxAA" name="AcceptStatement@201a133e" incoming="_emLIAs2iEeiCta8rX3fxAA" outgoing="_emLIBM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLIPc2iEeiCta8rX3fxAA" target="_emLIPs2iEeiCta8rX3fxAA" source="_emLIQM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_emLIPs2iEeiCta8rX3fxAA" name="Accept(Continue)" incoming="_emLIPc2iEeiCta8rX3fxAA">
                <trigger xmi:id="_emLIP82iEeiCta8rX3fxAA" event="_emLuZc2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_emLIQM2iEeiCta8rX3fxAA" name="Initial(Accept(Continue))" outgoing="_emLIPc2iEeiCta8rX3fxAA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLIQc2iEeiCta8rX3fxAA" name="ExpressionStatement@4a8f59e1" incoming="_emLIBM2iEeiCta8rX3fxAA" outgoing="_emLIBs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIQs2iEeiCta8rX3fxAA" target="_emLIRs2iEeiCta8rX3fxAA" source="_emLITs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIQ82iEeiCta8rX3fxAA" target="_emLISc2iEeiCta8rX3fxAA" source="_emLIVs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLIRM2iEeiCta8rX3fxAA" target="_emLIRc2iEeiCta8rX3fxAA" source="_emLITM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLIRc2iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_emLIRM2iEeiCta8rX3fxAA" behavior="_emLwCs2iEeiCta8rX3fxAA">
                <argument xmi:id="_emLIRs2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_emLIQs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIR82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLISM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLISc2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_emLIQ82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLISs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIS82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLITM2iEeiCta8rX3fxAA" name="Tuple@3b53f1ae" outgoing="_emLIRM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLITc2iEeiCta8rX3fxAA" name="Value(&quot;employee instanceof Employee&quot;)">
                  <result xmi:id="_emLITs2iEeiCta8rX3fxAA" name="Value(&quot;employee instanceof Employee&quot;).result" outgoing="_emLIQs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIT82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIUM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emLIUc2iEeiCta8rX3fxAA" value="employee instanceof Employee">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emLIUs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Employee)" classifier="_emJ7e82iEeiCta8rX3fxAA">
                  <object xmi:id="_emLIU82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Employee).object" incoming="_emLIA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIVM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIVc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLIVs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Employee).result" outgoing="_emLIQ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIV82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIWM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLIWc2iEeiCta8rX3fxAA" name="ExpressionStatement@685b5230" incoming="_emLIBs2iEeiCta8rX3fxAA" outgoing="_emLICM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIWs2iEeiCta8rX3fxAA" target="_emLIXs2iEeiCta8rX3fxAA" source="_emLIZs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIW82iEeiCta8rX3fxAA" target="_emLIYc2iEeiCta8rX3fxAA" source="_emLIbs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLIXM2iEeiCta8rX3fxAA" target="_emLIXc2iEeiCta8rX3fxAA" source="_emLIZM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLIXc2iEeiCta8rX3fxAA" name="Call(AssertFalse)" incoming="_emLIXM2iEeiCta8rX3fxAA" behavior="_emMVVc2iEeiCta8rX3fxAA">
                <argument xmi:id="_emLIXs2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(label)" incoming="_emLIWs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIX82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIYM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLIYc2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(condition)" incoming="_emLIW82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIYs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIY82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLIZM2iEeiCta8rX3fxAA" name="Tuple@55a773df" outgoing="_emLIXM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLIZc2iEeiCta8rX3fxAA" name="Value(&quot;employee hastype Staff&quot;)">
                  <result xmi:id="_emLIZs2iEeiCta8rX3fxAA" name="Value(&quot;employee hastype Staff&quot;).result" outgoing="_emLIWs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIZ82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIaM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emLIac2iEeiCta8rX3fxAA" value="employee hastype Staff">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emLIas2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Staff)" classifier="_emJ8os2iEeiCta8rX3fxAA" isDirect="true">
                  <object xmi:id="_emLIa82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Staff).object" incoming="_emLIBc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIbM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIbc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLIbs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Staff).result" outgoing="_emLIW82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIb82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIcM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLIcc2iEeiCta8rX3fxAA" name="ExpressionStatement@265f8dd7" incoming="_emLICM2iEeiCta8rX3fxAA" outgoing="_emLICs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIcs2iEeiCta8rX3fxAA" target="_emLIds2iEeiCta8rX3fxAA" source="_emLIfs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIc82iEeiCta8rX3fxAA" target="_emLIec2iEeiCta8rX3fxAA" source="_emLIhs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLIdM2iEeiCta8rX3fxAA" target="_emLIdc2iEeiCta8rX3fxAA" source="_emLIfM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLIdc2iEeiCta8rX3fxAA" name="Call(AssertFalse)" incoming="_emLIdM2iEeiCta8rX3fxAA" behavior="_emMVVc2iEeiCta8rX3fxAA">
                <argument xmi:id="_emLIds2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(label)" incoming="_emLIcs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLId82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIeM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLIec2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(condition)" incoming="_emLIc82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIes2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIe82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLIfM2iEeiCta8rX3fxAA" name="Tuple@52d28961" outgoing="_emLIdM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLIfc2iEeiCta8rX3fxAA" name="Value(&quot;employee hastype Administrator&quot;)">
                  <result xmi:id="_emLIfs2iEeiCta8rX3fxAA" name="Value(&quot;employee hastype Administrator&quot;).result" outgoing="_emLIcs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIf82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIgM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emLIgc2iEeiCta8rX3fxAA" value="employee hastype Administrator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emLIgs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Administrator)" classifier="_emJ8C82iEeiCta8rX3fxAA" isDirect="true">
                  <object xmi:id="_emLIg82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Administrator).object" incoming="_emLIB82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIhM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIhc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLIhs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Administrator).result" outgoing="_emLIc82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIh82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIiM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLIic2iEeiCta8rX3fxAA" name="ExpressionStatement@50a99295" incoming="_emLICs2iEeiCta8rX3fxAA" outgoing="_emLIDM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIis2iEeiCta8rX3fxAA" target="_emLIjs2iEeiCta8rX3fxAA" source="_emLIls2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIi82iEeiCta8rX3fxAA" target="_emLIkc2iEeiCta8rX3fxAA" source="_emLIns2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLIjM2iEeiCta8rX3fxAA" target="_emLIjc2iEeiCta8rX3fxAA" source="_emLIlM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLIjc2iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_emLIjM2iEeiCta8rX3fxAA" behavior="_emLwCs2iEeiCta8rX3fxAA">
                <argument xmi:id="_emLIjs2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_emLIis2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIj82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIkM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLIkc2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_emLIi82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIks2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIk82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLIlM2iEeiCta8rX3fxAA" name="Tuple@30aea211" outgoing="_emLIjM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLIlc2iEeiCta8rX3fxAA" name="Value(&quot;employee hastype PartTime&quot;)">
                  <result xmi:id="_emLIls2iEeiCta8rX3fxAA" name="Value(&quot;employee hastype PartTime&quot;).result" outgoing="_emLIis2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIl82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLImM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emLImc2iEeiCta8rX3fxAA" value="employee hastype PartTime">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emLIms2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(PartTime)" classifier="_emKgjc2iEeiCta8rX3fxAA" isDirect="true">
                  <object xmi:id="_emLIm82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(PartTime).object" incoming="_emLICc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLInM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLInc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLIns2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(PartTime).result" outgoing="_emLIi82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIn82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIoM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLIoc2iEeiCta8rX3fxAA" name="ExpressionStatement@17387e0a" incoming="_emLIDM2iEeiCta8rX3fxAA" outgoing="_emLIDs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIos2iEeiCta8rX3fxAA" target="_emLIps2iEeiCta8rX3fxAA" source="_emLIrs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIo82iEeiCta8rX3fxAA" target="_emLIqc2iEeiCta8rX3fxAA" source="_emLIts2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLIpM2iEeiCta8rX3fxAA" target="_emLIpc2iEeiCta8rX3fxAA" source="_emLIrM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLIpc2iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_emLIpM2iEeiCta8rX3fxAA" behavior="_emLwCs2iEeiCta8rX3fxAA">
                <argument xmi:id="_emLIps2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_emLIos2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIp82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIqM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLIqc2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_emLIo82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIqs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIq82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLIrM2iEeiCta8rX3fxAA" name="Tuple@409ac088" outgoing="_emLIpM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLIrc2iEeiCta8rX3fxAA" name="Value(&quot;monitor instanceof Monitor&quot;)">
                  <result xmi:id="_emLIrs2iEeiCta8rX3fxAA" name="Value(&quot;monitor instanceof Monitor&quot;).result" outgoing="_emLIos2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIr82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIsM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emLIsc2iEeiCta8rX3fxAA" value="monitor instanceof Monitor">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emLIss2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Monitor)" classifier="_emJ5bc2iEeiCta8rX3fxAA">
                  <object xmi:id="_emLIs82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Monitor).object" incoming="_emLIC82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLItM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLItc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLIts2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Monitor).result" outgoing="_emLIo82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIt82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIuM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLIuc2iEeiCta8rX3fxAA" name="ExpressionStatement@32d0ffe8" incoming="_emLIDs2iEeiCta8rX3fxAA" outgoing="_emLIEM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIus2iEeiCta8rX3fxAA" target="_emLIvs2iEeiCta8rX3fxAA" source="_emLIxs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLIu82iEeiCta8rX3fxAA" target="_emLIwc2iEeiCta8rX3fxAA" source="_emLIzs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLIvM2iEeiCta8rX3fxAA" target="_emLIvc2iEeiCta8rX3fxAA" source="_emLIxM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLIvc2iEeiCta8rX3fxAA" name="Call(AssertFalse)" incoming="_emLIvM2iEeiCta8rX3fxAA" behavior="_emMVVc2iEeiCta8rX3fxAA">
                <argument xmi:id="_emLIvs2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(label)" incoming="_emLIus2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIv82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIwM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLIwc2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(condition)" incoming="_emLIu82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIws2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIw82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLIxM2iEeiCta8rX3fxAA" name="Tuple@36de4da2" outgoing="_emLIvM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLIxc2iEeiCta8rX3fxAA" name="Value(&quot;monitor hastype InActiveMonitor&quot;)">
                  <result xmi:id="_emLIxs2iEeiCta8rX3fxAA" name="Value(&quot;monitor hastype InActiveMonitor&quot;).result" outgoing="_emLIus2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIx82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIyM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emLIyc2iEeiCta8rX3fxAA" value="monitor hastype InActiveMonitor">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emLIys2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(InActiveMonitor)" classifier="_emJ5_c2iEeiCta8rX3fxAA" isDirect="true">
                  <object xmi:id="_emLIy82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(InActiveMonitor).object" incoming="_emLIDc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIzM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLIzc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLIzs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(InActiveMonitor).result" outgoing="_emLIu82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLIz82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLI0M2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLI0c2iEeiCta8rX3fxAA" name="ExpressionStatement@68882aea" incoming="_emLIEM2iEeiCta8rX3fxAA" outgoing="_emLIEs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLI0s2iEeiCta8rX3fxAA" target="_emLI1s2iEeiCta8rX3fxAA" source="_emLI3s2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLI082iEeiCta8rX3fxAA" target="_emLI2c2iEeiCta8rX3fxAA" source="_emLI5s2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLI1M2iEeiCta8rX3fxAA" target="_emLI1c2iEeiCta8rX3fxAA" source="_emLI3M2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLI1c2iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_emLI1M2iEeiCta8rX3fxAA" behavior="_emLwCs2iEeiCta8rX3fxAA">
                <argument xmi:id="_emLI1s2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_emLI0s2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLI182iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLI2M2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLI2c2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_emLI082iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLI2s2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLI282iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLI3M2iEeiCta8rX3fxAA" name="Tuple@27ca1501" outgoing="_emLI1M2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLI3c2iEeiCta8rX3fxAA" name="Value(&quot;monitor hastype ActiveMonitor&quot;)">
                  <result xmi:id="_emLI3s2iEeiCta8rX3fxAA" name="Value(&quot;monitor hastype ActiveMonitor&quot;).result" outgoing="_emLI0s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLI382iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLI4M2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emLI4c2iEeiCta8rX3fxAA" value="monitor hastype ActiveMonitor">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emLI4s2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(ActiveMonitor)" classifier="_emJ6lM2iEeiCta8rX3fxAA" isDirect="true">
                  <object xmi:id="_emLI482iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(ActiveMonitor).object" incoming="_emLID82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLI5M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLI5c2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLI5s2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(ActiveMonitor).result" outgoing="_emLI082iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLI582iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLI6M2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLI6c2iEeiCta8rX3fxAA" name="ExpressionStatement@460e634c" incoming="_emLIEs2iEeiCta8rX3fxAA" outgoing="_emLIFM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLI6s2iEeiCta8rX3fxAA" target="_emLI782iEeiCta8rX3fxAA" source="_emLI_M2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLI682iEeiCta8rX3fxAA" target="_emLI8s2iEeiCta8rX3fxAA" source="_emLJGM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLI7M2iEeiCta8rX3fxAA" target="_emLI9c2iEeiCta8rX3fxAA" source="_emLJHc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLI7c2iEeiCta8rX3fxAA" target="_emLI7s2iEeiCta8rX3fxAA" source="_emLI-M2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLI7s2iEeiCta8rX3fxAA" name="Call(AssertEqual)" incoming="_emLI7c2iEeiCta8rX3fxAA" behavior="_emMVus2iEeiCta8rX3fxAA">
                <argument xmi:id="_emLI782iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(label)" incoming="_emLI6s2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLI8M2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLI8c2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLI8s2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value1)" incoming="_emLI682iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLI882iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLI9M2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLI9c2iEeiCta8rX3fxAA" name="Call(AssertEqual).argument(value2)" incoming="_emLI7M2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLI9s2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLI982iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLI-M2iEeiCta8rX3fxAA" name="Tuple@7dba93ae" outgoing="_emLI7c2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLI-c2iEeiCta8rX3fxAA" target="_emLJG82iEeiCta8rX3fxAA" source="_emLJE82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLI-s2iEeiCta8rX3fxAA" target="_emLJFc2iEeiCta8rX3fxAA" source="_emLJG82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLI-82iEeiCta8rX3fxAA" name="Value(&quot;monitor.n&quot;)">
                  <result xmi:id="_emLI_M2iEeiCta8rX3fxAA" name="Value(&quot;monitor.n&quot;).result" outgoing="_emLI6s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLI_c2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLI_s2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emLI_82iEeiCta8rX3fxAA" value="monitor.n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emLJAM2iEeiCta8rX3fxAA" name="CastExpression@6c42ad06" mode="parallel" outputElement="_emLJE82iEeiCta8rX3fxAA" inputElement="_emLJEs2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJAc2iEeiCta8rX3fxAA" target="_emLJCs2iEeiCta8rX3fxAA" source="_emLJEM2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJAs2iEeiCta8rX3fxAA" target="_emLJEc2iEeiCta8rX3fxAA" source="_emLJEM2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJA82iEeiCta8rX3fxAA" target="_emLJEc2iEeiCta8rX3fxAA" source="_emLJDc2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJBM2iEeiCta8rX3fxAA" target="_emLJCM2iEeiCta8rX3fxAA" source="_emLJEc2iEeiCta8rX3fxAA">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_emLJBc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJBs2iEeiCta8rX3fxAA" target="_emLJEM2iEeiCta8rX3fxAA" source="_emLJEs2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJB82iEeiCta8rX3fxAA" target="_emLJE82iEeiCta8rX3fxAA" source="_emLJCM2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_emLJCM2iEeiCta8rX3fxAA" name="Merge(CastExpression@6c42ad06.operand)" incoming="_emLJBM2iEeiCta8rX3fxAA" outgoing="_emLJB82iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emLJCc2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(ActiveMonitor)" classifier="_emJ6lM2iEeiCta8rX3fxAA">
                    <object xmi:id="_emLJCs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(ActiveMonitor).object" incoming="_emLJAc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJC82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJDM2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emLJDc2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(ActiveMonitor).result" outgoing="_emLJA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJDs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJD82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_emLJEM2iEeiCta8rX3fxAA" name="Fork(ReadIsClassifiedObject(ActiveMonitor).object)" incoming="_emLJBs2iEeiCta8rX3fxAA" outgoing="_emLJAc2iEeiCta8rX3fxAA _emLJAs2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_emLJEc2iEeiCta8rX3fxAA" name="Decision(ReadIsClassifiedObject(ActiveMonitor).result)" incoming="_emLJAs2iEeiCta8rX3fxAA _emLJA82iEeiCta8rX3fxAA" outgoing="_emLJBM2iEeiCta8rX3fxAA" decisionInputFlow="_emLJA82iEeiCta8rX3fxAA"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emLJEs2iEeiCta8rX3fxAA" name="CastExpression@6c42ad06.inputElement" incoming="_emLIEc2iEeiCta8rX3fxAA" outgoing="_emLJBs2iEeiCta8rX3fxAA" type="_emJ5bc2iEeiCta8rX3fxAA" regionAsInput="_emLJAM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emLJE82iEeiCta8rX3fxAA" name="CastExpression@6c42ad06.outputElement" incoming="_emLJB82iEeiCta8rX3fxAA" outgoing="_emLI-c2iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" regionAsOutput="_emLJAM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emLJFM2iEeiCta8rX3fxAA" name="Read(n)" structuralFeature="_emJ6mc2iEeiCta8rX3fxAA">
                  <object xmi:id="_emLJFc2iEeiCta8rX3fxAA" name="Read(n).object" incoming="_emLI-s2iEeiCta8rX3fxAA" type="_emJ6lM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJFs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJF82iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLJGM2iEeiCta8rX3fxAA" name="Read(n).result" outgoing="_emLI682iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJGc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJGs2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_emLJG82iEeiCta8rX3fxAA" name="Fork(CastExpression@6c42ad06.outputElement)" incoming="_emLI-c2iEeiCta8rX3fxAA" outgoing="_emLI-s2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLJHM2iEeiCta8rX3fxAA" name="Value(1)">
                  <result xmi:id="_emLJHc2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_emLI7M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJHs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJH82iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_emLJIM2iEeiCta8rX3fxAA" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJIc2iEeiCta8rX3fxAA" name="ExpressionStatement@1ef9eaef" incoming="_emLIFM2iEeiCta8rX3fxAA" outgoing="_emLIFs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJIs2iEeiCta8rX3fxAA" target="_emLJJs2iEeiCta8rX3fxAA" source="_emLJLs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJI82iEeiCta8rX3fxAA" target="_emLJKc2iEeiCta8rX3fxAA" source="_emLJNs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLJJM2iEeiCta8rX3fxAA" target="_emLJJc2iEeiCta8rX3fxAA" source="_emLJLM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLJJc2iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_emLJJM2iEeiCta8rX3fxAA" behavior="_emLwCs2iEeiCta8rX3fxAA">
                <argument xmi:id="_emLJJs2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_emLJIs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJJ82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJKM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLJKc2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_emLJI82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJKs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJK82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJLM2iEeiCta8rX3fxAA" name="Tuple@25e9f618" outgoing="_emLJJM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLJLc2iEeiCta8rX3fxAA" name="Value(&quot;issue instanceof Issue&quot;)">
                  <result xmi:id="_emLJLs2iEeiCta8rX3fxAA" name="Value(&quot;issue instanceof Issue&quot;).result" outgoing="_emLJIs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJL82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJMM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emLJMc2iEeiCta8rX3fxAA" value="issue instanceof Issue">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emLJMs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Issue)" classifier="_emKhJM2iEeiCta8rX3fxAA">
                  <object xmi:id="_emLJM82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Issue).object" incoming="_emLIE82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJNM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJNc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLJNs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Issue).result" outgoing="_emLJI82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJN82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJOM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJOc2iEeiCta8rX3fxAA" name="ExpressionStatement@2c79dc52" incoming="_emLIFs2iEeiCta8rX3fxAA" outgoing="_emLIGM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJOs2iEeiCta8rX3fxAA" target="_emLJPs2iEeiCta8rX3fxAA" source="_emLJRs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJO82iEeiCta8rX3fxAA" target="_emLJQc2iEeiCta8rX3fxAA" source="_emLJTs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLJPM2iEeiCta8rX3fxAA" target="_emLJPc2iEeiCta8rX3fxAA" source="_emLJRM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLJPc2iEeiCta8rX3fxAA" name="Call(AssertFalse)" incoming="_emLJPM2iEeiCta8rX3fxAA" behavior="_emMVVc2iEeiCta8rX3fxAA">
                <argument xmi:id="_emLJPs2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(label)" incoming="_emLJOs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJP82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJQM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLJQc2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(condition)" incoming="_emLJO82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJQs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJQ82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJRM2iEeiCta8rX3fxAA" name="Tuple@39778b56" outgoing="_emLJPM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLJRc2iEeiCta8rX3fxAA" name="Value(&quot;issue hastype Pending&quot;)">
                  <result xmi:id="_emLJRs2iEeiCta8rX3fxAA" name="Value(&quot;issue hastype Pending&quot;).result" outgoing="_emLJOs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJR82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJSM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emLJSc2iEeiCta8rX3fxAA" value="issue hastype Pending">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emLJSs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Pending)" classifier="_emKhtM2iEeiCta8rX3fxAA" isDirect="true">
                  <object xmi:id="_emLJS82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Pending).object" incoming="_emLIFc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJTM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJTc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLJTs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Pending).result" outgoing="_emLJO82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJT82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJUM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJUc2iEeiCta8rX3fxAA" name="ExpressionStatement@79d4d59" incoming="_emLIGM2iEeiCta8rX3fxAA" outgoing="_emLIGs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJUs2iEeiCta8rX3fxAA" target="_emLJVs2iEeiCta8rX3fxAA" source="_emLJXs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJU82iEeiCta8rX3fxAA" target="_emLJWc2iEeiCta8rX3fxAA" source="_emLJZs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLJVM2iEeiCta8rX3fxAA" target="_emLJVc2iEeiCta8rX3fxAA" source="_emLJXM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLJVc2iEeiCta8rX3fxAA" name="Call(AssertFalse)" incoming="_emLJVM2iEeiCta8rX3fxAA" behavior="_emMVVc2iEeiCta8rX3fxAA">
                <argument xmi:id="_emLJVs2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(label)" incoming="_emLJUs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJV82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJWM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLJWc2iEeiCta8rX3fxAA" name="Call(AssertFalse).argument(condition)" incoming="_emLJU82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJWs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJW82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJXM2iEeiCta8rX3fxAA" name="Tuple@f06456e" outgoing="_emLJVM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLJXc2iEeiCta8rX3fxAA" name="Value(&quot;issue hastype Overdue&quot;)">
                  <result xmi:id="_emLJXs2iEeiCta8rX3fxAA" name="Value(&quot;issue hastype Overdue&quot;).result" outgoing="_emLJUs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJX82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJYM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emLJYc2iEeiCta8rX3fxAA" value="issue hastype Overdue">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emLJYs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Overdue)" classifier="_emKi4s2iEeiCta8rX3fxAA" isDirect="true">
                  <object xmi:id="_emLJY82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Overdue).object" incoming="_emLIF82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJZM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJZc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLJZs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Overdue).result" outgoing="_emLJU82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJZ82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJaM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJac2iEeiCta8rX3fxAA" name="ExpressionStatement@70e891d4" incoming="_emLIGs2iEeiCta8rX3fxAA" outgoing="_emLIHM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJas2iEeiCta8rX3fxAA" target="_emLJbs2iEeiCta8rX3fxAA" source="_emLJds2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJa82iEeiCta8rX3fxAA" target="_emLJcc2iEeiCta8rX3fxAA" source="_emLJfs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLJbM2iEeiCta8rX3fxAA" target="_emLJbc2iEeiCta8rX3fxAA" source="_emLJdM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLJbc2iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_emLJbM2iEeiCta8rX3fxAA" behavior="_emLwCs2iEeiCta8rX3fxAA">
                <argument xmi:id="_emLJbs2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_emLJas2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJb82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJcM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLJcc2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_emLJa82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJcs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJc82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJdM2iEeiCta8rX3fxAA" name="Tuple@66d911d3" outgoing="_emLJbM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLJdc2iEeiCta8rX3fxAA" name="Value(&quot;issue hastype Resolved&quot;)">
                  <result xmi:id="_emLJds2iEeiCta8rX3fxAA" name="Value(&quot;issue hastype Resolved&quot;).result" outgoing="_emLJas2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJd82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJeM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emLJec2iEeiCta8rX3fxAA" value="issue hastype Resolved">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emLJes2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Resolved)" classifier="_emLHYc2iEeiCta8rX3fxAA" isDirect="true">
                  <object xmi:id="_emLJe82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Resolved).object" incoming="_emLIGc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJfM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJfc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLJfs2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(Resolved).result" outgoing="_emLJa82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJf82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJgM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJgc2iEeiCta8rX3fxAA" name="ExpressionStatement@2bef4a03" incoming="_emLIHM2iEeiCta8rX3fxAA" outgoing="_emLIHc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJgs2iEeiCta8rX3fxAA" target="_emLJhs2iEeiCta8rX3fxAA" source="_emLJjs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJg82iEeiCta8rX3fxAA" target="_emLJic2iEeiCta8rX3fxAA" source="_emLJls2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLJhM2iEeiCta8rX3fxAA" target="_emLJhc2iEeiCta8rX3fxAA" source="_emLJjM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLJhc2iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_emLJhM2iEeiCta8rX3fxAA" behavior="_emLwCs2iEeiCta8rX3fxAA">
                <argument xmi:id="_emLJhs2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_emLJgs2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJh82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJiM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emLJic2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_emLJg82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJis2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJi82iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJjM2iEeiCta8rX3fxAA" name="Tuple@67e14226" outgoing="_emLJhM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLJjc2iEeiCta8rX3fxAA" name="Value(&quot;issue hastype InProcess&quot;)">
                  <result xmi:id="_emLJjs2iEeiCta8rX3fxAA" name="Value(&quot;issue hastype InProcess&quot;).result" outgoing="_emLJgs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJj82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJkM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emLJkc2iEeiCta8rX3fxAA" value="issue hastype InProcess">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emLJks2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(InProcess)" classifier="_emKiS82iEeiCta8rX3fxAA" isDirect="true">
                  <object xmi:id="_emLJk82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(InProcess).object" incoming="_emLIG82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJlM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJlc2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLJls2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(InProcess).result" outgoing="_emLJg82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJl82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJmM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJmc2iEeiCta8rX3fxAA" name="ExpressionStatement@2d0c1399" incoming="_emLIHc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJms2iEeiCta8rX3fxAA" target="_emLJns2iEeiCta8rX3fxAA" source="_emLJqc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJm82iEeiCta8rX3fxAA" target="_emLJrM2iEeiCta8rX3fxAA" source="_emLJos2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJnM2iEeiCta8rX3fxAA" target="_emLJps2iEeiCta8rX3fxAA" source="_emLJrM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_emLJnc2iEeiCta8rX3fxAA" name="Call(done)" operation="_emLvds2iEeiCta8rX3fxAA">
                <target xmi:id="_emLJns2iEeiCta8rX3fxAA" name="Call(done).target" incoming="_emLJms2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJn82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJoM2iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_emLJoc2iEeiCta8rX3fxAA" name="ReadSelf">
                <result xmi:id="_emLJos2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLJm82iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJo82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJpM2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emLJpc2iEeiCta8rX3fxAA" name="Read(outer)" structuralFeature="_emLH_M2iEeiCta8rX3fxAA">
                <object xmi:id="_emLJps2iEeiCta8rX3fxAA" name="Read(outer).object" incoming="_emLJnM2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJp82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJqM2iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_emLJqc2iEeiCta8rX3fxAA" name="Read(outer).result" outgoing="_emLJms2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJqs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJq82iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_emLJrM2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emLJm82iEeiCta8rX3fxAA" outgoing="_emLJnM2iEeiCta8rX3fxAA"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLJrc2iEeiCta8rX3fxAA" name="TestRunner$method$1" visibility="private" specification="_emLuTs2iEeiCta8rX3fxAA" node="_emLJt82iEeiCta8rX3fxAA _emLJuM2iEeiCta8rX3fxAA _emLJuc2iEeiCta8rX3fxAA _emLJus2iEeiCta8rX3fxAA" group="_emLJus2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emLJrs2iEeiCta8rX3fxAA" name="outer" type="_emLuZs2iEeiCta8rX3fxAA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJr82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJsM2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_emLJsc2iEeiCta8rX3fxAA" name="" type="_emLH-M2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJss2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJs82iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJtM2iEeiCta8rX3fxAA" target="_emLJuM2iEeiCta8rX3fxAA" source="_emLJt82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJtc2iEeiCta8rX3fxAA" target="_emLJ2M2iEeiCta8rX3fxAA" source="_emLJuM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJts2iEeiCta8rX3fxAA" target="_emLJuc2iEeiCta8rX3fxAA" source="_emLJ7c2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emLJus2iEeiCta8rX3fxAA" name="Body(TestRunner$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJu82iEeiCta8rX3fxAA" target="_emLJ7c2iEeiCta8rX3fxAA" source="_emLJ6s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJvM2iEeiCta8rX3fxAA" target="_emLJ782iEeiCta8rX3fxAA" source="_emLJ7c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLJvc2iEeiCta8rX3fxAA" target="_emLJxs2iEeiCta8rX3fxAA" source="_emLJ7s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJvs2iEeiCta8rX3fxAA" target="_emLJ882iEeiCta8rX3fxAA" source="_emLJ7c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJv82iEeiCta8rX3fxAA" target="_emLJ-s2iEeiCta8rX3fxAA" source="_emLJ9s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJwM2iEeiCta8rX3fxAA" target="_emLKBs2iEeiCta8rX3fxAA" source="_emLJ_c2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJwc2iEeiCta8rX3fxAA" target="_emLKDM2iEeiCta8rX3fxAA" source="_emLKAc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLJws2iEeiCta8rX3fxAA" target="_emLKEM2iEeiCta8rX3fxAA" source="_emLKD82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJw82iEeiCta8rX3fxAA" target="_emLKEM2iEeiCta8rX3fxAA" source="_emLKCc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLJxM2iEeiCta8rX3fxAA" target="_emLJ7s2iEeiCta8rX3fxAA" source="_emLKEM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emLJxc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJxs2iEeiCta8rX3fxAA" name="Body" incoming="_emLJvc2iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJx82iEeiCta8rX3fxAA" name="ExpressionStatement@6abc179b">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJyM2iEeiCta8rX3fxAA" target="_emLJ0s2iEeiCta8rX3fxAA" source="_emLJzs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJyc2iEeiCta8rX3fxAA" target="_emLJ282iEeiCta8rX3fxAA" source="_emLJ2M2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJys2iEeiCta8rX3fxAA" target="_emLJ382iEeiCta8rX3fxAA" source="_emLJ1c2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emLJy82iEeiCta8rX3fxAA" target="_emLJzM2iEeiCta8rX3fxAA" source="_emLJ6M2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJzM2iEeiCta8rX3fxAA" name="Expression(LeftHandSide@2f426e81)" incoming="_emLJy82iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_emLJzc2iEeiCta8rX3fxAA" name="ReadSelf">
                    <result xmi:id="_emLJzs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLJyM2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJz82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJ0M2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_emLJ0c2iEeiCta8rX3fxAA" name="Clear(outer)" structuralFeature="_emLH_M2iEeiCta8rX3fxAA">
                  <object xmi:id="_emLJ0s2iEeiCta8rX3fxAA" name="Clear(outer).object" incoming="_emLJyM2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJ082iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJ1M2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLJ1c2iEeiCta8rX3fxAA" name="Clear(outer).result" outgoing="_emLJys2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJ1s2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJ182iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_emLJ2M2iEeiCta8rX3fxAA" name="Fork(LeftHandSide@2f426e81)" incoming="_emLJtc2iEeiCta8rX3fxAA" outgoing="_emLJyc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJ2c2iEeiCta8rX3fxAA" name="WriteAll(TestRunner::outer)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLJ2s2iEeiCta8rX3fxAA" target="_emLJ5c2iEeiCta8rX3fxAA" source="_emLJ282iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emLJ282iEeiCta8rX3fxAA" name="WriteAll(TestRunner::outer).input(TestRunner::outer)" incoming="_emLJyc2iEeiCta8rX3fxAA" outgoing="_emLJ2s2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJ3M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJ3c2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emLJ3s2iEeiCta8rX3fxAA" name="Write(outer)" structuralFeature="_emLH_M2iEeiCta8rX3fxAA" isReplaceAll="true">
                    <object xmi:id="_emLJ382iEeiCta8rX3fxAA" name="Write(outer).object" incoming="_emLJys2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJ4M2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJ4c2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emLJ4s2iEeiCta8rX3fxAA" name="Write(outer).result" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJ482iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJ5M2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emLJ5c2iEeiCta8rX3fxAA" name="Write(outer).value" incoming="_emLJ2s2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJ5s2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJ582iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLJ6M2iEeiCta8rX3fxAA" name="RightHandSide@443f485a" outgoing="_emLJy82iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emLJ6c2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emLJ6s2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLJu82iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJ682iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJ7M2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emLJ7c2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emLJu82iEeiCta8rX3fxAA" outgoing="_emLJts2iEeiCta8rX3fxAA _emLJvM2iEeiCta8rX3fxAA _emLJvs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emLJ7s2iEeiCta8rX3fxAA" name="Call(TestRunner$initialization$1)" incoming="_emLJxM2iEeiCta8rX3fxAA" outgoing="_emLJvc2iEeiCta8rX3fxAA" operation="_emLuTc2iEeiCta8rX3fxAA">
              <target xmi:id="_emLJ782iEeiCta8rX3fxAA" name="Call(TestRunner$initialization$1).target" incoming="_emLJvM2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJ8M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJ8c2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emLJ8s2iEeiCta8rX3fxAA" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_emLH-c2iEeiCta8rX3fxAA">
              <object xmi:id="_emLJ882iEeiCta8rX3fxAA" name="Read(TestRunner$initializationFlag$1).object" incoming="_emLJvs2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJ9M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJ9c2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emLJ9s2iEeiCta8rX3fxAA" name="Read(TestRunner$initializationFlag$1).result" outgoing="_emLJv82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJ982iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJ-M2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLJ-c2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emLJ-s2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emLJv82iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJ-82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJ_M2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emLJ_c2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emLJwM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLJ_s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLJ_82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLKAM2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emLKAc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emLJwc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKAs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKA82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emLKBM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emLKBc2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emLKBs2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emLJwM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKB82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKCM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emLKCc2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emLJw82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKCs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKC82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emLKDM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emLJwc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKDc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKDs2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emLKD82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emLJws2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emLKEM2iEeiCta8rX3fxAA" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_emLJws2iEeiCta8rX3fxAA _emLJw82iEeiCta8rX3fxAA" outgoing="_emLJxM2iEeiCta8rX3fxAA" decisionInputFlow="_emLJw82iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emLJt82iEeiCta8rX3fxAA" name="Input(outer)" outgoing="_emLJtM2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" parameter="_emLJrs2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_emLJuM2iEeiCta8rX3fxAA" name="Fork(outer)" incoming="_emLJtM2iEeiCta8rX3fxAA" outgoing="_emLJtc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emLJuc2iEeiCta8rX3fxAA" name="Return" incoming="_emLJts2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" parameter="_emLJsc2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLKEc2iEeiCta8rX3fxAA" name="test$method$1" visibility="private" specification="_emLuVc2iEeiCta8rX3fxAA" node="_emLKHs2iEeiCta8rX3fxAA _emLKH82iEeiCta8rX3fxAA _emLKIM2iEeiCta8rX3fxAA _emLKIc2iEeiCta8rX3fxAA" group="_emLKIc2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emLKEs2iEeiCta8rX3fxAA" name="employee" type="_emJ7e82iEeiCta8rX3fxAA" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKE82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKFM2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_emLKFc2iEeiCta8rX3fxAA" name="monitor" type="_emJ5bc2iEeiCta8rX3fxAA" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKFs2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKF82iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_emLKGM2iEeiCta8rX3fxAA" name="issue" type="_emKhJM2iEeiCta8rX3fxAA" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKGc2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKGs2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKG82iEeiCta8rX3fxAA" target="_emLKHs2iEeiCta8rX3fxAA" source="_emLKMs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKHM2iEeiCta8rX3fxAA" target="_emLKH82iEeiCta8rX3fxAA" source="_emLKNc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKHc2iEeiCta8rX3fxAA" target="_emLKIM2iEeiCta8rX3fxAA" source="_emLKOM2iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emLKIc2iEeiCta8rX3fxAA" name="Body(test$method$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLKIs2iEeiCta8rX3fxAA" target="_emLKU82iEeiCta8rX3fxAA" source="_emLKO82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLKI82iEeiCta8rX3fxAA" target="_emLKa82iEeiCta8rX3fxAA" source="_emLKU82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKJM2iEeiCta8rX3fxAA" target="_emLKhc2iEeiCta8rX3fxAA" source="_emLKPc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLKJc2iEeiCta8rX3fxAA" target="_emLKg82iEeiCta8rX3fxAA" source="_emLKa82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKJs2iEeiCta8rX3fxAA" target="_emLKis2iEeiCta8rX3fxAA" source="_emLKPc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLKJ82iEeiCta8rX3fxAA" target="_emLKiM2iEeiCta8rX3fxAA" source="_emLKg82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKKM2iEeiCta8rX3fxAA" target="_emLKj82iEeiCta8rX3fxAA" source="_emLKPc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLKKc2iEeiCta8rX3fxAA" target="_emLKjc2iEeiCta8rX3fxAA" source="_emLKiM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKKs2iEeiCta8rX3fxAA" target="_emLKls2iEeiCta8rX3fxAA" source="_emLKVc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKK82iEeiCta8rX3fxAA" target="_emLKmc2iEeiCta8rX3fxAA" source="_emLKVc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLKLM2iEeiCta8rX3fxAA" target="_emLKks2iEeiCta8rX3fxAA" source="_emLKjc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKLc2iEeiCta8rX3fxAA" target="_emLKoM2iEeiCta8rX3fxAA" source="_emLKbc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLKLs2iEeiCta8rX3fxAA" target="_emLKns2iEeiCta8rX3fxAA" source="_emLKks2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKL82iEeiCta8rX3fxAA" target="_emLKMs2iEeiCta8rX3fxAA" source="_emLKPc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKMM2iEeiCta8rX3fxAA" target="_emLKNc2iEeiCta8rX3fxAA" source="_emLKVc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKMc2iEeiCta8rX3fxAA" target="_emLKOM2iEeiCta8rX3fxAA" source="_emLKbc2iEeiCta8rX3fxAA"/>
            <structuredNodeOutput xmi:id="_emLKMs2iEeiCta8rX3fxAA" name="Output(employee)" incoming="_emLKL82iEeiCta8rX3fxAA" outgoing="_emLKG82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKM82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKNM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_emLKNc2iEeiCta8rX3fxAA" name="Output(monitor)" incoming="_emLKMM2iEeiCta8rX3fxAA" outgoing="_emLKHM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKNs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKN82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_emLKOM2iEeiCta8rX3fxAA" name="Output(issue)" incoming="_emLKMc2iEeiCta8rX3fxAA" outgoing="_emLKHc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKOc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKOs2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKO82iEeiCta8rX3fxAA" name="ExpressionStatement@5e756c96" outgoing="_emLKIs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKPM2iEeiCta8rX3fxAA" target="_emLKPc2iEeiCta8rX3fxAA" source="_emLKSM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_emLKPc2iEeiCta8rX3fxAA" name="Fork(employee)@757df5f4" incoming="_emLKPM2iEeiCta8rX3fxAA" outgoing="_emLKJM2iEeiCta8rX3fxAA _emLKJs2iEeiCta8rX3fxAA _emLKKM2iEeiCta8rX3fxAA _emLKL82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKPs2iEeiCta8rX3fxAA" name="RightHandSide@62fef568">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKP82iEeiCta8rX3fxAA" target="_emLKUs2iEeiCta8rX3fxAA" source="_emLKQ82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKQM2iEeiCta8rX3fxAA" target="_emLKT82iEeiCta8rX3fxAA" source="_emLKUs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emLKQc2iEeiCta8rX3fxAA" target="_emLKRs2iEeiCta8rX3fxAA" source="_emLKQs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_emLKQs2iEeiCta8rX3fxAA" name="Create(Staff)" outgoing="_emLKQc2iEeiCta8rX3fxAA" classifier="_emJ8os2iEeiCta8rX3fxAA">
                  <result xmi:id="_emLKQ82iEeiCta8rX3fxAA" name="Create(Staff).result" outgoing="_emLKP82iEeiCta8rX3fxAA" type="_emJ8os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKRM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKRc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKRs2iEeiCta8rX3fxAA" name="Node(Call(Staff))" incoming="_emLKQc2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKR82iEeiCta8rX3fxAA" target="_emLKSM2iEeiCta8rX3fxAA" source="_emLKUs2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_emLKSM2iEeiCta8rX3fxAA" name="Output(Fork(Create(Staff).result))" incoming="_emLKR82iEeiCta8rX3fxAA" outgoing="_emLKPM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKSc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKSs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_emLKS82iEeiCta8rX3fxAA" name="Call(Staff)" operation="_emKgiM2iEeiCta8rX3fxAA">
                    <result xmi:id="_emLKTM2iEeiCta8rX3fxAA" name="Call(Staff).result()" type="_emJ8os2iEeiCta8rX3fxAA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKTc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKTs2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <target xmi:id="_emLKT82iEeiCta8rX3fxAA" name="Call(Staff).target" incoming="_emLKQM2iEeiCta8rX3fxAA" type="_emJ8os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKUM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKUc2iEeiCta8rX3fxAA" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_emLKUs2iEeiCta8rX3fxAA" name="Fork(Create(Staff).result)" incoming="_emLKP82iEeiCta8rX3fxAA" outgoing="_emLKQM2iEeiCta8rX3fxAA _emLKR82iEeiCta8rX3fxAA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKU82iEeiCta8rX3fxAA" name="ExpressionStatement@763e50f3" incoming="_emLKIs2iEeiCta8rX3fxAA" outgoing="_emLKI82iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKVM2iEeiCta8rX3fxAA" target="_emLKVc2iEeiCta8rX3fxAA" source="_emLKYM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_emLKVc2iEeiCta8rX3fxAA" name="Fork(monitor)@66b179b4" incoming="_emLKVM2iEeiCta8rX3fxAA" outgoing="_emLKKs2iEeiCta8rX3fxAA _emLKK82iEeiCta8rX3fxAA _emLKMM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKVs2iEeiCta8rX3fxAA" name="RightHandSide@21253afe">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKV82iEeiCta8rX3fxAA" target="_emLKas2iEeiCta8rX3fxAA" source="_emLKW82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKWM2iEeiCta8rX3fxAA" target="_emLKZ82iEeiCta8rX3fxAA" source="_emLKas2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emLKWc2iEeiCta8rX3fxAA" target="_emLKXs2iEeiCta8rX3fxAA" source="_emLKWs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_emLKWs2iEeiCta8rX3fxAA" name="Create(InActiveMonitor)" outgoing="_emLKWc2iEeiCta8rX3fxAA" classifier="_emJ5_c2iEeiCta8rX3fxAA">
                  <result xmi:id="_emLKW82iEeiCta8rX3fxAA" name="Create(InActiveMonitor).result" outgoing="_emLKV82iEeiCta8rX3fxAA" type="_emJ5_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKXM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKXc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKXs2iEeiCta8rX3fxAA" name="Node(Call(InActiveMonitor))" incoming="_emLKWc2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKX82iEeiCta8rX3fxAA" target="_emLKYM2iEeiCta8rX3fxAA" source="_emLKas2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_emLKYM2iEeiCta8rX3fxAA" name="Output(Fork(Create(InActiveMonitor).result))" incoming="_emLKX82iEeiCta8rX3fxAA" outgoing="_emLKVM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKYc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKYs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_emLKY82iEeiCta8rX3fxAA" name="Call(InActiveMonitor)" operation="_emJ6j82iEeiCta8rX3fxAA">
                    <result xmi:id="_emLKZM2iEeiCta8rX3fxAA" name="Call(InActiveMonitor).result()" type="_emJ5_c2iEeiCta8rX3fxAA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKZc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKZs2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <target xmi:id="_emLKZ82iEeiCta8rX3fxAA" name="Call(InActiveMonitor).target" incoming="_emLKWM2iEeiCta8rX3fxAA" type="_emJ5_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKaM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKac2iEeiCta8rX3fxAA" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_emLKas2iEeiCta8rX3fxAA" name="Fork(Create(InActiveMonitor).result)" incoming="_emLKV82iEeiCta8rX3fxAA" outgoing="_emLKWM2iEeiCta8rX3fxAA _emLKX82iEeiCta8rX3fxAA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKa82iEeiCta8rX3fxAA" name="ExpressionStatement@78c042a0" incoming="_emLKI82iEeiCta8rX3fxAA" outgoing="_emLKJc2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKbM2iEeiCta8rX3fxAA" target="_emLKbc2iEeiCta8rX3fxAA" source="_emLKeM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_emLKbc2iEeiCta8rX3fxAA" name="Fork(issue)@4808323" incoming="_emLKbM2iEeiCta8rX3fxAA" outgoing="_emLKLc2iEeiCta8rX3fxAA _emLKMc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKbs2iEeiCta8rX3fxAA" name="RightHandSide@3fc57cd">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKb82iEeiCta8rX3fxAA" target="_emLKgs2iEeiCta8rX3fxAA" source="_emLKc82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKcM2iEeiCta8rX3fxAA" target="_emLKf82iEeiCta8rX3fxAA" source="_emLKgs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emLKcc2iEeiCta8rX3fxAA" target="_emLKds2iEeiCta8rX3fxAA" source="_emLKcs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_emLKcs2iEeiCta8rX3fxAA" name="Create(Pending)" outgoing="_emLKcc2iEeiCta8rX3fxAA" classifier="_emKhtM2iEeiCta8rX3fxAA">
                  <result xmi:id="_emLKc82iEeiCta8rX3fxAA" name="Create(Pending).result" outgoing="_emLKb82iEeiCta8rX3fxAA" type="_emKhtM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKdM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKdc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKds2iEeiCta8rX3fxAA" name="Node(Call(Pending))" incoming="_emLKcc2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKd82iEeiCta8rX3fxAA" target="_emLKeM2iEeiCta8rX3fxAA" source="_emLKgs2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_emLKeM2iEeiCta8rX3fxAA" name="Output(Fork(Create(Pending).result))" incoming="_emLKd82iEeiCta8rX3fxAA" outgoing="_emLKbM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKec2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKes2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_emLKe82iEeiCta8rX3fxAA" name="Call(Pending)" operation="_emKiRs2iEeiCta8rX3fxAA">
                    <result xmi:id="_emLKfM2iEeiCta8rX3fxAA" name="Call(Pending).result()" type="_emKhtM2iEeiCta8rX3fxAA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKfc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKfs2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <target xmi:id="_emLKf82iEeiCta8rX3fxAA" name="Call(Pending).target" incoming="_emLKcM2iEeiCta8rX3fxAA" type="_emKhtM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKgM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKgc2iEeiCta8rX3fxAA" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_emLKgs2iEeiCta8rX3fxAA" name="Fork(Create(Pending).result)" incoming="_emLKb82iEeiCta8rX3fxAA" outgoing="_emLKcM2iEeiCta8rX3fxAA _emLKd82iEeiCta8rX3fxAA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKg82iEeiCta8rX3fxAA" name="ClassifyStatement@75fc259d" incoming="_emLKJc2iEeiCta8rX3fxAA" outgoing="_emLKJ82iEeiCta8rX3fxAA">
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_emLKhM2iEeiCta8rX3fxAA" name="Reclassify(* to Administrator)" isReplaceAll="true" newClassifier="_emJ8C82iEeiCta8rX3fxAA">
                <object xmi:id="_emLKhc2iEeiCta8rX3fxAA" name="Reclassify(* to Administrator).object" incoming="_emLKJM2iEeiCta8rX3fxAA" type="_emJ8os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKhs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKh82iEeiCta8rX3fxAA" value="1"/>
                </object>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKiM2iEeiCta8rX3fxAA" name="ClassifyStatement@75a4cdd8" incoming="_emLKJ82iEeiCta8rX3fxAA" outgoing="_emLKKc2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_emLKic2iEeiCta8rX3fxAA" name="Reclassify( to PartTime)" newClassifier="_emKgjc2iEeiCta8rX3fxAA">
                <object xmi:id="_emLKis2iEeiCta8rX3fxAA" name="Reclassify( to PartTime).object" incoming="_emLKJs2iEeiCta8rX3fxAA" type="_emJ8os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKi82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKjM2iEeiCta8rX3fxAA" value="1"/>
                </object>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKjc2iEeiCta8rX3fxAA" name="ClassifyStatement@364a65d" incoming="_emLKKc2iEeiCta8rX3fxAA" outgoing="_emLKLM2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_emLKjs2iEeiCta8rX3fxAA" name="Reclassify(Administrator to )" oldClassifier="_emJ8C82iEeiCta8rX3fxAA">
                <object xmi:id="_emLKj82iEeiCta8rX3fxAA" name="Reclassify(Administrator to ).object" incoming="_emLKKM2iEeiCta8rX3fxAA" type="_emJ8os2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKkM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKkc2iEeiCta8rX3fxAA" value="1"/>
                </object>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKks2iEeiCta8rX3fxAA" name="ClassifyStatement@5872b503" incoming="_emLKLM2iEeiCta8rX3fxAA" outgoing="_emLKLs2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLKk82iEeiCta8rX3fxAA" target="_emLKms2iEeiCta8rX3fxAA" source="_emLKlc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKlM2iEeiCta8rX3fxAA" target="_emLKm82iEeiCta8rX3fxAA" source="_emLKmc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_emLKlc2iEeiCta8rX3fxAA" name="Reclassify(InActiveMonitor to ActiveMonitor)" outgoing="_emLKk82iEeiCta8rX3fxAA" newClassifier="_emJ6lM2iEeiCta8rX3fxAA" oldClassifier="_emJ5_c2iEeiCta8rX3fxAA">
                <object xmi:id="_emLKls2iEeiCta8rX3fxAA" name="Reclassify(InActiveMonitor to ActiveMonitor).object" incoming="_emLKKs2iEeiCta8rX3fxAA" type="_emJ5_c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKl82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKmM2iEeiCta8rX3fxAA" value="1"/>
                </object>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_emLKmc2iEeiCta8rX3fxAA" name="Fork(Fork(monitor)@66b179b4)" incoming="_emLKK82iEeiCta8rX3fxAA" outgoing="_emLKlM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_emLKms2iEeiCta8rX3fxAA" name="Start(any)" incoming="_emLKk82iEeiCta8rX3fxAA" isSynchronous="false">
                <object xmi:id="_emLKm82iEeiCta8rX3fxAA" name="Start(any).object" incoming="_emLKlM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKnM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKnc2iEeiCta8rX3fxAA" value="1"/>
                </object>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKns2iEeiCta8rX3fxAA" name="ClassifyStatement@5ec885f9" incoming="_emLKLs2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_emLKn82iEeiCta8rX3fxAA" name="Reclassify(Pending,Overdue to Resolved,InProcess)" newClassifier="_emLHYc2iEeiCta8rX3fxAA _emKiS82iEeiCta8rX3fxAA" oldClassifier="_emKhtM2iEeiCta8rX3fxAA _emKi4s2iEeiCta8rX3fxAA">
                <object xmi:id="_emLKoM2iEeiCta8rX3fxAA" name="Reclassify(Pending,Overdue to Resolved,InProcess).object" incoming="_emLKLc2iEeiCta8rX3fxAA" type="_emKhtM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKoc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKos2iEeiCta8rX3fxAA" value="1"/>
                </object>
              </node>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emLKHs2iEeiCta8rX3fxAA" name="Output(employee)" incoming="_emLKG82iEeiCta8rX3fxAA" type="_emJ7e82iEeiCta8rX3fxAA" parameter="_emLKEs2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emLKH82iEeiCta8rX3fxAA" name="Output(monitor)" incoming="_emLKHM2iEeiCta8rX3fxAA" type="_emJ5bc2iEeiCta8rX3fxAA" parameter="_emLKFc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emLKIM2iEeiCta8rX3fxAA" name="Output(issue)" incoming="_emLKHc2iEeiCta8rX3fxAA" type="_emKhJM2iEeiCta8rX3fxAA" parameter="_emLKGM2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLKo82iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emLuX82iEeiCta8rX3fxAA" node="_emLKpM2iEeiCta8rX3fxAA" group="_emLKpM2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emLKpM2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLKpc2iEeiCta8rX3fxAA" name="TestRunner$initialization$1" visibility="private" specification="_emLuTc2iEeiCta8rX3fxAA" node="_emLKps2iEeiCta8rX3fxAA" group="_emLKps2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emLKps2iEeiCta8rX3fxAA" name="Body(TestRunner$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKp82iEeiCta8rX3fxAA" target="_emLKtc2iEeiCta8rX3fxAA" source="_emLKss2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKqM2iEeiCta8rX3fxAA" target="_emLuIM2iEeiCta8rX3fxAA" source="_emLKtc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKqc2iEeiCta8rX3fxAA" target="_emLuL82iEeiCta8rX3fxAA" source="_emLKtc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKqs2iEeiCta8rX3fxAA" target="_emLuNs2iEeiCta8rX3fxAA" source="_emLuMs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKq82iEeiCta8rX3fxAA" target="_emLuQs2iEeiCta8rX3fxAA" source="_emLuOc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKrM2iEeiCta8rX3fxAA" target="_emLuSM2iEeiCta8rX3fxAA" source="_emLuPc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLKrc2iEeiCta8rX3fxAA" target="_emLuTM2iEeiCta8rX3fxAA" source="_emLuS82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKrs2iEeiCta8rX3fxAA" target="_emLuTM2iEeiCta8rX3fxAA" source="_emLuRc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLKr82iEeiCta8rX3fxAA" target="_emLKts2iEeiCta8rX3fxAA" source="_emLuTM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emLKsM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emLKsc2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emLKss2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLKp82iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKs82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKtM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emLKtc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emLKp82iEeiCta8rX3fxAA" outgoing="_emLKqM2iEeiCta8rX3fxAA _emLKqc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKts2iEeiCta8rX3fxAA" name="Initialization" incoming="_emLKr82iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLKt82iEeiCta8rX3fxAA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKuM2iEeiCta8rX3fxAA" target="_emLuLc2iEeiCta8rX3fxAA" source="_emLKus2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLKuc2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emLKus2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emLKuM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLKu82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLKvM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emLKvc2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emLKvs2iEeiCta8rX3fxAA" name="Iterate(Write(TestRunner$initializationFlag$1))" inputElement="_emLuLc2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKv82iEeiCta8rX3fxAA" target="_emLuKs2iEeiCta8rX3fxAA" source="_emLuLc2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLKwM2iEeiCta8rX3fxAA" target="_emLuJM2iEeiCta8rX3fxAA" source="_emLuIM2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emLuIM2iEeiCta8rX3fxAA" name="Iterate(Write(TestRunner$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emLKqM2iEeiCta8rX3fxAA" outgoing="_emLKwM2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuIc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuIs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emLuI82iEeiCta8rX3fxAA" name="Write(TestRunner$initializationFlag$1)" structuralFeature="_emLH-c2iEeiCta8rX3fxAA">
                    <object xmi:id="_emLuJM2iEeiCta8rX3fxAA" name="Write(TestRunner$initializationFlag$1).object" incoming="_emLKwM2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuJc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuJs2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emLuJ82iEeiCta8rX3fxAA" name="Write(TestRunner$initializationFlag$1).result" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuKM2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuKc2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emLuKs2iEeiCta8rX3fxAA" name="Write(TestRunner$initializationFlag$1).value" incoming="_emLKv82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuK82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuLM2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emLuLc2iEeiCta8rX3fxAA" name="Iterate(Write(TestRunner$initializationFlag$1)).inputElement" incoming="_emLKuM2iEeiCta8rX3fxAA" outgoing="_emLKv82iEeiCta8rX3fxAA" regionAsInput="_emLKvs2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emLuLs2iEeiCta8rX3fxAA" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_emLH-c2iEeiCta8rX3fxAA">
              <object xmi:id="_emLuL82iEeiCta8rX3fxAA" name="Read(TestRunner$initializationFlag$1).object" incoming="_emLKqc2iEeiCta8rX3fxAA" type="_emLH-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuMM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuMc2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emLuMs2iEeiCta8rX3fxAA" name="Read(TestRunner$initializationFlag$1).result" outgoing="_emLKqs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuM82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuNM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLuNc2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emLuNs2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emLKqs2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuN82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuOM2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emLuOc2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emLKq82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuOs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuO82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLuPM2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emLuPc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emLKrM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuPs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuP82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emLuQM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emLuQc2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emLuQs2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emLKq82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuQ82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuRM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emLuRc2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emLKrs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuRs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuR82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emLuSM2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emLKrM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuSc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuSs2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emLuS82iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emLKrc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emLuTM2iEeiCta8rX3fxAA" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_emLKrc2iEeiCta8rX3fxAA _emLKrs2iEeiCta8rX3fxAA" outgoing="_emLKr82iEeiCta8rX3fxAA" decisionInputFlow="_emLKrs2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emLuTc2iEeiCta8rX3fxAA" name="TestRunner$initialization$1" visibility="protected" method="_emLKpc2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emLuTs2iEeiCta8rX3fxAA" name="TestRunner" visibility="public" method="_emLJrc2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emLuT82iEeiCta8rX3fxAA" name="outer" visibility="package" type="_emLuZs2iEeiCta8rX3fxAA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuUM2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuUc2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_emLuUs2iEeiCta8rX3fxAA" name="" visibility="package" type="_emLH-M2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuU82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuVM2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_emLuVc2iEeiCta8rX3fxAA" name="test" visibility="public" method="_emLKEc2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emLuVs2iEeiCta8rX3fxAA" name="employee" visibility="package" type="_emJ7e82iEeiCta8rX3fxAA" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuV82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuWM2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_emLuWc2iEeiCta8rX3fxAA" name="monitor" visibility="package" type="_emJ5bc2iEeiCta8rX3fxAA" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuWs2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuW82iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_emLuXM2iEeiCta8rX3fxAA" name="issue" visibility="package" type="_emKhJM2iEeiCta8rX3fxAA" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuXc2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuXs2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_emLuX82iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emLKo82iEeiCta8rX3fxAA"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_emLuYM2iEeiCta8rX3fxAA" name="Start" visibility="public"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_emLuYc2iEeiCta8rX3fxAA" name="Continue" visibility="public"/>
        <ownedReception xmi:id="_emLuYs2iEeiCta8rX3fxAA" name="Start" signal="_emLuYM2iEeiCta8rX3fxAA"/>
        <ownedReception xmi:id="_emLuY82iEeiCta8rX3fxAA" name="Continue" signal="_emLuYc2iEeiCta8rX3fxAA"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_emLuZM2iEeiCta8rX3fxAA" name="Event(Start)" visibility="public" signal="_emLuYM2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_emLuZc2iEeiCta8rX3fxAA" name="Event(Continue)" visibility="public" signal="_emLuYc2iEeiCta8rX3fxAA"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_emLuZs2iEeiCta8rX3fxAA" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_emLuZ82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_emLuaM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_emLuac2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_emLuas2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_emLua82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_emLubM2iEeiCta8rX3fxAA" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLubc2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLubs2iEeiCta8rX3fxAA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_emLub82iEeiCta8rX3fxAA" name="tester" visibility="private" type="_emLveM2iEeiCta8rX3fxAA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLucM2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLucc2iEeiCta8rX3fxAA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLucs2iEeiCta8rX3fxAA" name="Test$method$1" visibility="private" specification="_emLva82iEeiCta8rX3fxAA" node="_emLufM2iEeiCta8rX3fxAA _emLufc2iEeiCta8rX3fxAA _emLufs2iEeiCta8rX3fxAA _emLuf82iEeiCta8rX3fxAA" group="_emLuf82iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_emLuc82iEeiCta8rX3fxAA" name="tester" type="_emLveM2iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLudM2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLudc2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_emLuds2iEeiCta8rX3fxAA" name="" type="_emLuZs2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLud82iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLueM2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emLuec2iEeiCta8rX3fxAA" target="_emLufc2iEeiCta8rX3fxAA" source="_emLufM2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emLues2iEeiCta8rX3fxAA" target="_emLunc2iEeiCta8rX3fxAA" source="_emLufc2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emLue82iEeiCta8rX3fxAA" target="_emLufs2iEeiCta8rX3fxAA" source="_emLuuc2iEeiCta8rX3fxAA"/>
        <structuredNode xmi:id="_emLuf82iEeiCta8rX3fxAA" name="Body(Test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLugM2iEeiCta8rX3fxAA" target="_emLuuc2iEeiCta8rX3fxAA" source="_emLuts2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLugc2iEeiCta8rX3fxAA" target="_emLuu82iEeiCta8rX3fxAA" source="_emLuuc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emLugs2iEeiCta8rX3fxAA" target="_emLui82iEeiCta8rX3fxAA" source="_emLuus2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLug82iEeiCta8rX3fxAA" target="_emLuv82iEeiCta8rX3fxAA" source="_emLuuc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLuhM2iEeiCta8rX3fxAA" target="_emLuxs2iEeiCta8rX3fxAA" source="_emLuws2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLuhc2iEeiCta8rX3fxAA" target="_emLu0s2iEeiCta8rX3fxAA" source="_emLuyc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLuhs2iEeiCta8rX3fxAA" target="_emLu2M2iEeiCta8rX3fxAA" source="_emLuzc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emLuh82iEeiCta8rX3fxAA" target="_emLu3M2iEeiCta8rX3fxAA" source="_emLu282iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLuiM2iEeiCta8rX3fxAA" target="_emLu3M2iEeiCta8rX3fxAA" source="_emLu1c2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emLuic2iEeiCta8rX3fxAA" target="_emLuus2iEeiCta8rX3fxAA" source="_emLu3M2iEeiCta8rX3fxAA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_emLuis2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLui82iEeiCta8rX3fxAA" name="Body" incoming="_emLugs2iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLujM2iEeiCta8rX3fxAA" name="ExpressionStatement@770983e0">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLujc2iEeiCta8rX3fxAA" target="_emLul82iEeiCta8rX3fxAA" source="_emLuk82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLujs2iEeiCta8rX3fxAA" target="_emLuoM2iEeiCta8rX3fxAA" source="_emLunc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLuj82iEeiCta8rX3fxAA" target="_emLups2iEeiCta8rX3fxAA" source="_emLums2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLukM2iEeiCta8rX3fxAA" target="_emLukc2iEeiCta8rX3fxAA" source="_emLutM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLukc2iEeiCta8rX3fxAA" name="Expression(LeftHandSide@5e29a492)" incoming="_emLukM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_emLuks2iEeiCta8rX3fxAA" name="ReadSelf">
                  <result xmi:id="_emLuk82iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLujc2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLulM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLulc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_emLuls2iEeiCta8rX3fxAA" name="Clear(tester)" structuralFeature="_emLub82iEeiCta8rX3fxAA">
                <object xmi:id="_emLul82iEeiCta8rX3fxAA" name="Clear(tester).object" incoming="_emLujc2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLumM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLumc2iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_emLums2iEeiCta8rX3fxAA" name="Clear(tester).result" outgoing="_emLuj82iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLum82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLunM2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_emLunc2iEeiCta8rX3fxAA" name="Fork(LeftHandSide@5e29a492)" incoming="_emLues2iEeiCta8rX3fxAA" outgoing="_emLujs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLuns2iEeiCta8rX3fxAA" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLun82iEeiCta8rX3fxAA" target="_emLus82iEeiCta8rX3fxAA" source="_emLuoM2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_emLuoM2iEeiCta8rX3fxAA" name="WriteAll(Test::tester).input(Test::tester)" incoming="_emLujs2iEeiCta8rX3fxAA" outgoing="_emLun82iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuoc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuos2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emLuo82iEeiCta8rX3fxAA" name="Iterate(Write(tester))" inputElement="_emLus82iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLupM2iEeiCta8rX3fxAA" target="_emLusM2iEeiCta8rX3fxAA" source="_emLus82iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLupc2iEeiCta8rX3fxAA" target="_emLuqs2iEeiCta8rX3fxAA" source="_emLups2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emLups2iEeiCta8rX3fxAA" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_emLuj82iEeiCta8rX3fxAA" outgoing="_emLupc2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLup82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuqM2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emLuqc2iEeiCta8rX3fxAA" name="Write(tester)" structuralFeature="_emLub82iEeiCta8rX3fxAA">
                    <object xmi:id="_emLuqs2iEeiCta8rX3fxAA" name="Write(tester).object" incoming="_emLupc2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuq82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLurM2iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emLurc2iEeiCta8rX3fxAA" name="Write(tester).result" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLurs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLur82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emLusM2iEeiCta8rX3fxAA" name="Write(tester).value" incoming="_emLupM2iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLusc2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuss2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emLus82iEeiCta8rX3fxAA" name="Iterate(Write(tester)).inputElement" incoming="_emLun82iEeiCta8rX3fxAA" outgoing="_emLupM2iEeiCta8rX3fxAA" regionAsInput="_emLuo82iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLutM2iEeiCta8rX3fxAA" name="RightHandSide@627b9c7d" outgoing="_emLukM2iEeiCta8rX3fxAA"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_emLutc2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_emLuts2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLugM2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLut82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuuM2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_emLuuc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emLugM2iEeiCta8rX3fxAA" outgoing="_emLue82iEeiCta8rX3fxAA _emLugc2iEeiCta8rX3fxAA _emLug82iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_emLuus2iEeiCta8rX3fxAA" name="Call(Test$initialization$1)" incoming="_emLuic2iEeiCta8rX3fxAA" outgoing="_emLugs2iEeiCta8rX3fxAA" operation="_emLvas2iEeiCta8rX3fxAA">
            <target xmi:id="_emLuu82iEeiCta8rX3fxAA" name="Call(Test$initialization$1).target" incoming="_emLugc2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuvM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuvc2iEeiCta8rX3fxAA" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emLuvs2iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1)" structuralFeature="_emLubM2iEeiCta8rX3fxAA">
            <object xmi:id="_emLuv82iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1).object" incoming="_emLug82iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuwM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuwc2iEeiCta8rX3fxAA" value="1"/>
            </object>
            <result xmi:id="_emLuws2iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1).result" outgoing="_emLuhM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuw82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuxM2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLuxc2iEeiCta8rX3fxAA" name="Call(ListSize)">
            <argument xmi:id="_emLuxs2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emLuhM2iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLux82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuyM2iEeiCta8rX3fxAA" value="*"/>
            </argument>
            <result xmi:id="_emLuyc2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emLuhc2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuys2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuy82iEeiCta8rX3fxAA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLuzM2iEeiCta8rX3fxAA" name="Value(0)">
            <result xmi:id="_emLuzc2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emLuhs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLuzs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLuz82iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_emLu0M2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_emLu0c2iEeiCta8rX3fxAA" name="Test(Size==0)">
            <first xmi:id="_emLu0s2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emLuhc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLu082iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLu1M2iEeiCta8rX3fxAA" value="1"/>
            </first>
            <result xmi:id="_emLu1c2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emLuiM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLu1s2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLu182iEeiCta8rX3fxAA" value="1"/>
            </result>
            <second xmi:id="_emLu2M2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emLuhs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLu2c2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLu2s2iEeiCta8rX3fxAA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_emLu282iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emLuh82iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_emLu3M2iEeiCta8rX3fxAA" name="Decision(Test(Test$initializationFlag$1))" incoming="_emLuh82iEeiCta8rX3fxAA _emLuiM2iEeiCta8rX3fxAA" outgoing="_emLuic2iEeiCta8rX3fxAA" decisionInputFlow="_emLuiM2iEeiCta8rX3fxAA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_emLufM2iEeiCta8rX3fxAA" name="Input(tester)" outgoing="_emLuec2iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" parameter="_emLuc82iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_emLufc2iEeiCta8rX3fxAA" name="Fork(tester)" incoming="_emLuec2iEeiCta8rX3fxAA" outgoing="_emLues2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_emLufs2iEeiCta8rX3fxAA" name="Return" incoming="_emLue82iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" parameter="_emLuds2iEeiCta8rX3fxAA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLu3c2iEeiCta8rX3fxAA" name="done$method$1" visibility="private" specification="_emLvcs2iEeiCta8rX3fxAA" node="_emLu482iEeiCta8rX3fxAA _emLu5M2iEeiCta8rX3fxAA _emLu5c2iEeiCta8rX3fxAA" group="_emLu5c2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_emLu3s2iEeiCta8rX3fxAA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLu382iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLu4M2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emLu4c2iEeiCta8rX3fxAA" target="_emLu5M2iEeiCta8rX3fxAA" source="_emLu482iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emLu4s2iEeiCta8rX3fxAA" target="_emLu6c2iEeiCta8rX3fxAA" source="_emLu5M2iEeiCta8rX3fxAA"/>
        <structuredNode xmi:id="_emLu5c2iEeiCta8rX3fxAA" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_emLu5s2iEeiCta8rX3fxAA" target="_emLu782iEeiCta8rX3fxAA" source="_emLu582iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLu582iEeiCta8rX3fxAA" name="ExpressionStatement@9be56f1" outgoing="_emLu5s2iEeiCta8rX3fxAA">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLu6M2iEeiCta8rX3fxAA" name="Call(WriteLine)">
              <argument xmi:id="_emLu6c2iEeiCta8rX3fxAA" name="Call(WriteLine).argument(value)" incoming="_emLu4s2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLu6s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLu682iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_emLu7M2iEeiCta8rX3fxAA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLu7c2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLu7s2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLu782iEeiCta8rX3fxAA" name="ExpressionStatement@70113bbf" incoming="_emLu5s2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLu8M2iEeiCta8rX3fxAA" target="_emLu-M2iEeiCta8rX3fxAA" source="_emLvBM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLu8c2iEeiCta8rX3fxAA" target="_emLu8s2iEeiCta8rX3fxAA" source="_emLu-c2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_emLu8s2iEeiCta8rX3fxAA" name="Collect(SendSignal(Continue))" incoming="_emLu8c2iEeiCta8rX3fxAA" mode="parallel" inputElement="_emLu-M2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLu882iEeiCta8rX3fxAA" target="_emLu9c2iEeiCta8rX3fxAA" source="_emLu-M2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_emLu9M2iEeiCta8rX3fxAA" name="SendSignal(Continue)" signal="_emLwCM2iEeiCta8rX3fxAA">
                <target xmi:id="_emLu9c2iEeiCta8rX3fxAA" name="SendSignal(Continue).target" incoming="_emLu882iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLu9s2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLu982iEeiCta8rX3fxAA" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_emLu-M2iEeiCta8rX3fxAA" name="Collect(SendSignal(Continue)).inputElement" incoming="_emLu8M2iEeiCta8rX3fxAA" outgoing="_emLu882iEeiCta8rX3fxAA" regionAsInput="_emLu8s2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLu-c2iEeiCta8rX3fxAA" name="Feature(Read(tester).result)" outgoing="_emLu8c2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLu-s2iEeiCta8rX3fxAA" target="_emLvB82iEeiCta8rX3fxAA" source="_emLu_c2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLu-82iEeiCta8rX3fxAA" target="_emLvAc2iEeiCta8rX3fxAA" source="_emLvB82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_emLu_M2iEeiCta8rX3fxAA" name="ReadSelf">
                <result xmi:id="_emLu_c2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLu-s2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLu_s2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLu_82iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emLvAM2iEeiCta8rX3fxAA" name="Read(tester)" structuralFeature="_emLub82iEeiCta8rX3fxAA">
                <object xmi:id="_emLvAc2iEeiCta8rX3fxAA" name="Read(tester).object" incoming="_emLu-82iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvAs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvA82iEeiCta8rX3fxAA" value="1"/>
                </object>
                <result xmi:id="_emLvBM2iEeiCta8rX3fxAA" name="Read(tester).result" outgoing="_emLu8M2iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvBc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvBs2iEeiCta8rX3fxAA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_emLvB82iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emLu-s2iEeiCta8rX3fxAA" outgoing="_emLu-82iEeiCta8rX3fxAA"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_emLu482iEeiCta8rX3fxAA" name="Input(message)" outgoing="_emLu4c2iEeiCta8rX3fxAA" parameter="_emLu3s2iEeiCta8rX3fxAA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_emLu5M2iEeiCta8rX3fxAA" name="Fork(message)" incoming="_emLu4c2iEeiCta8rX3fxAA" outgoing="_emLu4s2iEeiCta8rX3fxAA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLvCM2iEeiCta8rX3fxAA" name="done$method$2" visibility="private" specification="_emLvds2iEeiCta8rX3fxAA" node="_emLvCc2iEeiCta8rX3fxAA" group="_emLvCc2iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_emLvCc2iEeiCta8rX3fxAA" name="Body(done$method$2)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLvCs2iEeiCta8rX3fxAA" name="ExpressionStatement@51a5637a">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvC82iEeiCta8rX3fxAA" target="_emLvD82iEeiCta8rX3fxAA" source="_emLvF82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLvDM2iEeiCta8rX3fxAA" target="_emLvDs2iEeiCta8rX3fxAA" source="_emLvFc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvDc2iEeiCta8rX3fxAA" target="_emLvEs2iEeiCta8rX3fxAA" source="_emLvHM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emLvDs2iEeiCta8rX3fxAA" name="Call(done)" incoming="_emLvDM2iEeiCta8rX3fxAA" operation="_emLvcs2iEeiCta8rX3fxAA">
              <argument xmi:id="_emLvD82iEeiCta8rX3fxAA" name="Call(done).argument(message)" incoming="_emLvC82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvEM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvEc2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <target xmi:id="_emLvEs2iEeiCta8rX3fxAA" name="Call(done).target" incoming="_emLvDc2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvE82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvFM2iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLvFc2iEeiCta8rX3fxAA" name="Tuple@2a533171" outgoing="_emLvDM2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLvFs2iEeiCta8rX3fxAA" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_emLvF82iEeiCta8rX3fxAA" name="Value(&quot;Done.&quot;).result" outgoing="_emLvC82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvGM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvGc2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_emLvGs2iEeiCta8rX3fxAA" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emLvG82iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emLvHM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLvDc2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvHc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvHs2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLvH82iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emLvd82iEeiCta8rX3fxAA" node="_emLvIM2iEeiCta8rX3fxAA" group="_emLvIM2iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_emLvIM2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLvIc2iEeiCta8rX3fxAA" name="Test$initialization$1" visibility="private" specification="_emLvas2iEeiCta8rX3fxAA" node="_emLvIs2iEeiCta8rX3fxAA" group="_emLvIs2iEeiCta8rX3fxAA">
        <structuredNode xmi:id="_emLvIs2iEeiCta8rX3fxAA" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvI82iEeiCta8rX3fxAA" target="_emLvMc2iEeiCta8rX3fxAA" source="_emLvLs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvJM2iEeiCta8rX3fxAA" target="_emLvPc2iEeiCta8rX3fxAA" source="_emLvMc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvJc2iEeiCta8rX3fxAA" target="_emLvTM2iEeiCta8rX3fxAA" source="_emLvMc2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvJs2iEeiCta8rX3fxAA" target="_emLvU82iEeiCta8rX3fxAA" source="_emLvT82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvJ82iEeiCta8rX3fxAA" target="_emLvX82iEeiCta8rX3fxAA" source="_emLvVs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvKM2iEeiCta8rX3fxAA" target="_emLvZc2iEeiCta8rX3fxAA" source="_emLvWs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emLvKc2iEeiCta8rX3fxAA" target="_emLvac2iEeiCta8rX3fxAA" source="_emLvaM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvKs2iEeiCta8rX3fxAA" target="_emLvac2iEeiCta8rX3fxAA" source="_emLvYs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emLvK82iEeiCta8rX3fxAA" target="_emLvMs2iEeiCta8rX3fxAA" source="_emLvac2iEeiCta8rX3fxAA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_emLvLM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_emLvLc2iEeiCta8rX3fxAA" name="ReadSelf">
            <result xmi:id="_emLvLs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLvI82iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvL82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvMM2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_emLvMc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emLvI82iEeiCta8rX3fxAA" outgoing="_emLvJM2iEeiCta8rX3fxAA _emLvJc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLvMs2iEeiCta8rX3fxAA" name="Initialization" incoming="_emLvK82iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLvM82iEeiCta8rX3fxAA" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvNM2iEeiCta8rX3fxAA" target="_emLvSs2iEeiCta8rX3fxAA" source="_emLvNs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLvNc2iEeiCta8rX3fxAA" name="Value(true)">
                <result xmi:id="_emLvNs2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emLvNM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvN82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvOM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_emLvOc2iEeiCta8rX3fxAA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_emLvOs2iEeiCta8rX3fxAA" name="Iterate(Write(Test$initializationFlag$1))" inputElement="_emLvSs2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvO82iEeiCta8rX3fxAA" target="_emLvR82iEeiCta8rX3fxAA" source="_emLvSs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvPM2iEeiCta8rX3fxAA" target="_emLvQc2iEeiCta8rX3fxAA" source="_emLvPc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_emLvPc2iEeiCta8rX3fxAA" name="Iterate(Write(Test$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emLvJM2iEeiCta8rX3fxAA" outgoing="_emLvPM2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvPs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvP82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emLvQM2iEeiCta8rX3fxAA" name="Write(Test$initializationFlag$1)" structuralFeature="_emLubM2iEeiCta8rX3fxAA">
                  <object xmi:id="_emLvQc2iEeiCta8rX3fxAA" name="Write(Test$initializationFlag$1).object" incoming="_emLvPM2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvQs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvQ82iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emLvRM2iEeiCta8rX3fxAA" name="Write(Test$initializationFlag$1).result" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvRc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvRs2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:id="_emLvR82iEeiCta8rX3fxAA" name="Write(Test$initializationFlag$1).value" incoming="_emLvO82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvSM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvSc2iEeiCta8rX3fxAA" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_emLvSs2iEeiCta8rX3fxAA" name="Iterate(Write(Test$initializationFlag$1)).inputElement" incoming="_emLvNM2iEeiCta8rX3fxAA" outgoing="_emLvO82iEeiCta8rX3fxAA" regionAsInput="_emLvOs2iEeiCta8rX3fxAA"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emLvS82iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1)" structuralFeature="_emLubM2iEeiCta8rX3fxAA">
            <object xmi:id="_emLvTM2iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1).object" incoming="_emLvJc2iEeiCta8rX3fxAA" type="_emLuZs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvTc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvTs2iEeiCta8rX3fxAA" value="1"/>
            </object>
            <result xmi:id="_emLvT82iEeiCta8rX3fxAA" name="Read(Test$initializationFlag$1).result" outgoing="_emLvJs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvUM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvUc2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLvUs2iEeiCta8rX3fxAA" name="Call(ListSize)">
            <argument xmi:id="_emLvU82iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emLvJs2iEeiCta8rX3fxAA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvVM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvVc2iEeiCta8rX3fxAA" value="*"/>
            </argument>
            <result xmi:id="_emLvVs2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emLvJ82iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvV82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvWM2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLvWc2iEeiCta8rX3fxAA" name="Value(0)">
            <result xmi:id="_emLvWs2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emLvKM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvW82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvXM2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_emLvXc2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_emLvXs2iEeiCta8rX3fxAA" name="Test(Size==0)">
            <first xmi:id="_emLvX82iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emLvJ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvYM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvYc2iEeiCta8rX3fxAA" value="1"/>
            </first>
            <result xmi:id="_emLvYs2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emLvKs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvY82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvZM2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <second xmi:id="_emLvZc2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emLvKM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvZs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvZ82iEeiCta8rX3fxAA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_emLvaM2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emLvKc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_emLvac2iEeiCta8rX3fxAA" name="Decision(Test(Test$initializationFlag$1))" incoming="_emLvKc2iEeiCta8rX3fxAA _emLvKs2iEeiCta8rX3fxAA" outgoing="_emLvK82iEeiCta8rX3fxAA" decisionInputFlow="_emLvKs2iEeiCta8rX3fxAA"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_emLvas2iEeiCta8rX3fxAA" name="Test$initialization$1" visibility="protected" method="_emLvIc2iEeiCta8rX3fxAA"/>
      <ownedOperation xmi:id="_emLva82iEeiCta8rX3fxAA" name="Test" visibility="protected" method="_emLucs2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_emLvbM2iEeiCta8rX3fxAA" name="tester" visibility="package" type="_emLveM2iEeiCta8rX3fxAA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvbc2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvbs2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_emLvb82iEeiCta8rX3fxAA" name="" visibility="package" type="_emLuZs2iEeiCta8rX3fxAA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvcM2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvcc2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_emLvcs2iEeiCta8rX3fxAA" name="done" visibility="public" method="_emLu3c2iEeiCta8rX3fxAA">
        <ownedParameter xmi:id="_emLvc82iEeiCta8rX3fxAA" name="message" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvdM2iEeiCta8rX3fxAA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvdc2iEeiCta8rX3fxAA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_emLvds2iEeiCta8rX3fxAA" name="done" visibility="public" method="_emLvCM2iEeiCta8rX3fxAA"/>
      <ownedOperation xmi:id="_emLvd82iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emLvH82iEeiCta8rX3fxAA"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_emLveM2iEeiCta8rX3fxAA" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_emLvec2iEeiCta8rX3fxAA" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLves2iEeiCta8rX3fxAA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLve82iEeiCta8rX3fxAA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLvfM2iEeiCta8rX3fxAA" name="Tester$method$1" visibility="private" specification="_emLwA82iEeiCta8rX3fxAA" node="_emLvgc2iEeiCta8rX3fxAA _emLvgs2iEeiCta8rX3fxAA" group="_emLvgs2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emLvfc2iEeiCta8rX3fxAA" name="" type="_emLveM2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvfs2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvf82iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvgM2iEeiCta8rX3fxAA" target="_emLvgc2iEeiCta8rX3fxAA" source="_emLvk82iEeiCta8rX3fxAA"/>
          <structuredNode xmi:id="_emLvgs2iEeiCta8rX3fxAA" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvg82iEeiCta8rX3fxAA" target="_emLvk82iEeiCta8rX3fxAA" source="_emLvkM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvhM2iEeiCta8rX3fxAA" target="_emLvlc2iEeiCta8rX3fxAA" source="_emLvk82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLvhc2iEeiCta8rX3fxAA" target="_emLvjs2iEeiCta8rX3fxAA" source="_emLvlM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvhs2iEeiCta8rX3fxAA" target="_emLvmc2iEeiCta8rX3fxAA" source="_emLvk82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvh82iEeiCta8rX3fxAA" target="_emLvoM2iEeiCta8rX3fxAA" source="_emLvnM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLviM2iEeiCta8rX3fxAA" target="_emLvrM2iEeiCta8rX3fxAA" source="_emLvo82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvic2iEeiCta8rX3fxAA" target="_emLvss2iEeiCta8rX3fxAA" source="_emLvp82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLvis2iEeiCta8rX3fxAA" target="_emLvts2iEeiCta8rX3fxAA" source="_emLvtc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvi82iEeiCta8rX3fxAA" target="_emLvts2iEeiCta8rX3fxAA" source="_emLvr82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLvjM2iEeiCta8rX3fxAA" target="_emLvlM2iEeiCta8rX3fxAA" source="_emLvts2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emLvjc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLvjs2iEeiCta8rX3fxAA" name="Body" incoming="_emLvhc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emLvj82iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emLvkM2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLvg82iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvkc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvks2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emLvk82iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emLvg82iEeiCta8rX3fxAA" outgoing="_emLvgM2iEeiCta8rX3fxAA _emLvhM2iEeiCta8rX3fxAA _emLvhs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emLvlM2iEeiCta8rX3fxAA" name="Call(Tester$initialization$1)" incoming="_emLvjM2iEeiCta8rX3fxAA" outgoing="_emLvhc2iEeiCta8rX3fxAA" operation="_emLwAs2iEeiCta8rX3fxAA">
              <target xmi:id="_emLvlc2iEeiCta8rX3fxAA" name="Call(Tester$initialization$1).target" incoming="_emLvhM2iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvls2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvl82iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emLvmM2iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1)" structuralFeature="_emLvec2iEeiCta8rX3fxAA">
              <object xmi:id="_emLvmc2iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1).object" incoming="_emLvhs2iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvms2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvm82iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emLvnM2iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1).result" outgoing="_emLvh82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvnc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvns2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLvn82iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emLvoM2iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emLvh82iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvoc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvos2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emLvo82iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emLviM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvpM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvpc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLvps2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emLvp82iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emLvic2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvqM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvqc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emLvqs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emLvq82iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emLvrM2iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emLviM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvrc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvrs2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emLvr82iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emLvi82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvsM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvsc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emLvss2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emLvic2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvs82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvtM2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emLvtc2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emLvis2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emLvts2iEeiCta8rX3fxAA" name="Decision(Test(Tester$initializationFlag$1))" incoming="_emLvis2iEeiCta8rX3fxAA _emLvi82iEeiCta8rX3fxAA" outgoing="_emLvjM2iEeiCta8rX3fxAA" decisionInputFlow="_emLvi82iEeiCta8rX3fxAA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_emLvgc2iEeiCta8rX3fxAA" name="Return" incoming="_emLvgM2iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" parameter="_emLvfc2iEeiCta8rX3fxAA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLvt82iEeiCta8rX3fxAA" name="destroy$method$1" visibility="private" specification="_emLwB82iEeiCta8rX3fxAA" node="_emLvuM2iEeiCta8rX3fxAA" group="_emLvuM2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emLvuM2iEeiCta8rX3fxAA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_emLvuc2iEeiCta8rX3fxAA" name="Tester$initialization$1" visibility="private" specification="_emLwAs2iEeiCta8rX3fxAA" node="_emLvus2iEeiCta8rX3fxAA" group="_emLvus2iEeiCta8rX3fxAA">
          <structuredNode xmi:id="_emLvus2iEeiCta8rX3fxAA" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvu82iEeiCta8rX3fxAA" target="_emLvyc2iEeiCta8rX3fxAA" source="_emLvxs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvvM2iEeiCta8rX3fxAA" target="_emLv1c2iEeiCta8rX3fxAA" source="_emLvyc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvvc2iEeiCta8rX3fxAA" target="_emLv5M2iEeiCta8rX3fxAA" source="_emLvyc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvvs2iEeiCta8rX3fxAA" target="_emLv682iEeiCta8rX3fxAA" source="_emLv582iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvv82iEeiCta8rX3fxAA" target="_emLv982iEeiCta8rX3fxAA" source="_emLv7s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvwM2iEeiCta8rX3fxAA" target="_emLv_c2iEeiCta8rX3fxAA" source="_emLv8s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLvwc2iEeiCta8rX3fxAA" target="_emLwAc2iEeiCta8rX3fxAA" source="_emLwAM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvws2iEeiCta8rX3fxAA" target="_emLwAc2iEeiCta8rX3fxAA" source="_emLv-s2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLvw82iEeiCta8rX3fxAA" target="_emLvys2iEeiCta8rX3fxAA" source="_emLwAc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emLvxM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_emLvxc2iEeiCta8rX3fxAA" name="ReadSelf">
              <result xmi:id="_emLvxs2iEeiCta8rX3fxAA" name="ReadSelf.result" outgoing="_emLvu82iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvx82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLvyM2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emLvyc2iEeiCta8rX3fxAA" name="Fork(ReadSelf.result)" incoming="_emLvu82iEeiCta8rX3fxAA" outgoing="_emLvvM2iEeiCta8rX3fxAA _emLvvc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLvys2iEeiCta8rX3fxAA" name="Initialization" incoming="_emLvw82iEeiCta8rX3fxAA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLvy82iEeiCta8rX3fxAA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLvzM2iEeiCta8rX3fxAA" target="_emLv4s2iEeiCta8rX3fxAA" source="_emLvzs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLvzc2iEeiCta8rX3fxAA" name="Value(true)">
                  <result xmi:id="_emLvzs2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emLvzM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLvz82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLv0M2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_emLv0c2iEeiCta8rX3fxAA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_emLv0s2iEeiCta8rX3fxAA" name="Iterate(Write(Tester$initializationFlag$1))" inputElement="_emLv4s2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLv082iEeiCta8rX3fxAA" target="_emLv382iEeiCta8rX3fxAA" source="_emLv4s2iEeiCta8rX3fxAA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emLv1M2iEeiCta8rX3fxAA" target="_emLv2c2iEeiCta8rX3fxAA" source="_emLv1c2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emLv1c2iEeiCta8rX3fxAA" name="Iterate(Write(Tester$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_emLvvM2iEeiCta8rX3fxAA" outgoing="_emLv1M2iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLv1s2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLv182iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_emLv2M2iEeiCta8rX3fxAA" name="Write(Tester$initializationFlag$1)" structuralFeature="_emLvec2iEeiCta8rX3fxAA">
                    <object xmi:id="_emLv2c2iEeiCta8rX3fxAA" name="Write(Tester$initializationFlag$1).object" incoming="_emLv1M2iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLv2s2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLv282iEeiCta8rX3fxAA" value="1"/>
                    </object>
                    <result xmi:id="_emLv3M2iEeiCta8rX3fxAA" name="Write(Tester$initializationFlag$1).result" type="_emLveM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLv3c2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLv3s2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:id="_emLv382iEeiCta8rX3fxAA" name="Write(Tester$initializationFlag$1).value" incoming="_emLv082iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLv4M2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLv4c2iEeiCta8rX3fxAA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_emLv4s2iEeiCta8rX3fxAA" name="Iterate(Write(Tester$initializationFlag$1)).inputElement" incoming="_emLvzM2iEeiCta8rX3fxAA" outgoing="_emLv082iEeiCta8rX3fxAA" regionAsInput="_emLv0s2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_emLv482iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1)" structuralFeature="_emLvec2iEeiCta8rX3fxAA">
              <object xmi:id="_emLv5M2iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1).object" incoming="_emLvvc2iEeiCta8rX3fxAA" type="_emLveM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLv5c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLv5s2iEeiCta8rX3fxAA" value="1"/>
              </object>
              <result xmi:id="_emLv582iEeiCta8rX3fxAA" name="Read(Tester$initializationFlag$1).result" outgoing="_emLvvs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLv6M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLv6c2iEeiCta8rX3fxAA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLv6s2iEeiCta8rX3fxAA" name="Call(ListSize)">
              <argument xmi:id="_emLv682iEeiCta8rX3fxAA" name="Call(ListSize).argument(list)" incoming="_emLvvs2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLv7M2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLv7c2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emLv7s2iEeiCta8rX3fxAA" name="Call(ListSize).result(result)" outgoing="_emLvv82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLv782iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLv8M2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLv8c2iEeiCta8rX3fxAA" name="Value(0)">
              <result xmi:id="_emLv8s2iEeiCta8rX3fxAA" name="Value(0).result" outgoing="_emLvwM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLv882iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLv9M2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_emLv9c2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emLv9s2iEeiCta8rX3fxAA" name="Test(Size==0)">
              <first xmi:id="_emLv982iEeiCta8rX3fxAA" name="Test(Size==0).first" incoming="_emLvv82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLv-M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLv-c2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emLv-s2iEeiCta8rX3fxAA" name="Test(Size==0).result" outgoing="_emLvws2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLv-82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLv_M2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emLv_c2iEeiCta8rX3fxAA" name="Test(Size==0).second" incoming="_emLvwM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLv_s2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLv_82iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emLwAM2iEeiCta8rX3fxAA" name="InitialNode" outgoing="_emLvwc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emLwAc2iEeiCta8rX3fxAA" name="Decision(Test(Tester$initializationFlag$1))" incoming="_emLvwc2iEeiCta8rX3fxAA _emLvws2iEeiCta8rX3fxAA" outgoing="_emLvw82iEeiCta8rX3fxAA" decisionInputFlow="_emLvws2iEeiCta8rX3fxAA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_emLwAs2iEeiCta8rX3fxAA" name="Tester$initialization$1" visibility="protected" method="_emLvuc2iEeiCta8rX3fxAA"/>
        <ownedOperation xmi:id="_emLwA82iEeiCta8rX3fxAA" name="Tester" visibility="public" method="_emLvfM2iEeiCta8rX3fxAA">
          <ownedParameter xmi:id="_emLwBM2iEeiCta8rX3fxAA" name="" visibility="package" type="_emLveM2iEeiCta8rX3fxAA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwBc2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwBs2iEeiCta8rX3fxAA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_emLwB82iEeiCta8rX3fxAA" name="destroy" visibility="public" method="_emLvt82iEeiCta8rX3fxAA"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_emLwCM2iEeiCta8rX3fxAA" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_emLwCc2iEeiCta8rX3fxAA" name="Continue" signal="_emLwCM2iEeiCta8rX3fxAA"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_emLwCs2iEeiCta8rX3fxAA" name="AssertTrue" visibility="public" node="_emLwHs2iEeiCta8rX3fxAA _emLwH82iEeiCta8rX3fxAA _emLwIM2iEeiCta8rX3fxAA _emLwIc2iEeiCta8rX3fxAA _emLwIs2iEeiCta8rX3fxAA" group="_emLwIs2iEeiCta8rX3fxAA">
      <packageImport xmi:id="_emLwC82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_emLwDM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_emLwDc2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_emLwDs2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_emLwD82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_emLwEM2iEeiCta8rX3fxAA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwEc2iEeiCta8rX3fxAA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwEs2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_emLwE82iEeiCta8rX3fxAA" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwFM2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwFc2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwFs2iEeiCta8rX3fxAA" target="_emLwH82iEeiCta8rX3fxAA" source="_emLwHs2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwF82iEeiCta8rX3fxAA" target="_emLwIc2iEeiCta8rX3fxAA" source="_emLwIM2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwGM2iEeiCta8rX3fxAA" target="_emLwQM2iEeiCta8rX3fxAA" source="_emLwIc2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwGc2iEeiCta8rX3fxAA" target="_emLwaM2iEeiCta8rX3fxAA" source="_emLwH82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwGs2iEeiCta8rX3fxAA" target="_emLwf82iEeiCta8rX3fxAA" source="_emLwIc2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwG82iEeiCta8rX3fxAA" target="_emMVMM2iEeiCta8rX3fxAA" source="_emLwH82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwHM2iEeiCta8rX3fxAA" target="_emMVPc2iEeiCta8rX3fxAA" source="_emLwIc2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwHc2iEeiCta8rX3fxAA" target="_emMVRc2iEeiCta8rX3fxAA" source="_emLwH82iEeiCta8rX3fxAA"/>
      <structuredNode xmi:id="_emLwIs2iEeiCta8rX3fxAA" name="Body(AssertTrue)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwI82iEeiCta8rX3fxAA" target="_emMVU82iEeiCta8rX3fxAA" source="_emMVTc2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwJM2iEeiCta8rX3fxAA" target="_emMVVM2iEeiCta8rX3fxAA" source="_emMVUM2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_emLwJc2iEeiCta8rX3fxAA" name="IfStatement@1bcc606d">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLwJs2iEeiCta8rX3fxAA" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwJ82iEeiCta8rX3fxAA" target="_emLwN82iEeiCta8rX3fxAA" source="_emLwQM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwKM2iEeiCta8rX3fxAA" target="_emLwQs2iEeiCta8rX3fxAA" source="_emLwQM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwKc2iEeiCta8rX3fxAA" target="_emLwSM2iEeiCta8rX3fxAA" source="_emLwRc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwKs2iEeiCta8rX3fxAA" target="_emLwSc2iEeiCta8rX3fxAA" source="_emLwOs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwK82iEeiCta8rX3fxAA" target="_emLwSs2iEeiCta8rX3fxAA" source="_emLwSM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwLM2iEeiCta8rX3fxAA" target="_emLwSs2iEeiCta8rX3fxAA" source="_emLwSM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwLc2iEeiCta8rX3fxAA" target="_emLwSc2iEeiCta8rX3fxAA" source="_emLwSs2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emLwLs2iEeiCta8rX3fxAA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwL82iEeiCta8rX3fxAA" target="_emLwPc2iEeiCta8rX3fxAA" source="_emLwMs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwMM2iEeiCta8rX3fxAA" target="_emLwTM2iEeiCta8rX3fxAA" source="_emLwSc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLwMc2iEeiCta8rX3fxAA" name="Value(true)">
              <result xmi:id="_emLwMs2iEeiCta8rX3fxAA" name="Value(true).result" outgoing="_emLwL82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwM82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwNM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_emLwNc2iEeiCta8rX3fxAA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emLwNs2iEeiCta8rX3fxAA" name="Test(==)">
              <first xmi:id="_emLwN82iEeiCta8rX3fxAA" name="Test(==).first" incoming="_emLwJ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwOM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwOc2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emLwOs2iEeiCta8rX3fxAA" name="Test(==).result" outgoing="_emLwKs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwO82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwPM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emLwPc2iEeiCta8rX3fxAA" name="Test(==).second" incoming="_emLwL82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwPs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwP82iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emLwQM2iEeiCta8rX3fxAA" name="Fork(Fork(condition))" incoming="_emLwGM2iEeiCta8rX3fxAA" outgoing="_emLwJ82iEeiCta8rX3fxAA _emLwKM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLwQc2iEeiCta8rX3fxAA" name="Call(NotEmpty)">
              <argument xmi:id="_emLwQs2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_emLwKM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwQ82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwRM2iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emLwRc2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_emLwKc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwRs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwR82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emLwSM2iEeiCta8rX3fxAA" name="Fork(Call(NotEmpty).result())" incoming="_emLwKc2iEeiCta8rX3fxAA" outgoing="_emLwK82iEeiCta8rX3fxAA _emLwLM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_emLwSc2iEeiCta8rX3fxAA" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_emLwKs2iEeiCta8rX3fxAA _emLwLc2iEeiCta8rX3fxAA" outgoing="_emLwMM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emLwSs2iEeiCta8rX3fxAA" name="Decision(Call(NotEmpty).result())" incoming="_emLwK82iEeiCta8rX3fxAA _emLwLM2iEeiCta8rX3fxAA" outgoing="_emLwLc2iEeiCta8rX3fxAA" decisionInputFlow="_emLwLM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLwS82iEeiCta8rX3fxAA" name="Call(Not)">
              <argument xmi:id="_emLwTM2iEeiCta8rX3fxAA" name="Call(Not).argument(x)" incoming="_emLwMM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwTc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwTs2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_emLwT82iEeiCta8rX3fxAA" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwUM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwUc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLwUs2iEeiCta8rX3fxAA" name="ExpressionStatement@73f7e241">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwU82iEeiCta8rX3fxAA" target="_emLwVs2iEeiCta8rX3fxAA" source="_emLwcM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emLwVM2iEeiCta8rX3fxAA" target="_emLwVc2iEeiCta8rX3fxAA" source="_emLwXM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLwVc2iEeiCta8rX3fxAA" name="Call(WriteLine)" incoming="_emLwVM2iEeiCta8rX3fxAA">
              <argument xmi:id="_emLwVs2iEeiCta8rX3fxAA" name="Call(WriteLine).argument(value)" incoming="_emLwU82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwV82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwWM2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_emLwWc2iEeiCta8rX3fxAA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwWs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwW82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLwXM2iEeiCta8rX3fxAA" name="Tuple@6d19a109" outgoing="_emLwVM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwXc2iEeiCta8rX3fxAA" target="_emLwdM2iEeiCta8rX3fxAA" source="_emLwYs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwXs2iEeiCta8rX3fxAA" target="_emLwd82iEeiCta8rX3fxAA" source="_emLwa82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLwX82iEeiCta8rX3fxAA" target="_emLwbs2iEeiCta8rX3fxAA" source="_emLwYc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emLwYM2iEeiCta8rX3fxAA" target="_emLwbs2iEeiCta8rX3fxAA" source="_emLwZs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emLwYc2iEeiCta8rX3fxAA" name="Value(&quot;FAILED: &quot;)" outgoing="_emLwX82iEeiCta8rX3fxAA">
                <result xmi:id="_emLwYs2iEeiCta8rX3fxAA" name="Value(&quot;FAILED: &quot;).result" outgoing="_emLwXc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwY82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwZM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_emLwZc2iEeiCta8rX3fxAA" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLwZs2iEeiCta8rX3fxAA" name="Passthru(Fork(label))" outgoing="_emLwYM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwZ82iEeiCta8rX3fxAA" target="_emLwa82iEeiCta8rX3fxAA" source="_emLwaM2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_emLwaM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_emLwGc2iEeiCta8rX3fxAA" outgoing="_emLwZ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwac2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwas2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_emLwa82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_emLwZ82iEeiCta8rX3fxAA" outgoing="_emLwXs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwbM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwbc2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLwbs2iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_emLwX82iEeiCta8rX3fxAA _emLwYM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwb82iEeiCta8rX3fxAA" target="_emLwcM2iEeiCta8rX3fxAA" source="_emLwes2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_emLwcM2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_emLwb82iEeiCta8rX3fxAA" outgoing="_emLwU82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwcc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwcs2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_emLwc82iEeiCta8rX3fxAA" name="Call(Concat)">
                  <argument xmi:id="_emLwdM2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_emLwXc2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwdc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwds2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_emLwd82iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_emLwXs2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLweM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwec2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_emLwes2iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_emLwb82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwe82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwfM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLwfc2iEeiCta8rX3fxAA" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwfs2iEeiCta8rX3fxAA" target="_emLwgs2iEeiCta8rX3fxAA" source="_emLwf82iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_emLwf82iEeiCta8rX3fxAA" name="Passthru(Fork(condition)).input" incoming="_emLwGs2iEeiCta8rX3fxAA" outgoing="_emLwfs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwgM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwgc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_emLwgs2iEeiCta8rX3fxAA" name="Passthru(Fork(condition)).output" incoming="_emLwfs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emLwg82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emLwhM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emLwhc2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emLwhs2iEeiCta8rX3fxAA" target="_emMVM82iEeiCta8rX3fxAA" source="_emMVMM2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_emMVMM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_emLwG82iEeiCta8rX3fxAA" outgoing="_emLwhs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVMc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVMs2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_emMVM82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_emLwhs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVNM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVNc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMVNs2iEeiCta8rX3fxAA" name="Value(true)">
            <result xmi:id="_emMVN82iEeiCta8rX3fxAA" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVOM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVOc2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_emMVOs2iEeiCta8rX3fxAA" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMVO82iEeiCta8rX3fxAA" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVPM2iEeiCta8rX3fxAA" target="_emMVQM2iEeiCta8rX3fxAA" source="_emMVPc2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_emMVPc2iEeiCta8rX3fxAA" name="Passthru(Fork(condition)).input" incoming="_emLwHM2iEeiCta8rX3fxAA" outgoing="_emMVPM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVPs2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVP82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_emMVQM2iEeiCta8rX3fxAA" name="Passthru(Fork(condition)).output" incoming="_emMVPM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVQc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVQs2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMVQ82iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVRM2iEeiCta8rX3fxAA" target="_emMVSM2iEeiCta8rX3fxAA" source="_emMVRc2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_emMVRc2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_emLwHc2iEeiCta8rX3fxAA" outgoing="_emMVRM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVRs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVR82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_emMVSM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_emMVRM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVSc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVSs2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_emMVS82iEeiCta8rX3fxAA" body="_emLwUs2iEeiCta8rX3fxAA _emLwfc2iEeiCta8rX3fxAA _emLwhc2iEeiCta8rX3fxAA" bodyOutput="_emLwgs2iEeiCta8rX3fxAA _emMVM82iEeiCta8rX3fxAA" decider="_emLwT82iEeiCta8rX3fxAA" successorClause="_emMVTM2iEeiCta8rX3fxAA" test="_emLwJs2iEeiCta8rX3fxAA"/>
          <clause xmi:id="_emMVTM2iEeiCta8rX3fxAA" body="_emMVO82iEeiCta8rX3fxAA _emMVQ82iEeiCta8rX3fxAA" bodyOutput="_emMVQM2iEeiCta8rX3fxAA _emMVSM2iEeiCta8rX3fxAA" decider="_emMVN82iEeiCta8rX3fxAA" predecessorClause="_emMVS82iEeiCta8rX3fxAA" test="_emMVNs2iEeiCta8rX3fxAA"/>
          <result xmi:id="_emMVTc2iEeiCta8rX3fxAA" name="IfStatement@1bcc606d.result(condition)" outgoing="_emLwI82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVTs2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVT82iEeiCta8rX3fxAA" value="1"/>
          </result>
          <result xmi:id="_emMVUM2iEeiCta8rX3fxAA" name="IfStatement@1bcc606d.result(label)" outgoing="_emLwJM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVUc2iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVUs2iEeiCta8rX3fxAA" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_emMVU82iEeiCta8rX3fxAA" name="Fork(condition)" incoming="_emLwI82iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_emMVVM2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_emLwJM2iEeiCta8rX3fxAA"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_emLwHs2iEeiCta8rX3fxAA" name="Input(label)" outgoing="_emLwFs2iEeiCta8rX3fxAA" parameter="_emLwEM2iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_emLwH82iEeiCta8rX3fxAA" name="Fork(label)" incoming="_emLwFs2iEeiCta8rX3fxAA" outgoing="_emLwGc2iEeiCta8rX3fxAA _emLwG82iEeiCta8rX3fxAA _emLwHc2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_emLwIM2iEeiCta8rX3fxAA" name="Input(condition)" outgoing="_emLwF82iEeiCta8rX3fxAA" parameter="_emLwE82iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_emLwIc2iEeiCta8rX3fxAA" name="Fork(condition)" incoming="_emLwF82iEeiCta8rX3fxAA" outgoing="_emLwGM2iEeiCta8rX3fxAA _emLwGs2iEeiCta8rX3fxAA _emLwHM2iEeiCta8rX3fxAA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_emMVVc2iEeiCta8rX3fxAA" name="AssertFalse" visibility="public" node="_emMVZs2iEeiCta8rX3fxAA _emMVZ82iEeiCta8rX3fxAA _emMVaM2iEeiCta8rX3fxAA _emMVac2iEeiCta8rX3fxAA _emMVas2iEeiCta8rX3fxAA" group="_emMVas2iEeiCta8rX3fxAA">
      <elementImport xmi:id="_emMVVs2iEeiCta8rX3fxAA" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_emMVV82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_emMVWM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_emMVWc2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_emMVWs2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_emMVW82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_emMVXM2iEeiCta8rX3fxAA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVXc2iEeiCta8rX3fxAA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVXs2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_emMVX82iEeiCta8rX3fxAA" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVYM2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVYc2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVYs2iEeiCta8rX3fxAA" target="_emMVZ82iEeiCta8rX3fxAA" source="_emMVZs2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVY82iEeiCta8rX3fxAA" target="_emMVac2iEeiCta8rX3fxAA" source="_emMVaM2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVZM2iEeiCta8rX3fxAA" target="_emMVi82iEeiCta8rX3fxAA" source="_emMVZ82iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVZc2iEeiCta8rX3fxAA" target="_emMVr82iEeiCta8rX3fxAA" source="_emMVac2iEeiCta8rX3fxAA"/>
      <structuredNode xmi:id="_emMVas2iEeiCta8rX3fxAA" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMVa82iEeiCta8rX3fxAA" name="ExpressionStatement@569a2cbf">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVbM2iEeiCta8rX3fxAA" target="_emMVcM2iEeiCta8rX3fxAA" source="_emMVk82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVbc2iEeiCta8rX3fxAA" target="_emMVc82iEeiCta8rX3fxAA" source="_emMVuM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emMVbs2iEeiCta8rX3fxAA" target="_emMVb82iEeiCta8rX3fxAA" source="_emMVds2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMVb82iEeiCta8rX3fxAA" name="Call(AssertTrue)" incoming="_emMVbs2iEeiCta8rX3fxAA" behavior="_emLwCs2iEeiCta8rX3fxAA">
            <argument xmi:id="_emMVcM2iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(label)" incoming="_emMVbM2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVcc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVcs2iEeiCta8rX3fxAA" value="1"/>
            </argument>
            <argument xmi:id="_emMVc82iEeiCta8rX3fxAA" name="Call(AssertTrue).argument(condition)" incoming="_emMVbc2iEeiCta8rX3fxAA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVdM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVdc2iEeiCta8rX3fxAA" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMVds2iEeiCta8rX3fxAA" name="Tuple@bf2b104" outgoing="_emMVbs2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVd82iEeiCta8rX3fxAA" target="_emMVl82iEeiCta8rX3fxAA" source="_emMVhc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVeM2iEeiCta8rX3fxAA" target="_emMVms2iEeiCta8rX3fxAA" source="_emMVjs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emMVec2iEeiCta8rX3fxAA" target="_emMVkc2iEeiCta8rX3fxAA" source="_emMVhM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emMVes2iEeiCta8rX3fxAA" target="_emMVkc2iEeiCta8rX3fxAA" source="_emMVic2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVe82iEeiCta8rX3fxAA" target="_emMVps2iEeiCta8rX3fxAA" source="_emMVr82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVfM2iEeiCta8rX3fxAA" target="_emMVsc2iEeiCta8rX3fxAA" source="_emMVr82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVfc2iEeiCta8rX3fxAA" target="_emMVt82iEeiCta8rX3fxAA" source="_emMVtM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVfs2iEeiCta8rX3fxAA" target="_emMVuM2iEeiCta8rX3fxAA" source="_emMVqc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVf82iEeiCta8rX3fxAA" target="_emMVuc2iEeiCta8rX3fxAA" source="_emMVt82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVgM2iEeiCta8rX3fxAA" target="_emMVuc2iEeiCta8rX3fxAA" source="_emMVt82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVgc2iEeiCta8rX3fxAA" target="_emMVuM2iEeiCta8rX3fxAA" source="_emMVuc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emMVgs2iEeiCta8rX3fxAA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVg82iEeiCta8rX3fxAA" target="_emMVrM2iEeiCta8rX3fxAA" source="_emMVoc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMVhM2iEeiCta8rX3fxAA" name="Value(&quot;! &quot;)" outgoing="_emMVec2iEeiCta8rX3fxAA">
              <result xmi:id="_emMVhc2iEeiCta8rX3fxAA" name="Value(&quot;! &quot;).result" outgoing="_emMVd82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVhs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVh82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_emMViM2iEeiCta8rX3fxAA" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMVic2iEeiCta8rX3fxAA" name="Passthru(Fork(label))" outgoing="_emMVes2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVis2iEeiCta8rX3fxAA" target="_emMVjs2iEeiCta8rX3fxAA" source="_emMVi82iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_emMVi82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_emMVZM2iEeiCta8rX3fxAA" outgoing="_emMVis2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVjM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVjc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_emMVjs2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_emMVis2iEeiCta8rX3fxAA" outgoing="_emMVeM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVj82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVkM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMVkc2iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_emMVec2iEeiCta8rX3fxAA _emMVes2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVks2iEeiCta8rX3fxAA" target="_emMVk82iEeiCta8rX3fxAA" source="_emMVnc2iEeiCta8rX3fxAA"/>
              <structuredNodeOutput xmi:id="_emMVk82iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_emMVks2iEeiCta8rX3fxAA" outgoing="_emMVbM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVlM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVlc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMVls2iEeiCta8rX3fxAA" name="Call(Concat)">
                <argument xmi:id="_emMVl82iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_emMVd82iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVmM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVmc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <argument xmi:id="_emMVms2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_emMVeM2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVm82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVnM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
                <result xmi:id="_emMVnc2iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_emMVks2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVns2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVn82iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMVoM2iEeiCta8rX3fxAA" name="Value(false)">
              <result xmi:id="_emMVoc2iEeiCta8rX3fxAA" name="Value(false).result" outgoing="_emMVg82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVos2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVo82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_emMVpM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emMVpc2iEeiCta8rX3fxAA" name="Test(==)">
              <first xmi:id="_emMVps2iEeiCta8rX3fxAA" name="Test(==).first" incoming="_emMVe82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVp82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVqM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emMVqc2iEeiCta8rX3fxAA" name="Test(==).result" outgoing="_emMVfs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVqs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVq82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emMVrM2iEeiCta8rX3fxAA" name="Test(==).second" incoming="_emMVg82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVrc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVrs2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emMVr82iEeiCta8rX3fxAA" name="Fork(Fork(condition))" incoming="_emMVZc2iEeiCta8rX3fxAA" outgoing="_emMVe82iEeiCta8rX3fxAA _emMVfM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMVsM2iEeiCta8rX3fxAA" name="Call(NotEmpty)">
              <argument xmi:id="_emMVsc2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_emMVfM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVss2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVs82iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emMVtM2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_emMVfc2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVtc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVts2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emMVt82iEeiCta8rX3fxAA" name="Fork(Call(NotEmpty).result())" incoming="_emMVfc2iEeiCta8rX3fxAA" outgoing="_emMVf82iEeiCta8rX3fxAA _emMVgM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_emMVuM2iEeiCta8rX3fxAA" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_emMVfs2iEeiCta8rX3fxAA _emMVgc2iEeiCta8rX3fxAA" outgoing="_emMVbc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emMVuc2iEeiCta8rX3fxAA" name="Decision(Call(NotEmpty).result())" incoming="_emMVf82iEeiCta8rX3fxAA _emMVgM2iEeiCta8rX3fxAA" outgoing="_emMVgc2iEeiCta8rX3fxAA" decisionInputFlow="_emMVgM2iEeiCta8rX3fxAA"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_emMVZs2iEeiCta8rX3fxAA" name="Input(label)" outgoing="_emMVYs2iEeiCta8rX3fxAA" parameter="_emMVXM2iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_emMVZ82iEeiCta8rX3fxAA" name="Fork(label)" incoming="_emMVYs2iEeiCta8rX3fxAA" outgoing="_emMVZM2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_emMVaM2iEeiCta8rX3fxAA" name="Input(condition)" outgoing="_emMVY82iEeiCta8rX3fxAA" parameter="_emMVX82iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_emMVac2iEeiCta8rX3fxAA" name="Fork(condition)" incoming="_emMVY82iEeiCta8rX3fxAA" outgoing="_emMVZc2iEeiCta8rX3fxAA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_emMVus2iEeiCta8rX3fxAA" name="AssertEqual" visibility="public" node="_emMV2s2iEeiCta8rX3fxAA _emMV282iEeiCta8rX3fxAA _emMV3M2iEeiCta8rX3fxAA _emMV3c2iEeiCta8rX3fxAA _emMV3s2iEeiCta8rX3fxAA _emMV382iEeiCta8rX3fxAA _emMV4M2iEeiCta8rX3fxAA" group="_emMV4M2iEeiCta8rX3fxAA">
      <packageImport xmi:id="_emMVu82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_emMVvM2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_emMVvc2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_emMVvs2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_emMVv82iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_emMVwM2iEeiCta8rX3fxAA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVwc2iEeiCta8rX3fxAA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVws2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_emMVw82iEeiCta8rX3fxAA" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVxM2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVxc2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_emMVxs2iEeiCta8rX3fxAA" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMVx82iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMVyM2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVyc2iEeiCta8rX3fxAA" target="_emMV282iEeiCta8rX3fxAA" source="_emMV2s2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVys2iEeiCta8rX3fxAA" target="_emMV3c2iEeiCta8rX3fxAA" source="_emMV3M2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVy82iEeiCta8rX3fxAA" target="_emMV382iEeiCta8rX3fxAA" source="_emMV3s2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVzM2iEeiCta8rX3fxAA" target="_emMWF82iEeiCta8rX3fxAA" source="_emMV3c2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVzc2iEeiCta8rX3fxAA" target="_emMWH82iEeiCta8rX3fxAA" source="_emMV382iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVzs2iEeiCta8rX3fxAA" target="_emMWWc2iEeiCta8rX3fxAA" source="_emMV282iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMVz82iEeiCta8rX3fxAA" target="_emMWmM2iEeiCta8rX3fxAA" source="_emMV382iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV0M2iEeiCta8rX3fxAA" target="_emMW7M2iEeiCta8rX3fxAA" source="_emMV282iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV0c2iEeiCta8rX3fxAA" target="_emMW_M2iEeiCta8rX3fxAA" source="_emMV382iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV0s2iEeiCta8rX3fxAA" target="_emMXBM2iEeiCta8rX3fxAA" source="_emMV3c2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV082iEeiCta8rX3fxAA" target="_emMXI82iEeiCta8rX3fxAA" source="_emMV382iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV1M2iEeiCta8rX3fxAA" target="_emMXRs2iEeiCta8rX3fxAA" source="_emMV282iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV1c2iEeiCta8rX3fxAA" target="_emMXVs2iEeiCta8rX3fxAA" source="_emMV382iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV1s2iEeiCta8rX3fxAA" target="_emMXXs2iEeiCta8rX3fxAA" source="_emMV3c2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV182iEeiCta8rX3fxAA" target="_emMXrc2iEeiCta8rX3fxAA" source="_emMV282iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV2M2iEeiCta8rX3fxAA" target="_emMXus2iEeiCta8rX3fxAA" source="_emMV382iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV2c2iEeiCta8rX3fxAA" target="_emMXws2iEeiCta8rX3fxAA" source="_emMV3c2iEeiCta8rX3fxAA"/>
      <structuredNode xmi:id="_emMV4M2iEeiCta8rX3fxAA" name="Body(AssertEqual)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV4c2iEeiCta8rX3fxAA" target="_emMX1s2iEeiCta8rX3fxAA" source="_emMXys2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV4s2iEeiCta8rX3fxAA" target="_emMX182iEeiCta8rX3fxAA" source="_emMXzc2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV482iEeiCta8rX3fxAA" target="_emMX2M2iEeiCta8rX3fxAA" source="_emMX0M2iEeiCta8rX3fxAA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV5M2iEeiCta8rX3fxAA" target="_emMX2c2iEeiCta8rX3fxAA" source="_emMX082iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_emMV5c2iEeiCta8rX3fxAA" name="IfStatement@1834c28a">
          <edge xmi:type="uml:ControlFlow" xmi:id="_emMV5s2iEeiCta8rX3fxAA" target="_emMWgs2iEeiCta8rX3fxAA" source="_emMWQs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV582iEeiCta8rX3fxAA" target="_emMXcs2iEeiCta8rX3fxAA" source="_emMXZs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV6M2iEeiCta8rX3fxAA" target="_emMXc82iEeiCta8rX3fxAA" source="_emMXac2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV6c2iEeiCta8rX3fxAA" target="_emMXdM2iEeiCta8rX3fxAA" source="_emMXbM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV6s2iEeiCta8rX3fxAA" target="_emMXdc2iEeiCta8rX3fxAA" source="_emMXb82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV682iEeiCta8rX3fxAA" target="_emMWpM2iEeiCta8rX3fxAA" source="_emMWhM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV7M2iEeiCta8rX3fxAA" target="_emMWwc2iEeiCta8rX3fxAA" source="_emMWhM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV7c2iEeiCta8rX3fxAA" target="_emMW9M2iEeiCta8rX3fxAA" source="_emMWhM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV7s2iEeiCta8rX3fxAA" target="_emMXTs2iEeiCta8rX3fxAA" source="_emMWhM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emMV782iEeiCta8rX3fxAA" target="_emMWms2iEeiCta8rX3fxAA" source="_emMWgs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emMV8M2iEeiCta8rX3fxAA" target="_emMXds2iEeiCta8rX3fxAA" source="_emMWms2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV8c2iEeiCta8rX3fxAA" target="_emMXiM2iEeiCta8rX3fxAA" source="_emMXcs2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV8s2iEeiCta8rX3fxAA" target="_emMXkM2iEeiCta8rX3fxAA" source="_emMXc82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV882iEeiCta8rX3fxAA" target="_emMXmM2iEeiCta8rX3fxAA" source="_emMXdM2iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV9M2iEeiCta8rX3fxAA" target="_emMXoM2iEeiCta8rX3fxAA" source="_emMXdc2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMV9c2iEeiCta8rX3fxAA" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV9s2iEeiCta8rX3fxAA" target="_emMWDs2iEeiCta8rX3fxAA" source="_emMWF82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV982iEeiCta8rX3fxAA" target="_emMWGc2iEeiCta8rX3fxAA" source="_emMWF82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV-M2iEeiCta8rX3fxAA" target="_emMWFM2iEeiCta8rX3fxAA" source="_emMWH82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV-c2iEeiCta8rX3fxAA" target="_emMWIc2iEeiCta8rX3fxAA" source="_emMWH82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV-s2iEeiCta8rX3fxAA" target="_emMWKM2iEeiCta8rX3fxAA" source="_emMWHM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV-82iEeiCta8rX3fxAA" target="_emMWKc2iEeiCta8rX3fxAA" source="_emMWJM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV_M2iEeiCta8rX3fxAA" target="_emMWK82iEeiCta8rX3fxAA" source="_emMWKM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV_c2iEeiCta8rX3fxAA" target="_emMWMs2iEeiCta8rX3fxAA" source="_emMWKc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMV_s2iEeiCta8rX3fxAA" target="_emMWOM2iEeiCta8rX3fxAA" source="_emMWKc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emMV_82iEeiCta8rX3fxAA" target="_emMWDc2iEeiCta8rX3fxAA" source="_emMWOM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emMWAM2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emMWAc2iEeiCta8rX3fxAA" target="_emMWKs2iEeiCta8rX3fxAA" source="_emMWOM2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emMWAs2iEeiCta8rX3fxAA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emMWA82iEeiCta8rX3fxAA" target="_emMWOc2iEeiCta8rX3fxAA" source="_emMWJ82iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWBM2iEeiCta8rX3fxAA" target="_emMWOc2iEeiCta8rX3fxAA" source="_emMWKM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emMWBc2iEeiCta8rX3fxAA" target="_emMWOM2iEeiCta8rX3fxAA" source="_emMWOc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emMWBs2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emMWB82iEeiCta8rX3fxAA" target="_emMWMc2iEeiCta8rX3fxAA" source="_emMWOc2iEeiCta8rX3fxAA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_emMWCM2iEeiCta8rX3fxAA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWCc2iEeiCta8rX3fxAA" target="_emMWOs2iEeiCta8rX3fxAA" source="_emMWEc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWCs2iEeiCta8rX3fxAA" target="_emMWOs2iEeiCta8rX3fxAA" source="_emMWLs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWC82iEeiCta8rX3fxAA" target="_emMWOs2iEeiCta8rX3fxAA" source="_emMWNc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWDM2iEeiCta8rX3fxAA" target="_emMWPM2iEeiCta8rX3fxAA" source="_emMWOs2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_emMWDc2iEeiCta8rX3fxAA" name="Test(==)" incoming="_emMV_82iEeiCta8rX3fxAA">
              <first xmi:id="_emMWDs2iEeiCta8rX3fxAA" name="Test(==).first" incoming="_emMV9s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWD82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWEM2iEeiCta8rX3fxAA" value="1"/>
              </first>
              <result xmi:id="_emMWEc2iEeiCta8rX3fxAA" name="Test(==).result" outgoing="_emMWCc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWEs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWE82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <second xmi:id="_emMWFM2iEeiCta8rX3fxAA" name="Test(==).second" incoming="_emMV-M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWFc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWFs2iEeiCta8rX3fxAA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emMWF82iEeiCta8rX3fxAA" name="Fork(Fork(value1))" incoming="_emMVzM2iEeiCta8rX3fxAA" outgoing="_emMV9s2iEeiCta8rX3fxAA _emMV982iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMWGM2iEeiCta8rX3fxAA" name="Call(NotEmpty)">
              <argument xmi:id="_emMWGc2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_emMV982iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWGs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWG82iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emMWHM2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_emMV-s2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWHc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWHs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emMWH82iEeiCta8rX3fxAA" name="Fork(Fork(value2))" incoming="_emMVzc2iEeiCta8rX3fxAA" outgoing="_emMV-M2iEeiCta8rX3fxAA _emMV-c2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMWIM2iEeiCta8rX3fxAA" name="Call(NotEmpty)">
              <argument xmi:id="_emMWIc2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_emMV-c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWIs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWI82iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <result xmi:id="_emMWJM2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_emMV-82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWJc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWJs2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_emMWJ82iEeiCta8rX3fxAA" name="Initial(Test(==))" outgoing="_emMWA82iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_emMWKM2iEeiCta8rX3fxAA" name="Fork(Call(NotEmpty).result())" incoming="_emMV-s2iEeiCta8rX3fxAA" outgoing="_emMV_M2iEeiCta8rX3fxAA _emMWBM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_emMWKc2iEeiCta8rX3fxAA" name="Fork(Call(NotEmpty).result())" incoming="_emMV-82iEeiCta8rX3fxAA" outgoing="_emMV_c2iEeiCta8rX3fxAA _emMV_s2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMWKs2iEeiCta8rX3fxAA" name="Call(Not)" incoming="_emMWAc2iEeiCta8rX3fxAA">
              <argument xmi:id="_emMWK82iEeiCta8rX3fxAA" name="Call(Not).argument(x)" incoming="_emMV_M2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWLM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWLc2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_emMWLs2iEeiCta8rX3fxAA" name="Call(Not).result(result)" outgoing="_emMWCs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWL82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWMM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMWMc2iEeiCta8rX3fxAA" name="Call(Not)" incoming="_emMWB82iEeiCta8rX3fxAA">
              <argument xmi:id="_emMWMs2iEeiCta8rX3fxAA" name="Call(Not).argument(x)" incoming="_emMV_c2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWM82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWNM2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_emMWNc2iEeiCta8rX3fxAA" name="Call(Not).result(result)" outgoing="_emMWC82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWNs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWN82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_emMWOM2iEeiCta8rX3fxAA" name="Decision(Call(NotEmpty).result())" incoming="_emMV_s2iEeiCta8rX3fxAA _emMWBc2iEeiCta8rX3fxAA" outgoing="_emMV_82iEeiCta8rX3fxAA _emMWAc2iEeiCta8rX3fxAA" decisionInputFlow="_emMV_s2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_emMWOc2iEeiCta8rX3fxAA" name="Decision(Call(NotEmpty).result())" incoming="_emMWA82iEeiCta8rX3fxAA _emMWBM2iEeiCta8rX3fxAA" outgoing="_emMWBc2iEeiCta8rX3fxAA _emMWB82iEeiCta8rX3fxAA" decisionInputFlow="_emMWBM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_emMWOs2iEeiCta8rX3fxAA" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_emMWCc2iEeiCta8rX3fxAA _emMWCs2iEeiCta8rX3fxAA _emMWC82iEeiCta8rX3fxAA" outgoing="_emMWDM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMWO82iEeiCta8rX3fxAA" name="Call(Not)">
              <argument xmi:id="_emMWPM2iEeiCta8rX3fxAA" name="Call(Not).argument(x)" incoming="_emMWDM2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWPc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWPs2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_emMWP82iEeiCta8rX3fxAA" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWQM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWQc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMWQs2iEeiCta8rX3fxAA" name="ExpressionStatement@56960b1b" outgoing="_emMV5s2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWQ82iEeiCta8rX3fxAA" target="_emMWRs2iEeiCta8rX3fxAA" source="_emMWdc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emMWRM2iEeiCta8rX3fxAA" target="_emMWRc2iEeiCta8rX3fxAA" source="_emMWSc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMWRc2iEeiCta8rX3fxAA" name="Call(Write)" incoming="_emMWRM2iEeiCta8rX3fxAA" behavior="_emMX2s2iEeiCta8rX3fxAA">
              <argument xmi:id="_emMWRs2iEeiCta8rX3fxAA" name="Call(Write).argument(value)" incoming="_emMWQ82iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWR82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWSM2iEeiCta8rX3fxAA" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMWSc2iEeiCta8rX3fxAA" name="Tuple@42097610" outgoing="_emMWRM2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWSs2iEeiCta8rX3fxAA" target="_emMWZc2iEeiCta8rX3fxAA" source="_emMWU82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWS82iEeiCta8rX3fxAA" target="_emMWaM2iEeiCta8rX3fxAA" source="_emMWXM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emMWTM2iEeiCta8rX3fxAA" target="_emMWX82iEeiCta8rX3fxAA" source="_emMWUs2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emMWTc2iEeiCta8rX3fxAA" target="_emMWX82iEeiCta8rX3fxAA" source="_emMWV82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWTs2iEeiCta8rX3fxAA" target="_emMWec2iEeiCta8rX3fxAA" source="_emMWYc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWT82iEeiCta8rX3fxAA" target="_emMWfM2iEeiCta8rX3fxAA" source="_emMWb82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emMWUM2iEeiCta8rX3fxAA" target="_emMWc82iEeiCta8rX3fxAA" source="_emMWX82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emMWUc2iEeiCta8rX3fxAA" target="_emMWc82iEeiCta8rX3fxAA" source="_emMWbs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMWUs2iEeiCta8rX3fxAA" name="Value(&quot;FAILED: &quot;)" outgoing="_emMWTM2iEeiCta8rX3fxAA">
                <result xmi:id="_emMWU82iEeiCta8rX3fxAA" name="Value(&quot;FAILED: &quot;).result" outgoing="_emMWSs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWVM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWVc2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_emMWVs2iEeiCta8rX3fxAA" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMWV82iEeiCta8rX3fxAA" name="Passthru(Fork(label))" outgoing="_emMWTc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWWM2iEeiCta8rX3fxAA" target="_emMWXM2iEeiCta8rX3fxAA" source="_emMWWc2iEeiCta8rX3fxAA"/>
                <structuredNodeInput xmi:id="_emMWWc2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_emMVzs2iEeiCta8rX3fxAA" outgoing="_emMWWM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWWs2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWW82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_emMWXM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_emMWWM2iEeiCta8rX3fxAA" outgoing="_emMWS82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWXc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWXs2iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMWX82iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_emMWTM2iEeiCta8rX3fxAA _emMWTc2iEeiCta8rX3fxAA" outgoing="_emMWUM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWYM2iEeiCta8rX3fxAA" target="_emMWYc2iEeiCta8rX3fxAA" source="_emMWa82iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_emMWYc2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_emMWYM2iEeiCta8rX3fxAA" outgoing="_emMWTs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWYs2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWY82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMWZM2iEeiCta8rX3fxAA" name="Call(Concat)">
                  <argument xmi:id="_emMWZc2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_emMWSs2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWZs2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWZ82iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_emMWaM2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_emMWS82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWac2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWas2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_emMWa82iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_emMWYM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWbM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWbc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMWbs2iEeiCta8rX3fxAA" name="Value(&quot;==&quot;)" outgoing="_emMWUc2iEeiCta8rX3fxAA">
                <result xmi:id="_emMWb82iEeiCta8rX3fxAA" name="Value(&quot;==&quot;).result" outgoing="_emMWT82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWcM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWcc2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_emMWcs2iEeiCta8rX3fxAA" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMWc82iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_emMWUM2iEeiCta8rX3fxAA _emMWUc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWdM2iEeiCta8rX3fxAA" target="_emMWdc2iEeiCta8rX3fxAA" source="_emMWf82iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_emMWdc2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_emMWdM2iEeiCta8rX3fxAA" outgoing="_emMWQ82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWds2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWd82iEeiCta8rX3fxAA" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMWeM2iEeiCta8rX3fxAA" name="Call(Concat)">
                  <argument xmi:id="_emMWec2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_emMWTs2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWes2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWe82iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <argument xmi:id="_emMWfM2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_emMWT82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWfc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWfs2iEeiCta8rX3fxAA" value="1"/>
                  </argument>
                  <result xmi:id="_emMWf82iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_emMWdM2iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWgM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWgc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMWgs2iEeiCta8rX3fxAA" name="ExpressionStatement@2ec3ec9f" incoming="_emMV5s2iEeiCta8rX3fxAA" outgoing="_emMV782iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWg82iEeiCta8rX3fxAA" target="_emMWhM2iEeiCta8rX3fxAA" source="_emMWmc2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_emMWhM2iEeiCta8rX3fxAA" name="Fork(s)@1e3f1dca" incoming="_emMWg82iEeiCta8rX3fxAA" outgoing="_emMV682iEeiCta8rX3fxAA _emMV7M2iEeiCta8rX3fxAA _emMV7c2iEeiCta8rX3fxAA _emMV7s2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMWhc2iEeiCta8rX3fxAA" name="RightHandSide@5606c2cc">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_emMWhs2iEeiCta8rX3fxAA" name="CastExpression@5606c2cc" mode="parallel" outputElement="_emMWmc2iEeiCta8rX3fxAA" inputElement="_emMWmM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWh82iEeiCta8rX3fxAA" target="_emMWkM2iEeiCta8rX3fxAA" source="_emMWls2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWiM2iEeiCta8rX3fxAA" target="_emMWl82iEeiCta8rX3fxAA" source="_emMWls2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWic2iEeiCta8rX3fxAA" target="_emMWl82iEeiCta8rX3fxAA" source="_emMWk82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWis2iEeiCta8rX3fxAA" target="_emMWjs2iEeiCta8rX3fxAA" source="_emMWl82iEeiCta8rX3fxAA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_emMWi82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWjM2iEeiCta8rX3fxAA" target="_emMWls2iEeiCta8rX3fxAA" source="_emMWmM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWjc2iEeiCta8rX3fxAA" target="_emMWmc2iEeiCta8rX3fxAA" source="_emMWjs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_emMWjs2iEeiCta8rX3fxAA" name="Merge(CastExpression@5606c2cc.operand)" incoming="_emMWis2iEeiCta8rX3fxAA" outgoing="_emMWjc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_emMWj82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_emMWkM2iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(String).object" incoming="_emMWh82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWkc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWks2iEeiCta8rX3fxAA" value="1"/>
                  </object>
                  <result xmi:id="_emMWk82iEeiCta8rX3fxAA" name="ReadIsClassifiedObject(String).result" outgoing="_emMWic2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWlM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWlc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_emMWls2iEeiCta8rX3fxAA" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_emMWjM2iEeiCta8rX3fxAA" outgoing="_emMWh82iEeiCta8rX3fxAA _emMWiM2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_emMWl82iEeiCta8rX3fxAA" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_emMWiM2iEeiCta8rX3fxAA _emMWic2iEeiCta8rX3fxAA" outgoing="_emMWis2iEeiCta8rX3fxAA" decisionInputFlow="_emMWic2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_emMWmM2iEeiCta8rX3fxAA" name="CastExpression@5606c2cc.inputElement" incoming="_emMVz82iEeiCta8rX3fxAA" outgoing="_emMWjM2iEeiCta8rX3fxAA" regionAsInput="_emMWhs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_emMWmc2iEeiCta8rX3fxAA" name="CastExpression@5606c2cc.outputElement" incoming="_emMWjc2iEeiCta8rX3fxAA" outgoing="_emMWg82iEeiCta8rX3fxAA" regionAsOutput="_emMWhs2iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_emMWms2iEeiCta8rX3fxAA" name="IfStatement@425c5389" incoming="_emMV782iEeiCta8rX3fxAA" outgoing="_emMV8M2iEeiCta8rX3fxAA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMWm82iEeiCta8rX3fxAA" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_emMWnM2iEeiCta8rX3fxAA" target="_emMWo82iEeiCta8rX3fxAA" source="_emMWnc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMWnc2iEeiCta8rX3fxAA" name="Operands(EqualityExpression@11c79954)" outgoing="_emMWnM2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMWns2iEeiCta8rX3fxAA" name="Value(null)">
                  <result xmi:id="_emMWn82iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWoM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWoc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_emMWos2iEeiCta8rX3fxAA"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMWo82iEeiCta8rX3fxAA" name="Call(NotEmpty)" incoming="_emMWnM2iEeiCta8rX3fxAA">
                <argument xmi:id="_emMWpM2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_emMV682iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWpc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWps2iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <result xmi:id="_emMWp82iEeiCta8rX3fxAA" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWqM2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWqc2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMWqs2iEeiCta8rX3fxAA" name="ExpressionStatement@2c1ea663">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWq82iEeiCta8rX3fxAA" target="_emMWrs2iEeiCta8rX3fxAA" source="_emMW3c2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emMWrM2iEeiCta8rX3fxAA" target="_emMWrc2iEeiCta8rX3fxAA" source="_emMWsc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMWrc2iEeiCta8rX3fxAA" name="Call(Write)" incoming="_emMWrM2iEeiCta8rX3fxAA" behavior="_emMX2s2iEeiCta8rX3fxAA">
                <argument xmi:id="_emMWrs2iEeiCta8rX3fxAA" name="Call(Write).argument(value)" incoming="_emMWq82iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWr82iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWsM2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMWsc2iEeiCta8rX3fxAA" name="Tuple@6c45837d" outgoing="_emMWrM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWss2iEeiCta8rX3fxAA" target="_emMWzc2iEeiCta8rX3fxAA" source="_emMWu82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWs82iEeiCta8rX3fxAA" target="_emMW0M2iEeiCta8rX3fxAA" source="_emMWxM2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emMWtM2iEeiCta8rX3fxAA" target="_emMWx82iEeiCta8rX3fxAA" source="_emMWus2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emMWtc2iEeiCta8rX3fxAA" target="_emMWx82iEeiCta8rX3fxAA" source="_emMWv82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWts2iEeiCta8rX3fxAA" target="_emMW4c2iEeiCta8rX3fxAA" source="_emMWyc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWt82iEeiCta8rX3fxAA" target="_emMW5M2iEeiCta8rX3fxAA" source="_emMW182iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emMWuM2iEeiCta8rX3fxAA" target="_emMW282iEeiCta8rX3fxAA" source="_emMWx82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emMWuc2iEeiCta8rX3fxAA" target="_emMW282iEeiCta8rX3fxAA" source="_emMW1s2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMWus2iEeiCta8rX3fxAA" name="Value(&quot;&quot;&quot;)" outgoing="_emMWtM2iEeiCta8rX3fxAA">
                  <result xmi:id="_emMWu82iEeiCta8rX3fxAA" name="Value(&quot;&quot;&quot;).result" outgoing="_emMWss2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWvM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWvc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emMWvs2iEeiCta8rX3fxAA" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMWv82iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1e3f1dca)" outgoing="_emMWtc2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWwM2iEeiCta8rX3fxAA" target="_emMWxM2iEeiCta8rX3fxAA" source="_emMWwc2iEeiCta8rX3fxAA"/>
                  <structuredNodeInput xmi:id="_emMWwc2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1e3f1dca).input" incoming="_emMV7M2iEeiCta8rX3fxAA" outgoing="_emMWwM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWws2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWw82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_emMWxM2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1e3f1dca).output" incoming="_emMWwM2iEeiCta8rX3fxAA" outgoing="_emMWs82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWxc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWxs2iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMWx82iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_emMWtM2iEeiCta8rX3fxAA _emMWtc2iEeiCta8rX3fxAA" outgoing="_emMWuM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emMWyM2iEeiCta8rX3fxAA" target="_emMWyc2iEeiCta8rX3fxAA" source="_emMW082iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_emMWyc2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_emMWyM2iEeiCta8rX3fxAA" outgoing="_emMWts2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWys2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWy82iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMWzM2iEeiCta8rX3fxAA" name="Call(Concat)">
                    <argument xmi:id="_emMWzc2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_emMWss2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMWzs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMWz82iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <argument xmi:id="_emMW0M2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_emMWs82iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMW0c2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMW0s2iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <result xmi:id="_emMW082iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_emMWyM2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMW1M2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMW1c2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMW1s2iEeiCta8rX3fxAA" name="Value(&quot;&quot;&quot;)" outgoing="_emMWuc2iEeiCta8rX3fxAA">
                  <result xmi:id="_emMW182iEeiCta8rX3fxAA" name="Value(&quot;&quot;&quot;).result" outgoing="_emMWt82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMW2M2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMW2c2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emMW2s2iEeiCta8rX3fxAA" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMW282iEeiCta8rX3fxAA" name="Node(Call(Concat))" incoming="_emMWuM2iEeiCta8rX3fxAA _emMWuc2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emMW3M2iEeiCta8rX3fxAA" target="_emMW3c2iEeiCta8rX3fxAA" source="_emMW582iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_emMW3c2iEeiCta8rX3fxAA" name="Output(Call(Concat).result(result))" incoming="_emMW3M2iEeiCta8rX3fxAA" outgoing="_emMWq82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMW3s2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMW382iEeiCta8rX3fxAA" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMW4M2iEeiCta8rX3fxAA" name="Call(Concat)">
                    <argument xmi:id="_emMW4c2iEeiCta8rX3fxAA" name="Call(Concat).argument(x)" incoming="_emMWts2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMW4s2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMW482iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <argument xmi:id="_emMW5M2iEeiCta8rX3fxAA" name="Call(Concat).argument(y)" incoming="_emMWt82iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMW5c2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMW5s2iEeiCta8rX3fxAA" value="1"/>
                    </argument>
                    <result xmi:id="_emMW582iEeiCta8rX3fxAA" name="Call(Concat).result(result)" outgoing="_emMW3M2iEeiCta8rX3fxAA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMW6M2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMW6c2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMW6s2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMW682iEeiCta8rX3fxAA" target="_emMW782iEeiCta8rX3fxAA" source="_emMW7M2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_emMW7M2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_emMV0M2iEeiCta8rX3fxAA" outgoing="_emMW682iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMW7c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMW7s2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_emMW782iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_emMW682iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMW8M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMW8c2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMW8s2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1e3f1dca)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMW882iEeiCta8rX3fxAA" target="_emMW982iEeiCta8rX3fxAA" source="_emMW9M2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_emMW9M2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1e3f1dca).input" incoming="_emMV7c2iEeiCta8rX3fxAA" outgoing="_emMW882iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMW9c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMW9s2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_emMW982iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1e3f1dca).output" incoming="_emMW882iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMW-M2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMW-c2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMW-s2iEeiCta8rX3fxAA" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMW-82iEeiCta8rX3fxAA" target="_emMW_82iEeiCta8rX3fxAA" source="_emMW_M2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_emMW_M2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).input" incoming="_emMV0c2iEeiCta8rX3fxAA" outgoing="_emMW-82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMW_c2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMW_s2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_emMW_82iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).output" incoming="_emMW-82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXAM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXAc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXAs2iEeiCta8rX3fxAA" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXA82iEeiCta8rX3fxAA" target="_emMXB82iEeiCta8rX3fxAA" source="_emMXBM2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_emMXBM2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).input" incoming="_emMV0s2iEeiCta8rX3fxAA" outgoing="_emMXA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXBc2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXBs2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_emMXB82iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).output" incoming="_emMXA82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXCM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXCc2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMXCs2iEeiCta8rX3fxAA" name="Value(true)">
              <result xmi:id="_emMXC82iEeiCta8rX3fxAA" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXDM2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXDc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_emMXDs2iEeiCta8rX3fxAA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXD82iEeiCta8rX3fxAA" name="ExpressionStatement@53a8201d">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXEM2iEeiCta8rX3fxAA" target="_emMXE82iEeiCta8rX3fxAA" source="_emMXQ82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emMXEc2iEeiCta8rX3fxAA" target="_emMXEs2iEeiCta8rX3fxAA" source="_emMXFs2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMXEs2iEeiCta8rX3fxAA" name="Call(Write)" incoming="_emMXEc2iEeiCta8rX3fxAA" behavior="_emMX2s2iEeiCta8rX3fxAA">
                <argument xmi:id="_emMXE82iEeiCta8rX3fxAA" name="Call(Write).argument(value)" incoming="_emMXEM2iEeiCta8rX3fxAA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXFM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXFc2iEeiCta8rX3fxAA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXFs2iEeiCta8rX3fxAA" name="Tuple@620a33ea" outgoing="_emMXEc2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXF82iEeiCta8rX3fxAA" target="_emMXK82iEeiCta8rX3fxAA" source="_emMXI82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emMXGM2iEeiCta8rX3fxAA" target="_emMXKs2iEeiCta8rX3fxAA" source="_emMXIs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXGc2iEeiCta8rX3fxAA" target="_emMXNs2iEeiCta8rX3fxAA" source="_emMXI82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emMXGs2iEeiCta8rX3fxAA" target="_emMXQs2iEeiCta8rX3fxAA" source="_emMXQc2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXG82iEeiCta8rX3fxAA" target="_emMXQs2iEeiCta8rX3fxAA" source="_emMXLs2iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emMXHM2iEeiCta8rX3fxAA" target="_emMXMc2iEeiCta8rX3fxAA" source="_emMXQs2iEeiCta8rX3fxAA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_emMXHc2iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_emMXHs2iEeiCta8rX3fxAA" target="_emMXN82iEeiCta8rX3fxAA" source="_emMXQs2iEeiCta8rX3fxAA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_emMXH82iEeiCta8rX3fxAA" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXIM2iEeiCta8rX3fxAA" target="_emMXQ82iEeiCta8rX3fxAA" source="_emMXM82iEeiCta8rX3fxAA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXIc2iEeiCta8rX3fxAA" target="_emMXQ82iEeiCta8rX3fxAA" source="_emMXOc2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXIs2iEeiCta8rX3fxAA" name="Operands(EqualityExpression@50cb638b)" outgoing="_emMXGM2iEeiCta8rX3fxAA">
                  <node xmi:type="uml:ForkNode" xmi:id="_emMXI82iEeiCta8rX3fxAA" name="Fork('')@41735433" incoming="_emMV082iEeiCta8rX3fxAA" outgoing="_emMXF82iEeiCta8rX3fxAA _emMXGc2iEeiCta8rX3fxAA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXJM2iEeiCta8rX3fxAA" name="RightHandSide@326d5092"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMXJc2iEeiCta8rX3fxAA" name="Value(null)">
                    <result xmi:id="_emMXJs2iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXJ82iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXKM2iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_emMXKc2iEeiCta8rX3fxAA"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMXKs2iEeiCta8rX3fxAA" name="Call(NotEmpty)" incoming="_emMXGM2iEeiCta8rX3fxAA">
                  <argument xmi:id="_emMXK82iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_emMXF82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXLM2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXLc2iEeiCta8rX3fxAA" value="*"/>
                  </argument>
                  <result xmi:id="_emMXLs2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_emMXG82iEeiCta8rX3fxAA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXL82iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXMM2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXMc2iEeiCta8rX3fxAA" name="NullCoalescingExpression@26eeff6d.operand2" incoming="_emMXHM2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXMs2iEeiCta8rX3fxAA" target="_emMXM82iEeiCta8rX3fxAA" source="_emMXNs2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_emMXM82iEeiCta8rX3fxAA" name="NullCoalescingExpression@26eeff6d.operand2.result" incoming="_emMXMs2iEeiCta8rX3fxAA" outgoing="_emMXIM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXNM2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXNc2iEeiCta8rX3fxAA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_emMXNs2iEeiCta8rX3fxAA" name="Merge(Fork('')@41735433)" incoming="_emMXGc2iEeiCta8rX3fxAA" outgoing="_emMXMs2iEeiCta8rX3fxAA"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXN82iEeiCta8rX3fxAA" name="NullCoalescingExpression@26eeff6d.operand3" incoming="_emMXHs2iEeiCta8rX3fxAA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXOM2iEeiCta8rX3fxAA" target="_emMXOc2iEeiCta8rX3fxAA" source="_emMXPc2iEeiCta8rX3fxAA"/>
                  <structuredNodeOutput xmi:id="_emMXOc2iEeiCta8rX3fxAA" name="NullCoalescingExpression@26eeff6d.operand3.result" incoming="_emMXOM2iEeiCta8rX3fxAA" outgoing="_emMXIc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXOs2iEeiCta8rX3fxAA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXO82iEeiCta8rX3fxAA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMXPM2iEeiCta8rX3fxAA" name="Value(&quot;null&quot;)">
                    <result xmi:id="_emMXPc2iEeiCta8rX3fxAA" name="Value(&quot;null&quot;).result" outgoing="_emMXOM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXPs2iEeiCta8rX3fxAA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXP82iEeiCta8rX3fxAA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_emMXQM2iEeiCta8rX3fxAA" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_emMXQc2iEeiCta8rX3fxAA" name="Initial(NullCoalescingExpression@26eeff6d)" outgoing="_emMXGs2iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_emMXQs2iEeiCta8rX3fxAA" name="Decision(NullCoalescingExpression@26eeff6d)" incoming="_emMXGs2iEeiCta8rX3fxAA _emMXG82iEeiCta8rX3fxAA" outgoing="_emMXHM2iEeiCta8rX3fxAA _emMXHs2iEeiCta8rX3fxAA" decisionInputFlow="_emMXG82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_emMXQ82iEeiCta8rX3fxAA" name="Merge(NullCoalescingExpression@26eeff6d.result)" incoming="_emMXIM2iEeiCta8rX3fxAA _emMXIc2iEeiCta8rX3fxAA" outgoing="_emMXEM2iEeiCta8rX3fxAA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXRM2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXRc2iEeiCta8rX3fxAA" target="_emMXSc2iEeiCta8rX3fxAA" source="_emMXRs2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_emMXRs2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_emMV1M2iEeiCta8rX3fxAA" outgoing="_emMXRc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXR82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXSM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_emMXSc2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_emMXRc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXSs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXS82iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXTM2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1e3f1dca)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXTc2iEeiCta8rX3fxAA" target="_emMXUc2iEeiCta8rX3fxAA" source="_emMXTs2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_emMXTs2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1e3f1dca).input" incoming="_emMV7s2iEeiCta8rX3fxAA" outgoing="_emMXTc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXT82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXUM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_emMXUc2iEeiCta8rX3fxAA" name="Passthru(Fork(s)@1e3f1dca).output" incoming="_emMXTc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXUs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXU82iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXVM2iEeiCta8rX3fxAA" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXVc2iEeiCta8rX3fxAA" target="_emMXWc2iEeiCta8rX3fxAA" source="_emMXVs2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_emMXVs2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).input" incoming="_emMV1c2iEeiCta8rX3fxAA" outgoing="_emMXVc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXV82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXWM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_emMXWc2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).output" incoming="_emMXVc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXWs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXW82iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXXM2iEeiCta8rX3fxAA" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXXc2iEeiCta8rX3fxAA" target="_emMXYc2iEeiCta8rX3fxAA" source="_emMXXs2iEeiCta8rX3fxAA"/>
              <structuredNodeInput xmi:id="_emMXXs2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).input" incoming="_emMV1s2iEeiCta8rX3fxAA" outgoing="_emMXXc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXX82iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXYM2iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_emMXYc2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).output" incoming="_emMXXc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXYs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXY82iEeiCta8rX3fxAA" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_emMXZM2iEeiCta8rX3fxAA" body="_emMWqs2iEeiCta8rX3fxAA _emMW6s2iEeiCta8rX3fxAA _emMW8s2iEeiCta8rX3fxAA _emMW-s2iEeiCta8rX3fxAA _emMXAs2iEeiCta8rX3fxAA" bodyOutput="_emMW782iEeiCta8rX3fxAA _emMW982iEeiCta8rX3fxAA _emMW_82iEeiCta8rX3fxAA _emMXB82iEeiCta8rX3fxAA" decider="_emMWp82iEeiCta8rX3fxAA" successorClause="_emMXZc2iEeiCta8rX3fxAA" test="_emMWm82iEeiCta8rX3fxAA"/>
            <clause xmi:id="_emMXZc2iEeiCta8rX3fxAA" body="_emMXD82iEeiCta8rX3fxAA _emMXRM2iEeiCta8rX3fxAA _emMXTM2iEeiCta8rX3fxAA _emMXVM2iEeiCta8rX3fxAA _emMXXM2iEeiCta8rX3fxAA" bodyOutput="_emMXSc2iEeiCta8rX3fxAA _emMXUc2iEeiCta8rX3fxAA _emMXWc2iEeiCta8rX3fxAA _emMXYc2iEeiCta8rX3fxAA" decider="_emMXC82iEeiCta8rX3fxAA" predecessorClause="_emMXZM2iEeiCta8rX3fxAA" test="_emMXCs2iEeiCta8rX3fxAA"/>
            <result xmi:id="_emMXZs2iEeiCta8rX3fxAA" name="IfStatement@425c5389.result(label)" outgoing="_emMV582iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXZ82iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXaM2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <result xmi:id="_emMXac2iEeiCta8rX3fxAA" name="IfStatement@425c5389.result(s)" outgoing="_emMV6M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXas2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXa82iEeiCta8rX3fxAA" value="1"/>
            </result>
            <result xmi:id="_emMXbM2iEeiCta8rX3fxAA" name="IfStatement@425c5389.result(value2)" outgoing="_emMV6c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXbc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXbs2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <result xmi:id="_emMXb82iEeiCta8rX3fxAA" name="IfStatement@425c5389.result(value1)" outgoing="_emMV6s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXcM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXcc2iEeiCta8rX3fxAA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_emMXcs2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_emMV582iEeiCta8rX3fxAA" outgoing="_emMV8c2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_emMXc82iEeiCta8rX3fxAA" name="Fork(s)" incoming="_emMV6M2iEeiCta8rX3fxAA" outgoing="_emMV8s2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_emMXdM2iEeiCta8rX3fxAA" name="Fork(value2)" incoming="_emMV6c2iEeiCta8rX3fxAA" outgoing="_emMV882iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_emMXdc2iEeiCta8rX3fxAA" name="Fork(value1)" incoming="_emMV6s2iEeiCta8rX3fxAA" outgoing="_emMV9M2iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXds2iEeiCta8rX3fxAA" name="ExpressionStatement@4b8b72db" incoming="_emMV8M2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXd82iEeiCta8rX3fxAA" target="_emMXes2iEeiCta8rX3fxAA" source="_emMXgs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emMXeM2iEeiCta8rX3fxAA" target="_emMXec2iEeiCta8rX3fxAA" source="_emMXgM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emMXec2iEeiCta8rX3fxAA" name="Call(WriteLine)" incoming="_emMXeM2iEeiCta8rX3fxAA">
              <argument xmi:id="_emMXes2iEeiCta8rX3fxAA" name="Call(WriteLine).argument(value)" incoming="_emMXd82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXe82iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXfM2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_emMXfc2iEeiCta8rX3fxAA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXfs2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXf82iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXgM2iEeiCta8rX3fxAA" name="Tuple@3f76936a" outgoing="_emMXeM2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMXgc2iEeiCta8rX3fxAA" name="Value(&quot;&quot;)">
                <result xmi:id="_emMXgs2iEeiCta8rX3fxAA" name="Value(&quot;&quot;).result" outgoing="_emMXd82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXg82iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXhM2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_emMXhc2iEeiCta8rX3fxAA" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXhs2iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXh82iEeiCta8rX3fxAA" target="_emMXi82iEeiCta8rX3fxAA" source="_emMXiM2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_emMXiM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_emMV8c2iEeiCta8rX3fxAA" outgoing="_emMXh82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXic2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXis2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_emMXi82iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_emMXh82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXjM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXjc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXjs2iEeiCta8rX3fxAA" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXj82iEeiCta8rX3fxAA" target="_emMXk82iEeiCta8rX3fxAA" source="_emMXkM2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_emMXkM2iEeiCta8rX3fxAA" name="Passthru(Fork(s)).input" incoming="_emMV8s2iEeiCta8rX3fxAA" outgoing="_emMXj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXkc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXks2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_emMXk82iEeiCta8rX3fxAA" name="Passthru(Fork(s)).output" incoming="_emMXj82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXlM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXlc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXls2iEeiCta8rX3fxAA" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXl82iEeiCta8rX3fxAA" target="_emMXm82iEeiCta8rX3fxAA" source="_emMXmM2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_emMXmM2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).input" incoming="_emMV882iEeiCta8rX3fxAA" outgoing="_emMXl82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXmc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXms2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_emMXm82iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).output" incoming="_emMXl82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXnM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXnc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXns2iEeiCta8rX3fxAA" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXn82iEeiCta8rX3fxAA" target="_emMXo82iEeiCta8rX3fxAA" source="_emMXoM2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_emMXoM2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).input" incoming="_emMV9M2iEeiCta8rX3fxAA" outgoing="_emMXn82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXoc2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXos2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_emMXo82iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).output" incoming="_emMXn82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXpM2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXpc2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMXps2iEeiCta8rX3fxAA" name="Value(true)">
            <result xmi:id="_emMXp82iEeiCta8rX3fxAA" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXqM2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXqc2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_emMXqs2iEeiCta8rX3fxAA" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXq82iEeiCta8rX3fxAA" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXrM2iEeiCta8rX3fxAA" target="_emMXsM2iEeiCta8rX3fxAA" source="_emMXrc2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_emMXrc2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).input" incoming="_emMV182iEeiCta8rX3fxAA" outgoing="_emMXrM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXrs2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXr82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_emMXsM2iEeiCta8rX3fxAA" name="Passthru(Fork(label)).output" incoming="_emMXrM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXsc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXss2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emMXs82iEeiCta8rX3fxAA" name="Value(null)">
            <result xmi:id="_emMXtM2iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXtc2iEeiCta8rX3fxAA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXts2iEeiCta8rX3fxAA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_emMXt82iEeiCta8rX3fxAA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXuM2iEeiCta8rX3fxAA" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXuc2iEeiCta8rX3fxAA" target="_emMXvc2iEeiCta8rX3fxAA" source="_emMXus2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_emMXus2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).input" incoming="_emMV2M2iEeiCta8rX3fxAA" outgoing="_emMXuc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXu82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXvM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_emMXvc2iEeiCta8rX3fxAA" name="Passthru(Fork(value2)).output" incoming="_emMXuc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXvs2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXv82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMXwM2iEeiCta8rX3fxAA" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMXwc2iEeiCta8rX3fxAA" target="_emMXxc2iEeiCta8rX3fxAA" source="_emMXws2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_emMXws2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).input" incoming="_emMV2c2iEeiCta8rX3fxAA" outgoing="_emMXwc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXw82iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXxM2iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_emMXxc2iEeiCta8rX3fxAA" name="Passthru(Fork(value1)).output" incoming="_emMXwc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXxs2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXx82iEeiCta8rX3fxAA" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_emMXyM2iEeiCta8rX3fxAA" body="_emMWQs2iEeiCta8rX3fxAA _emMWgs2iEeiCta8rX3fxAA _emMWms2iEeiCta8rX3fxAA _emMXds2iEeiCta8rX3fxAA _emMXhs2iEeiCta8rX3fxAA _emMXjs2iEeiCta8rX3fxAA _emMXls2iEeiCta8rX3fxAA _emMXns2iEeiCta8rX3fxAA" bodyOutput="_emMXi82iEeiCta8rX3fxAA _emMXk82iEeiCta8rX3fxAA _emMXm82iEeiCta8rX3fxAA _emMXo82iEeiCta8rX3fxAA" decider="_emMWP82iEeiCta8rX3fxAA" successorClause="_emMXyc2iEeiCta8rX3fxAA" test="_emMV9c2iEeiCta8rX3fxAA"/>
          <clause xmi:id="_emMXyc2iEeiCta8rX3fxAA" body="_emMXq82iEeiCta8rX3fxAA _emMXs82iEeiCta8rX3fxAA _emMXuM2iEeiCta8rX3fxAA _emMXwM2iEeiCta8rX3fxAA" bodyOutput="_emMXsM2iEeiCta8rX3fxAA _emMXtM2iEeiCta8rX3fxAA _emMXvc2iEeiCta8rX3fxAA _emMXxc2iEeiCta8rX3fxAA" decider="_emMXp82iEeiCta8rX3fxAA" predecessorClause="_emMXyM2iEeiCta8rX3fxAA" test="_emMXps2iEeiCta8rX3fxAA"/>
          <result xmi:id="_emMXys2iEeiCta8rX3fxAA" name="IfStatement@1834c28a.result(label)" outgoing="_emMV4c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXy82iEeiCta8rX3fxAA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXzM2iEeiCta8rX3fxAA" value="1"/>
          </result>
          <result xmi:id="_emMXzc2iEeiCta8rX3fxAA" name="IfStatement@1834c28a.result(s)" outgoing="_emMV4s2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMXzs2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMXz82iEeiCta8rX3fxAA" value="1"/>
          </result>
          <result xmi:id="_emMX0M2iEeiCta8rX3fxAA" name="IfStatement@1834c28a.result(value2)" outgoing="_emMV482iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMX0c2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMX0s2iEeiCta8rX3fxAA" value="1"/>
          </result>
          <result xmi:id="_emMX082iEeiCta8rX3fxAA" name="IfStatement@1834c28a.result(value1)" outgoing="_emMV5M2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMX1M2iEeiCta8rX3fxAA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMX1c2iEeiCta8rX3fxAA" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_emMX1s2iEeiCta8rX3fxAA" name="Fork(label)" incoming="_emMV4c2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_emMX182iEeiCta8rX3fxAA" name="Fork(s)" incoming="_emMV4s2iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_emMX2M2iEeiCta8rX3fxAA" name="Fork(value2)" incoming="_emMV482iEeiCta8rX3fxAA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_emMX2c2iEeiCta8rX3fxAA" name="Fork(value1)" incoming="_emMV5M2iEeiCta8rX3fxAA"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_emMV2s2iEeiCta8rX3fxAA" name="Input(label)" outgoing="_emMVyc2iEeiCta8rX3fxAA" parameter="_emMVwM2iEeiCta8rX3fxAA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_emMV282iEeiCta8rX3fxAA" name="Fork(label)" incoming="_emMVyc2iEeiCta8rX3fxAA" outgoing="_emMVzs2iEeiCta8rX3fxAA _emMV0M2iEeiCta8rX3fxAA _emMV1M2iEeiCta8rX3fxAA _emMV182iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_emMV3M2iEeiCta8rX3fxAA" name="Input(value1)" outgoing="_emMVys2iEeiCta8rX3fxAA" parameter="_emMVw82iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_emMV3c2iEeiCta8rX3fxAA" name="Fork(value1)" incoming="_emMVys2iEeiCta8rX3fxAA" outgoing="_emMVzM2iEeiCta8rX3fxAA _emMV0s2iEeiCta8rX3fxAA _emMV1s2iEeiCta8rX3fxAA _emMV2c2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_emMV3s2iEeiCta8rX3fxAA" name="Input(value2)" outgoing="_emMVy82iEeiCta8rX3fxAA" parameter="_emMVxs2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_emMV382iEeiCta8rX3fxAA" name="Fork(value2)" incoming="_emMVy82iEeiCta8rX3fxAA" outgoing="_emMVzc2iEeiCta8rX3fxAA _emMVz82iEeiCta8rX3fxAA _emMV0c2iEeiCta8rX3fxAA _emMV082iEeiCta8rX3fxAA _emMV1c2iEeiCta8rX3fxAA _emMV2M2iEeiCta8rX3fxAA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_emMX2s2iEeiCta8rX3fxAA" name="Write" visibility="public" node="_emMX5c2iEeiCta8rX3fxAA _emMX5s2iEeiCta8rX3fxAA _emMX582iEeiCta8rX3fxAA" group="_emMX582iEeiCta8rX3fxAA">
      <packageImport xmi:id="_emMX282iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_emMX3M2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_emMX3c2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_emMX3s2iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_emMX382iEeiCta8rX3fxAA" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_emMX4M2iEeiCta8rX3fxAA" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMX4c2iEeiCta8rX3fxAA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMX4s2iEeiCta8rX3fxAA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMX482iEeiCta8rX3fxAA" target="_emMX5s2iEeiCta8rX3fxAA" source="_emMX5c2iEeiCta8rX3fxAA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_emMX5M2iEeiCta8rX3fxAA" target="_emMX8M2iEeiCta8rX3fxAA" source="_emMX5s2iEeiCta8rX3fxAA"/>
      <structuredNode xmi:id="_emMX582iEeiCta8rX3fxAA" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_emMX6M2iEeiCta8rX3fxAA" name="ExpressionStatement@31e6631d">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_emMX6c2iEeiCta8rX3fxAA" target="_emM8cs2iEeiCta8rX3fxAA" source="_emM8f82iEeiCta8rX3fxAA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_emMX6s2iEeiCta8rX3fxAA" target="_emMX682iEeiCta8rX3fxAA" source="_emM8c82iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_emMX682iEeiCta8rX3fxAA" name="Collect(Call(write))" incoming="_emMX6s2iEeiCta8rX3fxAA" mode="parallel" inputElement="_emM8cs2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMX7M2iEeiCta8rX3fxAA" target="_emMX9M2iEeiCta8rX3fxAA" source="_emM8cc2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMX7c2iEeiCta8rX3fxAA" target="_emM8Uc2iEeiCta8rX3fxAA" source="_emMX8M2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emMX7s2iEeiCta8rX3fxAA" target="_emMX882iEeiCta8rX3fxAA" source="_emM8RM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emMX782iEeiCta8rX3fxAA" target="_emM8Qc2iEeiCta8rX3fxAA" source="_emM8cs2iEeiCta8rX3fxAA"/>
            <structuredNodeInput xmi:id="_emMX8M2iEeiCta8rX3fxAA" name="Collect(Call(write)).input(Fork(value))" incoming="_emMX5M2iEeiCta8rX3fxAA" outgoing="_emMX7c2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMX8c2iEeiCta8rX3fxAA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMX8s2iEeiCta8rX3fxAA" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_emMX882iEeiCta8rX3fxAA" name="Call(write)" incoming="_emMX7s2iEeiCta8rX3fxAA">
              <argument xmi:id="_emMX9M2iEeiCta8rX3fxAA" name="Call(write).argument(value)" incoming="_emMX7M2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMX9c2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emMX9s2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_emMX982iEeiCta8rX3fxAA" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emMX-M2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emM8QM2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_emM8Qc2iEeiCta8rX3fxAA" name="Call(write).target" incoming="_emMX782iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emM8Qs2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emM8Q82iEeiCta8rX3fxAA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emM8RM2iEeiCta8rX3fxAA" name="Tuple@6d41c066" outgoing="_emMX7s2iEeiCta8rX3fxAA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emM8Rc2iEeiCta8rX3fxAA" target="_emM8Wc2iEeiCta8rX3fxAA" source="_emM8Uc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emM8Rs2iEeiCta8rX3fxAA" target="_emM8WM2iEeiCta8rX3fxAA" source="_emM8UM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emM8R82iEeiCta8rX3fxAA" target="_emM8ZM2iEeiCta8rX3fxAA" source="_emM8Uc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emM8SM2iEeiCta8rX3fxAA" target="_emM8cM2iEeiCta8rX3fxAA" source="_emM8b82iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emM8Sc2iEeiCta8rX3fxAA" target="_emM8cM2iEeiCta8rX3fxAA" source="_emM8XM2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emM8Ss2iEeiCta8rX3fxAA" target="_emM8X82iEeiCta8rX3fxAA" source="_emM8cM2iEeiCta8rX3fxAA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_emM8S82iEeiCta8rX3fxAA" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_emM8TM2iEeiCta8rX3fxAA" target="_emM8Zc2iEeiCta8rX3fxAA" source="_emM8cM2iEeiCta8rX3fxAA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_emM8Tc2iEeiCta8rX3fxAA" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emM8Ts2iEeiCta8rX3fxAA" target="_emM8cc2iEeiCta8rX3fxAA" source="_emM8Yc2iEeiCta8rX3fxAA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_emM8T82iEeiCta8rX3fxAA" target="_emM8cc2iEeiCta8rX3fxAA" source="_emM8Z82iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emM8UM2iEeiCta8rX3fxAA" name="Operands(EqualityExpression@3ea3e3da)" outgoing="_emM8Rs2iEeiCta8rX3fxAA">
                <node xmi:type="uml:ForkNode" xmi:id="_emM8Uc2iEeiCta8rX3fxAA" name="Fork('')@1da409d3" incoming="_emMX7c2iEeiCta8rX3fxAA" outgoing="_emM8Rc2iEeiCta8rX3fxAA _emM8R82iEeiCta8rX3fxAA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_emM8Us2iEeiCta8rX3fxAA" name="RightHandSide@21d64941"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emM8U82iEeiCta8rX3fxAA" name="Value(null)">
                  <result xmi:id="_emM8VM2iEeiCta8rX3fxAA" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emM8Vc2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emM8Vs2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_emM8V82iEeiCta8rX3fxAA"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_emM8WM2iEeiCta8rX3fxAA" name="Call(NotEmpty)" incoming="_emM8Rs2iEeiCta8rX3fxAA">
                <argument xmi:id="_emM8Wc2iEeiCta8rX3fxAA" name="Call(NotEmpty).argument(seq)" incoming="_emM8Rc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emM8Ws2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emM8W82iEeiCta8rX3fxAA" value="*"/>
                </argument>
                <result xmi:id="_emM8XM2iEeiCta8rX3fxAA" name="Call(NotEmpty).result()" outgoing="_emM8Sc2iEeiCta8rX3fxAA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emM8Xc2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emM8Xs2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emM8X82iEeiCta8rX3fxAA" name="NullCoalescingExpression@67785180.operand2" incoming="_emM8Ss2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emM8YM2iEeiCta8rX3fxAA" target="_emM8Yc2iEeiCta8rX3fxAA" source="_emM8ZM2iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_emM8Yc2iEeiCta8rX3fxAA" name="NullCoalescingExpression@67785180.operand2.result" incoming="_emM8YM2iEeiCta8rX3fxAA" outgoing="_emM8Ts2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emM8Ys2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emM8Y82iEeiCta8rX3fxAA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_emM8ZM2iEeiCta8rX3fxAA" name="Merge(Fork('')@1da409d3)" incoming="_emM8R82iEeiCta8rX3fxAA" outgoing="_emM8YM2iEeiCta8rX3fxAA"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_emM8Zc2iEeiCta8rX3fxAA" name="NullCoalescingExpression@67785180.operand3" incoming="_emM8TM2iEeiCta8rX3fxAA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_emM8Zs2iEeiCta8rX3fxAA" target="_emM8Z82iEeiCta8rX3fxAA" source="_emM8a82iEeiCta8rX3fxAA"/>
                <structuredNodeOutput xmi:id="_emM8Z82iEeiCta8rX3fxAA" name="NullCoalescingExpression@67785180.operand3.result" incoming="_emM8Zs2iEeiCta8rX3fxAA" outgoing="_emM8T82iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emM8aM2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emM8ac2iEeiCta8rX3fxAA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emM8as2iEeiCta8rX3fxAA" name="Value(&quot;null&quot;)">
                  <result xmi:id="_emM8a82iEeiCta8rX3fxAA" name="Value(&quot;null&quot;).result" outgoing="_emM8Zs2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emM8bM2iEeiCta8rX3fxAA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emM8bc2iEeiCta8rX3fxAA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_emM8bs2iEeiCta8rX3fxAA" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_emM8b82iEeiCta8rX3fxAA" name="Initial(NullCoalescingExpression@67785180)" outgoing="_emM8SM2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_emM8cM2iEeiCta8rX3fxAA" name="Decision(NullCoalescingExpression@67785180)" incoming="_emM8SM2iEeiCta8rX3fxAA _emM8Sc2iEeiCta8rX3fxAA" outgoing="_emM8Ss2iEeiCta8rX3fxAA _emM8TM2iEeiCta8rX3fxAA" decisionInputFlow="_emM8Sc2iEeiCta8rX3fxAA"/>
              <node xmi:type="uml:MergeNode" xmi:id="_emM8cc2iEeiCta8rX3fxAA" name="Merge(NullCoalescingExpression@67785180.result)" incoming="_emM8Ts2iEeiCta8rX3fxAA _emM8T82iEeiCta8rX3fxAA" outgoing="_emMX7M2iEeiCta8rX3fxAA"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_emM8cs2iEeiCta8rX3fxAA" name="Collect(Call(write)).inputElement" incoming="_emMX6c2iEeiCta8rX3fxAA" outgoing="_emMX782iEeiCta8rX3fxAA" regionAsInput="_emMX682iEeiCta8rX3fxAA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_emM8c82iEeiCta8rX3fxAA" name="Feature(Call(At).result())" outgoing="_emMX6s2iEeiCta8rX3fxAA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emM8dM2iEeiCta8rX3fxAA" target="_emM8ec2iEeiCta8rX3fxAA" source="_emM8hM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emM8dc2iEeiCta8rX3fxAA" target="_emM8jM2iEeiCta8rX3fxAA" source="_emM8iM2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_emM8ds2iEeiCta8rX3fxAA" target="_emM8eM2iEeiCta8rX3fxAA" source="_emM8gs2iEeiCta8rX3fxAA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_emM8d82iEeiCta8rX3fxAA" target="_emM8fM2iEeiCta8rX3fxAA" source="_emM8jM2iEeiCta8rX3fxAA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_emM8eM2iEeiCta8rX3fxAA" name="Call(At)" incoming="_emM8ds2iEeiCta8rX3fxAA">
              <argument xmi:id="_emM8ec2iEeiCta8rX3fxAA" name="Call(At).argument(seq)" incoming="_emM8dM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emM8es2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emM8e82iEeiCta8rX3fxAA" value="*"/>
              </argument>
              <argument xmi:id="_emM8fM2iEeiCta8rX3fxAA" name="Call(At).argument(index)" incoming="_emM8d82iEeiCta8rX3fxAA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emM8fc2iEeiCta8rX3fxAA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emM8fs2iEeiCta8rX3fxAA" value="1"/>
              </argument>
              <result xmi:id="_emM8f82iEeiCta8rX3fxAA" name="Call(At).result()" outgoing="_emMX6c2iEeiCta8rX3fxAA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emM8gM2iEeiCta8rX3fxAA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emM8gc2iEeiCta8rX3fxAA" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_emM8gs2iEeiCta8rX3fxAA" name="Tuple@6d51cc69" outgoing="_emM8ds2iEeiCta8rX3fxAA">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_emM8g82iEeiCta8rX3fxAA" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_emM8hM2iEeiCta8rX3fxAA" name="ReadExtent(StandardOutputChannel).result" outgoing="_emM8dM2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emM8hc2iEeiCta8rX3fxAA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emM8hs2iEeiCta8rX3fxAA" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_emM8h82iEeiCta8rX3fxAA" name="Value(1)">
                <result xmi:id="_emM8iM2iEeiCta8rX3fxAA" name="Value(1).result" outgoing="_emM8dc2iEeiCta8rX3fxAA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_emM8ic2iEeiCta8rX3fxAA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_emM8is2iEeiCta8rX3fxAA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_emM8i82iEeiCta8rX3fxAA" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_emM8jM2iEeiCta8rX3fxAA" name="Fork(Call(At).argument(index))" incoming="_emM8dc2iEeiCta8rX3fxAA" outgoing="_emM8d82iEeiCta8rX3fxAA"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_emMX5c2iEeiCta8rX3fxAA" name="Input(value)" outgoing="_emMX482iEeiCta8rX3fxAA" parameter="_emMX4M2iEeiCta8rX3fxAA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_emMX5s2iEeiCta8rX3fxAA" name="Fork(value)" incoming="_emMX482iEeiCta8rX3fxAA" outgoing="_emMX5M2iEeiCta8rX3fxAA"/>
    </packagedElement>
    <profileApplication xmi:id="_emM8jc2iEeiCta8rX3fxAA">
      <eAnnotations xmi:id="_emM8js2iEeiCta8rX3fxAA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_emM8j82iEeiCta8rX3fxAA" base_BehavioralFeature="_emJ8B82iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emM8kM2iEeiCta8rX3fxAA" base_BehavioralFeature="_emLwA82iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emM8kc2iEeiCta8rX3fxAA" base_BehavioralFeature="_emKhr82iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emM8ks2iEeiCta8rX3fxAA" base_BehavioralFeature="_emJ5_M2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emM8k82iEeiCta8rX3fxAA" base_BehavioralFeature="_emLuX82iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emNjUM2iEeiCta8rX3fxAA" base_BehavioralFeature="_emJ8oc2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emNjUc2iEeiCta8rX3fxAA" base_BehavioralFeature="_emLHXM2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emNjUs2iEeiCta8rX3fxAA" base_BehavioralFeature="_emJ5Zc2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emNjU82iEeiCta8rX3fxAA" base_BehavioralFeature="_emLva82iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emNjVM2iEeiCta8rX3fxAA" base_BehavioralFeature="_emKgjM2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emNjVc2iEeiCta8rX3fxAA" base_BehavioralFeature="_emJ5-M2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emNjVs2iEeiCta8rX3fxAA" base_BehavioralFeature="_emJ5bM2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emNjV82iEeiCta8rX3fxAA" base_BehavioralFeature="_emJ8Bs2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emOKYM2iEeiCta8rX3fxAA" base_BehavioralFeature="_emKhH82iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emOKYc2iEeiCta8rX3fxAA" base_BehavioralFeature="_emKiSs2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emOKYs2iEeiCta8rX3fxAA" base_BehavioralFeature="_emJ7es2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emOKY82iEeiCta8rX3fxAA" base_BehavioralFeature="_emLH882iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emOKZM2iEeiCta8rX3fxAA" base_BehavioralFeature="_emJ8nc2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emOKZc2iEeiCta8rX3fxAA" base_BehavioralFeature="_emKgiM2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emOKZs2iEeiCta8rX3fxAA" base_BehavioralFeature="_emKi4c2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emOKZ82iEeiCta8rX3fxAA" base_BehavioralFeature="_emLH982iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emOKaM2iEeiCta8rX3fxAA" base_BehavioralFeature="_emLwB82iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emOKac2iEeiCta8rX3fxAA" base_BehavioralFeature="_emKhI82iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emOKas2iEeiCta8rX3fxAA" base_BehavioralFeature="_emKhsM2iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emOKa82iEeiCta8rX3fxAA" base_BehavioralFeature="_emLHYM2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emOxcM2iEeiCta8rX3fxAA" base_BehavioralFeature="_emJ5Yc2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emOxcc2iEeiCta8rX3fxAA" base_BehavioralFeature="_emKi3c2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emOxcs2iEeiCta8rX3fxAA" base_BehavioralFeature="_emJ7ds2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emOxc82iEeiCta8rX3fxAA" base_BehavioralFeature="_emJ6j82iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emOxdM2iEeiCta8rX3fxAA" base_BehavioralFeature="_emJ6k82iEeiCta8rX3fxAA"/>
  <l2:Destroy xmi:id="_emOxdc2iEeiCta8rX3fxAA" base_BehavioralFeature="_emLvd82iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emOxds2iEeiCta8rX3fxAA" base_BehavioralFeature="_emKiRs2iEeiCta8rX3fxAA"/>
  <l2:Create xmi:id="_emOxd82iEeiCta8rX3fxAA" base_BehavioralFeature="_emLuTs2iEeiCta8rX3fxAA"/>
</xmi:XMI>

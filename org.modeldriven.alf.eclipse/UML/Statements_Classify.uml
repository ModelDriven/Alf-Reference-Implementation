<?xml version="1.1" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_2ksz8NXWEem1l5O0R0OWkQ" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_2ksz8dXWEem1l5O0R0OWkQ" name="Statements_Classify" visibility="public">
      <packageImport xmi:id="_2ksz8tXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2ksz89XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2ksz9NXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2ksz9dXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2ksz9tXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_2ksz99XWEem1l5O0R0OWkQ" general="_2kuqLtXWEem1l5O0R0OWkQ"/>
      <ownedAttribute xmi:id="_2ksz-NXWEem1l5O0R0OWkQ" name="Statements_Classify$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ksz-dXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ksz-tXWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ksz-9XWEem1l5O0R0OWkQ" name="Statements_Classify$method$1" visibility="private" specification="_2ks0_tXWEem1l5O0R0OWkQ" node="_2ks0ANXWEem1l5O0R0OWkQ _2ks0AdXWEem1l5O0R0OWkQ" group="_2ks0AdXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2ksz_NXWEem1l5O0R0OWkQ" name="" type="_2ksz8dXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ksz_dXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ksz_tXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2ksz_9XWEem1l5O0R0OWkQ" target="_2ks0ANXWEem1l5O0R0OWkQ" source="_2ks0KtXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_2ks0AdXWEem1l5O0R0OWkQ" name="Body(Statements_Classify$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0AtXWEem1l5O0R0OWkQ" target="_2ks0KtXWEem1l5O0R0OWkQ" source="_2ks0J9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0A9XWEem1l5O0R0OWkQ" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0BNXWEem1l5O0R0OWkQ" name="ExpressionStatement@b84d81b">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0BdXWEem1l5O0R0OWkQ" target="_2ks0HdXWEem1l5O0R0OWkQ" source="_2ks0C9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ks0BtXWEem1l5O0R0OWkQ" target="_2ks0HNXWEem1l5O0R0OWkQ" source="_2ks0CdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0B9XWEem1l5O0R0OWkQ" target="_2ks0FtXWEem1l5O0R0OWkQ" source="_2ks0ENXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ks0CNXWEem1l5O0R0OWkQ" target="_2ks0E9XWEem1l5O0R0OWkQ" source="_2ks0CdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0CdXWEem1l5O0R0OWkQ" name="Tuple@75de5e43" outgoing="_2ks0BtXWEem1l5O0R0OWkQ _2ks0CNXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ks0CtXWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_2ks0C9XWEem1l5O0R0OWkQ" name="Value(null).result" outgoing="_2ks0BdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0DNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0DdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2ks0DtXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2ks0D9XWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_2ks0ENXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ks0B9XWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0EdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0EtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0E9XWEem1l5O0R0OWkQ" name="Node(Call(run))" incoming="_2ks0CNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0FNXWEem1l5O0R0OWkQ" target="_2ks0GdXWEem1l5O0R0OWkQ" source="_2ks0INXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0FdXWEem1l5O0R0OWkQ" target="_2ks0I9XWEem1l5O0R0OWkQ" source="_2ks0FtXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2ks0FtXWEem1l5O0R0OWkQ" name="Input(Call(run).target)" incoming="_2ks0B9XWEem1l5O0R0OWkQ" outgoing="_2ks0FdXWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0F9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0GNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2ks0GdXWEem1l5O0R0OWkQ" name="Output(Call(run).result())" incoming="_2ks0FNXWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0GtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0G9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_2ks0HNXWEem1l5O0R0OWkQ" name="Call(run)" incoming="_2ks0BtXWEem1l5O0R0OWkQ" operation="_2ks1AtXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2ks0HdXWEem1l5O0R0OWkQ" name="Call(run).argument(tester)" incoming="_2ks0BdXWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0HtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0H9XWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2ks0INXWEem1l5O0R0OWkQ" name="Call(run).result()" outgoing="_2ks0FNXWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0IdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0ItXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <target xmi:id="_2ks0I9XWEem1l5O0R0OWkQ" name="Call(run).target" incoming="_2ks0FdXWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0JNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0JdXWEem1l5O0R0OWkQ" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2ks0JtXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2ks0J9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ks0AtXWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0KNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0KdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2ks0KtXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ks0AtXWEem1l5O0R0OWkQ" outgoing="_2ksz_9XWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ks0ANXWEem1l5O0R0OWkQ" name="Return" incoming="_2ksz_9XWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" parameter="_2ksz_NXWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ks0K9XWEem1l5O0R0OWkQ" name="run$method$1" visibility="private" specification="_2ks1AtXWEem1l5O0R0OWkQ" node="_2ks0NdXWEem1l5O0R0OWkQ _2ks0NtXWEem1l5O0R0OWkQ _2ks0N9XWEem1l5O0R0OWkQ _2ks0ONXWEem1l5O0R0OWkQ" group="_2ks0ONXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2ks0LNXWEem1l5O0R0OWkQ" name="tester" type="_2kurQNXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0LdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0LtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2ks0L9XWEem1l5O0R0OWkQ" name="" type="_2ksz8dXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0MNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0MdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0MtXWEem1l5O0R0OWkQ" target="_2ks0NtXWEem1l5O0R0OWkQ" source="_2ks0NdXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0M9XWEem1l5O0R0OWkQ" target="_2ks0N9XWEem1l5O0R0OWkQ" source="_2ks0etXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0NNXWEem1l5O0R0OWkQ" target="_2ks0g9XWEem1l5O0R0OWkQ" source="_2ks0NtXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_2ks0ONXWEem1l5O0R0OWkQ" name="Body(run$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0OdXWEem1l5O0R0OWkQ" target="_2ks0etXWEem1l5O0R0OWkQ" source="_2ks0d9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0OtXWEem1l5O0R0OWkQ" target="_2ks0itXWEem1l5O0R0OWkQ" source="_2ks0etXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2ks0O9XWEem1l5O0R0OWkQ" target="_2ks0RdXWEem1l5O0R0OWkQ" source="_2ks0idXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2ks0PNXWEem1l5O0R0OWkQ" target="_2ks0idXWEem1l5O0R0OWkQ" source="_2ks0e9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0PdXWEem1l5O0R0OWkQ" target="_2ks0jtXWEem1l5O0R0OWkQ" source="_2ks0etXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0PtXWEem1l5O0R0OWkQ" target="_2ks0ldXWEem1l5O0R0OWkQ" source="_2ks0kdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0P9XWEem1l5O0R0OWkQ" target="_2ks0odXWEem1l5O0R0OWkQ" source="_2ks0mNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0QNXWEem1l5O0R0OWkQ" target="_2ks0p9XWEem1l5O0R0OWkQ" source="_2ks0nNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2ks0QdXWEem1l5O0R0OWkQ" target="_2ks0q9XWEem1l5O0R0OWkQ" source="_2ks0qtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0QtXWEem1l5O0R0OWkQ" target="_2ks0q9XWEem1l5O0R0OWkQ" source="_2ks0pNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2ks0Q9XWEem1l5O0R0OWkQ" target="_2ks0e9XWEem1l5O0R0OWkQ" source="_2ks0q9XWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ks0RNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0RdXWEem1l5O0R0OWkQ" name="Body" incoming="_2ks0O9XWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0RtXWEem1l5O0R0OWkQ" name="ExpressionStatement@3111b8d5">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0R9XWEem1l5O0R0OWkQ" target="_2ks0SdXWEem1l5O0R0OWkQ" source="_2ks0VdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2ks0SNXWEem1l5O0R0OWkQ" name="SendSignal(Start)" signal="_2kuqKNXWEem1l5O0R0OWkQ">
                <target xmi:id="_2ks0SdXWEem1l5O0R0OWkQ" name="SendSignal(Start).target" incoming="_2ks0R9XWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0StXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0S9XWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0TNXWEem1l5O0R0OWkQ" name="InstanceCreationExpression@8c7e7d2">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0TdXWEem1l5O0R0OWkQ" target="_2ks0cNXWEem1l5O0R0OWkQ" source="_2ks0WdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0TtXWEem1l5O0R0OWkQ" target="_2ks0bdXWEem1l5O0R0OWkQ" source="_2ks0cNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0T9XWEem1l5O0R0OWkQ" target="_2ks0Z9XWEem1l5O0R0OWkQ" source="_2ks0XtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ks0UNXWEem1l5O0R0OWkQ" target="_2ks0YdXWEem1l5O0R0OWkQ" source="_2ks0XNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2ks0UdXWEem1l5O0R0OWkQ" target="_2ks0YdXWEem1l5O0R0OWkQ" source="_2ks0WNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0UtXWEem1l5O0R0OWkQ" target="_2ks0cdXWEem1l5O0R0OWkQ" source="_2ks0Y9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0U9XWEem1l5O0R0OWkQ" target="_2ks0c9XWEem1l5O0R0OWkQ" source="_2ks0cdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0VNXWEem1l5O0R0OWkQ" target="_2ks0VdXWEem1l5O0R0OWkQ" source="_2ks0cdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2ks0VdXWEem1l5O0R0OWkQ" name="Output(Output(Fork(Create(TestRunner).result)))" incoming="_2ks0VNXWEem1l5O0R0OWkQ" outgoing="_2ks0R9XWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0VtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0V9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_2ks0WNXWEem1l5O0R0OWkQ" name="Create(TestRunner)" outgoing="_2ks0UdXWEem1l5O0R0OWkQ" classifier="_2kuEXdXWEem1l5O0R0OWkQ">
                  <result xmi:id="_2ks0WdXWEem1l5O0R0OWkQ" name="Create(TestRunner).result" outgoing="_2ks0TdXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0WtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0W9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0XNXWEem1l5O0R0OWkQ" name="Tuple@3d790d6c" outgoing="_2ks0UNXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2ks0XdXWEem1l5O0R0OWkQ" name="ReadSelf">
                    <result xmi:id="_2ks0XtXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ks0T9XWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0X9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0YNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0YdXWEem1l5O0R0OWkQ" name="Node(Call(TestRunner))" incoming="_2ks0UdXWEem1l5O0R0OWkQ _2ks0UNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0YtXWEem1l5O0R0OWkQ" target="_2ks0Y9XWEem1l5O0R0OWkQ" source="_2ks0cNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2ks0Y9XWEem1l5O0R0OWkQ" name="Output(Fork(Create(TestRunner).result))" incoming="_2ks0YtXWEem1l5O0R0OWkQ" outgoing="_2ks0UtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0ZNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0ZdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_2ks0ZtXWEem1l5O0R0OWkQ" name="Call(TestRunner)" operation="_2kuqFtXWEem1l5O0R0OWkQ">
                    <argument xmi:id="_2ks0Z9XWEem1l5O0R0OWkQ" name="Call(TestRunner).argument(outer)" incoming="_2ks0T9XWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0aNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0adXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_2ks0atXWEem1l5O0R0OWkQ" name="Call(TestRunner).result()" type="_2kuEXdXWEem1l5O0R0OWkQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0a9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0bNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <target xmi:id="_2ks0bdXWEem1l5O0R0OWkQ" name="Call(TestRunner).target" incoming="_2ks0TtXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0btXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0b9XWEem1l5O0R0OWkQ" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2ks0cNXWEem1l5O0R0OWkQ" name="Fork(Create(TestRunner).result)" incoming="_2ks0TdXWEem1l5O0R0OWkQ" outgoing="_2ks0TtXWEem1l5O0R0OWkQ _2ks0YtXWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2ks0cdXWEem1l5O0R0OWkQ" name="Fork(Output(Fork(Create(TestRunner).result)))" incoming="_2ks0UtXWEem1l5O0R0OWkQ" outgoing="_2ks0U9XWEem1l5O0R0OWkQ _2ks0VNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_2ks0ctXWEem1l5O0R0OWkQ" name="Start(TestRunner)" isSynchronous="false">
                  <object xmi:id="_2ks0c9XWEem1l5O0R0OWkQ" name="Start(TestRunner).object" incoming="_2ks0U9XWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0dNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0ddXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2ks0dtXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2ks0d9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ks0OdXWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0eNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0edXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2ks0etXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ks0OdXWEem1l5O0R0OWkQ" outgoing="_2ks0M9XWEem1l5O0R0OWkQ _2ks0OtXWEem1l5O0R0OWkQ _2ks0PdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0e9XWEem1l5O0R0OWkQ" name="Super" incoming="_2ks0Q9XWEem1l5O0R0OWkQ" outgoing="_2ks0PNXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0fNXWEem1l5O0R0OWkQ" name="ExpressionStatement@26fecf47">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0fdXWEem1l5O0R0OWkQ" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0ftXWEem1l5O0R0OWkQ" target="_2ks0f9XWEem1l5O0R0OWkQ" source="_2ks0htXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2ks0f9XWEem1l5O0R0OWkQ" name="Output(Call(Test$method$1).result())" incoming="_2ks0ftXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0gNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0gdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ks0gtXWEem1l5O0R0OWkQ" name="Call(Test$method$1)" behavior="_2kuqOtXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2ks0g9XWEem1l5O0R0OWkQ" name="Call(Test$method$1).argument(tester)" incoming="_2ks0NNXWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0hNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0hdXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2ks0htXWEem1l5O0R0OWkQ" name="Call(Test$method$1).result()" outgoing="_2ks0ftXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0h9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0iNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_2ks0idXWEem1l5O0R0OWkQ" name="Call(Statements_Classify$initialization$1)" incoming="_2ks0PNXWEem1l5O0R0OWkQ" outgoing="_2ks0O9XWEem1l5O0R0OWkQ" operation="_2ks0_dXWEem1l5O0R0OWkQ">
            <target xmi:id="_2ks0itXWEem1l5O0R0OWkQ" name="Call(Statements_Classify$initialization$1).target" incoming="_2ks0OtXWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0i9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0jNXWEem1l5O0R0OWkQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ks0jdXWEem1l5O0R0OWkQ" name="Read(Statements_Classify$initializationFlag$1)" structuralFeature="_2ksz-NXWEem1l5O0R0OWkQ">
            <object xmi:id="_2ks0jtXWEem1l5O0R0OWkQ" name="Read(Statements_Classify$initializationFlag$1).object" incoming="_2ks0PdXWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0j9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0kNXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_2ks0kdXWEem1l5O0R0OWkQ" name="Read(Statements_Classify$initializationFlag$1).result" outgoing="_2ks0PtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0ktXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0k9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ks0lNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_2ks0ldXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ks0PtXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0ltXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0l9XWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_2ks0mNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ks0P9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0mdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0mtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ks0m9XWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_2ks0nNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ks0QNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0ndXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0ntXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2ks0n9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2ks0oNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_2ks0odXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ks0P9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0otXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0o9XWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_2ks0pNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ks0QtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0pdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0ptXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_2ks0p9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ks0QNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0qNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0qdXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2ks0qtXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ks0QdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2ks0q9XWEem1l5O0R0OWkQ" name="Decision(Test(Statements_Classify$initializationFlag$1))" incoming="_2ks0QdXWEem1l5O0R0OWkQ _2ks0QtXWEem1l5O0R0OWkQ" outgoing="_2ks0Q9XWEem1l5O0R0OWkQ" decisionInputFlow="_2ks0QtXWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ks0NdXWEem1l5O0R0OWkQ" name="Input(tester)" outgoing="_2ks0MtXWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" parameter="_2ks0LNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2ks0NtXWEem1l5O0R0OWkQ" name="Fork(tester)" incoming="_2ks0MtXWEem1l5O0R0OWkQ" outgoing="_2ks0NNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ks0N9XWEem1l5O0R0OWkQ" name="Return" incoming="_2ks0M9XWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" parameter="_2ks0L9XWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ks0rNXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2ks1CdXWEem1l5O0R0OWkQ" node="_2ks0rdXWEem1l5O0R0OWkQ" group="_2ks0rdXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2ks0rdXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ks0rtXWEem1l5O0R0OWkQ" name="Statements_Classify$initialization$1" visibility="private" specification="_2ks0_dXWEem1l5O0R0OWkQ" node="_2ks0r9XWEem1l5O0R0OWkQ" group="_2ks0r9XWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2ks0r9XWEem1l5O0R0OWkQ" name="Body(Statements_Classify$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0sNXWEem1l5O0R0OWkQ" target="_2ks0v9XWEem1l5O0R0OWkQ" source="_2ks0vNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0sdXWEem1l5O0R0OWkQ" target="_2ks0w9XWEem1l5O0R0OWkQ" source="_2ks0v9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0stXWEem1l5O0R0OWkQ" target="_2ks00NXWEem1l5O0R0OWkQ" source="_2ks0v9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0s9XWEem1l5O0R0OWkQ" target="_2ks039XWEem1l5O0R0OWkQ" source="_2ks0v9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0tNXWEem1l5O0R0OWkQ" target="_2ks05tXWEem1l5O0R0OWkQ" source="_2ks04tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0tdXWEem1l5O0R0OWkQ" target="_2ks08tXWEem1l5O0R0OWkQ" source="_2ks06dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0ttXWEem1l5O0R0OWkQ" target="_2ks0-NXWEem1l5O0R0OWkQ" source="_2ks07dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2ks0t9XWEem1l5O0R0OWkQ" target="_2ks0_NXWEem1l5O0R0OWkQ" source="_2ks0-9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0uNXWEem1l5O0R0OWkQ" target="_2ks0_NXWEem1l5O0R0OWkQ" source="_2ks09dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2ks0udXWEem1l5O0R0OWkQ" target="_2ks0wNXWEem1l5O0R0OWkQ" source="_2ks0_NXWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ks0utXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2ks0u9XWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2ks0vNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ks0sNXWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0vdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0vtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2ks0v9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ks0sNXWEem1l5O0R0OWkQ" outgoing="_2ks0sdXWEem1l5O0R0OWkQ _2ks0stXWEem1l5O0R0OWkQ _2ks0s9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0wNXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2ks0udXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks0wdXWEem1l5O0R0OWkQ" target="_2ks0xtXWEem1l5O0R0OWkQ" source="_2ks0wtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2ks0wtXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1)" outgoing="_2ks0wdXWEem1l5O0R0OWkQ" operation="_2kurMtXWEem1l5O0R0OWkQ">
              <target xmi:id="_2ks0w9XWEem1l5O0R0OWkQ" name="Call(Test$initialization$1).target" incoming="_2ks0sdXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0xNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0xdXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks0xtXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_2ks0wdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0x9XWEem1l5O0R0OWkQ" target="_2ks03dXWEem1l5O0R0OWkQ" source="_2ks0ydXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ks0yNXWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_2ks0ydXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2ks0x9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0ytXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0y9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2ks0zNXWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_2ks0zdXWEem1l5O0R0OWkQ" name="Iterate(Write(Statements_Classify$initializationFlag$1))" inputElement="_2ks03dXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0ztXWEem1l5O0R0OWkQ" target="_2ks02tXWEem1l5O0R0OWkQ" source="_2ks03dXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks0z9XWEem1l5O0R0OWkQ" target="_2ks01NXWEem1l5O0R0OWkQ" source="_2ks00NXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2ks00NXWEem1l5O0R0OWkQ" name="Iterate(Write(Statements_Classify$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2ks0stXWEem1l5O0R0OWkQ" outgoing="_2ks0z9XWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks00dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks00tXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ks009XWEem1l5O0R0OWkQ" name="Write(Statements_Classify$initializationFlag$1)" structuralFeature="_2ksz-NXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2ks01NXWEem1l5O0R0OWkQ" name="Write(Statements_Classify$initializationFlag$1).object" incoming="_2ks0z9XWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks01dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks01tXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ks019XWEem1l5O0R0OWkQ" name="Write(Statements_Classify$initializationFlag$1).result" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks02NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks02dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_2ks02tXWEem1l5O0R0OWkQ" name="Write(Statements_Classify$initializationFlag$1).value" incoming="_2ks0ztXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks029XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks03NXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2ks03dXWEem1l5O0R0OWkQ" name="Iterate(Write(Statements_Classify$initializationFlag$1)).inputElement" incoming="_2ks0x9XWEem1l5O0R0OWkQ" outgoing="_2ks0ztXWEem1l5O0R0OWkQ" regionAsInput="_2ks0zdXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ks03tXWEem1l5O0R0OWkQ" name="Read(Statements_Classify$initializationFlag$1)" structuralFeature="_2ksz-NXWEem1l5O0R0OWkQ">
            <object xmi:id="_2ks039XWEem1l5O0R0OWkQ" name="Read(Statements_Classify$initializationFlag$1).object" incoming="_2ks0s9XWEem1l5O0R0OWkQ" type="_2ksz8dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks04NXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks04dXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_2ks04tXWEem1l5O0R0OWkQ" name="Read(Statements_Classify$initializationFlag$1).result" outgoing="_2ks0tNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks049XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks05NXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ks05dXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_2ks05tXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ks0tNXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks059XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks06NXWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_2ks06dXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ks0tdXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks06tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks069XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ks07NXWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_2ks07dXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ks0ttXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks07tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks079XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2ks08NXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2ks08dXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_2ks08tXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ks0tdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks089XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks09NXWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_2ks09dXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ks0uNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks09tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks099XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_2ks0-NXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ks0ttXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks0-dXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks0-tXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2ks0-9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ks0t9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2ks0_NXWEem1l5O0R0OWkQ" name="Decision(Test(Statements_Classify$initializationFlag$1))" incoming="_2ks0t9XWEem1l5O0R0OWkQ _2ks0uNXWEem1l5O0R0OWkQ" outgoing="_2ks0udXWEem1l5O0R0OWkQ" decisionInputFlow="_2ks0uNXWEem1l5O0R0OWkQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_2ks0_dXWEem1l5O0R0OWkQ" name="Statements_Classify$initialization$1" visibility="protected" method="_2ks0rtXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_2ks0_tXWEem1l5O0R0OWkQ" name="Statements_Classify" visibility="public" method="_2ksz-9XWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2ks0_9XWEem1l5O0R0OWkQ" name="" visibility="package" type="_2ksz8dXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1ANXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1AdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2ks1AtXWEem1l5O0R0OWkQ" name="run" visibility="public" method="_2ks0K9XWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2ks1A9XWEem1l5O0R0OWkQ" name="tester" visibility="package" type="_2kurQNXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1BNXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1BdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2ks1BtXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2ksz8dXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1B9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1CNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2ks1CdXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2ks0rNXWEem1l5O0R0OWkQ" redefinedOperation="_2kurP9XWEem1l5O0R0OWkQ"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2ks1CtXWEem1l5O0R0OWkQ" name="Monitor" visibility="package">
        <ownedAttribute xmi:id="_2ks1C9XWEem1l5O0R0OWkQ" name="Monitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1DNXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1DdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ks1DtXWEem1l5O0R0OWkQ" name="Monitor$method$1" visibility="private" specification="_2ks1ldXWEem1l5O0R0OWkQ" node="_2ks1E9XWEem1l5O0R0OWkQ _2ks1FNXWEem1l5O0R0OWkQ" group="_2ks1FNXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ks1D9XWEem1l5O0R0OWkQ" name="" type="_2ks1CtXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1ENXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1EdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1EtXWEem1l5O0R0OWkQ" target="_2ks1E9XWEem1l5O0R0OWkQ" source="_2ks1JdXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2ks1FNXWEem1l5O0R0OWkQ" name="Body(Monitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1FdXWEem1l5O0R0OWkQ" target="_2ks1JdXWEem1l5O0R0OWkQ" source="_2ks1ItXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1FtXWEem1l5O0R0OWkQ" target="_2ks1J9XWEem1l5O0R0OWkQ" source="_2ks1JdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks1F9XWEem1l5O0R0OWkQ" target="_2ks1INXWEem1l5O0R0OWkQ" source="_2ks1JtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1GNXWEem1l5O0R0OWkQ" target="_2ks1K9XWEem1l5O0R0OWkQ" source="_2ks1JdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1GdXWEem1l5O0R0OWkQ" target="_2ks1MtXWEem1l5O0R0OWkQ" source="_2ks1LtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1GtXWEem1l5O0R0OWkQ" target="_2ks1PtXWEem1l5O0R0OWkQ" source="_2ks1NdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1G9XWEem1l5O0R0OWkQ" target="_2ks1RNXWEem1l5O0R0OWkQ" source="_2ks1OdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks1HNXWEem1l5O0R0OWkQ" target="_2ks1SNXWEem1l5O0R0OWkQ" source="_2ks1R9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1HdXWEem1l5O0R0OWkQ" target="_2ks1SNXWEem1l5O0R0OWkQ" source="_2ks1QdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks1HtXWEem1l5O0R0OWkQ" target="_2ks1JtXWEem1l5O0R0OWkQ" source="_2ks1SNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ks1H9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks1INXWEem1l5O0R0OWkQ" name="Body" incoming="_2ks1F9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ks1IdXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ks1ItXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ks1FdXWEem1l5O0R0OWkQ" type="_2ks1CtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1I9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1JNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ks1JdXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ks1FdXWEem1l5O0R0OWkQ" outgoing="_2ks1EtXWEem1l5O0R0OWkQ _2ks1FtXWEem1l5O0R0OWkQ _2ks1GNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2ks1JtXWEem1l5O0R0OWkQ" name="Call(Monitor$initialization$1)" incoming="_2ks1HtXWEem1l5O0R0OWkQ" outgoing="_2ks1F9XWEem1l5O0R0OWkQ" operation="_2ks1lNXWEem1l5O0R0OWkQ">
              <target xmi:id="_2ks1J9XWEem1l5O0R0OWkQ" name="Call(Monitor$initialization$1).target" incoming="_2ks1FtXWEem1l5O0R0OWkQ" type="_2ks1CtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1KNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1KdXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ks1KtXWEem1l5O0R0OWkQ" name="Read(Monitor$initializationFlag$1)" structuralFeature="_2ks1C9XWEem1l5O0R0OWkQ">
              <object xmi:id="_2ks1K9XWEem1l5O0R0OWkQ" name="Read(Monitor$initializationFlag$1).object" incoming="_2ks1GNXWEem1l5O0R0OWkQ" type="_2ks1CtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1LNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1LdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ks1LtXWEem1l5O0R0OWkQ" name="Read(Monitor$initializationFlag$1).result" outgoing="_2ks1GdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1L9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1MNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ks1MdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ks1MtXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ks1GdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1M9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1NNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ks1NdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ks1GtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1NtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1N9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ks1ONXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ks1OdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ks1G9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1OtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1O9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ks1PNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ks1PdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ks1PtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ks1GtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1P9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1QNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ks1QdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ks1HdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1QtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1Q9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ks1RNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ks1G9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1RdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1RtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ks1R9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ks1HNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ks1SNXWEem1l5O0R0OWkQ" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_2ks1HNXWEem1l5O0R0OWkQ _2ks1HdXWEem1l5O0R0OWkQ" outgoing="_2ks1HtXWEem1l5O0R0OWkQ" decisionInputFlow="_2ks1HdXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ks1E9XWEem1l5O0R0OWkQ" name="Return" incoming="_2ks1EtXWEem1l5O0R0OWkQ" type="_2ks1CtXWEem1l5O0R0OWkQ" parameter="_2ks1D9XWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ks1SdXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2ks1mdXWEem1l5O0R0OWkQ" node="_2ks1StXWEem1l5O0R0OWkQ" group="_2ks1StXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ks1StXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ks1S9XWEem1l5O0R0OWkQ" name="Monitor$initialization$1" visibility="private" specification="_2ks1lNXWEem1l5O0R0OWkQ" node="_2ks1TNXWEem1l5O0R0OWkQ" group="_2ks1TNXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ks1TNXWEem1l5O0R0OWkQ" name="Body(Monitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1TdXWEem1l5O0R0OWkQ" target="_2ks1W9XWEem1l5O0R0OWkQ" source="_2ks1WNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1TtXWEem1l5O0R0OWkQ" target="_2ks1Z9XWEem1l5O0R0OWkQ" source="_2ks1W9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1T9XWEem1l5O0R0OWkQ" target="_2ks1dtXWEem1l5O0R0OWkQ" source="_2ks1W9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1UNXWEem1l5O0R0OWkQ" target="_2ks1fdXWEem1l5O0R0OWkQ" source="_2ks1edXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1UdXWEem1l5O0R0OWkQ" target="_2ks1idXWEem1l5O0R0OWkQ" source="_2ks1gNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1UtXWEem1l5O0R0OWkQ" target="_2ks1j9XWEem1l5O0R0OWkQ" source="_2ks1hNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks1U9XWEem1l5O0R0OWkQ" target="_2ks1k9XWEem1l5O0R0OWkQ" source="_2ks1ktXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1VNXWEem1l5O0R0OWkQ" target="_2ks1k9XWEem1l5O0R0OWkQ" source="_2ks1jNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks1VdXWEem1l5O0R0OWkQ" target="_2ks1XNXWEem1l5O0R0OWkQ" source="_2ks1k9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ks1VtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ks1V9XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ks1WNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ks1TdXWEem1l5O0R0OWkQ" type="_2ks1CtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1WdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1WtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ks1W9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ks1TdXWEem1l5O0R0OWkQ" outgoing="_2ks1TtXWEem1l5O0R0OWkQ _2ks1T9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks1XNXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2ks1VdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks1XdXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1XtXWEem1l5O0R0OWkQ" target="_2ks1dNXWEem1l5O0R0OWkQ" source="_2ks1YNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ks1X9XWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2ks1YNXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2ks1XtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1YdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1YtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2ks1Y9XWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2ks1ZNXWEem1l5O0R0OWkQ" name="Iterate(Write(Monitor$initializationFlag$1))" inputElement="_2ks1dNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1ZdXWEem1l5O0R0OWkQ" target="_2ks1cdXWEem1l5O0R0OWkQ" source="_2ks1dNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1ZtXWEem1l5O0R0OWkQ" target="_2ks1a9XWEem1l5O0R0OWkQ" source="_2ks1Z9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2ks1Z9XWEem1l5O0R0OWkQ" name="Iterate(Write(Monitor$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2ks1TtXWEem1l5O0R0OWkQ" outgoing="_2ks1ZtXWEem1l5O0R0OWkQ" type="_2ks1CtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1aNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1adXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ks1atXWEem1l5O0R0OWkQ" name="Write(Monitor$initializationFlag$1)" structuralFeature="_2ks1C9XWEem1l5O0R0OWkQ">
                    <object xmi:id="_2ks1a9XWEem1l5O0R0OWkQ" name="Write(Monitor$initializationFlag$1).object" incoming="_2ks1ZtXWEem1l5O0R0OWkQ" type="_2ks1CtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1bNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1bdXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ks1btXWEem1l5O0R0OWkQ" name="Write(Monitor$initializationFlag$1).result" type="_2ks1CtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1b9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1cNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2ks1cdXWEem1l5O0R0OWkQ" name="Write(Monitor$initializationFlag$1).value" incoming="_2ks1ZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1ctXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1c9XWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2ks1dNXWEem1l5O0R0OWkQ" name="Iterate(Write(Monitor$initializationFlag$1)).inputElement" incoming="_2ks1XtXWEem1l5O0R0OWkQ" outgoing="_2ks1ZdXWEem1l5O0R0OWkQ" regionAsInput="_2ks1ZNXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ks1ddXWEem1l5O0R0OWkQ" name="Read(Monitor$initializationFlag$1)" structuralFeature="_2ks1C9XWEem1l5O0R0OWkQ">
              <object xmi:id="_2ks1dtXWEem1l5O0R0OWkQ" name="Read(Monitor$initializationFlag$1).object" incoming="_2ks1T9XWEem1l5O0R0OWkQ" type="_2ks1CtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1d9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1eNXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ks1edXWEem1l5O0R0OWkQ" name="Read(Monitor$initializationFlag$1).result" outgoing="_2ks1UNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1etXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1e9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ks1fNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ks1fdXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ks1UNXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1ftXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1f9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ks1gNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ks1UdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1gdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1gtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ks1g9XWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ks1hNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ks1UtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1hdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1htXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ks1h9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ks1iNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ks1idXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ks1UdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1itXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1i9XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ks1jNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ks1VNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1jdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1jtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ks1j9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ks1UtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1kNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1kdXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ks1ktXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ks1U9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ks1k9XWEem1l5O0R0OWkQ" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_2ks1U9XWEem1l5O0R0OWkQ _2ks1VNXWEem1l5O0R0OWkQ" outgoing="_2ks1VdXWEem1l5O0R0OWkQ" decisionInputFlow="_2ks1VNXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2ks1lNXWEem1l5O0R0OWkQ" name="Monitor$initialization$1" visibility="protected" method="_2ks1S9XWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2ks1ldXWEem1l5O0R0OWkQ" name="Monitor" visibility="public" method="_2ks1DtXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ks1ltXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2ks1CtXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1l9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1mNXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2ks1mdXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2ks1SdXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2ks1mtXWEem1l5O0R0OWkQ" name="InActiveMonitor" visibility="package">
        <generalization xmi:id="_2ks1m9XWEem1l5O0R0OWkQ" general="_2ks1CtXWEem1l5O0R0OWkQ"/>
        <ownedAttribute xmi:id="_2ks1nNXWEem1l5O0R0OWkQ" name="InActiveMonitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1ndXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1ntXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ks1n9XWEem1l5O0R0OWkQ" name="InActiveMonitor$method$1" visibility="private" specification="_2ks2LNXWEem1l5O0R0OWkQ" node="_2ks1pNXWEem1l5O0R0OWkQ _2ks1pdXWEem1l5O0R0OWkQ" group="_2ks1pdXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ks1oNXWEem1l5O0R0OWkQ" name="" type="_2ks1mtXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1odXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1otXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1o9XWEem1l5O0R0OWkQ" target="_2ks1pNXWEem1l5O0R0OWkQ" source="_2ks1ttXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2ks1pdXWEem1l5O0R0OWkQ" name="Body(InActiveMonitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1ptXWEem1l5O0R0OWkQ" target="_2ks1ttXWEem1l5O0R0OWkQ" source="_2ks1s9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1p9XWEem1l5O0R0OWkQ" target="_2ks1uNXWEem1l5O0R0OWkQ" source="_2ks1ttXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks1qNXWEem1l5O0R0OWkQ" target="_2ks1sdXWEem1l5O0R0OWkQ" source="_2ks1t9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1qdXWEem1l5O0R0OWkQ" target="_2ks1vNXWEem1l5O0R0OWkQ" source="_2ks1ttXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1qtXWEem1l5O0R0OWkQ" target="_2ks1w9XWEem1l5O0R0OWkQ" source="_2ks1v9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1q9XWEem1l5O0R0OWkQ" target="_2ks1z9XWEem1l5O0R0OWkQ" source="_2ks1xtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1rNXWEem1l5O0R0OWkQ" target="_2ks11dXWEem1l5O0R0OWkQ" source="_2ks1ytXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks1rdXWEem1l5O0R0OWkQ" target="_2ks12dXWEem1l5O0R0OWkQ" source="_2ks12NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1rtXWEem1l5O0R0OWkQ" target="_2ks12dXWEem1l5O0R0OWkQ" source="_2ks10tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks1r9XWEem1l5O0R0OWkQ" target="_2ks1t9XWEem1l5O0R0OWkQ" source="_2ks12dXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ks1sNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks1sdXWEem1l5O0R0OWkQ" name="Body" incoming="_2ks1qNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ks1stXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ks1s9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ks1ptXWEem1l5O0R0OWkQ" type="_2ks1mtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1tNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1tdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ks1ttXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ks1ptXWEem1l5O0R0OWkQ" outgoing="_2ks1o9XWEem1l5O0R0OWkQ _2ks1p9XWEem1l5O0R0OWkQ _2ks1qdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2ks1t9XWEem1l5O0R0OWkQ" name="Call(InActiveMonitor$initialization$1)" incoming="_2ks1r9XWEem1l5O0R0OWkQ" outgoing="_2ks1qNXWEem1l5O0R0OWkQ" operation="_2ks2K9XWEem1l5O0R0OWkQ">
              <target xmi:id="_2ks1uNXWEem1l5O0R0OWkQ" name="Call(InActiveMonitor$initialization$1).target" incoming="_2ks1p9XWEem1l5O0R0OWkQ" type="_2ks1mtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1udXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1utXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ks1u9XWEem1l5O0R0OWkQ" name="Read(InActiveMonitor$initializationFlag$1)" structuralFeature="_2ks1nNXWEem1l5O0R0OWkQ">
              <object xmi:id="_2ks1vNXWEem1l5O0R0OWkQ" name="Read(InActiveMonitor$initializationFlag$1).object" incoming="_2ks1qdXWEem1l5O0R0OWkQ" type="_2ks1mtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1vdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1vtXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ks1v9XWEem1l5O0R0OWkQ" name="Read(InActiveMonitor$initializationFlag$1).result" outgoing="_2ks1qtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1wNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1wdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ks1wtXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ks1w9XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ks1qtXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1xNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1xdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ks1xtXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ks1q9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1x9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1yNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ks1ydXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ks1ytXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ks1rNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1y9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1zNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ks1zdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ks1ztXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ks1z9XWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ks1q9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks10NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks10dXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ks10tXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ks1rtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks109XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks11NXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ks11dXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ks1rNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks11tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks119XWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ks12NXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ks1rdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ks12dXWEem1l5O0R0OWkQ" name="Decision(Test(InActiveMonitor$initializationFlag$1))" incoming="_2ks1rdXWEem1l5O0R0OWkQ _2ks1rtXWEem1l5O0R0OWkQ" outgoing="_2ks1r9XWEem1l5O0R0OWkQ" decisionInputFlow="_2ks1rtXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ks1pNXWEem1l5O0R0OWkQ" name="Return" incoming="_2ks1o9XWEem1l5O0R0OWkQ" type="_2ks1mtXWEem1l5O0R0OWkQ" parameter="_2ks1oNXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ks12tXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2ks2MNXWEem1l5O0R0OWkQ" node="_2ks129XWEem1l5O0R0OWkQ" group="_2ks129XWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ks129XWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ks13NXWEem1l5O0R0OWkQ" name="InActiveMonitor$initialization$1" visibility="private" specification="_2ks2K9XWEem1l5O0R0OWkQ" node="_2ks13dXWEem1l5O0R0OWkQ" group="_2ks13dXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ks13dXWEem1l5O0R0OWkQ" name="Body(InActiveMonitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks13tXWEem1l5O0R0OWkQ" target="_2ks17dXWEem1l5O0R0OWkQ" source="_2ks16tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks139XWEem1l5O0R0OWkQ" target="_2ks18dXWEem1l5O0R0OWkQ" source="_2ks17dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks14NXWEem1l5O0R0OWkQ" target="_2ks1_tXWEem1l5O0R0OWkQ" source="_2ks17dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks14dXWEem1l5O0R0OWkQ" target="_2ks2DdXWEem1l5O0R0OWkQ" source="_2ks17dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks14tXWEem1l5O0R0OWkQ" target="_2ks2FNXWEem1l5O0R0OWkQ" source="_2ks2ENXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks149XWEem1l5O0R0OWkQ" target="_2ks2INXWEem1l5O0R0OWkQ" source="_2ks2F9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks15NXWEem1l5O0R0OWkQ" target="_2ks2JtXWEem1l5O0R0OWkQ" source="_2ks2G9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks15dXWEem1l5O0R0OWkQ" target="_2ks2KtXWEem1l5O0R0OWkQ" source="_2ks2KdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks15tXWEem1l5O0R0OWkQ" target="_2ks2KtXWEem1l5O0R0OWkQ" source="_2ks2I9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks159XWEem1l5O0R0OWkQ" target="_2ks17tXWEem1l5O0R0OWkQ" source="_2ks2KtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ks16NXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ks16dXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ks16tXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ks13tXWEem1l5O0R0OWkQ" type="_2ks1mtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks169XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks17NXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ks17dXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ks13tXWEem1l5O0R0OWkQ" outgoing="_2ks139XWEem1l5O0R0OWkQ _2ks14NXWEem1l5O0R0OWkQ _2ks14dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks17tXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2ks159XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ks179XWEem1l5O0R0OWkQ" target="_2ks19NXWEem1l5O0R0OWkQ" source="_2ks18NXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2ks18NXWEem1l5O0R0OWkQ" name="Call(Monitor$initialization$1)" outgoing="_2ks179XWEem1l5O0R0OWkQ" operation="_2ks1lNXWEem1l5O0R0OWkQ">
                <target xmi:id="_2ks18dXWEem1l5O0R0OWkQ" name="Call(Monitor$initialization$1).target" incoming="_2ks139XWEem1l5O0R0OWkQ" type="_2ks1CtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks18tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks189XWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks19NXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_2ks179XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks19dXWEem1l5O0R0OWkQ" target="_2ks2C9XWEem1l5O0R0OWkQ" source="_2ks199XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ks19tXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2ks199XWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2ks19dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1-NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks1-dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2ks1-tXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2ks1-9XWEem1l5O0R0OWkQ" name="Iterate(Write(InActiveMonitor$initializationFlag$1))" inputElement="_2ks2C9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1_NXWEem1l5O0R0OWkQ" target="_2ks2CNXWEem1l5O0R0OWkQ" source="_2ks2C9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks1_dXWEem1l5O0R0OWkQ" target="_2ks2AtXWEem1l5O0R0OWkQ" source="_2ks1_tXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2ks1_tXWEem1l5O0R0OWkQ" name="Iterate(Write(InActiveMonitor$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2ks14NXWEem1l5O0R0OWkQ" outgoing="_2ks1_dXWEem1l5O0R0OWkQ" type="_2ks1mtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks1_9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2ANXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ks2AdXWEem1l5O0R0OWkQ" name="Write(InActiveMonitor$initializationFlag$1)" structuralFeature="_2ks1nNXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2ks2AtXWEem1l5O0R0OWkQ" name="Write(InActiveMonitor$initializationFlag$1).object" incoming="_2ks1_dXWEem1l5O0R0OWkQ" type="_2ks1mtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2A9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2BNXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ks2BdXWEem1l5O0R0OWkQ" name="Write(InActiveMonitor$initializationFlag$1).result" type="_2ks1mtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2BtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2B9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2ks2CNXWEem1l5O0R0OWkQ" name="Write(InActiveMonitor$initializationFlag$1).value" incoming="_2ks1_NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2CdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2CtXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2ks2C9XWEem1l5O0R0OWkQ" name="Iterate(Write(InActiveMonitor$initializationFlag$1)).inputElement" incoming="_2ks19dXWEem1l5O0R0OWkQ" outgoing="_2ks1_NXWEem1l5O0R0OWkQ" regionAsInput="_2ks1-9XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ks2DNXWEem1l5O0R0OWkQ" name="Read(InActiveMonitor$initializationFlag$1)" structuralFeature="_2ks1nNXWEem1l5O0R0OWkQ">
              <object xmi:id="_2ks2DdXWEem1l5O0R0OWkQ" name="Read(InActiveMonitor$initializationFlag$1).object" incoming="_2ks14dXWEem1l5O0R0OWkQ" type="_2ks1mtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2DtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2D9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ks2ENXWEem1l5O0R0OWkQ" name="Read(InActiveMonitor$initializationFlag$1).result" outgoing="_2ks14tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2EdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2EtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ks2E9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ks2FNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ks14tXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2FdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2FtXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ks2F9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ks149XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2GNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2GdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ks2GtXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ks2G9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ks15NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2HNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2HdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ks2HtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ks2H9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ks2INXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ks149XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2IdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2ItXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ks2I9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ks15tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2JNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2JdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ks2JtXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ks15NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2J9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2KNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ks2KdXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ks15dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ks2KtXWEem1l5O0R0OWkQ" name="Decision(Test(InActiveMonitor$initializationFlag$1))" incoming="_2ks15dXWEem1l5O0R0OWkQ _2ks15tXWEem1l5O0R0OWkQ" outgoing="_2ks159XWEem1l5O0R0OWkQ" decisionInputFlow="_2ks15tXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2ks2K9XWEem1l5O0R0OWkQ" name="InActiveMonitor$initialization$1" visibility="protected" method="_2ks13NXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2ks2LNXWEem1l5O0R0OWkQ" name="InActiveMonitor" visibility="public" method="_2ks1n9XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ks2LdXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2ks1mtXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2LtXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2L9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2ks2MNXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2ks12tXWEem1l5O0R0OWkQ" redefinedOperation="_2ks1mdXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2ks2MdXWEem1l5O0R0OWkQ" name="ActiveMonitor" visibility="package" classifierBehavior="_2ks2OdXWEem1l5O0R0OWkQ" isActive="true">
        <generalization xmi:id="_2ks2MtXWEem1l5O0R0OWkQ" general="_2ks1CtXWEem1l5O0R0OWkQ"/>
        <ownedAttribute xmi:id="_2ks2M9XWEem1l5O0R0OWkQ" name="ActiveMonitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2NNXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2NdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2ks2NtXWEem1l5O0R0OWkQ" name="n" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2N9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2ONXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ks2OdXWEem1l5O0R0OWkQ" name="ActiveMonitor$classifierBehavior$1" visibility="private" isActive="true" node="_2ks2OtXWEem1l5O0R0OWkQ" group="_2ks2OtXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ks2OtXWEem1l5O0R0OWkQ" name="Body(ActiveMonitor$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks2O9XWEem1l5O0R0OWkQ" target="_2ks2ZNXWEem1l5O0R0OWkQ" source="_2ks2PNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks2PNXWEem1l5O0R0OWkQ" name="ExpressionStatement@5c6596b4" outgoing="_2ks2O9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2PdXWEem1l5O0R0OWkQ" target="_2ks2SNXWEem1l5O0R0OWkQ" source="_2ks2RNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2PtXWEem1l5O0R0OWkQ" target="_2ks2UdXWEem1l5O0R0OWkQ" source="_2ks2TtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2P9XWEem1l5O0R0OWkQ" target="_2ks2VdXWEem1l5O0R0OWkQ" source="_2ks2S9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2QNXWEem1l5O0R0OWkQ" target="_2ks2TtXWEem1l5O0R0OWkQ" source="_2ks2YNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ks2QdXWEem1l5O0R0OWkQ" target="_2ks2QtXWEem1l5O0R0OWkQ" source="_2ks2XtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks2QtXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@7ce87c9)" incoming="_2ks2QdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2ks2Q9XWEem1l5O0R0OWkQ" name="ReadSelf">
                  <result xmi:id="_2ks2RNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ks2PdXWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2RdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2RtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2ks2R9XWEem1l5O0R0OWkQ" name="Clear(n)" structuralFeature="_2ks2NtXWEem1l5O0R0OWkQ">
                <object xmi:id="_2ks2SNXWEem1l5O0R0OWkQ" name="Clear(n).object" incoming="_2ks2PdXWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2SdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2StXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2ks2S9XWEem1l5O0R0OWkQ" name="Clear(n).result" outgoing="_2ks2P9XWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2TNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2TdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2ks2TtXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@7ce87c9)" incoming="_2ks2QNXWEem1l5O0R0OWkQ" outgoing="_2ks2PtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks2T9XWEem1l5O0R0OWkQ" name="WriteAll(ActiveMonitor::n)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2UNXWEem1l5O0R0OWkQ" target="_2ks2W9XWEem1l5O0R0OWkQ" source="_2ks2UdXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2ks2UdXWEem1l5O0R0OWkQ" name="WriteAll(ActiveMonitor::n).input(ActiveMonitor::n)" incoming="_2ks2PtXWEem1l5O0R0OWkQ" outgoing="_2ks2UNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2UtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2U9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ks2VNXWEem1l5O0R0OWkQ" name="Write(n)" structuralFeature="_2ks2NtXWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_2ks2VdXWEem1l5O0R0OWkQ" name="Write(n).object" incoming="_2ks2P9XWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2VtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2V9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ks2WNXWEem1l5O0R0OWkQ" name="Write(n).result" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2WdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2WtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_2ks2W9XWEem1l5O0R0OWkQ" name="Write(n).value" incoming="_2ks2UNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2XNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2XdXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks2XtXWEem1l5O0R0OWkQ" name="RightHandSide@19304519" outgoing="_2ks2QdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ks2X9XWEem1l5O0R0OWkQ" name="Value(1)">
                  <result xmi:id="_2ks2YNXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2ks2QNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2YdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2YtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2ks2Y9XWEem1l5O0R0OWkQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks2ZNXWEem1l5O0R0OWkQ" name="ExpressionStatement@71d92887" incoming="_2ks2O9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2ZdXWEem1l5O0R0OWkQ" target="_2ks2bdXWEem1l5O0R0OWkQ" source="_2ks2cNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ks2ZtXWEem1l5O0R0OWkQ" target="_2ks2Z9XWEem1l5O0R0OWkQ" source="_2ks2btXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_2ks2Z9XWEem1l5O0R0OWkQ" name="Collect(SendSignal(Continue))" incoming="_2ks2ZtXWEem1l5O0R0OWkQ" mode="parallel" inputElement="_2ks2bdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2aNXWEem1l5O0R0OWkQ" target="_2ks2atXWEem1l5O0R0OWkQ" source="_2ks2bdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:SendSignalAction" xmi:id="_2ks2adXWEem1l5O0R0OWkQ" name="SendSignal(Continue)" signal="_2kuqKdXWEem1l5O0R0OWkQ">
                  <target xmi:id="_2ks2atXWEem1l5O0R0OWkQ" name="SendSignal(Continue).target" incoming="_2ks2aNXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2a9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2bNXWEem1l5O0R0OWkQ" value="1"/>
                  </target>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2ks2bdXWEem1l5O0R0OWkQ" name="Collect(SendSignal(Continue)).inputElement" incoming="_2ks2ZdXWEem1l5O0R0OWkQ" outgoing="_2ks2aNXWEem1l5O0R0OWkQ" regionAsInput="_2ks2Z9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks2btXWEem1l5O0R0OWkQ" name="Feature(ReadExtent(TestRunner).result)" outgoing="_2ks2ZtXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_2ks2b9XWEem1l5O0R0OWkQ" name="ReadExtent(TestRunner)" classifier="_2kuEXdXWEem1l5O0R0OWkQ">
                  <result xmi:id="_2ks2cNXWEem1l5O0R0OWkQ" name="ReadExtent(TestRunner).result" outgoing="_2ks2ZdXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2cdXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2ctXWEem1l5O0R0OWkQ" value="*"/>
                  </result>
                </node>
              </node>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ks2c9XWEem1l5O0R0OWkQ" name="ActiveMonitor$method$1" visibility="private" specification="_2ktbYNXWEem1l5O0R0OWkQ" node="_2ks2eNXWEem1l5O0R0OWkQ _2ks2edXWEem1l5O0R0OWkQ" group="_2ks2edXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ks2dNXWEem1l5O0R0OWkQ" name="" type="_2ks2MdXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2ddXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2dtXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2d9XWEem1l5O0R0OWkQ" target="_2ks2eNXWEem1l5O0R0OWkQ" source="_2ks2itXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2ks2edXWEem1l5O0R0OWkQ" name="Body(ActiveMonitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2etXWEem1l5O0R0OWkQ" target="_2ks2itXWEem1l5O0R0OWkQ" source="_2ks2h9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2e9XWEem1l5O0R0OWkQ" target="_2ks2jNXWEem1l5O0R0OWkQ" source="_2ks2itXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks2fNXWEem1l5O0R0OWkQ" target="_2ks2hdXWEem1l5O0R0OWkQ" source="_2ks2i9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2fdXWEem1l5O0R0OWkQ" target="_2ks2kNXWEem1l5O0R0OWkQ" source="_2ks2itXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2ftXWEem1l5O0R0OWkQ" target="_2ks2l9XWEem1l5O0R0OWkQ" source="_2ks2k9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2f9XWEem1l5O0R0OWkQ" target="_2ks2o9XWEem1l5O0R0OWkQ" source="_2ks2mtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2gNXWEem1l5O0R0OWkQ" target="_2ks2qdXWEem1l5O0R0OWkQ" source="_2ks2ntXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks2gdXWEem1l5O0R0OWkQ" target="_2ks2rdXWEem1l5O0R0OWkQ" source="_2ks2rNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2gtXWEem1l5O0R0OWkQ" target="_2ks2rdXWEem1l5O0R0OWkQ" source="_2ks2ptXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ks2g9XWEem1l5O0R0OWkQ" target="_2ks2i9XWEem1l5O0R0OWkQ" source="_2ks2rdXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ks2hNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ks2hdXWEem1l5O0R0OWkQ" name="Body" incoming="_2ks2fNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ks2htXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ks2h9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ks2etXWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2iNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2idXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ks2itXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ks2etXWEem1l5O0R0OWkQ" outgoing="_2ks2d9XWEem1l5O0R0OWkQ _2ks2e9XWEem1l5O0R0OWkQ _2ks2fdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2ks2i9XWEem1l5O0R0OWkQ" name="Call(ActiveMonitor$initialization$1)" incoming="_2ks2g9XWEem1l5O0R0OWkQ" outgoing="_2ks2fNXWEem1l5O0R0OWkQ" operation="_2ktbX9XWEem1l5O0R0OWkQ">
              <target xmi:id="_2ks2jNXWEem1l5O0R0OWkQ" name="Call(ActiveMonitor$initialization$1).target" incoming="_2ks2e9XWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2jdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2jtXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ks2j9XWEem1l5O0R0OWkQ" name="Read(ActiveMonitor$initializationFlag$1)" structuralFeature="_2ks2M9XWEem1l5O0R0OWkQ">
              <object xmi:id="_2ks2kNXWEem1l5O0R0OWkQ" name="Read(ActiveMonitor$initializationFlag$1).object" incoming="_2ks2fdXWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2kdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2ktXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ks2k9XWEem1l5O0R0OWkQ" name="Read(ActiveMonitor$initializationFlag$1).result" outgoing="_2ks2ftXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2lNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2ldXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ks2ltXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ks2l9XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ks2ftXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2mNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2mdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ks2mtXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ks2f9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2m9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2nNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ks2ndXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ks2ntXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ks2gNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2n9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2oNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ks2odXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ks2otXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ks2o9XWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ks2f9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2pNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2pdXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ks2ptXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ks2gtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2p9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2qNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ks2qdXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ks2gNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ks2qtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ks2q9XWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ks2rNXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ks2gdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ks2rdXWEem1l5O0R0OWkQ" name="Decision(Test(ActiveMonitor$initializationFlag$1))" incoming="_2ks2gdXWEem1l5O0R0OWkQ _2ks2gtXWEem1l5O0R0OWkQ" outgoing="_2ks2g9XWEem1l5O0R0OWkQ" decisionInputFlow="_2ks2gtXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ks2eNXWEem1l5O0R0OWkQ" name="Return" incoming="_2ks2d9XWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" parameter="_2ks2dNXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ks2rtXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2ktbZNXWEem1l5O0R0OWkQ" node="_2ks2r9XWEem1l5O0R0OWkQ" group="_2ks2r9XWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ks2r9XWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ks2sNXWEem1l5O0R0OWkQ" name="ActiveMonitor$initialization$1" visibility="private" specification="_2ktbX9XWEem1l5O0R0OWkQ" node="_2ks2sdXWEem1l5O0R0OWkQ" group="_2ks2sdXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ks2sdXWEem1l5O0R0OWkQ" name="Body(ActiveMonitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ks2stXWEem1l5O0R0OWkQ" target="_2ktbD9XWEem1l5O0R0OWkQ" source="_2ktbDNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbANXWEem1l5O0R0OWkQ" target="_2ktbFNXWEem1l5O0R0OWkQ" source="_2ktbD9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbAdXWEem1l5O0R0OWkQ" target="_2ktbH9XWEem1l5O0R0OWkQ" source="_2ktbD9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbAtXWEem1l5O0R0OWkQ" target="_2ktbMtXWEem1l5O0R0OWkQ" source="_2ktbD9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbA9XWEem1l5O0R0OWkQ" target="_2ktbQdXWEem1l5O0R0OWkQ" source="_2ktbD9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbBNXWEem1l5O0R0OWkQ" target="_2ktbSNXWEem1l5O0R0OWkQ" source="_2ktbRNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbBdXWEem1l5O0R0OWkQ" target="_2ktbVNXWEem1l5O0R0OWkQ" source="_2ktbS9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbBtXWEem1l5O0R0OWkQ" target="_2ktbWtXWEem1l5O0R0OWkQ" source="_2ktbT9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktbB9XWEem1l5O0R0OWkQ" target="_2ktbXtXWEem1l5O0R0OWkQ" source="_2ktbXdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbCNXWEem1l5O0R0OWkQ" target="_2ktbXtXWEem1l5O0R0OWkQ" source="_2ktbV9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktbCdXWEem1l5O0R0OWkQ" target="_2ktbENXWEem1l5O0R0OWkQ" source="_2ktbXtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ktbCtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ktbC9XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ktbDNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ks2stXWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbDdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbDtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ktbD9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ks2stXWEem1l5O0R0OWkQ" outgoing="_2ktbANXWEem1l5O0R0OWkQ _2ktbAdXWEem1l5O0R0OWkQ _2ktbAtXWEem1l5O0R0OWkQ _2ktbA9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktbENXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2ktbCdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ktbEdXWEem1l5O0R0OWkQ" target="_2ktbF9XWEem1l5O0R0OWkQ" source="_2ktbE9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ktbEtXWEem1l5O0R0OWkQ" target="_2ktbKNXWEem1l5O0R0OWkQ" source="_2ktbF9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2ktbE9XWEem1l5O0R0OWkQ" name="Call(Monitor$initialization$1)" outgoing="_2ktbEdXWEem1l5O0R0OWkQ" operation="_2ks1lNXWEem1l5O0R0OWkQ">
                <target xmi:id="_2ktbFNXWEem1l5O0R0OWkQ" name="Call(Monitor$initialization$1).target" incoming="_2ktbANXWEem1l5O0R0OWkQ" type="_2ks1CtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbFdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbFtXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktbF9XWEem1l5O0R0OWkQ" name="Initialize(n)" incoming="_2ktbEdXWEem1l5O0R0OWkQ" outgoing="_2ktbEtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbGNXWEem1l5O0R0OWkQ" target="_2ktbJdXWEem1l5O0R0OWkQ" source="_2ktbGtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktbGdXWEem1l5O0R0OWkQ" name="Value(0)">
                  <result xmi:id="_2ktbGtXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ktbGNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbG9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbHNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2ktbHdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ktbHtXWEem1l5O0R0OWkQ" name="Write(n)" structuralFeature="_2ks2NtXWEem1l5O0R0OWkQ" isReplaceAll="true">
                  <object xmi:id="_2ktbH9XWEem1l5O0R0OWkQ" name="Write(n).object" incoming="_2ktbAdXWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbINXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbIdXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2ktbItXWEem1l5O0R0OWkQ" name="Write(n).result" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbI9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbJNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_2ktbJdXWEem1l5O0R0OWkQ" name="Write(n).value" incoming="_2ktbGNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbJtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbJ9XWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktbKNXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_2ktbEtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbKdXWEem1l5O0R0OWkQ" target="_2ktbP9XWEem1l5O0R0OWkQ" source="_2ktbK9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktbKtXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2ktbK9XWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2ktbKdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbLNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbLdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2ktbLtXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2ktbL9XWEem1l5O0R0OWkQ" name="Iterate(Write(ActiveMonitor$initializationFlag$1))" inputElement="_2ktbP9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbMNXWEem1l5O0R0OWkQ" target="_2ktbPNXWEem1l5O0R0OWkQ" source="_2ktbP9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbMdXWEem1l5O0R0OWkQ" target="_2ktbNtXWEem1l5O0R0OWkQ" source="_2ktbMtXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2ktbMtXWEem1l5O0R0OWkQ" name="Iterate(Write(ActiveMonitor$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2ktbAtXWEem1l5O0R0OWkQ" outgoing="_2ktbMdXWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbM9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbNNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ktbNdXWEem1l5O0R0OWkQ" name="Write(ActiveMonitor$initializationFlag$1)" structuralFeature="_2ks2M9XWEem1l5O0R0OWkQ">
                    <object xmi:id="_2ktbNtXWEem1l5O0R0OWkQ" name="Write(ActiveMonitor$initializationFlag$1).object" incoming="_2ktbMdXWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbN9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbONXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ktbOdXWEem1l5O0R0OWkQ" name="Write(ActiveMonitor$initializationFlag$1).result" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbOtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbO9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2ktbPNXWEem1l5O0R0OWkQ" name="Write(ActiveMonitor$initializationFlag$1).value" incoming="_2ktbMNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbPdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbPtXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2ktbP9XWEem1l5O0R0OWkQ" name="Iterate(Write(ActiveMonitor$initializationFlag$1)).inputElement" incoming="_2ktbKdXWEem1l5O0R0OWkQ" outgoing="_2ktbMNXWEem1l5O0R0OWkQ" regionAsInput="_2ktbL9XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ktbQNXWEem1l5O0R0OWkQ" name="Read(ActiveMonitor$initializationFlag$1)" structuralFeature="_2ks2M9XWEem1l5O0R0OWkQ">
              <object xmi:id="_2ktbQdXWEem1l5O0R0OWkQ" name="Read(ActiveMonitor$initializationFlag$1).object" incoming="_2ktbA9XWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbQtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbQ9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ktbRNXWEem1l5O0R0OWkQ" name="Read(ActiveMonitor$initializationFlag$1).result" outgoing="_2ktbBNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbRdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbRtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ktbR9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ktbSNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ktbBNXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbSdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbStXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ktbS9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ktbBdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbTNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbTdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktbTtXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ktbT9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ktbBtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbUNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbUdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ktbUtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ktbU9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ktbVNXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ktbBdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbVdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbVtXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ktbV9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ktbCNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbWNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbWdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ktbWtXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ktbBtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbW9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbXNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ktbXdXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ktbB9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ktbXtXWEem1l5O0R0OWkQ" name="Decision(Test(ActiveMonitor$initializationFlag$1))" incoming="_2ktbB9XWEem1l5O0R0OWkQ _2ktbCNXWEem1l5O0R0OWkQ" outgoing="_2ktbCdXWEem1l5O0R0OWkQ" decisionInputFlow="_2ktbCNXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2ktbX9XWEem1l5O0R0OWkQ" name="ActiveMonitor$initialization$1" visibility="protected" method="_2ks2sNXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2ktbYNXWEem1l5O0R0OWkQ" name="ActiveMonitor" visibility="public" method="_2ks2c9XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ktbYdXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2ks2MdXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbYtXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbY9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2ktbZNXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2ks2rtXWEem1l5O0R0OWkQ" redefinedOperation="_2ks1mdXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2ktbZdXWEem1l5O0R0OWkQ" name="Employee" visibility="package">
        <ownedAttribute xmi:id="_2ktbZtXWEem1l5O0R0OWkQ" name="Employee$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbZ9XWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbaNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktbadXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2ktb8NXWEem1l5O0R0OWkQ" node="_2ktbatXWEem1l5O0R0OWkQ" group="_2ktbatXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ktbatXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktba9XWEem1l5O0R0OWkQ" name="Employee$method$1" visibility="private" specification="_2ktb8dXWEem1l5O0R0OWkQ" node="_2ktbcNXWEem1l5O0R0OWkQ _2ktbcdXWEem1l5O0R0OWkQ" group="_2ktbcdXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ktbbNXWEem1l5O0R0OWkQ" name="" type="_2ktbZdXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbbdXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbbtXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbb9XWEem1l5O0R0OWkQ" target="_2ktbcNXWEem1l5O0R0OWkQ" source="_2ktbgtXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2ktbcdXWEem1l5O0R0OWkQ" name="Body(Employee$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbctXWEem1l5O0R0OWkQ" target="_2ktbgtXWEem1l5O0R0OWkQ" source="_2ktbf9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbc9XWEem1l5O0R0OWkQ" target="_2ktbhNXWEem1l5O0R0OWkQ" source="_2ktbgtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktbdNXWEem1l5O0R0OWkQ" target="_2ktbfdXWEem1l5O0R0OWkQ" source="_2ktbg9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbddXWEem1l5O0R0OWkQ" target="_2ktbiNXWEem1l5O0R0OWkQ" source="_2ktbgtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbdtXWEem1l5O0R0OWkQ" target="_2ktbj9XWEem1l5O0R0OWkQ" source="_2ktbi9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbd9XWEem1l5O0R0OWkQ" target="_2ktbm9XWEem1l5O0R0OWkQ" source="_2ktbktXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbeNXWEem1l5O0R0OWkQ" target="_2ktbodXWEem1l5O0R0OWkQ" source="_2ktbltXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktbedXWEem1l5O0R0OWkQ" target="_2ktbpdXWEem1l5O0R0OWkQ" source="_2ktbpNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbetXWEem1l5O0R0OWkQ" target="_2ktbpdXWEem1l5O0R0OWkQ" source="_2ktbntXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktbe9XWEem1l5O0R0OWkQ" target="_2ktbg9XWEem1l5O0R0OWkQ" source="_2ktbpdXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ktbfNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktbfdXWEem1l5O0R0OWkQ" name="Body" incoming="_2ktbdNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ktbftXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ktbf9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ktbctXWEem1l5O0R0OWkQ" type="_2ktbZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbgNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbgdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ktbgtXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ktbctXWEem1l5O0R0OWkQ" outgoing="_2ktbb9XWEem1l5O0R0OWkQ _2ktbc9XWEem1l5O0R0OWkQ _2ktbddXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2ktbg9XWEem1l5O0R0OWkQ" name="Call(Employee$initialization$1)" incoming="_2ktbe9XWEem1l5O0R0OWkQ" outgoing="_2ktbdNXWEem1l5O0R0OWkQ" operation="_2ktb79XWEem1l5O0R0OWkQ">
              <target xmi:id="_2ktbhNXWEem1l5O0R0OWkQ" name="Call(Employee$initialization$1).target" incoming="_2ktbc9XWEem1l5O0R0OWkQ" type="_2ktbZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbhdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbhtXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ktbh9XWEem1l5O0R0OWkQ" name="Read(Employee$initializationFlag$1)" structuralFeature="_2ktbZtXWEem1l5O0R0OWkQ">
              <object xmi:id="_2ktbiNXWEem1l5O0R0OWkQ" name="Read(Employee$initializationFlag$1).object" incoming="_2ktbddXWEem1l5O0R0OWkQ" type="_2ktbZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbidXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbitXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ktbi9XWEem1l5O0R0OWkQ" name="Read(Employee$initializationFlag$1).result" outgoing="_2ktbdtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbjNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbjdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ktbjtXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ktbj9XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ktbdtXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbkNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbkdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ktbktXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ktbd9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbk9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktblNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktbldXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ktbltXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ktbeNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbl9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbmNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ktbmdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ktbmtXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ktbm9XWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ktbd9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbnNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbndXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ktbntXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ktbetXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbn9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktboNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ktbodXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ktbeNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbotXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbo9XWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ktbpNXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ktbedXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ktbpdXWEem1l5O0R0OWkQ" name="Decision(Test(Employee$initializationFlag$1))" incoming="_2ktbedXWEem1l5O0R0OWkQ _2ktbetXWEem1l5O0R0OWkQ" outgoing="_2ktbe9XWEem1l5O0R0OWkQ" decisionInputFlow="_2ktbetXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ktbcNXWEem1l5O0R0OWkQ" name="Return" incoming="_2ktbb9XWEem1l5O0R0OWkQ" type="_2ktbZdXWEem1l5O0R0OWkQ" parameter="_2ktbbNXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktbptXWEem1l5O0R0OWkQ" name="Employee$initialization$1" visibility="private" specification="_2ktb79XWEem1l5O0R0OWkQ" node="_2ktbp9XWEem1l5O0R0OWkQ" group="_2ktbp9XWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ktbp9XWEem1l5O0R0OWkQ" name="Body(Employee$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbqNXWEem1l5O0R0OWkQ" target="_2ktbttXWEem1l5O0R0OWkQ" source="_2ktbs9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbqdXWEem1l5O0R0OWkQ" target="_2ktbwtXWEem1l5O0R0OWkQ" source="_2ktbttXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbqtXWEem1l5O0R0OWkQ" target="_2ktb0dXWEem1l5O0R0OWkQ" source="_2ktbttXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbq9XWEem1l5O0R0OWkQ" target="_2ktb2NXWEem1l5O0R0OWkQ" source="_2ktb1NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbrNXWEem1l5O0R0OWkQ" target="_2ktb5NXWEem1l5O0R0OWkQ" source="_2ktb29XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbrdXWEem1l5O0R0OWkQ" target="_2ktb6tXWEem1l5O0R0OWkQ" source="_2ktb39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktbrtXWEem1l5O0R0OWkQ" target="_2ktb7tXWEem1l5O0R0OWkQ" source="_2ktb7dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbr9XWEem1l5O0R0OWkQ" target="_2ktb7tXWEem1l5O0R0OWkQ" source="_2ktb59XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktbsNXWEem1l5O0R0OWkQ" target="_2ktbt9XWEem1l5O0R0OWkQ" source="_2ktb7tXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ktbsdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ktbstXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ktbs9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ktbqNXWEem1l5O0R0OWkQ" type="_2ktbZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbtNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbtdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ktbttXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ktbqNXWEem1l5O0R0OWkQ" outgoing="_2ktbqdXWEem1l5O0R0OWkQ _2ktbqtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktbt9XWEem1l5O0R0OWkQ" name="Initialization" incoming="_2ktbsNXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktbuNXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbudXWEem1l5O0R0OWkQ" target="_2ktbz9XWEem1l5O0R0OWkQ" source="_2ktbu9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktbutXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2ktbu9XWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2ktbudXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbvNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbvdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2ktbvtXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2ktbv9XWEem1l5O0R0OWkQ" name="Iterate(Write(Employee$initializationFlag$1))" inputElement="_2ktbz9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbwNXWEem1l5O0R0OWkQ" target="_2ktbzNXWEem1l5O0R0OWkQ" source="_2ktbz9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktbwdXWEem1l5O0R0OWkQ" target="_2ktbxtXWEem1l5O0R0OWkQ" source="_2ktbwtXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2ktbwtXWEem1l5O0R0OWkQ" name="Iterate(Write(Employee$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2ktbqdXWEem1l5O0R0OWkQ" outgoing="_2ktbwdXWEem1l5O0R0OWkQ" type="_2ktbZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbw9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbxNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ktbxdXWEem1l5O0R0OWkQ" name="Write(Employee$initializationFlag$1)" structuralFeature="_2ktbZtXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2ktbxtXWEem1l5O0R0OWkQ" name="Write(Employee$initializationFlag$1).object" incoming="_2ktbwdXWEem1l5O0R0OWkQ" type="_2ktbZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbx9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbyNXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ktbydXWEem1l5O0R0OWkQ" name="Write(Employee$initializationFlag$1).result" type="_2ktbZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbytXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktby9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2ktbzNXWEem1l5O0R0OWkQ" name="Write(Employee$initializationFlag$1).value" incoming="_2ktbwNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktbzdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktbztXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2ktbz9XWEem1l5O0R0OWkQ" name="Iterate(Write(Employee$initializationFlag$1)).inputElement" incoming="_2ktbudXWEem1l5O0R0OWkQ" outgoing="_2ktbwNXWEem1l5O0R0OWkQ" regionAsInput="_2ktbv9XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ktb0NXWEem1l5O0R0OWkQ" name="Read(Employee$initializationFlag$1)" structuralFeature="_2ktbZtXWEem1l5O0R0OWkQ">
              <object xmi:id="_2ktb0dXWEem1l5O0R0OWkQ" name="Read(Employee$initializationFlag$1).object" incoming="_2ktbqtXWEem1l5O0R0OWkQ" type="_2ktbZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktb0tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktb09XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ktb1NXWEem1l5O0R0OWkQ" name="Read(Employee$initializationFlag$1).result" outgoing="_2ktbq9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktb1dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktb1tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ktb19XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ktb2NXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ktbq9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktb2dXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktb2tXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ktb29XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ktbrNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktb3NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktb3dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktb3tXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ktb39XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ktbrdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktb4NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktb4dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ktb4tXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ktb49XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ktb5NXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ktbrNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktb5dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktb5tXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ktb59XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ktbr9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktb6NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktb6dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ktb6tXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ktbrdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktb69XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktb7NXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ktb7dXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ktbrtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ktb7tXWEem1l5O0R0OWkQ" name="Decision(Test(Employee$initializationFlag$1))" incoming="_2ktbrtXWEem1l5O0R0OWkQ _2ktbr9XWEem1l5O0R0OWkQ" outgoing="_2ktbsNXWEem1l5O0R0OWkQ" decisionInputFlow="_2ktbr9XWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2ktb79XWEem1l5O0R0OWkQ" name="Employee$initialization$1" visibility="protected" method="_2ktbptXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2ktb8NXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2ktbadXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2ktb8dXWEem1l5O0R0OWkQ" name="Employee" visibility="public" method="_2ktba9XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ktb8tXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2ktbZdXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktb89XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktb9NXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2ktb9dXWEem1l5O0R0OWkQ" name="Administrator" visibility="package">
        <generalization xmi:id="_2ktb9tXWEem1l5O0R0OWkQ" general="_2ktbZdXWEem1l5O0R0OWkQ"/>
        <ownedAttribute xmi:id="_2ktb99XWEem1l5O0R0OWkQ" name="Administrator$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktb-NXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktb-dXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktb-tXWEem1l5O0R0OWkQ" name="Administrator$method$1" visibility="private" specification="_2ktch9XWEem1l5O0R0OWkQ" node="_2ktb_9XWEem1l5O0R0OWkQ _2ktcANXWEem1l5O0R0OWkQ" group="_2ktcANXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ktb-9XWEem1l5O0R0OWkQ" name="" type="_2ktb9dXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktb_NXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktb_dXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktb_tXWEem1l5O0R0OWkQ" target="_2ktb_9XWEem1l5O0R0OWkQ" source="_2ktcEdXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2ktcANXWEem1l5O0R0OWkQ" name="Body(Administrator$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcAdXWEem1l5O0R0OWkQ" target="_2ktcEdXWEem1l5O0R0OWkQ" source="_2ktcDtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcAtXWEem1l5O0R0OWkQ" target="_2ktcE9XWEem1l5O0R0OWkQ" source="_2ktcEdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktcA9XWEem1l5O0R0OWkQ" target="_2ktcDNXWEem1l5O0R0OWkQ" source="_2ktcEtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcBNXWEem1l5O0R0OWkQ" target="_2ktcF9XWEem1l5O0R0OWkQ" source="_2ktcEdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcBdXWEem1l5O0R0OWkQ" target="_2ktcHtXWEem1l5O0R0OWkQ" source="_2ktcGtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcBtXWEem1l5O0R0OWkQ" target="_2ktcKtXWEem1l5O0R0OWkQ" source="_2ktcIdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcB9XWEem1l5O0R0OWkQ" target="_2ktcMNXWEem1l5O0R0OWkQ" source="_2ktcJdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktcCNXWEem1l5O0R0OWkQ" target="_2ktcNNXWEem1l5O0R0OWkQ" source="_2ktcM9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcCdXWEem1l5O0R0OWkQ" target="_2ktcNNXWEem1l5O0R0OWkQ" source="_2ktcLdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktcCtXWEem1l5O0R0OWkQ" target="_2ktcEtXWEem1l5O0R0OWkQ" source="_2ktcNNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ktcC9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktcDNXWEem1l5O0R0OWkQ" name="Body" incoming="_2ktcA9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ktcDdXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ktcDtXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ktcAdXWEem1l5O0R0OWkQ" type="_2ktb9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcD9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcENXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ktcEdXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ktcAdXWEem1l5O0R0OWkQ" outgoing="_2ktb_tXWEem1l5O0R0OWkQ _2ktcAtXWEem1l5O0R0OWkQ _2ktcBNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2ktcEtXWEem1l5O0R0OWkQ" name="Call(Administrator$initialization$1)" incoming="_2ktcCtXWEem1l5O0R0OWkQ" outgoing="_2ktcA9XWEem1l5O0R0OWkQ" operation="_2ktchtXWEem1l5O0R0OWkQ">
              <target xmi:id="_2ktcE9XWEem1l5O0R0OWkQ" name="Call(Administrator$initialization$1).target" incoming="_2ktcAtXWEem1l5O0R0OWkQ" type="_2ktb9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcFNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcFdXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ktcFtXWEem1l5O0R0OWkQ" name="Read(Administrator$initializationFlag$1)" structuralFeature="_2ktb99XWEem1l5O0R0OWkQ">
              <object xmi:id="_2ktcF9XWEem1l5O0R0OWkQ" name="Read(Administrator$initializationFlag$1).object" incoming="_2ktcBNXWEem1l5O0R0OWkQ" type="_2ktb9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcGNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcGdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ktcGtXWEem1l5O0R0OWkQ" name="Read(Administrator$initializationFlag$1).result" outgoing="_2ktcBdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcG9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcHNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ktcHdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ktcHtXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ktcBdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcH9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcINXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ktcIdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ktcBtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcItXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcI9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktcJNXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ktcJdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ktcB9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcJtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcJ9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ktcKNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ktcKdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ktcKtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ktcBtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcK9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcLNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ktcLdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ktcCdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcLtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcL9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ktcMNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ktcB9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcMdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcMtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ktcM9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ktcCNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ktcNNXWEem1l5O0R0OWkQ" name="Decision(Test(Administrator$initializationFlag$1))" incoming="_2ktcCNXWEem1l5O0R0OWkQ _2ktcCdXWEem1l5O0R0OWkQ" outgoing="_2ktcCtXWEem1l5O0R0OWkQ" decisionInputFlow="_2ktcCdXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ktb_9XWEem1l5O0R0OWkQ" name="Return" incoming="_2ktb_tXWEem1l5O0R0OWkQ" type="_2ktb9dXWEem1l5O0R0OWkQ" parameter="_2ktb-9XWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktcNdXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2ktci9XWEem1l5O0R0OWkQ" node="_2ktcNtXWEem1l5O0R0OWkQ" group="_2ktcNtXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ktcNtXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktcN9XWEem1l5O0R0OWkQ" name="Administrator$initialization$1" visibility="private" specification="_2ktchtXWEem1l5O0R0OWkQ" node="_2ktcONXWEem1l5O0R0OWkQ" group="_2ktcONXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ktcONXWEem1l5O0R0OWkQ" name="Body(Administrator$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcOdXWEem1l5O0R0OWkQ" target="_2ktcSNXWEem1l5O0R0OWkQ" source="_2ktcRdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcOtXWEem1l5O0R0OWkQ" target="_2ktcTNXWEem1l5O0R0OWkQ" source="_2ktcSNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcO9XWEem1l5O0R0OWkQ" target="_2ktcWdXWEem1l5O0R0OWkQ" source="_2ktcSNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcPNXWEem1l5O0R0OWkQ" target="_2ktcaNXWEem1l5O0R0OWkQ" source="_2ktcSNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcPdXWEem1l5O0R0OWkQ" target="_2ktcb9XWEem1l5O0R0OWkQ" source="_2ktca9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcPtXWEem1l5O0R0OWkQ" target="_2ktce9XWEem1l5O0R0OWkQ" source="_2ktcctXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcP9XWEem1l5O0R0OWkQ" target="_2ktcgdXWEem1l5O0R0OWkQ" source="_2ktcdtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktcQNXWEem1l5O0R0OWkQ" target="_2ktchdXWEem1l5O0R0OWkQ" source="_2ktchNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcQdXWEem1l5O0R0OWkQ" target="_2ktchdXWEem1l5O0R0OWkQ" source="_2ktcftXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktcQtXWEem1l5O0R0OWkQ" target="_2ktcSdXWEem1l5O0R0OWkQ" source="_2ktchdXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ktcQ9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ktcRNXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ktcRdXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ktcOdXWEem1l5O0R0OWkQ" type="_2ktb9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcRtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcR9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ktcSNXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ktcOdXWEem1l5O0R0OWkQ" outgoing="_2ktcOtXWEem1l5O0R0OWkQ _2ktcO9XWEem1l5O0R0OWkQ _2ktcPNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktcSdXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2ktcQtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ktcStXWEem1l5O0R0OWkQ" target="_2ktcT9XWEem1l5O0R0OWkQ" source="_2ktcS9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2ktcS9XWEem1l5O0R0OWkQ" name="Call(Employee$initialization$1)" outgoing="_2ktcStXWEem1l5O0R0OWkQ" operation="_2ktb79XWEem1l5O0R0OWkQ">
                <target xmi:id="_2ktcTNXWEem1l5O0R0OWkQ" name="Call(Employee$initialization$1).target" incoming="_2ktcOtXWEem1l5O0R0OWkQ" type="_2ktbZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcTdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcTtXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktcT9XWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_2ktcStXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcUNXWEem1l5O0R0OWkQ" target="_2ktcZtXWEem1l5O0R0OWkQ" source="_2ktcUtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktcUdXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2ktcUtXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2ktcUNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcU9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcVNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2ktcVdXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2ktcVtXWEem1l5O0R0OWkQ" name="Iterate(Write(Administrator$initializationFlag$1))" inputElement="_2ktcZtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcV9XWEem1l5O0R0OWkQ" target="_2ktcY9XWEem1l5O0R0OWkQ" source="_2ktcZtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcWNXWEem1l5O0R0OWkQ" target="_2ktcXdXWEem1l5O0R0OWkQ" source="_2ktcWdXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2ktcWdXWEem1l5O0R0OWkQ" name="Iterate(Write(Administrator$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2ktcO9XWEem1l5O0R0OWkQ" outgoing="_2ktcWNXWEem1l5O0R0OWkQ" type="_2ktb9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcWtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcW9XWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ktcXNXWEem1l5O0R0OWkQ" name="Write(Administrator$initializationFlag$1)" structuralFeature="_2ktb99XWEem1l5O0R0OWkQ">
                    <object xmi:id="_2ktcXdXWEem1l5O0R0OWkQ" name="Write(Administrator$initializationFlag$1).object" incoming="_2ktcWNXWEem1l5O0R0OWkQ" type="_2ktb9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcXtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcX9XWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ktcYNXWEem1l5O0R0OWkQ" name="Write(Administrator$initializationFlag$1).result" type="_2ktb9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcYdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcYtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2ktcY9XWEem1l5O0R0OWkQ" name="Write(Administrator$initializationFlag$1).value" incoming="_2ktcV9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcZNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcZdXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2ktcZtXWEem1l5O0R0OWkQ" name="Iterate(Write(Administrator$initializationFlag$1)).inputElement" incoming="_2ktcUNXWEem1l5O0R0OWkQ" outgoing="_2ktcV9XWEem1l5O0R0OWkQ" regionAsInput="_2ktcVtXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ktcZ9XWEem1l5O0R0OWkQ" name="Read(Administrator$initializationFlag$1)" structuralFeature="_2ktb99XWEem1l5O0R0OWkQ">
              <object xmi:id="_2ktcaNXWEem1l5O0R0OWkQ" name="Read(Administrator$initializationFlag$1).object" incoming="_2ktcPNXWEem1l5O0R0OWkQ" type="_2ktb9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcadXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcatXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ktca9XWEem1l5O0R0OWkQ" name="Read(Administrator$initializationFlag$1).result" outgoing="_2ktcPdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcbNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcbdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ktcbtXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ktcb9XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ktcPdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktccNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktccdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ktcctXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ktcPtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcc9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcdNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktcddXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ktcdtXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ktcP9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcd9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktceNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ktcedXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ktcetXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ktce9XWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ktcPtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcfNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcfdXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ktcftXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ktcQdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcf9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcgNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ktcgdXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ktcP9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcgtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcg9XWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ktchNXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ktcQNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ktchdXWEem1l5O0R0OWkQ" name="Decision(Test(Administrator$initializationFlag$1))" incoming="_2ktcQNXWEem1l5O0R0OWkQ _2ktcQdXWEem1l5O0R0OWkQ" outgoing="_2ktcQtXWEem1l5O0R0OWkQ" decisionInputFlow="_2ktcQdXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2ktchtXWEem1l5O0R0OWkQ" name="Administrator$initialization$1" visibility="protected" method="_2ktcN9XWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2ktch9XWEem1l5O0R0OWkQ" name="Administrator" visibility="public" method="_2ktb-tXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ktciNXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2ktb9dXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcidXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcitXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2ktci9XWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2ktcNdXWEem1l5O0R0OWkQ" redefinedOperation="_2ktb8NXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2ktcjNXWEem1l5O0R0OWkQ" name="Staff" visibility="package">
        <generalization xmi:id="_2ktcjdXWEem1l5O0R0OWkQ" general="_2ktbZdXWEem1l5O0R0OWkQ"/>
        <ownedAttribute xmi:id="_2ktcjtXWEem1l5O0R0OWkQ" name="Staff$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcj9XWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktckNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktckdXWEem1l5O0R0OWkQ" name="Staff$method$1" visibility="private" specification="_2ktdHtXWEem1l5O0R0OWkQ" node="_2ktcltXWEem1l5O0R0OWkQ _2ktcl9XWEem1l5O0R0OWkQ" group="_2ktcl9XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ktcktXWEem1l5O0R0OWkQ" name="" type="_2ktcjNXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktck9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktclNXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcldXWEem1l5O0R0OWkQ" target="_2ktcltXWEem1l5O0R0OWkQ" source="_2ktcqNXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2ktcl9XWEem1l5O0R0OWkQ" name="Body(Staff$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcmNXWEem1l5O0R0OWkQ" target="_2ktcqNXWEem1l5O0R0OWkQ" source="_2ktcpdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcmdXWEem1l5O0R0OWkQ" target="_2ktcqtXWEem1l5O0R0OWkQ" source="_2ktcqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktcmtXWEem1l5O0R0OWkQ" target="_2ktco9XWEem1l5O0R0OWkQ" source="_2ktcqdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcm9XWEem1l5O0R0OWkQ" target="_2ktcrtXWEem1l5O0R0OWkQ" source="_2ktcqNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcnNXWEem1l5O0R0OWkQ" target="_2ktctdXWEem1l5O0R0OWkQ" source="_2ktcsdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcndXWEem1l5O0R0OWkQ" target="_2ktcwdXWEem1l5O0R0OWkQ" source="_2ktcuNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcntXWEem1l5O0R0OWkQ" target="_2ktcx9XWEem1l5O0R0OWkQ" source="_2ktcvNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktcn9XWEem1l5O0R0OWkQ" target="_2ktcy9XWEem1l5O0R0OWkQ" source="_2ktcytXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktcoNXWEem1l5O0R0OWkQ" target="_2ktcy9XWEem1l5O0R0OWkQ" source="_2ktcxNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktcodXWEem1l5O0R0OWkQ" target="_2ktcqdXWEem1l5O0R0OWkQ" source="_2ktcy9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ktcotXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktco9XWEem1l5O0R0OWkQ" name="Body" incoming="_2ktcmtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ktcpNXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ktcpdXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ktcmNXWEem1l5O0R0OWkQ" type="_2ktcjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcptXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcp9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ktcqNXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ktcmNXWEem1l5O0R0OWkQ" outgoing="_2ktcldXWEem1l5O0R0OWkQ _2ktcmdXWEem1l5O0R0OWkQ _2ktcm9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2ktcqdXWEem1l5O0R0OWkQ" name="Call(Staff$initialization$1)" incoming="_2ktcodXWEem1l5O0R0OWkQ" outgoing="_2ktcmtXWEem1l5O0R0OWkQ" operation="_2ktdHdXWEem1l5O0R0OWkQ">
              <target xmi:id="_2ktcqtXWEem1l5O0R0OWkQ" name="Call(Staff$initialization$1).target" incoming="_2ktcmdXWEem1l5O0R0OWkQ" type="_2ktcjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcq9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcrNXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ktcrdXWEem1l5O0R0OWkQ" name="Read(Staff$initializationFlag$1)" structuralFeature="_2ktcjtXWEem1l5O0R0OWkQ">
              <object xmi:id="_2ktcrtXWEem1l5O0R0OWkQ" name="Read(Staff$initializationFlag$1).object" incoming="_2ktcm9XWEem1l5O0R0OWkQ" type="_2ktcjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcr9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcsNXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ktcsdXWEem1l5O0R0OWkQ" name="Read(Staff$initializationFlag$1).result" outgoing="_2ktcnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcstXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcs9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ktctNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ktctdXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ktcnNXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcttXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktct9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ktcuNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ktcndXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcudXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcutXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktcu9XWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ktcvNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ktcntXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcvdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcvtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ktcv9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ktcwNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ktcwdXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ktcndXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcwtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcw9XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ktcxNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ktcoNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcxdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcxtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ktcx9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ktcntXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktcyNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktcydXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ktcytXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ktcn9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ktcy9XWEem1l5O0R0OWkQ" name="Decision(Test(Staff$initializationFlag$1))" incoming="_2ktcn9XWEem1l5O0R0OWkQ _2ktcoNXWEem1l5O0R0OWkQ" outgoing="_2ktcodXWEem1l5O0R0OWkQ" decisionInputFlow="_2ktcoNXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ktcltXWEem1l5O0R0OWkQ" name="Return" incoming="_2ktcldXWEem1l5O0R0OWkQ" type="_2ktcjNXWEem1l5O0R0OWkQ" parameter="_2ktcktXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktczNXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2ktdItXWEem1l5O0R0OWkQ" node="_2ktczdXWEem1l5O0R0OWkQ" group="_2ktczdXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ktczdXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktcztXWEem1l5O0R0OWkQ" name="Staff$initialization$1" visibility="private" specification="_2ktdHdXWEem1l5O0R0OWkQ" node="_2ktcz9XWEem1l5O0R0OWkQ" group="_2ktcz9XWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ktcz9XWEem1l5O0R0OWkQ" name="Body(Staff$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktc0NXWEem1l5O0R0OWkQ" target="_2ktc39XWEem1l5O0R0OWkQ" source="_2ktc3NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktc0dXWEem1l5O0R0OWkQ" target="_2ktc49XWEem1l5O0R0OWkQ" source="_2ktc39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktc0tXWEem1l5O0R0OWkQ" target="_2ktc8NXWEem1l5O0R0OWkQ" source="_2ktc39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktc09XWEem1l5O0R0OWkQ" target="_2ktc_9XWEem1l5O0R0OWkQ" source="_2ktc39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktc1NXWEem1l5O0R0OWkQ" target="_2ktdBtXWEem1l5O0R0OWkQ" source="_2ktdAtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktc1dXWEem1l5O0R0OWkQ" target="_2ktdEtXWEem1l5O0R0OWkQ" source="_2ktdCdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktc1tXWEem1l5O0R0OWkQ" target="_2ktdGNXWEem1l5O0R0OWkQ" source="_2ktdDdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktc19XWEem1l5O0R0OWkQ" target="_2ktdHNXWEem1l5O0R0OWkQ" source="_2ktdG9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktc2NXWEem1l5O0R0OWkQ" target="_2ktdHNXWEem1l5O0R0OWkQ" source="_2ktdFdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktc2dXWEem1l5O0R0OWkQ" target="_2ktc4NXWEem1l5O0R0OWkQ" source="_2ktdHNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ktc2tXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ktc29XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ktc3NXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ktc0NXWEem1l5O0R0OWkQ" type="_2ktcjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktc3dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktc3tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ktc39XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ktc0NXWEem1l5O0R0OWkQ" outgoing="_2ktc0dXWEem1l5O0R0OWkQ _2ktc0tXWEem1l5O0R0OWkQ _2ktc09XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktc4NXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2ktc2dXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ktc4dXWEem1l5O0R0OWkQ" target="_2ktc5tXWEem1l5O0R0OWkQ" source="_2ktc4tXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2ktc4tXWEem1l5O0R0OWkQ" name="Call(Employee$initialization$1)" outgoing="_2ktc4dXWEem1l5O0R0OWkQ" operation="_2ktb79XWEem1l5O0R0OWkQ">
                <target xmi:id="_2ktc49XWEem1l5O0R0OWkQ" name="Call(Employee$initialization$1).target" incoming="_2ktc0dXWEem1l5O0R0OWkQ" type="_2ktbZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktc5NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktc5dXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktc5tXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_2ktc4dXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktc59XWEem1l5O0R0OWkQ" target="_2ktc_dXWEem1l5O0R0OWkQ" source="_2ktc6dXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktc6NXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2ktc6dXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2ktc59XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktc6tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktc69XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2ktc7NXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2ktc7dXWEem1l5O0R0OWkQ" name="Iterate(Write(Staff$initializationFlag$1))" inputElement="_2ktc_dXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktc7tXWEem1l5O0R0OWkQ" target="_2ktc-tXWEem1l5O0R0OWkQ" source="_2ktc_dXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktc79XWEem1l5O0R0OWkQ" target="_2ktc9NXWEem1l5O0R0OWkQ" source="_2ktc8NXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2ktc8NXWEem1l5O0R0OWkQ" name="Iterate(Write(Staff$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2ktc0tXWEem1l5O0R0OWkQ" outgoing="_2ktc79XWEem1l5O0R0OWkQ" type="_2ktcjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktc8dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktc8tXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ktc89XWEem1l5O0R0OWkQ" name="Write(Staff$initializationFlag$1)" structuralFeature="_2ktcjtXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2ktc9NXWEem1l5O0R0OWkQ" name="Write(Staff$initializationFlag$1).object" incoming="_2ktc79XWEem1l5O0R0OWkQ" type="_2ktcjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktc9dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktc9tXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ktc99XWEem1l5O0R0OWkQ" name="Write(Staff$initializationFlag$1).result" type="_2ktcjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktc-NXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktc-dXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2ktc-tXWEem1l5O0R0OWkQ" name="Write(Staff$initializationFlag$1).value" incoming="_2ktc7tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktc-9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktc_NXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2ktc_dXWEem1l5O0R0OWkQ" name="Iterate(Write(Staff$initializationFlag$1)).inputElement" incoming="_2ktc59XWEem1l5O0R0OWkQ" outgoing="_2ktc7tXWEem1l5O0R0OWkQ" regionAsInput="_2ktc7dXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ktc_tXWEem1l5O0R0OWkQ" name="Read(Staff$initializationFlag$1)" structuralFeature="_2ktcjtXWEem1l5O0R0OWkQ">
              <object xmi:id="_2ktc_9XWEem1l5O0R0OWkQ" name="Read(Staff$initializationFlag$1).object" incoming="_2ktc09XWEem1l5O0R0OWkQ" type="_2ktcjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdANXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdAdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ktdAtXWEem1l5O0R0OWkQ" name="Read(Staff$initializationFlag$1).result" outgoing="_2ktc1NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdA9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdBNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ktdBdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ktdBtXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ktc1NXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdB9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdCNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ktdCdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ktc1dXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdCtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdC9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktdDNXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ktdDdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ktc1tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdDtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdD9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ktdENXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ktdEdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ktdEtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ktc1dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdE9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdFNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ktdFdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ktc2NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdFtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdF9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ktdGNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ktc1tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdGdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdGtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ktdG9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ktc19XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ktdHNXWEem1l5O0R0OWkQ" name="Decision(Test(Staff$initializationFlag$1))" incoming="_2ktc19XWEem1l5O0R0OWkQ _2ktc2NXWEem1l5O0R0OWkQ" outgoing="_2ktc2dXWEem1l5O0R0OWkQ" decisionInputFlow="_2ktc2NXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2ktdHdXWEem1l5O0R0OWkQ" name="Staff$initialization$1" visibility="protected" method="_2ktcztXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2ktdHtXWEem1l5O0R0OWkQ" name="Staff" visibility="public" method="_2ktckdXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ktdH9XWEem1l5O0R0OWkQ" name="" visibility="package" type="_2ktcjNXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdINXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdIdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2ktdItXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2ktczNXWEem1l5O0R0OWkQ" redefinedOperation="_2ktb8NXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2ktdI9XWEem1l5O0R0OWkQ" name="PartTime" visibility="package">
        <generalization xmi:id="_2ktdJNXWEem1l5O0R0OWkQ" general="_2ktbZdXWEem1l5O0R0OWkQ"/>
        <ownedAttribute xmi:id="_2ktdJdXWEem1l5O0R0OWkQ" name="PartTime$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdJtXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdJ9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktdKNXWEem1l5O0R0OWkQ" name="PartTime$method$1" visibility="private" specification="_2ktdtdXWEem1l5O0R0OWkQ" node="_2ktdLdXWEem1l5O0R0OWkQ _2ktdLtXWEem1l5O0R0OWkQ" group="_2ktdLtXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ktdKdXWEem1l5O0R0OWkQ" name="" type="_2ktdI9XWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdKtXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdK9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdLNXWEem1l5O0R0OWkQ" target="_2ktdLdXWEem1l5O0R0OWkQ" source="_2ktdP9XWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2ktdLtXWEem1l5O0R0OWkQ" name="Body(PartTime$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdL9XWEem1l5O0R0OWkQ" target="_2ktdP9XWEem1l5O0R0OWkQ" source="_2ktdPNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdMNXWEem1l5O0R0OWkQ" target="_2ktdQdXWEem1l5O0R0OWkQ" source="_2ktdP9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktdMdXWEem1l5O0R0OWkQ" target="_2ktdOtXWEem1l5O0R0OWkQ" source="_2ktdQNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdMtXWEem1l5O0R0OWkQ" target="_2ktdRdXWEem1l5O0R0OWkQ" source="_2ktdP9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdM9XWEem1l5O0R0OWkQ" target="_2ktdTNXWEem1l5O0R0OWkQ" source="_2ktdSNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdNNXWEem1l5O0R0OWkQ" target="_2ktdWNXWEem1l5O0R0OWkQ" source="_2ktdT9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdNdXWEem1l5O0R0OWkQ" target="_2ktdXtXWEem1l5O0R0OWkQ" source="_2ktdU9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktdNtXWEem1l5O0R0OWkQ" target="_2ktdYtXWEem1l5O0R0OWkQ" source="_2ktdYdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdN9XWEem1l5O0R0OWkQ" target="_2ktdYtXWEem1l5O0R0OWkQ" source="_2ktdW9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktdONXWEem1l5O0R0OWkQ" target="_2ktdQNXWEem1l5O0R0OWkQ" source="_2ktdYtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ktdOdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktdOtXWEem1l5O0R0OWkQ" name="Body" incoming="_2ktdMdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ktdO9XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ktdPNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ktdL9XWEem1l5O0R0OWkQ" type="_2ktdI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdPdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdPtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ktdP9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ktdL9XWEem1l5O0R0OWkQ" outgoing="_2ktdLNXWEem1l5O0R0OWkQ _2ktdMNXWEem1l5O0R0OWkQ _2ktdMtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2ktdQNXWEem1l5O0R0OWkQ" name="Call(PartTime$initialization$1)" incoming="_2ktdONXWEem1l5O0R0OWkQ" outgoing="_2ktdMdXWEem1l5O0R0OWkQ" operation="_2ktdtNXWEem1l5O0R0OWkQ">
              <target xmi:id="_2ktdQdXWEem1l5O0R0OWkQ" name="Call(PartTime$initialization$1).target" incoming="_2ktdMNXWEem1l5O0R0OWkQ" type="_2ktdI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdQtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdQ9XWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ktdRNXWEem1l5O0R0OWkQ" name="Read(PartTime$initializationFlag$1)" structuralFeature="_2ktdJdXWEem1l5O0R0OWkQ">
              <object xmi:id="_2ktdRdXWEem1l5O0R0OWkQ" name="Read(PartTime$initializationFlag$1).object" incoming="_2ktdMtXWEem1l5O0R0OWkQ" type="_2ktdI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdRtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdR9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ktdSNXWEem1l5O0R0OWkQ" name="Read(PartTime$initializationFlag$1).result" outgoing="_2ktdM9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdSdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdStXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ktdS9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ktdTNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ktdM9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdTdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdTtXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ktdT9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ktdNNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdUNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdUdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktdUtXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ktdU9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ktdNdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdVNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdVdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ktdVtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ktdV9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ktdWNXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ktdNNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdWdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdWtXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ktdW9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ktdN9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdXNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdXdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ktdXtXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ktdNdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdX9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdYNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ktdYdXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ktdNtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ktdYtXWEem1l5O0R0OWkQ" name="Decision(Test(PartTime$initializationFlag$1))" incoming="_2ktdNtXWEem1l5O0R0OWkQ _2ktdN9XWEem1l5O0R0OWkQ" outgoing="_2ktdONXWEem1l5O0R0OWkQ" decisionInputFlow="_2ktdN9XWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ktdLdXWEem1l5O0R0OWkQ" name="Return" incoming="_2ktdLNXWEem1l5O0R0OWkQ" type="_2ktdI9XWEem1l5O0R0OWkQ" parameter="_2ktdKdXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktdY9XWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2ktdudXWEem1l5O0R0OWkQ" node="_2ktdZNXWEem1l5O0R0OWkQ" group="_2ktdZNXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ktdZNXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktdZdXWEem1l5O0R0OWkQ" name="PartTime$initialization$1" visibility="private" specification="_2ktdtNXWEem1l5O0R0OWkQ" node="_2ktdZtXWEem1l5O0R0OWkQ" group="_2ktdZtXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ktdZtXWEem1l5O0R0OWkQ" name="Body(PartTime$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdZ9XWEem1l5O0R0OWkQ" target="_2ktddtXWEem1l5O0R0OWkQ" source="_2ktdc9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdaNXWEem1l5O0R0OWkQ" target="_2ktdetXWEem1l5O0R0OWkQ" source="_2ktddtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdadXWEem1l5O0R0OWkQ" target="_2ktdh9XWEem1l5O0R0OWkQ" source="_2ktddtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdatXWEem1l5O0R0OWkQ" target="_2ktdltXWEem1l5O0R0OWkQ" source="_2ktddtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktda9XWEem1l5O0R0OWkQ" target="_2ktdndXWEem1l5O0R0OWkQ" source="_2ktdmdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdbNXWEem1l5O0R0OWkQ" target="_2ktdqdXWEem1l5O0R0OWkQ" source="_2ktdoNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdbdXWEem1l5O0R0OWkQ" target="_2ktdr9XWEem1l5O0R0OWkQ" source="_2ktdpNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktdbtXWEem1l5O0R0OWkQ" target="_2ktds9XWEem1l5O0R0OWkQ" source="_2ktdstXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdb9XWEem1l5O0R0OWkQ" target="_2ktds9XWEem1l5O0R0OWkQ" source="_2ktdrNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktdcNXWEem1l5O0R0OWkQ" target="_2ktdd9XWEem1l5O0R0OWkQ" source="_2ktds9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ktdcdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ktdctXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ktdc9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ktdZ9XWEem1l5O0R0OWkQ" type="_2ktdI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktddNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdddXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ktddtXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ktdZ9XWEem1l5O0R0OWkQ" outgoing="_2ktdaNXWEem1l5O0R0OWkQ _2ktdadXWEem1l5O0R0OWkQ _2ktdatXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktdd9XWEem1l5O0R0OWkQ" name="Initialization" incoming="_2ktdcNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2ktdeNXWEem1l5O0R0OWkQ" target="_2ktdfdXWEem1l5O0R0OWkQ" source="_2ktdedXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2ktdedXWEem1l5O0R0OWkQ" name="Call(Employee$initialization$1)" outgoing="_2ktdeNXWEem1l5O0R0OWkQ" operation="_2ktb79XWEem1l5O0R0OWkQ">
                <target xmi:id="_2ktdetXWEem1l5O0R0OWkQ" name="Call(Employee$initialization$1).target" incoming="_2ktdaNXWEem1l5O0R0OWkQ" type="_2ktbZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktde9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdfNXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktdfdXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_2ktdeNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdftXWEem1l5O0R0OWkQ" target="_2ktdlNXWEem1l5O0R0OWkQ" source="_2ktdgNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktdf9XWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2ktdgNXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2ktdftXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdgdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdgtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2ktdg9XWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2ktdhNXWEem1l5O0R0OWkQ" name="Iterate(Write(PartTime$initializationFlag$1))" inputElement="_2ktdlNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdhdXWEem1l5O0R0OWkQ" target="_2ktdkdXWEem1l5O0R0OWkQ" source="_2ktdlNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdhtXWEem1l5O0R0OWkQ" target="_2ktdi9XWEem1l5O0R0OWkQ" source="_2ktdh9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2ktdh9XWEem1l5O0R0OWkQ" name="Iterate(Write(PartTime$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2ktdadXWEem1l5O0R0OWkQ" outgoing="_2ktdhtXWEem1l5O0R0OWkQ" type="_2ktdI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdiNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdidXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2ktditXWEem1l5O0R0OWkQ" name="Write(PartTime$initializationFlag$1)" structuralFeature="_2ktdJdXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2ktdi9XWEem1l5O0R0OWkQ" name="Write(PartTime$initializationFlag$1).object" incoming="_2ktdhtXWEem1l5O0R0OWkQ" type="_2ktdI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdjNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdjdXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2ktdjtXWEem1l5O0R0OWkQ" name="Write(PartTime$initializationFlag$1).result" type="_2ktdI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdj9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdkNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2ktdkdXWEem1l5O0R0OWkQ" name="Write(PartTime$initializationFlag$1).value" incoming="_2ktdhdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdktXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdk9XWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2ktdlNXWEem1l5O0R0OWkQ" name="Iterate(Write(PartTime$initializationFlag$1)).inputElement" incoming="_2ktdftXWEem1l5O0R0OWkQ" outgoing="_2ktdhdXWEem1l5O0R0OWkQ" regionAsInput="_2ktdhNXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ktdldXWEem1l5O0R0OWkQ" name="Read(PartTime$initializationFlag$1)" structuralFeature="_2ktdJdXWEem1l5O0R0OWkQ">
              <object xmi:id="_2ktdltXWEem1l5O0R0OWkQ" name="Read(PartTime$initializationFlag$1).object" incoming="_2ktdatXWEem1l5O0R0OWkQ" type="_2ktdI9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdl9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdmNXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ktdmdXWEem1l5O0R0OWkQ" name="Read(PartTime$initializationFlag$1).result" outgoing="_2ktda9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdmtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdm9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ktdnNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ktdndXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ktda9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdntXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdn9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ktdoNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ktdbNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdodXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdotXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktdo9XWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ktdpNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ktdbdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdpdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdptXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ktdp9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ktdqNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ktdqdXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ktdbNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdqtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdq9XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ktdrNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ktdb9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdrdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdrtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ktdr9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ktdbdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdsNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdsdXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ktdstXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ktdbtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ktds9XWEem1l5O0R0OWkQ" name="Decision(Test(PartTime$initializationFlag$1))" incoming="_2ktdbtXWEem1l5O0R0OWkQ _2ktdb9XWEem1l5O0R0OWkQ" outgoing="_2ktdcNXWEem1l5O0R0OWkQ" decisionInputFlow="_2ktdb9XWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2ktdtNXWEem1l5O0R0OWkQ" name="PartTime$initialization$1" visibility="protected" method="_2ktdZdXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2ktdtdXWEem1l5O0R0OWkQ" name="PartTime" visibility="public" method="_2ktdKNXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ktdttXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2ktdI9XWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdt9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktduNXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2ktdudXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2ktdY9XWEem1l5O0R0OWkQ" redefinedOperation="_2ktb8NXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2ktdutXWEem1l5O0R0OWkQ" name="Issue" visibility="package">
        <ownedAttribute xmi:id="_2ktdu9XWEem1l5O0R0OWkQ" name="Issue$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdvNXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdvdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktdvtXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2kteRdXWEem1l5O0R0OWkQ" node="_2ktdv9XWEem1l5O0R0OWkQ" group="_2ktdv9XWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ktdv9XWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktdwNXWEem1l5O0R0OWkQ" name="Issue$method$1" visibility="private" specification="_2kteRtXWEem1l5O0R0OWkQ" node="_2ktdxdXWEem1l5O0R0OWkQ _2ktdxtXWEem1l5O0R0OWkQ" group="_2ktdxtXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2ktdwdXWEem1l5O0R0OWkQ" name="" type="_2ktdutXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktdwtXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktdw9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdxNXWEem1l5O0R0OWkQ" target="_2ktdxdXWEem1l5O0R0OWkQ" source="_2ktd19XWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2ktdxtXWEem1l5O0R0OWkQ" name="Body(Issue$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdx9XWEem1l5O0R0OWkQ" target="_2ktd19XWEem1l5O0R0OWkQ" source="_2ktd1NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdyNXWEem1l5O0R0OWkQ" target="_2ktd2dXWEem1l5O0R0OWkQ" source="_2ktd19XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktdydXWEem1l5O0R0OWkQ" target="_2ktd0tXWEem1l5O0R0OWkQ" source="_2ktd2NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdytXWEem1l5O0R0OWkQ" target="_2ktd3dXWEem1l5O0R0OWkQ" source="_2ktd19XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdy9XWEem1l5O0R0OWkQ" target="_2ktd5NXWEem1l5O0R0OWkQ" source="_2ktd4NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdzNXWEem1l5O0R0OWkQ" target="_2ktd8NXWEem1l5O0R0OWkQ" source="_2ktd59XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdzdXWEem1l5O0R0OWkQ" target="_2ktd9tXWEem1l5O0R0OWkQ" source="_2ktd69XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktdztXWEem1l5O0R0OWkQ" target="_2ktd-tXWEem1l5O0R0OWkQ" source="_2ktd-dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktdz9XWEem1l5O0R0OWkQ" target="_2ktd-tXWEem1l5O0R0OWkQ" source="_2ktd89XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2ktd0NXWEem1l5O0R0OWkQ" target="_2ktd2NXWEem1l5O0R0OWkQ" source="_2ktd-tXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2ktd0dXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2ktd0tXWEem1l5O0R0OWkQ" name="Body" incoming="_2ktdydXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2ktd09XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2ktd1NXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ktdx9XWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktd1dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktd1tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2ktd19XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ktdx9XWEem1l5O0R0OWkQ" outgoing="_2ktdxNXWEem1l5O0R0OWkQ _2ktdyNXWEem1l5O0R0OWkQ _2ktdytXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2ktd2NXWEem1l5O0R0OWkQ" name="Call(Issue$initialization$1)" incoming="_2ktd0NXWEem1l5O0R0OWkQ" outgoing="_2ktdydXWEem1l5O0R0OWkQ" operation="_2kteRNXWEem1l5O0R0OWkQ">
              <target xmi:id="_2ktd2dXWEem1l5O0R0OWkQ" name="Call(Issue$initialization$1).target" incoming="_2ktdyNXWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktd2tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktd29XWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2ktd3NXWEem1l5O0R0OWkQ" name="Read(Issue$initializationFlag$1)" structuralFeature="_2ktdu9XWEem1l5O0R0OWkQ">
              <object xmi:id="_2ktd3dXWEem1l5O0R0OWkQ" name="Read(Issue$initializationFlag$1).object" incoming="_2ktdytXWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktd3tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktd39XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2ktd4NXWEem1l5O0R0OWkQ" name="Read(Issue$initializationFlag$1).result" outgoing="_2ktdy9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktd4dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktd4tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2ktd49XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2ktd5NXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2ktdy9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktd5dXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktd5tXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2ktd59XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2ktdzNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktd6NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktd6dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2ktd6tXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2ktd69XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2ktdzdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktd7NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktd7dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2ktd7tXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2ktd79XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2ktd8NXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2ktdzNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktd8dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktd8tXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ktd89XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2ktdz9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktd9NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktd9dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2ktd9tXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2ktdzdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktd99XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktd-NXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2ktd-dXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2ktdztXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2ktd-tXWEem1l5O0R0OWkQ" name="Decision(Test(Issue$initializationFlag$1))" incoming="_2ktdztXWEem1l5O0R0OWkQ _2ktdz9XWEem1l5O0R0OWkQ" outgoing="_2ktd0NXWEem1l5O0R0OWkQ" decisionInputFlow="_2ktdz9XWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2ktdxdXWEem1l5O0R0OWkQ" name="Return" incoming="_2ktdxNXWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ" parameter="_2ktdwdXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2ktd-9XWEem1l5O0R0OWkQ" name="Issue$initialization$1" visibility="private" specification="_2kteRNXWEem1l5O0R0OWkQ" node="_2ktd_NXWEem1l5O0R0OWkQ" group="_2ktd_NXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2ktd_NXWEem1l5O0R0OWkQ" name="Body(Issue$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktd_dXWEem1l5O0R0OWkQ" target="_2kteC9XWEem1l5O0R0OWkQ" source="_2kteCNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktd_tXWEem1l5O0R0OWkQ" target="_2kteF9XWEem1l5O0R0OWkQ" source="_2kteC9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2ktd_9XWEem1l5O0R0OWkQ" target="_2kteJtXWEem1l5O0R0OWkQ" source="_2kteC9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kteANXWEem1l5O0R0OWkQ" target="_2kteLdXWEem1l5O0R0OWkQ" source="_2kteKdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kteAdXWEem1l5O0R0OWkQ" target="_2kteOdXWEem1l5O0R0OWkQ" source="_2kteMNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kteAtXWEem1l5O0R0OWkQ" target="_2kteP9XWEem1l5O0R0OWkQ" source="_2kteNNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kteA9XWEem1l5O0R0OWkQ" target="_2kteQ9XWEem1l5O0R0OWkQ" source="_2kteQtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kteBNXWEem1l5O0R0OWkQ" target="_2kteQ9XWEem1l5O0R0OWkQ" source="_2ktePNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kteBdXWEem1l5O0R0OWkQ" target="_2kteDNXWEem1l5O0R0OWkQ" source="_2kteQ9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kteBtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kteB9XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kteCNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2ktd_dXWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteCdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteCtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kteC9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2ktd_dXWEem1l5O0R0OWkQ" outgoing="_2ktd_tXWEem1l5O0R0OWkQ _2ktd_9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kteDNXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2kteBdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kteDdXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kteDtXWEem1l5O0R0OWkQ" target="_2kteJNXWEem1l5O0R0OWkQ" source="_2kteENXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kteD9XWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2kteENXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2kteDtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteEdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteEtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2kteE9XWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2kteFNXWEem1l5O0R0OWkQ" name="Iterate(Write(Issue$initializationFlag$1))" inputElement="_2kteJNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kteFdXWEem1l5O0R0OWkQ" target="_2kteIdXWEem1l5O0R0OWkQ" source="_2kteJNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kteFtXWEem1l5O0R0OWkQ" target="_2kteG9XWEem1l5O0R0OWkQ" source="_2kteF9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2kteF9XWEem1l5O0R0OWkQ" name="Iterate(Write(Issue$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2ktd_tXWEem1l5O0R0OWkQ" outgoing="_2kteFtXWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteGNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteGdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2kteGtXWEem1l5O0R0OWkQ" name="Write(Issue$initializationFlag$1)" structuralFeature="_2ktdu9XWEem1l5O0R0OWkQ">
                    <object xmi:id="_2kteG9XWEem1l5O0R0OWkQ" name="Write(Issue$initializationFlag$1).object" incoming="_2kteFtXWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteHNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteHdXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2kteHtXWEem1l5O0R0OWkQ" name="Write(Issue$initializationFlag$1).result" type="_2ktdutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteH9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteINXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2kteIdXWEem1l5O0R0OWkQ" name="Write(Issue$initializationFlag$1).value" incoming="_2kteFdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteItXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteI9XWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2kteJNXWEem1l5O0R0OWkQ" name="Iterate(Write(Issue$initializationFlag$1)).inputElement" incoming="_2kteDtXWEem1l5O0R0OWkQ" outgoing="_2kteFdXWEem1l5O0R0OWkQ" regionAsInput="_2kteFNXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kteJdXWEem1l5O0R0OWkQ" name="Read(Issue$initializationFlag$1)" structuralFeature="_2ktdu9XWEem1l5O0R0OWkQ">
              <object xmi:id="_2kteJtXWEem1l5O0R0OWkQ" name="Read(Issue$initializationFlag$1).object" incoming="_2ktd_9XWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteJ9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteKNXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2kteKdXWEem1l5O0R0OWkQ" name="Read(Issue$initializationFlag$1).result" outgoing="_2kteANXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteKtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteK9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kteLNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2kteLdXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kteANXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteLtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteL9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kteMNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kteAdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteMdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteMtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kteM9XWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2kteNNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kteAtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteNdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteNtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2kteN9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kteONXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2kteOdXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kteAdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteOtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteO9XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2ktePNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kteBNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2ktePdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2ktePtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kteP9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kteAtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteQNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteQdXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kteQtXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kteA9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kteQ9XWEem1l5O0R0OWkQ" name="Decision(Test(Issue$initializationFlag$1))" incoming="_2kteA9XWEem1l5O0R0OWkQ _2kteBNXWEem1l5O0R0OWkQ" outgoing="_2kteBdXWEem1l5O0R0OWkQ" decisionInputFlow="_2kteBNXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2kteRNXWEem1l5O0R0OWkQ" name="Issue$initialization$1" visibility="protected" method="_2ktd-9XWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2kteRdXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2ktdvtXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2kteRtXWEem1l5O0R0OWkQ" name="Issue" visibility="public" method="_2ktdwNXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kteR9XWEem1l5O0R0OWkQ" name="" visibility="package" type="_2ktdutXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteSNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteSdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2kteStXWEem1l5O0R0OWkQ" name="Pending" visibility="package">
        <generalization xmi:id="_2kteS9XWEem1l5O0R0OWkQ" general="_2ktdutXWEem1l5O0R0OWkQ"/>
        <ownedAttribute xmi:id="_2kteTNXWEem1l5O0R0OWkQ" name="Pending$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteTdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteTtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kteT9XWEem1l5O0R0OWkQ" name="Pending$method$1" visibility="private" specification="_2kuCk9XWEem1l5O0R0OWkQ" node="_2kteVNXWEem1l5O0R0OWkQ _2kteVdXWEem1l5O0R0OWkQ" group="_2kteVdXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kteUNXWEem1l5O0R0OWkQ" name="" type="_2kteStXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kteUdXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kteUtXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kteU9XWEem1l5O0R0OWkQ" target="_2kteVNXWEem1l5O0R0OWkQ" source="_2kuCHdXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2kteVdXWEem1l5O0R0OWkQ" name="Body(Pending$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kteVtXWEem1l5O0R0OWkQ" target="_2kuCHdXWEem1l5O0R0OWkQ" source="_2kuCGtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kteV9XWEem1l5O0R0OWkQ" target="_2kuCH9XWEem1l5O0R0OWkQ" source="_2kuCHdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kteWNXWEem1l5O0R0OWkQ" target="_2kuCGNXWEem1l5O0R0OWkQ" source="_2kuCHtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCENXWEem1l5O0R0OWkQ" target="_2kuCI9XWEem1l5O0R0OWkQ" source="_2kuCHdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCEdXWEem1l5O0R0OWkQ" target="_2kuCKtXWEem1l5O0R0OWkQ" source="_2kuCJtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCEtXWEem1l5O0R0OWkQ" target="_2kuCNtXWEem1l5O0R0OWkQ" source="_2kuCLdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCE9XWEem1l5O0R0OWkQ" target="_2kuCPNXWEem1l5O0R0OWkQ" source="_2kuCMdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuCFNXWEem1l5O0R0OWkQ" target="_2kuCQNXWEem1l5O0R0OWkQ" source="_2kuCP9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCFdXWEem1l5O0R0OWkQ" target="_2kuCQNXWEem1l5O0R0OWkQ" source="_2kuCOdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuCFtXWEem1l5O0R0OWkQ" target="_2kuCHtXWEem1l5O0R0OWkQ" source="_2kuCQNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kuCF9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuCGNXWEem1l5O0R0OWkQ" name="Body" incoming="_2kteWNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuCGdXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kuCGtXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kteVtXWEem1l5O0R0OWkQ" type="_2kteStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCG9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCHNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kuCHdXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kteVtXWEem1l5O0R0OWkQ" outgoing="_2kteU9XWEem1l5O0R0OWkQ _2kteV9XWEem1l5O0R0OWkQ _2kuCENXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2kuCHtXWEem1l5O0R0OWkQ" name="Call(Pending$initialization$1)" incoming="_2kuCFtXWEem1l5O0R0OWkQ" outgoing="_2kteWNXWEem1l5O0R0OWkQ" operation="_2kuCktXWEem1l5O0R0OWkQ">
              <target xmi:id="_2kuCH9XWEem1l5O0R0OWkQ" name="Call(Pending$initialization$1).target" incoming="_2kteV9XWEem1l5O0R0OWkQ" type="_2kteStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCINXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCIdXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kuCItXWEem1l5O0R0OWkQ" name="Read(Pending$initializationFlag$1)" structuralFeature="_2kteTNXWEem1l5O0R0OWkQ">
              <object xmi:id="_2kuCI9XWEem1l5O0R0OWkQ" name="Read(Pending$initializationFlag$1).object" incoming="_2kuCENXWEem1l5O0R0OWkQ" type="_2kteStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCJNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCJdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2kuCJtXWEem1l5O0R0OWkQ" name="Read(Pending$initializationFlag$1).result" outgoing="_2kuCEdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCJ9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCKNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuCKdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2kuCKtXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kuCEdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCK9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCLNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kuCLdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kuCEtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCLtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCL9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuCMNXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2kuCMdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kuCE9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCMtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCM9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2kuCNNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kuCNdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2kuCNtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kuCEtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCN9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCONXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kuCOdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kuCFdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCOtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCO9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kuCPNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kuCE9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCPdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCPtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kuCP9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kuCFNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kuCQNXWEem1l5O0R0OWkQ" name="Decision(Test(Pending$initializationFlag$1))" incoming="_2kuCFNXWEem1l5O0R0OWkQ _2kuCFdXWEem1l5O0R0OWkQ" outgoing="_2kuCFtXWEem1l5O0R0OWkQ" decisionInputFlow="_2kuCFdXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kteVNXWEem1l5O0R0OWkQ" name="Return" incoming="_2kteU9XWEem1l5O0R0OWkQ" type="_2kteStXWEem1l5O0R0OWkQ" parameter="_2kteUNXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuCQdXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2kuCl9XWEem1l5O0R0OWkQ" node="_2kuCQtXWEem1l5O0R0OWkQ" group="_2kuCQtXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2kuCQtXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuCQ9XWEem1l5O0R0OWkQ" name="Pending$initialization$1" visibility="private" specification="_2kuCktXWEem1l5O0R0OWkQ" node="_2kuCRNXWEem1l5O0R0OWkQ" group="_2kuCRNXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2kuCRNXWEem1l5O0R0OWkQ" name="Body(Pending$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCRdXWEem1l5O0R0OWkQ" target="_2kuCVNXWEem1l5O0R0OWkQ" source="_2kuCUdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCRtXWEem1l5O0R0OWkQ" target="_2kuCWNXWEem1l5O0R0OWkQ" source="_2kuCVNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCR9XWEem1l5O0R0OWkQ" target="_2kuCZdXWEem1l5O0R0OWkQ" source="_2kuCVNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCSNXWEem1l5O0R0OWkQ" target="_2kuCdNXWEem1l5O0R0OWkQ" source="_2kuCVNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCSdXWEem1l5O0R0OWkQ" target="_2kuCe9XWEem1l5O0R0OWkQ" source="_2kuCd9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCStXWEem1l5O0R0OWkQ" target="_2kuCh9XWEem1l5O0R0OWkQ" source="_2kuCftXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCS9XWEem1l5O0R0OWkQ" target="_2kuCjdXWEem1l5O0R0OWkQ" source="_2kuCgtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuCTNXWEem1l5O0R0OWkQ" target="_2kuCkdXWEem1l5O0R0OWkQ" source="_2kuCkNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCTdXWEem1l5O0R0OWkQ" target="_2kuCkdXWEem1l5O0R0OWkQ" source="_2kuCitXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuCTtXWEem1l5O0R0OWkQ" target="_2kuCVdXWEem1l5O0R0OWkQ" source="_2kuCkdXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kuCT9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuCUNXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kuCUdXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuCRdXWEem1l5O0R0OWkQ" type="_2kteStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCUtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCU9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kuCVNXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kuCRdXWEem1l5O0R0OWkQ" outgoing="_2kuCRtXWEem1l5O0R0OWkQ _2kuCR9XWEem1l5O0R0OWkQ _2kuCSNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuCVdXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2kuCTtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuCVtXWEem1l5O0R0OWkQ" target="_2kuCW9XWEem1l5O0R0OWkQ" source="_2kuCV9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2kuCV9XWEem1l5O0R0OWkQ" name="Call(Issue$initialization$1)" outgoing="_2kuCVtXWEem1l5O0R0OWkQ" operation="_2kteRNXWEem1l5O0R0OWkQ">
                <target xmi:id="_2kuCWNXWEem1l5O0R0OWkQ" name="Call(Issue$initialization$1).target" incoming="_2kuCRtXWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCWdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCWtXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuCW9XWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_2kuCVtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCXNXWEem1l5O0R0OWkQ" target="_2kuCctXWEem1l5O0R0OWkQ" source="_2kuCXtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuCXdXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2kuCXtXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2kuCXNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCX9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCYNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2kuCYdXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2kuCYtXWEem1l5O0R0OWkQ" name="Iterate(Write(Pending$initializationFlag$1))" inputElement="_2kuCctXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCY9XWEem1l5O0R0OWkQ" target="_2kuCb9XWEem1l5O0R0OWkQ" source="_2kuCctXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCZNXWEem1l5O0R0OWkQ" target="_2kuCadXWEem1l5O0R0OWkQ" source="_2kuCZdXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2kuCZdXWEem1l5O0R0OWkQ" name="Iterate(Write(Pending$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2kuCR9XWEem1l5O0R0OWkQ" outgoing="_2kuCZNXWEem1l5O0R0OWkQ" type="_2kteStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCZtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCZ9XWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2kuCaNXWEem1l5O0R0OWkQ" name="Write(Pending$initializationFlag$1)" structuralFeature="_2kteTNXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2kuCadXWEem1l5O0R0OWkQ" name="Write(Pending$initializationFlag$1).object" incoming="_2kuCZNXWEem1l5O0R0OWkQ" type="_2kteStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCatXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCa9XWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2kuCbNXWEem1l5O0R0OWkQ" name="Write(Pending$initializationFlag$1).result" type="_2kteStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCbdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCbtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2kuCb9XWEem1l5O0R0OWkQ" name="Write(Pending$initializationFlag$1).value" incoming="_2kuCY9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCcNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCcdXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2kuCctXWEem1l5O0R0OWkQ" name="Iterate(Write(Pending$initializationFlag$1)).inputElement" incoming="_2kuCXNXWEem1l5O0R0OWkQ" outgoing="_2kuCY9XWEem1l5O0R0OWkQ" regionAsInput="_2kuCYtXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kuCc9XWEem1l5O0R0OWkQ" name="Read(Pending$initializationFlag$1)" structuralFeature="_2kteTNXWEem1l5O0R0OWkQ">
              <object xmi:id="_2kuCdNXWEem1l5O0R0OWkQ" name="Read(Pending$initializationFlag$1).object" incoming="_2kuCSNXWEem1l5O0R0OWkQ" type="_2kteStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCddXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCdtXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2kuCd9XWEem1l5O0R0OWkQ" name="Read(Pending$initializationFlag$1).result" outgoing="_2kuCSdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCeNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCedXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuCetXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2kuCe9XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kuCSdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCfNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCfdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kuCftXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kuCStXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCf9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCgNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuCgdXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2kuCgtXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kuCS9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCg9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuChNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2kuChdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kuChtXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2kuCh9XWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kuCStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCiNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCidXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kuCitXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kuCTdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCi9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCjNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kuCjdXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kuCS9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCjtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCj9XWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kuCkNXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kuCTNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kuCkdXWEem1l5O0R0OWkQ" name="Decision(Test(Pending$initializationFlag$1))" incoming="_2kuCTNXWEem1l5O0R0OWkQ _2kuCTdXWEem1l5O0R0OWkQ" outgoing="_2kuCTtXWEem1l5O0R0OWkQ" decisionInputFlow="_2kuCTdXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2kuCktXWEem1l5O0R0OWkQ" name="Pending$initialization$1" visibility="protected" method="_2kuCQ9XWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2kuCk9XWEem1l5O0R0OWkQ" name="Pending" visibility="public" method="_2kteT9XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kuClNXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2kteStXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCldXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCltXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2kuCl9XWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2kuCQdXWEem1l5O0R0OWkQ" redefinedOperation="_2kteRdXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2kuCmNXWEem1l5O0R0OWkQ" name="InProcess" visibility="package">
        <generalization xmi:id="_2kuCmdXWEem1l5O0R0OWkQ" general="_2ktdutXWEem1l5O0R0OWkQ"/>
        <ownedAttribute xmi:id="_2kuCmtXWEem1l5O0R0OWkQ" name="InProcess$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCm9XWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCnNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuCndXWEem1l5O0R0OWkQ" name="InProcess$method$1" visibility="private" specification="_2kuDKtXWEem1l5O0R0OWkQ" node="_2kuCotXWEem1l5O0R0OWkQ _2kuCo9XWEem1l5O0R0OWkQ" group="_2kuCo9XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kuCntXWEem1l5O0R0OWkQ" name="" type="_2kuCmNXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCn9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCoNXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCodXWEem1l5O0R0OWkQ" target="_2kuCotXWEem1l5O0R0OWkQ" source="_2kuCtNXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2kuCo9XWEem1l5O0R0OWkQ" name="Body(InProcess$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCpNXWEem1l5O0R0OWkQ" target="_2kuCtNXWEem1l5O0R0OWkQ" source="_2kuCsdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCpdXWEem1l5O0R0OWkQ" target="_2kuCttXWEem1l5O0R0OWkQ" source="_2kuCtNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuCptXWEem1l5O0R0OWkQ" target="_2kuCr9XWEem1l5O0R0OWkQ" source="_2kuCtdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCp9XWEem1l5O0R0OWkQ" target="_2kuCutXWEem1l5O0R0OWkQ" source="_2kuCtNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCqNXWEem1l5O0R0OWkQ" target="_2kuCwdXWEem1l5O0R0OWkQ" source="_2kuCvdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCqdXWEem1l5O0R0OWkQ" target="_2kuCzdXWEem1l5O0R0OWkQ" source="_2kuCxNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCqtXWEem1l5O0R0OWkQ" target="_2kuC09XWEem1l5O0R0OWkQ" source="_2kuCyNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuCq9XWEem1l5O0R0OWkQ" target="_2kuC19XWEem1l5O0R0OWkQ" source="_2kuC1tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuCrNXWEem1l5O0R0OWkQ" target="_2kuC19XWEem1l5O0R0OWkQ" source="_2kuC0NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuCrdXWEem1l5O0R0OWkQ" target="_2kuCtdXWEem1l5O0R0OWkQ" source="_2kuC19XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kuCrtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuCr9XWEem1l5O0R0OWkQ" name="Body" incoming="_2kuCptXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuCsNXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kuCsdXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuCpNXWEem1l5O0R0OWkQ" type="_2kuCmNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCstXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCs9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kuCtNXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kuCpNXWEem1l5O0R0OWkQ" outgoing="_2kuCodXWEem1l5O0R0OWkQ _2kuCpdXWEem1l5O0R0OWkQ _2kuCp9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2kuCtdXWEem1l5O0R0OWkQ" name="Call(InProcess$initialization$1)" incoming="_2kuCrdXWEem1l5O0R0OWkQ" outgoing="_2kuCptXWEem1l5O0R0OWkQ" operation="_2kuDKdXWEem1l5O0R0OWkQ">
              <target xmi:id="_2kuCttXWEem1l5O0R0OWkQ" name="Call(InProcess$initialization$1).target" incoming="_2kuCpdXWEem1l5O0R0OWkQ" type="_2kuCmNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCt9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCuNXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kuCudXWEem1l5O0R0OWkQ" name="Read(InProcess$initializationFlag$1)" structuralFeature="_2kuCmtXWEem1l5O0R0OWkQ">
              <object xmi:id="_2kuCutXWEem1l5O0R0OWkQ" name="Read(InProcess$initializationFlag$1).object" incoming="_2kuCp9XWEem1l5O0R0OWkQ" type="_2kuCmNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCu9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCvNXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2kuCvdXWEem1l5O0R0OWkQ" name="Read(InProcess$initializationFlag$1).result" outgoing="_2kuCqNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCvtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCv9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuCwNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2kuCwdXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kuCqNXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCwtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCw9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kuCxNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kuCqdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCxdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCxtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuCx9XWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2kuCyNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kuCqtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCydXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCytXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2kuCy9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kuCzNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2kuCzdXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kuCqdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuCztXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuCz9XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kuC0NXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kuCrNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuC0dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuC0tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kuC09XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kuCqtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuC1NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuC1dXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kuC1tXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kuCq9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kuC19XWEem1l5O0R0OWkQ" name="Decision(Test(InProcess$initializationFlag$1))" incoming="_2kuCq9XWEem1l5O0R0OWkQ _2kuCrNXWEem1l5O0R0OWkQ" outgoing="_2kuCrdXWEem1l5O0R0OWkQ" decisionInputFlow="_2kuCrNXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kuCotXWEem1l5O0R0OWkQ" name="Return" incoming="_2kuCodXWEem1l5O0R0OWkQ" type="_2kuCmNXWEem1l5O0R0OWkQ" parameter="_2kuCntXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuC2NXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2kuDLtXWEem1l5O0R0OWkQ" node="_2kuC2dXWEem1l5O0R0OWkQ" group="_2kuC2dXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2kuC2dXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuC2tXWEem1l5O0R0OWkQ" name="InProcess$initialization$1" visibility="private" specification="_2kuDKdXWEem1l5O0R0OWkQ" node="_2kuC29XWEem1l5O0R0OWkQ" group="_2kuC29XWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2kuC29XWEem1l5O0R0OWkQ" name="Body(InProcess$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuC3NXWEem1l5O0R0OWkQ" target="_2kuC69XWEem1l5O0R0OWkQ" source="_2kuC6NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuC3dXWEem1l5O0R0OWkQ" target="_2kuC79XWEem1l5O0R0OWkQ" source="_2kuC69XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuC3tXWEem1l5O0R0OWkQ" target="_2kuC_NXWEem1l5O0R0OWkQ" source="_2kuC69XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuC39XWEem1l5O0R0OWkQ" target="_2kuDC9XWEem1l5O0R0OWkQ" source="_2kuC69XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuC4NXWEem1l5O0R0OWkQ" target="_2kuDEtXWEem1l5O0R0OWkQ" source="_2kuDDtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuC4dXWEem1l5O0R0OWkQ" target="_2kuDHtXWEem1l5O0R0OWkQ" source="_2kuDFdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuC4tXWEem1l5O0R0OWkQ" target="_2kuDJNXWEem1l5O0R0OWkQ" source="_2kuDGdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuC49XWEem1l5O0R0OWkQ" target="_2kuDKNXWEem1l5O0R0OWkQ" source="_2kuDJ9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuC5NXWEem1l5O0R0OWkQ" target="_2kuDKNXWEem1l5O0R0OWkQ" source="_2kuDIdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuC5dXWEem1l5O0R0OWkQ" target="_2kuC7NXWEem1l5O0R0OWkQ" source="_2kuDKNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kuC5tXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuC59XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kuC6NXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuC3NXWEem1l5O0R0OWkQ" type="_2kuCmNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuC6dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuC6tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kuC69XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kuC3NXWEem1l5O0R0OWkQ" outgoing="_2kuC3dXWEem1l5O0R0OWkQ _2kuC3tXWEem1l5O0R0OWkQ _2kuC39XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuC7NXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2kuC5dXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuC7dXWEem1l5O0R0OWkQ" target="_2kuC8tXWEem1l5O0R0OWkQ" source="_2kuC7tXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2kuC7tXWEem1l5O0R0OWkQ" name="Call(Issue$initialization$1)" outgoing="_2kuC7dXWEem1l5O0R0OWkQ" operation="_2kteRNXWEem1l5O0R0OWkQ">
                <target xmi:id="_2kuC79XWEem1l5O0R0OWkQ" name="Call(Issue$initialization$1).target" incoming="_2kuC3dXWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuC8NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuC8dXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuC8tXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_2kuC7dXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuC89XWEem1l5O0R0OWkQ" target="_2kuDCdXWEem1l5O0R0OWkQ" source="_2kuC9dXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuC9NXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2kuC9dXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2kuC89XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuC9tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuC99XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2kuC-NXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2kuC-dXWEem1l5O0R0OWkQ" name="Iterate(Write(InProcess$initializationFlag$1))" inputElement="_2kuDCdXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuC-tXWEem1l5O0R0OWkQ" target="_2kuDBtXWEem1l5O0R0OWkQ" source="_2kuDCdXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuC-9XWEem1l5O0R0OWkQ" target="_2kuDANXWEem1l5O0R0OWkQ" source="_2kuC_NXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2kuC_NXWEem1l5O0R0OWkQ" name="Iterate(Write(InProcess$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2kuC3tXWEem1l5O0R0OWkQ" outgoing="_2kuC-9XWEem1l5O0R0OWkQ" type="_2kuCmNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuC_dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuC_tXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2kuC_9XWEem1l5O0R0OWkQ" name="Write(InProcess$initializationFlag$1)" structuralFeature="_2kuCmtXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2kuDANXWEem1l5O0R0OWkQ" name="Write(InProcess$initializationFlag$1).object" incoming="_2kuC-9XWEem1l5O0R0OWkQ" type="_2kuCmNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDAdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDAtXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2kuDA9XWEem1l5O0R0OWkQ" name="Write(InProcess$initializationFlag$1).result" type="_2kuCmNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDBNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDBdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2kuDBtXWEem1l5O0R0OWkQ" name="Write(InProcess$initializationFlag$1).value" incoming="_2kuC-tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDB9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDCNXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2kuDCdXWEem1l5O0R0OWkQ" name="Iterate(Write(InProcess$initializationFlag$1)).inputElement" incoming="_2kuC89XWEem1l5O0R0OWkQ" outgoing="_2kuC-tXWEem1l5O0R0OWkQ" regionAsInput="_2kuC-dXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kuDCtXWEem1l5O0R0OWkQ" name="Read(InProcess$initializationFlag$1)" structuralFeature="_2kuCmtXWEem1l5O0R0OWkQ">
              <object xmi:id="_2kuDC9XWEem1l5O0R0OWkQ" name="Read(InProcess$initializationFlag$1).object" incoming="_2kuC39XWEem1l5O0R0OWkQ" type="_2kuCmNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDDNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDDdXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2kuDDtXWEem1l5O0R0OWkQ" name="Read(InProcess$initializationFlag$1).result" outgoing="_2kuC4NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDD9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDENXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuDEdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2kuDEtXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kuC4NXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDE9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDFNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kuDFdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kuC4dXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDFtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDF9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuDGNXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2kuDGdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kuC4tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDGtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDG9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2kuDHNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kuDHdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2kuDHtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kuC4dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDH9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDINXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kuDIdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kuC5NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDItXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDI9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kuDJNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kuC4tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDJdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDJtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kuDJ9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kuC49XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kuDKNXWEem1l5O0R0OWkQ" name="Decision(Test(InProcess$initializationFlag$1))" incoming="_2kuC49XWEem1l5O0R0OWkQ _2kuC5NXWEem1l5O0R0OWkQ" outgoing="_2kuC5dXWEem1l5O0R0OWkQ" decisionInputFlow="_2kuC5NXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2kuDKdXWEem1l5O0R0OWkQ" name="InProcess$initialization$1" visibility="protected" method="_2kuC2tXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2kuDKtXWEem1l5O0R0OWkQ" name="InProcess" visibility="public" method="_2kuCndXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kuDK9XWEem1l5O0R0OWkQ" name="" visibility="package" type="_2kuCmNXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDLNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDLdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2kuDLtXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2kuC2NXWEem1l5O0R0OWkQ" redefinedOperation="_2kteRdXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2kuDL9XWEem1l5O0R0OWkQ" name="Overdue" visibility="package">
        <generalization xmi:id="_2kuDMNXWEem1l5O0R0OWkQ" general="_2ktdutXWEem1l5O0R0OWkQ"/>
        <ownedAttribute xmi:id="_2kuDMdXWEem1l5O0R0OWkQ" name="Overdue$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDMtXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDM9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuDNNXWEem1l5O0R0OWkQ" name="Overdue$method$1" visibility="private" specification="_2kuDwdXWEem1l5O0R0OWkQ" node="_2kuDOdXWEem1l5O0R0OWkQ _2kuDOtXWEem1l5O0R0OWkQ" group="_2kuDOtXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kuDNdXWEem1l5O0R0OWkQ" name="" type="_2kuDL9XWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDNtXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDN9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDONXWEem1l5O0R0OWkQ" target="_2kuDOdXWEem1l5O0R0OWkQ" source="_2kuDS9XWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2kuDOtXWEem1l5O0R0OWkQ" name="Body(Overdue$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDO9XWEem1l5O0R0OWkQ" target="_2kuDS9XWEem1l5O0R0OWkQ" source="_2kuDSNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDPNXWEem1l5O0R0OWkQ" target="_2kuDTdXWEem1l5O0R0OWkQ" source="_2kuDS9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuDPdXWEem1l5O0R0OWkQ" target="_2kuDRtXWEem1l5O0R0OWkQ" source="_2kuDTNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDPtXWEem1l5O0R0OWkQ" target="_2kuDUdXWEem1l5O0R0OWkQ" source="_2kuDS9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDP9XWEem1l5O0R0OWkQ" target="_2kuDWNXWEem1l5O0R0OWkQ" source="_2kuDVNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDQNXWEem1l5O0R0OWkQ" target="_2kuDZNXWEem1l5O0R0OWkQ" source="_2kuDW9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDQdXWEem1l5O0R0OWkQ" target="_2kuDatXWEem1l5O0R0OWkQ" source="_2kuDX9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuDQtXWEem1l5O0R0OWkQ" target="_2kuDbtXWEem1l5O0R0OWkQ" source="_2kuDbdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDQ9XWEem1l5O0R0OWkQ" target="_2kuDbtXWEem1l5O0R0OWkQ" source="_2kuDZ9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuDRNXWEem1l5O0R0OWkQ" target="_2kuDTNXWEem1l5O0R0OWkQ" source="_2kuDbtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kuDRdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuDRtXWEem1l5O0R0OWkQ" name="Body" incoming="_2kuDPdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuDR9XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kuDSNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuDO9XWEem1l5O0R0OWkQ" type="_2kuDL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDSdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDStXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kuDS9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kuDO9XWEem1l5O0R0OWkQ" outgoing="_2kuDONXWEem1l5O0R0OWkQ _2kuDPNXWEem1l5O0R0OWkQ _2kuDPtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2kuDTNXWEem1l5O0R0OWkQ" name="Call(Overdue$initialization$1)" incoming="_2kuDRNXWEem1l5O0R0OWkQ" outgoing="_2kuDPdXWEem1l5O0R0OWkQ" operation="_2kuDwNXWEem1l5O0R0OWkQ">
              <target xmi:id="_2kuDTdXWEem1l5O0R0OWkQ" name="Call(Overdue$initialization$1).target" incoming="_2kuDPNXWEem1l5O0R0OWkQ" type="_2kuDL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDTtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDT9XWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kuDUNXWEem1l5O0R0OWkQ" name="Read(Overdue$initializationFlag$1)" structuralFeature="_2kuDMdXWEem1l5O0R0OWkQ">
              <object xmi:id="_2kuDUdXWEem1l5O0R0OWkQ" name="Read(Overdue$initializationFlag$1).object" incoming="_2kuDPtXWEem1l5O0R0OWkQ" type="_2kuDL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDUtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDU9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2kuDVNXWEem1l5O0R0OWkQ" name="Read(Overdue$initializationFlag$1).result" outgoing="_2kuDP9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDVdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDVtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuDV9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2kuDWNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kuDP9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDWdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDWtXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kuDW9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kuDQNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDXNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDXdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuDXtXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2kuDX9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kuDQdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDYNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDYdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2kuDYtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kuDY9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2kuDZNXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kuDQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDZdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDZtXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kuDZ9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kuDQ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDaNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDadXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kuDatXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kuDQdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDa9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDbNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kuDbdXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kuDQtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kuDbtXWEem1l5O0R0OWkQ" name="Decision(Test(Overdue$initializationFlag$1))" incoming="_2kuDQtXWEem1l5O0R0OWkQ _2kuDQ9XWEem1l5O0R0OWkQ" outgoing="_2kuDRNXWEem1l5O0R0OWkQ" decisionInputFlow="_2kuDQ9XWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kuDOdXWEem1l5O0R0OWkQ" name="Return" incoming="_2kuDONXWEem1l5O0R0OWkQ" type="_2kuDL9XWEem1l5O0R0OWkQ" parameter="_2kuDNdXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuDb9XWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2kuDxdXWEem1l5O0R0OWkQ" node="_2kuDcNXWEem1l5O0R0OWkQ" group="_2kuDcNXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2kuDcNXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuDcdXWEem1l5O0R0OWkQ" name="Overdue$initialization$1" visibility="private" specification="_2kuDwNXWEem1l5O0R0OWkQ" node="_2kuDctXWEem1l5O0R0OWkQ" group="_2kuDctXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2kuDctXWEem1l5O0R0OWkQ" name="Body(Overdue$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDc9XWEem1l5O0R0OWkQ" target="_2kuDgtXWEem1l5O0R0OWkQ" source="_2kuDf9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDdNXWEem1l5O0R0OWkQ" target="_2kuDhtXWEem1l5O0R0OWkQ" source="_2kuDgtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDddXWEem1l5O0R0OWkQ" target="_2kuDk9XWEem1l5O0R0OWkQ" source="_2kuDgtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDdtXWEem1l5O0R0OWkQ" target="_2kuDotXWEem1l5O0R0OWkQ" source="_2kuDgtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDd9XWEem1l5O0R0OWkQ" target="_2kuDqdXWEem1l5O0R0OWkQ" source="_2kuDpdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDeNXWEem1l5O0R0OWkQ" target="_2kuDtdXWEem1l5O0R0OWkQ" source="_2kuDrNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDedXWEem1l5O0R0OWkQ" target="_2kuDu9XWEem1l5O0R0OWkQ" source="_2kuDsNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuDetXWEem1l5O0R0OWkQ" target="_2kuDv9XWEem1l5O0R0OWkQ" source="_2kuDvtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDe9XWEem1l5O0R0OWkQ" target="_2kuDv9XWEem1l5O0R0OWkQ" source="_2kuDuNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuDfNXWEem1l5O0R0OWkQ" target="_2kuDg9XWEem1l5O0R0OWkQ" source="_2kuDv9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kuDfdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuDftXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kuDf9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuDc9XWEem1l5O0R0OWkQ" type="_2kuDL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDgNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDgdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kuDgtXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kuDc9XWEem1l5O0R0OWkQ" outgoing="_2kuDdNXWEem1l5O0R0OWkQ _2kuDddXWEem1l5O0R0OWkQ _2kuDdtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuDg9XWEem1l5O0R0OWkQ" name="Initialization" incoming="_2kuDfNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuDhNXWEem1l5O0R0OWkQ" target="_2kuDidXWEem1l5O0R0OWkQ" source="_2kuDhdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2kuDhdXWEem1l5O0R0OWkQ" name="Call(Issue$initialization$1)" outgoing="_2kuDhNXWEem1l5O0R0OWkQ" operation="_2kteRNXWEem1l5O0R0OWkQ">
                <target xmi:id="_2kuDhtXWEem1l5O0R0OWkQ" name="Call(Issue$initialization$1).target" incoming="_2kuDdNXWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDh9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDiNXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuDidXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_2kuDhNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDitXWEem1l5O0R0OWkQ" target="_2kuDoNXWEem1l5O0R0OWkQ" source="_2kuDjNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuDi9XWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2kuDjNXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2kuDitXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDjdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDjtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2kuDj9XWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2kuDkNXWEem1l5O0R0OWkQ" name="Iterate(Write(Overdue$initializationFlag$1))" inputElement="_2kuDoNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDkdXWEem1l5O0R0OWkQ" target="_2kuDndXWEem1l5O0R0OWkQ" source="_2kuDoNXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDktXWEem1l5O0R0OWkQ" target="_2kuDl9XWEem1l5O0R0OWkQ" source="_2kuDk9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2kuDk9XWEem1l5O0R0OWkQ" name="Iterate(Write(Overdue$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2kuDddXWEem1l5O0R0OWkQ" outgoing="_2kuDktXWEem1l5O0R0OWkQ" type="_2kuDL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDlNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDldXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2kuDltXWEem1l5O0R0OWkQ" name="Write(Overdue$initializationFlag$1)" structuralFeature="_2kuDMdXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2kuDl9XWEem1l5O0R0OWkQ" name="Write(Overdue$initializationFlag$1).object" incoming="_2kuDktXWEem1l5O0R0OWkQ" type="_2kuDL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDmNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDmdXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2kuDmtXWEem1l5O0R0OWkQ" name="Write(Overdue$initializationFlag$1).result" type="_2kuDL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDm9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDnNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2kuDndXWEem1l5O0R0OWkQ" name="Write(Overdue$initializationFlag$1).value" incoming="_2kuDkdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDntXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDn9XWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2kuDoNXWEem1l5O0R0OWkQ" name="Iterate(Write(Overdue$initializationFlag$1)).inputElement" incoming="_2kuDitXWEem1l5O0R0OWkQ" outgoing="_2kuDkdXWEem1l5O0R0OWkQ" regionAsInput="_2kuDkNXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kuDodXWEem1l5O0R0OWkQ" name="Read(Overdue$initializationFlag$1)" structuralFeature="_2kuDMdXWEem1l5O0R0OWkQ">
              <object xmi:id="_2kuDotXWEem1l5O0R0OWkQ" name="Read(Overdue$initializationFlag$1).object" incoming="_2kuDdtXWEem1l5O0R0OWkQ" type="_2kuDL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDo9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDpNXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2kuDpdXWEem1l5O0R0OWkQ" name="Read(Overdue$initializationFlag$1).result" outgoing="_2kuDd9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDptXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDp9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuDqNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2kuDqdXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kuDd9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDqtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDq9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kuDrNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kuDeNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDrdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDrtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuDr9XWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2kuDsNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kuDedXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDsdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDstXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2kuDs9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kuDtNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2kuDtdXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kuDeNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDttXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDt9XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kuDuNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kuDe9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDudXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDutXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kuDu9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kuDedXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDvNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDvdXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kuDvtXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kuDetXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kuDv9XWEem1l5O0R0OWkQ" name="Decision(Test(Overdue$initializationFlag$1))" incoming="_2kuDetXWEem1l5O0R0OWkQ _2kuDe9XWEem1l5O0R0OWkQ" outgoing="_2kuDfNXWEem1l5O0R0OWkQ" decisionInputFlow="_2kuDe9XWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2kuDwNXWEem1l5O0R0OWkQ" name="Overdue$initialization$1" visibility="protected" method="_2kuDcdXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2kuDwdXWEem1l5O0R0OWkQ" name="Overdue" visibility="public" method="_2kuDNNXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kuDwtXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2kuDL9XWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDw9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDxNXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2kuDxdXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2kuDb9XWEem1l5O0R0OWkQ" redefinedOperation="_2kteRdXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2kuDxtXWEem1l5O0R0OWkQ" name="Resolved" visibility="package">
        <generalization xmi:id="_2kuDx9XWEem1l5O0R0OWkQ" general="_2ktdutXWEem1l5O0R0OWkQ"/>
        <ownedAttribute xmi:id="_2kuDyNXWEem1l5O0R0OWkQ" name="Resolved$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDydXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDytXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuDy9XWEem1l5O0R0OWkQ" name="Resolved$method$1" visibility="private" specification="_2kuEWNXWEem1l5O0R0OWkQ" node="_2kuD0NXWEem1l5O0R0OWkQ _2kuD0dXWEem1l5O0R0OWkQ" group="_2kuD0dXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kuDzNXWEem1l5O0R0OWkQ" name="" type="_2kuDxtXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuDzdXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuDztXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuDz9XWEem1l5O0R0OWkQ" target="_2kuD0NXWEem1l5O0R0OWkQ" source="_2kuD4tXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2kuD0dXWEem1l5O0R0OWkQ" name="Body(Resolved$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuD0tXWEem1l5O0R0OWkQ" target="_2kuD4tXWEem1l5O0R0OWkQ" source="_2kuD39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuD09XWEem1l5O0R0OWkQ" target="_2kuD5NXWEem1l5O0R0OWkQ" source="_2kuD4tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuD1NXWEem1l5O0R0OWkQ" target="_2kuD3dXWEem1l5O0R0OWkQ" source="_2kuD49XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuD1dXWEem1l5O0R0OWkQ" target="_2kuD6NXWEem1l5O0R0OWkQ" source="_2kuD4tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuD1tXWEem1l5O0R0OWkQ" target="_2kuD79XWEem1l5O0R0OWkQ" source="_2kuD69XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuD19XWEem1l5O0R0OWkQ" target="_2kuD-9XWEem1l5O0R0OWkQ" source="_2kuD8tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuD2NXWEem1l5O0R0OWkQ" target="_2kuEAdXWEem1l5O0R0OWkQ" source="_2kuD9tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuD2dXWEem1l5O0R0OWkQ" target="_2kuEBdXWEem1l5O0R0OWkQ" source="_2kuEBNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuD2tXWEem1l5O0R0OWkQ" target="_2kuEBdXWEem1l5O0R0OWkQ" source="_2kuD_tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuD29XWEem1l5O0R0OWkQ" target="_2kuD49XWEem1l5O0R0OWkQ" source="_2kuEBdXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kuD3NXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuD3dXWEem1l5O0R0OWkQ" name="Body" incoming="_2kuD1NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuD3tXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kuD39XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuD0tXWEem1l5O0R0OWkQ" type="_2kuDxtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuD4NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuD4dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kuD4tXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kuD0tXWEem1l5O0R0OWkQ" outgoing="_2kuDz9XWEem1l5O0R0OWkQ _2kuD09XWEem1l5O0R0OWkQ _2kuD1dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2kuD49XWEem1l5O0R0OWkQ" name="Call(Resolved$initialization$1)" incoming="_2kuD29XWEem1l5O0R0OWkQ" outgoing="_2kuD1NXWEem1l5O0R0OWkQ" operation="_2kuEV9XWEem1l5O0R0OWkQ">
              <target xmi:id="_2kuD5NXWEem1l5O0R0OWkQ" name="Call(Resolved$initialization$1).target" incoming="_2kuD09XWEem1l5O0R0OWkQ" type="_2kuDxtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuD5dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuD5tXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kuD59XWEem1l5O0R0OWkQ" name="Read(Resolved$initializationFlag$1)" structuralFeature="_2kuDyNXWEem1l5O0R0OWkQ">
              <object xmi:id="_2kuD6NXWEem1l5O0R0OWkQ" name="Read(Resolved$initializationFlag$1).object" incoming="_2kuD1dXWEem1l5O0R0OWkQ" type="_2kuDxtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuD6dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuD6tXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2kuD69XWEem1l5O0R0OWkQ" name="Read(Resolved$initializationFlag$1).result" outgoing="_2kuD1tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuD7NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuD7dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuD7tXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2kuD79XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kuD1tXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuD8NXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuD8dXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kuD8tXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kuD19XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuD89XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuD9NXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuD9dXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2kuD9tXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kuD2NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuD99XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuD-NXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2kuD-dXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kuD-tXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2kuD-9XWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kuD19XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuD_NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuD_dXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kuD_tXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kuD2tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuD_9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEANXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kuEAdXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kuD2NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEAtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEA9XWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kuEBNXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kuD2dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kuEBdXWEem1l5O0R0OWkQ" name="Decision(Test(Resolved$initializationFlag$1))" incoming="_2kuD2dXWEem1l5O0R0OWkQ _2kuD2tXWEem1l5O0R0OWkQ" outgoing="_2kuD29XWEem1l5O0R0OWkQ" decisionInputFlow="_2kuD2tXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kuD0NXWEem1l5O0R0OWkQ" name="Return" incoming="_2kuDz9XWEem1l5O0R0OWkQ" type="_2kuDxtXWEem1l5O0R0OWkQ" parameter="_2kuDzNXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuEBtXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2kuEXNXWEem1l5O0R0OWkQ" node="_2kuEB9XWEem1l5O0R0OWkQ" group="_2kuEB9XWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2kuEB9XWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuECNXWEem1l5O0R0OWkQ" name="Resolved$initialization$1" visibility="private" specification="_2kuEV9XWEem1l5O0R0OWkQ" node="_2kuECdXWEem1l5O0R0OWkQ" group="_2kuECdXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2kuECdXWEem1l5O0R0OWkQ" name="Body(Resolved$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuECtXWEem1l5O0R0OWkQ" target="_2kuEGdXWEem1l5O0R0OWkQ" source="_2kuEFtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEC9XWEem1l5O0R0OWkQ" target="_2kuEHdXWEem1l5O0R0OWkQ" source="_2kuEGdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEDNXWEem1l5O0R0OWkQ" target="_2kuEKtXWEem1l5O0R0OWkQ" source="_2kuEGdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEDdXWEem1l5O0R0OWkQ" target="_2kuEOdXWEem1l5O0R0OWkQ" source="_2kuEGdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEDtXWEem1l5O0R0OWkQ" target="_2kuEQNXWEem1l5O0R0OWkQ" source="_2kuEPNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuED9XWEem1l5O0R0OWkQ" target="_2kuETNXWEem1l5O0R0OWkQ" source="_2kuEQ9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEENXWEem1l5O0R0OWkQ" target="_2kuEUtXWEem1l5O0R0OWkQ" source="_2kuER9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEEdXWEem1l5O0R0OWkQ" target="_2kuEVtXWEem1l5O0R0OWkQ" source="_2kuEVdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEEtXWEem1l5O0R0OWkQ" target="_2kuEVtXWEem1l5O0R0OWkQ" source="_2kuET9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEE9XWEem1l5O0R0OWkQ" target="_2kuEGtXWEem1l5O0R0OWkQ" source="_2kuEVtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kuEFNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuEFdXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kuEFtXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuECtXWEem1l5O0R0OWkQ" type="_2kuDxtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEF9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEGNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kuEGdXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kuECtXWEem1l5O0R0OWkQ" outgoing="_2kuEC9XWEem1l5O0R0OWkQ _2kuEDNXWEem1l5O0R0OWkQ _2kuEDdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuEGtXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2kuEE9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEG9XWEem1l5O0R0OWkQ" target="_2kuEINXWEem1l5O0R0OWkQ" source="_2kuEHNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2kuEHNXWEem1l5O0R0OWkQ" name="Call(Issue$initialization$1)" outgoing="_2kuEG9XWEem1l5O0R0OWkQ" operation="_2kteRNXWEem1l5O0R0OWkQ">
                <target xmi:id="_2kuEHdXWEem1l5O0R0OWkQ" name="Call(Issue$initialization$1).target" incoming="_2kuEC9XWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEHtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEH9XWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuEINXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_2kuEG9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEIdXWEem1l5O0R0OWkQ" target="_2kuEN9XWEem1l5O0R0OWkQ" source="_2kuEI9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuEItXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2kuEI9XWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2kuEIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEJNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEJdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2kuEJtXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2kuEJ9XWEem1l5O0R0OWkQ" name="Iterate(Write(Resolved$initializationFlag$1))" inputElement="_2kuEN9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEKNXWEem1l5O0R0OWkQ" target="_2kuENNXWEem1l5O0R0OWkQ" source="_2kuEN9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEKdXWEem1l5O0R0OWkQ" target="_2kuELtXWEem1l5O0R0OWkQ" source="_2kuEKtXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2kuEKtXWEem1l5O0R0OWkQ" name="Iterate(Write(Resolved$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2kuEDNXWEem1l5O0R0OWkQ" outgoing="_2kuEKdXWEem1l5O0R0OWkQ" type="_2kuDxtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEK9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuELNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2kuELdXWEem1l5O0R0OWkQ" name="Write(Resolved$initializationFlag$1)" structuralFeature="_2kuDyNXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2kuELtXWEem1l5O0R0OWkQ" name="Write(Resolved$initializationFlag$1).object" incoming="_2kuEKdXWEem1l5O0R0OWkQ" type="_2kuDxtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEL9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEMNXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2kuEMdXWEem1l5O0R0OWkQ" name="Write(Resolved$initializationFlag$1).result" type="_2kuDxtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEMtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEM9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2kuENNXWEem1l5O0R0OWkQ" name="Write(Resolved$initializationFlag$1).value" incoming="_2kuEKNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuENdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuENtXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2kuEN9XWEem1l5O0R0OWkQ" name="Iterate(Write(Resolved$initializationFlag$1)).inputElement" incoming="_2kuEIdXWEem1l5O0R0OWkQ" outgoing="_2kuEKNXWEem1l5O0R0OWkQ" regionAsInput="_2kuEJ9XWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kuEONXWEem1l5O0R0OWkQ" name="Read(Resolved$initializationFlag$1)" structuralFeature="_2kuDyNXWEem1l5O0R0OWkQ">
              <object xmi:id="_2kuEOdXWEem1l5O0R0OWkQ" name="Read(Resolved$initializationFlag$1).object" incoming="_2kuEDdXWEem1l5O0R0OWkQ" type="_2kuDxtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEOtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEO9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2kuEPNXWEem1l5O0R0OWkQ" name="Read(Resolved$initializationFlag$1).result" outgoing="_2kuEDtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEPdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEPtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuEP9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2kuEQNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kuEDtXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEQdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEQtXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kuEQ9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kuED9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuERNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuERdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuERtXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2kuER9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kuEENXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuESNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuESdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2kuEStXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kuES9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2kuETNXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kuED9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuETdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuETtXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kuET9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kuEEtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEUNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEUdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kuEUtXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kuEENXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEU9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEVNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kuEVdXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kuEEdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kuEVtXWEem1l5O0R0OWkQ" name="Decision(Test(Resolved$initializationFlag$1))" incoming="_2kuEEdXWEem1l5O0R0OWkQ _2kuEEtXWEem1l5O0R0OWkQ" outgoing="_2kuEE9XWEem1l5O0R0OWkQ" decisionInputFlow="_2kuEEtXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2kuEV9XWEem1l5O0R0OWkQ" name="Resolved$initialization$1" visibility="protected" method="_2kuECNXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2kuEWNXWEem1l5O0R0OWkQ" name="Resolved" visibility="public" method="_2kuDy9XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kuEWdXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2kuDxtXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEWtXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEW9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2kuEXNXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2kuEBtXWEem1l5O0R0OWkQ" redefinedOperation="_2kteRdXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2kuEXdXWEem1l5O0R0OWkQ" name="TestRunner" visibility="package" classifierBehavior="_2kuEZNXWEem1l5O0R0OWkQ" isActive="true">
        <ownedAttribute xmi:id="_2kuEXtXWEem1l5O0R0OWkQ" name="TestRunner$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEX9XWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEYNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_2kuEYdXWEem1l5O0R0OWkQ" name="outer" visibility="private" type="_2kuqLtXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEYtXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEY9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuEZNXWEem1l5O0R0OWkQ" name="TestRunner$classifierBehavior$1" visibility="private" isActive="true" node="_2kuEZdXWEem1l5O0R0OWkQ" group="_2kuEZdXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2kuEZdXWEem1l5O0R0OWkQ" name="Body(TestRunner$classifierBehavior$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEZtXWEem1l5O0R0OWkQ" target="_2kuEiNXWEem1l5O0R0OWkQ" source="_2kuEg9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEZ9XWEem1l5O0R0OWkQ" target="_2kuEodXWEem1l5O0R0OWkQ" source="_2kuEiNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEaNXWEem1l5O0R0OWkQ" target="_2kuEuNXWEem1l5O0R0OWkQ" source="_2kuEntXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEadXWEem1l5O0R0OWkQ" target="_2kuEptXWEem1l5O0R0OWkQ" source="_2kuEodXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEatXWEem1l5O0R0OWkQ" target="_2kuE0NXWEem1l5O0R0OWkQ" source="_2kuEntXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEa9XWEem1l5O0R0OWkQ" target="_2kuEvtXWEem1l5O0R0OWkQ" source="_2kuEptXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEbNXWEem1l5O0R0OWkQ" target="_2kuE6NXWEem1l5O0R0OWkQ" source="_2kuEntXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEbdXWEem1l5O0R0OWkQ" target="_2kuE1tXWEem1l5O0R0OWkQ" source="_2kuEvtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEbtXWEem1l5O0R0OWkQ" target="_2kuFANXWEem1l5O0R0OWkQ" source="_2kuEntXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEb9XWEem1l5O0R0OWkQ" target="_2kuE7tXWEem1l5O0R0OWkQ" source="_2kuE1tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEcNXWEem1l5O0R0OWkQ" target="_2kuFGNXWEem1l5O0R0OWkQ" source="_2kuEn9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEcdXWEem1l5O0R0OWkQ" target="_2kuFBtXWEem1l5O0R0OWkQ" source="_2kuE7tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEctXWEem1l5O0R0OWkQ" target="_2kuFMNXWEem1l5O0R0OWkQ" source="_2kuEn9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEc9XWEem1l5O0R0OWkQ" target="_2kuFHtXWEem1l5O0R0OWkQ" source="_2kuFBtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEdNXWEem1l5O0R0OWkQ" target="_2kuFSNXWEem1l5O0R0OWkQ" source="_2kuEn9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEddXWEem1l5O0R0OWkQ" target="_2kuFNtXWEem1l5O0R0OWkQ" source="_2kuFHtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEdtXWEem1l5O0R0OWkQ" target="_2kuFd9XWEem1l5O0R0OWkQ" source="_2kuEn9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEd9XWEem1l5O0R0OWkQ" target="_2kuFTtXWEem1l5O0R0OWkQ" source="_2kuFNtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEeNXWEem1l5O0R0OWkQ" target="_2kuFmNXWEem1l5O0R0OWkQ" source="_2kuEoNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEedXWEem1l5O0R0OWkQ" target="_2kuFhtXWEem1l5O0R0OWkQ" source="_2kuFTtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEetXWEem1l5O0R0OWkQ" target="_2kuFsNXWEem1l5O0R0OWkQ" source="_2kuEoNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEe9XWEem1l5O0R0OWkQ" target="_2kuFntXWEem1l5O0R0OWkQ" source="_2kuFhtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEfNXWEem1l5O0R0OWkQ" target="_2kuFyNXWEem1l5O0R0OWkQ" source="_2kuEoNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEfdXWEem1l5O0R0OWkQ" target="_2kuFttXWEem1l5O0R0OWkQ" source="_2kuFntXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEftXWEem1l5O0R0OWkQ" target="_2kuF4NXWEem1l5O0R0OWkQ" source="_2kuEoNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEf9XWEem1l5O0R0OWkQ" target="_2kuFztXWEem1l5O0R0OWkQ" source="_2kuFttXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEgNXWEem1l5O0R0OWkQ" target="_2kuF-NXWEem1l5O0R0OWkQ" source="_2kuEoNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEgdXWEem1l5O0R0OWkQ" target="_2kuF5tXWEem1l5O0R0OWkQ" source="_2kuFztXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEgtXWEem1l5O0R0OWkQ" target="_2kuF_tXWEem1l5O0R0OWkQ" source="_2kuF5tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuEg9XWEem1l5O0R0OWkQ" name="AcceptStatement@2057a1d8" outgoing="_2kuEZtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEhNXWEem1l5O0R0OWkQ" target="_2kuEhdXWEem1l5O0R0OWkQ" source="_2kuEh9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2kuEhdXWEem1l5O0R0OWkQ" name="Accept(Start)" incoming="_2kuEhNXWEem1l5O0R0OWkQ">
                <trigger xmi:id="_2kuEhtXWEem1l5O0R0OWkQ" event="_2kuqLNXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2kuEh9XWEem1l5O0R0OWkQ" name="Initial(Accept(Start))" outgoing="_2kuEhNXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuEiNXWEem1l5O0R0OWkQ" name="ExpressionStatement@55f704f2" incoming="_2kuEZtXWEem1l5O0R0OWkQ" outgoing="_2kuEZ9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEidXWEem1l5O0R0OWkQ" target="_2kuEntXWEem1l5O0R0OWkQ" source="_2kuEjtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEitXWEem1l5O0R0OWkQ" target="_2kuEn9XWEem1l5O0R0OWkQ" source="_2kuEkdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEi9XWEem1l5O0R0OWkQ" target="_2kuEoNXWEem1l5O0R0OWkQ" source="_2kuElNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEjNXWEem1l5O0R0OWkQ" target="_2kuEl9XWEem1l5O0R0OWkQ" source="_2kuEm9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2kuEjdXWEem1l5O0R0OWkQ" name="Call(test)" operation="_2kuqHdXWEem1l5O0R0OWkQ">
                <result xmi:id="_2kuEjtXWEem1l5O0R0OWkQ" name="Call(test).result(employee)" outgoing="_2kuEidXWEem1l5O0R0OWkQ" type="_2ktbZdXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEj9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEkNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_2kuEkdXWEem1l5O0R0OWkQ" name="Call(test).result(monitor)" outgoing="_2kuEitXWEem1l5O0R0OWkQ" type="_2ks1CtXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEktXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEk9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_2kuElNXWEem1l5O0R0OWkQ" name="Call(test).result(issue)" outgoing="_2kuEi9XWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEldXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEltXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <target xmi:id="_2kuEl9XWEem1l5O0R0OWkQ" name="Call(test).target" incoming="_2kuEjNXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEmNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEmdXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuEmtXWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_2kuEm9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuEjNXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEnNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEndXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2kuEntXWEem1l5O0R0OWkQ" name="Fork(employee)@2de17c4b" incoming="_2kuEidXWEem1l5O0R0OWkQ" outgoing="_2kuEaNXWEem1l5O0R0OWkQ _2kuEatXWEem1l5O0R0OWkQ _2kuEbNXWEem1l5O0R0OWkQ _2kuEbtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2kuEn9XWEem1l5O0R0OWkQ" name="Fork(monitor)@52d6c251" incoming="_2kuEitXWEem1l5O0R0OWkQ" outgoing="_2kuEcNXWEem1l5O0R0OWkQ _2kuEctXWEem1l5O0R0OWkQ _2kuEdNXWEem1l5O0R0OWkQ _2kuEdtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2kuEoNXWEem1l5O0R0OWkQ" name="Fork(issue)@7292a333" incoming="_2kuEi9XWEem1l5O0R0OWkQ" outgoing="_2kuEeNXWEem1l5O0R0OWkQ _2kuEetXWEem1l5O0R0OWkQ _2kuEfNXWEem1l5O0R0OWkQ _2kuEftXWEem1l5O0R0OWkQ _2kuEgNXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuEodXWEem1l5O0R0OWkQ" name="AcceptStatement@295b4a47" incoming="_2kuEZ9XWEem1l5O0R0OWkQ" outgoing="_2kuEadXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEotXWEem1l5O0R0OWkQ" target="_2kuEo9XWEem1l5O0R0OWkQ" source="_2kuEpdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:AcceptEventAction" xmi:id="_2kuEo9XWEem1l5O0R0OWkQ" name="Accept(Continue)" incoming="_2kuEotXWEem1l5O0R0OWkQ">
                <trigger xmi:id="_2kuEpNXWEem1l5O0R0OWkQ" event="_2kuqLdXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2kuEpdXWEem1l5O0R0OWkQ" name="Initial(Accept(Continue))" outgoing="_2kuEotXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuEptXWEem1l5O0R0OWkQ" name="ExpressionStatement@4f78ec9d" incoming="_2kuEadXWEem1l5O0R0OWkQ" outgoing="_2kuEa9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEp9XWEem1l5O0R0OWkQ" target="_2kuEq9XWEem1l5O0R0OWkQ" source="_2kuEs9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEqNXWEem1l5O0R0OWkQ" target="_2kuErtXWEem1l5O0R0OWkQ" source="_2kuEu9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEqdXWEem1l5O0R0OWkQ" target="_2kuEqtXWEem1l5O0R0OWkQ" source="_2kuEsdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuEqtXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2kuEqdXWEem1l5O0R0OWkQ" behavior="_2kur0tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kuEq9XWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2kuEp9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuErNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuErdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuErtXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2kuEqNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEr9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEsNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuEsdXWEem1l5O0R0OWkQ" name="Tuple@7ec9c2c7" outgoing="_2kuEqdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuEstXWEem1l5O0R0OWkQ" name="Value(&quot;employee instanceof Employee&quot;)">
                  <result xmi:id="_2kuEs9XWEem1l5O0R0OWkQ" name="Value(&quot;employee instanceof Employee&quot;).result" outgoing="_2kuEp9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEtNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEtdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kuEttXWEem1l5O0R0OWkQ" value="employee instanceof Employee">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kuEt9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Employee)" classifier="_2ktbZdXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2kuEuNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Employee).object" incoming="_2kuEaNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEudXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEutXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuEu9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Employee).result" outgoing="_2kuEqNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEvNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEvdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuEvtXWEem1l5O0R0OWkQ" name="ExpressionStatement@5e654a36" incoming="_2kuEa9XWEem1l5O0R0OWkQ" outgoing="_2kuEbdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEv9XWEem1l5O0R0OWkQ" target="_2kuEw9XWEem1l5O0R0OWkQ" source="_2kuEy9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuEwNXWEem1l5O0R0OWkQ" target="_2kuExtXWEem1l5O0R0OWkQ" source="_2kuE09XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuEwdXWEem1l5O0R0OWkQ" target="_2kuEwtXWEem1l5O0R0OWkQ" source="_2kuEydXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuEwtXWEem1l5O0R0OWkQ" name="Call(AssertFalse)" incoming="_2kuEwdXWEem1l5O0R0OWkQ" behavior="_2kvQZ9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kuEw9XWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(label)" incoming="_2kuEv9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuExNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuExdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuExtXWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(condition)" incoming="_2kuEwNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEx9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEyNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuEydXWEem1l5O0R0OWkQ" name="Tuple@5b794392" outgoing="_2kuEwdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuEytXWEem1l5O0R0OWkQ" name="Value(&quot;employee hastype Staff&quot;)">
                  <result xmi:id="_2kuEy9XWEem1l5O0R0OWkQ" name="Value(&quot;employee hastype Staff&quot;).result" outgoing="_2kuEv9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuEzNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuEzdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kuEztXWEem1l5O0R0OWkQ" value="employee hastype Staff">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kuEz9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Staff)" classifier="_2ktcjNXWEem1l5O0R0OWkQ" isDirect="true">
                  <object xmi:id="_2kuE0NXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Staff).object" incoming="_2kuEatXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuE0dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuE0tXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuE09XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Staff).result" outgoing="_2kuEwNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuE1NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuE1dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuE1tXWEem1l5O0R0OWkQ" name="ExpressionStatement@dd40e33" incoming="_2kuEbdXWEem1l5O0R0OWkQ" outgoing="_2kuEb9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuE19XWEem1l5O0R0OWkQ" target="_2kuE29XWEem1l5O0R0OWkQ" source="_2kuE49XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuE2NXWEem1l5O0R0OWkQ" target="_2kuE3tXWEem1l5O0R0OWkQ" source="_2kuE69XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuE2dXWEem1l5O0R0OWkQ" target="_2kuE2tXWEem1l5O0R0OWkQ" source="_2kuE4dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuE2tXWEem1l5O0R0OWkQ" name="Call(AssertFalse)" incoming="_2kuE2dXWEem1l5O0R0OWkQ" behavior="_2kvQZ9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kuE29XWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(label)" incoming="_2kuE19XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuE3NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuE3dXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuE3tXWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(condition)" incoming="_2kuE2NXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuE39XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuE4NXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuE4dXWEem1l5O0R0OWkQ" name="Tuple@44f79f8" outgoing="_2kuE2dXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuE4tXWEem1l5O0R0OWkQ" name="Value(&quot;employee hastype Administrator&quot;)">
                  <result xmi:id="_2kuE49XWEem1l5O0R0OWkQ" name="Value(&quot;employee hastype Administrator&quot;).result" outgoing="_2kuE19XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuE5NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuE5dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kuE5tXWEem1l5O0R0OWkQ" value="employee hastype Administrator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kuE59XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Administrator)" classifier="_2ktb9dXWEem1l5O0R0OWkQ" isDirect="true">
                  <object xmi:id="_2kuE6NXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Administrator).object" incoming="_2kuEbNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuE6dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuE6tXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuE69XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Administrator).result" outgoing="_2kuE2NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuE7NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuE7dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuE7tXWEem1l5O0R0OWkQ" name="ExpressionStatement@3b7fd6de" incoming="_2kuEb9XWEem1l5O0R0OWkQ" outgoing="_2kuEcdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuE79XWEem1l5O0R0OWkQ" target="_2kuE89XWEem1l5O0R0OWkQ" source="_2kuE-9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuE8NXWEem1l5O0R0OWkQ" target="_2kuE9tXWEem1l5O0R0OWkQ" source="_2kuFA9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuE8dXWEem1l5O0R0OWkQ" target="_2kuE8tXWEem1l5O0R0OWkQ" source="_2kuE-dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuE8tXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2kuE8dXWEem1l5O0R0OWkQ" behavior="_2kur0tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kuE89XWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2kuE79XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuE9NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuE9dXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuE9tXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2kuE8NXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuE99XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuE-NXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuE-dXWEem1l5O0R0OWkQ" name="Tuple@3062d211" outgoing="_2kuE8dXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuE-tXWEem1l5O0R0OWkQ" name="Value(&quot;employee hastype PartTime&quot;)">
                  <result xmi:id="_2kuE-9XWEem1l5O0R0OWkQ" name="Value(&quot;employee hastype PartTime&quot;).result" outgoing="_2kuE79XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuE_NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuE_dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kuE_tXWEem1l5O0R0OWkQ" value="employee hastype PartTime">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kuE_9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(PartTime)" classifier="_2ktdI9XWEem1l5O0R0OWkQ" isDirect="true">
                  <object xmi:id="_2kuFANXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(PartTime).object" incoming="_2kuEbtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFAdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFAtXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuFA9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(PartTime).result" outgoing="_2kuE8NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFBNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFBdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFBtXWEem1l5O0R0OWkQ" name="ExpressionStatement@78c84982" incoming="_2kuEcdXWEem1l5O0R0OWkQ" outgoing="_2kuEc9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFB9XWEem1l5O0R0OWkQ" target="_2kuFC9XWEem1l5O0R0OWkQ" source="_2kuFE9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFCNXWEem1l5O0R0OWkQ" target="_2kuFDtXWEem1l5O0R0OWkQ" source="_2kuFG9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuFCdXWEem1l5O0R0OWkQ" target="_2kuFCtXWEem1l5O0R0OWkQ" source="_2kuFEdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuFCtXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2kuFCdXWEem1l5O0R0OWkQ" behavior="_2kur0tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kuFC9XWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2kuFB9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFDNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFDdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuFDtXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2kuFCNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFD9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFENXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFEdXWEem1l5O0R0OWkQ" name="Tuple@4571edbf" outgoing="_2kuFCdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuFEtXWEem1l5O0R0OWkQ" name="Value(&quot;monitor instanceof Monitor&quot;)">
                  <result xmi:id="_2kuFE9XWEem1l5O0R0OWkQ" name="Value(&quot;monitor instanceof Monitor&quot;).result" outgoing="_2kuFB9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFFNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFFdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kuFFtXWEem1l5O0R0OWkQ" value="monitor instanceof Monitor">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kuFF9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Monitor)" classifier="_2ks1CtXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2kuFGNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Monitor).object" incoming="_2kuEcNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFGdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFGtXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuFG9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Monitor).result" outgoing="_2kuFCNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFHNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFHdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFHtXWEem1l5O0R0OWkQ" name="ExpressionStatement@242c0c26" incoming="_2kuEc9XWEem1l5O0R0OWkQ" outgoing="_2kuEddXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFH9XWEem1l5O0R0OWkQ" target="_2kuFI9XWEem1l5O0R0OWkQ" source="_2kuFK9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFINXWEem1l5O0R0OWkQ" target="_2kuFJtXWEem1l5O0R0OWkQ" source="_2kuFM9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuFIdXWEem1l5O0R0OWkQ" target="_2kuFItXWEem1l5O0R0OWkQ" source="_2kuFKdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuFItXWEem1l5O0R0OWkQ" name="Call(AssertFalse)" incoming="_2kuFIdXWEem1l5O0R0OWkQ" behavior="_2kvQZ9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kuFI9XWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(label)" incoming="_2kuFH9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFJNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFJdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuFJtXWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(condition)" incoming="_2kuFINXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFJ9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFKNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFKdXWEem1l5O0R0OWkQ" name="Tuple@2a1c6c38" outgoing="_2kuFIdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuFKtXWEem1l5O0R0OWkQ" name="Value(&quot;monitor hastype InActiveMonitor&quot;)">
                  <result xmi:id="_2kuFK9XWEem1l5O0R0OWkQ" name="Value(&quot;monitor hastype InActiveMonitor&quot;).result" outgoing="_2kuFH9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFLNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFLdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kuFLtXWEem1l5O0R0OWkQ" value="monitor hastype InActiveMonitor">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kuFL9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(InActiveMonitor)" classifier="_2ks1mtXWEem1l5O0R0OWkQ" isDirect="true">
                  <object xmi:id="_2kuFMNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(InActiveMonitor).object" incoming="_2kuEctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFMdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFMtXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuFM9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(InActiveMonitor).result" outgoing="_2kuFINXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFNNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFNdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFNtXWEem1l5O0R0OWkQ" name="ExpressionStatement@78b56307" incoming="_2kuEddXWEem1l5O0R0OWkQ" outgoing="_2kuEd9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFN9XWEem1l5O0R0OWkQ" target="_2kuFO9XWEem1l5O0R0OWkQ" source="_2kuFQ9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFONXWEem1l5O0R0OWkQ" target="_2kuFPtXWEem1l5O0R0OWkQ" source="_2kuFS9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuFOdXWEem1l5O0R0OWkQ" target="_2kuFOtXWEem1l5O0R0OWkQ" source="_2kuFQdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuFOtXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2kuFOdXWEem1l5O0R0OWkQ" behavior="_2kur0tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kuFO9XWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2kuFN9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFPNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFPdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuFPtXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2kuFONXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFP9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFQNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFQdXWEem1l5O0R0OWkQ" name="Tuple@52988c4f" outgoing="_2kuFOdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuFQtXWEem1l5O0R0OWkQ" name="Value(&quot;monitor hastype ActiveMonitor&quot;)">
                  <result xmi:id="_2kuFQ9XWEem1l5O0R0OWkQ" name="Value(&quot;monitor hastype ActiveMonitor&quot;).result" outgoing="_2kuFN9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFRNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFRdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kuFRtXWEem1l5O0R0OWkQ" value="monitor hastype ActiveMonitor">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kuFR9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(ActiveMonitor)" classifier="_2ks2MdXWEem1l5O0R0OWkQ" isDirect="true">
                  <object xmi:id="_2kuFSNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(ActiveMonitor).object" incoming="_2kuEdNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFSdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFStXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuFS9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(ActiveMonitor).result" outgoing="_2kuFONXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFTNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFTdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFTtXWEem1l5O0R0OWkQ" name="ExpressionStatement@379699c1" incoming="_2kuEd9XWEem1l5O0R0OWkQ" outgoing="_2kuEedXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFT9XWEem1l5O0R0OWkQ" target="_2kuFVNXWEem1l5O0R0OWkQ" source="_2kuFYdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFUNXWEem1l5O0R0OWkQ" target="_2kuFV9XWEem1l5O0R0OWkQ" source="_2kuFfdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFUdXWEem1l5O0R0OWkQ" target="_2kuFWtXWEem1l5O0R0OWkQ" source="_2kuFgtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuFUtXWEem1l5O0R0OWkQ" target="_2kuFU9XWEem1l5O0R0OWkQ" source="_2kuFXdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuFU9XWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_2kuFUtXWEem1l5O0R0OWkQ" behavior="_2kvQzNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kuFVNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_2kuFT9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFVdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFVtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuFV9XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_2kuFUNXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFWNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFWdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuFWtXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_2kuFUdXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFW9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFXNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFXdXWEem1l5O0R0OWkQ" name="Tuple@3e592eea" outgoing="_2kuFUtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFXtXWEem1l5O0R0OWkQ" target="_2kuFgNXWEem1l5O0R0OWkQ" source="_2kuFeNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFX9XWEem1l5O0R0OWkQ" target="_2kuFetXWEem1l5O0R0OWkQ" source="_2kuFgNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuFYNXWEem1l5O0R0OWkQ" name="Value(&quot;monitor.n&quot;)">
                  <result xmi:id="_2kuFYdXWEem1l5O0R0OWkQ" name="Value(&quot;monitor.n&quot;).result" outgoing="_2kuFT9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFYtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFY9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kuFZNXWEem1l5O0R0OWkQ" value="monitor.n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2kuFZdXWEem1l5O0R0OWkQ" name="CastExpression@d16be1f" mode="parallel" outputElement="_2kuFeNXWEem1l5O0R0OWkQ" inputElement="_2kuFd9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFZtXWEem1l5O0R0OWkQ" target="_2kuFb9XWEem1l5O0R0OWkQ" source="_2kuFddXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFZ9XWEem1l5O0R0OWkQ" target="_2kuFdtXWEem1l5O0R0OWkQ" source="_2kuFddXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFaNXWEem1l5O0R0OWkQ" target="_2kuFdtXWEem1l5O0R0OWkQ" source="_2kuFctXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFadXWEem1l5O0R0OWkQ" target="_2kuFbdXWEem1l5O0R0OWkQ" source="_2kuFdtXWEem1l5O0R0OWkQ">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kuFatXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFa9XWEem1l5O0R0OWkQ" target="_2kuFddXWEem1l5O0R0OWkQ" source="_2kuFd9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFbNXWEem1l5O0R0OWkQ" target="_2kuFeNXWEem1l5O0R0OWkQ" source="_2kuFbdXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_2kuFbdXWEem1l5O0R0OWkQ" name="Merge(CastExpression@d16be1f.operand)" incoming="_2kuFadXWEem1l5O0R0OWkQ" outgoing="_2kuFbNXWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kuFbtXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(ActiveMonitor)" classifier="_2ks2MdXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2kuFb9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(ActiveMonitor).object" incoming="_2kuFZtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFcNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFcdXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2kuFctXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(ActiveMonitor).result" outgoing="_2kuFaNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFc9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFdNXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2kuFddXWEem1l5O0R0OWkQ" name="Fork(ReadIsClassifiedObject(ActiveMonitor).object)" incoming="_2kuFa9XWEem1l5O0R0OWkQ" outgoing="_2kuFZtXWEem1l5O0R0OWkQ _2kuFZ9XWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_2kuFdtXWEem1l5O0R0OWkQ" name="Decision(ReadIsClassifiedObject(ActiveMonitor).result)" incoming="_2kuFZ9XWEem1l5O0R0OWkQ _2kuFaNXWEem1l5O0R0OWkQ" outgoing="_2kuFadXWEem1l5O0R0OWkQ" decisionInputFlow="_2kuFaNXWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2kuFd9XWEem1l5O0R0OWkQ" name="CastExpression@d16be1f.inputElement" incoming="_2kuEdtXWEem1l5O0R0OWkQ" outgoing="_2kuFa9XWEem1l5O0R0OWkQ" type="_2ks1CtXWEem1l5O0R0OWkQ" regionAsInput="_2kuFZdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2kuFeNXWEem1l5O0R0OWkQ" name="CastExpression@d16be1f.outputElement" incoming="_2kuFbNXWEem1l5O0R0OWkQ" outgoing="_2kuFXtXWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" regionAsOutput="_2kuFZdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kuFedXWEem1l5O0R0OWkQ" name="Read(n)" structuralFeature="_2ks2NtXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2kuFetXWEem1l5O0R0OWkQ" name="Read(n).object" incoming="_2kuFX9XWEem1l5O0R0OWkQ" type="_2ks2MdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFe9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFfNXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuFfdXWEem1l5O0R0OWkQ" name="Read(n).result" outgoing="_2kuFUNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFftXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFf9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2kuFgNXWEem1l5O0R0OWkQ" name="Fork(CastExpression@d16be1f.outputElement)" incoming="_2kuFXtXWEem1l5O0R0OWkQ" outgoing="_2kuFX9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuFgdXWEem1l5O0R0OWkQ" name="Value(1)">
                  <result xmi:id="_2kuFgtXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2kuFUdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFg9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFhNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_2kuFhdXWEem1l5O0R0OWkQ" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFhtXWEem1l5O0R0OWkQ" name="ExpressionStatement@2b52187b" incoming="_2kuEedXWEem1l5O0R0OWkQ" outgoing="_2kuEe9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFh9XWEem1l5O0R0OWkQ" target="_2kuFi9XWEem1l5O0R0OWkQ" source="_2kuFk9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFiNXWEem1l5O0R0OWkQ" target="_2kuFjtXWEem1l5O0R0OWkQ" source="_2kuFm9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuFidXWEem1l5O0R0OWkQ" target="_2kuFitXWEem1l5O0R0OWkQ" source="_2kuFkdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuFitXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2kuFidXWEem1l5O0R0OWkQ" behavior="_2kur0tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kuFi9XWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2kuFh9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFjNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFjdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuFjtXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2kuFiNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFj9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFkNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFkdXWEem1l5O0R0OWkQ" name="Tuple@6b3937cc" outgoing="_2kuFidXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuFktXWEem1l5O0R0OWkQ" name="Value(&quot;issue instanceof Issue&quot;)">
                  <result xmi:id="_2kuFk9XWEem1l5O0R0OWkQ" name="Value(&quot;issue instanceof Issue&quot;).result" outgoing="_2kuFh9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFlNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFldXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kuFltXWEem1l5O0R0OWkQ" value="issue instanceof Issue">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kuFl9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Issue)" classifier="_2ktdutXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2kuFmNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Issue).object" incoming="_2kuEeNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFmdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFmtXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuFm9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Issue).result" outgoing="_2kuFiNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFnNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFndXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFntXWEem1l5O0R0OWkQ" name="ExpressionStatement@3cee49b1" incoming="_2kuEe9XWEem1l5O0R0OWkQ" outgoing="_2kuEfdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFn9XWEem1l5O0R0OWkQ" target="_2kuFo9XWEem1l5O0R0OWkQ" source="_2kuFq9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFoNXWEem1l5O0R0OWkQ" target="_2kuFptXWEem1l5O0R0OWkQ" source="_2kuFs9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuFodXWEem1l5O0R0OWkQ" target="_2kuFotXWEem1l5O0R0OWkQ" source="_2kuFqdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuFotXWEem1l5O0R0OWkQ" name="Call(AssertFalse)" incoming="_2kuFodXWEem1l5O0R0OWkQ" behavior="_2kvQZ9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kuFo9XWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(label)" incoming="_2kuFn9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFpNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFpdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuFptXWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(condition)" incoming="_2kuFoNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFp9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFqNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFqdXWEem1l5O0R0OWkQ" name="Tuple@6e69f9c" outgoing="_2kuFodXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuFqtXWEem1l5O0R0OWkQ" name="Value(&quot;issue hastype Pending&quot;)">
                  <result xmi:id="_2kuFq9XWEem1l5O0R0OWkQ" name="Value(&quot;issue hastype Pending&quot;).result" outgoing="_2kuFn9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFrNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFrdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kuFrtXWEem1l5O0R0OWkQ" value="issue hastype Pending">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kuFr9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Pending)" classifier="_2kteStXWEem1l5O0R0OWkQ" isDirect="true">
                  <object xmi:id="_2kuFsNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Pending).object" incoming="_2kuEetXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFsdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFstXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuFs9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Pending).result" outgoing="_2kuFoNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFtNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFtdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFttXWEem1l5O0R0OWkQ" name="ExpressionStatement@7e670cb8" incoming="_2kuEfdXWEem1l5O0R0OWkQ" outgoing="_2kuEf9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFt9XWEem1l5O0R0OWkQ" target="_2kuFu9XWEem1l5O0R0OWkQ" source="_2kuFw9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFuNXWEem1l5O0R0OWkQ" target="_2kuFvtXWEem1l5O0R0OWkQ" source="_2kuFy9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuFudXWEem1l5O0R0OWkQ" target="_2kuFutXWEem1l5O0R0OWkQ" source="_2kuFwdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuFutXWEem1l5O0R0OWkQ" name="Call(AssertFalse)" incoming="_2kuFudXWEem1l5O0R0OWkQ" behavior="_2kvQZ9XWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kuFu9XWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(label)" incoming="_2kuFt9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFvNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFvdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuFvtXWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(condition)" incoming="_2kuFuNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFv9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFwNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFwdXWEem1l5O0R0OWkQ" name="Tuple@6c628491" outgoing="_2kuFudXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuFwtXWEem1l5O0R0OWkQ" name="Value(&quot;issue hastype Overdue&quot;)">
                  <result xmi:id="_2kuFw9XWEem1l5O0R0OWkQ" name="Value(&quot;issue hastype Overdue&quot;).result" outgoing="_2kuFt9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFxNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFxdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kuFxtXWEem1l5O0R0OWkQ" value="issue hastype Overdue">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kuFx9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Overdue)" classifier="_2kuDL9XWEem1l5O0R0OWkQ" isDirect="true">
                  <object xmi:id="_2kuFyNXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Overdue).object" incoming="_2kuEfNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFydXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFytXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuFy9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Overdue).result" outgoing="_2kuFuNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuFzNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuFzdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuFztXWEem1l5O0R0OWkQ" name="ExpressionStatement@3e5c98c8" incoming="_2kuEf9XWEem1l5O0R0OWkQ" outgoing="_2kuEgdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuFz9XWEem1l5O0R0OWkQ" target="_2kuF09XWEem1l5O0R0OWkQ" source="_2kuF29XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuF0NXWEem1l5O0R0OWkQ" target="_2kuF1tXWEem1l5O0R0OWkQ" source="_2kuF49XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuF0dXWEem1l5O0R0OWkQ" target="_2kuF0tXWEem1l5O0R0OWkQ" source="_2kuF2dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuF0tXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2kuF0dXWEem1l5O0R0OWkQ" behavior="_2kur0tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kuF09XWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2kuFz9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuF1NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuF1dXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuF1tXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2kuF0NXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuF19XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuF2NXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuF2dXWEem1l5O0R0OWkQ" name="Tuple@16e0c8b5" outgoing="_2kuF0dXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuF2tXWEem1l5O0R0OWkQ" name="Value(&quot;issue hastype Resolved&quot;)">
                  <result xmi:id="_2kuF29XWEem1l5O0R0OWkQ" name="Value(&quot;issue hastype Resolved&quot;).result" outgoing="_2kuFz9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuF3NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuF3dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kuF3tXWEem1l5O0R0OWkQ" value="issue hastype Resolved">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kuF39XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Resolved)" classifier="_2kuDxtXWEem1l5O0R0OWkQ" isDirect="true">
                  <object xmi:id="_2kuF4NXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Resolved).object" incoming="_2kuEftXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuF4dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuF4tXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuF49XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Resolved).result" outgoing="_2kuF0NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuF5NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuF5dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuF5tXWEem1l5O0R0OWkQ" name="ExpressionStatement@49fbd92a" incoming="_2kuEgdXWEem1l5O0R0OWkQ" outgoing="_2kuEgtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuF59XWEem1l5O0R0OWkQ" target="_2kuF69XWEem1l5O0R0OWkQ" source="_2kuF89XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuF6NXWEem1l5O0R0OWkQ" target="_2kuF7tXWEem1l5O0R0OWkQ" source="_2kuF-9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuF6dXWEem1l5O0R0OWkQ" target="_2kuF6tXWEem1l5O0R0OWkQ" source="_2kuF8dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuF6tXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2kuF6dXWEem1l5O0R0OWkQ" behavior="_2kur0tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kuF69XWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2kuF59XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuF7NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuF7dXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kuF7tXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2kuF6NXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuF79XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuF8NXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuF8dXWEem1l5O0R0OWkQ" name="Tuple@568e0e3" outgoing="_2kuF6dXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuF8tXWEem1l5O0R0OWkQ" name="Value(&quot;issue hastype InProcess&quot;)">
                  <result xmi:id="_2kuF89XWEem1l5O0R0OWkQ" name="Value(&quot;issue hastype InProcess&quot;).result" outgoing="_2kuF59XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuF9NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuF9dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kuF9tXWEem1l5O0R0OWkQ" value="issue hastype InProcess">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kuF99XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(InProcess)" classifier="_2kuCmNXWEem1l5O0R0OWkQ" isDirect="true">
                  <object xmi:id="_2kuF-NXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(InProcess).object" incoming="_2kuEgNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuF-dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuF-tXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuF-9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(InProcess).result" outgoing="_2kuF6NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuF_NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuF_dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuF_tXWEem1l5O0R0OWkQ" name="ExpressionStatement@28c3284b" incoming="_2kuEgtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuF_9XWEem1l5O0R0OWkQ" target="_2kuGA9XWEem1l5O0R0OWkQ" source="_2kuGDtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGANXWEem1l5O0R0OWkQ" target="_2kuGEdXWEem1l5O0R0OWkQ" source="_2kuGB9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGAdXWEem1l5O0R0OWkQ" target="_2kuGC9XWEem1l5O0R0OWkQ" source="_2kuGEdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_2kuGAtXWEem1l5O0R0OWkQ" name="Call(done)" operation="_2kurPtXWEem1l5O0R0OWkQ">
                <target xmi:id="_2kuGA9XWEem1l5O0R0OWkQ" name="Call(done).target" incoming="_2kuF_9XWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGBNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGBdXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuGBtXWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_2kuGB9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuGANXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGCNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGCdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kuGCtXWEem1l5O0R0OWkQ" name="Read(outer)" structuralFeature="_2kuEYdXWEem1l5O0R0OWkQ">
                <object xmi:id="_2kuGC9XWEem1l5O0R0OWkQ" name="Read(outer).object" incoming="_2kuGAdXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGDNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGDdXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2kuGDtXWEem1l5O0R0OWkQ" name="Read(outer).result" outgoing="_2kuF_9XWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGD9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGENXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2kuGEdXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kuGANXWEem1l5O0R0OWkQ" outgoing="_2kuGAdXWEem1l5O0R0OWkQ"/>
            </node>
          </structuredNode>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuGEtXWEem1l5O0R0OWkQ" name="TestRunner$method$1" visibility="private" specification="_2kuqFtXWEem1l5O0R0OWkQ" node="_2kuGHNXWEem1l5O0R0OWkQ _2kuGHdXWEem1l5O0R0OWkQ _2kuGHtXWEem1l5O0R0OWkQ _2kuGH9XWEem1l5O0R0OWkQ" group="_2kuGH9XWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kuGE9XWEem1l5O0R0OWkQ" name="outer" type="_2kuqLtXWEem1l5O0R0OWkQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGFNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGFdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2kuGFtXWEem1l5O0R0OWkQ" name="" type="_2kuEXdXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGF9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGGNXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGGdXWEem1l5O0R0OWkQ" target="_2kuGHdXWEem1l5O0R0OWkQ" source="_2kuGHNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGGtXWEem1l5O0R0OWkQ" target="_2kuGPdXWEem1l5O0R0OWkQ" source="_2kuGHdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGG9XWEem1l5O0R0OWkQ" target="_2kuGHtXWEem1l5O0R0OWkQ" source="_2kuGUtXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2kuGH9XWEem1l5O0R0OWkQ" name="Body(TestRunner$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGINXWEem1l5O0R0OWkQ" target="_2kuGUtXWEem1l5O0R0OWkQ" source="_2kuGT9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGIdXWEem1l5O0R0OWkQ" target="_2kuGVNXWEem1l5O0R0OWkQ" source="_2kuGUtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuGItXWEem1l5O0R0OWkQ" target="_2kuGK9XWEem1l5O0R0OWkQ" source="_2kuGU9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGI9XWEem1l5O0R0OWkQ" target="_2kuGWNXWEem1l5O0R0OWkQ" source="_2kuGUtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGJNXWEem1l5O0R0OWkQ" target="_2kupIdXWEem1l5O0R0OWkQ" source="_2kuGW9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGJdXWEem1l5O0R0OWkQ" target="_2kupLdXWEem1l5O0R0OWkQ" source="_2kupJNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGJtXWEem1l5O0R0OWkQ" target="_2kupM9XWEem1l5O0R0OWkQ" source="_2kupKNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuGJ9XWEem1l5O0R0OWkQ" target="_2kupN9XWEem1l5O0R0OWkQ" source="_2kupNtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGKNXWEem1l5O0R0OWkQ" target="_2kupN9XWEem1l5O0R0OWkQ" source="_2kupMNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuGKdXWEem1l5O0R0OWkQ" target="_2kuGU9XWEem1l5O0R0OWkQ" source="_2kupN9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kuGKtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuGK9XWEem1l5O0R0OWkQ" name="Body" incoming="_2kuGItXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuGLNXWEem1l5O0R0OWkQ" name="ExpressionStatement@5b0a5db8">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGLdXWEem1l5O0R0OWkQ" target="_2kuGN9XWEem1l5O0R0OWkQ" source="_2kuGM9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGLtXWEem1l5O0R0OWkQ" target="_2kuGQNXWEem1l5O0R0OWkQ" source="_2kuGPdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGL9XWEem1l5O0R0OWkQ" target="_2kuGRNXWEem1l5O0R0OWkQ" source="_2kuGOtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2kuGMNXWEem1l5O0R0OWkQ" target="_2kuGMdXWEem1l5O0R0OWkQ" source="_2kuGTdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuGMdXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@19ea6c34)" incoming="_2kuGMNXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuGMtXWEem1l5O0R0OWkQ" name="ReadSelf">
                    <result xmi:id="_2kuGM9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuGLdXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGNNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGNdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2kuGNtXWEem1l5O0R0OWkQ" name="Clear(outer)" structuralFeature="_2kuEYdXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2kuGN9XWEem1l5O0R0OWkQ" name="Clear(outer).object" incoming="_2kuGLdXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGONXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGOdXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kuGOtXWEem1l5O0R0OWkQ" name="Clear(outer).result" outgoing="_2kuGL9XWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGO9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGPNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2kuGPdXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@19ea6c34)" incoming="_2kuGGtXWEem1l5O0R0OWkQ" outgoing="_2kuGLtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuGPtXWEem1l5O0R0OWkQ" name="WriteAll(TestRunner::outer)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuGP9XWEem1l5O0R0OWkQ" target="_2kuGStXWEem1l5O0R0OWkQ" source="_2kuGQNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2kuGQNXWEem1l5O0R0OWkQ" name="WriteAll(TestRunner::outer).input(TestRunner::outer)" incoming="_2kuGLtXWEem1l5O0R0OWkQ" outgoing="_2kuGP9XWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGQdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGQtXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2kuGQ9XWEem1l5O0R0OWkQ" name="Write(outer)" structuralFeature="_2kuEYdXWEem1l5O0R0OWkQ" isReplaceAll="true">
                    <object xmi:id="_2kuGRNXWEem1l5O0R0OWkQ" name="Write(outer).object" incoming="_2kuGL9XWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGRdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGRtXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2kuGR9XWEem1l5O0R0OWkQ" name="Write(outer).result" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGSNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGSdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2kuGStXWEem1l5O0R0OWkQ" name="Write(outer).value" incoming="_2kuGP9XWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGS9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGTNXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuGTdXWEem1l5O0R0OWkQ" name="RightHandSide@63b33395" outgoing="_2kuGMNXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuGTtXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kuGT9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuGINXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGUNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGUdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kuGUtXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kuGINXWEem1l5O0R0OWkQ" outgoing="_2kuGG9XWEem1l5O0R0OWkQ _2kuGIdXWEem1l5O0R0OWkQ _2kuGI9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2kuGU9XWEem1l5O0R0OWkQ" name="Call(TestRunner$initialization$1)" incoming="_2kuGKdXWEem1l5O0R0OWkQ" outgoing="_2kuGItXWEem1l5O0R0OWkQ" operation="_2kuqFdXWEem1l5O0R0OWkQ">
              <target xmi:id="_2kuGVNXWEem1l5O0R0OWkQ" name="Call(TestRunner$initialization$1).target" incoming="_2kuGIdXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGVdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGVtXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kuGV9XWEem1l5O0R0OWkQ" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_2kuEXtXWEem1l5O0R0OWkQ">
              <object xmi:id="_2kuGWNXWEem1l5O0R0OWkQ" name="Read(TestRunner$initializationFlag$1).object" incoming="_2kuGI9XWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGWdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGWtXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2kuGW9XWEem1l5O0R0OWkQ" name="Read(TestRunner$initializationFlag$1).result" outgoing="_2kuGJNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuGXNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuGXdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kupINXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2kupIdXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kuGJNXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupItXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupI9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kupJNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kuGJdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupJdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupJtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kupJ9XWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2kupKNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kuGJtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupKdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupKtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2kupK9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kupLNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2kupLdXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kuGJdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupLtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupL9XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kupMNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kuGKNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupMdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupMtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kupM9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kuGJtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupNNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupNdXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kupNtXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kuGJ9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kupN9XWEem1l5O0R0OWkQ" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_2kuGJ9XWEem1l5O0R0OWkQ _2kuGKNXWEem1l5O0R0OWkQ" outgoing="_2kuGKdXWEem1l5O0R0OWkQ" decisionInputFlow="_2kuGKNXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kuGHNXWEem1l5O0R0OWkQ" name="Input(outer)" outgoing="_2kuGGdXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" parameter="_2kuGE9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2kuGHdXWEem1l5O0R0OWkQ" name="Fork(outer)" incoming="_2kuGGdXWEem1l5O0R0OWkQ" outgoing="_2kuGGtXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kuGHtXWEem1l5O0R0OWkQ" name="Return" incoming="_2kuGG9XWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" parameter="_2kuGFtXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kupONXWEem1l5O0R0OWkQ" name="test$method$1" visibility="private" specification="_2kuqHdXWEem1l5O0R0OWkQ" node="_2kupRdXWEem1l5O0R0OWkQ _2kupRtXWEem1l5O0R0OWkQ _2kupR9XWEem1l5O0R0OWkQ _2kupSNXWEem1l5O0R0OWkQ" group="_2kupSNXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kupOdXWEem1l5O0R0OWkQ" name="employee" type="_2ktbZdXWEem1l5O0R0OWkQ" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupOtXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupO9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2kupPNXWEem1l5O0R0OWkQ" name="monitor" type="_2ks1CtXWEem1l5O0R0OWkQ" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupPdXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupPtXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2kupP9XWEem1l5O0R0OWkQ" name="issue" type="_2ktdutXWEem1l5O0R0OWkQ" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupQNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupQdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupQtXWEem1l5O0R0OWkQ" target="_2kupRdXWEem1l5O0R0OWkQ" source="_2kupWdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupQ9XWEem1l5O0R0OWkQ" target="_2kupRtXWEem1l5O0R0OWkQ" source="_2kupXNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupRNXWEem1l5O0R0OWkQ" target="_2kupR9XWEem1l5O0R0OWkQ" source="_2kupX9XWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2kupSNXWEem1l5O0R0OWkQ" name="Body(test$method$1)">
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kupSdXWEem1l5O0R0OWkQ" target="_2kupetXWEem1l5O0R0OWkQ" source="_2kupYtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kupStXWEem1l5O0R0OWkQ" target="_2kupktXWEem1l5O0R0OWkQ" source="_2kupetXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupS9XWEem1l5O0R0OWkQ" target="_2kuprNXWEem1l5O0R0OWkQ" source="_2kupZNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kupTNXWEem1l5O0R0OWkQ" target="_2kupqtXWEem1l5O0R0OWkQ" source="_2kupktXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupTdXWEem1l5O0R0OWkQ" target="_2kupsdXWEem1l5O0R0OWkQ" source="_2kupZNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kupTtXWEem1l5O0R0OWkQ" target="_2kupr9XWEem1l5O0R0OWkQ" source="_2kupqtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupT9XWEem1l5O0R0OWkQ" target="_2kupttXWEem1l5O0R0OWkQ" source="_2kupZNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kupUNXWEem1l5O0R0OWkQ" target="_2kuptNXWEem1l5O0R0OWkQ" source="_2kupr9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupUdXWEem1l5O0R0OWkQ" target="_2kupvdXWEem1l5O0R0OWkQ" source="_2kupfNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupUtXWEem1l5O0R0OWkQ" target="_2kupwNXWEem1l5O0R0OWkQ" source="_2kupfNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kupU9XWEem1l5O0R0OWkQ" target="_2kupudXWEem1l5O0R0OWkQ" source="_2kuptNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupVNXWEem1l5O0R0OWkQ" target="_2kupx9XWEem1l5O0R0OWkQ" source="_2kuplNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kupVdXWEem1l5O0R0OWkQ" target="_2kupxdXWEem1l5O0R0OWkQ" source="_2kupudXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupVtXWEem1l5O0R0OWkQ" target="_2kupWdXWEem1l5O0R0OWkQ" source="_2kupZNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupV9XWEem1l5O0R0OWkQ" target="_2kupXNXWEem1l5O0R0OWkQ" source="_2kupfNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupWNXWEem1l5O0R0OWkQ" target="_2kupX9XWEem1l5O0R0OWkQ" source="_2kuplNXWEem1l5O0R0OWkQ"/>
            <structuredNodeOutput xmi:id="_2kupWdXWEem1l5O0R0OWkQ" name="Output(employee)" incoming="_2kupVtXWEem1l5O0R0OWkQ" outgoing="_2kupQtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupWtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupW9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_2kupXNXWEem1l5O0R0OWkQ" name="Output(monitor)" incoming="_2kupV9XWEem1l5O0R0OWkQ" outgoing="_2kupQ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupXdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupXtXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_2kupX9XWEem1l5O0R0OWkQ" name="Output(issue)" incoming="_2kupWNXWEem1l5O0R0OWkQ" outgoing="_2kupRNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupYNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupYdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kupYtXWEem1l5O0R0OWkQ" name="ExpressionStatement@2796896a" outgoing="_2kupSdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupY9XWEem1l5O0R0OWkQ" target="_2kupZNXWEem1l5O0R0OWkQ" source="_2kupb9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2kupZNXWEem1l5O0R0OWkQ" name="Fork(employee)@14a99c0e" incoming="_2kupY9XWEem1l5O0R0OWkQ" outgoing="_2kupS9XWEem1l5O0R0OWkQ _2kupTdXWEem1l5O0R0OWkQ _2kupT9XWEem1l5O0R0OWkQ _2kupVtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kupZdXWEem1l5O0R0OWkQ" name="RightHandSide@15bfa126">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupZtXWEem1l5O0R0OWkQ" target="_2kupedXWEem1l5O0R0OWkQ" source="_2kupatXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupZ9XWEem1l5O0R0OWkQ" target="_2kupdtXWEem1l5O0R0OWkQ" source="_2kupedXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2kupaNXWEem1l5O0R0OWkQ" target="_2kupbdXWEem1l5O0R0OWkQ" source="_2kupadXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_2kupadXWEem1l5O0R0OWkQ" name="Create(Staff)" outgoing="_2kupaNXWEem1l5O0R0OWkQ" classifier="_2ktcjNXWEem1l5O0R0OWkQ">
                  <result xmi:id="_2kupatXWEem1l5O0R0OWkQ" name="Create(Staff).result" outgoing="_2kupZtXWEem1l5O0R0OWkQ" type="_2ktcjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupa9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupbNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kupbdXWEem1l5O0R0OWkQ" name="Node(Call(Staff))" incoming="_2kupaNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupbtXWEem1l5O0R0OWkQ" target="_2kupb9XWEem1l5O0R0OWkQ" source="_2kupedXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2kupb9XWEem1l5O0R0OWkQ" name="Output(Fork(Create(Staff).result))" incoming="_2kupbtXWEem1l5O0R0OWkQ" outgoing="_2kupY9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupcNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupcdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_2kupctXWEem1l5O0R0OWkQ" name="Call(Staff)" operation="_2ktdHtXWEem1l5O0R0OWkQ">
                    <result xmi:id="_2kupc9XWEem1l5O0R0OWkQ" name="Call(Staff).result()" type="_2ktcjNXWEem1l5O0R0OWkQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupdNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupddXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <target xmi:id="_2kupdtXWEem1l5O0R0OWkQ" name="Call(Staff).target" incoming="_2kupZ9XWEem1l5O0R0OWkQ" type="_2ktcjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupd9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupeNXWEem1l5O0R0OWkQ" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2kupedXWEem1l5O0R0OWkQ" name="Fork(Create(Staff).result)" incoming="_2kupZtXWEem1l5O0R0OWkQ" outgoing="_2kupZ9XWEem1l5O0R0OWkQ _2kupbtXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kupetXWEem1l5O0R0OWkQ" name="ExpressionStatement@3b6d1738" incoming="_2kupSdXWEem1l5O0R0OWkQ" outgoing="_2kupStXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupe9XWEem1l5O0R0OWkQ" target="_2kupfNXWEem1l5O0R0OWkQ" source="_2kuph9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2kupfNXWEem1l5O0R0OWkQ" name="Fork(monitor)@6f9fc479" incoming="_2kupe9XWEem1l5O0R0OWkQ" outgoing="_2kupUdXWEem1l5O0R0OWkQ _2kupUtXWEem1l5O0R0OWkQ _2kupV9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kupfdXWEem1l5O0R0OWkQ" name="RightHandSide@798476e1">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupftXWEem1l5O0R0OWkQ" target="_2kupkdXWEem1l5O0R0OWkQ" source="_2kupgtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupf9XWEem1l5O0R0OWkQ" target="_2kupjtXWEem1l5O0R0OWkQ" source="_2kupkdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2kupgNXWEem1l5O0R0OWkQ" target="_2kuphdXWEem1l5O0R0OWkQ" source="_2kupgdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_2kupgdXWEem1l5O0R0OWkQ" name="Create(InActiveMonitor)" outgoing="_2kupgNXWEem1l5O0R0OWkQ" classifier="_2ks1mtXWEem1l5O0R0OWkQ">
                  <result xmi:id="_2kupgtXWEem1l5O0R0OWkQ" name="Create(InActiveMonitor).result" outgoing="_2kupftXWEem1l5O0R0OWkQ" type="_2ks1mtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupg9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuphNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuphdXWEem1l5O0R0OWkQ" name="Node(Call(InActiveMonitor))" incoming="_2kupgNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuphtXWEem1l5O0R0OWkQ" target="_2kuph9XWEem1l5O0R0OWkQ" source="_2kupkdXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2kuph9XWEem1l5O0R0OWkQ" name="Output(Fork(Create(InActiveMonitor).result))" incoming="_2kuphtXWEem1l5O0R0OWkQ" outgoing="_2kupe9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupiNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupidXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_2kupitXWEem1l5O0R0OWkQ" name="Call(InActiveMonitor)" operation="_2ks2LNXWEem1l5O0R0OWkQ">
                    <result xmi:id="_2kupi9XWEem1l5O0R0OWkQ" name="Call(InActiveMonitor).result()" type="_2ks1mtXWEem1l5O0R0OWkQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupjNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupjdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <target xmi:id="_2kupjtXWEem1l5O0R0OWkQ" name="Call(InActiveMonitor).target" incoming="_2kupf9XWEem1l5O0R0OWkQ" type="_2ks1mtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupj9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupkNXWEem1l5O0R0OWkQ" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2kupkdXWEem1l5O0R0OWkQ" name="Fork(Create(InActiveMonitor).result)" incoming="_2kupftXWEem1l5O0R0OWkQ" outgoing="_2kupf9XWEem1l5O0R0OWkQ _2kuphtXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kupktXWEem1l5O0R0OWkQ" name="ExpressionStatement@6b35c185" incoming="_2kupStXWEem1l5O0R0OWkQ" outgoing="_2kupTNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupk9XWEem1l5O0R0OWkQ" target="_2kuplNXWEem1l5O0R0OWkQ" source="_2kupn9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_2kuplNXWEem1l5O0R0OWkQ" name="Fork(issue)@4ef7aa85" incoming="_2kupk9XWEem1l5O0R0OWkQ" outgoing="_2kupVNXWEem1l5O0R0OWkQ _2kupWNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kupldXWEem1l5O0R0OWkQ" name="RightHandSide@240492ca">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupltXWEem1l5O0R0OWkQ" target="_2kupqdXWEem1l5O0R0OWkQ" source="_2kupmtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupl9XWEem1l5O0R0OWkQ" target="_2kupptXWEem1l5O0R0OWkQ" source="_2kupqdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2kupmNXWEem1l5O0R0OWkQ" target="_2kupndXWEem1l5O0R0OWkQ" source="_2kupmdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:CreateObjectAction" xmi:id="_2kupmdXWEem1l5O0R0OWkQ" name="Create(Pending)" outgoing="_2kupmNXWEem1l5O0R0OWkQ" classifier="_2kteStXWEem1l5O0R0OWkQ">
                  <result xmi:id="_2kupmtXWEem1l5O0R0OWkQ" name="Create(Pending).result" outgoing="_2kupltXWEem1l5O0R0OWkQ" type="_2kteStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupm9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupnNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kupndXWEem1l5O0R0OWkQ" name="Node(Call(Pending))" incoming="_2kupmNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupntXWEem1l5O0R0OWkQ" target="_2kupn9XWEem1l5O0R0OWkQ" source="_2kupqdXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2kupn9XWEem1l5O0R0OWkQ" name="Output(Fork(Create(Pending).result))" incoming="_2kupntXWEem1l5O0R0OWkQ" outgoing="_2kupk9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupoNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupodXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallOperationAction" xmi:id="_2kupotXWEem1l5O0R0OWkQ" name="Call(Pending)" operation="_2kuCk9XWEem1l5O0R0OWkQ">
                    <result xmi:id="_2kupo9XWEem1l5O0R0OWkQ" name="Call(Pending).result()" type="_2kteStXWEem1l5O0R0OWkQ">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuppNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuppdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <target xmi:id="_2kupptXWEem1l5O0R0OWkQ" name="Call(Pending).target" incoming="_2kupl9XWEem1l5O0R0OWkQ" type="_2kteStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupp9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupqNXWEem1l5O0R0OWkQ" value="1"/>
                    </target>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_2kupqdXWEem1l5O0R0OWkQ" name="Fork(Create(Pending).result)" incoming="_2kupltXWEem1l5O0R0OWkQ" outgoing="_2kupl9XWEem1l5O0R0OWkQ _2kupntXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kupqtXWEem1l5O0R0OWkQ" name="ClassifyStatement@6cdc0092" incoming="_2kupTNXWEem1l5O0R0OWkQ" outgoing="_2kupTtXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_2kupq9XWEem1l5O0R0OWkQ" name="Reclassify(* to Administrator)" isReplaceAll="true" newClassifier="_2ktb9dXWEem1l5O0R0OWkQ">
                <object xmi:id="_2kuprNXWEem1l5O0R0OWkQ" name="Reclassify(* to Administrator).object" incoming="_2kupS9XWEem1l5O0R0OWkQ" type="_2ktcjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuprdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuprtXWEem1l5O0R0OWkQ" value="1"/>
                </object>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kupr9XWEem1l5O0R0OWkQ" name="ClassifyStatement@51779dfe" incoming="_2kupTtXWEem1l5O0R0OWkQ" outgoing="_2kupUNXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_2kupsNXWEem1l5O0R0OWkQ" name="Reclassify( to PartTime)" newClassifier="_2ktdI9XWEem1l5O0R0OWkQ">
                <object xmi:id="_2kupsdXWEem1l5O0R0OWkQ" name="Reclassify( to PartTime).object" incoming="_2kupTdXWEem1l5O0R0OWkQ" type="_2ktcjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupstXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kups9XWEem1l5O0R0OWkQ" value="1"/>
                </object>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuptNXWEem1l5O0R0OWkQ" name="ClassifyStatement@5818228f" incoming="_2kupUNXWEem1l5O0R0OWkQ" outgoing="_2kupU9XWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_2kuptdXWEem1l5O0R0OWkQ" name="Reclassify(Administrator to )" oldClassifier="_2ktb9dXWEem1l5O0R0OWkQ">
                <object xmi:id="_2kupttXWEem1l5O0R0OWkQ" name="Reclassify(Administrator to ).object" incoming="_2kupT9XWEem1l5O0R0OWkQ" type="_2ktcjNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupt9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupuNXWEem1l5O0R0OWkQ" value="1"/>
                </object>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kupudXWEem1l5O0R0OWkQ" name="ClassifyStatement@678888dc" incoming="_2kupU9XWEem1l5O0R0OWkQ" outgoing="_2kupVdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuputXWEem1l5O0R0OWkQ" target="_2kupwdXWEem1l5O0R0OWkQ" source="_2kupvNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupu9XWEem1l5O0R0OWkQ" target="_2kupwtXWEem1l5O0R0OWkQ" source="_2kupwNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_2kupvNXWEem1l5O0R0OWkQ" name="Reclassify(InActiveMonitor to ActiveMonitor)" outgoing="_2kuputXWEem1l5O0R0OWkQ" newClassifier="_2ks2MdXWEem1l5O0R0OWkQ" oldClassifier="_2ks1mtXWEem1l5O0R0OWkQ">
                <object xmi:id="_2kupvdXWEem1l5O0R0OWkQ" name="Reclassify(InActiveMonitor to ActiveMonitor).object" incoming="_2kupUdXWEem1l5O0R0OWkQ" type="_2ks1mtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupvtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupv9XWEem1l5O0R0OWkQ" value="1"/>
                </object>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2kupwNXWEem1l5O0R0OWkQ" name="Fork(Fork(monitor)@6f9fc479)" incoming="_2kupUtXWEem1l5O0R0OWkQ" outgoing="_2kupu9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StartObjectBehaviorAction" xmi:id="_2kupwdXWEem1l5O0R0OWkQ" name="Start(any)" incoming="_2kuputXWEem1l5O0R0OWkQ" isSynchronous="false">
                <object xmi:id="_2kupwtXWEem1l5O0R0OWkQ" name="Start(any).object" incoming="_2kupu9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupw9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupxNXWEem1l5O0R0OWkQ" value="1"/>
                </object>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kupxdXWEem1l5O0R0OWkQ" name="ClassifyStatement@659d5ffb" incoming="_2kupVdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ReclassifyObjectAction" xmi:id="_2kupxtXWEem1l5O0R0OWkQ" name="Reclassify(Pending,Overdue to Resolved,InProcess)" newClassifier="_2kuDxtXWEem1l5O0R0OWkQ _2kuCmNXWEem1l5O0R0OWkQ" oldClassifier="_2kteStXWEem1l5O0R0OWkQ _2kuDL9XWEem1l5O0R0OWkQ">
                <object xmi:id="_2kupx9XWEem1l5O0R0OWkQ" name="Reclassify(Pending,Overdue to Resolved,InProcess).object" incoming="_2kupVNXWEem1l5O0R0OWkQ" type="_2kteStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kupyNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kupydXWEem1l5O0R0OWkQ" value="1"/>
                </object>
              </node>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kupRdXWEem1l5O0R0OWkQ" name="Output(employee)" incoming="_2kupQtXWEem1l5O0R0OWkQ" type="_2ktbZdXWEem1l5O0R0OWkQ" parameter="_2kupOdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kupRtXWEem1l5O0R0OWkQ" name="Output(monitor)" incoming="_2kupQ9XWEem1l5O0R0OWkQ" type="_2ks1CtXWEem1l5O0R0OWkQ" parameter="_2kupPNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kupR9XWEem1l5O0R0OWkQ" name="Output(issue)" incoming="_2kupRNXWEem1l5O0R0OWkQ" type="_2ktdutXWEem1l5O0R0OWkQ" parameter="_2kupP9XWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kupytXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2kuqJ9XWEem1l5O0R0OWkQ" node="_2kupy9XWEem1l5O0R0OWkQ" group="_2kupy9XWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2kupy9XWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kupzNXWEem1l5O0R0OWkQ" name="TestRunner$initialization$1" visibility="private" specification="_2kuqFdXWEem1l5O0R0OWkQ" node="_2kupzdXWEem1l5O0R0OWkQ" group="_2kupzdXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2kupzdXWEem1l5O0R0OWkQ" name="Body(TestRunner$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupztXWEem1l5O0R0OWkQ" target="_2kup3NXWEem1l5O0R0OWkQ" source="_2kup2dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kupz9XWEem1l5O0R0OWkQ" target="_2kup6NXWEem1l5O0R0OWkQ" source="_2kup3NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kup0NXWEem1l5O0R0OWkQ" target="_2kup99XWEem1l5O0R0OWkQ" source="_2kup3NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kup0dXWEem1l5O0R0OWkQ" target="_2kup_tXWEem1l5O0R0OWkQ" source="_2kup-tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kup0tXWEem1l5O0R0OWkQ" target="_2kuqCtXWEem1l5O0R0OWkQ" source="_2kuqAdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kup09XWEem1l5O0R0OWkQ" target="_2kuqENXWEem1l5O0R0OWkQ" source="_2kuqBdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kup1NXWEem1l5O0R0OWkQ" target="_2kuqFNXWEem1l5O0R0OWkQ" source="_2kuqE9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kup1dXWEem1l5O0R0OWkQ" target="_2kuqFNXWEem1l5O0R0OWkQ" source="_2kuqDdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kup1tXWEem1l5O0R0OWkQ" target="_2kup3dXWEem1l5O0R0OWkQ" source="_2kuqFNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kup19XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kup2NXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kup2dXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kupztXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kup2tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kup29XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kup3NXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kupztXWEem1l5O0R0OWkQ" outgoing="_2kupz9XWEem1l5O0R0OWkQ _2kup0NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kup3dXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2kup1tXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kup3tXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kup39XWEem1l5O0R0OWkQ" target="_2kup9dXWEem1l5O0R0OWkQ" source="_2kup4dXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kup4NXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2kup4dXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2kup39XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kup4tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kup49XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2kup5NXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2kup5dXWEem1l5O0R0OWkQ" name="Iterate(Write(TestRunner$initializationFlag$1))" inputElement="_2kup9dXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kup5tXWEem1l5O0R0OWkQ" target="_2kup8tXWEem1l5O0R0OWkQ" source="_2kup9dXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kup59XWEem1l5O0R0OWkQ" target="_2kup7NXWEem1l5O0R0OWkQ" source="_2kup6NXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2kup6NXWEem1l5O0R0OWkQ" name="Iterate(Write(TestRunner$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2kupz9XWEem1l5O0R0OWkQ" outgoing="_2kup59XWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kup6dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kup6tXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2kup69XWEem1l5O0R0OWkQ" name="Write(TestRunner$initializationFlag$1)" structuralFeature="_2kuEXtXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2kup7NXWEem1l5O0R0OWkQ" name="Write(TestRunner$initializationFlag$1).object" incoming="_2kup59XWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kup7dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kup7tXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2kup79XWEem1l5O0R0OWkQ" name="Write(TestRunner$initializationFlag$1).result" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kup8NXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kup8dXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2kup8tXWEem1l5O0R0OWkQ" name="Write(TestRunner$initializationFlag$1).value" incoming="_2kup5tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kup89XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kup9NXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2kup9dXWEem1l5O0R0OWkQ" name="Iterate(Write(TestRunner$initializationFlag$1)).inputElement" incoming="_2kup39XWEem1l5O0R0OWkQ" outgoing="_2kup5tXWEem1l5O0R0OWkQ" regionAsInput="_2kup5dXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kup9tXWEem1l5O0R0OWkQ" name="Read(TestRunner$initializationFlag$1)" structuralFeature="_2kuEXtXWEem1l5O0R0OWkQ">
              <object xmi:id="_2kup99XWEem1l5O0R0OWkQ" name="Read(TestRunner$initializationFlag$1).object" incoming="_2kup0NXWEem1l5O0R0OWkQ" type="_2kuEXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kup-NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kup-dXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2kup-tXWEem1l5O0R0OWkQ" name="Read(TestRunner$initializationFlag$1).result" outgoing="_2kup0dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kup-9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kup_NXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kup_dXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2kup_tXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kup0dXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kup_9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqANXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kuqAdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kup0tXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqAtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqA9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuqBNXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2kuqBdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kup09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqBtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqB9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2kuqCNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kuqCdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2kuqCtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kup0tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqC9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqDNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kuqDdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kup1dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqDtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqD9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kuqENXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kup09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqEdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqEtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kuqE9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kup1NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kuqFNXWEem1l5O0R0OWkQ" name="Decision(Test(TestRunner$initializationFlag$1))" incoming="_2kup1NXWEem1l5O0R0OWkQ _2kup1dXWEem1l5O0R0OWkQ" outgoing="_2kup1tXWEem1l5O0R0OWkQ" decisionInputFlow="_2kup1dXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2kuqFdXWEem1l5O0R0OWkQ" name="TestRunner$initialization$1" visibility="protected" method="_2kupzNXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2kuqFtXWEem1l5O0R0OWkQ" name="TestRunner" visibility="public" method="_2kuGEtXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kuqF9XWEem1l5O0R0OWkQ" name="outer" visibility="package" type="_2kuqLtXWEem1l5O0R0OWkQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqGNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqGdXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2kuqGtXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2kuEXdXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqG9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqHNXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2kuqHdXWEem1l5O0R0OWkQ" name="test" visibility="public" method="_2kupONXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kuqHtXWEem1l5O0R0OWkQ" name="employee" visibility="package" type="_2ktbZdXWEem1l5O0R0OWkQ" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqH9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqINXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2kuqIdXWEem1l5O0R0OWkQ" name="monitor" visibility="package" type="_2ks1CtXWEem1l5O0R0OWkQ" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqItXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqI9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2kuqJNXWEem1l5O0R0OWkQ" name="issue" visibility="package" type="_2ktdutXWEem1l5O0R0OWkQ" direction="out">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqJdXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqJtXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2kuqJ9XWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2kupytXWEem1l5O0R0OWkQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2kuqKNXWEem1l5O0R0OWkQ" name="Start" visibility="public"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2kuqKdXWEem1l5O0R0OWkQ" name="Continue" visibility="public"/>
        <ownedReception xmi:id="_2kuqKtXWEem1l5O0R0OWkQ" name="Start" signal="_2kuqKNXWEem1l5O0R0OWkQ"/>
        <ownedReception xmi:id="_2kuqK9XWEem1l5O0R0OWkQ" name="Continue" signal="_2kuqKdXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2kuqLNXWEem1l5O0R0OWkQ" name="Event(Start)" visibility="public" signal="_2kuqKNXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_2kuqLdXWEem1l5O0R0OWkQ" name="Event(Continue)" visibility="public" signal="_2kuqKdXWEem1l5O0R0OWkQ"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_2kuqLtXWEem1l5O0R0OWkQ" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_2kuqL9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2kuqMNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2kuqMdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2kuqMtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2kuqM9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_2kuqNNXWEem1l5O0R0OWkQ" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqNdXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqNtXWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_2kuqN9XWEem1l5O0R0OWkQ" name="tester" visibility="private" type="_2kurQNXWEem1l5O0R0OWkQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqONXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqOdXWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuqOtXWEem1l5O0R0OWkQ" name="Test$method$1" visibility="private" specification="_2kurM9XWEem1l5O0R0OWkQ" node="_2kuqRNXWEem1l5O0R0OWkQ _2kuqRdXWEem1l5O0R0OWkQ _2kuqRtXWEem1l5O0R0OWkQ _2kuqR9XWEem1l5O0R0OWkQ" group="_2kuqR9XWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2kuqO9XWEem1l5O0R0OWkQ" name="tester" type="_2kurQNXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqPNXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqPdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2kuqPtXWEem1l5O0R0OWkQ" name="" type="_2kuqLtXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqP9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqQNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqQdXWEem1l5O0R0OWkQ" target="_2kuqRdXWEem1l5O0R0OWkQ" source="_2kuqRNXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqQtXWEem1l5O0R0OWkQ" target="_2kuqZdXWEem1l5O0R0OWkQ" source="_2kuqRdXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqQ9XWEem1l5O0R0OWkQ" target="_2kuqRtXWEem1l5O0R0OWkQ" source="_2kuqgdXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_2kuqR9XWEem1l5O0R0OWkQ" name="Body(Test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqSNXWEem1l5O0R0OWkQ" target="_2kuqgdXWEem1l5O0R0OWkQ" source="_2kuqftXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqSdXWEem1l5O0R0OWkQ" target="_2kuqg9XWEem1l5O0R0OWkQ" source="_2kuqgdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2kuqStXWEem1l5O0R0OWkQ" target="_2kuqU9XWEem1l5O0R0OWkQ" source="_2kuqgtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqS9XWEem1l5O0R0OWkQ" target="_2kuqh9XWEem1l5O0R0OWkQ" source="_2kuqgdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqTNXWEem1l5O0R0OWkQ" target="_2kuqjtXWEem1l5O0R0OWkQ" source="_2kuqitXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqTdXWEem1l5O0R0OWkQ" target="_2kuqmtXWEem1l5O0R0OWkQ" source="_2kuqkdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqTtXWEem1l5O0R0OWkQ" target="_2kuqoNXWEem1l5O0R0OWkQ" source="_2kuqldXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2kuqT9XWEem1l5O0R0OWkQ" target="_2kuqpNXWEem1l5O0R0OWkQ" source="_2kuqo9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqUNXWEem1l5O0R0OWkQ" target="_2kuqpNXWEem1l5O0R0OWkQ" source="_2kuqndXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2kuqUdXWEem1l5O0R0OWkQ" target="_2kuqgtXWEem1l5O0R0OWkQ" source="_2kuqpNXWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kuqUtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuqU9XWEem1l5O0R0OWkQ" name="Body" incoming="_2kuqStXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuqVNXWEem1l5O0R0OWkQ" name="ExpressionStatement@2363630a">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqVdXWEem1l5O0R0OWkQ" target="_2kuqX9XWEem1l5O0R0OWkQ" source="_2kuqW9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqVtXWEem1l5O0R0OWkQ" target="_2kuqaNXWEem1l5O0R0OWkQ" source="_2kuqZdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqV9XWEem1l5O0R0OWkQ" target="_2kuqbtXWEem1l5O0R0OWkQ" source="_2kuqYtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kuqWNXWEem1l5O0R0OWkQ" target="_2kuqWdXWEem1l5O0R0OWkQ" source="_2kuqfNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuqWdXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@25e83bd9)" incoming="_2kuqWNXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuqWtXWEem1l5O0R0OWkQ" name="ReadSelf">
                  <result xmi:id="_2kuqW9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuqVdXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqXNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqXdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_2kuqXtXWEem1l5O0R0OWkQ" name="Clear(tester)" structuralFeature="_2kuqN9XWEem1l5O0R0OWkQ">
                <object xmi:id="_2kuqX9XWEem1l5O0R0OWkQ" name="Clear(tester).object" incoming="_2kuqVdXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqYNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqYdXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2kuqYtXWEem1l5O0R0OWkQ" name="Clear(tester).result" outgoing="_2kuqV9XWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqY9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqZNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2kuqZdXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@25e83bd9)" incoming="_2kuqQtXWEem1l5O0R0OWkQ" outgoing="_2kuqVtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuqZtXWEem1l5O0R0OWkQ" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqZ9XWEem1l5O0R0OWkQ" target="_2kuqe9XWEem1l5O0R0OWkQ" source="_2kuqaNXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2kuqaNXWEem1l5O0R0OWkQ" name="WriteAll(Test::tester).input(Test::tester)" incoming="_2kuqVtXWEem1l5O0R0OWkQ" outgoing="_2kuqZ9XWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqadXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqatXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2kuqa9XWEem1l5O0R0OWkQ" name="Iterate(Write(tester))" inputElement="_2kuqe9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqbNXWEem1l5O0R0OWkQ" target="_2kuqeNXWEem1l5O0R0OWkQ" source="_2kuqe9XWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqbdXWEem1l5O0R0OWkQ" target="_2kuqctXWEem1l5O0R0OWkQ" source="_2kuqbtXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2kuqbtXWEem1l5O0R0OWkQ" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_2kuqV9XWEem1l5O0R0OWkQ" outgoing="_2kuqbdXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqb9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqcNXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2kuqcdXWEem1l5O0R0OWkQ" name="Write(tester)" structuralFeature="_2kuqN9XWEem1l5O0R0OWkQ">
                    <object xmi:id="_2kuqctXWEem1l5O0R0OWkQ" name="Write(tester).object" incoming="_2kuqbdXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqc9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqdNXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2kuqddXWEem1l5O0R0OWkQ" name="Write(tester).result" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqdtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqd9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2kuqeNXWEem1l5O0R0OWkQ" name="Write(tester).value" incoming="_2kuqbNXWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqedXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqetXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2kuqe9XWEem1l5O0R0OWkQ" name="Iterate(Write(tester)).inputElement" incoming="_2kuqZ9XWEem1l5O0R0OWkQ" outgoing="_2kuqbNXWEem1l5O0R0OWkQ" regionAsInput="_2kuqa9XWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuqfNXWEem1l5O0R0OWkQ" name="RightHandSide@60786bcf" outgoing="_2kuqWNXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuqfdXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2kuqftXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuqSNXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqf9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqgNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2kuqgdXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kuqSNXWEem1l5O0R0OWkQ" outgoing="_2kuqQ9XWEem1l5O0R0OWkQ _2kuqSdXWEem1l5O0R0OWkQ _2kuqS9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_2kuqgtXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1)" incoming="_2kuqUdXWEem1l5O0R0OWkQ" outgoing="_2kuqStXWEem1l5O0R0OWkQ" operation="_2kurMtXWEem1l5O0R0OWkQ">
            <target xmi:id="_2kuqg9XWEem1l5O0R0OWkQ" name="Call(Test$initialization$1).target" incoming="_2kuqSdXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqhNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqhdXWEem1l5O0R0OWkQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kuqhtXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1)" structuralFeature="_2kuqNNXWEem1l5O0R0OWkQ">
            <object xmi:id="_2kuqh9XWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).object" incoming="_2kuqS9XWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqiNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqidXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_2kuqitXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).result" outgoing="_2kuqTNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqi9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqjNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuqjdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_2kuqjtXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kuqTNXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqj9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqkNXWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_2kuqkdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kuqTdXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqktXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqk9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuqlNXWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_2kuqldXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kuqTtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqltXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuql9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2kuqmNXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2kuqmdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_2kuqmtXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kuqTdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqm9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqnNXWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_2kuqndXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kuqUNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqntXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqn9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_2kuqoNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kuqTtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqodXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqotXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2kuqo9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kuqT9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2kuqpNXWEem1l5O0R0OWkQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_2kuqT9XWEem1l5O0R0OWkQ _2kuqUNXWEem1l5O0R0OWkQ" outgoing="_2kuqUdXWEem1l5O0R0OWkQ" decisionInputFlow="_2kuqUNXWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kuqRNXWEem1l5O0R0OWkQ" name="Input(tester)" outgoing="_2kuqQdXWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" parameter="_2kuqO9XWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2kuqRdXWEem1l5O0R0OWkQ" name="Fork(tester)" incoming="_2kuqQdXWEem1l5O0R0OWkQ" outgoing="_2kuqQtXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kuqRtXWEem1l5O0R0OWkQ" name="Return" incoming="_2kuqQ9XWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" parameter="_2kuqPtXWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuqpdXWEem1l5O0R0OWkQ" name="done$method$1" visibility="private" specification="_2kurOtXWEem1l5O0R0OWkQ" node="_2kuqq9XWEem1l5O0R0OWkQ _2kuqrNXWEem1l5O0R0OWkQ _2kuqrdXWEem1l5O0R0OWkQ" group="_2kuqrdXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2kuqptXWEem1l5O0R0OWkQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqp9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqqNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqqdXWEem1l5O0R0OWkQ" target="_2kuqrNXWEem1l5O0R0OWkQ" source="_2kuqq9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqqtXWEem1l5O0R0OWkQ" target="_2kuqsdXWEem1l5O0R0OWkQ" source="_2kuqrNXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_2kuqrdXWEem1l5O0R0OWkQ" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_2kuqrtXWEem1l5O0R0OWkQ" target="_2kuqt9XWEem1l5O0R0OWkQ" source="_2kuqr9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuqr9XWEem1l5O0R0OWkQ" name="ExpressionStatement@6ec01fbd" outgoing="_2kuqrtXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kuqsNXWEem1l5O0R0OWkQ" name="Call(WriteLine)">
              <argument xmi:id="_2kuqsdXWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_2kuqqtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqstXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqs9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2kuqtNXWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqtdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqttXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuqt9XWEem1l5O0R0OWkQ" name="ExpressionStatement@5fc1fe49" incoming="_2kuqrtXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuquNXWEem1l5O0R0OWkQ" target="_2kuqwNXWEem1l5O0R0OWkQ" source="_2kuqzNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuqudXWEem1l5O0R0OWkQ" target="_2kuqutXWEem1l5O0R0OWkQ" source="_2kuqwdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_2kuqutXWEem1l5O0R0OWkQ" name="Collect(SendSignal(Continue))" incoming="_2kuqudXWEem1l5O0R0OWkQ" mode="parallel" inputElement="_2kuqwNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqu9XWEem1l5O0R0OWkQ" target="_2kuqvdXWEem1l5O0R0OWkQ" source="_2kuqwNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_2kuqvNXWEem1l5O0R0OWkQ" name="SendSignal(Continue)" signal="_2kur0NXWEem1l5O0R0OWkQ">
                <target xmi:id="_2kuqvdXWEem1l5O0R0OWkQ" name="SendSignal(Continue).target" incoming="_2kuqu9XWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqvtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqv9XWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_2kuqwNXWEem1l5O0R0OWkQ" name="Collect(SendSignal(Continue)).inputElement" incoming="_2kuquNXWEem1l5O0R0OWkQ" outgoing="_2kuqu9XWEem1l5O0R0OWkQ" regionAsInput="_2kuqutXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuqwdXWEem1l5O0R0OWkQ" name="Feature(Read(tester).result)" outgoing="_2kuqudXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqwtXWEem1l5O0R0OWkQ" target="_2kuqz9XWEem1l5O0R0OWkQ" source="_2kuqxdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuqw9XWEem1l5O0R0OWkQ" target="_2kuqydXWEem1l5O0R0OWkQ" source="_2kuqz9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuqxNXWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_2kuqxdXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuqwtXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqxtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqx9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kuqyNXWEem1l5O0R0OWkQ" name="Read(tester)" structuralFeature="_2kuqN9XWEem1l5O0R0OWkQ">
                <object xmi:id="_2kuqydXWEem1l5O0R0OWkQ" name="Read(tester).object" incoming="_2kuqw9XWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqytXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqy9XWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_2kuqzNXWEem1l5O0R0OWkQ" name="Read(tester).result" outgoing="_2kuquNXWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuqzdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuqztXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_2kuqz9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kuqwtXWEem1l5O0R0OWkQ" outgoing="_2kuqw9XWEem1l5O0R0OWkQ"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kuqq9XWEem1l5O0R0OWkQ" name="Input(message)" outgoing="_2kuqqdXWEem1l5O0R0OWkQ" parameter="_2kuqptXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_2kuqrNXWEem1l5O0R0OWkQ" name="Fork(message)" incoming="_2kuqqdXWEem1l5O0R0OWkQ" outgoing="_2kuqqtXWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuq0NXWEem1l5O0R0OWkQ" name="done$method$2" visibility="private" specification="_2kurPtXWEem1l5O0R0OWkQ" node="_2kuq0dXWEem1l5O0R0OWkQ" group="_2kuq0dXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2kuq0dXWEem1l5O0R0OWkQ" name="Body(done$method$2)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuq0tXWEem1l5O0R0OWkQ" name="ExpressionStatement@23b8a1d6">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuq09XWEem1l5O0R0OWkQ" target="_2kuq19XWEem1l5O0R0OWkQ" source="_2kuq39XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuq1NXWEem1l5O0R0OWkQ" target="_2kuq1tXWEem1l5O0R0OWkQ" source="_2kuq3dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuq1dXWEem1l5O0R0OWkQ" target="_2kuq2tXWEem1l5O0R0OWkQ" source="_2kuq5NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2kuq1tXWEem1l5O0R0OWkQ" name="Call(done)" incoming="_2kuq1NXWEem1l5O0R0OWkQ" operation="_2kurOtXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2kuq19XWEem1l5O0R0OWkQ" name="Call(done).argument(message)" incoming="_2kuq09XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuq2NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuq2dXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <target xmi:id="_2kuq2tXWEem1l5O0R0OWkQ" name="Call(done).target" incoming="_2kuq1dXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuq29XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuq3NXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuq3dXWEem1l5O0R0OWkQ" name="Tuple@35245038" outgoing="_2kuq1NXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuq3tXWEem1l5O0R0OWkQ" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_2kuq39XWEem1l5O0R0OWkQ" name="Value(&quot;Done.&quot;).result" outgoing="_2kuq09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuq4NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuq4dXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2kuq4tXWEem1l5O0R0OWkQ" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuq49XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kuq5NXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuq1dXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuq5dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuq5tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuq59XWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2kurP9XWEem1l5O0R0OWkQ" node="_2kuq6NXWEem1l5O0R0OWkQ" group="_2kuq6NXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2kuq6NXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kuq6dXWEem1l5O0R0OWkQ" name="Test$initialization$1" visibility="private" specification="_2kurMtXWEem1l5O0R0OWkQ" node="_2kuq6tXWEem1l5O0R0OWkQ" group="_2kuq6tXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_2kuq6tXWEem1l5O0R0OWkQ" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuq69XWEem1l5O0R0OWkQ" target="_2kuq-dXWEem1l5O0R0OWkQ" source="_2kuq9tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuq7NXWEem1l5O0R0OWkQ" target="_2kurBdXWEem1l5O0R0OWkQ" source="_2kuq-dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuq7dXWEem1l5O0R0OWkQ" target="_2kurFNXWEem1l5O0R0OWkQ" source="_2kuq-dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuq7tXWEem1l5O0R0OWkQ" target="_2kurG9XWEem1l5O0R0OWkQ" source="_2kurF9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuq79XWEem1l5O0R0OWkQ" target="_2kurJ9XWEem1l5O0R0OWkQ" source="_2kurHtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuq8NXWEem1l5O0R0OWkQ" target="_2kurLdXWEem1l5O0R0OWkQ" source="_2kurItXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2kuq8dXWEem1l5O0R0OWkQ" target="_2kurMdXWEem1l5O0R0OWkQ" source="_2kurMNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuq8tXWEem1l5O0R0OWkQ" target="_2kurMdXWEem1l5O0R0OWkQ" source="_2kurKtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2kuq89XWEem1l5O0R0OWkQ" target="_2kuq-tXWEem1l5O0R0OWkQ" source="_2kurMdXWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kuq9NXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_2kuq9dXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_2kuq9tXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kuq69XWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuq99XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuq-NXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2kuq-dXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kuq69XWEem1l5O0R0OWkQ" outgoing="_2kuq7NXWEem1l5O0R0OWkQ _2kuq7dXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuq-tXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2kuq89XWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kuq-9XWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuq_NXWEem1l5O0R0OWkQ" target="_2kurEtXWEem1l5O0R0OWkQ" source="_2kuq_tXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kuq_dXWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_2kuq_tXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2kuq_NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuq_9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurANXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_2kurAdXWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_2kurAtXWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1))" inputElement="_2kurEtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurA9XWEem1l5O0R0OWkQ" target="_2kurD9XWEem1l5O0R0OWkQ" source="_2kurEtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurBNXWEem1l5O0R0OWkQ" target="_2kurCdXWEem1l5O0R0OWkQ" source="_2kurBdXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2kurBdXWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2kuq7NXWEem1l5O0R0OWkQ" outgoing="_2kurBNXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurBtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurB9XWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2kurCNXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1)" structuralFeature="_2kuqNNXWEem1l5O0R0OWkQ">
                  <object xmi:id="_2kurCdXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).object" incoming="_2kurBNXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurCtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurC9XWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kurDNXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).result" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurDdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurDtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_2kurD9XWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).value" incoming="_2kurA9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurENXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurEdXWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2kurEtXWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1)).inputElement" incoming="_2kuq_NXWEem1l5O0R0OWkQ" outgoing="_2kurA9XWEem1l5O0R0OWkQ" regionAsInput="_2kurAtXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kurE9XWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1)" structuralFeature="_2kuqNNXWEem1l5O0R0OWkQ">
            <object xmi:id="_2kurFNXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).object" incoming="_2kuq7dXWEem1l5O0R0OWkQ" type="_2kuqLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurFdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurFtXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_2kurF9XWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).result" outgoing="_2kuq7tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurGNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurGdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kurGtXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_2kurG9XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kuq7tXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurHNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurHdXWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_2kurHtXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kuq79XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurH9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurINXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kurIdXWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_2kurItXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kuq8NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurI9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurJNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_2kurJdXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_2kurJtXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_2kurJ9XWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kuq79XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurKNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurKdXWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_2kurKtXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kuq8tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurK9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurLNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_2kurLdXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kuq8NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurLtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurL9XWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_2kurMNXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kuq8dXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_2kurMdXWEem1l5O0R0OWkQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_2kuq8dXWEem1l5O0R0OWkQ _2kuq8tXWEem1l5O0R0OWkQ" outgoing="_2kuq89XWEem1l5O0R0OWkQ" decisionInputFlow="_2kuq8tXWEem1l5O0R0OWkQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_2kurMtXWEem1l5O0R0OWkQ" name="Test$initialization$1" visibility="protected" method="_2kuq6dXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_2kurM9XWEem1l5O0R0OWkQ" name="Test" visibility="protected" method="_2kuqOtXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2kurNNXWEem1l5O0R0OWkQ" name="tester" visibility="package" type="_2kurQNXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurNdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurNtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2kurN9XWEem1l5O0R0OWkQ" name="" visibility="package" type="_2kuqLtXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurONXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurOdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2kurOtXWEem1l5O0R0OWkQ" name="done" visibility="public" method="_2kuqpdXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_2kurO9XWEem1l5O0R0OWkQ" name="message" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurPNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurPdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2kurPtXWEem1l5O0R0OWkQ" name="done" visibility="public" method="_2kuq0NXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_2kurP9XWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2kuq59XWEem1l5O0R0OWkQ"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_2kurQNXWEem1l5O0R0OWkQ" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_2kurQdXWEem1l5O0R0OWkQ" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurQtXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurQ9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kurRNXWEem1l5O0R0OWkQ" name="Tester$method$1" visibility="private" specification="_2kury9XWEem1l5O0R0OWkQ" node="_2kurSdXWEem1l5O0R0OWkQ _2kurStXWEem1l5O0R0OWkQ" group="_2kurStXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kurRdXWEem1l5O0R0OWkQ" name="" type="_2kurQNXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurRtXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurR9XWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurSNXWEem1l5O0R0OWkQ" target="_2kurSdXWEem1l5O0R0OWkQ" source="_2kurW9XWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_2kurStXWEem1l5O0R0OWkQ" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurS9XWEem1l5O0R0OWkQ" target="_2kurW9XWEem1l5O0R0OWkQ" source="_2kurWNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurTNXWEem1l5O0R0OWkQ" target="_2kurXdXWEem1l5O0R0OWkQ" source="_2kurW9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kurTdXWEem1l5O0R0OWkQ" target="_2kurVtXWEem1l5O0R0OWkQ" source="_2kurXNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurTtXWEem1l5O0R0OWkQ" target="_2kurYdXWEem1l5O0R0OWkQ" source="_2kurW9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurT9XWEem1l5O0R0OWkQ" target="_2kuraNXWEem1l5O0R0OWkQ" source="_2kurZNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurUNXWEem1l5O0R0OWkQ" target="_2kurdNXWEem1l5O0R0OWkQ" source="_2kura9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurUdXWEem1l5O0R0OWkQ" target="_2kuretXWEem1l5O0R0OWkQ" source="_2kurb9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kurUtXWEem1l5O0R0OWkQ" target="_2kurftXWEem1l5O0R0OWkQ" source="_2kurfdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurU9XWEem1l5O0R0OWkQ" target="_2kurftXWEem1l5O0R0OWkQ" source="_2kurd9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kurVNXWEem1l5O0R0OWkQ" target="_2kurXNXWEem1l5O0R0OWkQ" source="_2kurftXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kurVdXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kurVtXWEem1l5O0R0OWkQ" name="Body" incoming="_2kurTdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kurV9XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kurWNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kurS9XWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurWdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurWtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kurW9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kurS9XWEem1l5O0R0OWkQ" outgoing="_2kurSNXWEem1l5O0R0OWkQ _2kurTNXWEem1l5O0R0OWkQ _2kurTtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2kurXNXWEem1l5O0R0OWkQ" name="Call(Tester$initialization$1)" incoming="_2kurVNXWEem1l5O0R0OWkQ" outgoing="_2kurTdXWEem1l5O0R0OWkQ" operation="_2kurytXWEem1l5O0R0OWkQ">
              <target xmi:id="_2kurXdXWEem1l5O0R0OWkQ" name="Call(Tester$initialization$1).target" incoming="_2kurTNXWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurXtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurX9XWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kurYNXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_2kurQdXWEem1l5O0R0OWkQ">
              <object xmi:id="_2kurYdXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).object" incoming="_2kurTtXWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurYtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurY9XWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2kurZNXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).result" outgoing="_2kurT9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurZdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurZtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kurZ9XWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2kuraNXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kurT9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuradXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuratXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kura9XWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kurUNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurbNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurbdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kurbtXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2kurb9XWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kurUdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurcNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurcdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2kurctXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kurc9XWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2kurdNXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kurUNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurddXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurdtXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kurd9XWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kurU9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kureNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuredXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kuretXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kurUdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kure9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurfNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kurfdXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kurUtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kurftXWEem1l5O0R0OWkQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_2kurUtXWEem1l5O0R0OWkQ _2kurU9XWEem1l5O0R0OWkQ" outgoing="_2kurVNXWEem1l5O0R0OWkQ" decisionInputFlow="_2kurU9XWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kurSdXWEem1l5O0R0OWkQ" name="Return" incoming="_2kurSNXWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" parameter="_2kurRdXWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kurf9XWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_2kurz9XWEem1l5O0R0OWkQ" node="_2kurgNXWEem1l5O0R0OWkQ" group="_2kurgNXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2kurgNXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_2kurgdXWEem1l5O0R0OWkQ" name="Tester$initialization$1" visibility="private" specification="_2kurytXWEem1l5O0R0OWkQ" node="_2kurgtXWEem1l5O0R0OWkQ" group="_2kurgtXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_2kurgtXWEem1l5O0R0OWkQ" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurg9XWEem1l5O0R0OWkQ" target="_2kurkdXWEem1l5O0R0OWkQ" source="_2kurjtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurhNXWEem1l5O0R0OWkQ" target="_2kurndXWEem1l5O0R0OWkQ" source="_2kurkdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurhdXWEem1l5O0R0OWkQ" target="_2kurrNXWEem1l5O0R0OWkQ" source="_2kurkdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurhtXWEem1l5O0R0OWkQ" target="_2kurs9XWEem1l5O0R0OWkQ" source="_2kurr9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurh9XWEem1l5O0R0OWkQ" target="_2kurv9XWEem1l5O0R0OWkQ" source="_2kurttXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuriNXWEem1l5O0R0OWkQ" target="_2kurxdXWEem1l5O0R0OWkQ" source="_2kurutXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuridXWEem1l5O0R0OWkQ" target="_2kurydXWEem1l5O0R0OWkQ" source="_2kuryNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kuritXWEem1l5O0R0OWkQ" target="_2kurydXWEem1l5O0R0OWkQ" source="_2kurwtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kuri9XWEem1l5O0R0OWkQ" target="_2kurktXWEem1l5O0R0OWkQ" source="_2kurydXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kurjNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_2kurjdXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_2kurjtXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_2kurg9XWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurj9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurkNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kurkdXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_2kurg9XWEem1l5O0R0OWkQ" outgoing="_2kurhNXWEem1l5O0R0OWkQ _2kurhdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kurktXWEem1l5O0R0OWkQ" name="Initialization" incoming="_2kuri9XWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kurk9XWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurlNXWEem1l5O0R0OWkQ" target="_2kurqtXWEem1l5O0R0OWkQ" source="_2kurltXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kurldXWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_2kurltXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2kurlNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurl9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurmNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_2kurmdXWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_2kurmtXWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1))" inputElement="_2kurqtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurm9XWEem1l5O0R0OWkQ" target="_2kurp9XWEem1l5O0R0OWkQ" source="_2kurqtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kurnNXWEem1l5O0R0OWkQ" target="_2kurodXWEem1l5O0R0OWkQ" source="_2kurndXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2kurndXWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_2kurhNXWEem1l5O0R0OWkQ" outgoing="_2kurnNXWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurntXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurn9XWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_2kuroNXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1)" structuralFeature="_2kurQdXWEem1l5O0R0OWkQ">
                    <object xmi:id="_2kurodXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).object" incoming="_2kurnNXWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurotXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuro9XWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_2kurpNXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).result" type="_2kurQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurpdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurptXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_2kurp9XWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).value" incoming="_2kurm9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurqNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurqdXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_2kurqtXWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1)).inputElement" incoming="_2kurlNXWEem1l5O0R0OWkQ" outgoing="_2kurm9XWEem1l5O0R0OWkQ" regionAsInput="_2kurmtXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_2kurq9XWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_2kurQdXWEem1l5O0R0OWkQ">
              <object xmi:id="_2kurrNXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).object" incoming="_2kurhdXWEem1l5O0R0OWkQ" type="_2kurQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurrdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurrtXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_2kurr9XWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).result" outgoing="_2kurhtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kursNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kursdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kurstXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_2kurs9XWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_2kurhtXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurtNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurtdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kurttXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_2kurh9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurt9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kuruNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kurudXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_2kurutXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_2kuriNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kuru9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurvNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_2kurvdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kurvtXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_2kurv9XWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_2kurh9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurwNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurwdXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kurwtXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_2kuritXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurw9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurxNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kurxdXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_2kuriNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurxtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurx9XWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kuryNXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_2kuridXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kurydXWEem1l5O0R0OWkQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_2kuridXWEem1l5O0R0OWkQ _2kuritXWEem1l5O0R0OWkQ" outgoing="_2kuri9XWEem1l5O0R0OWkQ" decisionInputFlow="_2kuritXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_2kurytXWEem1l5O0R0OWkQ" name="Tester$initialization$1" visibility="protected" method="_2kurgdXWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_2kury9XWEem1l5O0R0OWkQ" name="Tester" visibility="public" method="_2kurRNXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_2kurzNXWEem1l5O0R0OWkQ" name="" visibility="package" type="_2kurQNXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kurzdXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kurztXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2kurz9XWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_2kurf9XWEem1l5O0R0OWkQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_2kur0NXWEem1l5O0R0OWkQ" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_2kur0dXWEem1l5O0R0OWkQ" name="Continue" signal="_2kur0NXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2kur0tXWEem1l5O0R0OWkQ" name="AssertTrue" visibility="public" node="_2kur5tXWEem1l5O0R0OWkQ _2kur59XWEem1l5O0R0OWkQ _2kur6NXWEem1l5O0R0OWkQ _2kur6dXWEem1l5O0R0OWkQ _2kur6tXWEem1l5O0R0OWkQ" group="_2kur6tXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_2kur09XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2kur1NXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2kur1dXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2kur1tXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2kur19XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2kur2NXWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kur2dXWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kur2tXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2kur29XWEem1l5O0R0OWkQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kur3NXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kur3dXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur3tXWEem1l5O0R0OWkQ" target="_2kur59XWEem1l5O0R0OWkQ" source="_2kur5tXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur39XWEem1l5O0R0OWkQ" target="_2kur6dXWEem1l5O0R0OWkQ" source="_2kur6NXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur4NXWEem1l5O0R0OWkQ" target="_2kusCNXWEem1l5O0R0OWkQ" source="_2kur6dXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur4dXWEem1l5O0R0OWkQ" target="_2kusMNXWEem1l5O0R0OWkQ" source="_2kur59XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur4tXWEem1l5O0R0OWkQ" target="_2kvQOtXWEem1l5O0R0OWkQ" source="_2kur6dXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur49XWEem1l5O0R0OWkQ" target="_2kvQQtXWEem1l5O0R0OWkQ" source="_2kur59XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur5NXWEem1l5O0R0OWkQ" target="_2kvQT9XWEem1l5O0R0OWkQ" source="_2kur6dXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur5dXWEem1l5O0R0OWkQ" target="_2kvQV9XWEem1l5O0R0OWkQ" source="_2kur59XWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_2kur6tXWEem1l5O0R0OWkQ" name="Body(AssertTrue)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur69XWEem1l5O0R0OWkQ" target="_2kvQZdXWEem1l5O0R0OWkQ" source="_2kvQX9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur7NXWEem1l5O0R0OWkQ" target="_2kvQZtXWEem1l5O0R0OWkQ" source="_2kvQYtXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_2kur7dXWEem1l5O0R0OWkQ" name="IfStatement@24a1c46a">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kur7tXWEem1l5O0R0OWkQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur79XWEem1l5O0R0OWkQ" target="_2kur_9XWEem1l5O0R0OWkQ" source="_2kusCNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur8NXWEem1l5O0R0OWkQ" target="_2kusCtXWEem1l5O0R0OWkQ" source="_2kusCNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur8dXWEem1l5O0R0OWkQ" target="_2kusENXWEem1l5O0R0OWkQ" source="_2kusDdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur8tXWEem1l5O0R0OWkQ" target="_2kusEdXWEem1l5O0R0OWkQ" source="_2kusAtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur89XWEem1l5O0R0OWkQ" target="_2kusEtXWEem1l5O0R0OWkQ" source="_2kusENXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur9NXWEem1l5O0R0OWkQ" target="_2kusEtXWEem1l5O0R0OWkQ" source="_2kusENXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur9dXWEem1l5O0R0OWkQ" target="_2kusEdXWEem1l5O0R0OWkQ" source="_2kusEtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kur9tXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur99XWEem1l5O0R0OWkQ" target="_2kusBdXWEem1l5O0R0OWkQ" source="_2kur-tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kur-NXWEem1l5O0R0OWkQ" target="_2kusFNXWEem1l5O0R0OWkQ" source="_2kusEdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kur-dXWEem1l5O0R0OWkQ" name="Value(true)">
              <result xmi:id="_2kur-tXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_2kur99XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kur-9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kur_NXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2kur_dXWEem1l5O0R0OWkQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kur_tXWEem1l5O0R0OWkQ" name="Test(==)">
              <first xmi:id="_2kur_9XWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_2kur79XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kusANXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kusAdXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kusAtXWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_2kur8tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kusA9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kusBNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kusBdXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_2kur99XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kusBtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kusB9XWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kusCNXWEem1l5O0R0OWkQ" name="Fork(Fork(condition))" incoming="_2kur4NXWEem1l5O0R0OWkQ" outgoing="_2kur79XWEem1l5O0R0OWkQ _2kur8NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kusCdXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_2kusCtXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2kur8NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kusC9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kusDNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kusDdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2kur8dXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kusDtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kusD9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kusENXWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_2kur8dXWEem1l5O0R0OWkQ" outgoing="_2kur89XWEem1l5O0R0OWkQ _2kur9NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2kusEdXWEem1l5O0R0OWkQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_2kur8tXWEem1l5O0R0OWkQ _2kur9dXWEem1l5O0R0OWkQ" outgoing="_2kur-NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kusEtXWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_2kur89XWEem1l5O0R0OWkQ _2kur9NXWEem1l5O0R0OWkQ" outgoing="_2kur9dXWEem1l5O0R0OWkQ" decisionInputFlow="_2kur9NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kusE9XWEem1l5O0R0OWkQ" name="Call(Not)">
              <argument xmi:id="_2kusFNXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_2kur-NXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kusFdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kusFtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2kusF9XWEem1l5O0R0OWkQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kusGNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kusGdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kusGtXWEem1l5O0R0OWkQ" name="ExpressionStatement@13f46837">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kusG9XWEem1l5O0R0OWkQ" target="_2kusHtXWEem1l5O0R0OWkQ" source="_2kusONXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kusHNXWEem1l5O0R0OWkQ" target="_2kusHdXWEem1l5O0R0OWkQ" source="_2kusJNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kusHdXWEem1l5O0R0OWkQ" name="Call(WriteLine)" incoming="_2kusHNXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2kusHtXWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_2kusG9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kusH9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kusINXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2kusIdXWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kusItXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kusI9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kusJNXWEem1l5O0R0OWkQ" name="Tuple@4d092a1b" outgoing="_2kusHNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kusJdXWEem1l5O0R0OWkQ" target="_2kusPNXWEem1l5O0R0OWkQ" source="_2kusKtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kusJtXWEem1l5O0R0OWkQ" target="_2kvQMtXWEem1l5O0R0OWkQ" source="_2kusM9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kusJ9XWEem1l5O0R0OWkQ" target="_2kusNtXWEem1l5O0R0OWkQ" source="_2kusKdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kusKNXWEem1l5O0R0OWkQ" target="_2kusNtXWEem1l5O0R0OWkQ" source="_2kusLtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kusKdXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;)" outgoing="_2kusJ9XWEem1l5O0R0OWkQ">
                <result xmi:id="_2kusKtXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_2kusJdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kusK9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kusLNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2kusLdXWEem1l5O0R0OWkQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kusLtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_2kusKNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kusL9XWEem1l5O0R0OWkQ" target="_2kusM9XWEem1l5O0R0OWkQ" source="_2kusMNXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2kusMNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2kur4dXWEem1l5O0R0OWkQ" outgoing="_2kusL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kusMdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kusMtXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2kusM9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2kusL9XWEem1l5O0R0OWkQ" outgoing="_2kusJtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kusNNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kusNdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kusNtXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2kusJ9XWEem1l5O0R0OWkQ _2kusKNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kusN9XWEem1l5O0R0OWkQ" target="_2kusONXWEem1l5O0R0OWkQ" source="_2kvQNdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2kusONXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2kusN9XWEem1l5O0R0OWkQ" outgoing="_2kusG9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kusOdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kusOtXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kusO9XWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_2kusPNXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2kusJdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQMNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQMdXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2kvQMtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2kusJtXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQM9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQNNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2kvQNdXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2kusN9XWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQNtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQN9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvQONXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQOdXWEem1l5O0R0OWkQ" target="_2kvQPdXWEem1l5O0R0OWkQ" source="_2kvQOtXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2kvQOtXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).input" incoming="_2kur4tXWEem1l5O0R0OWkQ" outgoing="_2kvQOdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQO9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQPNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2kvQPdXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).output" incoming="_2kvQOdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQPtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQP9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvQQNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQQdXWEem1l5O0R0OWkQ" target="_2kvQRdXWEem1l5O0R0OWkQ" source="_2kvQQtXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2kvQQtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2kur49XWEem1l5O0R0OWkQ" outgoing="_2kvQQdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQQ9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQRNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2kvQRdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2kvQQdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQRtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQR9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvQSNXWEem1l5O0R0OWkQ" name="Value(true)">
            <result xmi:id="_2kvQSdXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQStXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQS9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_2kvQTNXWEem1l5O0R0OWkQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvQTdXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQTtXWEem1l5O0R0OWkQ" target="_2kvQUtXWEem1l5O0R0OWkQ" source="_2kvQT9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2kvQT9XWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).input" incoming="_2kur5NXWEem1l5O0R0OWkQ" outgoing="_2kvQTtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQUNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQUdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2kvQUtXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).output" incoming="_2kvQTtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQU9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQVNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvQVdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQVtXWEem1l5O0R0OWkQ" target="_2kvQWtXWEem1l5O0R0OWkQ" source="_2kvQV9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2kvQV9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2kur5dXWEem1l5O0R0OWkQ" outgoing="_2kvQVtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQWNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQWdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2kvQWtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2kvQVtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQW9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQXNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_2kvQXdXWEem1l5O0R0OWkQ" body="_2kusGtXWEem1l5O0R0OWkQ _2kvQONXWEem1l5O0R0OWkQ _2kvQQNXWEem1l5O0R0OWkQ" bodyOutput="_2kvQPdXWEem1l5O0R0OWkQ _2kvQRdXWEem1l5O0R0OWkQ" decider="_2kusF9XWEem1l5O0R0OWkQ" successorClause="_2kvQXtXWEem1l5O0R0OWkQ" test="_2kur7tXWEem1l5O0R0OWkQ"/>
          <clause xmi:id="_2kvQXtXWEem1l5O0R0OWkQ" body="_2kvQTdXWEem1l5O0R0OWkQ _2kvQVdXWEem1l5O0R0OWkQ" bodyOutput="_2kvQUtXWEem1l5O0R0OWkQ _2kvQWtXWEem1l5O0R0OWkQ" decider="_2kvQSdXWEem1l5O0R0OWkQ" predecessorClause="_2kvQXdXWEem1l5O0R0OWkQ" test="_2kvQSNXWEem1l5O0R0OWkQ"/>
          <result xmi:id="_2kvQX9XWEem1l5O0R0OWkQ" name="IfStatement@24a1c46a.result(condition)" outgoing="_2kur69XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQYNXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQYdXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_2kvQYtXWEem1l5O0R0OWkQ" name="IfStatement@24a1c46a.result(label)" outgoing="_2kur7NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQY9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQZNXWEem1l5O0R0OWkQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_2kvQZdXWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_2kur69XWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2kvQZtXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2kur7NXWEem1l5O0R0OWkQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kur5tXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_2kur3tXWEem1l5O0R0OWkQ" parameter="_2kur2NXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2kur59XWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2kur3tXWEem1l5O0R0OWkQ" outgoing="_2kur4dXWEem1l5O0R0OWkQ _2kur49XWEem1l5O0R0OWkQ _2kur5dXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kur6NXWEem1l5O0R0OWkQ" name="Input(condition)" outgoing="_2kur39XWEem1l5O0R0OWkQ" parameter="_2kur29XWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2kur6dXWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_2kur39XWEem1l5O0R0OWkQ" outgoing="_2kur4NXWEem1l5O0R0OWkQ _2kur4tXWEem1l5O0R0OWkQ _2kur5NXWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2kvQZ9XWEem1l5O0R0OWkQ" name="AssertFalse" visibility="public" node="_2kvQeNXWEem1l5O0R0OWkQ _2kvQedXWEem1l5O0R0OWkQ _2kvQetXWEem1l5O0R0OWkQ _2kvQe9XWEem1l5O0R0OWkQ _2kvQfNXWEem1l5O0R0OWkQ" group="_2kvQfNXWEem1l5O0R0OWkQ">
      <elementImport xmi:id="_2kvQaNXWEem1l5O0R0OWkQ" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_2kvQadXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2kvQatXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2kvQa9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2kvQbNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2kvQbdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2kvQbtXWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQb9XWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQcNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2kvQcdXWEem1l5O0R0OWkQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQctXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQc9XWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQdNXWEem1l5O0R0OWkQ" target="_2kvQedXWEem1l5O0R0OWkQ" source="_2kvQeNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQddXWEem1l5O0R0OWkQ" target="_2kvQe9XWEem1l5O0R0OWkQ" source="_2kvQetXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQdtXWEem1l5O0R0OWkQ" target="_2kvQndXWEem1l5O0R0OWkQ" source="_2kvQedXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQd9XWEem1l5O0R0OWkQ" target="_2kvQwdXWEem1l5O0R0OWkQ" source="_2kvQe9XWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_2kvQfNXWEem1l5O0R0OWkQ" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvQfdXWEem1l5O0R0OWkQ" name="ExpressionStatement@13dae445">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQftXWEem1l5O0R0OWkQ" target="_2kvQgtXWEem1l5O0R0OWkQ" source="_2kvQpdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQf9XWEem1l5O0R0OWkQ" target="_2kvQhdXWEem1l5O0R0OWkQ" source="_2kvQytXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2kvQgNXWEem1l5O0R0OWkQ" target="_2kvQgdXWEem1l5O0R0OWkQ" source="_2kvQiNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvQgdXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_2kvQgNXWEem1l5O0R0OWkQ" behavior="_2kur0tXWEem1l5O0R0OWkQ">
            <argument xmi:id="_2kvQgtXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_2kvQftXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQg9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQhNXWEem1l5O0R0OWkQ" value="1"/>
            </argument>
            <argument xmi:id="_2kvQhdXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_2kvQf9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQhtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQh9XWEem1l5O0R0OWkQ" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvQiNXWEem1l5O0R0OWkQ" name="Tuple@3ed44fbb" outgoing="_2kvQgNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQidXWEem1l5O0R0OWkQ" target="_2kvQqdXWEem1l5O0R0OWkQ" source="_2kvQl9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQitXWEem1l5O0R0OWkQ" target="_2kvQrNXWEem1l5O0R0OWkQ" source="_2kvQoNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kvQi9XWEem1l5O0R0OWkQ" target="_2kvQo9XWEem1l5O0R0OWkQ" source="_2kvQltXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kvQjNXWEem1l5O0R0OWkQ" target="_2kvQo9XWEem1l5O0R0OWkQ" source="_2kvQm9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQjdXWEem1l5O0R0OWkQ" target="_2kvQuNXWEem1l5O0R0OWkQ" source="_2kvQwdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQjtXWEem1l5O0R0OWkQ" target="_2kvQw9XWEem1l5O0R0OWkQ" source="_2kvQwdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQj9XWEem1l5O0R0OWkQ" target="_2kvQydXWEem1l5O0R0OWkQ" source="_2kvQxtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQkNXWEem1l5O0R0OWkQ" target="_2kvQytXWEem1l5O0R0OWkQ" source="_2kvQu9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQkdXWEem1l5O0R0OWkQ" target="_2kvQy9XWEem1l5O0R0OWkQ" source="_2kvQydXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQktXWEem1l5O0R0OWkQ" target="_2kvQy9XWEem1l5O0R0OWkQ" source="_2kvQydXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQk9XWEem1l5O0R0OWkQ" target="_2kvQytXWEem1l5O0R0OWkQ" source="_2kvQy9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kvQlNXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQldXWEem1l5O0R0OWkQ" target="_2kvQvtXWEem1l5O0R0OWkQ" source="_2kvQs9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvQltXWEem1l5O0R0OWkQ" name="Value(&quot;! &quot;)" outgoing="_2kvQi9XWEem1l5O0R0OWkQ">
              <result xmi:id="_2kvQl9XWEem1l5O0R0OWkQ" name="Value(&quot;! &quot;).result" outgoing="_2kvQidXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQmNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQmdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_2kvQmtXWEem1l5O0R0OWkQ" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvQm9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_2kvQjNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQnNXWEem1l5O0R0OWkQ" target="_2kvQoNXWEem1l5O0R0OWkQ" source="_2kvQndXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2kvQndXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2kvQdtXWEem1l5O0R0OWkQ" outgoing="_2kvQnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQntXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQn9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2kvQoNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2kvQnNXWEem1l5O0R0OWkQ" outgoing="_2kvQitXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQodXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQotXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvQo9XWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2kvQi9XWEem1l5O0R0OWkQ _2kvQjNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQpNXWEem1l5O0R0OWkQ" target="_2kvQpdXWEem1l5O0R0OWkQ" source="_2kvQr9XWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_2kvQpdXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2kvQpNXWEem1l5O0R0OWkQ" outgoing="_2kvQftXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQptXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQp9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvQqNXWEem1l5O0R0OWkQ" name="Call(Concat)">
                <argument xmi:id="_2kvQqdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2kvQidXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQqtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQq9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_2kvQrNXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2kvQitXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQrdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQrtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_2kvQr9XWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2kvQpNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQsNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQsdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvQstXWEem1l5O0R0OWkQ" name="Value(false)">
              <result xmi:id="_2kvQs9XWEem1l5O0R0OWkQ" name="Value(false).result" outgoing="_2kvQldXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQtNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQtdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2kvQttXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kvQt9XWEem1l5O0R0OWkQ" name="Test(==)">
              <first xmi:id="_2kvQuNXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_2kvQjdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQudXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQutXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kvQu9XWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_2kvQkNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQvNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQvdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kvQvtXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_2kvQldXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQv9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQwNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kvQwdXWEem1l5O0R0OWkQ" name="Fork(Fork(condition))" incoming="_2kvQd9XWEem1l5O0R0OWkQ" outgoing="_2kvQjdXWEem1l5O0R0OWkQ _2kvQjtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvQwtXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_2kvQw9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2kvQjtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQxNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQxdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kvQxtXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2kvQj9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQx9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQyNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kvQydXWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_2kvQj9XWEem1l5O0R0OWkQ" outgoing="_2kvQkdXWEem1l5O0R0OWkQ _2kvQktXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2kvQytXWEem1l5O0R0OWkQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_2kvQkNXWEem1l5O0R0OWkQ _2kvQk9XWEem1l5O0R0OWkQ" outgoing="_2kvQf9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kvQy9XWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_2kvQkdXWEem1l5O0R0OWkQ _2kvQktXWEem1l5O0R0OWkQ" outgoing="_2kvQk9XWEem1l5O0R0OWkQ" decisionInputFlow="_2kvQktXWEem1l5O0R0OWkQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kvQeNXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_2kvQdNXWEem1l5O0R0OWkQ" parameter="_2kvQbtXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2kvQedXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2kvQdNXWEem1l5O0R0OWkQ" outgoing="_2kvQdtXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kvQetXWEem1l5O0R0OWkQ" name="Input(condition)" outgoing="_2kvQddXWEem1l5O0R0OWkQ" parameter="_2kvQcdXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2kvQe9XWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_2kvQddXWEem1l5O0R0OWkQ" outgoing="_2kvQd9XWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2kvQzNXWEem1l5O0R0OWkQ" name="AssertEqual" visibility="public" node="_2kvQ7NXWEem1l5O0R0OWkQ _2kvQ7dXWEem1l5O0R0OWkQ _2kvQ7tXWEem1l5O0R0OWkQ _2kvQ79XWEem1l5O0R0OWkQ _2kvQ8NXWEem1l5O0R0OWkQ _2kvQ8dXWEem1l5O0R0OWkQ _2kvQ8tXWEem1l5O0R0OWkQ" group="_2kvQ8tXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_2kvQzdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2kvQztXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2kvQz9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2kvQ0NXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2kvQ0dXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2kvQ0tXWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQ09XWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQ1NXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2kvQ1dXWEem1l5O0R0OWkQ" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQ1tXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQ19XWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_2kvQ2NXWEem1l5O0R0OWkQ" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvQ2dXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvQ2tXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ29XWEem1l5O0R0OWkQ" target="_2kvQ7dXWEem1l5O0R0OWkQ" source="_2kvQ7NXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ3NXWEem1l5O0R0OWkQ" target="_2kvQ79XWEem1l5O0R0OWkQ" source="_2kvQ7tXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ3dXWEem1l5O0R0OWkQ" target="_2kvQ8dXWEem1l5O0R0OWkQ" source="_2kvQ8NXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ3tXWEem1l5O0R0OWkQ" target="_2kvRKdXWEem1l5O0R0OWkQ" source="_2kvQ79XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ39XWEem1l5O0R0OWkQ" target="_2kvRMdXWEem1l5O0R0OWkQ" source="_2kvQ8dXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ4NXWEem1l5O0R0OWkQ" target="_2kvRa9XWEem1l5O0R0OWkQ" source="_2kvQ7dXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ4dXWEem1l5O0R0OWkQ" target="_2kvRqtXWEem1l5O0R0OWkQ" source="_2kvQ8dXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ4tXWEem1l5O0R0OWkQ" target="_2kvR_tXWEem1l5O0R0OWkQ" source="_2kvQ7dXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ49XWEem1l5O0R0OWkQ" target="_2kvSDtXWEem1l5O0R0OWkQ" source="_2kvQ8dXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ5NXWEem1l5O0R0OWkQ" target="_2kvSFtXWEem1l5O0R0OWkQ" source="_2kvQ79XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ5dXWEem1l5O0R0OWkQ" target="_2kvSNdXWEem1l5O0R0OWkQ" source="_2kvQ8dXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ5tXWEem1l5O0R0OWkQ" target="_2kvSWNXWEem1l5O0R0OWkQ" source="_2kvQ7dXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ59XWEem1l5O0R0OWkQ" target="_2kvSaNXWEem1l5O0R0OWkQ" source="_2kvQ8dXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ6NXWEem1l5O0R0OWkQ" target="_2kvScNXWEem1l5O0R0OWkQ" source="_2kvQ79XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ6dXWEem1l5O0R0OWkQ" target="_2kvSv9XWEem1l5O0R0OWkQ" source="_2kvQ7dXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ6tXWEem1l5O0R0OWkQ" target="_2kvSzNXWEem1l5O0R0OWkQ" source="_2kvQ8dXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ69XWEem1l5O0R0OWkQ" target="_2kvS1NXWEem1l5O0R0OWkQ" source="_2kvQ79XWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_2kvQ8tXWEem1l5O0R0OWkQ" name="Body(AssertEqual)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ89XWEem1l5O0R0OWkQ" target="_2kvS6NXWEem1l5O0R0OWkQ" source="_2kvS3NXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ9NXWEem1l5O0R0OWkQ" target="_2kvS6dXWEem1l5O0R0OWkQ" source="_2kvS39XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ9dXWEem1l5O0R0OWkQ" target="_2kvS6tXWEem1l5O0R0OWkQ" source="_2kvS4tXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ9tXWEem1l5O0R0OWkQ" target="_2kvS69XWEem1l5O0R0OWkQ" source="_2kvS5dXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_2kvQ99XWEem1l5O0R0OWkQ" name="IfStatement@41da206e">
          <edge xmi:type="uml:ControlFlow" xmi:id="_2kvQ-NXWEem1l5O0R0OWkQ" target="_2kvRlNXWEem1l5O0R0OWkQ" source="_2kvRVNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ-dXWEem1l5O0R0OWkQ" target="_2kvShNXWEem1l5O0R0OWkQ" source="_2kvSeNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ-tXWEem1l5O0R0OWkQ" target="_2kvShdXWEem1l5O0R0OWkQ" source="_2kvSe9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ-9XWEem1l5O0R0OWkQ" target="_2kvShtXWEem1l5O0R0OWkQ" source="_2kvSftXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ_NXWEem1l5O0R0OWkQ" target="_2kvSh9XWEem1l5O0R0OWkQ" source="_2kvSgdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ_dXWEem1l5O0R0OWkQ" target="_2kvRttXWEem1l5O0R0OWkQ" source="_2kvRltXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ_tXWEem1l5O0R0OWkQ" target="_2kvR09XWEem1l5O0R0OWkQ" source="_2kvRltXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvQ_9XWEem1l5O0R0OWkQ" target="_2kvSBtXWEem1l5O0R0OWkQ" source="_2kvRltXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRANXWEem1l5O0R0OWkQ" target="_2kvSYNXWEem1l5O0R0OWkQ" source="_2kvRltXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRAdXWEem1l5O0R0OWkQ" target="_2kvRrNXWEem1l5O0R0OWkQ" source="_2kvRlNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRAtXWEem1l5O0R0OWkQ" target="_2kvSiNXWEem1l5O0R0OWkQ" source="_2kvRrNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRA9XWEem1l5O0R0OWkQ" target="_2kvSmtXWEem1l5O0R0OWkQ" source="_2kvShNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRBNXWEem1l5O0R0OWkQ" target="_2kvSotXWEem1l5O0R0OWkQ" source="_2kvShdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRBdXWEem1l5O0R0OWkQ" target="_2kvSqtXWEem1l5O0R0OWkQ" source="_2kvShtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRBtXWEem1l5O0R0OWkQ" target="_2kvSstXWEem1l5O0R0OWkQ" source="_2kvSh9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvRB9XWEem1l5O0R0OWkQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRCNXWEem1l5O0R0OWkQ" target="_2kvRINXWEem1l5O0R0OWkQ" source="_2kvRKdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRCdXWEem1l5O0R0OWkQ" target="_2kvRK9XWEem1l5O0R0OWkQ" source="_2kvRKdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRCtXWEem1l5O0R0OWkQ" target="_2kvRJtXWEem1l5O0R0OWkQ" source="_2kvRMdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRC9XWEem1l5O0R0OWkQ" target="_2kvRM9XWEem1l5O0R0OWkQ" source="_2kvRMdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRDNXWEem1l5O0R0OWkQ" target="_2kvROtXWEem1l5O0R0OWkQ" source="_2kvRLtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRDdXWEem1l5O0R0OWkQ" target="_2kvRO9XWEem1l5O0R0OWkQ" source="_2kvRNtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRDtXWEem1l5O0R0OWkQ" target="_2kvRPdXWEem1l5O0R0OWkQ" source="_2kvROtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRD9XWEem1l5O0R0OWkQ" target="_2kvRRNXWEem1l5O0R0OWkQ" source="_2kvRO9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRENXWEem1l5O0R0OWkQ" target="_2kvRStXWEem1l5O0R0OWkQ" source="_2kvRO9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kvREdXWEem1l5O0R0OWkQ" target="_2kvRH9XWEem1l5O0R0OWkQ" source="_2kvRStXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kvREtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRE9XWEem1l5O0R0OWkQ" target="_2kvRPNXWEem1l5O0R0OWkQ" source="_2kvRStXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kvRFNXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRFdXWEem1l5O0R0OWkQ" target="_2kvRS9XWEem1l5O0R0OWkQ" source="_2kvROdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRFtXWEem1l5O0R0OWkQ" target="_2kvRS9XWEem1l5O0R0OWkQ" source="_2kvROtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRF9XWEem1l5O0R0OWkQ" target="_2kvRStXWEem1l5O0R0OWkQ" source="_2kvRS9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kvRGNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRGdXWEem1l5O0R0OWkQ" target="_2kvRQ9XWEem1l5O0R0OWkQ" source="_2kvRS9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kvRGtXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRG9XWEem1l5O0R0OWkQ" target="_2kvRTNXWEem1l5O0R0OWkQ" source="_2kvRI9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRHNXWEem1l5O0R0OWkQ" target="_2kvRTNXWEem1l5O0R0OWkQ" source="_2kvRQNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRHdXWEem1l5O0R0OWkQ" target="_2kvRTNXWEem1l5O0R0OWkQ" source="_2kvRR9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRHtXWEem1l5O0R0OWkQ" target="_2kvRTtXWEem1l5O0R0OWkQ" source="_2kvRTNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_2kvRH9XWEem1l5O0R0OWkQ" name="Test(==)" incoming="_2kvREdXWEem1l5O0R0OWkQ">
              <first xmi:id="_2kvRINXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_2kvRCNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRIdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRItXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_2kvRI9XWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_2kvRG9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRJNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRJdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_2kvRJtXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_2kvRCtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRJ9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRKNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kvRKdXWEem1l5O0R0OWkQ" name="Fork(Fork(value1))" incoming="_2kvQ3tXWEem1l5O0R0OWkQ" outgoing="_2kvRCNXWEem1l5O0R0OWkQ _2kvRCdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvRKtXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_2kvRK9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2kvRCdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRLNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRLdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kvRLtXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2kvRDNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRL9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRMNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kvRMdXWEem1l5O0R0OWkQ" name="Fork(Fork(value2))" incoming="_2kvQ39XWEem1l5O0R0OWkQ" outgoing="_2kvRCtXWEem1l5O0R0OWkQ _2kvRC9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvRMtXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_2kvRM9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2kvRC9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRNNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRNdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_2kvRNtXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2kvRDdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRN9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRONXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_2kvROdXWEem1l5O0R0OWkQ" name="Initial(Test(==))" outgoing="_2kvRFdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2kvROtXWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_2kvRDNXWEem1l5O0R0OWkQ" outgoing="_2kvRDtXWEem1l5O0R0OWkQ _2kvRFtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2kvRO9XWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_2kvRDdXWEem1l5O0R0OWkQ" outgoing="_2kvRD9XWEem1l5O0R0OWkQ _2kvRENXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvRPNXWEem1l5O0R0OWkQ" name="Call(Not)" incoming="_2kvRE9XWEem1l5O0R0OWkQ">
              <argument xmi:id="_2kvRPdXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_2kvRDtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRPtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRP9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2kvRQNXWEem1l5O0R0OWkQ" name="Call(Not).result(result)" outgoing="_2kvRHNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRQdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRQtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvRQ9XWEem1l5O0R0OWkQ" name="Call(Not)" incoming="_2kvRGdXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2kvRRNXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_2kvRD9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRRdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRRtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2kvRR9XWEem1l5O0R0OWkQ" name="Call(Not).result(result)" outgoing="_2kvRHdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRSNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRSdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kvRStXWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_2kvRENXWEem1l5O0R0OWkQ _2kvRF9XWEem1l5O0R0OWkQ" outgoing="_2kvREdXWEem1l5O0R0OWkQ _2kvRE9XWEem1l5O0R0OWkQ" decisionInputFlow="_2kvRENXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_2kvRS9XWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_2kvRFdXWEem1l5O0R0OWkQ _2kvRFtXWEem1l5O0R0OWkQ" outgoing="_2kvRF9XWEem1l5O0R0OWkQ _2kvRGdXWEem1l5O0R0OWkQ" decisionInputFlow="_2kvRFtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_2kvRTNXWEem1l5O0R0OWkQ" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_2kvRG9XWEem1l5O0R0OWkQ _2kvRHNXWEem1l5O0R0OWkQ _2kvRHdXWEem1l5O0R0OWkQ" outgoing="_2kvRHtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvRTdXWEem1l5O0R0OWkQ" name="Call(Not)">
              <argument xmi:id="_2kvRTtXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_2kvRHtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRT9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRUNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2kvRUdXWEem1l5O0R0OWkQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRUtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRU9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvRVNXWEem1l5O0R0OWkQ" name="ExpressionStatement@9ab59cc" outgoing="_2kvQ-NXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRVdXWEem1l5O0R0OWkQ" target="_2kvRWNXWEem1l5O0R0OWkQ" source="_2kvRh9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRVtXWEem1l5O0R0OWkQ" target="_2kvRV9XWEem1l5O0R0OWkQ" source="_2kvRW9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvRV9XWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_2kvRVtXWEem1l5O0R0OWkQ" behavior="_2kvS7NXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2kvRWNXWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_2kvRVdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRWdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRWtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvRW9XWEem1l5O0R0OWkQ" name="Tuple@14adb3e8" outgoing="_2kvRVtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRXNXWEem1l5O0R0OWkQ" target="_2kvRd9XWEem1l5O0R0OWkQ" source="_2kvRZdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRXdXWEem1l5O0R0OWkQ" target="_2kvRetXWEem1l5O0R0OWkQ" source="_2kvRbtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRXtXWEem1l5O0R0OWkQ" target="_2kvRcdXWEem1l5O0R0OWkQ" source="_2kvRZNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRX9XWEem1l5O0R0OWkQ" target="_2kvRcdXWEem1l5O0R0OWkQ" source="_2kvRadXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRYNXWEem1l5O0R0OWkQ" target="_2kvRi9XWEem1l5O0R0OWkQ" source="_2kvRc9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRYdXWEem1l5O0R0OWkQ" target="_2kvRjtXWEem1l5O0R0OWkQ" source="_2kvRgdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRYtXWEem1l5O0R0OWkQ" target="_2kvRhdXWEem1l5O0R0OWkQ" source="_2kvRcdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRY9XWEem1l5O0R0OWkQ" target="_2kvRhdXWEem1l5O0R0OWkQ" source="_2kvRgNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvRZNXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;)" outgoing="_2kvRXtXWEem1l5O0R0OWkQ">
                <result xmi:id="_2kvRZdXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_2kvRXNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRZtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRZ9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2kvRaNXWEem1l5O0R0OWkQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvRadXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_2kvRX9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRatXWEem1l5O0R0OWkQ" target="_2kvRbtXWEem1l5O0R0OWkQ" source="_2kvRa9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_2kvRa9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2kvQ4NXWEem1l5O0R0OWkQ" outgoing="_2kvRatXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRbNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRbdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_2kvRbtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2kvRatXWEem1l5O0R0OWkQ" outgoing="_2kvRXdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRb9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRcNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvRcdXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2kvRXtXWEem1l5O0R0OWkQ _2kvRX9XWEem1l5O0R0OWkQ" outgoing="_2kvRYtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRctXWEem1l5O0R0OWkQ" target="_2kvRc9XWEem1l5O0R0OWkQ" source="_2kvRfdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2kvRc9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2kvRctXWEem1l5O0R0OWkQ" outgoing="_2kvRYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRdNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRddXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvRdtXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_2kvRd9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2kvRXNXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvReNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRedXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2kvRetXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2kvRXdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRe9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRfNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2kvRfdXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2kvRctXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRftXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRf9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvRgNXWEem1l5O0R0OWkQ" name="Value(&quot;==&quot;)" outgoing="_2kvRY9XWEem1l5O0R0OWkQ">
                <result xmi:id="_2kvRgdXWEem1l5O0R0OWkQ" name="Value(&quot;==&quot;).result" outgoing="_2kvRYdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRgtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRg9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2kvRhNXWEem1l5O0R0OWkQ" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvRhdXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2kvRYtXWEem1l5O0R0OWkQ _2kvRY9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRhtXWEem1l5O0R0OWkQ" target="_2kvRh9XWEem1l5O0R0OWkQ" source="_2kvRkdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2kvRh9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2kvRhtXWEem1l5O0R0OWkQ" outgoing="_2kvRVdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRiNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRidXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvRitXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_2kvRi9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2kvRYNXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRjNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRjdXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_2kvRjtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2kvRYdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRj9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRkNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_2kvRkdXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2kvRhtXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRktXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRk9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvRlNXWEem1l5O0R0OWkQ" name="ExpressionStatement@56bb08f6" incoming="_2kvQ-NXWEem1l5O0R0OWkQ" outgoing="_2kvRAdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRldXWEem1l5O0R0OWkQ" target="_2kvRltXWEem1l5O0R0OWkQ" source="_2kvRq9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_2kvRltXWEem1l5O0R0OWkQ" name="Fork(s)@18805dff" incoming="_2kvRldXWEem1l5O0R0OWkQ" outgoing="_2kvQ_dXWEem1l5O0R0OWkQ _2kvQ_tXWEem1l5O0R0OWkQ _2kvQ_9XWEem1l5O0R0OWkQ _2kvRANXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvRl9XWEem1l5O0R0OWkQ" name="RightHandSide@23803141">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_2kvRmNXWEem1l5O0R0OWkQ" name="CastExpression@23803141" mode="parallel" outputElement="_2kvRq9XWEem1l5O0R0OWkQ" inputElement="_2kvRqtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRmdXWEem1l5O0R0OWkQ" target="_2kvRotXWEem1l5O0R0OWkQ" source="_2kvRqNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRmtXWEem1l5O0R0OWkQ" target="_2kvRqdXWEem1l5O0R0OWkQ" source="_2kvRqNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRm9XWEem1l5O0R0OWkQ" target="_2kvRqdXWEem1l5O0R0OWkQ" source="_2kvRpdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRnNXWEem1l5O0R0OWkQ" target="_2kvRoNXWEem1l5O0R0OWkQ" source="_2kvRqdXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kvRndXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRntXWEem1l5O0R0OWkQ" target="_2kvRqNXWEem1l5O0R0OWkQ" source="_2kvRqtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRn9XWEem1l5O0R0OWkQ" target="_2kvRq9XWEem1l5O0R0OWkQ" source="_2kvRoNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2kvRoNXWEem1l5O0R0OWkQ" name="Merge(CastExpression@23803141.operand)" incoming="_2kvRnNXWEem1l5O0R0OWkQ" outgoing="_2kvRn9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_2kvRodXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_2kvRotXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String).object" incoming="_2kvRmdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRo9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRpNXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_2kvRpdXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String).result" outgoing="_2kvRm9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRptXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRp9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_2kvRqNXWEem1l5O0R0OWkQ" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_2kvRntXWEem1l5O0R0OWkQ" outgoing="_2kvRmdXWEem1l5O0R0OWkQ _2kvRmtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2kvRqdXWEem1l5O0R0OWkQ" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_2kvRmtXWEem1l5O0R0OWkQ _2kvRm9XWEem1l5O0R0OWkQ" outgoing="_2kvRnNXWEem1l5O0R0OWkQ" decisionInputFlow="_2kvRm9XWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2kvRqtXWEem1l5O0R0OWkQ" name="CastExpression@23803141.inputElement" incoming="_2kvQ4dXWEem1l5O0R0OWkQ" outgoing="_2kvRntXWEem1l5O0R0OWkQ" regionAsInput="_2kvRmNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_2kvRq9XWEem1l5O0R0OWkQ" name="CastExpression@23803141.outputElement" incoming="_2kvRn9XWEem1l5O0R0OWkQ" outgoing="_2kvRldXWEem1l5O0R0OWkQ" regionAsOutput="_2kvRmNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_2kvRrNXWEem1l5O0R0OWkQ" name="IfStatement@58465241" incoming="_2kvRAdXWEem1l5O0R0OWkQ" outgoing="_2kvRAtXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvRrdXWEem1l5O0R0OWkQ" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRrtXWEem1l5O0R0OWkQ" target="_2kvRtdXWEem1l5O0R0OWkQ" source="_2kvRr9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvRr9XWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@31424101)" outgoing="_2kvRrtXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvRsNXWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_2kvRsdXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRstXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRs9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2kvRtNXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvRtdXWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_2kvRrtXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kvRttXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2kvQ_dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRt9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRuNXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_2kvRudXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRutXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRu9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvRvNXWEem1l5O0R0OWkQ" name="ExpressionStatement@72e8928a">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRvdXWEem1l5O0R0OWkQ" target="_2kvRwNXWEem1l5O0R0OWkQ" source="_2kvR79XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRvtXWEem1l5O0R0OWkQ" target="_2kvRv9XWEem1l5O0R0OWkQ" source="_2kvRw9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvRv9XWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_2kvRvtXWEem1l5O0R0OWkQ" behavior="_2kvS7NXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kvRwNXWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_2kvRvdXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRwdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRwtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvRw9XWEem1l5O0R0OWkQ" name="Tuple@5dda2698" outgoing="_2kvRvtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRxNXWEem1l5O0R0OWkQ" target="_2kvR39XWEem1l5O0R0OWkQ" source="_2kvRzdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRxdXWEem1l5O0R0OWkQ" target="_2kvR4tXWEem1l5O0R0OWkQ" source="_2kvR1tXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRxtXWEem1l5O0R0OWkQ" target="_2kvR2dXWEem1l5O0R0OWkQ" source="_2kvRzNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRx9XWEem1l5O0R0OWkQ" target="_2kvR2dXWEem1l5O0R0OWkQ" source="_2kvR0dXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRyNXWEem1l5O0R0OWkQ" target="_2kvR89XWEem1l5O0R0OWkQ" source="_2kvR29XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvRydXWEem1l5O0R0OWkQ" target="_2kvR9tXWEem1l5O0R0OWkQ" source="_2kvR6dXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRytXWEem1l5O0R0OWkQ" target="_2kvR7dXWEem1l5O0R0OWkQ" source="_2kvR2dXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2kvRy9XWEem1l5O0R0OWkQ" target="_2kvR7dXWEem1l5O0R0OWkQ" source="_2kvR6NXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvRzNXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;)" outgoing="_2kvRxtXWEem1l5O0R0OWkQ">
                  <result xmi:id="_2kvRzdXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;).result" outgoing="_2kvRxNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvRztXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvRz9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kvR0NXWEem1l5O0R0OWkQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvR0dXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@18805dff)" outgoing="_2kvRx9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvR0tXWEem1l5O0R0OWkQ" target="_2kvR1tXWEem1l5O0R0OWkQ" source="_2kvR09XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_2kvR09XWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@18805dff).input" incoming="_2kvQ_tXWEem1l5O0R0OWkQ" outgoing="_2kvR0tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvR1NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvR1dXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_2kvR1tXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@18805dff).output" incoming="_2kvR0tXWEem1l5O0R0OWkQ" outgoing="_2kvRxdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvR19XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvR2NXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvR2dXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2kvRxtXWEem1l5O0R0OWkQ _2kvRx9XWEem1l5O0R0OWkQ" outgoing="_2kvRytXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvR2tXWEem1l5O0R0OWkQ" target="_2kvR29XWEem1l5O0R0OWkQ" source="_2kvR5dXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2kvR29XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2kvR2tXWEem1l5O0R0OWkQ" outgoing="_2kvRyNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvR3NXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvR3dXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvR3tXWEem1l5O0R0OWkQ" name="Call(Concat)">
                    <argument xmi:id="_2kvR39XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2kvRxNXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvR4NXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvR4dXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <argument xmi:id="_2kvR4tXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2kvRxdXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvR49XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvR5NXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_2kvR5dXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2kvR2tXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvR5tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvR59XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvR6NXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;)" outgoing="_2kvRy9XWEem1l5O0R0OWkQ">
                  <result xmi:id="_2kvR6dXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;).result" outgoing="_2kvRydXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvR6tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvR69XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kvR7NXWEem1l5O0R0OWkQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvR7dXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_2kvRytXWEem1l5O0R0OWkQ _2kvRy9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvR7tXWEem1l5O0R0OWkQ" target="_2kvR79XWEem1l5O0R0OWkQ" source="_2kvR-dXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2kvR79XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_2kvR7tXWEem1l5O0R0OWkQ" outgoing="_2kvRvdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvR8NXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvR8dXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvR8tXWEem1l5O0R0OWkQ" name="Call(Concat)">
                    <argument xmi:id="_2kvR89XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_2kvRyNXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvR9NXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvR9dXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <argument xmi:id="_2kvR9tXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_2kvRydXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvR99XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvR-NXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_2kvR-dXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_2kvR7tXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvR-tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvR-9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvR_NXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvR_dXWEem1l5O0R0OWkQ" target="_2kvSAdXWEem1l5O0R0OWkQ" source="_2kvR_tXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2kvR_tXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2kvQ4tXWEem1l5O0R0OWkQ" outgoing="_2kvR_dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvR_9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSANXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2kvSAdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2kvR_dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSAtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSA9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSBNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@18805dff)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSBdXWEem1l5O0R0OWkQ" target="_2kvSCdXWEem1l5O0R0OWkQ" source="_2kvSBtXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2kvSBtXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@18805dff).input" incoming="_2kvQ_9XWEem1l5O0R0OWkQ" outgoing="_2kvSBdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSB9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSCNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2kvSCdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@18805dff).output" incoming="_2kvSBdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSCtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSC9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSDNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSDdXWEem1l5O0R0OWkQ" target="_2kvSEdXWEem1l5O0R0OWkQ" source="_2kvSDtXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2kvSDtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_2kvQ49XWEem1l5O0R0OWkQ" outgoing="_2kvSDdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSD9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSENXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2kvSEdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_2kvSDdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSEtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSE9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSFNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSFdXWEem1l5O0R0OWkQ" target="_2kvSGdXWEem1l5O0R0OWkQ" source="_2kvSFtXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2kvSFtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_2kvQ5NXWEem1l5O0R0OWkQ" outgoing="_2kvSFdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSF9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSGNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2kvSGdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_2kvSFdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSGtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSG9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvSHNXWEem1l5O0R0OWkQ" name="Value(true)">
              <result xmi:id="_2kvSHdXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSHtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSH9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_2kvSINXWEem1l5O0R0OWkQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSIdXWEem1l5O0R0OWkQ" name="ExpressionStatement@287c8757">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSItXWEem1l5O0R0OWkQ" target="_2kvSJdXWEem1l5O0R0OWkQ" source="_2kvSVdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kvSI9XWEem1l5O0R0OWkQ" target="_2kvSJNXWEem1l5O0R0OWkQ" source="_2kvSKNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvSJNXWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_2kvSI9XWEem1l5O0R0OWkQ" behavior="_2kvS7NXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kvSJdXWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_2kvSItXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSJtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSJ9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSKNXWEem1l5O0R0OWkQ" name="Tuple@647e2687" outgoing="_2kvSI9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSKdXWEem1l5O0R0OWkQ" target="_2kvSPdXWEem1l5O0R0OWkQ" source="_2kvSNdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2kvSKtXWEem1l5O0R0OWkQ" target="_2kvSPNXWEem1l5O0R0OWkQ" source="_2kvSNNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSK9XWEem1l5O0R0OWkQ" target="_2kvSSNXWEem1l5O0R0OWkQ" source="_2kvSNdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2kvSLNXWEem1l5O0R0OWkQ" target="_2kvSVNXWEem1l5O0R0OWkQ" source="_2kvSU9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSLdXWEem1l5O0R0OWkQ" target="_2kvSVNXWEem1l5O0R0OWkQ" source="_2kvSQNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2kvSLtXWEem1l5O0R0OWkQ" target="_2kvSQ9XWEem1l5O0R0OWkQ" source="_2kvSVNXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kvSL9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_2kvSMNXWEem1l5O0R0OWkQ" target="_2kvSSdXWEem1l5O0R0OWkQ" source="_2kvSVNXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kvSMdXWEem1l5O0R0OWkQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSMtXWEem1l5O0R0OWkQ" target="_2kvSVdXWEem1l5O0R0OWkQ" source="_2kvSRdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSM9XWEem1l5O0R0OWkQ" target="_2kvSVdXWEem1l5O0R0OWkQ" source="_2kvSS9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSNNXWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@3d678abb)" outgoing="_2kvSKtXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ForkNode" xmi:id="_2kvSNdXWEem1l5O0R0OWkQ" name="Fork('')@4ff4f5e9" incoming="_2kvQ5dXWEem1l5O0R0OWkQ" outgoing="_2kvSKdXWEem1l5O0R0OWkQ _2kvSK9XWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSNtXWEem1l5O0R0OWkQ" name="RightHandSide@6fa52a4f"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvSN9XWEem1l5O0R0OWkQ" name="Value(null)">
                    <result xmi:id="_2kvSONXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSOdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSOtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_2kvSO9XWEem1l5O0R0OWkQ"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvSPNXWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_2kvSKtXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_2kvSPdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2kvSKdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSPtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSP9XWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_2kvSQNXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2kvSLdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSQdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSQtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSQ9XWEem1l5O0R0OWkQ" name="NullCoalescingExpression@2bd76561.operand2" incoming="_2kvSLtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSRNXWEem1l5O0R0OWkQ" target="_2kvSRdXWEem1l5O0R0OWkQ" source="_2kvSSNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2kvSRdXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@2bd76561.operand2.result" incoming="_2kvSRNXWEem1l5O0R0OWkQ" outgoing="_2kvSMtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSRtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSR9XWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_2kvSSNXWEem1l5O0R0OWkQ" name="Merge(Fork('')@4ff4f5e9)" incoming="_2kvSK9XWEem1l5O0R0OWkQ" outgoing="_2kvSRNXWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSSdXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@2bd76561.operand3" incoming="_2kvSMNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSStXWEem1l5O0R0OWkQ" target="_2kvSS9XWEem1l5O0R0OWkQ" source="_2kvST9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_2kvSS9XWEem1l5O0R0OWkQ" name="NullCoalescingExpression@2bd76561.operand3.result" incoming="_2kvSStXWEem1l5O0R0OWkQ" outgoing="_2kvSM9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSTNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSTdXWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvSTtXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;)">
                    <result xmi:id="_2kvST9XWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;).result" outgoing="_2kvSStXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSUNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSUdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_2kvSUtXWEem1l5O0R0OWkQ" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_2kvSU9XWEem1l5O0R0OWkQ" name="Initial(NullCoalescingExpression@2bd76561)" outgoing="_2kvSLNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_2kvSVNXWEem1l5O0R0OWkQ" name="Decision(NullCoalescingExpression@2bd76561)" incoming="_2kvSLNXWEem1l5O0R0OWkQ _2kvSLdXWEem1l5O0R0OWkQ" outgoing="_2kvSLtXWEem1l5O0R0OWkQ _2kvSMNXWEem1l5O0R0OWkQ" decisionInputFlow="_2kvSLdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_2kvSVdXWEem1l5O0R0OWkQ" name="Merge(NullCoalescingExpression@2bd76561.result)" incoming="_2kvSMtXWEem1l5O0R0OWkQ _2kvSM9XWEem1l5O0R0OWkQ" outgoing="_2kvSItXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSVtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSV9XWEem1l5O0R0OWkQ" target="_2kvSW9XWEem1l5O0R0OWkQ" source="_2kvSWNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2kvSWNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2kvQ5tXWEem1l5O0R0OWkQ" outgoing="_2kvSV9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSWdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSWtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2kvSW9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2kvSV9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSXNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSXdXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSXtXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@18805dff)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSX9XWEem1l5O0R0OWkQ" target="_2kvSY9XWEem1l5O0R0OWkQ" source="_2kvSYNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2kvSYNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@18805dff).input" incoming="_2kvRANXWEem1l5O0R0OWkQ" outgoing="_2kvSX9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSYdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSYtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2kvSY9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@18805dff).output" incoming="_2kvSX9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSZNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSZdXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSZtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSZ9XWEem1l5O0R0OWkQ" target="_2kvSa9XWEem1l5O0R0OWkQ" source="_2kvSaNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2kvSaNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_2kvQ59XWEem1l5O0R0OWkQ" outgoing="_2kvSZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSadXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSatXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2kvSa9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_2kvSZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSbNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSbdXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSbtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSb9XWEem1l5O0R0OWkQ" target="_2kvSc9XWEem1l5O0R0OWkQ" source="_2kvScNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_2kvScNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_2kvQ6NXWEem1l5O0R0OWkQ" outgoing="_2kvSb9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvScdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSctXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_2kvSc9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_2kvSb9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSdNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSddXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_2kvSdtXWEem1l5O0R0OWkQ" body="_2kvRvNXWEem1l5O0R0OWkQ _2kvR_NXWEem1l5O0R0OWkQ _2kvSBNXWEem1l5O0R0OWkQ _2kvSDNXWEem1l5O0R0OWkQ _2kvSFNXWEem1l5O0R0OWkQ" bodyOutput="_2kvSAdXWEem1l5O0R0OWkQ _2kvSCdXWEem1l5O0R0OWkQ _2kvSEdXWEem1l5O0R0OWkQ _2kvSGdXWEem1l5O0R0OWkQ" decider="_2kvRudXWEem1l5O0R0OWkQ" successorClause="_2kvSd9XWEem1l5O0R0OWkQ" test="_2kvRrdXWEem1l5O0R0OWkQ"/>
            <clause xmi:id="_2kvSd9XWEem1l5O0R0OWkQ" body="_2kvSIdXWEem1l5O0R0OWkQ _2kvSVtXWEem1l5O0R0OWkQ _2kvSXtXWEem1l5O0R0OWkQ _2kvSZtXWEem1l5O0R0OWkQ _2kvSbtXWEem1l5O0R0OWkQ" bodyOutput="_2kvSW9XWEem1l5O0R0OWkQ _2kvSY9XWEem1l5O0R0OWkQ _2kvSa9XWEem1l5O0R0OWkQ _2kvSc9XWEem1l5O0R0OWkQ" decider="_2kvSHdXWEem1l5O0R0OWkQ" predecessorClause="_2kvSdtXWEem1l5O0R0OWkQ" test="_2kvSHNXWEem1l5O0R0OWkQ"/>
            <result xmi:id="_2kvSeNXWEem1l5O0R0OWkQ" name="IfStatement@58465241.result(label)" outgoing="_2kvQ-dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSedXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSetXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_2kvSe9XWEem1l5O0R0OWkQ" name="IfStatement@58465241.result(s)" outgoing="_2kvQ-tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSfNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSfdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_2kvSftXWEem1l5O0R0OWkQ" name="IfStatement@58465241.result(value2)" outgoing="_2kvQ-9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSf9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSgNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_2kvSgdXWEem1l5O0R0OWkQ" name="IfStatement@58465241.result(value1)" outgoing="_2kvQ_NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSgtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSg9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_2kvShNXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2kvQ-dXWEem1l5O0R0OWkQ" outgoing="_2kvRA9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2kvShdXWEem1l5O0R0OWkQ" name="Fork(s)" incoming="_2kvQ-tXWEem1l5O0R0OWkQ" outgoing="_2kvRBNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2kvShtXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_2kvQ-9XWEem1l5O0R0OWkQ" outgoing="_2kvRBdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_2kvSh9XWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_2kvQ_NXWEem1l5O0R0OWkQ" outgoing="_2kvRBtXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSiNXWEem1l5O0R0OWkQ" name="ExpressionStatement@7211b235" incoming="_2kvRAtXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSidXWEem1l5O0R0OWkQ" target="_2kvSjNXWEem1l5O0R0OWkQ" source="_2kvSlNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kvSitXWEem1l5O0R0OWkQ" target="_2kvSi9XWEem1l5O0R0OWkQ" source="_2kvSktXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvSi9XWEem1l5O0R0OWkQ" name="Call(WriteLine)" incoming="_2kvSitXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2kvSjNXWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_2kvSidXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSjdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSjtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2kvSj9XWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSkNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSkdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSktXWEem1l5O0R0OWkQ" name="Tuple@49814796" outgoing="_2kvSitXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvSk9XWEem1l5O0R0OWkQ" name="Value(&quot;&quot;)">
                <result xmi:id="_2kvSlNXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;).result" outgoing="_2kvSidXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSldXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSltXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_2kvSl9XWEem1l5O0R0OWkQ" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSmNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSmdXWEem1l5O0R0OWkQ" target="_2kvSndXWEem1l5O0R0OWkQ" source="_2kvSmtXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2kvSmtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2kvRA9XWEem1l5O0R0OWkQ" outgoing="_2kvSmdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSm9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSnNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2kvSndXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2kvSmdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSntXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSn9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSoNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSodXWEem1l5O0R0OWkQ" target="_2kvSpdXWEem1l5O0R0OWkQ" source="_2kvSotXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2kvSotXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).input" incoming="_2kvRBNXWEem1l5O0R0OWkQ" outgoing="_2kvSodXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSo9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSpNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2kvSpdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).output" incoming="_2kvSodXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSptXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSp9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSqNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSqdXWEem1l5O0R0OWkQ" target="_2kvSrdXWEem1l5O0R0OWkQ" source="_2kvSqtXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2kvSqtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_2kvRBdXWEem1l5O0R0OWkQ" outgoing="_2kvSqdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSq9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSrNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2kvSrdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_2kvSqdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSrtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSr9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSsNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSsdXWEem1l5O0R0OWkQ" target="_2kvStdXWEem1l5O0R0OWkQ" source="_2kvSstXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2kvSstXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_2kvRBtXWEem1l5O0R0OWkQ" outgoing="_2kvSsdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSs9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvStNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2kvStdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_2kvSsdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSttXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSt9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvSuNXWEem1l5O0R0OWkQ" name="Value(true)">
            <result xmi:id="_2kvSudXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSutXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSu9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_2kvSvNXWEem1l5O0R0OWkQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSvdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSvtXWEem1l5O0R0OWkQ" target="_2kvSwtXWEem1l5O0R0OWkQ" source="_2kvSv9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2kvSv9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_2kvQ6dXWEem1l5O0R0OWkQ" outgoing="_2kvSvtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSwNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSwdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2kvSwtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_2kvSvtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSw9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSxNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvSxdXWEem1l5O0R0OWkQ" name="Value(null)">
            <result xmi:id="_2kvSxtXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSx9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSyNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_2kvSydXWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvSytXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvSy9XWEem1l5O0R0OWkQ" target="_2kvSz9XWEem1l5O0R0OWkQ" source="_2kvSzNXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2kvSzNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_2kvQ6tXWEem1l5O0R0OWkQ" outgoing="_2kvSy9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvSzdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvSztXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2kvSz9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_2kvSy9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvS0NXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvS0dXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvS0tXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvS09XWEem1l5O0R0OWkQ" target="_2kvS19XWEem1l5O0R0OWkQ" source="_2kvS1NXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2kvS1NXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_2kvQ69XWEem1l5O0R0OWkQ" outgoing="_2kvS09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvS1dXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvS1tXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_2kvS19XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_2kvS09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvS2NXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvS2dXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_2kvS2tXWEem1l5O0R0OWkQ" body="_2kvRVNXWEem1l5O0R0OWkQ _2kvRlNXWEem1l5O0R0OWkQ _2kvRrNXWEem1l5O0R0OWkQ _2kvSiNXWEem1l5O0R0OWkQ _2kvSmNXWEem1l5O0R0OWkQ _2kvSoNXWEem1l5O0R0OWkQ _2kvSqNXWEem1l5O0R0OWkQ _2kvSsNXWEem1l5O0R0OWkQ" bodyOutput="_2kvSndXWEem1l5O0R0OWkQ _2kvSpdXWEem1l5O0R0OWkQ _2kvSrdXWEem1l5O0R0OWkQ _2kvStdXWEem1l5O0R0OWkQ" decider="_2kvRUdXWEem1l5O0R0OWkQ" successorClause="_2kvS29XWEem1l5O0R0OWkQ" test="_2kvRB9XWEem1l5O0R0OWkQ"/>
          <clause xmi:id="_2kvS29XWEem1l5O0R0OWkQ" body="_2kvSvdXWEem1l5O0R0OWkQ _2kvSxdXWEem1l5O0R0OWkQ _2kvSytXWEem1l5O0R0OWkQ _2kvS0tXWEem1l5O0R0OWkQ" bodyOutput="_2kvSwtXWEem1l5O0R0OWkQ _2kvSxtXWEem1l5O0R0OWkQ _2kvSz9XWEem1l5O0R0OWkQ _2kvS19XWEem1l5O0R0OWkQ" decider="_2kvSudXWEem1l5O0R0OWkQ" predecessorClause="_2kvS2tXWEem1l5O0R0OWkQ" test="_2kvSuNXWEem1l5O0R0OWkQ"/>
          <result xmi:id="_2kvS3NXWEem1l5O0R0OWkQ" name="IfStatement@41da206e.result(label)" outgoing="_2kvQ89XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvS3dXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvS3tXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_2kvS39XWEem1l5O0R0OWkQ" name="IfStatement@41da206e.result(s)" outgoing="_2kvQ9NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvS4NXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvS4dXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_2kvS4tXWEem1l5O0R0OWkQ" name="IfStatement@41da206e.result(value2)" outgoing="_2kvQ9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvS49XWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvS5NXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_2kvS5dXWEem1l5O0R0OWkQ" name="IfStatement@41da206e.result(value1)" outgoing="_2kvQ9tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvS5tXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvS59XWEem1l5O0R0OWkQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_2kvS6NXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2kvQ89XWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2kvS6dXWEem1l5O0R0OWkQ" name="Fork(s)" incoming="_2kvQ9NXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2kvS6tXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_2kvQ9dXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_2kvS69XWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_2kvQ9tXWEem1l5O0R0OWkQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kvQ7NXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_2kvQ29XWEem1l5O0R0OWkQ" parameter="_2kvQ0tXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_2kvQ7dXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_2kvQ29XWEem1l5O0R0OWkQ" outgoing="_2kvQ4NXWEem1l5O0R0OWkQ _2kvQ4tXWEem1l5O0R0OWkQ _2kvQ5tXWEem1l5O0R0OWkQ _2kvQ6dXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kvQ7tXWEem1l5O0R0OWkQ" name="Input(value1)" outgoing="_2kvQ3NXWEem1l5O0R0OWkQ" parameter="_2kvQ1dXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_2kvQ79XWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_2kvQ3NXWEem1l5O0R0OWkQ" outgoing="_2kvQ3tXWEem1l5O0R0OWkQ _2kvQ5NXWEem1l5O0R0OWkQ _2kvQ6NXWEem1l5O0R0OWkQ _2kvQ69XWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kvQ8NXWEem1l5O0R0OWkQ" name="Input(value2)" outgoing="_2kvQ3dXWEem1l5O0R0OWkQ" parameter="_2kvQ2NXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_2kvQ8dXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_2kvQ3dXWEem1l5O0R0OWkQ" outgoing="_2kvQ39XWEem1l5O0R0OWkQ _2kvQ4dXWEem1l5O0R0OWkQ _2kvQ49XWEem1l5O0R0OWkQ _2kvQ5dXWEem1l5O0R0OWkQ _2kvQ59XWEem1l5O0R0OWkQ _2kvQ6tXWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_2kvS7NXWEem1l5O0R0OWkQ" name="Write" visibility="public" node="_2kvS99XWEem1l5O0R0OWkQ _2kvS-NXWEem1l5O0R0OWkQ _2kvS-dXWEem1l5O0R0OWkQ" group="_2kvS-dXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_2kvS7dXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_2kvS7tXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_2kvS79XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_2kvS8NXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_2kvS8dXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_2kvS8tXWEem1l5O0R0OWkQ" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvS89XWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvS9NXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvS9dXWEem1l5O0R0OWkQ" target="_2kvS-NXWEem1l5O0R0OWkQ" source="_2kvS99XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvS9tXWEem1l5O0R0OWkQ" target="_2kvTAtXWEem1l5O0R0OWkQ" source="_2kvS-NXWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_2kvS-dXWEem1l5O0R0OWkQ" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvS-tXWEem1l5O0R0OWkQ" name="ExpressionStatement@6c4c398c">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvS-9XWEem1l5O0R0OWkQ" target="_2kvTPdXWEem1l5O0R0OWkQ" source="_2kvTStXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_2kvS_NXWEem1l5O0R0OWkQ" target="_2kvS_dXWEem1l5O0R0OWkQ" source="_2kvTPtXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_2kvS_dXWEem1l5O0R0OWkQ" name="Collect(Call(write))" incoming="_2kvS_NXWEem1l5O0R0OWkQ" mode="parallel" inputElement="_2kvTPdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvS_tXWEem1l5O0R0OWkQ" target="_2kvTBtXWEem1l5O0R0OWkQ" source="_2kvTPNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvS_9XWEem1l5O0R0OWkQ" target="_2kvTHNXWEem1l5O0R0OWkQ" source="_2kvTAtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kvTANXWEem1l5O0R0OWkQ" target="_2kvTBdXWEem1l5O0R0OWkQ" source="_2kvTD9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvTAdXWEem1l5O0R0OWkQ" target="_2kvTDNXWEem1l5O0R0OWkQ" source="_2kvTPdXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_2kvTAtXWEem1l5O0R0OWkQ" name="Collect(Call(write)).input(Fork(value))" incoming="_2kvS9tXWEem1l5O0R0OWkQ" outgoing="_2kvS_9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTA9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTBNXWEem1l5O0R0OWkQ" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_2kvTBdXWEem1l5O0R0OWkQ" name="Call(write)" incoming="_2kvTANXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2kvTBtXWEem1l5O0R0OWkQ" name="Call(write).argument(value)" incoming="_2kvS_tXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTB9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTCNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2kvTCdXWEem1l5O0R0OWkQ" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTCtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTC9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_2kvTDNXWEem1l5O0R0OWkQ" name="Call(write).target" incoming="_2kvTAdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTDdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTDtXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvTD9XWEem1l5O0R0OWkQ" name="Tuple@528973d1" outgoing="_2kvTANXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvTENXWEem1l5O0R0OWkQ" target="_2kvTJNXWEem1l5O0R0OWkQ" source="_2kvTHNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kvTEdXWEem1l5O0R0OWkQ" target="_2kvTI9XWEem1l5O0R0OWkQ" source="_2kvTG9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvTEtXWEem1l5O0R0OWkQ" target="_2kvTL9XWEem1l5O0R0OWkQ" source="_2kvTHNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kvTE9XWEem1l5O0R0OWkQ" target="_2kvTO9XWEem1l5O0R0OWkQ" source="_2kvTOtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvTFNXWEem1l5O0R0OWkQ" target="_2kvTO9XWEem1l5O0R0OWkQ" source="_2kvTJ9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kvTFdXWEem1l5O0R0OWkQ" target="_2kvTKtXWEem1l5O0R0OWkQ" source="_2kvTO9XWEem1l5O0R0OWkQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kvTFtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_2kvTF9XWEem1l5O0R0OWkQ" target="_2kvTMNXWEem1l5O0R0OWkQ" source="_2kvTO9XWEem1l5O0R0OWkQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_2kvTGNXWEem1l5O0R0OWkQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvTGdXWEem1l5O0R0OWkQ" target="_2kvTPNXWEem1l5O0R0OWkQ" source="_2kvTLNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvTGtXWEem1l5O0R0OWkQ" target="_2kvTPNXWEem1l5O0R0OWkQ" source="_2kvTMtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvTG9XWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@3d91d08b)" outgoing="_2kvTEdXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ForkNode" xmi:id="_2kvTHNXWEem1l5O0R0OWkQ" name="Fork('')@36d2d16d" incoming="_2kvS_9XWEem1l5O0R0OWkQ" outgoing="_2kvTENXWEem1l5O0R0OWkQ _2kvTEtXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvTHdXWEem1l5O0R0OWkQ" name="RightHandSide@399cfab0"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvTHtXWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_2kvTH9XWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTINXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTIdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_2kvTItXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvTI9XWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_2kvTEdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_2kvTJNXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_2kvTENXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTJdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTJtXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_2kvTJ9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_2kvTFNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTKNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTKdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvTKtXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@100d3885.operand2" incoming="_2kvTFdXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvTK9XWEem1l5O0R0OWkQ" target="_2kvTLNXWEem1l5O0R0OWkQ" source="_2kvTL9XWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2kvTLNXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@100d3885.operand2.result" incoming="_2kvTK9XWEem1l5O0R0OWkQ" outgoing="_2kvTGdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTLdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTLtXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_2kvTL9XWEem1l5O0R0OWkQ" name="Merge(Fork('')@36d2d16d)" incoming="_2kvTEtXWEem1l5O0R0OWkQ" outgoing="_2kvTK9XWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvTMNXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@100d3885.operand3" incoming="_2kvTF9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvTMdXWEem1l5O0R0OWkQ" target="_2kvTMtXWEem1l5O0R0OWkQ" source="_2kvTNtXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_2kvTMtXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@100d3885.operand3.result" incoming="_2kvTMdXWEem1l5O0R0OWkQ" outgoing="_2kvTGtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTM9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTNNXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvTNdXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;)">
                  <result xmi:id="_2kvTNtXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;).result" outgoing="_2kvTMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTN9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTONXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_2kvTOdXWEem1l5O0R0OWkQ" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_2kvTOtXWEem1l5O0R0OWkQ" name="Initial(NullCoalescingExpression@100d3885)" outgoing="_2kvTE9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_2kvTO9XWEem1l5O0R0OWkQ" name="Decision(NullCoalescingExpression@100d3885)" incoming="_2kvTE9XWEem1l5O0R0OWkQ _2kvTFNXWEem1l5O0R0OWkQ" outgoing="_2kvTFdXWEem1l5O0R0OWkQ _2kvTF9XWEem1l5O0R0OWkQ" decisionInputFlow="_2kvTFNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:MergeNode" xmi:id="_2kvTPNXWEem1l5O0R0OWkQ" name="Merge(NullCoalescingExpression@100d3885.result)" incoming="_2kvTGdXWEem1l5O0R0OWkQ _2kvTGtXWEem1l5O0R0OWkQ" outgoing="_2kvS_tXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_2kvTPdXWEem1l5O0R0OWkQ" name="Collect(Call(write)).inputElement" incoming="_2kvS-9XWEem1l5O0R0OWkQ" outgoing="_2kvTAdXWEem1l5O0R0OWkQ" regionAsInput="_2kvS_dXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvTPtXWEem1l5O0R0OWkQ" name="Feature(Call(At).result())" outgoing="_2kvS_NXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvTP9XWEem1l5O0R0OWkQ" target="_2kvTRNXWEem1l5O0R0OWkQ" source="_2kvTT9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvTQNXWEem1l5O0R0OWkQ" target="_2kvTV9XWEem1l5O0R0OWkQ" source="_2kvTU9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_2kvTQdXWEem1l5O0R0OWkQ" target="_2kvTQ9XWEem1l5O0R0OWkQ" source="_2kvTTdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_2kvTQtXWEem1l5O0R0OWkQ" target="_2kvTR9XWEem1l5O0R0OWkQ" source="_2kvTV9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_2kvTQ9XWEem1l5O0R0OWkQ" name="Call(At)" incoming="_2kvTQdXWEem1l5O0R0OWkQ">
              <argument xmi:id="_2kvTRNXWEem1l5O0R0OWkQ" name="Call(At).argument(seq)" incoming="_2kvTP9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTRdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTRtXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <argument xmi:id="_2kvTR9XWEem1l5O0R0OWkQ" name="Call(At).argument(index)" incoming="_2kvTQtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTSNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTSdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_2kvTStXWEem1l5O0R0OWkQ" name="Call(At).result()" outgoing="_2kvS-9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTS9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTTNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_2kvTTdXWEem1l5O0R0OWkQ" name="Tuple@5fae6165" outgoing="_2kvTQdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_2kvTTtXWEem1l5O0R0OWkQ" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_2kvTT9XWEem1l5O0R0OWkQ" name="ReadExtent(StandardOutputChannel).result" outgoing="_2kvTP9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTUNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTUdXWEem1l5O0R0OWkQ" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_2kvTUtXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_2kvTU9XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_2kvTQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2kvTVNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2kvTVdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_2kvTVtXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_2kvTV9XWEem1l5O0R0OWkQ" name="Fork(Call(At).argument(index))" incoming="_2kvTQNXWEem1l5O0R0OWkQ" outgoing="_2kvTQtXWEem1l5O0R0OWkQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_2kvS99XWEem1l5O0R0OWkQ" name="Input(value)" outgoing="_2kvS9dXWEem1l5O0R0OWkQ" parameter="_2kvS8tXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_2kvS-NXWEem1l5O0R0OWkQ" name="Fork(value)" incoming="_2kvS9dXWEem1l5O0R0OWkQ" outgoing="_2kvS9tXWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <profileApplication xmi:id="_2kvTWNXWEem1l5O0R0OWkQ">
      <eAnnotations xmi:id="_2kvTWdXWEem1l5O0R0OWkQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_2kv3QNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ks1mdXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kv3QdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kuqJ9XWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kv3QtXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ks1ldXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kv3Q9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kuDLtXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kv3RNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kuDKtXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kv3RdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kuEWNXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kv3RtXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ks2MNXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kv3R9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ktdtdXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kv3SNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ktdItXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kv3SdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ks2LNXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kv3StXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ks1AtXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kv3S9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kurz9XWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kv3TNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kteRtXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kv3TdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ktch9XWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kweUNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kuEXNXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kweUdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ks0_tXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kweUtXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ktb8NXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kweU9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ktdHtXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kweVNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ktbYNXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kweVdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kuCk9XWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kweVtXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kuDwdXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kweV9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kury9XWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kweWNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ktci9XWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kweWdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kuDxdXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kweWtXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kurM9XWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kweW9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kurP9XWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kweXNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kteRdXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kweXdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kuCl9XWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kweXtXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ks1CdXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kweX9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_2kuqFtXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kxFYNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ktdudXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_2kxFYdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ktb8dXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_2kxFYtXWEem1l5O0R0OWkQ" base_BehavioralFeature="_2ktbZNXWEem1l5O0R0OWkQ"/>
</xmi:XMI>

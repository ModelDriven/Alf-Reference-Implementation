<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_1Mv2EHMaEeeoYuc64YE22w" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_1Mv2EXMaEeeoYuc64YE22w" name="Expressions_Assignment" visibility="public">
      <packageImport xmi:id="_1Mv2EnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_1Mv2E3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_1Mv2FHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_1Mv2FXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_1Mv2FnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_1Mv2F3MaEeeoYuc64YE22w" general="_1MzhbnMaEeeoYuc64YE22w"/>
      <ownedAttribute xmi:id="_1Mv2GHMaEeeoYuc64YE22w" name="Expressions_Assignment$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mv2GXMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mv2GnMaEeeoYuc64YE22w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_1Mv2G3MaEeeoYuc64YE22w" name="run$method$1" specification="_1MzhUnMaEeeoYuc64YE22w" node="_1Mv2J3MaEeeoYuc64YE22w _1Mv2KnMaEeeoYuc64YE22w _1Mv2KHMaEeeoYuc64YE22w _1Mv2MHMaEeeoYuc64YE22w _1Mv2KXMaEeeoYuc64YE22w" group="_1Mv2KnMaEeeoYuc64YE22w _1Mv2MHMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_1Mv2HHMaEeeoYuc64YE22w" name="tester" type="_1M0Hr3MaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mv2HXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mv2HnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_1Mv2H3MaEeeoYuc64YE22w" name="" type="_1Mv2EXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mv2IHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mv2IXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2InMaEeeoYuc64YE22w" target="_1Mv2LHMaEeeoYuc64YE22w" source="_1Mv2J3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2I3MaEeeoYuc64YE22w" target="_1Mv2KHMaEeeoYuc64YE22w" source="_1MySU3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2JHMaEeeoYuc64YE22w" target="_1MySXHMaEeeoYuc64YE22w" source="_1Mv2L3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_1Mv2JXMaEeeoYuc64YE22w" target="_1Mv2KXMaEeeoYuc64YE22w" source="_1Mv2KnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_1Mv2JnMaEeeoYuc64YE22w" target="_1Mv2MHMaEeeoYuc64YE22w" source="_1Mv2KXMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_1Mv2KnMaEeeoYuc64YE22w" name="Node(Input(tester))" outgoing="_1Mv2JXMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2K3MaEeeoYuc64YE22w" target="_1Mv2L3MaEeeoYuc64YE22w" source="_1Mv2LHMaEeeoYuc64YE22w"/>
          <structuredNodeInput xmi:id="_1Mv2LHMaEeeoYuc64YE22w" name="Input(tester)" incoming="_1Mv2InMaEeeoYuc64YE22w" outgoing="_1Mv2K3MaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mv2LXMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mv2LnMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_1Mv2L3MaEeeoYuc64YE22w" name="Fork(tester)" incoming="_1Mv2K3MaEeeoYuc64YE22w" outgoing="_1Mv2JHMaEeeoYuc64YE22w"/>
        </structuredNode>
        <structuredNode xmi:id="_1Mv2MHMaEeeoYuc64YE22w" name="Body(run$method$1)" incoming="_1Mv2JnMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2MXMaEeeoYuc64YE22w" target="_1MySU3MaEeeoYuc64YE22w" source="_1MySUHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2MnMaEeeoYuc64YE22w" target="_1MySY3MaEeeoYuc64YE22w" source="_1MySU3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1Mv2M3MaEeeoYuc64YE22w" target="_1Mv2PXMaEeeoYuc64YE22w" source="_1MySYnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1Mv2NHMaEeeoYuc64YE22w" target="_1MySYnMaEeeoYuc64YE22w" source="_1MySVHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2NXMaEeeoYuc64YE22w" target="_1MySZ3MaEeeoYuc64YE22w" source="_1MySU3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2NnMaEeeoYuc64YE22w" target="_1MySbnMaEeeoYuc64YE22w" source="_1MySanMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2N3MaEeeoYuc64YE22w" target="_1MySenMaEeeoYuc64YE22w" source="_1MyScXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2OHMaEeeoYuc64YE22w" target="_1MySgHMaEeeoYuc64YE22w" source="_1MySdXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1Mv2OXMaEeeoYuc64YE22w" target="_1MyShHMaEeeoYuc64YE22w" source="_1MySg3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2OnMaEeeoYuc64YE22w" target="_1MyShHMaEeeoYuc64YE22w" source="_1MySfXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1Mv2O3MaEeeoYuc64YE22w" target="_1MySVHMaEeeoYuc64YE22w" source="_1MyShHMaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_1Mv2PHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mv2PXMaEeeoYuc64YE22w" name="Body" incoming="_1Mv2M3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2PnMaEeeoYuc64YE22w" target="_1Mv2dHMaEeeoYuc64YE22w" source="_1Mv2Z3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1Mv2P3MaEeeoYuc64YE22w" target="_1Mv2bHMaEeeoYuc64YE22w" source="_1Mv2SXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2QHMaEeeoYuc64YE22w" target="_1MxrV3MaEeeoYuc64YE22w" source="_1Mv2aHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1Mv2QXMaEeeoYuc64YE22w" target="_1MxrUHMaEeeoYuc64YE22w" source="_1Mv2bHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2QnMaEeeoYuc64YE22w" target="_1MxraHMaEeeoYuc64YE22w" source="_1Mv2aXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1Mv2Q3MaEeeoYuc64YE22w" target="_1MxrYHMaEeeoYuc64YE22w" source="_1MxrUHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2RHMaEeeoYuc64YE22w" target="_1MxrgXMaEeeoYuc64YE22w" source="_1Mv2anMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1Mv2RXMaEeeoYuc64YE22w" target="_1MxreXMaEeeoYuc64YE22w" source="_1MxrYHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2RnMaEeeoYuc64YE22w" target="_1MxrmnMaEeeoYuc64YE22w" source="_1Mv2a3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1Mv2R3MaEeeoYuc64YE22w" target="_1MxrknMaEeeoYuc64YE22w" source="_1MxreXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1Mv2SHMaEeeoYuc64YE22w" target="_1Mxrq3MaEeeoYuc64YE22w" source="_1MxrknMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mv2SXMaEeeoYuc64YE22w" name="ExpressionStatement@212d8133" outgoing="_1Mv2P3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2SnMaEeeoYuc64YE22w" target="_1Mv2Z3MaEeeoYuc64YE22w" source="_1Mv2UXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2S3MaEeeoYuc64YE22w" target="_1Mv2aHMaEeeoYuc64YE22w" source="_1Mv2VHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2THMaEeeoYuc64YE22w" target="_1Mv2aXMaEeeoYuc64YE22w" source="_1Mv2V3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2TXMaEeeoYuc64YE22w" target="_1Mv2anMaEeeoYuc64YE22w" source="_1Mv2WnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2TnMaEeeoYuc64YE22w" target="_1Mv2a3MaEeeoYuc64YE22w" source="_1Mv2XXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2T3MaEeeoYuc64YE22w" target="_1Mv2YHMaEeeoYuc64YE22w" source="_1Mv2ZHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_1Mv2UHMaEeeoYuc64YE22w" name="Call(test)" operation="_1MzhXXMaEeeoYuc64YE22w">
                <result xmi:id="_1Mv2UXMaEeeoYuc64YE22w" name="Call(test).result(i)" outgoing="_1Mv2SnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mv2UnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mv2U3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_1Mv2VHMaEeeoYuc64YE22w" name="Call(test).result(f)" outgoing="_1Mv2S3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mv2VXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mv2VnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_1Mv2V3MaEeeoYuc64YE22w" name="Call(test).result(h)" outgoing="_1Mv2THMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mv2WHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mv2WXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_1Mv2WnMaEeeoYuc64YE22w" name="Call(test).result(filename)" outgoing="_1Mv2TXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mv2W3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mv2XHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_1Mv2XXMaEeeoYuc64YE22w" name="Call(test).result(a)" outgoing="_1Mv2TnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mv2XnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mv2X3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <target xmi:id="_1Mv2YHMaEeeoYuc64YE22w" name="Call(test).target" incoming="_1Mv2T3MaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mv2YXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mv2YnMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_1Mv2Y3MaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_1Mv2ZHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_1Mv2T3MaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mv2ZXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mv2ZnMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_1Mv2Z3MaEeeoYuc64YE22w" name="Fork(i)@28c076b5" incoming="_1Mv2SnMaEeeoYuc64YE22w" outgoing="_1Mv2PnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_1Mv2aHMaEeeoYuc64YE22w" name="Fork(f)@10d2411f" incoming="_1Mv2S3MaEeeoYuc64YE22w" outgoing="_1Mv2QHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_1Mv2aXMaEeeoYuc64YE22w" name="Fork(h)@7c53d3c" incoming="_1Mv2THMaEeeoYuc64YE22w" outgoing="_1Mv2QnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_1Mv2anMaEeeoYuc64YE22w" name="Fork(filename)@2c9b96af" incoming="_1Mv2TXMaEeeoYuc64YE22w" outgoing="_1Mv2RHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_1Mv2a3MaEeeoYuc64YE22w" name="Fork(a)@36545439" incoming="_1Mv2TnMaEeeoYuc64YE22w" outgoing="_1Mv2RnMaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mv2bHMaEeeoYuc64YE22w" name="ExpressionStatement@4591a080" incoming="_1Mv2P3MaEeeoYuc64YE22w" outgoing="_1Mv2QXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2bXMaEeeoYuc64YE22w" target="_1Mv2cXMaEeeoYuc64YE22w" source="_1MxrR3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mv2bnMaEeeoYuc64YE22w" target="_1MxrQnMaEeeoYuc64YE22w" source="_1MxrTHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_1Mv2b3MaEeeoYuc64YE22w" target="_1Mv2cHMaEeeoYuc64YE22w" source="_1MxrRXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1Mv2cHMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_1Mv2b3MaEeeoYuc64YE22w" behavior="_1M0IOnMaEeeoYuc64YE22w">
                <argument xmi:id="_1Mv2cXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_1Mv2bXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mv2cnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mv2c3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_1Mv2dHMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_1Mv2PnMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrQHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrQXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_1MxrQnMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_1Mv2bnMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrQ3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrRHMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MxrRXMaEeeoYuc64YE22w" name="Tuple@181f61b4" outgoing="_1Mv2b3MaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MxrRnMaEeeoYuc64YE22w" name="Value(&quot;i&quot;)">
                  <result xmi:id="_1MxrR3MaEeeoYuc64YE22w" name="Value(&quot;i&quot;).result" outgoing="_1Mv2bXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrSHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrSXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_1MxrSnMaEeeoYuc64YE22w" value="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MxrS3MaEeeoYuc64YE22w" name="Value(5)">
                  <result xmi:id="_1MxrTHMaEeeoYuc64YE22w" name="Value(5).result" outgoing="_1Mv2bnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrTXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrTnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_1MxrT3MaEeeoYuc64YE22w" value="5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MxrUHMaEeeoYuc64YE22w" name="ExpressionStatement@671275fe" incoming="_1Mv2QXMaEeeoYuc64YE22w" outgoing="_1Mv2Q3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1MxrUXMaEeeoYuc64YE22w" target="_1MxrVHMaEeeoYuc64YE22w" source="_1MxrXHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_1MxrUnMaEeeoYuc64YE22w" target="_1MxrU3MaEeeoYuc64YE22w" source="_1MxrWnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MxrU3MaEeeoYuc64YE22w" name="Call(AssertFalse)" incoming="_1MxrUnMaEeeoYuc64YE22w" behavior="_1M0vt3MaEeeoYuc64YE22w">
                <argument xmi:id="_1MxrVHMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(label)" incoming="_1MxrUXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrVXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrVnMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_1MxrV3MaEeeoYuc64YE22w" name="Call(AssertFalse).argument(condition)" incoming="_1Mv2QHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrWHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrWXMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MxrWnMaEeeoYuc64YE22w" name="Tuple@56fff809" outgoing="_1MxrUnMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MxrW3MaEeeoYuc64YE22w" name="Value(&quot;f&quot;)">
                  <result xmi:id="_1MxrXHMaEeeoYuc64YE22w" name="Value(&quot;f&quot;).result" outgoing="_1MxrUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrXXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrXnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_1MxrX3MaEeeoYuc64YE22w" value="f">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MxrYHMaEeeoYuc64YE22w" name="ExpressionStatement@9a82ef" incoming="_1Mv2Q3MaEeeoYuc64YE22w" outgoing="_1Mv2RXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1MxrYXMaEeeoYuc64YE22w" target="_1MxrZXMaEeeoYuc64YE22w" source="_1MxrcHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1MxrYnMaEeeoYuc64YE22w" target="_1Mxra3MaEeeoYuc64YE22w" source="_1MxrdXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_1MxrY3MaEeeoYuc64YE22w" target="_1MxrZHMaEeeoYuc64YE22w" source="_1MxrbnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MxrZHMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_1MxrY3MaEeeoYuc64YE22w" behavior="_1M0IOnMaEeeoYuc64YE22w">
                <argument xmi:id="_1MxrZXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_1MxrYXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrZnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrZ3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_1MxraHMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_1Mv2QnMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxraXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxranMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_1Mxra3MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_1MxrYnMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrbHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrbXMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MxrbnMaEeeoYuc64YE22w" name="Tuple@328f4e46" outgoing="_1MxrY3MaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1Mxrb3MaEeeoYuc64YE22w" name="Value(&quot;h&quot;)">
                  <result xmi:id="_1MxrcHMaEeeoYuc64YE22w" name="Value(&quot;h&quot;).result" outgoing="_1MxrYXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrcXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrcnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_1Mxrc3MaEeeoYuc64YE22w" value="h">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MxrdHMaEeeoYuc64YE22w" name="Value(85)">
                  <result xmi:id="_1MxrdXMaEeeoYuc64YE22w" name="Value(85).result" outgoing="_1MxrYnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrdnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mxrd3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_1MxreHMaEeeoYuc64YE22w" value="85">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MxreXMaEeeoYuc64YE22w" name="ExpressionStatement@593ec306" incoming="_1Mv2RXMaEeeoYuc64YE22w" outgoing="_1Mv2R3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1MxrenMaEeeoYuc64YE22w" target="_1MxrfnMaEeeoYuc64YE22w" source="_1MxriXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mxre3MaEeeoYuc64YE22w" target="_1MxrhHMaEeeoYuc64YE22w" source="_1MxrjnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_1MxrfHMaEeeoYuc64YE22w" target="_1MxrfXMaEeeoYuc64YE22w" source="_1Mxrh3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MxrfXMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_1MxrfHMaEeeoYuc64YE22w" behavior="_1M0IOnMaEeeoYuc64YE22w">
                <argument xmi:id="_1MxrfnMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_1MxrenMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mxrf3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrgHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_1MxrgXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_1Mv2RHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrgnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mxrg3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_1MxrhHMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_1Mxre3MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrhXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrhnMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mxrh3MaEeeoYuc64YE22w" name="Tuple@772ce28e" outgoing="_1MxrfHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MxriHMaEeeoYuc64YE22w" name="Value(&quot;filename&quot;)">
                  <result xmi:id="_1MxriXMaEeeoYuc64YE22w" name="Value(&quot;filename&quot;).result" outgoing="_1MxrenMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrinMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mxri3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_1MxrjHMaEeeoYuc64YE22w" value="filename">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MxrjXMaEeeoYuc64YE22w" name="Value(&quot;xyz.doc&quot;)">
                  <result xmi:id="_1MxrjnMaEeeoYuc64YE22w" name="Value(&quot;xyz.doc&quot;).result" outgoing="_1Mxre3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mxrj3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrkHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_1MxrkXMaEeeoYuc64YE22w" value="xyz.doc">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MxrknMaEeeoYuc64YE22w" name="ExpressionStatement@3f6aaa7" incoming="_1Mv2R3MaEeeoYuc64YE22w" outgoing="_1Mv2SHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mxrk3MaEeeoYuc64YE22w" target="_1Mxrl3MaEeeoYuc64YE22w" source="_1MxronMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1MxrlHMaEeeoYuc64YE22w" target="_1MxrnXMaEeeoYuc64YE22w" source="_1Mxrp3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_1MxrlXMaEeeoYuc64YE22w" target="_1MxrlnMaEeeoYuc64YE22w" source="_1MxroHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MxrlnMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_1MxrlXMaEeeoYuc64YE22w" behavior="_1M0IOnMaEeeoYuc64YE22w">
                <argument xmi:id="_1Mxrl3MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_1Mxrk3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrmHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrmXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_1MxrmnMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_1Mv2RnMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mxrm3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrnHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_1MxrnXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_1MxrlHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrnnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mxrn3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MxroHMaEeeoYuc64YE22w" name="Tuple@62f4ae5a" outgoing="_1MxrlXMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MxroXMaEeeoYuc64YE22w" name="Value(&quot;a&quot;)">
                  <result xmi:id="_1MxronMaEeeoYuc64YE22w" name="Value(&quot;a&quot;).result" outgoing="_1Mxrk3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mxro3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrpHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_1MxrpXMaEeeoYuc64YE22w" value="a">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MxrpnMaEeeoYuc64YE22w" name="Value(2)">
                  <result xmi:id="_1Mxrp3MaEeeoYuc64YE22w" name="Value(2).result" outgoing="_1MxrlHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MxrqHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrqXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_1MxrqnMaEeeoYuc64YE22w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mxrq3MaEeeoYuc64YE22w" name="ExpressionStatement@1b821a86" incoming="_1Mv2SHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1MxrrHMaEeeoYuc64YE22w" target="_1MxrrnMaEeeoYuc64YE22w" source="_1MxrsnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_1MxrrXMaEeeoYuc64YE22w" name="Call(done)" operation="_1M0Hp3MaEeeoYuc64YE22w">
                <target xmi:id="_1MxrrnMaEeeoYuc64YE22w" name="Call(done).target" incoming="_1MxrrHMaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mxrr3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrsHMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_1MxrsXMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_1MxrsnMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_1MxrrHMaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mxrs3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MxrtHMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_1MxrtXMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_1MySUHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_1Mv2MXMaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySUXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySUnMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_1MySU3MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_1Mv2MXMaEeeoYuc64YE22w" outgoing="_1Mv2I3MaEeeoYuc64YE22w _1Mv2MnMaEeeoYuc64YE22w _1Mv2NXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MySVHMaEeeoYuc64YE22w" name="Super" incoming="_1Mv2O3MaEeeoYuc64YE22w" outgoing="_1Mv2NHMaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MySVXMaEeeoYuc64YE22w" name="ExpressionStatement@75adbfae">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MySVnMaEeeoYuc64YE22w" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySV3MaEeeoYuc64YE22w" target="_1MySWHMaEeeoYuc64YE22w" source="_1MySX3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_1MySWHMaEeeoYuc64YE22w" name="Output(Call(Test$method$1).result())" incoming="_1MySV3MaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySWXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySWnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MySW3MaEeeoYuc64YE22w" name="Call(Test$method$1)" behavior="_1MzhqHMaEeeoYuc64YE22w">
                  <argument xmi:id="_1MySXHMaEeeoYuc64YE22w" name="Call(Test$method$1).argument(tester)" incoming="_1Mv2JHMaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySXXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySXnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_1MySX3MaEeeoYuc64YE22w" name="Call(Test$method$1).result()" outgoing="_1MySV3MaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySYHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySYXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_1MySYnMaEeeoYuc64YE22w" name="Call(Expressions_Assignment$initialization$1)" incoming="_1Mv2NHMaEeeoYuc64YE22w" outgoing="_1Mv2M3MaEeeoYuc64YE22w" operation="_1MzhUXMaEeeoYuc64YE22w">
            <target xmi:id="_1MySY3MaEeeoYuc64YE22w" name="Call(Expressions_Assignment$initialization$1).target" incoming="_1Mv2MnMaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySZHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySZXMaEeeoYuc64YE22w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_1MySZnMaEeeoYuc64YE22w" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_1Mv2GHMaEeeoYuc64YE22w">
            <object xmi:id="_1MySZ3MaEeeoYuc64YE22w" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_1Mv2NXMaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySaHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySaXMaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_1MySanMaEeeoYuc64YE22w" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_1Mv2NnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySa3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySbHMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MySbXMaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_1MySbnMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_1Mv2NnMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySb3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyScHMaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_1MyScXMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_1Mv2N3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyScnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySc3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MySdHMaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_1MySdXMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_1Mv2OHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySdnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySd3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_1MySeHMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_1MySeXMaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_1MySenMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_1Mv2N3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySe3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySfHMaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_1MySfXMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_1Mv2OnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySfnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySf3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_1MySgHMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_1Mv2OHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySgXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySgnMaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_1MySg3MaEeeoYuc64YE22w" name="InitialNode" outgoing="_1Mv2OXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_1MyShHMaEeeoYuc64YE22w" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" incoming="_1Mv2OXMaEeeoYuc64YE22w _1Mv2OnMaEeeoYuc64YE22w" outgoing="_1Mv2O3MaEeeoYuc64YE22w" decisionInputFlow="_1Mv2OnMaEeeoYuc64YE22w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_1Mv2J3MaEeeoYuc64YE22w" name="Input(tester)" outgoing="_1Mv2InMaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" parameter="_1Mv2HHMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_1Mv2KHMaEeeoYuc64YE22w" name="Return" incoming="_1Mv2I3MaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" parameter="_1Mv2H3MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:JoinNode" xmi:id="_1Mv2KXMaEeeoYuc64YE22w" name="Join(Input))" incoming="_1Mv2JXMaEeeoYuc64YE22w" outgoing="_1Mv2JnMaEeeoYuc64YE22w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_1MyShXMaEeeoYuc64YE22w" name="Expressions_Assignment$method$1" specification="_1MzhWXMaEeeoYuc64YE22w" node="_1MySinMaEeeoYuc64YE22w _1MySi3MaEeeoYuc64YE22w" group="_1MySi3MaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_1MyShnMaEeeoYuc64YE22w" name="" type="_1Mv2EXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySh3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySiHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySiXMaEeeoYuc64YE22w" target="_1MySinMaEeeoYuc64YE22w" source="_1MySr3MaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_1MySi3MaEeeoYuc64YE22w" name="Body(Expressions_Assignment$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySjHMaEeeoYuc64YE22w" target="_1MySr3MaEeeoYuc64YE22w" source="_1MySrHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MySjXMaEeeoYuc64YE22w" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MySjnMaEeeoYuc64YE22w" name="ExpressionStatement@10ca3611">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySj3MaEeeoYuc64YE22w" target="_1MySonMaEeeoYuc64YE22w" source="_1MySlHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_1MySkHMaEeeoYuc64YE22w" target="_1MySoXMaEeeoYuc64YE22w" source="_1MySknMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySkXMaEeeoYuc64YE22w" target="_1MySqHMaEeeoYuc64YE22w" source="_1MySmXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MySknMaEeeoYuc64YE22w" name="Tuple@78ac66e2" outgoing="_1MySkHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MySk3MaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_1MySlHMaEeeoYuc64YE22w" name="Value(null).result" outgoing="_1MySj3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySlXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySlnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_1MySl3MaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_1MySmHMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_1MySmXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_1MySkXMaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySmnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySm3MaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MySnHMaEeeoYuc64YE22w" name="Node(Call(run))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySnXMaEeeoYuc64YE22w" target="_1MySnnMaEeeoYuc64YE22w" source="_1MySpXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_1MySnnMaEeeoYuc64YE22w" name="Output(Call(run).result())" incoming="_1MySnXMaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySn3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySoHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_1MySoXMaEeeoYuc64YE22w" name="Call(run)" incoming="_1MySkHMaEeeoYuc64YE22w" operation="_1MzhUnMaEeeoYuc64YE22w">
                  <argument xmi:id="_1MySonMaEeeoYuc64YE22w" name="Call(run).argument(tester)" incoming="_1MySj3MaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySo3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySpHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_1MySpXMaEeeoYuc64YE22w" name="Call(run).result()" outgoing="_1MySnXMaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySpnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySp3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <target xmi:id="_1MySqHMaEeeoYuc64YE22w" name="Call(run).target" incoming="_1MySkXMaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySqXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySqnMaEeeoYuc64YE22w" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_1MySq3MaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_1MySrHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_1MySjHMaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySrXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySrnMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_1MySr3MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_1MySjHMaEeeoYuc64YE22w" outgoing="_1MySiXMaEeeoYuc64YE22w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_1MySinMaEeeoYuc64YE22w" name="Return" incoming="_1MySiXMaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" parameter="_1MyShnMaEeeoYuc64YE22w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_1MySsHMaEeeoYuc64YE22w" name="test$method$1" specification="_1MzhXXMaEeeoYuc64YE22w" node="_1MySxXMaEeeoYuc64YE22w _1MySxnMaEeeoYuc64YE22w _1MySx3MaEeeoYuc64YE22w _1MySyHMaEeeoYuc64YE22w _1MySyXMaEeeoYuc64YE22w _1MySynMaEeeoYuc64YE22w" group="_1MySynMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_1MySsXMaEeeoYuc64YE22w" name="i" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySsnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySs3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_1MyStHMaEeeoYuc64YE22w" name="f" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyStXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyStnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_1MySt3MaEeeoYuc64YE22w" name="h" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySuHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySuXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_1MySunMaEeeoYuc64YE22w" name="filename" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySu3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySvHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_1MySvXMaEeeoYuc64YE22w" name="a" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MySvnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MySv3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySwHMaEeeoYuc64YE22w" target="_1MySxXMaEeeoYuc64YE22w" source="_1MyS_nMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySwXMaEeeoYuc64YE22w" target="_1MySxnMaEeeoYuc64YE22w" source="_1MyTAXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySwnMaEeeoYuc64YE22w" target="_1MySx3MaEeeoYuc64YE22w" source="_1MyTBHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySw3MaEeeoYuc64YE22w" target="_1MySyHMaEeeoYuc64YE22w" source="_1MyTB3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySxHMaEeeoYuc64YE22w" target="_1MySyXMaEeeoYuc64YE22w" source="_1MyTCnMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_1MySynMaEeeoYuc64YE22w" name="Body(test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySy3MaEeeoYuc64YE22w" target="_1MyTGnMaEeeoYuc64YE22w" source="_1MyTD3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MySzHMaEeeoYuc64YE22w" target="_1MyTFnMaEeeoYuc64YE22w" source="_1MyTDXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySzXMaEeeoYuc64YE22w" target="_1MyTLnMaEeeoYuc64YE22w" source="_1MyTI3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MySznMaEeeoYuc64YE22w" target="_1MyTKnMaEeeoYuc64YE22w" source="_1MyTFnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MySz3MaEeeoYuc64YE22w" target="_1MyTQnMaEeeoYuc64YE22w" source="_1MyTN3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS0HMaEeeoYuc64YE22w" target="_1MyTPnMaEeeoYuc64YE22w" source="_1MyTKnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS0XMaEeeoYuc64YE22w" target="_1My5Z3MaEeeoYuc64YE22w" source="_1MyTS3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS0nMaEeeoYuc64YE22w" target="_1My5Y3MaEeeoYuc64YE22w" source="_1MyTPnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS03MaEeeoYuc64YE22w" target="_1My5e3MaEeeoYuc64YE22w" source="_1My5cHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS1HMaEeeoYuc64YE22w" target="_1My5d3MaEeeoYuc64YE22w" source="_1My5Y3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS1XMaEeeoYuc64YE22w" target="_1My5j3MaEeeoYuc64YE22w" source="_1My5hHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS1nMaEeeoYuc64YE22w" target="_1My5i3MaEeeoYuc64YE22w" source="_1My5d3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS13MaEeeoYuc64YE22w" target="_1My5n3MaEeeoYuc64YE22w" source="_1My5i3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS2HMaEeeoYuc64YE22w" target="_1My5rHMaEeeoYuc64YE22w" source="_1My5oXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS2XMaEeeoYuc64YE22w" target="_1My5qHMaEeeoYuc64YE22w" source="_1My5n3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS2nMaEeeoYuc64YE22w" target="_1My5wHMaEeeoYuc64YE22w" source="_1My5tXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS23MaEeeoYuc64YE22w" target="_1My5vHMaEeeoYuc64YE22w" source="_1My5qHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS3HMaEeeoYuc64YE22w" target="_1My51HMaEeeoYuc64YE22w" source="_1My5yXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS3XMaEeeoYuc64YE22w" target="_1My50HMaEeeoYuc64YE22w" source="_1My5vHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS3nMaEeeoYuc64YE22w" target="_1My55HMaEeeoYuc64YE22w" source="_1My50HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS33MaEeeoYuc64YE22w" target="_1My6CnMaEeeoYuc64YE22w" source="_1My55HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS4HMaEeeoYuc64YE22w" target="_1My6H3MaEeeoYuc64YE22w" source="_1My6DHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS4XMaEeeoYuc64YE22w" target="_1My6G3MaEeeoYuc64YE22w" source="_1My6CnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS4nMaEeeoYuc64YE22w" target="_1My6O3MaEeeoYuc64YE22w" source="_1My6KHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS43MaEeeoYuc64YE22w" target="_1My6N3MaEeeoYuc64YE22w" source="_1My6G3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS5HMaEeeoYuc64YE22w" target="_1My6V3MaEeeoYuc64YE22w" source="_1My6RHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS5XMaEeeoYuc64YE22w" target="_1My6U3MaEeeoYuc64YE22w" source="_1My6N3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS5nMaEeeoYuc64YE22w" target="_1My6c3MaEeeoYuc64YE22w" source="_1My6YHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS53MaEeeoYuc64YE22w" target="_1My6b3MaEeeoYuc64YE22w" source="_1My6U3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS6HMaEeeoYuc64YE22w" target="_1MzgdXMaEeeoYuc64YE22w" source="_1My6fHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS6XMaEeeoYuc64YE22w" target="_1MzgcXMaEeeoYuc64YE22w" source="_1My6b3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS6nMaEeeoYuc64YE22w" target="_1MzgiXMaEeeoYuc64YE22w" source="_1MzgfnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS63MaEeeoYuc64YE22w" target="_1MzghXMaEeeoYuc64YE22w" source="_1MzgcXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS7HMaEeeoYuc64YE22w" target="_1MzgmXMaEeeoYuc64YE22w" source="_1MzghXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS7XMaEeeoYuc64YE22w" target="_1MzgpnMaEeeoYuc64YE22w" source="_1Mzgm3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS7nMaEeeoYuc64YE22w" target="_1MzgonMaEeeoYuc64YE22w" source="_1MzgmXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS73MaEeeoYuc64YE22w" target="_1MzgtnMaEeeoYuc64YE22w" source="_1MzgonMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS8HMaEeeoYuc64YE22w" target="_1Mzgw3MaEeeoYuc64YE22w" source="_1MzguHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS8XMaEeeoYuc64YE22w" target="_1Mzgv3MaEeeoYuc64YE22w" source="_1MzgtnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS8nMaEeeoYuc64YE22w" target="_1Mzg03MaEeeoYuc64YE22w" source="_1Mzgv3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS83MaEeeoYuc64YE22w" target="_1Mzg33MaEeeoYuc64YE22w" source="_1Mzg1XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS9HMaEeeoYuc64YE22w" target="_1Mzg4nMaEeeoYuc64YE22w" source="_1My5mHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS9XMaEeeoYuc64YE22w" target="_1Mzg3HMaEeeoYuc64YE22w" source="_1Mzg03MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS9nMaEeeoYuc64YE22w" target="_1Mzg6nMaEeeoYuc64YE22w" source="_1Mzg3HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS93MaEeeoYuc64YE22w" target="_1Mzg93MaEeeoYuc64YE22w" source="_1Mzg7HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MyS-HMaEeeoYuc64YE22w" target="_1Mzg83MaEeeoYuc64YE22w" source="_1Mzg6nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS-XMaEeeoYuc64YE22w" target="_1MyS_nMaEeeoYuc64YE22w" source="_1My5mHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS-nMaEeeoYuc64YE22w" target="_1MyTAXMaEeeoYuc64YE22w" source="_1My53XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS-3MaEeeoYuc64YE22w" target="_1MyTBHMaEeeoYuc64YE22w" source="_1MzgknMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS_HMaEeeoYuc64YE22w" target="_1MyTB3MaEeeoYuc64YE22w" source="_1Mzgr3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyS_XMaEeeoYuc64YE22w" target="_1MyTCnMaEeeoYuc64YE22w" source="_1MzhAHMaEeeoYuc64YE22w"/>
          <structuredNodeOutput xmi:id="_1MyS_nMaEeeoYuc64YE22w" name="Output(i)" incoming="_1MyS-XMaEeeoYuc64YE22w" outgoing="_1MySwHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyS_3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTAHMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_1MyTAXMaEeeoYuc64YE22w" name="Output(f)" incoming="_1MyS-nMaEeeoYuc64YE22w" outgoing="_1MySwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTAnMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTA3MaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_1MyTBHMaEeeoYuc64YE22w" name="Output(h)" incoming="_1MyS-3MaEeeoYuc64YE22w" outgoing="_1MySwnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTBXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTBnMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_1MyTB3MaEeeoYuc64YE22w" name="Output(filename)" incoming="_1MyS_HMaEeeoYuc64YE22w" outgoing="_1MySw3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTCHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTCXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_1MyTCnMaEeeoYuc64YE22w" name="Output(a)" incoming="_1MyS_XMaEeeoYuc64YE22w" outgoing="_1MySxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTC3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTDHMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MyTDXMaEeeoYuc64YE22w" name="ExpressionStatement@735ae7f5" outgoing="_1MySzHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyTDnMaEeeoYuc64YE22w" target="_1MyTD3MaEeeoYuc64YE22w" source="_1MyTEnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_1MyTD3MaEeeoYuc64YE22w" name="Fork(i)@4e081ec7" incoming="_1MyTDnMaEeeoYuc64YE22w" outgoing="_1MySy3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MyTEHMaEeeoYuc64YE22w" name="RightHandSide@46646e38">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MyTEXMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1MyTEnMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1MyTDnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTE3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTFHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1MyTFXMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MyTFnMaEeeoYuc64YE22w" name="ExpressionStatement@7ffb99da" incoming="_1MySzHMaEeeoYuc64YE22w" outgoing="_1MySznMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyTF3MaEeeoYuc64YE22w" target="_1MyTHXMaEeeoYuc64YE22w" source="_1MyTJnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyTGHMaEeeoYuc64YE22w" target="_1MyTI3MaEeeoYuc64YE22w" source="_1MyTIHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MyTGXMaEeeoYuc64YE22w" name="Call(+)">
              <argument xmi:id="_1MyTGnMaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_1MySy3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTG3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTHHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1MyTHXMaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_1MyTF3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTHnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTH3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1MyTIHMaEeeoYuc64YE22w" name="Call(+).result(result)" outgoing="_1MyTGHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTIXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTInMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1MyTI3MaEeeoYuc64YE22w" name="Fork(i)@18b33243" incoming="_1MyTGHMaEeeoYuc64YE22w" outgoing="_1MySzXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MyTJHMaEeeoYuc64YE22w" name="RightHandSide@4c5bcc6e">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MyTJXMaEeeoYuc64YE22w" name="Value(4)">
                <result xmi:id="_1MyTJnMaEeeoYuc64YE22w" name="Value(4).result" outgoing="_1MyTF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTJ3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTKHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1MyTKXMaEeeoYuc64YE22w" value="4">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MyTKnMaEeeoYuc64YE22w" name="ExpressionStatement@58f49b5e" incoming="_1MySznMaEeeoYuc64YE22w" outgoing="_1MyS0HMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyTK3MaEeeoYuc64YE22w" target="_1MyTMXMaEeeoYuc64YE22w" source="_1MyTOnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyTLHMaEeeoYuc64YE22w" target="_1MyTN3MaEeeoYuc64YE22w" source="_1MyTNHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MyTLXMaEeeoYuc64YE22w" name="Call(+)">
              <argument xmi:id="_1MyTLnMaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_1MySzXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTL3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTMHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1MyTMXMaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_1MyTK3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTMnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTM3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1MyTNHMaEeeoYuc64YE22w" name="Call(+).result(result)" outgoing="_1MyTLHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTNXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTNnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1MyTN3MaEeeoYuc64YE22w" name="Fork(i)@14e8a173" incoming="_1MyTLHMaEeeoYuc64YE22w" outgoing="_1MySz3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MyTOHMaEeeoYuc64YE22w" name="RightHandSide@764dfaf3">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MyTOXMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1MyTOnMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1MyTK3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTO3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTPHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1MyTPXMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MyTPnMaEeeoYuc64YE22w" name="ExpressionStatement@4a1ac68f" incoming="_1MyS0HMaEeeoYuc64YE22w" outgoing="_1MyS0nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyTP3MaEeeoYuc64YE22w" target="_1MyTRXMaEeeoYuc64YE22w" source="_1MyTTnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MyTQHMaEeeoYuc64YE22w" target="_1MyTS3MaEeeoYuc64YE22w" source="_1MyTSHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MyTQXMaEeeoYuc64YE22w" name="Call(-)">
              <argument xmi:id="_1MyTQnMaEeeoYuc64YE22w" name="Call(-).argument(x)" incoming="_1MySz3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTQ3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTRHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1MyTRXMaEeeoYuc64YE22w" name="Call(-).argument(y)" incoming="_1MyTP3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTRnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTR3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1MyTSHMaEeeoYuc64YE22w" name="Call(-).result(result)" outgoing="_1MyTQHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MyTSXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MyTSnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1MyTS3MaEeeoYuc64YE22w" name="Fork(i)@1a168086" incoming="_1MyTQHMaEeeoYuc64YE22w" outgoing="_1MyS0XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MyTTHMaEeeoYuc64YE22w" name="RightHandSide@317032b5">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MyTTXMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1MyTTnMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1MyTP3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5YHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5YXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1My5YnMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My5Y3MaEeeoYuc64YE22w" name="ExpressionStatement@f0b01d4" incoming="_1MyS0nMaEeeoYuc64YE22w" outgoing="_1MyS1HMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My5ZHMaEeeoYuc64YE22w" target="_1My5anMaEeeoYuc64YE22w" source="_1My5c3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My5ZXMaEeeoYuc64YE22w" target="_1My5cHMaEeeoYuc64YE22w" source="_1My5bXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My5ZnMaEeeoYuc64YE22w" name="Call(*)">
              <argument xmi:id="_1My5Z3MaEeeoYuc64YE22w" name="Call(*).argument(x)" incoming="_1MyS0XMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5aHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5aXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1My5anMaEeeoYuc64YE22w" name="Call(*).argument(y)" incoming="_1My5ZHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5a3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5bHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1My5bXMaEeeoYuc64YE22w" name="Call(*).result(result)" outgoing="_1My5ZXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5bnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5b3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-times"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1My5cHMaEeeoYuc64YE22w" name="Fork(i)@4f9d220b" incoming="_1My5ZXMaEeeoYuc64YE22w" outgoing="_1MyS03MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My5cXMaEeeoYuc64YE22w" name="RightHandSide@2839ac4c">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1My5cnMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1My5c3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1My5ZHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5dHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5dXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1My5dnMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My5d3MaEeeoYuc64YE22w" name="ExpressionStatement@1b3b650c" incoming="_1MyS1HMaEeeoYuc64YE22w" outgoing="_1MyS1nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My5eHMaEeeoYuc64YE22w" target="_1My5fnMaEeeoYuc64YE22w" source="_1My5h3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My5eXMaEeeoYuc64YE22w" target="_1My5hHMaEeeoYuc64YE22w" source="_1My5gXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My5enMaEeeoYuc64YE22w" name="Call(Mod)">
              <argument xmi:id="_1My5e3MaEeeoYuc64YE22w" name="Call(Mod).argument(x)" incoming="_1MyS03MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5fHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5fXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1My5fnMaEeeoYuc64YE22w" name="Call(Mod).argument(y)" incoming="_1My5eHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5f3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5gHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1My5gXMaEeeoYuc64YE22w" name="Call(Mod).result(result)" outgoing="_1My5eXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5gnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5g3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1My5hHMaEeeoYuc64YE22w" name="Fork(i)@78ffe38" incoming="_1My5eXMaEeeoYuc64YE22w" outgoing="_1MyS1XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My5hXMaEeeoYuc64YE22w" name="RightHandSide@5cf24f99">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1My5hnMaEeeoYuc64YE22w" name="Value(6)">
                <result xmi:id="_1My5h3MaEeeoYuc64YE22w" name="Value(6).result" outgoing="_1My5eHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5iHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5iXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1My5inMaEeeoYuc64YE22w" value="6">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My5i3MaEeeoYuc64YE22w" name="ExpressionStatement@5d63295e" incoming="_1MyS1nMaEeeoYuc64YE22w" outgoing="_1MyS13MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My5jHMaEeeoYuc64YE22w" target="_1My5knMaEeeoYuc64YE22w" source="_1My5m3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My5jXMaEeeoYuc64YE22w" target="_1My5mHMaEeeoYuc64YE22w" source="_1My5lXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My5jnMaEeeoYuc64YE22w" name="Call(Div)">
              <argument xmi:id="_1My5j3MaEeeoYuc64YE22w" name="Call(Div).argument(x)" incoming="_1MyS1XMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5kHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5kXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1My5knMaEeeoYuc64YE22w" name="Call(Div).argument(y)" incoming="_1My5jHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5k3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5lHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1My5lXMaEeeoYuc64YE22w" name="Call(Div).result(result)" outgoing="_1My5jXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5lnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5l3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1My5mHMaEeeoYuc64YE22w" name="Fork(i)@37cb41fa" incoming="_1My5jXMaEeeoYuc64YE22w" outgoing="_1MyS9HMaEeeoYuc64YE22w _1MyS-XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My5mXMaEeeoYuc64YE22w" name="RightHandSide@22587721">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1My5mnMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1My5m3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1My5jHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5nHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5nXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1My5nnMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My5n3MaEeeoYuc64YE22w" name="ExpressionStatement@462d8276" incoming="_1MyS13MaEeeoYuc64YE22w" outgoing="_1MyS2XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My5oHMaEeeoYuc64YE22w" target="_1My5oXMaEeeoYuc64YE22w" source="_1My5pHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_1My5oXMaEeeoYuc64YE22w" name="Fork(f)@606b9417" incoming="_1My5oHMaEeeoYuc64YE22w" outgoing="_1MyS2HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My5onMaEeeoYuc64YE22w" name="RightHandSide@10743711">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1My5o3MaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_1My5pHMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_1My5oHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5pXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5pnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_1My5p3MaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My5qHMaEeeoYuc64YE22w" name="ExpressionStatement@764a5191" incoming="_1MyS2XMaEeeoYuc64YE22w" outgoing="_1MyS23MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My5qXMaEeeoYuc64YE22w" target="_1My5r3MaEeeoYuc64YE22w" source="_1My5uHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My5qnMaEeeoYuc64YE22w" target="_1My5tXMaEeeoYuc64YE22w" source="_1My5snMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My5q3MaEeeoYuc64YE22w" name="Call(And)">
              <argument xmi:id="_1My5rHMaEeeoYuc64YE22w" name="Call(And).argument(x)" incoming="_1MyS2HMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5rXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5rnMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1My5r3MaEeeoYuc64YE22w" name="Call(And).argument(y)" incoming="_1My5qXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5sHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5sXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1My5snMaEeeoYuc64YE22w" name="Call(And).result(result)" outgoing="_1My5qnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5s3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5tHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-And"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1My5tXMaEeeoYuc64YE22w" name="Fork(f)@e166b1e" incoming="_1My5qnMaEeeoYuc64YE22w" outgoing="_1MyS2nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My5tnMaEeeoYuc64YE22w" name="RightHandSide@221f7bf5">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1My5t3MaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_1My5uHMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_1My5qXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5uXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5unMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_1My5u3MaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My5vHMaEeeoYuc64YE22w" name="ExpressionStatement@464fecb1" incoming="_1MyS23MaEeeoYuc64YE22w" outgoing="_1MyS3XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My5vXMaEeeoYuc64YE22w" target="_1My5w3MaEeeoYuc64YE22w" source="_1My5zHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My5vnMaEeeoYuc64YE22w" target="_1My5yXMaEeeoYuc64YE22w" source="_1My5xnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My5v3MaEeeoYuc64YE22w" name="Call(Or)">
              <argument xmi:id="_1My5wHMaEeeoYuc64YE22w" name="Call(Or).argument(x)" incoming="_1MyS2nMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5wXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5wnMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1My5w3MaEeeoYuc64YE22w" name="Call(Or).argument(y)" incoming="_1My5vXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5xHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5xXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1My5xnMaEeeoYuc64YE22w" name="Call(Or).result(result)" outgoing="_1My5vnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5x3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5yHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1My5yXMaEeeoYuc64YE22w" name="Fork(f)@537762d7" incoming="_1My5vnMaEeeoYuc64YE22w" outgoing="_1MyS3HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My5ynMaEeeoYuc64YE22w" name="RightHandSide@6f06b73a">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1My5y3MaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_1My5zHMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_1My5vXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5zXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5znMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_1My5z3MaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My50HMaEeeoYuc64YE22w" name="ExpressionStatement@2f4daa0c" incoming="_1MyS3XMaEeeoYuc64YE22w" outgoing="_1MyS3nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My50XMaEeeoYuc64YE22w" target="_1My513MaEeeoYuc64YE22w" source="_1My54HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My50nMaEeeoYuc64YE22w" target="_1My53XMaEeeoYuc64YE22w" source="_1My52nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My503MaEeeoYuc64YE22w" name="Call(Xor)">
              <argument xmi:id="_1My51HMaEeeoYuc64YE22w" name="Call(Xor).argument(x)" incoming="_1MyS3HMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My51XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My51nMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1My513MaEeeoYuc64YE22w" name="Call(Xor).argument(y)" incoming="_1My50XMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My52HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My52XMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1My52nMaEeeoYuc64YE22w" name="Call(Xor).result(result)" outgoing="_1My50nMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My523MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My53HMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Xor"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1My53XMaEeeoYuc64YE22w" name="Fork(f)@1997784a" incoming="_1My50nMaEeeoYuc64YE22w" outgoing="_1MyS-nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My53nMaEeeoYuc64YE22w" name="RightHandSide@6ead88dd">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1My533MaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_1My54HMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_1My50XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My54XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My54nMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_1My543MaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My55HMaEeeoYuc64YE22w" name="ExpressionStatement@5084fc91" incoming="_1MyS3nMaEeeoYuc64YE22w" outgoing="_1MyS33MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My55XMaEeeoYuc64YE22w" target="_1My55nMaEeeoYuc64YE22w" source="_1My6CXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_1My55nMaEeeoYuc64YE22w" name="Fork(h)@4142586b" incoming="_1My55XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My553MaEeeoYuc64YE22w" name="RightHandSide@275aac80">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1My56HMaEeeoYuc64YE22w" target="_1My6CHMaEeeoYuc64YE22w" source="_1My56nMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1My56XMaEeeoYuc64YE22w" name="Value(0)">
                <result xmi:id="_1My56nMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_1My56HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My563MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My57HMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1My57XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_1My57nMaEeeoYuc64YE22w" name="CastExpression@275aac80" mode="parallel" outputElement="_1My6CXMaEeeoYuc64YE22w" inputElement="_1My6CHMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1My573MaEeeoYuc64YE22w" target="_1My5-XMaEeeoYuc64YE22w" source="_1My5_3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1My58HMaEeeoYuc64YE22w" target="_1My593MaEeeoYuc64YE22w" source="_1My6BHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1My58XMaEeeoYuc64YE22w" target="_1My6B3MaEeeoYuc64YE22w" source="_1My5_3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1My58nMaEeeoYuc64YE22w" target="_1My6B3MaEeeoYuc64YE22w" source="_1My5_HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1My583MaEeeoYuc64YE22w" target="_1My6AXMaEeeoYuc64YE22w" source="_1My6B3MaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_1My59HMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1My59XMaEeeoYuc64YE22w" target="_1My5_3MaEeeoYuc64YE22w" source="_1My6CHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1My59nMaEeeoYuc64YE22w" target="_1My6CXMaEeeoYuc64YE22w" source="_1My593MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_1My593MaEeeoYuc64YE22w" name="Merge(CastExpression@275aac80.operand)" incoming="_1My58HMaEeeoYuc64YE22w" outgoing="_1My59nMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_1My5-HMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_1My5-XMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer).object" incoming="_1My573MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5-nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5-3MaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_1My5_HMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer).result" outgoing="_1My58nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My5_XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My5_nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_1My5_3MaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(Integer).object)" incoming="_1My59XMaEeeoYuc64YE22w" outgoing="_1My573MaEeeoYuc64YE22w _1My58XMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My6AHMaEeeoYuc64YE22w" name="Call(ToBitString)">
                  <argument xmi:id="_1My6AXMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_1My583MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6AnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6A3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_1My6BHMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_1My58HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6BXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6BnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_1My6B3MaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(Integer).result)" incoming="_1My58XMaEeeoYuc64YE22w _1My58nMaEeeoYuc64YE22w" outgoing="_1My583MaEeeoYuc64YE22w" decisionInputFlow="_1My58nMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_1My6CHMaEeeoYuc64YE22w" name="CastExpression@275aac80.inputElement" incoming="_1My56HMaEeeoYuc64YE22w" outgoing="_1My59XMaEeeoYuc64YE22w" regionAsInput="_1My57nMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_1My6CXMaEeeoYuc64YE22w" name="CastExpression@275aac80.outputElement" incoming="_1My59nMaEeeoYuc64YE22w" outgoing="_1My55XMaEeeoYuc64YE22w" regionAsOutput="_1My57nMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My6CnMaEeeoYuc64YE22w" name="ExpressionStatement@4e01cba8" incoming="_1MyS33MaEeeoYuc64YE22w" outgoing="_1MyS4XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My6C3MaEeeoYuc64YE22w" target="_1My6DHMaEeeoYuc64YE22w" source="_1My6GHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_1My6DHMaEeeoYuc64YE22w" name="Fork(h)@8c2bb88" incoming="_1My6C3MaEeeoYuc64YE22w" outgoing="_1MyS4HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My6DXMaEeeoYuc64YE22w" name="RightHandSide@4fe256c0">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1My6DnMaEeeoYuc64YE22w" target="_1My6FXMaEeeoYuc64YE22w" source="_1My6EHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1My6D3MaEeeoYuc64YE22w" name="Value(171)">
                <result xmi:id="_1My6EHMaEeeoYuc64YE22w" name="Value(171).result" outgoing="_1My6DnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6EXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6EnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1My6E3MaEeeoYuc64YE22w" value="171">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My6FHMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_1My6FXMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_1My6DnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6FnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6F3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_1My6GHMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_1My6C3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6GXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6GnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My6G3MaEeeoYuc64YE22w" name="ExpressionStatement@13f3a04e" incoming="_1MyS4XMaEeeoYuc64YE22w" outgoing="_1MyS43MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My6HHMaEeeoYuc64YE22w" target="_1My6InMaEeeoYuc64YE22w" source="_1My6NHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My6HXMaEeeoYuc64YE22w" target="_1My6KHMaEeeoYuc64YE22w" source="_1My6JXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My6HnMaEeeoYuc64YE22w" name="Call(&amp;)">
              <argument xmi:id="_1My6H3MaEeeoYuc64YE22w" name="Call(&amp;).argument(b1)" incoming="_1MyS4HMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6IHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6IXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1My6InMaEeeoYuc64YE22w" name="Call(&amp;).argument(b2)" incoming="_1My6HHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6I3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6JHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1My6JXMaEeeoYuc64YE22w" name="Call(&amp;).result()" outgoing="_1My6HXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6JnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6J3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-amp"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1My6KHMaEeeoYuc64YE22w" name="Fork(h)@4334aa1b" incoming="_1My6HXMaEeeoYuc64YE22w" outgoing="_1MyS4nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My6KXMaEeeoYuc64YE22w" name="RightHandSide@51b1039c">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1My6KnMaEeeoYuc64YE22w" target="_1My6MXMaEeeoYuc64YE22w" source="_1My6LHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1My6K3MaEeeoYuc64YE22w" name="Value(255)">
                <result xmi:id="_1My6LHMaEeeoYuc64YE22w" name="Value(255).result" outgoing="_1My6KnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6LXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6LnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1My6L3MaEeeoYuc64YE22w" value="255">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My6MHMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_1My6MXMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_1My6KnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6MnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6M3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_1My6NHMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_1My6HHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6NXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6NnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My6N3MaEeeoYuc64YE22w" name="ExpressionStatement@4edea211" incoming="_1MyS43MaEeeoYuc64YE22w" outgoing="_1MyS5XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My6OHMaEeeoYuc64YE22w" target="_1My6PnMaEeeoYuc64YE22w" source="_1My6UHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My6OXMaEeeoYuc64YE22w" target="_1My6RHMaEeeoYuc64YE22w" source="_1My6QXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My6OnMaEeeoYuc64YE22w" name="Call(|)">
              <argument xmi:id="_1My6O3MaEeeoYuc64YE22w" name="Call(|).argument(b1)" incoming="_1MyS4nMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6PHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6PXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1My6PnMaEeeoYuc64YE22w" name="Call(|).argument(b2)" incoming="_1My6OHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6P3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6QHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1My6QXMaEeeoYuc64YE22w" name="Call(|).result()" outgoing="_1My6OXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6QnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6Q3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-bar"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1My6RHMaEeeoYuc64YE22w" name="Fork(h)@106d4303" incoming="_1My6OXMaEeeoYuc64YE22w" outgoing="_1MyS5HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My6RXMaEeeoYuc64YE22w" name="RightHandSide@38d19150">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1My6RnMaEeeoYuc64YE22w" target="_1My6TXMaEeeoYuc64YE22w" source="_1My6SHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1My6R3MaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1My6SHMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1My6RnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6SXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6SnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1My6S3MaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My6THMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_1My6TXMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_1My6RnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6TnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6T3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_1My6UHMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_1My6OHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6UXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6UnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My6U3MaEeeoYuc64YE22w" name="ExpressionStatement@637721f4" incoming="_1MyS5XMaEeeoYuc64YE22w" outgoing="_1MyS53MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My6VHMaEeeoYuc64YE22w" target="_1My6WnMaEeeoYuc64YE22w" source="_1My6bHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My6VXMaEeeoYuc64YE22w" target="_1My6YHMaEeeoYuc64YE22w" source="_1My6XXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My6VnMaEeeoYuc64YE22w" name="Call(^)">
              <argument xmi:id="_1My6V3MaEeeoYuc64YE22w" name="Call(^).argument(b1)" incoming="_1MyS5HMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6WHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6WXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1My6WnMaEeeoYuc64YE22w" name="Call(^).argument(b2)" incoming="_1My6VHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6W3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6XHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1My6XXMaEeeoYuc64YE22w" name="Call(^).result()" outgoing="_1My6VXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6XnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6X3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-caret"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1My6YHMaEeeoYuc64YE22w" name="Fork(h)@19a3bfb5" incoming="_1My6VXMaEeeoYuc64YE22w" outgoing="_1MyS5nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My6YXMaEeeoYuc64YE22w" name="RightHandSide@4d7f34dd">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1My6YnMaEeeoYuc64YE22w" target="_1My6aXMaEeeoYuc64YE22w" source="_1My6ZHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1My6Y3MaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1My6ZHMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1My6YnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6ZXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6ZnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1My6Z3MaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My6aHMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_1My6aXMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_1My6YnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6anMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6a3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_1My6bHMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_1My6VHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6bXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6bnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My6b3MaEeeoYuc64YE22w" name="ExpressionStatement@5910ca72" incoming="_1MyS53MaEeeoYuc64YE22w" outgoing="_1MyS6XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My6cHMaEeeoYuc64YE22w" target="_1My6dnMaEeeoYuc64YE22w" source="_1My6f3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1My6cXMaEeeoYuc64YE22w" target="_1My6fHMaEeeoYuc64YE22w" source="_1My6eXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1My6cnMaEeeoYuc64YE22w" name="Call(&lt;&lt;)">
              <argument xmi:id="_1My6c3MaEeeoYuc64YE22w" name="Call(&lt;&lt;).argument(x)" incoming="_1MyS5nMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6dHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6dXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1My6dnMaEeeoYuc64YE22w" name="Call(&lt;&lt;).argument(n)" incoming="_1My6cHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6d3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6eHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1My6eXMaEeeoYuc64YE22w" name="Call(&lt;&lt;).result()" outgoing="_1My6cXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6enMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6e3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ltlt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1My6fHMaEeeoYuc64YE22w" name="Fork(h)@431c2020" incoming="_1My6cXMaEeeoYuc64YE22w" outgoing="_1MyS6HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1My6fXMaEeeoYuc64YE22w" name="RightHandSide@701dbfbd">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1My6fnMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1My6f3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1My6cHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1My6gHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1My6gXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1MzgcHMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzgcXMaEeeoYuc64YE22w" name="ExpressionStatement@3fe9caee" incoming="_1MyS6XMaEeeoYuc64YE22w" outgoing="_1MyS63MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzgcnMaEeeoYuc64YE22w" target="_1MzgeHMaEeeoYuc64YE22w" source="_1MzggXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzgc3MaEeeoYuc64YE22w" target="_1MzgfnMaEeeoYuc64YE22w" source="_1Mzge3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MzgdHMaEeeoYuc64YE22w" name="Call(>>)">
              <argument xmi:id="_1MzgdXMaEeeoYuc64YE22w" name="Call(>>).argument(x)" incoming="_1MyS6HMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzgdnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzgd3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1MzgeHMaEeeoYuc64YE22w" name="Call(>>).argument(n)" incoming="_1MzgcnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzgeXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzgenMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1Mzge3MaEeeoYuc64YE22w" name="Call(>>).result()" outgoing="_1Mzgc3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzgfHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzgfXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1MzgfnMaEeeoYuc64YE22w" name="Fork(h)@126aaaa5" incoming="_1Mzgc3MaEeeoYuc64YE22w" outgoing="_1MyS6nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzgf3MaEeeoYuc64YE22w" name="RightHandSide@6561629">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MzggHMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1MzggXMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1MzgcnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzggnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzgg3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1MzghHMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzghXMaEeeoYuc64YE22w" name="ExpressionStatement@4c489191" incoming="_1MyS63MaEeeoYuc64YE22w" outgoing="_1MyS7HMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzghnMaEeeoYuc64YE22w" target="_1MzgjHMaEeeoYuc64YE22w" source="_1MzglXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzgh3MaEeeoYuc64YE22w" target="_1MzgknMaEeeoYuc64YE22w" source="_1Mzgj3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MzgiHMaEeeoYuc64YE22w" name="Call(>>>)">
              <argument xmi:id="_1MzgiXMaEeeoYuc64YE22w" name="Call(>>>).argument(x)" incoming="_1MyS6nMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzginMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzgi3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1MzgjHMaEeeoYuc64YE22w" name="Call(>>>).argument(n)" incoming="_1MzghnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzgjXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzgjnMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1Mzgj3MaEeeoYuc64YE22w" name="Call(>>>).result()" outgoing="_1Mzgh3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzgkHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzgkXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1MzgknMaEeeoYuc64YE22w" name="Fork(h)@47a246ec" incoming="_1Mzgh3MaEeeoYuc64YE22w" outgoing="_1MyS-3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzgk3MaEeeoYuc64YE22w" name="RightHandSide@3f6404aa">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MzglHMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1MzglXMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1MzghnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzglnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzgl3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1MzgmHMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzgmXMaEeeoYuc64YE22w" name="ExpressionStatement@4a4cbe62" incoming="_1MyS7HMaEeeoYuc64YE22w" outgoing="_1MyS7nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzgmnMaEeeoYuc64YE22w" target="_1Mzgm3MaEeeoYuc64YE22w" source="_1MzgnnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_1Mzgm3MaEeeoYuc64YE22w" name="Fork(filename)@6cb2e94" incoming="_1MzgmnMaEeeoYuc64YE22w" outgoing="_1MyS7XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzgnHMaEeeoYuc64YE22w" name="RightHandSide@16de7a51">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MzgnXMaEeeoYuc64YE22w" name="Value(&quot;xyz&quot;)">
                <result xmi:id="_1MzgnnMaEeeoYuc64YE22w" name="Value(&quot;xyz&quot;).result" outgoing="_1MzgmnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzgn3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzgoHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_1MzgoXMaEeeoYuc64YE22w" value="xyz">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzgonMaEeeoYuc64YE22w" name="ExpressionStatement@2c2b93df" incoming="_1MyS7nMaEeeoYuc64YE22w" outgoing="_1MyS73MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzgo3MaEeeoYuc64YE22w" target="_1MzgqXMaEeeoYuc64YE22w" source="_1MzgsnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzgpHMaEeeoYuc64YE22w" target="_1Mzgr3MaEeeoYuc64YE22w" source="_1MzgrHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MzgpXMaEeeoYuc64YE22w" name="Call(Concat)">
              <argument xmi:id="_1MzgpnMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_1MyS7XMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzgp3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzgqHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1MzgqXMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_1Mzgo3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzgqnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzgq3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1MzgrHMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_1MzgpHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzgrXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzgrnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1Mzgr3MaEeeoYuc64YE22w" name="Fork(filename)@d2eb3a0" incoming="_1MzgpHMaEeeoYuc64YE22w" outgoing="_1MyS_HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzgsHMaEeeoYuc64YE22w" name="RightHandSide@2869fe47">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MzgsXMaEeeoYuc64YE22w" name="Value(&quot;.doc&quot;)">
                <result xmi:id="_1MzgsnMaEeeoYuc64YE22w" name="Value(&quot;.doc&quot;).result" outgoing="_1Mzgo3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzgs3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzgtHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_1MzgtXMaEeeoYuc64YE22w" value=".doc">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzgtnMaEeeoYuc64YE22w" name="ExpressionStatement@6641dd60" incoming="_1MyS73MaEeeoYuc64YE22w" outgoing="_1MyS8XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzgt3MaEeeoYuc64YE22w" target="_1MzguHMaEeeoYuc64YE22w" source="_1Mzgu3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_1MzguHMaEeeoYuc64YE22w" name="Fork(a)@64ea74ac" incoming="_1Mzgt3MaEeeoYuc64YE22w" outgoing="_1MyS8HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzguXMaEeeoYuc64YE22w" name="RightHandSide@396feeb5">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MzgunMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1Mzgu3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1Mzgt3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzgvHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzgvXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1MzgvnMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzgv3MaEeeoYuc64YE22w" name="ExpressionStatement@37eb27a2" incoming="_1MyS8XMaEeeoYuc64YE22w" outgoing="_1MyS8nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzgwHMaEeeoYuc64YE22w" target="_1MzgxnMaEeeoYuc64YE22w" source="_1Mzgz3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzgwXMaEeeoYuc64YE22w" target="_1MzgzHMaEeeoYuc64YE22w" source="_1MzgyXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MzgwnMaEeeoYuc64YE22w" name="Call(+)">
              <argument xmi:id="_1Mzgw3MaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_1MyS8HMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzgxHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzgxXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1MzgxnMaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_1MzgwHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzgx3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzgyHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1MzgyXMaEeeoYuc64YE22w" name="Call(+).result(result)" outgoing="_1MzgwXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzgynMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzgy3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1MzgzHMaEeeoYuc64YE22w" name="Fork(a)@139be871" incoming="_1MzgwXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzgzXMaEeeoYuc64YE22w" name="RightHandSide@1a19d0be">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MzgznMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1Mzgz3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1MzgwHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzg0HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzg0XMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1Mzg0nMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzg03MaEeeoYuc64YE22w" name="ExpressionStatement@1c7f52c8" incoming="_1MyS8nMaEeeoYuc64YE22w" outgoing="_1MyS9XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzg1HMaEeeoYuc64YE22w" target="_1Mzg1XMaEeeoYuc64YE22w" source="_1Mzg2HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_1Mzg1XMaEeeoYuc64YE22w" name="Fork(test::a)@7f5e2cf1" incoming="_1Mzg1HMaEeeoYuc64YE22w" outgoing="_1MyS83MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzg1nMaEeeoYuc64YE22w" name="RightHandSide@265c5489">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1Mzg13MaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1Mzg2HMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1Mzg1HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzg2XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzg2nMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1Mzg23MaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzg3HMaEeeoYuc64YE22w" name="ExpressionStatement@2f0fa056" incoming="_1MyS9XMaEeeoYuc64YE22w" outgoing="_1MyS9nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzg3XMaEeeoYuc64YE22w" target="_1Mzg6HMaEeeoYuc64YE22w" source="_1Mzg5XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1Mzg3nMaEeeoYuc64YE22w" name="Call(+)">
              <argument xmi:id="_1Mzg33MaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_1MyS83MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzg4HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzg4XMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1Mzg4nMaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_1MyS9HMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzg43MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzg5HMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1Mzg5XMaEeeoYuc64YE22w" name="Call(+).result(result)" outgoing="_1Mzg3XMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzg5nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzg53MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1Mzg6HMaEeeoYuc64YE22w" name="Fork(test::a)@1d3aad20" incoming="_1Mzg3XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzg6XMaEeeoYuc64YE22w" name="RightHandSide@44067808"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzg6nMaEeeoYuc64YE22w" name="ExpressionStatement@8466428" incoming="_1MyS9nMaEeeoYuc64YE22w" outgoing="_1MyS-HMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzg63MaEeeoYuc64YE22w" target="_1Mzg7HMaEeeoYuc64YE22w" source="_1Mzg73MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_1Mzg7HMaEeeoYuc64YE22w" name="Fork(test::a)@a56277b" incoming="_1Mzg63MaEeeoYuc64YE22w" outgoing="_1MyS93MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzg7XMaEeeoYuc64YE22w" name="RightHandSide@351bfccc">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1Mzg7nMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1Mzg73MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1Mzg63MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzg8HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzg8XMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1Mzg8nMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzg83MaEeeoYuc64YE22w" name="ExpressionStatement@386d0954" incoming="_1MyS-HMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzg9HMaEeeoYuc64YE22w" target="_1Mzg-nMaEeeoYuc64YE22w" source="_1MzhA3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzg9XMaEeeoYuc64YE22w" target="_1MzhAHMaEeeoYuc64YE22w" source="_1Mzg_XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1Mzg9nMaEeeoYuc64YE22w" name="Call(+)">
              <argument xmi:id="_1Mzg93MaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_1MyS93MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzg-HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzg-XMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_1Mzg-nMaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_1Mzg9HMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzg-3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzg_HMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1Mzg_XMaEeeoYuc64YE22w" name="Call(+).result(result)" outgoing="_1Mzg9XMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzg_nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzg_3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1MzhAHMaEeeoYuc64YE22w" name="Fork(test::a)@1e20dad5" incoming="_1Mzg9XMaEeeoYuc64YE22w" outgoing="_1MyS_XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzhAXMaEeeoYuc64YE22w" name="RightHandSide@59e89013">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MzhAnMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1MzhA3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1Mzg9HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhBHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhBXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1MzhBnMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_1MySxXMaEeeoYuc64YE22w" name="Output(i)" incoming="_1MySwHMaEeeoYuc64YE22w" parameter="_1MySsXMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_1MySxnMaEeeoYuc64YE22w" name="Output(f)" incoming="_1MySwXMaEeeoYuc64YE22w" parameter="_1MyStHMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_1MySx3MaEeeoYuc64YE22w" name="Output(h)" incoming="_1MySwnMaEeeoYuc64YE22w" parameter="_1MySt3MaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_1MySyHMaEeeoYuc64YE22w" name="Output(filename)" incoming="_1MySw3MaEeeoYuc64YE22w" parameter="_1MySunMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_1MySyXMaEeeoYuc64YE22w" name="Output(a)" incoming="_1MySxHMaEeeoYuc64YE22w" parameter="_1MySvXMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_1MzhB3MaEeeoYuc64YE22w" name="destroy$method$1" specification="_1MzhbXMaEeeoYuc64YE22w" node="_1MzhCHMaEeeoYuc64YE22w" group="_1MzhCHMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_1MzhCHMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_1MzhCXMaEeeoYuc64YE22w" name="Expressions_Assignment$initialization$1" specification="_1MzhUXMaEeeoYuc64YE22w" node="_1MzhCnMaEeeoYuc64YE22w" group="_1MzhCnMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_1MzhCnMaEeeoYuc64YE22w" name="Body(Expressions_Assignment$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhC3MaEeeoYuc64YE22w" target="_1MzhGnMaEeeoYuc64YE22w" source="_1MzhF3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhDHMaEeeoYuc64YE22w" target="_1MzhHnMaEeeoYuc64YE22w" source="_1MzhGnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhDXMaEeeoYuc64YE22w" target="_1MzhKXMaEeeoYuc64YE22w" source="_1MzhGnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhDnMaEeeoYuc64YE22w" target="_1MzhM3MaEeeoYuc64YE22w" source="_1MzhGnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhD3MaEeeoYuc64YE22w" target="_1MzhOnMaEeeoYuc64YE22w" source="_1MzhNnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhEHMaEeeoYuc64YE22w" target="_1MzhRnMaEeeoYuc64YE22w" source="_1MzhPXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhEXMaEeeoYuc64YE22w" target="_1MzhTHMaEeeoYuc64YE22w" source="_1MzhQXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MzhEnMaEeeoYuc64YE22w" target="_1MzhUHMaEeeoYuc64YE22w" source="_1MzhT3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhE3MaEeeoYuc64YE22w" target="_1MzhUHMaEeeoYuc64YE22w" source="_1MzhSXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MzhFHMaEeeoYuc64YE22w" target="_1MzhG3MaEeeoYuc64YE22w" source="_1MzhUHMaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_1MzhFXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_1MzhFnMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_1MzhF3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_1MzhC3MaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhGHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhGXMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_1MzhGnMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_1MzhC3MaEeeoYuc64YE22w" outgoing="_1MzhDHMaEeeoYuc64YE22w _1MzhDXMaEeeoYuc64YE22w _1MzhDnMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzhG3MaEeeoYuc64YE22w" name="Initialization" incoming="_1MzhFHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ControlFlow" xmi:id="_1MzhHHMaEeeoYuc64YE22w" target="_1MzhIXMaEeeoYuc64YE22w" source="_1MzhHXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_1MzhHXMaEeeoYuc64YE22w" name="Call(Test$initialization$1)" outgoing="_1MzhHHMaEeeoYuc64YE22w" operation="_1M0HpXMaEeeoYuc64YE22w">
              <target xmi:id="_1MzhHnMaEeeoYuc64YE22w" name="Call(Test$initialization$1).target" incoming="_1MzhDHMaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhH3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhIHMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzhIXMaEeeoYuc64YE22w" name="Set(initializationFlag)" incoming="_1MzhHHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhInMaEeeoYuc64YE22w" target="_1MzhL3MaEeeoYuc64YE22w" source="_1MzhJHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MzhI3MaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_1MzhJHMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_1MzhInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhJXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhJnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_1MzhJ3MaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_1MzhKHMaEeeoYuc64YE22w" name="Write(Expressions_Assignment$initializationFlag$1)" structuralFeature="_1Mv2GHMaEeeoYuc64YE22w" isReplaceAll="true">
                <object xmi:id="_1MzhKXMaEeeoYuc64YE22w" name="Write(Expressions_Assignment$initializationFlag$1).object" incoming="_1MzhDXMaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhKnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhK3MaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_1MzhLHMaEeeoYuc64YE22w" name="Write(Expressions_Assignment$initializationFlag$1).result" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhLXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhLnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:id="_1MzhL3MaEeeoYuc64YE22w" name="Write(Expressions_Assignment$initializationFlag$1).value" incoming="_1MzhInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhMHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhMXMaEeeoYuc64YE22w" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_1MzhMnMaEeeoYuc64YE22w" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_1Mv2GHMaEeeoYuc64YE22w">
            <object xmi:id="_1MzhM3MaEeeoYuc64YE22w" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_1MzhDnMaEeeoYuc64YE22w" type="_1Mv2EXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhNHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhNXMaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_1MzhNnMaEeeoYuc64YE22w" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_1MzhD3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhN3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhOHMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MzhOXMaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_1MzhOnMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_1MzhD3MaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhO3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhPHMaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_1MzhPXMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_1MzhEHMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhPnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhP3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MzhQHMaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_1MzhQXMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_1MzhEXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhQnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhQ3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_1MzhRHMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_1MzhRXMaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_1MzhRnMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_1MzhEHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhR3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhSHMaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_1MzhSXMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_1MzhE3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhSnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhS3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_1MzhTHMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_1MzhEXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhTXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhTnMaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_1MzhT3MaEeeoYuc64YE22w" name="InitialNode" outgoing="_1MzhEnMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_1MzhUHMaEeeoYuc64YE22w" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" incoming="_1MzhEnMaEeeoYuc64YE22w _1MzhE3MaEeeoYuc64YE22w" outgoing="_1MzhFHMaEeeoYuc64YE22w" decisionInputFlow="_1MzhE3MaEeeoYuc64YE22w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_1MzhUXMaEeeoYuc64YE22w" name="Expressions_Assignment$initialization$1" visibility="protected" method="_1MzhCXMaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_1MzhUnMaEeeoYuc64YE22w" name="run" visibility="public" method="_1Mv2G3MaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_1MzhU3MaEeeoYuc64YE22w" name="tester" visibility="package" type="_1M0Hr3MaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhVHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhVXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_1MzhVnMaEeeoYuc64YE22w" name="" visibility="package" type="_1Mv2EXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhV3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhWHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_1MzhWXMaEeeoYuc64YE22w" name="Expressions_Assignment" visibility="public" method="_1MyShXMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_1MzhWnMaEeeoYuc64YE22w" name="" visibility="package" type="_1Mv2EXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhW3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhXHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_1MzhXXMaEeeoYuc64YE22w" name="test" visibility="public" method="_1MySsHMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_1MzhXnMaEeeoYuc64YE22w" name="i" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhX3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhYHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_1MzhYXMaEeeoYuc64YE22w" name="f" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhYnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhY3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_1MzhZHMaEeeoYuc64YE22w" name="h" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhZXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhZnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_1MzhZ3MaEeeoYuc64YE22w" name="filename" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhaHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhaXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_1MzhanMaEeeoYuc64YE22w" name="a" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzha3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhbHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_1MzhbXMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_1MzhB3MaEeeoYuc64YE22w" redefinedOperation="_1M0HpnMaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1MzhbnMaEeeoYuc64YE22w" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_1Mzhb3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_1MzhcHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_1MzhcXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_1MzhcnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_1Mzhc3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_1MzhdHMaEeeoYuc64YE22w" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhdXMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhdnMaEeeoYuc64YE22w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_1Mzhd3MaEeeoYuc64YE22w" name="tester" visibility="private" type="_1M0Hr3MaEeeoYuc64YE22w">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzheHMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzheXMaEeeoYuc64YE22w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_1MzhenMaEeeoYuc64YE22w" name="destroy$method$1" specification="_1M0HpnMaEeeoYuc64YE22w" node="_1Mzhe3MaEeeoYuc64YE22w" group="_1Mzhe3MaEeeoYuc64YE22w">
        <structuredNode xmi:id="_1Mzhe3MaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_1MzhfHMaEeeoYuc64YE22w" name="done$method$1" specification="_1M0Hp3MaEeeoYuc64YE22w" node="_1MzhfXMaEeeoYuc64YE22w" group="_1MzhfXMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_1MzhfXMaEeeoYuc64YE22w" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MzhfnMaEeeoYuc64YE22w" target="_1Mzhj3MaEeeoYuc64YE22w" source="_1Mzhf3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzhf3MaEeeoYuc64YE22w" name="ExpressionStatement@777a67a0" outgoing="_1MzhfnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhgHMaEeeoYuc64YE22w" target="_1Mzhg3MaEeeoYuc64YE22w" source="_1Mzhi3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1MzhgXMaEeeoYuc64YE22w" target="_1MzhgnMaEeeoYuc64YE22w" source="_1MzhiXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MzhgnMaEeeoYuc64YE22w" name="Call(WriteLine)" incoming="_1MzhgXMaEeeoYuc64YE22w">
              <argument xmi:id="_1Mzhg3MaEeeoYuc64YE22w" name="Call(WriteLine).argument(value)" incoming="_1MzhgHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhhHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhhXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1MzhhnMaEeeoYuc64YE22w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzhh3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhiHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzhiXMaEeeoYuc64YE22w" name="Tuple@35db3ea2" outgoing="_1MzhgXMaEeeoYuc64YE22w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MzhinMaEeeoYuc64YE22w" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_1Mzhi3MaEeeoYuc64YE22w" name="Value(&quot;Done.&quot;).result" outgoing="_1MzhgHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhjHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhjXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_1MzhjnMaEeeoYuc64YE22w" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzhj3MaEeeoYuc64YE22w" name="ExpressionStatement@680410ec" incoming="_1MzhfnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhkHMaEeeoYuc64YE22w" target="_1MzhmHMaEeeoYuc64YE22w" source="_1MzhpHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1MzhkXMaEeeoYuc64YE22w" target="_1MzhknMaEeeoYuc64YE22w" source="_1MzhmXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_1MzhknMaEeeoYuc64YE22w" name="Collect(SendSignal(Continue))" incoming="_1MzhkXMaEeeoYuc64YE22w" mode="parallel" inputElement="_1MzhmHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzhk3MaEeeoYuc64YE22w" target="_1MzhlXMaEeeoYuc64YE22w" source="_1MzhmHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_1MzhlHMaEeeoYuc64YE22w" name="SendSignal(Continue)" signal="_1M0IOHMaEeeoYuc64YE22w">
                <target xmi:id="_1MzhlXMaEeeoYuc64YE22w" name="SendSignal(Continue).target" incoming="_1Mzhk3MaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhlnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzhl3MaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_1MzhmHMaEeeoYuc64YE22w" name="Collect(SendSignal(Continue)).inputElement" incoming="_1MzhkHMaEeeoYuc64YE22w" outgoing="_1Mzhk3MaEeeoYuc64YE22w" regionAsInput="_1MzhknMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzhmXMaEeeoYuc64YE22w" name="Feature(Read(tester).result)" outgoing="_1MzhkXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhmnMaEeeoYuc64YE22w" target="_1Mzhp3MaEeeoYuc64YE22w" source="_1MzhnXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzhm3MaEeeoYuc64YE22w" target="_1MzhoXMaEeeoYuc64YE22w" source="_1Mzhp3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_1MzhnHMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_1MzhnXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_1MzhmnMaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhnnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzhn3MaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_1MzhoHMaEeeoYuc64YE22w" name="Read(tester)" structuralFeature="_1Mzhd3MaEeeoYuc64YE22w">
                <object xmi:id="_1MzhoXMaEeeoYuc64YE22w" name="Read(tester).object" incoming="_1Mzhm3MaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhonMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzho3MaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_1MzhpHMaEeeoYuc64YE22w" name="Read(tester).result" outgoing="_1MzhkHMaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhpXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhpnMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_1Mzhp3MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_1MzhmnMaEeeoYuc64YE22w" outgoing="_1Mzhm3MaEeeoYuc64YE22w"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_1MzhqHMaEeeoYuc64YE22w" name="Test$method$1" specification="_1M0HqHMaEeeoYuc64YE22w" node="_1MzhtHMaEeeoYuc64YE22w _1Mzht3MaEeeoYuc64YE22w _1MzhtXMaEeeoYuc64YE22w _1MzhvXMaEeeoYuc64YE22w _1MzhtnMaEeeoYuc64YE22w" group="_1Mzht3MaEeeoYuc64YE22w _1MzhvXMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_1MzhqXMaEeeoYuc64YE22w" name="tester" type="_1M0Hr3MaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhqnMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzhq3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_1MzhrHMaEeeoYuc64YE22w" name="" type="_1MzhbnMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhrXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MzhrnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzhr3MaEeeoYuc64YE22w" target="_1MzhuXMaEeeoYuc64YE22w" source="_1MzhtHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhsHMaEeeoYuc64YE22w" target="_1Mzh23MaEeeoYuc64YE22w" source="_1MzhvHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhsXMaEeeoYuc64YE22w" target="_1MzhtXMaEeeoYuc64YE22w" source="_1Mzh93MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_1MzhsnMaEeeoYuc64YE22w" target="_1MzhtnMaEeeoYuc64YE22w" source="_1Mzht3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_1Mzhs3MaEeeoYuc64YE22w" target="_1MzhvXMaEeeoYuc64YE22w" source="_1MzhtnMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_1Mzht3MaEeeoYuc64YE22w" name="Node(Input(tester))" outgoing="_1MzhsnMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhuHMaEeeoYuc64YE22w" target="_1MzhvHMaEeeoYuc64YE22w" source="_1MzhuXMaEeeoYuc64YE22w"/>
          <structuredNodeInput xmi:id="_1MzhuXMaEeeoYuc64YE22w" name="Input(tester)" incoming="_1Mzhr3MaEeeoYuc64YE22w" outgoing="_1MzhuHMaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MzhunMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzhu3MaEeeoYuc64YE22w" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_1MzhvHMaEeeoYuc64YE22w" name="Fork(tester)" incoming="_1MzhuHMaEeeoYuc64YE22w" outgoing="_1MzhsHMaEeeoYuc64YE22w"/>
        </structuredNode>
        <structuredNode xmi:id="_1MzhvXMaEeeoYuc64YE22w" name="Body(Test$method$1)" incoming="_1Mzhs3MaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhvnMaEeeoYuc64YE22w" target="_1Mzh93MaEeeoYuc64YE22w" source="_1Mzh9HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzhv3MaEeeoYuc64YE22w" target="_1Mzh-XMaEeeoYuc64YE22w" source="_1Mzh93MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MzhwHMaEeeoYuc64YE22w" target="_1MzhyXMaEeeoYuc64YE22w" source="_1Mzh-HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhwXMaEeeoYuc64YE22w" target="_1Mzh_XMaEeeoYuc64YE22w" source="_1Mzh93MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhwnMaEeeoYuc64YE22w" target="_1MziBHMaEeeoYuc64YE22w" source="_1MziAHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzhw3MaEeeoYuc64YE22w" target="_1MziEHMaEeeoYuc64YE22w" source="_1MziB3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhxHMaEeeoYuc64YE22w" target="_1MziFnMaEeeoYuc64YE22w" source="_1MziC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MzhxXMaEeeoYuc64YE22w" target="_1MziGnMaEeeoYuc64YE22w" source="_1MziGXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhxnMaEeeoYuc64YE22w" target="_1MziGnMaEeeoYuc64YE22w" source="_1MziE3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1Mzhx3MaEeeoYuc64YE22w" target="_1Mzh-HMaEeeoYuc64YE22w" source="_1MziGnMaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_1MzhyHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzhyXMaEeeoYuc64YE22w" name="Body" incoming="_1MzhwHMaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MzhynMaEeeoYuc64YE22w" name="ExpressionStatement@324a5741">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzhy3MaEeeoYuc64YE22w" target="_1Mzh1XMaEeeoYuc64YE22w" source="_1Mzh0XMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhzHMaEeeoYuc64YE22w" target="_1Mzh3nMaEeeoYuc64YE22w" source="_1Mzh23MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1MzhzXMaEeeoYuc64YE22w" target="_1Mzh5HMaEeeoYuc64YE22w" source="_1Mzh2HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_1MzhznMaEeeoYuc64YE22w" target="_1Mzhz3MaEeeoYuc64YE22w" source="_1Mzh8nMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzhz3MaEeeoYuc64YE22w" name="Expression(LeftHandSide@4a99f9e5)" incoming="_1MzhznMaEeeoYuc64YE22w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_1Mzh0HMaEeeoYuc64YE22w" name="ReadSelf">
                  <result xmi:id="_1Mzh0XMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_1Mzhy3MaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzh0nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzh03MaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_1Mzh1HMaEeeoYuc64YE22w" name="Clear(tester)" structuralFeature="_1Mzhd3MaEeeoYuc64YE22w">
                <object xmi:id="_1Mzh1XMaEeeoYuc64YE22w" name="Clear(tester).object" incoming="_1Mzhy3MaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzh1nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzh13MaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_1Mzh2HMaEeeoYuc64YE22w" name="Clear(tester).result" outgoing="_1MzhzXMaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzh2XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzh2nMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_1Mzh23MaEeeoYuc64YE22w" name="Fork(LeftHandSide@4a99f9e5)" incoming="_1MzhsHMaEeeoYuc64YE22w" outgoing="_1MzhzHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzh3HMaEeeoYuc64YE22w" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzh3XMaEeeoYuc64YE22w" target="_1Mzh8XMaEeeoYuc64YE22w" source="_1Mzh3nMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_1Mzh3nMaEeeoYuc64YE22w" name="WriteAll(Test::tester).input(Test::tester)" incoming="_1MzhzHMaEeeoYuc64YE22w" outgoing="_1Mzh3XMaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzh33MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzh4HMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_1Mzh4XMaEeeoYuc64YE22w" name="Iterate(Write(tester))" inputElement="_1Mzh8XMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzh4nMaEeeoYuc64YE22w" target="_1Mzh7nMaEeeoYuc64YE22w" source="_1Mzh8XMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_1Mzh43MaEeeoYuc64YE22w" target="_1Mzh6HMaEeeoYuc64YE22w" source="_1Mzh5HMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_1Mzh5HMaEeeoYuc64YE22w" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_1MzhzXMaEeeoYuc64YE22w" outgoing="_1Mzh43MaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzh5XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzh5nMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_1Mzh53MaEeeoYuc64YE22w" name="Write(tester)" structuralFeature="_1Mzhd3MaEeeoYuc64YE22w">
                    <object xmi:id="_1Mzh6HMaEeeoYuc64YE22w" name="Write(tester).object" incoming="_1Mzh43MaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzh6XMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzh6nMaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_1Mzh63MaEeeoYuc64YE22w" name="Write(tester).result" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzh7HMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzh7XMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:id="_1Mzh7nMaEeeoYuc64YE22w" name="Write(tester).value" incoming="_1Mzh4nMaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzh73MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzh8HMaEeeoYuc64YE22w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_1Mzh8XMaEeeoYuc64YE22w" name="Iterate(Write(tester)).inputElement" incoming="_1Mzh3XMaEeeoYuc64YE22w" outgoing="_1Mzh4nMaEeeoYuc64YE22w" regionAsInput="_1Mzh4XMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1Mzh8nMaEeeoYuc64YE22w" name="RightHandSide@30f1487d" outgoing="_1MzhznMaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_1Mzh83MaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_1Mzh9HMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_1MzhvnMaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzh9XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzh9nMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_1Mzh93MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_1MzhvnMaEeeoYuc64YE22w" outgoing="_1MzhsXMaEeeoYuc64YE22w _1Mzhv3MaEeeoYuc64YE22w _1MzhwXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_1Mzh-HMaEeeoYuc64YE22w" name="Call(Test$initialization$1)" incoming="_1Mzhx3MaEeeoYuc64YE22w" outgoing="_1MzhwHMaEeeoYuc64YE22w" operation="_1M0HpXMaEeeoYuc64YE22w">
            <target xmi:id="_1Mzh-XMaEeeoYuc64YE22w" name="Call(Test$initialization$1).target" incoming="_1Mzhv3MaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzh-nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzh-3MaEeeoYuc64YE22w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_1Mzh_HMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1)" structuralFeature="_1MzhdHMaEeeoYuc64YE22w">
            <object xmi:id="_1Mzh_XMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).object" incoming="_1MzhwXMaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1Mzh_nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1Mzh_3MaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_1MziAHMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).result" outgoing="_1MzhwnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MziAXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MziAnMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_1MziA3MaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_1MziBHMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_1MzhwnMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MziBXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MziBnMaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_1MziB3MaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_1Mzhw3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MziCHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MziCXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MziCnMaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_1MziC3MaEeeoYuc64YE22w" name="Value(0).result" outgoing="_1MzhxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MziDHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MziDXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_1MziDnMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_1MziD3MaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_1MziEHMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_1Mzhw3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MziEXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MziEnMaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_1MziE3MaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_1MzhxnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MziFHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MziFXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_1MziFnMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_1MzhxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MziF3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MziGHMaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_1MziGXMaEeeoYuc64YE22w" name="InitialNode" outgoing="_1MzhxXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_1MziGnMaEeeoYuc64YE22w" name="Decision(Test(Test$initializationFlag$1))" incoming="_1MzhxXMaEeeoYuc64YE22w _1MzhxnMaEeeoYuc64YE22w" outgoing="_1Mzhx3MaEeeoYuc64YE22w" decisionInputFlow="_1MzhxnMaEeeoYuc64YE22w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_1MzhtHMaEeeoYuc64YE22w" name="Input(tester)" outgoing="_1Mzhr3MaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" parameter="_1MzhqXMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_1MzhtXMaEeeoYuc64YE22w" name="Return" incoming="_1MzhsXMaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" parameter="_1MzhrHMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:JoinNode" xmi:id="_1MzhtnMaEeeoYuc64YE22w" name="Join(Input))" incoming="_1MzhsnMaEeeoYuc64YE22w" outgoing="_1Mzhs3MaEeeoYuc64YE22w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_1MziG3MaEeeoYuc64YE22w" name="Test$initialization$1" specification="_1M0HpXMaEeeoYuc64YE22w" node="_1MziHHMaEeeoYuc64YE22w" group="_1MziHHMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_1MziHHMaEeeoYuc64YE22w" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MziHXMaEeeoYuc64YE22w" target="_1MziK3MaEeeoYuc64YE22w" source="_1MziKHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MziHnMaEeeoYuc64YE22w" target="_1MziNXMaEeeoYuc64YE22w" source="_1MziK3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MziH3MaEeeoYuc64YE22w" target="_1M0Hh3MaEeeoYuc64YE22w" source="_1MziK3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MziIHMaEeeoYuc64YE22w" target="_1M0HjnMaEeeoYuc64YE22w" source="_1M0HinMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MziIXMaEeeoYuc64YE22w" target="_1M0HmnMaEeeoYuc64YE22w" source="_1M0HkXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MziInMaEeeoYuc64YE22w" target="_1M0HoHMaEeeoYuc64YE22w" source="_1M0HlXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MziI3MaEeeoYuc64YE22w" target="_1M0HpHMaEeeoYuc64YE22w" source="_1M0Ho3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1MziJHMaEeeoYuc64YE22w" target="_1M0HpHMaEeeoYuc64YE22w" source="_1M0HnXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1MziJXMaEeeoYuc64YE22w" target="_1MziLHMaEeeoYuc64YE22w" source="_1M0HpHMaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_1MziJnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_1MziJ3MaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_1MziKHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_1MziHXMaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MziKXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MziKnMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_1MziK3MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_1MziHXMaEeeoYuc64YE22w" outgoing="_1MziHnMaEeeoYuc64YE22w _1MziH3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MziLHMaEeeoYuc64YE22w" name="Initialization" incoming="_1MziJXMaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1MziLXMaEeeoYuc64YE22w" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1MziLnMaEeeoYuc64YE22w" target="_1M0Hg3MaEeeoYuc64YE22w" source="_1MziMHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1MziL3MaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_1MziMHMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_1MziLnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MziMXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MziMnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_1MziM3MaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_1MziNHMaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1)" structuralFeature="_1MzhdHMaEeeoYuc64YE22w" isReplaceAll="true">
                <object xmi:id="_1MziNXMaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1).object" incoming="_1MziHnMaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1MziNnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1MziN3MaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_1M0HgHMaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1).result" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0HgXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0HgnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:id="_1M0Hg3MaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1).value" incoming="_1MziLnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0HhHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0HhXMaEeeoYuc64YE22w" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_1M0HhnMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1)" structuralFeature="_1MzhdHMaEeeoYuc64YE22w">
            <object xmi:id="_1M0Hh3MaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).object" incoming="_1MziH3MaEeeoYuc64YE22w" type="_1MzhbnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0HiHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0HiXMaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_1M0HinMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).result" outgoing="_1MziIHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0Hi3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0HjHMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0HjXMaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_1M0HjnMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_1MziIHMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0Hj3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0HkHMaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_1M0HkXMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_1MziIXMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0HknMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0Hk3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0HlHMaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_1M0HlXMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_1MziInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0HlnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0Hl3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_1M0HmHMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_1M0HmXMaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_1M0HmnMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_1MziIXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0Hm3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0HnHMaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_1M0HnXMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_1MziJHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0HnnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0Hn3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_1M0HoHMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_1MziInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0HoXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0HonMaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_1M0Ho3MaEeeoYuc64YE22w" name="InitialNode" outgoing="_1MziI3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_1M0HpHMaEeeoYuc64YE22w" name="Decision(Test(Test$initializationFlag$1))" incoming="_1MziI3MaEeeoYuc64YE22w _1MziJHMaEeeoYuc64YE22w" outgoing="_1MziJXMaEeeoYuc64YE22w" decisionInputFlow="_1MziJHMaEeeoYuc64YE22w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_1M0HpXMaEeeoYuc64YE22w" name="Test$initialization$1" visibility="protected" method="_1MziG3MaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_1M0HpnMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_1MzhenMaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_1M0Hp3MaEeeoYuc64YE22w" name="done" visibility="public" method="_1MzhfHMaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_1M0HqHMaEeeoYuc64YE22w" name="Test" visibility="protected" method="_1MzhqHMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_1M0HqXMaEeeoYuc64YE22w" name="tester" visibility="package" type="_1M0Hr3MaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0HqnMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0Hq3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_1M0HrHMaEeeoYuc64YE22w" name="" visibility="package" type="_1MzhbnMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0HrXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0HrnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_1M0Hr3MaEeeoYuc64YE22w" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_1M0HsHMaEeeoYuc64YE22w" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0HsXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0HsnMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_1M0Hs3MaEeeoYuc64YE22w" name="Tester$method$1" specification="_1M0IM3MaEeeoYuc64YE22w" node="_1M0HuHMaEeeoYuc64YE22w _1M0HuXMaEeeoYuc64YE22w" group="_1M0HuXMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_1M0HtHMaEeeoYuc64YE22w" name="" type="_1M0Hr3MaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0HtXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0HtnMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0Ht3MaEeeoYuc64YE22w" target="_1M0HuHMaEeeoYuc64YE22w" source="_1M0HynMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_1M0HuXMaEeeoYuc64YE22w" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0HunMaEeeoYuc64YE22w" target="_1M0HynMaEeeoYuc64YE22w" source="_1M0Hx3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0Hu3MaEeeoYuc64YE22w" target="_1M0HzHMaEeeoYuc64YE22w" source="_1M0HynMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0HvHMaEeeoYuc64YE22w" target="_1M0HxXMaEeeoYuc64YE22w" source="_1M0Hy3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0HvXMaEeeoYuc64YE22w" target="_1M0H0HMaEeeoYuc64YE22w" source="_1M0HynMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0HvnMaEeeoYuc64YE22w" target="_1M0H13MaEeeoYuc64YE22w" source="_1M0H03MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0Hv3MaEeeoYuc64YE22w" target="_1M0H43MaEeeoYuc64YE22w" source="_1M0H2nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0HwHMaEeeoYuc64YE22w" target="_1M0H6XMaEeeoYuc64YE22w" source="_1M0H3nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0HwXMaEeeoYuc64YE22w" target="_1M0H7XMaEeeoYuc64YE22w" source="_1M0H7HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0HwnMaEeeoYuc64YE22w" target="_1M0H7XMaEeeoYuc64YE22w" source="_1M0H5nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0Hw3MaEeeoYuc64YE22w" target="_1M0Hy3MaEeeoYuc64YE22w" source="_1M0H7XMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_1M0HxHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0HxXMaEeeoYuc64YE22w" name="Body" incoming="_1M0HvHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_1M0HxnMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_1M0Hx3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_1M0HunMaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0HyHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0HyXMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1M0HynMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_1M0HunMaEeeoYuc64YE22w" outgoing="_1M0Ht3MaEeeoYuc64YE22w _1M0Hu3MaEeeoYuc64YE22w _1M0HvXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_1M0Hy3MaEeeoYuc64YE22w" name="Call(Tester$initialization$1)" incoming="_1M0Hw3MaEeeoYuc64YE22w" outgoing="_1M0HvHMaEeeoYuc64YE22w" operation="_1M0IMnMaEeeoYuc64YE22w">
              <target xmi:id="_1M0HzHMaEeeoYuc64YE22w" name="Call(Tester$initialization$1).target" incoming="_1M0Hu3MaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0HzXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0HznMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_1M0Hz3MaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1)" structuralFeature="_1M0HsHMaEeeoYuc64YE22w">
              <object xmi:id="_1M0H0HMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).object" incoming="_1M0HvXMaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0H0XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0H0nMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_1M0H03MaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).result" outgoing="_1M0HvnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0H1HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0H1XMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0H1nMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_1M0H13MaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_1M0HvnMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0H2HMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0H2XMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_1M0H2nMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_1M0Hv3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0H23MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0H3HMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0H3XMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_1M0H3nMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_1M0HwHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0H33MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0H4HMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_1M0H4XMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_1M0H4nMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_1M0H43MaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_1M0Hv3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0H5HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0H5XMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_1M0H5nMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_1M0HwnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0H53MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0H6HMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_1M0H6XMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_1M0HwHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0H6nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0H63MaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_1M0H7HMaEeeoYuc64YE22w" name="InitialNode" outgoing="_1M0HwXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_1M0H7XMaEeeoYuc64YE22w" name="Decision(Test(Tester$initializationFlag$1))" incoming="_1M0HwXMaEeeoYuc64YE22w _1M0HwnMaEeeoYuc64YE22w" outgoing="_1M0Hw3MaEeeoYuc64YE22w" decisionInputFlow="_1M0HwnMaEeeoYuc64YE22w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_1M0HuHMaEeeoYuc64YE22w" name="Return" incoming="_1M0Ht3MaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" parameter="_1M0HtHMaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_1M0H7nMaEeeoYuc64YE22w" name="destroy$method$1" specification="_1M0IN3MaEeeoYuc64YE22w" node="_1M0H73MaEeeoYuc64YE22w" group="_1M0H73MaEeeoYuc64YE22w">
          <structuredNode xmi:id="_1M0H73MaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_1M0H8HMaEeeoYuc64YE22w" name="Tester$initialization$1" specification="_1M0IMnMaEeeoYuc64YE22w" node="_1M0H8XMaEeeoYuc64YE22w" group="_1M0H8XMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_1M0H8XMaEeeoYuc64YE22w" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0H8nMaEeeoYuc64YE22w" target="_1M0IAHMaEeeoYuc64YE22w" source="_1M0H_XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0H83MaEeeoYuc64YE22w" target="_1M0ICnMaEeeoYuc64YE22w" source="_1M0IAHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0H9HMaEeeoYuc64YE22w" target="_1M0IFHMaEeeoYuc64YE22w" source="_1M0IAHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0H9XMaEeeoYuc64YE22w" target="_1M0IG3MaEeeoYuc64YE22w" source="_1M0IF3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0H9nMaEeeoYuc64YE22w" target="_1M0IJ3MaEeeoYuc64YE22w" source="_1M0IHnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0H93MaEeeoYuc64YE22w" target="_1M0ILXMaEeeoYuc64YE22w" source="_1M0IInMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0H-HMaEeeoYuc64YE22w" target="_1M0IMXMaEeeoYuc64YE22w" source="_1M0IMHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0H-XMaEeeoYuc64YE22w" target="_1M0IMXMaEeeoYuc64YE22w" source="_1M0IKnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0H-nMaEeeoYuc64YE22w" target="_1M0IAXMaEeeoYuc64YE22w" source="_1M0IMXMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_1M0H-3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_1M0H_HMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_1M0H_XMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_1M0H8nMaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0H_nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0H_3MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1M0IAHMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_1M0H8nMaEeeoYuc64YE22w" outgoing="_1M0H83MaEeeoYuc64YE22w _1M0H9HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0IAXMaEeeoYuc64YE22w" name="Initialization" incoming="_1M0H-nMaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0IAnMaEeeoYuc64YE22w" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IA3MaEeeoYuc64YE22w" target="_1M0IEHMaEeeoYuc64YE22w" source="_1M0IBXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0IBHMaEeeoYuc64YE22w" name="Value(true)">
                  <result xmi:id="_1M0IBXMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_1M0IA3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IBnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IB3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_1M0ICHMaEeeoYuc64YE22w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_1M0ICXMaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1)" structuralFeature="_1M0HsHMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_1M0ICnMaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1).object" incoming="_1M0H83MaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IC3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IDHMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_1M0IDXMaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1).result" type="_1M0Hr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IDnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0ID3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_1M0IEHMaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1).value" incoming="_1M0IA3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IEXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IEnMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_1M0IE3MaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1)" structuralFeature="_1M0HsHMaEeeoYuc64YE22w">
              <object xmi:id="_1M0IFHMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).object" incoming="_1M0H9HMaEeeoYuc64YE22w" type="_1M0Hr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IFXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IFnMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_1M0IF3MaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).result" outgoing="_1M0H9XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IGHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IGXMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0IGnMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_1M0IG3MaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_1M0H9XMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IHHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IHXMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_1M0IHnMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_1M0H9nMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IH3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IIHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0IIXMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_1M0IInMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_1M0H93MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0II3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IJHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_1M0IJXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_1M0IJnMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_1M0IJ3MaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_1M0H9nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IKHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IKXMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_1M0IKnMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_1M0H-XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IK3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0ILHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_1M0ILXMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_1M0H93MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0ILnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IL3MaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_1M0IMHMaEeeoYuc64YE22w" name="InitialNode" outgoing="_1M0H-HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_1M0IMXMaEeeoYuc64YE22w" name="Decision(Test(Tester$initializationFlag$1))" incoming="_1M0H-HMaEeeoYuc64YE22w _1M0H-XMaEeeoYuc64YE22w" outgoing="_1M0H-nMaEeeoYuc64YE22w" decisionInputFlow="_1M0H-XMaEeeoYuc64YE22w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_1M0IMnMaEeeoYuc64YE22w" name="Tester$initialization$1" visibility="protected" method="_1M0H8HMaEeeoYuc64YE22w"/>
        <ownedOperation xmi:id="_1M0IM3MaEeeoYuc64YE22w" name="Tester" visibility="public" method="_1M0Hs3MaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_1M0INHMaEeeoYuc64YE22w" name="" visibility="package" type="_1M0Hr3MaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0INXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0INnMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1M0IN3MaEeeoYuc64YE22w" name="destroy" visibility="public" method="_1M0H7nMaEeeoYuc64YE22w"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_1M0IOHMaEeeoYuc64YE22w" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_1M0IOXMaEeeoYuc64YE22w" name="Continue" signal="_1M0IOHMaEeeoYuc64YE22w"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_1M0IOnMaEeeoYuc64YE22w" name="AssertEqual" visibility="public" node="_1M0IXnMaEeeoYuc64YE22w _1M0IYnMaEeeoYuc64YE22w _1M0IX3MaEeeoYuc64YE22w _1M0IaHMaEeeoYuc64YE22w _1M0IYHMaEeeoYuc64YE22w _1M0IbnMaEeeoYuc64YE22w _1M0IdHMaEeeoYuc64YE22w _1M0IYXMaEeeoYuc64YE22w" group="_1M0IYnMaEeeoYuc64YE22w _1M0IaHMaEeeoYuc64YE22w _1M0IbnMaEeeoYuc64YE22w _1M0IdHMaEeeoYuc64YE22w">
      <packageImport xmi:id="_1M0IO3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_1M0IPHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_1M0IPXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_1M0IPnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_1M0IP3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_1M0IQHMaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IQXMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IQnMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_1M0IQ3MaEeeoYuc64YE22w" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IRHMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IRXMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_1M0IRnMaEeeoYuc64YE22w" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IR3MaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0ISHMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0ISXMaEeeoYuc64YE22w" target="_1M0IZHMaEeeoYuc64YE22w" source="_1M0IXnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0ISnMaEeeoYuc64YE22w" target="_1M0IanMaEeeoYuc64YE22w" source="_1M0IX3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IS3MaEeeoYuc64YE22w" target="_1M0IcHMaEeeoYuc64YE22w" source="_1M0IYHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0ITHMaEeeoYuc64YE22w" target="_1M0Iq3MaEeeoYuc64YE22w" source="_1M0IbXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0ITXMaEeeoYuc64YE22w" target="_1M0Is3MaEeeoYuc64YE22w" source="_1M0Ic3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0ITnMaEeeoYuc64YE22w" target="_1M0I73MaEeeoYuc64YE22w" source="_1M0IZ3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IT3MaEeeoYuc64YE22w" target="_1M0JH3MaEeeoYuc64YE22w" source="_1M0Ic3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IUHMaEeeoYuc64YE22w" target="_1M0uyXMaEeeoYuc64YE22w" source="_1M0IZ3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IUXMaEeeoYuc64YE22w" target="_1M0u2XMaEeeoYuc64YE22w" source="_1M0Ic3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IUnMaEeeoYuc64YE22w" target="_1M0u4XMaEeeoYuc64YE22w" source="_1M0IbXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IU3MaEeeoYuc64YE22w" target="_1M0vAHMaEeeoYuc64YE22w" source="_1M0Ic3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IVHMaEeeoYuc64YE22w" target="_1M0vI3MaEeeoYuc64YE22w" source="_1M0IZ3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IVXMaEeeoYuc64YE22w" target="_1M0vM3MaEeeoYuc64YE22w" source="_1M0Ic3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IVnMaEeeoYuc64YE22w" target="_1M0vO3MaEeeoYuc64YE22w" source="_1M0IbXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IV3MaEeeoYuc64YE22w" target="_1M0vinMaEeeoYuc64YE22w" source="_1M0IZ3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IWHMaEeeoYuc64YE22w" target="_1M0vl3MaEeeoYuc64YE22w" source="_1M0Ic3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IWXMaEeeoYuc64YE22w" target="_1M0vn3MaEeeoYuc64YE22w" source="_1M0IbXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_1M0IWnMaEeeoYuc64YE22w" target="_1M0IYXMaEeeoYuc64YE22w" source="_1M0IYnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_1M0IW3MaEeeoYuc64YE22w" target="_1M0IYXMaEeeoYuc64YE22w" source="_1M0IaHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_1M0IXHMaEeeoYuc64YE22w" target="_1M0IYXMaEeeoYuc64YE22w" source="_1M0IbnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_1M0IXXMaEeeoYuc64YE22w" target="_1M0IdHMaEeeoYuc64YE22w" source="_1M0IYXMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_1M0IYnMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_1M0IWnMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IY3MaEeeoYuc64YE22w" target="_1M0IZ3MaEeeoYuc64YE22w" source="_1M0IZHMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_1M0IZHMaEeeoYuc64YE22w" name="Input(label)" incoming="_1M0ISXMaEeeoYuc64YE22w" outgoing="_1M0IY3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IZXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IZnMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_1M0IZ3MaEeeoYuc64YE22w" name="Fork(label)" incoming="_1M0IY3MaEeeoYuc64YE22w" outgoing="_1M0ITnMaEeeoYuc64YE22w _1M0IUHMaEeeoYuc64YE22w _1M0IVHMaEeeoYuc64YE22w _1M0IV3MaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_1M0IaHMaEeeoYuc64YE22w" name="Node(Input(value1))" outgoing="_1M0IW3MaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IaXMaEeeoYuc64YE22w" target="_1M0IbXMaEeeoYuc64YE22w" source="_1M0IanMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_1M0IanMaEeeoYuc64YE22w" name="Input(value1)" incoming="_1M0ISnMaEeeoYuc64YE22w" outgoing="_1M0IaXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0Ia3MaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IbHMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_1M0IbXMaEeeoYuc64YE22w" name="Fork(value1)" incoming="_1M0IaXMaEeeoYuc64YE22w" outgoing="_1M0ITHMaEeeoYuc64YE22w _1M0IUnMaEeeoYuc64YE22w _1M0IVnMaEeeoYuc64YE22w _1M0IWXMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_1M0IbnMaEeeoYuc64YE22w" name="Node(Input(value2))" outgoing="_1M0IXHMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0Ib3MaEeeoYuc64YE22w" target="_1M0Ic3MaEeeoYuc64YE22w" source="_1M0IcHMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_1M0IcHMaEeeoYuc64YE22w" name="Input(value2)" incoming="_1M0IS3MaEeeoYuc64YE22w" outgoing="_1M0Ib3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IcXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IcnMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_1M0Ic3MaEeeoYuc64YE22w" name="Fork(value2)" incoming="_1M0Ib3MaEeeoYuc64YE22w" outgoing="_1M0ITXMaEeeoYuc64YE22w _1M0IT3MaEeeoYuc64YE22w _1M0IUXMaEeeoYuc64YE22w _1M0IU3MaEeeoYuc64YE22w _1M0IVXMaEeeoYuc64YE22w _1M0IWHMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_1M0IdHMaEeeoYuc64YE22w" name="Body(AssertEqual)" incoming="_1M0IXXMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IdXMaEeeoYuc64YE22w" target="_1M0vs3MaEeeoYuc64YE22w" source="_1M0vp3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IdnMaEeeoYuc64YE22w" target="_1M0vtHMaEeeoYuc64YE22w" source="_1M0vqnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0Id3MaEeeoYuc64YE22w" target="_1M0vtXMaEeeoYuc64YE22w" source="_1M0vrXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IeHMaEeeoYuc64YE22w" target="_1M0vtnMaEeeoYuc64YE22w" source="_1M0vsHMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_1M0IeXMaEeeoYuc64YE22w" name="IfStatement@b956293">
          <edge xmi:type="uml:ControlFlow" xmi:id="_1M0IenMaEeeoYuc64YE22w" target="_1M0JCXMaEeeoYuc64YE22w" source="_1M0I1nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0Ie3MaEeeoYuc64YE22w" target="_1M0vT3MaEeeoYuc64YE22w" source="_1M0vQ3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IfHMaEeeoYuc64YE22w" target="_1M0vUHMaEeeoYuc64YE22w" source="_1M0vRnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IfXMaEeeoYuc64YE22w" target="_1M0vUXMaEeeoYuc64YE22w" source="_1M0vSXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IfnMaEeeoYuc64YE22w" target="_1M0vUnMaEeeoYuc64YE22w" source="_1M0vTHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0If3MaEeeoYuc64YE22w" target="_1M0JK3MaEeeoYuc64YE22w" source="_1M0JC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IgHMaEeeoYuc64YE22w" target="_1M0urXMaEeeoYuc64YE22w" source="_1M0JC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IgXMaEeeoYuc64YE22w" target="_1M0u0XMaEeeoYuc64YE22w" source="_1M0JC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IgnMaEeeoYuc64YE22w" target="_1M0vK3MaEeeoYuc64YE22w" source="_1M0JC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1M0Ig3MaEeeoYuc64YE22w" target="_1M0JIXMaEeeoYuc64YE22w" source="_1M0JCXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1M0IhHMaEeeoYuc64YE22w" target="_1M0vU3MaEeeoYuc64YE22w" source="_1M0JIXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IhXMaEeeoYuc64YE22w" target="_1M0vZXMaEeeoYuc64YE22w" source="_1M0vT3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IhnMaEeeoYuc64YE22w" target="_1M0vbXMaEeeoYuc64YE22w" source="_1M0vUHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0Ih3MaEeeoYuc64YE22w" target="_1M0vdXMaEeeoYuc64YE22w" source="_1M0vUXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IiHMaEeeoYuc64YE22w" target="_1M0vfXMaEeeoYuc64YE22w" source="_1M0vUnMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0IiXMaEeeoYuc64YE22w" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IinMaEeeoYuc64YE22w" target="_1M0IonMaEeeoYuc64YE22w" source="_1M0Iq3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0Ii3MaEeeoYuc64YE22w" target="_1M0IrXMaEeeoYuc64YE22w" source="_1M0Iq3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IjHMaEeeoYuc64YE22w" target="_1M0IqHMaEeeoYuc64YE22w" source="_1M0Is3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IjXMaEeeoYuc64YE22w" target="_1M0ItXMaEeeoYuc64YE22w" source="_1M0Is3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IjnMaEeeoYuc64YE22w" target="_1M0IvHMaEeeoYuc64YE22w" source="_1M0IsHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0Ij3MaEeeoYuc64YE22w" target="_1M0IvXMaEeeoYuc64YE22w" source="_1M0IuHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IkHMaEeeoYuc64YE22w" target="_1M0Iv3MaEeeoYuc64YE22w" source="_1M0IvHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IkXMaEeeoYuc64YE22w" target="_1M0IxnMaEeeoYuc64YE22w" source="_1M0IvXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IknMaEeeoYuc64YE22w" target="_1M0IzHMaEeeoYuc64YE22w" source="_1M0IvXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0Ik3MaEeeoYuc64YE22w" target="_1M0IoXMaEeeoYuc64YE22w" source="_1M0IzHMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_1M0IlHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0IlXMaEeeoYuc64YE22w" target="_1M0IvnMaEeeoYuc64YE22w" source="_1M0IzHMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_1M0IlnMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0Il3MaEeeoYuc64YE22w" target="_1M0IzXMaEeeoYuc64YE22w" source="_1M0Iu3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0ImHMaEeeoYuc64YE22w" target="_1M0IzXMaEeeoYuc64YE22w" source="_1M0IvHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0ImXMaEeeoYuc64YE22w" target="_1M0IzHMaEeeoYuc64YE22w" source="_1M0IzXMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_1M0ImnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0Im3MaEeeoYuc64YE22w" target="_1M0IxXMaEeeoYuc64YE22w" source="_1M0IzXMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_1M0InHMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0InXMaEeeoYuc64YE22w" target="_1M0IznMaEeeoYuc64YE22w" source="_1M0IpXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0InnMaEeeoYuc64YE22w" target="_1M0IznMaEeeoYuc64YE22w" source="_1M0IwnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0In3MaEeeoYuc64YE22w" target="_1M0IznMaEeeoYuc64YE22w" source="_1M0IyXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0IoHMaEeeoYuc64YE22w" target="_1M0I0HMaEeeoYuc64YE22w" source="_1M0IznMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_1M0IoXMaEeeoYuc64YE22w" name="Test(==)" incoming="_1M0Ik3MaEeeoYuc64YE22w">
              <first xmi:id="_1M0IonMaEeeoYuc64YE22w" name="Test(==).first" incoming="_1M0IinMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0Io3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IpHMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_1M0IpXMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_1M0InXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IpnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0Ip3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_1M0IqHMaEeeoYuc64YE22w" name="Test(==).second" incoming="_1M0IjHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IqXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IqnMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1M0Iq3MaEeeoYuc64YE22w" name="Fork(Fork(value1))" incoming="_1M0ITHMaEeeoYuc64YE22w" outgoing="_1M0IinMaEeeoYuc64YE22w _1M0Ii3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0IrHMaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_1M0IrXMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_1M0Ii3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IrnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0Ir3MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_1M0IsHMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_1M0IjnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IsXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IsnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1M0Is3MaEeeoYuc64YE22w" name="Fork(Fork(value2))" incoming="_1M0ITXMaEeeoYuc64YE22w" outgoing="_1M0IjHMaEeeoYuc64YE22w _1M0IjXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0ItHMaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_1M0ItXMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_1M0IjXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0ItnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0It3MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_1M0IuHMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_1M0Ij3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IuXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IunMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_1M0Iu3MaEeeoYuc64YE22w" name="Initial(Test(==))" outgoing="_1M0Il3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_1M0IvHMaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_1M0IjnMaEeeoYuc64YE22w" outgoing="_1M0IkHMaEeeoYuc64YE22w _1M0ImHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_1M0IvXMaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_1M0Ij3MaEeeoYuc64YE22w" outgoing="_1M0IkXMaEeeoYuc64YE22w _1M0IknMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0IvnMaEeeoYuc64YE22w" name="Call(Not)" incoming="_1M0IlXMaEeeoYuc64YE22w">
              <argument xmi:id="_1M0Iv3MaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_1M0IkHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IwHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IwXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1M0IwnMaEeeoYuc64YE22w" name="Call(Not).result(result)" outgoing="_1M0InnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0Iw3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IxHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0IxXMaEeeoYuc64YE22w" name="Call(Not)" incoming="_1M0Im3MaEeeoYuc64YE22w">
              <argument xmi:id="_1M0IxnMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_1M0IkXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0Ix3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0IyHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1M0IyXMaEeeoYuc64YE22w" name="Call(Not).result(result)" outgoing="_1M0In3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0IynMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0Iy3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_1M0IzHMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_1M0IknMaEeeoYuc64YE22w _1M0ImXMaEeeoYuc64YE22w" outgoing="_1M0Ik3MaEeeoYuc64YE22w _1M0IlXMaEeeoYuc64YE22w" decisionInputFlow="_1M0IknMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_1M0IzXMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_1M0Il3MaEeeoYuc64YE22w _1M0ImHMaEeeoYuc64YE22w" outgoing="_1M0ImXMaEeeoYuc64YE22w _1M0Im3MaEeeoYuc64YE22w" decisionInputFlow="_1M0ImHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_1M0IznMaEeeoYuc64YE22w" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_1M0InXMaEeeoYuc64YE22w _1M0InnMaEeeoYuc64YE22w _1M0In3MaEeeoYuc64YE22w" outgoing="_1M0IoHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0Iz3MaEeeoYuc64YE22w" name="Call(Not)">
              <argument xmi:id="_1M0I0HMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_1M0IoHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0I0XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0I0nMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1M0I03MaEeeoYuc64YE22w" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0I1HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0I1XMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0I1nMaEeeoYuc64YE22w" name="ExpressionStatement@2989c41" outgoing="_1M0IenMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0I13MaEeeoYuc64YE22w" target="_1M0I2nMaEeeoYuc64YE22w" source="_1M0I_HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0I2HMaEeeoYuc64YE22w" target="_1M0I2XMaEeeoYuc64YE22w" source="_1M0I3XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0I2XMaEeeoYuc64YE22w" name="Call(Write)" incoming="_1M0I2HMaEeeoYuc64YE22w" behavior="_1M0wH3MaEeeoYuc64YE22w">
              <argument xmi:id="_1M0I2nMaEeeoYuc64YE22w" name="Call(Write).argument(value)" incoming="_1M0I13MaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0I23MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0I3HMaEeeoYuc64YE22w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0I3XMaEeeoYuc64YE22w" name="Tuple@77aa1e4" outgoing="_1M0I2HMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0I3nMaEeeoYuc64YE22w" target="_1M0I7HMaEeeoYuc64YE22w" source="_1M0I4nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0I33MaEeeoYuc64YE22w" target="_1M0JAHMaEeeoYuc64YE22w" source="_1M0I6HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0I4HMaEeeoYuc64YE22w" target="_1M0JA3MaEeeoYuc64YE22w" source="_1M0I9nMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0I4XMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_1M0I4nMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;).result" outgoing="_1M0I3nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0I43MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0I5HMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_1M0I5XMaEeeoYuc64YE22w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0I5nMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0I53MaEeeoYuc64YE22w" target="_1M0I6HMaEeeoYuc64YE22w" source="_1M0I8nMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_1M0I6HMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_1M0I53MaEeeoYuc64YE22w" outgoing="_1M0I33MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0I6XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0I6nMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0I63MaEeeoYuc64YE22w" name="Call(Concat)">
                  <argument xmi:id="_1M0I7HMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_1M0I3nMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0I7XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0I7nMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_1M0I73MaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_1M0ITnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0I8HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0I8XMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_1M0I8nMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_1M0I53MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0I83MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0I9HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0I9XMaEeeoYuc64YE22w" name="Value(&quot;==&quot;)">
                <result xmi:id="_1M0I9nMaEeeoYuc64YE22w" name="Value(&quot;==&quot;).result" outgoing="_1M0I4HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0I93MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0I-HMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_1M0I-XMaEeeoYuc64YE22w" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0I-nMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0I-3MaEeeoYuc64YE22w" target="_1M0I_HMaEeeoYuc64YE22w" source="_1M0JBnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_1M0I_HMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_1M0I-3MaEeeoYuc64YE22w" outgoing="_1M0I13MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0I_XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0I_nMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0I_3MaEeeoYuc64YE22w" name="Call(Concat)">
                  <argument xmi:id="_1M0JAHMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_1M0I33MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0JAXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0JAnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_1M0JA3MaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_1M0I4HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0JBHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0JBXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_1M0JBnMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_1M0I-3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0JB3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0JCHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0JCXMaEeeoYuc64YE22w" name="ExpressionStatement@26c8a6b3" incoming="_1M0IenMaEeeoYuc64YE22w" outgoing="_1M0Ig3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0JCnMaEeeoYuc64YE22w" target="_1M0JC3MaEeeoYuc64YE22w" source="_1M0JIHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_1M0JC3MaEeeoYuc64YE22w" name="Fork(s)@27a93cfa" incoming="_1M0JCnMaEeeoYuc64YE22w" outgoing="_1M0If3MaEeeoYuc64YE22w _1M0IgHMaEeeoYuc64YE22w _1M0IgXMaEeeoYuc64YE22w _1M0IgnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0JDHMaEeeoYuc64YE22w" name="RightHandSide@3f3953c3">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_1M0JDXMaEeeoYuc64YE22w" name="CastExpression@3f3953c3" mode="parallel" outputElement="_1M0JIHMaEeeoYuc64YE22w" inputElement="_1M0JH3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0JDnMaEeeoYuc64YE22w" target="_1M0JF3MaEeeoYuc64YE22w" source="_1M0JHXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0JD3MaEeeoYuc64YE22w" target="_1M0JHnMaEeeoYuc64YE22w" source="_1M0JHXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0JEHMaEeeoYuc64YE22w" target="_1M0JHnMaEeeoYuc64YE22w" source="_1M0JGnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0JEXMaEeeoYuc64YE22w" target="_1M0JFXMaEeeoYuc64YE22w" source="_1M0JHnMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_1M0JEnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0JE3MaEeeoYuc64YE22w" target="_1M0JHXMaEeeoYuc64YE22w" source="_1M0JH3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0JFHMaEeeoYuc64YE22w" target="_1M0JIHMaEeeoYuc64YE22w" source="_1M0JFXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_1M0JFXMaEeeoYuc64YE22w" name="Merge(CastExpression@3f3953c3.operand)" incoming="_1M0JEXMaEeeoYuc64YE22w" outgoing="_1M0JFHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_1M0JFnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_1M0JF3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(String).object" incoming="_1M0JDnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0JGHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0JGXMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_1M0JGnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(String).result" outgoing="_1M0JEHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0JG3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0JHHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_1M0JHXMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_1M0JE3MaEeeoYuc64YE22w" outgoing="_1M0JDnMaEeeoYuc64YE22w _1M0JD3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_1M0JHnMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_1M0JD3MaEeeoYuc64YE22w _1M0JEHMaEeeoYuc64YE22w" outgoing="_1M0JEXMaEeeoYuc64YE22w" decisionInputFlow="_1M0JEHMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_1M0JH3MaEeeoYuc64YE22w" name="CastExpression@3f3953c3.inputElement" incoming="_1M0IT3MaEeeoYuc64YE22w" outgoing="_1M0JE3MaEeeoYuc64YE22w" regionAsInput="_1M0JDXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_1M0JIHMaEeeoYuc64YE22w" name="CastExpression@3f3953c3.outputElement" incoming="_1M0JFHMaEeeoYuc64YE22w" outgoing="_1M0JCnMaEeeoYuc64YE22w" regionAsOutput="_1M0JDXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_1M0JIXMaEeeoYuc64YE22w" name="IfStatement@3e39823a" incoming="_1M0Ig3MaEeeoYuc64YE22w" outgoing="_1M0IhHMaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0JInMaEeeoYuc64YE22w" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_1M0JI3MaEeeoYuc64YE22w" target="_1M0JKnMaEeeoYuc64YE22w" source="_1M0JJHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0JJHMaEeeoYuc64YE22w" name="Operands(EqualityExpression@11972f4a)" outgoing="_1M0JI3MaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0JJXMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_1M0JJnMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0JJ3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0JKHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_1M0JKXMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0JKnMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_1M0JI3MaEeeoYuc64YE22w">
                <argument xmi:id="_1M0JK3MaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_1M0If3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0JLHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0ukHMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_1M0ukXMaEeeoYuc64YE22w" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0uknMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0uk3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0ulHMaEeeoYuc64YE22w" name="ExpressionStatement@27b3e5ed">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0ulXMaEeeoYuc64YE22w" target="_1M0umHMaEeeoYuc64YE22w" source="_1M0uunMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_1M0ulnMaEeeoYuc64YE22w" target="_1M0ul3MaEeeoYuc64YE22w" source="_1M0um3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0ul3MaEeeoYuc64YE22w" name="Call(Write)" incoming="_1M0ulnMaEeeoYuc64YE22w" behavior="_1M0wH3MaEeeoYuc64YE22w">
                <argument xmi:id="_1M0umHMaEeeoYuc64YE22w" name="Call(Write).argument(value)" incoming="_1M0ulXMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0umXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0umnMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0um3MaEeeoYuc64YE22w" name="Tuple@5ab7ef8a" outgoing="_1M0ulnMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0unHMaEeeoYuc64YE22w" target="_1M0uqnMaEeeoYuc64YE22w" source="_1M0uoHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0unXMaEeeoYuc64YE22w" target="_1M0uvnMaEeeoYuc64YE22w" source="_1M0upnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0unnMaEeeoYuc64YE22w" target="_1M0uwXMaEeeoYuc64YE22w" source="_1M0utHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0un3MaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_1M0uoHMaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;).result" outgoing="_1M0unHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0uoXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0uonMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_1M0uo3MaEeeoYuc64YE22w" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0upHMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0upXMaEeeoYuc64YE22w" target="_1M0upnMaEeeoYuc64YE22w" source="_1M0usHMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_1M0upnMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_1M0upXMaEeeoYuc64YE22w" outgoing="_1M0unXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0up3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0uqHMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0uqXMaEeeoYuc64YE22w" name="Call(Concat)">
                    <argument xmi:id="_1M0uqnMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_1M0unHMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0uq3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0urHMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <argument xmi:id="_1M0urXMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_1M0IgHMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0urnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0ur3MaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_1M0usHMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_1M0upXMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0usXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0usnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0us3MaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_1M0utHMaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;).result" outgoing="_1M0unnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0utXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0utnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_1M0ut3MaEeeoYuc64YE22w" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0uuHMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0uuXMaEeeoYuc64YE22w" target="_1M0uunMaEeeoYuc64YE22w" source="_1M0uxHMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_1M0uunMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_1M0uuXMaEeeoYuc64YE22w" outgoing="_1M0ulXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0uu3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0uvHMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0uvXMaEeeoYuc64YE22w" name="Call(Concat)">
                    <argument xmi:id="_1M0uvnMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_1M0unXMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0uv3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0uwHMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <argument xmi:id="_1M0uwXMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_1M0unnMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0uwnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0uw3MaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_1M0uxHMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_1M0uuXMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0uxXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0uxnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0ux3MaEeeoYuc64YE22w" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0uyHMaEeeoYuc64YE22w" target="_1M0uzHMaEeeoYuc64YE22w" source="_1M0uyXMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_1M0uyXMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_1M0IUHMaEeeoYuc64YE22w" outgoing="_1M0uyHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0uynMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0uy3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_1M0uzHMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_1M0uyHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0uzXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0uznMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0uz3MaEeeoYuc64YE22w" name="Passthru(Fork(s)@27a93cfa)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0u0HMaEeeoYuc64YE22w" target="_1M0u1HMaEeeoYuc64YE22w" source="_1M0u0XMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_1M0u0XMaEeeoYuc64YE22w" name="Passthru(Fork(s)@27a93cfa).input" incoming="_1M0IgXMaEeeoYuc64YE22w" outgoing="_1M0u0HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0u0nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0u03MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_1M0u1HMaEeeoYuc64YE22w" name="Passthru(Fork(s)@27a93cfa).output" incoming="_1M0u0HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0u1XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0u1nMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0u13MaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0u2HMaEeeoYuc64YE22w" target="_1M0u3HMaEeeoYuc64YE22w" source="_1M0u2XMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_1M0u2XMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_1M0IUXMaEeeoYuc64YE22w" outgoing="_1M0u2HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0u2nMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0u23MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_1M0u3HMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_1M0u2HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0u3XMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0u3nMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0u33MaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0u4HMaEeeoYuc64YE22w" target="_1M0u5HMaEeeoYuc64YE22w" source="_1M0u4XMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_1M0u4XMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_1M0IUnMaEeeoYuc64YE22w" outgoing="_1M0u4HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0u4nMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0u43MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_1M0u5HMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_1M0u4HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0u5XMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0u5nMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0u53MaEeeoYuc64YE22w" name="Value(true)">
              <result xmi:id="_1M0u6HMaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0u6XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0u6nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_1M0u63MaEeeoYuc64YE22w" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0u7HMaEeeoYuc64YE22w" name="ExpressionStatement@46a7b47">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0u7XMaEeeoYuc64YE22w" target="_1M0u8HMaEeeoYuc64YE22w" source="_1M0vIHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_1M0u7nMaEeeoYuc64YE22w" target="_1M0u73MaEeeoYuc64YE22w" source="_1M0u83MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0u73MaEeeoYuc64YE22w" name="Call(Write)" incoming="_1M0u7nMaEeeoYuc64YE22w" behavior="_1M0wH3MaEeeoYuc64YE22w">
                <argument xmi:id="_1M0u8HMaEeeoYuc64YE22w" name="Call(Write).argument(value)" incoming="_1M0u7XMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0u8XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0u8nMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0u83MaEeeoYuc64YE22w" name="Tuple@473a66a0" outgoing="_1M0u7nMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0u9HMaEeeoYuc64YE22w" target="_1M0vCHMaEeeoYuc64YE22w" source="_1M0vAHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_1M0u9XMaEeeoYuc64YE22w" target="_1M0vB3MaEeeoYuc64YE22w" source="_1M0u_3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0u9nMaEeeoYuc64YE22w" target="_1M0vE3MaEeeoYuc64YE22w" source="_1M0vAHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_1M0u93MaEeeoYuc64YE22w" target="_1M0vH3MaEeeoYuc64YE22w" source="_1M0vHnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0u-HMaEeeoYuc64YE22w" target="_1M0vH3MaEeeoYuc64YE22w" source="_1M0vC3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_1M0u-XMaEeeoYuc64YE22w" target="_1M0vDnMaEeeoYuc64YE22w" source="_1M0vH3MaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_1M0u-nMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_1M0u-3MaEeeoYuc64YE22w" target="_1M0vFHMaEeeoYuc64YE22w" source="_1M0vH3MaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_1M0u_HMaEeeoYuc64YE22w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0u_XMaEeeoYuc64YE22w" target="_1M0vIHMaEeeoYuc64YE22w" source="_1M0vEHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0u_nMaEeeoYuc64YE22w" target="_1M0vIHMaEeeoYuc64YE22w" source="_1M0vFnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0u_3MaEeeoYuc64YE22w" name="Operands(EqualityExpression@24abee74)" outgoing="_1M0u9XMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ForkNode" xmi:id="_1M0vAHMaEeeoYuc64YE22w" name="Fork()@1c72366e" incoming="_1M0IU3MaEeeoYuc64YE22w" outgoing="_1M0u9HMaEeeoYuc64YE22w _1M0u9nMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0vAXMaEeeoYuc64YE22w" name="RightHandSide@7fb3e6b0"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0vAnMaEeeoYuc64YE22w" name="Value(null)">
                    <result xmi:id="_1M0vA3MaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vBHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vBXMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_1M0vBnMaEeeoYuc64YE22w"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0vB3MaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_1M0u9XMaEeeoYuc64YE22w">
                  <argument xmi:id="_1M0vCHMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_1M0u9HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vCXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vCnMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_1M0vC3MaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_1M0u-HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vDHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vDXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0vDnMaEeeoYuc64YE22w" name="NullCoalescingExpression@5162ccc9.operand2" incoming="_1M0u-XMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vD3MaEeeoYuc64YE22w" target="_1M0vEHMaEeeoYuc64YE22w" source="_1M0vE3MaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_1M0vEHMaEeeoYuc64YE22w" name="NullCoalescingExpression@5162ccc9.operand2.result" incoming="_1M0vD3MaEeeoYuc64YE22w" outgoing="_1M0u_XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vEXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vEnMaEeeoYuc64YE22w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_1M0vE3MaEeeoYuc64YE22w" name="Merge(Fork()@1c72366e)" incoming="_1M0u9nMaEeeoYuc64YE22w" outgoing="_1M0vD3MaEeeoYuc64YE22w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0vFHMaEeeoYuc64YE22w" name="NullCoalescingExpression@5162ccc9.operand3" incoming="_1M0u-3MaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vFXMaEeeoYuc64YE22w" target="_1M0vFnMaEeeoYuc64YE22w" source="_1M0vGnMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_1M0vFnMaEeeoYuc64YE22w" name="NullCoalescingExpression@5162ccc9.operand3.result" incoming="_1M0vFXMaEeeoYuc64YE22w" outgoing="_1M0u_nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vF3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vGHMaEeeoYuc64YE22w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0vGXMaEeeoYuc64YE22w" name="Value(&quot;null&quot;)">
                    <result xmi:id="_1M0vGnMaEeeoYuc64YE22w" name="Value(&quot;null&quot;).result" outgoing="_1M0vFXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vG3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vHHMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_1M0vHXMaEeeoYuc64YE22w" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_1M0vHnMaEeeoYuc64YE22w" name="Initial(NullCoalescingExpression@5162ccc9)" outgoing="_1M0u93MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_1M0vH3MaEeeoYuc64YE22w" name="Decision(NullCoalescingExpression@5162ccc9)" incoming="_1M0u93MaEeeoYuc64YE22w _1M0u-HMaEeeoYuc64YE22w" outgoing="_1M0u-XMaEeeoYuc64YE22w _1M0u-3MaEeeoYuc64YE22w" decisionInputFlow="_1M0u-HMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_1M0vIHMaEeeoYuc64YE22w" name="Merge(NullCoalescingExpression@5162ccc9.result)" incoming="_1M0u_XMaEeeoYuc64YE22w _1M0u_nMaEeeoYuc64YE22w" outgoing="_1M0u7XMaEeeoYuc64YE22w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0vIXMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vInMaEeeoYuc64YE22w" target="_1M0vJnMaEeeoYuc64YE22w" source="_1M0vI3MaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_1M0vI3MaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_1M0IVHMaEeeoYuc64YE22w" outgoing="_1M0vInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vJHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vJXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_1M0vJnMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_1M0vInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vJ3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vKHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0vKXMaEeeoYuc64YE22w" name="Passthru(Fork(s)@27a93cfa)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vKnMaEeeoYuc64YE22w" target="_1M0vLnMaEeeoYuc64YE22w" source="_1M0vK3MaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_1M0vK3MaEeeoYuc64YE22w" name="Passthru(Fork(s)@27a93cfa).input" incoming="_1M0IgnMaEeeoYuc64YE22w" outgoing="_1M0vKnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vLHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vLXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_1M0vLnMaEeeoYuc64YE22w" name="Passthru(Fork(s)@27a93cfa).output" incoming="_1M0vKnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vL3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vMHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0vMXMaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vMnMaEeeoYuc64YE22w" target="_1M0vNnMaEeeoYuc64YE22w" source="_1M0vM3MaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_1M0vM3MaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_1M0IVXMaEeeoYuc64YE22w" outgoing="_1M0vMnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vNHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vNXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_1M0vNnMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_1M0vMnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vN3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vOHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0vOXMaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vOnMaEeeoYuc64YE22w" target="_1M0vPnMaEeeoYuc64YE22w" source="_1M0vO3MaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_1M0vO3MaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_1M0IVnMaEeeoYuc64YE22w" outgoing="_1M0vOnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vPHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vPXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_1M0vPnMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_1M0vOnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vP3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vQHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_1M0vQXMaEeeoYuc64YE22w" body="_1M0ulHMaEeeoYuc64YE22w _1M0ux3MaEeeoYuc64YE22w _1M0uz3MaEeeoYuc64YE22w _1M0u13MaEeeoYuc64YE22w _1M0u33MaEeeoYuc64YE22w" bodyOutput="_1M0uzHMaEeeoYuc64YE22w _1M0u1HMaEeeoYuc64YE22w _1M0u3HMaEeeoYuc64YE22w _1M0u5HMaEeeoYuc64YE22w" decider="_1M0ukXMaEeeoYuc64YE22w" successorClause="_1M0vQnMaEeeoYuc64YE22w" test="_1M0JInMaEeeoYuc64YE22w"/>
            <clause xmi:id="_1M0vQnMaEeeoYuc64YE22w" body="_1M0u7HMaEeeoYuc64YE22w _1M0vIXMaEeeoYuc64YE22w _1M0vKXMaEeeoYuc64YE22w _1M0vMXMaEeeoYuc64YE22w _1M0vOXMaEeeoYuc64YE22w" bodyOutput="_1M0vJnMaEeeoYuc64YE22w _1M0vLnMaEeeoYuc64YE22w _1M0vNnMaEeeoYuc64YE22w _1M0vPnMaEeeoYuc64YE22w" decider="_1M0u6HMaEeeoYuc64YE22w" predecessorClause="_1M0vQXMaEeeoYuc64YE22w" test="_1M0u53MaEeeoYuc64YE22w"/>
            <result xmi:id="_1M0vQ3MaEeeoYuc64YE22w" name="IfStatement@3e39823a.result(label)" outgoing="_1M0Ie3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vRHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vRXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_1M0vRnMaEeeoYuc64YE22w" name="IfStatement@3e39823a.result(s)" outgoing="_1M0IfHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vR3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vSHMaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_1M0vSXMaEeeoYuc64YE22w" name="IfStatement@3e39823a.result(value2)" outgoing="_1M0IfXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vSnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vS3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_1M0vTHMaEeeoYuc64YE22w" name="IfStatement@3e39823a.result(value1)" outgoing="_1M0IfnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vTXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vTnMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_1M0vT3MaEeeoYuc64YE22w" name="Fork(label)" incoming="_1M0Ie3MaEeeoYuc64YE22w" outgoing="_1M0IhXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_1M0vUHMaEeeoYuc64YE22w" name="Fork(s)" incoming="_1M0IfHMaEeeoYuc64YE22w" outgoing="_1M0IhnMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_1M0vUXMaEeeoYuc64YE22w" name="Fork(value2)" incoming="_1M0IfXMaEeeoYuc64YE22w" outgoing="_1M0Ih3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_1M0vUnMaEeeoYuc64YE22w" name="Fork(value1)" incoming="_1M0IfnMaEeeoYuc64YE22w" outgoing="_1M0IiHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0vU3MaEeeoYuc64YE22w" name="ExpressionStatement@1a7ba443" incoming="_1M0IhHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vVHMaEeeoYuc64YE22w" target="_1M0vV3MaEeeoYuc64YE22w" source="_1M0vX3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0vVXMaEeeoYuc64YE22w" target="_1M0vVnMaEeeoYuc64YE22w" source="_1M0vXXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0vVnMaEeeoYuc64YE22w" name="Call(WriteLine)" incoming="_1M0vVXMaEeeoYuc64YE22w">
              <argument xmi:id="_1M0vV3MaEeeoYuc64YE22w" name="Call(WriteLine).argument(value)" incoming="_1M0vVHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vWHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vWXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1M0vWnMaEeeoYuc64YE22w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vW3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vXHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0vXXMaEeeoYuc64YE22w" name="Tuple@52ce11b5" outgoing="_1M0vVXMaEeeoYuc64YE22w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0vXnMaEeeoYuc64YE22w" name="Value(&quot;&quot;)">
                <result xmi:id="_1M0vX3MaEeeoYuc64YE22w" name="Value(&quot;&quot;).result" outgoing="_1M0vVHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vYHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vYXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_1M0vYnMaEeeoYuc64YE22w" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0vY3MaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vZHMaEeeoYuc64YE22w" target="_1M0vaHMaEeeoYuc64YE22w" source="_1M0vZXMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_1M0vZXMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_1M0IhXMaEeeoYuc64YE22w" outgoing="_1M0vZHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vZnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vZ3MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_1M0vaHMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_1M0vZHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vaXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vanMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0va3MaEeeoYuc64YE22w" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vbHMaEeeoYuc64YE22w" target="_1M0vcHMaEeeoYuc64YE22w" source="_1M0vbXMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_1M0vbXMaEeeoYuc64YE22w" name="Passthru(Fork(s)).input" incoming="_1M0IhnMaEeeoYuc64YE22w" outgoing="_1M0vbHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vbnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vb3MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_1M0vcHMaEeeoYuc64YE22w" name="Passthru(Fork(s)).output" incoming="_1M0vbHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vcXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vcnMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0vc3MaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vdHMaEeeoYuc64YE22w" target="_1M0veHMaEeeoYuc64YE22w" source="_1M0vdXMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_1M0vdXMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_1M0Ih3MaEeeoYuc64YE22w" outgoing="_1M0vdHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vdnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vd3MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_1M0veHMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_1M0vdHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0veXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0venMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0ve3MaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vfHMaEeeoYuc64YE22w" target="_1M0vgHMaEeeoYuc64YE22w" source="_1M0vfXMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_1M0vfXMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_1M0IiHMaEeeoYuc64YE22w" outgoing="_1M0vfHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vfnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vf3MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_1M0vgHMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_1M0vfHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vgXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vgnMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0vg3MaEeeoYuc64YE22w" name="Value(true)">
            <result xmi:id="_1M0vhHMaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vhXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vhnMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_1M0vh3MaEeeoYuc64YE22w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0viHMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0viXMaEeeoYuc64YE22w" target="_1M0vjXMaEeeoYuc64YE22w" source="_1M0vinMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_1M0vinMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_1M0IV3MaEeeoYuc64YE22w" outgoing="_1M0viXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vi3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vjHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_1M0vjXMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_1M0viXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vjnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vj3MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0vkHMaEeeoYuc64YE22w" name="Value(null)">
            <result xmi:id="_1M0vkXMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vknMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vk3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_1M0vlHMaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0vlXMaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vlnMaEeeoYuc64YE22w" target="_1M0vmnMaEeeoYuc64YE22w" source="_1M0vl3MaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_1M0vl3MaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_1M0IWHMaEeeoYuc64YE22w" outgoing="_1M0vlnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vmHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vmXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_1M0vmnMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_1M0vlnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vm3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vnHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0vnXMaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vnnMaEeeoYuc64YE22w" target="_1M0vonMaEeeoYuc64YE22w" source="_1M0vn3MaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_1M0vn3MaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_1M0IWXMaEeeoYuc64YE22w" outgoing="_1M0vnnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0voHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0voXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_1M0vonMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_1M0vnnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vo3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vpHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_1M0vpXMaEeeoYuc64YE22w" body="_1M0I1nMaEeeoYuc64YE22w _1M0JCXMaEeeoYuc64YE22w _1M0JIXMaEeeoYuc64YE22w _1M0vU3MaEeeoYuc64YE22w _1M0vY3MaEeeoYuc64YE22w _1M0va3MaEeeoYuc64YE22w _1M0vc3MaEeeoYuc64YE22w _1M0ve3MaEeeoYuc64YE22w" bodyOutput="_1M0vaHMaEeeoYuc64YE22w _1M0vcHMaEeeoYuc64YE22w _1M0veHMaEeeoYuc64YE22w _1M0vgHMaEeeoYuc64YE22w" decider="_1M0I03MaEeeoYuc64YE22w" successorClause="_1M0vpnMaEeeoYuc64YE22w" test="_1M0IiXMaEeeoYuc64YE22w"/>
          <clause xmi:id="_1M0vpnMaEeeoYuc64YE22w" body="_1M0viHMaEeeoYuc64YE22w _1M0vkHMaEeeoYuc64YE22w _1M0vlXMaEeeoYuc64YE22w _1M0vnXMaEeeoYuc64YE22w" bodyOutput="_1M0vjXMaEeeoYuc64YE22w _1M0vkXMaEeeoYuc64YE22w _1M0vmnMaEeeoYuc64YE22w _1M0vonMaEeeoYuc64YE22w" decider="_1M0vhHMaEeeoYuc64YE22w" predecessorClause="_1M0vpXMaEeeoYuc64YE22w" test="_1M0vg3MaEeeoYuc64YE22w"/>
          <result xmi:id="_1M0vp3MaEeeoYuc64YE22w" name="IfStatement@b956293.result(label)" outgoing="_1M0IdXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vqHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vqXMaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_1M0vqnMaEeeoYuc64YE22w" name="IfStatement@b956293.result(s)" outgoing="_1M0IdnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vq3MaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vrHMaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_1M0vrXMaEeeoYuc64YE22w" name="IfStatement@b956293.result(value2)" outgoing="_1M0Id3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vrnMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vr3MaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_1M0vsHMaEeeoYuc64YE22w" name="IfStatement@b956293.result(value1)" outgoing="_1M0IeHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vsXMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vsnMaEeeoYuc64YE22w" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_1M0vs3MaEeeoYuc64YE22w" name="Fork(label)" incoming="_1M0IdXMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_1M0vtHMaEeeoYuc64YE22w" name="Fork(s)" incoming="_1M0IdnMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_1M0vtXMaEeeoYuc64YE22w" name="Fork(value2)" incoming="_1M0Id3MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_1M0vtnMaEeeoYuc64YE22w" name="Fork(value1)" incoming="_1M0IeHMaEeeoYuc64YE22w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_1M0IXnMaEeeoYuc64YE22w" name="Input(label)" outgoing="_1M0ISXMaEeeoYuc64YE22w" parameter="_1M0IQHMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_1M0IX3MaEeeoYuc64YE22w" name="Input(value1)" outgoing="_1M0ISnMaEeeoYuc64YE22w" parameter="_1M0IQ3MaEeeoYuc64YE22w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_1M0IYHMaEeeoYuc64YE22w" name="Input(value2)" outgoing="_1M0IS3MaEeeoYuc64YE22w" parameter="_1M0IRnMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:JoinNode" xmi:id="_1M0IYXMaEeeoYuc64YE22w" name="Join(Input))" incoming="_1M0IWnMaEeeoYuc64YE22w _1M0IW3MaEeeoYuc64YE22w _1M0IXHMaEeeoYuc64YE22w" outgoing="_1M0IXXMaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_1M0vt3MaEeeoYuc64YE22w" name="AssertFalse" visibility="public" node="_1M0vy3MaEeeoYuc64YE22w _1M0vznMaEeeoYuc64YE22w _1M0vzHMaEeeoYuc64YE22w _1M0v1HMaEeeoYuc64YE22w _1M0v2nMaEeeoYuc64YE22w _1M0vzXMaEeeoYuc64YE22w" group="_1M0vznMaEeeoYuc64YE22w _1M0v1HMaEeeoYuc64YE22w _1M0v2nMaEeeoYuc64YE22w">
      <elementImport xmi:id="_1M0vuHMaEeeoYuc64YE22w" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_1M0vuXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_1M0vunMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_1M0vu3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_1M0vvHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_1M0vvXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_1M0vvnMaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vv3MaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vwHMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_1M0vwXMaEeeoYuc64YE22w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0vwnMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0vw3MaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vxHMaEeeoYuc64YE22w" target="_1M0v0HMaEeeoYuc64YE22w" source="_1M0vy3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vxXMaEeeoYuc64YE22w" target="_1M0v1nMaEeeoYuc64YE22w" source="_1M0vzHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vxnMaEeeoYuc64YE22w" target="_1M0v_3MaEeeoYuc64YE22w" source="_1M0v03MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vx3MaEeeoYuc64YE22w" target="_1M0wFHMaEeeoYuc64YE22w" source="_1M0v2XMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_1M0vyHMaEeeoYuc64YE22w" target="_1M0vzXMaEeeoYuc64YE22w" source="_1M0vznMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_1M0vyXMaEeeoYuc64YE22w" target="_1M0vzXMaEeeoYuc64YE22w" source="_1M0v1HMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_1M0vynMaEeeoYuc64YE22w" target="_1M0v2nMaEeeoYuc64YE22w" source="_1M0vzXMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_1M0vznMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_1M0vyHMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0vz3MaEeeoYuc64YE22w" target="_1M0v03MaEeeoYuc64YE22w" source="_1M0v0HMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_1M0v0HMaEeeoYuc64YE22w" name="Input(label)" incoming="_1M0vxHMaEeeoYuc64YE22w" outgoing="_1M0vz3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0v0XMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0v0nMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_1M0v03MaEeeoYuc64YE22w" name="Fork(label)" incoming="_1M0vz3MaEeeoYuc64YE22w" outgoing="_1M0vxnMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_1M0v1HMaEeeoYuc64YE22w" name="Node(Input(condition))" outgoing="_1M0vyXMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0v1XMaEeeoYuc64YE22w" target="_1M0v2XMaEeeoYuc64YE22w" source="_1M0v1nMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_1M0v1nMaEeeoYuc64YE22w" name="Input(condition)" incoming="_1M0vxXMaEeeoYuc64YE22w" outgoing="_1M0v1XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0v13MaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0v2HMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_1M0v2XMaEeeoYuc64YE22w" name="Fork(condition)" incoming="_1M0v1XMaEeeoYuc64YE22w" outgoing="_1M0vx3MaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_1M0v2nMaEeeoYuc64YE22w" name="Body(AssertFalse)" incoming="_1M0vynMaEeeoYuc64YE22w">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0v23MaEeeoYuc64YE22w" name="ExpressionStatement@495cae6c">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0v3HMaEeeoYuc64YE22w" target="_1M0v4HMaEeeoYuc64YE22w" source="_1M0v-HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0v3XMaEeeoYuc64YE22w" target="_1M0v43MaEeeoYuc64YE22w" source="_1M0wHXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1M0v3nMaEeeoYuc64YE22w" target="_1M0v33MaEeeoYuc64YE22w" source="_1M0v5nMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0v33MaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_1M0v3nMaEeeoYuc64YE22w" behavior="_1M0wk3MaEeeoYuc64YE22w">
            <argument xmi:id="_1M0v4HMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_1M0v3HMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0v4XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0v4nMaEeeoYuc64YE22w" value="1"/>
            </argument>
            <argument xmi:id="_1M0v43MaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_1M0v3XMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0v5HMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0v5XMaEeeoYuc64YE22w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0v5nMaEeeoYuc64YE22w" name="Tuple@57d827e6" outgoing="_1M0v3nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0v53MaEeeoYuc64YE22w" target="_1M0v_HMaEeeoYuc64YE22w" source="_1M0v8nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0v6HMaEeeoYuc64YE22w" target="_1M0wC3MaEeeoYuc64YE22w" source="_1M0wFHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0v6XMaEeeoYuc64YE22w" target="_1M0wFnMaEeeoYuc64YE22w" source="_1M0wFHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0v6nMaEeeoYuc64YE22w" target="_1M0wHHMaEeeoYuc64YE22w" source="_1M0wGXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0v63MaEeeoYuc64YE22w" target="_1M0wHXMaEeeoYuc64YE22w" source="_1M0wDnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0v7HMaEeeoYuc64YE22w" target="_1M0wHnMaEeeoYuc64YE22w" source="_1M0wHHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0v7XMaEeeoYuc64YE22w" target="_1M0wHnMaEeeoYuc64YE22w" source="_1M0wHHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0v7nMaEeeoYuc64YE22w" target="_1M0wHXMaEeeoYuc64YE22w" source="_1M0wHnMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_1M0v73MaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0v8HMaEeeoYuc64YE22w" target="_1M0wEXMaEeeoYuc64YE22w" source="_1M0wBnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0v8XMaEeeoYuc64YE22w" name="Value(&quot;! &quot;)">
              <result xmi:id="_1M0v8nMaEeeoYuc64YE22w" name="Value(&quot;! &quot;).result" outgoing="_1M0v53MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0v83MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0v9HMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_1M0v9XMaEeeoYuc64YE22w" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0v9nMaEeeoYuc64YE22w" name="Node(Call(Concat))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0v93MaEeeoYuc64YE22w" target="_1M0v-HMaEeeoYuc64YE22w" source="_1M0wAnMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_1M0v-HMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_1M0v93MaEeeoYuc64YE22w" outgoing="_1M0v3HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0v-XMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0v-nMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0v-3MaEeeoYuc64YE22w" name="Call(Concat)">
                <argument xmi:id="_1M0v_HMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_1M0v53MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0v_XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0v_nMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_1M0v_3MaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_1M0vxnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wAHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wAXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_1M0wAnMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_1M0v93MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wA3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wBHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0wBXMaEeeoYuc64YE22w" name="Value(false)">
              <result xmi:id="_1M0wBnMaEeeoYuc64YE22w" name="Value(false).result" outgoing="_1M0v8HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wB3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wCHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_1M0wCXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_1M0wCnMaEeeoYuc64YE22w" name="Test(==)">
              <first xmi:id="_1M0wC3MaEeeoYuc64YE22w" name="Test(==).first" incoming="_1M0v6HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wDHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wDXMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_1M0wDnMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_1M0v63MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wD3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wEHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_1M0wEXMaEeeoYuc64YE22w" name="Test(==).second" incoming="_1M0v8HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wEnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wE3MaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1M0wFHMaEeeoYuc64YE22w" name="Fork(Fork(condition))" incoming="_1M0vx3MaEeeoYuc64YE22w" outgoing="_1M0v6HMaEeeoYuc64YE22w _1M0v6XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0wFXMaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_1M0wFnMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_1M0v6XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wF3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wGHMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_1M0wGXMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_1M0v6nMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wGnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wG3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1M0wHHMaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_1M0v6nMaEeeoYuc64YE22w" outgoing="_1M0v7HMaEeeoYuc64YE22w _1M0v7XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_1M0wHXMaEeeoYuc64YE22w" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_1M0v63MaEeeoYuc64YE22w _1M0v7nMaEeeoYuc64YE22w" outgoing="_1M0v3XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_1M0wHnMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_1M0v7HMaEeeoYuc64YE22w _1M0v7XMaEeeoYuc64YE22w" outgoing="_1M0v7nMaEeeoYuc64YE22w" decisionInputFlow="_1M0v7XMaEeeoYuc64YE22w"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_1M0vy3MaEeeoYuc64YE22w" name="Input(label)" outgoing="_1M0vxHMaEeeoYuc64YE22w" parameter="_1M0vvnMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_1M0vzHMaEeeoYuc64YE22w" name="Input(condition)" outgoing="_1M0vxXMaEeeoYuc64YE22w" parameter="_1M0vwXMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_1M0vzXMaEeeoYuc64YE22w" name="Join(Input))" incoming="_1M0vyHMaEeeoYuc64YE22w _1M0vyXMaEeeoYuc64YE22w" outgoing="_1M0vynMaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_1M0wH3MaEeeoYuc64YE22w" name="Write" visibility="public" node="_1M0wLHMaEeeoYuc64YE22w _1M0wLnMaEeeoYuc64YE22w _1M0wNHMaEeeoYuc64YE22w _1M0wLXMaEeeoYuc64YE22w" group="_1M0wLnMaEeeoYuc64YE22w _1M0wNHMaEeeoYuc64YE22w">
      <packageImport xmi:id="_1M0wIHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_1M0wIXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_1M0wInMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_1M0wI3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_1M0wJHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_1M0wJXMaEeeoYuc64YE22w" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wJnMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wJ3MaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wKHMaEeeoYuc64YE22w" target="_1M0wMHMaEeeoYuc64YE22w" source="_1M0wLHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wKXMaEeeoYuc64YE22w" target="_1M0wPXMaEeeoYuc64YE22w" source="_1M0wM3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_1M0wKnMaEeeoYuc64YE22w" target="_1M0wLXMaEeeoYuc64YE22w" source="_1M0wLnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_1M0wK3MaEeeoYuc64YE22w" target="_1M0wNHMaEeeoYuc64YE22w" source="_1M0wLXMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_1M0wLnMaEeeoYuc64YE22w" name="Node(Input(value))" outgoing="_1M0wKnMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wL3MaEeeoYuc64YE22w" target="_1M0wM3MaEeeoYuc64YE22w" source="_1M0wMHMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_1M0wMHMaEeeoYuc64YE22w" name="Input(value)" incoming="_1M0wKHMaEeeoYuc64YE22w" outgoing="_1M0wL3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wMXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wMnMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_1M0wM3MaEeeoYuc64YE22w" name="Fork(value)" incoming="_1M0wL3MaEeeoYuc64YE22w" outgoing="_1M0wKXMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_1M0wNHMaEeeoYuc64YE22w" name="Body(Write)" incoming="_1M0wK3MaEeeoYuc64YE22w">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0wNXMaEeeoYuc64YE22w" name="ExpressionStatement@56dc6b33">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wNnMaEeeoYuc64YE22w" target="_1M0weHMaEeeoYuc64YE22w" source="_1M0whXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_1M0wN3MaEeeoYuc64YE22w" target="_1M0wOHMaEeeoYuc64YE22w" source="_1M0weXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_1M0wOHMaEeeoYuc64YE22w" name="Collect(Call(write))" incoming="_1M0wN3MaEeeoYuc64YE22w" mode="parallel" inputElement="_1M0weHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wOXMaEeeoYuc64YE22w" target="_1M0wQXMaEeeoYuc64YE22w" source="_1M0wd3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wOnMaEeeoYuc64YE22w" target="_1M0wV3MaEeeoYuc64YE22w" source="_1M0wPXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0wO3MaEeeoYuc64YE22w" target="_1M0wQHMaEeeoYuc64YE22w" source="_1M0wSnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wPHMaEeeoYuc64YE22w" target="_1M0wR3MaEeeoYuc64YE22w" source="_1M0weHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_1M0wPXMaEeeoYuc64YE22w" name="Collect(Call(write)).input(Fork(value))" incoming="_1M0wKXMaEeeoYuc64YE22w" outgoing="_1M0wOnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wPnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wP3MaEeeoYuc64YE22w" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_1M0wQHMaEeeoYuc64YE22w" name="Call(write)" incoming="_1M0wO3MaEeeoYuc64YE22w">
              <argument xmi:id="_1M0wQXMaEeeoYuc64YE22w" name="Call(write).argument(value)" incoming="_1M0wOXMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wQnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wQ3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1M0wRHMaEeeoYuc64YE22w" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wRXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wRnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_1M0wR3MaEeeoYuc64YE22w" name="Call(write).target" incoming="_1M0wPHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wSHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wSXMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0wSnMaEeeoYuc64YE22w" name="Tuple@5b64bc02" outgoing="_1M0wO3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wS3MaEeeoYuc64YE22w" target="_1M0wX3MaEeeoYuc64YE22w" source="_1M0wV3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_1M0wTHMaEeeoYuc64YE22w" target="_1M0wXnMaEeeoYuc64YE22w" source="_1M0wVnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wTXMaEeeoYuc64YE22w" target="_1M0wanMaEeeoYuc64YE22w" source="_1M0wV3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_1M0wTnMaEeeoYuc64YE22w" target="_1M0wdnMaEeeoYuc64YE22w" source="_1M0wdXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wT3MaEeeoYuc64YE22w" target="_1M0wdnMaEeeoYuc64YE22w" source="_1M0wYnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_1M0wUHMaEeeoYuc64YE22w" target="_1M0wZXMaEeeoYuc64YE22w" source="_1M0wdnMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_1M0wUXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_1M0wUnMaEeeoYuc64YE22w" target="_1M0wa3MaEeeoYuc64YE22w" source="_1M0wdnMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_1M0wU3MaEeeoYuc64YE22w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wVHMaEeeoYuc64YE22w" target="_1M0wd3MaEeeoYuc64YE22w" source="_1M0wZ3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wVXMaEeeoYuc64YE22w" target="_1M0wd3MaEeeoYuc64YE22w" source="_1M0wbXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0wVnMaEeeoYuc64YE22w" name="Operands(EqualityExpression@7930de44)" outgoing="_1M0wTHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ForkNode" xmi:id="_1M0wV3MaEeeoYuc64YE22w" name="Fork()@4caca1" incoming="_1M0wOnMaEeeoYuc64YE22w" outgoing="_1M0wS3MaEeeoYuc64YE22w _1M0wTXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0wWHMaEeeoYuc64YE22w" name="RightHandSide@6071132e"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0wWXMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_1M0wWnMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wW3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wXHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_1M0wXXMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0wXnMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_1M0wTHMaEeeoYuc64YE22w">
                <argument xmi:id="_1M0wX3MaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_1M0wS3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wYHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wYXMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_1M0wYnMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_1M0wT3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wY3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wZHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0wZXMaEeeoYuc64YE22w" name="NullCoalescingExpression@4ad23216.operand2" incoming="_1M0wUHMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wZnMaEeeoYuc64YE22w" target="_1M0wZ3MaEeeoYuc64YE22w" source="_1M0wanMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_1M0wZ3MaEeeoYuc64YE22w" name="NullCoalescingExpression@4ad23216.operand2.result" incoming="_1M0wZnMaEeeoYuc64YE22w" outgoing="_1M0wVHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0waHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0waXMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_1M0wanMaEeeoYuc64YE22w" name="Merge(Fork()@4caca1)" incoming="_1M0wTXMaEeeoYuc64YE22w" outgoing="_1M0wZnMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0wa3MaEeeoYuc64YE22w" name="NullCoalescingExpression@4ad23216.operand3" incoming="_1M0wUnMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wbHMaEeeoYuc64YE22w" target="_1M0wbXMaEeeoYuc64YE22w" source="_1M0wcXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_1M0wbXMaEeeoYuc64YE22w" name="NullCoalescingExpression@4ad23216.operand3.result" incoming="_1M0wbHMaEeeoYuc64YE22w" outgoing="_1M0wVXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wbnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wb3MaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0wcHMaEeeoYuc64YE22w" name="Value(&quot;null&quot;)">
                  <result xmi:id="_1M0wcXMaEeeoYuc64YE22w" name="Value(&quot;null&quot;).result" outgoing="_1M0wbHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wcnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wc3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_1M0wdHMaEeeoYuc64YE22w" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_1M0wdXMaEeeoYuc64YE22w" name="Initial(NullCoalescingExpression@4ad23216)" outgoing="_1M0wTnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_1M0wdnMaEeeoYuc64YE22w" name="Decision(NullCoalescingExpression@4ad23216)" incoming="_1M0wTnMaEeeoYuc64YE22w _1M0wT3MaEeeoYuc64YE22w" outgoing="_1M0wUHMaEeeoYuc64YE22w _1M0wUnMaEeeoYuc64YE22w" decisionInputFlow="_1M0wT3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_1M0wd3MaEeeoYuc64YE22w" name="Merge(NullCoalescingExpression@4ad23216.result)" incoming="_1M0wVHMaEeeoYuc64YE22w _1M0wVXMaEeeoYuc64YE22w" outgoing="_1M0wOXMaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_1M0weHMaEeeoYuc64YE22w" name="Collect(Call(write)).inputElement" incoming="_1M0wNnMaEeeoYuc64YE22w" outgoing="_1M0wPHMaEeeoYuc64YE22w" regionAsInput="_1M0wOHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0weXMaEeeoYuc64YE22w" name="Feature(Call(At).result())" outgoing="_1M0wN3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wenMaEeeoYuc64YE22w" target="_1M0wf3MaEeeoYuc64YE22w" source="_1M0winMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0we3MaEeeoYuc64YE22w" target="_1M0wknMaEeeoYuc64YE22w" source="_1M0wjnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0wfHMaEeeoYuc64YE22w" target="_1M0wfnMaEeeoYuc64YE22w" source="_1M0wiHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wfXMaEeeoYuc64YE22w" target="_1M0wgnMaEeeoYuc64YE22w" source="_1M0wknMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0wfnMaEeeoYuc64YE22w" name="Call(At)" incoming="_1M0wfHMaEeeoYuc64YE22w">
              <argument xmi:id="_1M0wf3MaEeeoYuc64YE22w" name="Call(At).argument(seq)" incoming="_1M0wenMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wgHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wgXMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <argument xmi:id="_1M0wgnMaEeeoYuc64YE22w" name="Call(At).argument(index)" incoming="_1M0wfXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wg3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0whHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1M0whXMaEeeoYuc64YE22w" name="Call(At).result()" outgoing="_1M0wNnMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0whnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wh3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0wiHMaEeeoYuc64YE22w" name="Tuple@50b1aea" outgoing="_1M0wfHMaEeeoYuc64YE22w">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_1M0wiXMaEeeoYuc64YE22w" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_1M0winMaEeeoYuc64YE22w" name="ReadExtent(StandardOutputChannel).result" outgoing="_1M0wenMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wi3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wjHMaEeeoYuc64YE22w" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0wjXMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_1M0wjnMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_1M0we3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wj3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wkHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_1M0wkXMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1M0wknMaEeeoYuc64YE22w" name="Fork(Call(At).argument(index))" incoming="_1M0we3MaEeeoYuc64YE22w" outgoing="_1M0wfXMaEeeoYuc64YE22w"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_1M0wLHMaEeeoYuc64YE22w" name="Input(value)" outgoing="_1M0wKHMaEeeoYuc64YE22w" parameter="_1M0wJXMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:JoinNode" xmi:id="_1M0wLXMaEeeoYuc64YE22w" name="Join(Input))" incoming="_1M0wKnMaEeeoYuc64YE22w" outgoing="_1M0wK3MaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_1M0wk3MaEeeoYuc64YE22w" name="AssertTrue" visibility="public" node="_1M0wqnMaEeeoYuc64YE22w _1M0wrXMaEeeoYuc64YE22w _1M0wq3MaEeeoYuc64YE22w _1M0ws3MaEeeoYuc64YE22w _1M0wuXMaEeeoYuc64YE22w _1M0wrHMaEeeoYuc64YE22w" group="_1M0wrXMaEeeoYuc64YE22w _1M0ws3MaEeeoYuc64YE22w _1M0wuXMaEeeoYuc64YE22w">
      <packageImport xmi:id="_1M0wlHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_1M0wlXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_1M0wlnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_1M0wl3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_1M0wmHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_1M0wmXMaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wmnMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wm3MaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_1M0wnHMaEeeoYuc64YE22w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wnXMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wnnMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wn3MaEeeoYuc64YE22w" target="_1M0wr3MaEeeoYuc64YE22w" source="_1M0wqnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0woHMaEeeoYuc64YE22w" target="_1M0wtXMaEeeoYuc64YE22w" source="_1M0wq3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0woXMaEeeoYuc64YE22w" target="_1M0w13MaEeeoYuc64YE22w" source="_1M0wuHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wonMaEeeoYuc64YE22w" target="_1M0xA3MaEeeoYuc64YE22w" source="_1M0wsnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wo3MaEeeoYuc64YE22w" target="_1M0xC3MaEeeoYuc64YE22w" source="_1M0wuHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wpHMaEeeoYuc64YE22w" target="_1M1Vp3MaEeeoYuc64YE22w" source="_1M0wsnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wpXMaEeeoYuc64YE22w" target="_1M1VtHMaEeeoYuc64YE22w" source="_1M0wuHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wpnMaEeeoYuc64YE22w" target="_1M1VvHMaEeeoYuc64YE22w" source="_1M0wsnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_1M0wp3MaEeeoYuc64YE22w" target="_1M0wrHMaEeeoYuc64YE22w" source="_1M0wrXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_1M0wqHMaEeeoYuc64YE22w" target="_1M0wrHMaEeeoYuc64YE22w" source="_1M0ws3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_1M0wqXMaEeeoYuc64YE22w" target="_1M0wuXMaEeeoYuc64YE22w" source="_1M0wrHMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_1M0wrXMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_1M0wp3MaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wrnMaEeeoYuc64YE22w" target="_1M0wsnMaEeeoYuc64YE22w" source="_1M0wr3MaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_1M0wr3MaEeeoYuc64YE22w" name="Input(label)" incoming="_1M0wn3MaEeeoYuc64YE22w" outgoing="_1M0wrnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wsHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wsXMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_1M0wsnMaEeeoYuc64YE22w" name="Fork(label)" incoming="_1M0wrnMaEeeoYuc64YE22w" outgoing="_1M0wonMaEeeoYuc64YE22w _1M0wpHMaEeeoYuc64YE22w _1M0wpnMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_1M0ws3MaEeeoYuc64YE22w" name="Node(Input(condition))" outgoing="_1M0wqHMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wtHMaEeeoYuc64YE22w" target="_1M0wuHMaEeeoYuc64YE22w" source="_1M0wtXMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_1M0wtXMaEeeoYuc64YE22w" name="Input(condition)" incoming="_1M0woHMaEeeoYuc64YE22w" outgoing="_1M0wtHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wtnMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wt3MaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_1M0wuHMaEeeoYuc64YE22w" name="Fork(condition)" incoming="_1M0wtHMaEeeoYuc64YE22w" outgoing="_1M0woXMaEeeoYuc64YE22w _1M0wo3MaEeeoYuc64YE22w _1M0wpXMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_1M0wuXMaEeeoYuc64YE22w" name="Body(AssertTrue)" incoming="_1M0wqXMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wunMaEeeoYuc64YE22w" target="_1M1VynMaEeeoYuc64YE22w" source="_1M1VxHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wu3MaEeeoYuc64YE22w" target="_1M1Vy3MaEeeoYuc64YE22w" source="_1M1Vx3MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_1M0wvHMaEeeoYuc64YE22w" name="IfStatement@32e8c3c3">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0wvXMaEeeoYuc64YE22w" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wvnMaEeeoYuc64YE22w" target="_1M0wznMaEeeoYuc64YE22w" source="_1M0w13MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wv3MaEeeoYuc64YE22w" target="_1M0w2XMaEeeoYuc64YE22w" source="_1M0w13MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wwHMaEeeoYuc64YE22w" target="_1M0w33MaEeeoYuc64YE22w" source="_1M0w3HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wwXMaEeeoYuc64YE22w" target="_1M0w4HMaEeeoYuc64YE22w" source="_1M0w0XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wwnMaEeeoYuc64YE22w" target="_1M0w4XMaEeeoYuc64YE22w" source="_1M0w33MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0ww3MaEeeoYuc64YE22w" target="_1M0w4XMaEeeoYuc64YE22w" source="_1M0w33MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wxHMaEeeoYuc64YE22w" target="_1M0w4HMaEeeoYuc64YE22w" source="_1M0w4XMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_1M0wxXMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wxnMaEeeoYuc64YE22w" target="_1M0w1HMaEeeoYuc64YE22w" source="_1M0wyXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0wx3MaEeeoYuc64YE22w" target="_1M0w43MaEeeoYuc64YE22w" source="_1M0w4HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0wyHMaEeeoYuc64YE22w" name="Value(true)">
              <result xmi:id="_1M0wyXMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_1M0wxnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wynMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0wy3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_1M0wzHMaEeeoYuc64YE22w" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_1M0wzXMaEeeoYuc64YE22w" name="Test(==)">
              <first xmi:id="_1M0wznMaEeeoYuc64YE22w" name="Test(==).first" incoming="_1M0wvnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0wz3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0w0HMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_1M0w0XMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_1M0wwXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0w0nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0w03MaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_1M0w1HMaEeeoYuc64YE22w" name="Test(==).second" incoming="_1M0wxnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0w1XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0w1nMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1M0w13MaEeeoYuc64YE22w" name="Fork(Fork(condition))" incoming="_1M0woXMaEeeoYuc64YE22w" outgoing="_1M0wvnMaEeeoYuc64YE22w _1M0wv3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0w2HMaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_1M0w2XMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_1M0wv3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0w2nMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0w23MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_1M0w3HMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_1M0wwHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0w3XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0w3nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_1M0w33MaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_1M0wwHMaEeeoYuc64YE22w" outgoing="_1M0wwnMaEeeoYuc64YE22w _1M0ww3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_1M0w4HMaEeeoYuc64YE22w" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_1M0wwXMaEeeoYuc64YE22w _1M0wxHMaEeeoYuc64YE22w" outgoing="_1M0wx3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_1M0w4XMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_1M0wwnMaEeeoYuc64YE22w _1M0ww3MaEeeoYuc64YE22w" outgoing="_1M0wxHMaEeeoYuc64YE22w" decisionInputFlow="_1M0ww3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0w4nMaEeeoYuc64YE22w" name="Call(Not)">
              <argument xmi:id="_1M0w43MaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_1M0wx3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0w5HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0w5XMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1M0w5nMaEeeoYuc64YE22w" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0w53MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0w6HMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0w6XMaEeeoYuc64YE22w" name="ExpressionStatement@34d4aea7">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0w6nMaEeeoYuc64YE22w" target="_1M0w7XMaEeeoYuc64YE22w" source="_1M0w_HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_1M0w63MaEeeoYuc64YE22w" target="_1M0w7HMaEeeoYuc64YE22w" source="_1M0w83MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0w7HMaEeeoYuc64YE22w" name="Call(WriteLine)" incoming="_1M0w63MaEeeoYuc64YE22w">
              <argument xmi:id="_1M0w7XMaEeeoYuc64YE22w" name="Call(WriteLine).argument(value)" incoming="_1M0w6nMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0w7nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0w73MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_1M0w8HMaEeeoYuc64YE22w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0w8XMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0w8nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0w83MaEeeoYuc64YE22w" name="Tuple@aea96b0" outgoing="_1M0w63MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0w9HMaEeeoYuc64YE22w" target="_1M0xAHMaEeeoYuc64YE22w" source="_1M0w9nMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M0w9XMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_1M0w9nMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;).result" outgoing="_1M0w9HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0w93MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0w-HMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_1M0w-XMaEeeoYuc64YE22w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0w-nMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0w-3MaEeeoYuc64YE22w" target="_1M0w_HMaEeeoYuc64YE22w" source="_1M0xBnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_1M0w_HMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_1M0w-3MaEeeoYuc64YE22w" outgoing="_1M0w6nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0w_XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0w_nMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_1M0w_3MaEeeoYuc64YE22w" name="Call(Concat)">
                  <argument xmi:id="_1M0xAHMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_1M0w9HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0xAXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0xAnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_1M0xA3MaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_1M0wonMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0xBHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0xBXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_1M0xBnMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_1M0w-3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M0xB3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M0xCHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M0xCXMaEeeoYuc64YE22w" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M0xCnMaEeeoYuc64YE22w" target="_1M1VonMaEeeoYuc64YE22w" source="_1M0xC3MaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_1M0xC3MaEeeoYuc64YE22w" name="Passthru(Fork(condition)).input" incoming="_1M0wo3MaEeeoYuc64YE22w" outgoing="_1M0xCnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M1VoHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M1VoXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_1M1VonMaEeeoYuc64YE22w" name="Passthru(Fork(condition)).output" incoming="_1M0xCnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M1Vo3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M1VpHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M1VpXMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M1VpnMaEeeoYuc64YE22w" target="_1M1VqnMaEeeoYuc64YE22w" source="_1M1Vp3MaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_1M1Vp3MaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_1M0wpHMaEeeoYuc64YE22w" outgoing="_1M1VpnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M1VqHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M1VqXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_1M1VqnMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_1M1VpnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M1Vq3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M1VrHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_1M1VrXMaEeeoYuc64YE22w" name="Value(true)">
            <result xmi:id="_1M1VrnMaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M1Vr3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M1VsHMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_1M1VsXMaEeeoYuc64YE22w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M1VsnMaEeeoYuc64YE22w" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M1Vs3MaEeeoYuc64YE22w" target="_1M1Vt3MaEeeoYuc64YE22w" source="_1M1VtHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_1M1VtHMaEeeoYuc64YE22w" name="Passthru(Fork(condition)).input" incoming="_1M0wpXMaEeeoYuc64YE22w" outgoing="_1M1Vs3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M1VtXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M1VtnMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_1M1Vt3MaEeeoYuc64YE22w" name="Passthru(Fork(condition)).output" incoming="_1M1Vs3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M1VuHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M1VuXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_1M1VunMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_1M1Vu3MaEeeoYuc64YE22w" target="_1M1Vv3MaEeeoYuc64YE22w" source="_1M1VvHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_1M1VvHMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_1M0wpnMaEeeoYuc64YE22w" outgoing="_1M1Vu3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M1VvXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M1VvnMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_1M1Vv3MaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_1M1Vu3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M1VwHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M1VwXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_1M1VwnMaEeeoYuc64YE22w" body="_1M0w6XMaEeeoYuc64YE22w _1M0xCXMaEeeoYuc64YE22w _1M1VpXMaEeeoYuc64YE22w" bodyOutput="_1M1VonMaEeeoYuc64YE22w _1M1VqnMaEeeoYuc64YE22w" decider="_1M0w5nMaEeeoYuc64YE22w" successorClause="_1M1Vw3MaEeeoYuc64YE22w" test="_1M0wvXMaEeeoYuc64YE22w"/>
          <clause xmi:id="_1M1Vw3MaEeeoYuc64YE22w" body="_1M1VsnMaEeeoYuc64YE22w _1M1VunMaEeeoYuc64YE22w" bodyOutput="_1M1Vt3MaEeeoYuc64YE22w _1M1Vv3MaEeeoYuc64YE22w" decider="_1M1VrnMaEeeoYuc64YE22w" predecessorClause="_1M1VwnMaEeeoYuc64YE22w" test="_1M1VrXMaEeeoYuc64YE22w"/>
          <result xmi:id="_1M1VxHMaEeeoYuc64YE22w" name="IfStatement@32e8c3c3.result(condition)" outgoing="_1M0wunMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M1VxXMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M1VxnMaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_1M1Vx3MaEeeoYuc64YE22w" name="IfStatement@32e8c3c3.result(label)" outgoing="_1M0wu3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1M1VyHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1M1VyXMaEeeoYuc64YE22w" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_1M1VynMaEeeoYuc64YE22w" name="Fork(condition)" incoming="_1M0wunMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_1M1Vy3MaEeeoYuc64YE22w" name="Fork(label)" incoming="_1M0wu3MaEeeoYuc64YE22w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_1M0wqnMaEeeoYuc64YE22w" name="Input(label)" outgoing="_1M0wn3MaEeeoYuc64YE22w" parameter="_1M0wmXMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_1M0wq3MaEeeoYuc64YE22w" name="Input(condition)" outgoing="_1M0woHMaEeeoYuc64YE22w" parameter="_1M0wnHMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_1M0wrHMaEeeoYuc64YE22w" name="Join(Input))" incoming="_1M0wp3MaEeeoYuc64YE22w _1M0wqHMaEeeoYuc64YE22w" outgoing="_1M0wqXMaEeeoYuc64YE22w"/>
    </packagedElement>
    <profileApplication xmi:id="_1M1VzHMaEeeoYuc64YE22w">
      <eAnnotations xmi:id="_1M1VzXMaEeeoYuc64YE22w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_1M3K0HMaEeeoYuc64YE22w" base_BehavioralFeature="_1MzhWXMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_1M5nEHMaEeeoYuc64YE22w" base_BehavioralFeature="_1MzhbXMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_1M5nEXMaEeeoYuc64YE22w" base_BehavioralFeature="_1MzhUnMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_1M5nEnMaEeeoYuc64YE22w" base_BehavioralFeature="_1M0HqHMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_1M5nE3MaEeeoYuc64YE22w" base_BehavioralFeature="_1M0IM3MaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_1M6OIHMaEeeoYuc64YE22w" base_BehavioralFeature="_1M0IN3MaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_1M6OIXMaEeeoYuc64YE22w" base_BehavioralFeature="_1M0HpnMaEeeoYuc64YE22w"/>
</xmi:XMI>

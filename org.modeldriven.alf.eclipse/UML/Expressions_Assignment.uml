<?xml version="1.1" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_AiiV4BWFEeuqcIj4ulwE3w" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_AiiV4RWFEeuqcIj4ulwE3w" name="Expressions_Assignment" visibility="public">
      <packageImport xmi:id="_AiiV4hWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_AiiV4xWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_AiiV5BWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_AiiV5RWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_AiiV5hWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_AiiV5xWFEeuqcIj4ulwE3w" general="_AijAcBWFEeuqcIj4ulwE3w"/>
      <ownedAttribute xmi:id="_AiiV6BWFEeuqcIj4ulwE3w" name="Expressions_Assignment$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiV6RWFEeuqcIj4ulwE3w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiV6hWFEeuqcIj4ulwE3w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_AiiV6xWFEeuqcIj4ulwE3w" name="run$method$1" visibility="private" specification="_AijAURWFEeuqcIj4ulwE3w" node="_AiiV9RWFEeuqcIj4ulwE3w _AiiV9hWFEeuqcIj4ulwE3w _AiiV9xWFEeuqcIj4ulwE3w _AiiV-BWFEeuqcIj4ulwE3w" group="_AiiV-BWFEeuqcIj4ulwE3w">
        <ownedParameter xmi:id="_AiiV7BWFEeuqcIj4ulwE3w" name="tester" type="_AijlDhWFEeuqcIj4ulwE3w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiV7RWFEeuqcIj4ulwE3w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiV7hWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_AiiV7xWFEeuqcIj4ulwE3w" name="" type="_AiiV4RWFEeuqcIj4ulwE3w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiV8BWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiV8RWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiV8hWFEeuqcIj4ulwE3w" target="_AiiV9hWFEeuqcIj4ulwE3w" source="_AiiV9RWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiV8xWFEeuqcIj4ulwE3w" target="_AiiV9xWFEeuqcIj4ulwE3w" source="_Aii9MhWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiV9BWFEeuqcIj4ulwE3w" target="_Aii9OxWFEeuqcIj4ulwE3w" source="_AiiV9hWFEeuqcIj4ulwE3w"/>
        <structuredNode xmi:id="_AiiV-BWFEeuqcIj4ulwE3w" name="Body(run$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiV-RWFEeuqcIj4ulwE3w" target="_Aii9MhWFEeuqcIj4ulwE3w" source="_Aii9LxWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiV-hWFEeuqcIj4ulwE3w" target="_Aii9QhWFEeuqcIj4ulwE3w" source="_Aii9MhWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AiiV-xWFEeuqcIj4ulwE3w" target="_AiiWBRWFEeuqcIj4ulwE3w" source="_Aii9QRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AiiV_BWFEeuqcIj4ulwE3w" target="_Aii9QRWFEeuqcIj4ulwE3w" source="_Aii9MxWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiV_RWFEeuqcIj4ulwE3w" target="_Aii9RhWFEeuqcIj4ulwE3w" source="_Aii9MhWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiV_hWFEeuqcIj4ulwE3w" target="_Aii9TRWFEeuqcIj4ulwE3w" source="_Aii9SRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiV_xWFEeuqcIj4ulwE3w" target="_Aii9WRWFEeuqcIj4ulwE3w" source="_Aii9UBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWABWFEeuqcIj4ulwE3w" target="_Aii9XxWFEeuqcIj4ulwE3w" source="_Aii9VBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWARWFEeuqcIj4ulwE3w" target="_Aii9YxWFEeuqcIj4ulwE3w" source="_Aii9YhWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWAhWFEeuqcIj4ulwE3w" target="_Aii9YxWFEeuqcIj4ulwE3w" source="_Aii9XBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWAxWFEeuqcIj4ulwE3w" target="_Aii9MxWFEeuqcIj4ulwE3w" source="_Aii9YxWFEeuqcIj4ulwE3w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_AiiWBBWFEeuqcIj4ulwE3w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AiiWBRWFEeuqcIj4ulwE3w" name="Body" incoming="_AiiV-xWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWBhWFEeuqcIj4ulwE3w" target="_AiiWQxWFEeuqcIj4ulwE3w" source="_AiiWNRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWBxWFEeuqcIj4ulwE3w" target="_AiiWOxWFEeuqcIj4ulwE3w" source="_AiiWExWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWCBWFEeuqcIj4ulwE3w" target="_AiiWWxWFEeuqcIj4ulwE3w" source="_AiiWNhWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWCRWFEeuqcIj4ulwE3w" target="_AiiWVBWFEeuqcIj4ulwE3w" source="_AiiWOxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWChWFEeuqcIj4ulwE3w" target="_AiiWbBWFEeuqcIj4ulwE3w" source="_AiiWNxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWCxWFEeuqcIj4ulwE3w" target="_AiiWZBWFEeuqcIj4ulwE3w" source="_AiiWVBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWDBWFEeuqcIj4ulwE3w" target="_AiiWhRWFEeuqcIj4ulwE3w" source="_AiiWOBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWDRWFEeuqcIj4ulwE3w" target="_AiiWfRWFEeuqcIj4ulwE3w" source="_AiiWZBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWDhWFEeuqcIj4ulwE3w" target="_Aii9ABWFEeuqcIj4ulwE3w" source="_AiiWORWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWDxWFEeuqcIj4ulwE3w" target="_AiiWlhWFEeuqcIj4ulwE3w" source="_AiiWfRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWEBWFEeuqcIj4ulwE3w" target="_Aii9ExWFEeuqcIj4ulwE3w" source="_AiiWOhWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWERWFEeuqcIj4ulwE3w" target="_Aii9CxWFEeuqcIj4ulwE3w" source="_AiiWlhWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWEhWFEeuqcIj4ulwE3w" target="_Aii9JBWFEeuqcIj4ulwE3w" source="_Aii9CxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AiiWExWFEeuqcIj4ulwE3w" name="ExpressionStatement@509fe3de" outgoing="_AiiWBxWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWFBWFEeuqcIj4ulwE3w" target="_AiiWNRWFEeuqcIj4ulwE3w" source="_AiiWHBWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWFRWFEeuqcIj4ulwE3w" target="_AiiWNhWFEeuqcIj4ulwE3w" source="_AiiWHxWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWFhWFEeuqcIj4ulwE3w" target="_AiiWNxWFEeuqcIj4ulwE3w" source="_AiiWIhWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWFxWFEeuqcIj4ulwE3w" target="_AiiWOBWFEeuqcIj4ulwE3w" source="_AiiWJRWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWGBWFEeuqcIj4ulwE3w" target="_AiiWORWFEeuqcIj4ulwE3w" source="_AiiWKBWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWGRWFEeuqcIj4ulwE3w" target="_AiiWOhWFEeuqcIj4ulwE3w" source="_AiiWKxWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWGhWFEeuqcIj4ulwE3w" target="_AiiWLhWFEeuqcIj4ulwE3w" source="_AiiWMhWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_AiiWGxWFEeuqcIj4ulwE3w" name="Call(test)" operation="_AijAXBWFEeuqcIj4ulwE3w">
                <result xmi:id="_AiiWHBWFEeuqcIj4ulwE3w" name="Call(test).result(i)" outgoing="_AiiWFBWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWHRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWHhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <result xmi:id="_AiiWHxWFEeuqcIj4ulwE3w" name="Call(test).result(f)" outgoing="_AiiWFRWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWIBWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWIRWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <result xmi:id="_AiiWIhWFEeuqcIj4ulwE3w" name="Call(test).result(h)" outgoing="_AiiWFhWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWIxWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWJBWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <result xmi:id="_AiiWJRWFEeuqcIj4ulwE3w" name="Call(test).result(filename)" outgoing="_AiiWFxWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWJhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWJxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <result xmi:id="_AiiWKBWFEeuqcIj4ulwE3w" name="Call(test).result(s)" outgoing="_AiiWGBWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWKRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWKhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <result xmi:id="_AiiWKxWFEeuqcIj4ulwE3w" name="Call(test).result(a)" outgoing="_AiiWGRWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWLBWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWLRWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <target xmi:id="_AiiWLhWFEeuqcIj4ulwE3w" name="Call(test).target" incoming="_AiiWGhWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWLxWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWMBWFEeuqcIj4ulwE3w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_AiiWMRWFEeuqcIj4ulwE3w" name="ReadSelf">
                <result xmi:id="_AiiWMhWFEeuqcIj4ulwE3w" name="ReadSelf.result" outgoing="_AiiWGhWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWMxWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWNBWFEeuqcIj4ulwE3w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_AiiWNRWFEeuqcIj4ulwE3w" name="Fork(i)@5093a15d" incoming="_AiiWFBWFEeuqcIj4ulwE3w" outgoing="_AiiWBhWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_AiiWNhWFEeuqcIj4ulwE3w" name="Fork(f)@593bab39" incoming="_AiiWFRWFEeuqcIj4ulwE3w" outgoing="_AiiWCBWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_AiiWNxWFEeuqcIj4ulwE3w" name="Fork(h)@34613814" incoming="_AiiWFhWFEeuqcIj4ulwE3w" outgoing="_AiiWChWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_AiiWOBWFEeuqcIj4ulwE3w" name="Fork(filename)@7935ee8c" incoming="_AiiWFxWFEeuqcIj4ulwE3w" outgoing="_AiiWDBWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_AiiWORWFEeuqcIj4ulwE3w" name="Fork(s)@789113f4" incoming="_AiiWGBWFEeuqcIj4ulwE3w" outgoing="_AiiWDhWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_AiiWOhWFEeuqcIj4ulwE3w" name="Fork(a)@7cf70dbc" incoming="_AiiWGRWFEeuqcIj4ulwE3w" outgoing="_AiiWEBWFEeuqcIj4ulwE3w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AiiWOxWFEeuqcIj4ulwE3w" name="ExpressionStatement@a698698" incoming="_AiiWBxWFEeuqcIj4ulwE3w" outgoing="_AiiWCRWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWPBWFEeuqcIj4ulwE3w" target="_AiiWQBWFEeuqcIj4ulwE3w" source="_AiiWSxWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWPRWFEeuqcIj4ulwE3w" target="_AiiWRhWFEeuqcIj4ulwE3w" source="_AiiWUBWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWPhWFEeuqcIj4ulwE3w" target="_AiiWPxWFEeuqcIj4ulwE3w" source="_AiiWSRWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AiiWPxWFEeuqcIj4ulwE3w" name="Call(AssertEqual)" incoming="_AiiWPhWFEeuqcIj4ulwE3w" behavior="_AijloBWFEeuqcIj4ulwE3w">
                <argument xmi:id="_AiiWQBWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(label)" incoming="_AiiWPBWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWQRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWQhWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <argument xmi:id="_AiiWQxWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(value1)" incoming="_AiiWBhWFEeuqcIj4ulwE3w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWRBWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWRRWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <argument xmi:id="_AiiWRhWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(value2)" incoming="_AiiWPRWFEeuqcIj4ulwE3w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWRxWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWSBWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AiiWSRWFEeuqcIj4ulwE3w" name="Tuple@10ef2b00" outgoing="_AiiWPhWFEeuqcIj4ulwE3w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AiiWShWFEeuqcIj4ulwE3w" name="Value(&quot;i&quot;)">
                  <result xmi:id="_AiiWSxWFEeuqcIj4ulwE3w" name="Value(&quot;i&quot;).result" outgoing="_AiiWPBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWTBWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWTRWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AiiWThWFEeuqcIj4ulwE3w" value="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AiiWTxWFEeuqcIj4ulwE3w" name="Value(5)">
                  <result xmi:id="_AiiWUBWFEeuqcIj4ulwE3w" name="Value(5).result" outgoing="_AiiWPRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWURWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWUhWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_AiiWUxWFEeuqcIj4ulwE3w" value="5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AiiWVBWFEeuqcIj4ulwE3w" name="ExpressionStatement@6b617dca" incoming="_AiiWCRWFEeuqcIj4ulwE3w" outgoing="_AiiWCxWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWVRWFEeuqcIj4ulwE3w" target="_AiiWWBWFEeuqcIj4ulwE3w" source="_AiiWYBWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWVhWFEeuqcIj4ulwE3w" target="_AiiWVxWFEeuqcIj4ulwE3w" source="_AiiWXhWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AiiWVxWFEeuqcIj4ulwE3w" name="Call(AssertFalse)" incoming="_AiiWVhWFEeuqcIj4ulwE3w" behavior="_AikLVBWFEeuqcIj4ulwE3w">
                <argument xmi:id="_AiiWWBWFEeuqcIj4ulwE3w" name="Call(AssertFalse).argument(label)" incoming="_AiiWVRWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWWRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWWhWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <argument xmi:id="_AiiWWxWFEeuqcIj4ulwE3w" name="Call(AssertFalse).argument(condition)" incoming="_AiiWCBWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWXBWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWXRWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AiiWXhWFEeuqcIj4ulwE3w" name="Tuple@451bf572" outgoing="_AiiWVhWFEeuqcIj4ulwE3w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AiiWXxWFEeuqcIj4ulwE3w" name="Value(&quot;f&quot;)">
                  <result xmi:id="_AiiWYBWFEeuqcIj4ulwE3w" name="Value(&quot;f&quot;).result" outgoing="_AiiWVRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWYRWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWYhWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AiiWYxWFEeuqcIj4ulwE3w" value="f">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AiiWZBWFEeuqcIj4ulwE3w" name="ExpressionStatement@7a623ee" incoming="_AiiWCxWFEeuqcIj4ulwE3w" outgoing="_AiiWDRWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWZRWFEeuqcIj4ulwE3w" target="_AiiWaRWFEeuqcIj4ulwE3w" source="_AiiWdBWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWZhWFEeuqcIj4ulwE3w" target="_AiiWbxWFEeuqcIj4ulwE3w" source="_AiiWeRWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWZxWFEeuqcIj4ulwE3w" target="_AiiWaBWFEeuqcIj4ulwE3w" source="_AiiWchWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AiiWaBWFEeuqcIj4ulwE3w" name="Call(AssertEqual)" incoming="_AiiWZxWFEeuqcIj4ulwE3w" behavior="_AijloBWFEeuqcIj4ulwE3w">
                <argument xmi:id="_AiiWaRWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(label)" incoming="_AiiWZRWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWahWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWaxWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <argument xmi:id="_AiiWbBWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(value1)" incoming="_AiiWChWFEeuqcIj4ulwE3w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWbRWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWbhWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <argument xmi:id="_AiiWbxWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(value2)" incoming="_AiiWZhWFEeuqcIj4ulwE3w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWcBWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWcRWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AiiWchWFEeuqcIj4ulwE3w" name="Tuple@5a072e1" outgoing="_AiiWZxWFEeuqcIj4ulwE3w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AiiWcxWFEeuqcIj4ulwE3w" name="Value(&quot;h&quot;)">
                  <result xmi:id="_AiiWdBWFEeuqcIj4ulwE3w" name="Value(&quot;h&quot;).result" outgoing="_AiiWZRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWdRWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWdhWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AiiWdxWFEeuqcIj4ulwE3w" value="h">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AiiWeBWFEeuqcIj4ulwE3w" name="Value(85)">
                  <result xmi:id="_AiiWeRWFEeuqcIj4ulwE3w" name="Value(85).result" outgoing="_AiiWZhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWehWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWexWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_AiiWfBWFEeuqcIj4ulwE3w" value="85">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AiiWfRWFEeuqcIj4ulwE3w" name="ExpressionStatement@6995fa80" incoming="_AiiWDRWFEeuqcIj4ulwE3w" outgoing="_AiiWDxWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWfhWFEeuqcIj4ulwE3w" target="_AiiWghWFEeuqcIj4ulwE3w" source="_AiiWjRWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWfxWFEeuqcIj4ulwE3w" target="_AiiWiBWFEeuqcIj4ulwE3w" source="_AiiWkhWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWgBWFEeuqcIj4ulwE3w" target="_AiiWgRWFEeuqcIj4ulwE3w" source="_AiiWixWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AiiWgRWFEeuqcIj4ulwE3w" name="Call(AssertEqual)" incoming="_AiiWgBWFEeuqcIj4ulwE3w" behavior="_AijloBWFEeuqcIj4ulwE3w">
                <argument xmi:id="_AiiWghWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(label)" incoming="_AiiWfhWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWgxWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWhBWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <argument xmi:id="_AiiWhRWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(value1)" incoming="_AiiWDBWFEeuqcIj4ulwE3w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWhhWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWhxWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <argument xmi:id="_AiiWiBWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(value2)" incoming="_AiiWfxWFEeuqcIj4ulwE3w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWiRWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWihWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AiiWixWFEeuqcIj4ulwE3w" name="Tuple@5864ed00" outgoing="_AiiWgBWFEeuqcIj4ulwE3w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AiiWjBWFEeuqcIj4ulwE3w" name="Value(&quot;filename&quot;)">
                  <result xmi:id="_AiiWjRWFEeuqcIj4ulwE3w" name="Value(&quot;filename&quot;).result" outgoing="_AiiWfhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWjhWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWjxWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AiiWkBWFEeuqcIj4ulwE3w" value="filename">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AiiWkRWFEeuqcIj4ulwE3w" name="Value(&quot;xyz.doc&quot;)">
                  <result xmi:id="_AiiWkhWFEeuqcIj4ulwE3w" name="Value(&quot;xyz.doc&quot;).result" outgoing="_AiiWfxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWkxWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWlBWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AiiWlRWFEeuqcIj4ulwE3w" value="xyz.doc">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AiiWlhWFEeuqcIj4ulwE3w" name="ExpressionStatement@3df1f4cb" incoming="_AiiWDxWFEeuqcIj4ulwE3w" outgoing="_AiiWERWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWlxWFEeuqcIj4ulwE3w" target="_AiiWnBWFEeuqcIj4ulwE3w" source="_Aii89hWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWmBWFEeuqcIj4ulwE3w" target="_AiiWnxWFEeuqcIj4ulwE3w" source="_Aii8_BWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AiiWmRWFEeuqcIj4ulwE3w" target="_Aii88RWFEeuqcIj4ulwE3w" source="_Aii9BxWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AiiWmhWFEeuqcIj4ulwE3w" target="_AiiWmxWFEeuqcIj4ulwE3w" source="_Aii89BWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AiiWmxWFEeuqcIj4ulwE3w" name="Call(AssertEqual)" incoming="_AiiWmhWFEeuqcIj4ulwE3w" behavior="_AijloBWFEeuqcIj4ulwE3w">
                <argument xmi:id="_AiiWnBWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(label)" incoming="_AiiWlxWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWnRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AiiWnhWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <argument xmi:id="_AiiWnxWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(value1)" incoming="_AiiWmBWFEeuqcIj4ulwE3w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AiiWoBWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii88BWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <argument xmi:id="_Aii88RWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(value2)" incoming="_AiiWmRWFEeuqcIj4ulwE3w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii88hWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii88xWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii89BWFEeuqcIj4ulwE3w" name="Tuple@6ecff5dc" outgoing="_AiiWmhWFEeuqcIj4ulwE3w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii89RWFEeuqcIj4ulwE3w" name="Value(&quot;Size(s)&quot;)">
                  <result xmi:id="_Aii89hWFEeuqcIj4ulwE3w" name="Value(&quot;Size(s)&quot;).result" outgoing="_AiiWlxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii89xWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii8-BWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Aii8-RWFEeuqcIj4ulwE3w" value="Size(s)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii8-hWFEeuqcIj4ulwE3w" name="Node(Call(Size))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii8-xWFEeuqcIj4ulwE3w" target="_Aii8_BWFEeuqcIj4ulwE3w" source="_Aii9AxWFEeuqcIj4ulwE3w"/>
                  <structuredNodeOutput xmi:id="_Aii8_BWFEeuqcIj4ulwE3w" name="Output(Call(Size).result(result))" incoming="_Aii8-xWFEeuqcIj4ulwE3w" outgoing="_AiiWmBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii8_RWFEeuqcIj4ulwE3w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii8_hWFEeuqcIj4ulwE3w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii8_xWFEeuqcIj4ulwE3w" name="Call(Size)">
                    <argument xmi:id="_Aii9ABWFEeuqcIj4ulwE3w" name="Call(Size).argument(x)" incoming="_AiiWDhWFEeuqcIj4ulwE3w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9ARWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9AhWFEeuqcIj4ulwE3w" value="1"/>
                    </argument>
                    <result xmi:id="_Aii9AxWFEeuqcIj4ulwE3w" name="Call(Size).result(result)" outgoing="_Aii8-xWFEeuqcIj4ulwE3w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9BBWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9BRWFEeuqcIj4ulwE3w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Size"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii9BhWFEeuqcIj4ulwE3w" name="Value(7)">
                  <result xmi:id="_Aii9BxWFEeuqcIj4ulwE3w" name="Value(7).result" outgoing="_AiiWmRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9CBWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9CRWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Aii9ChWFEeuqcIj4ulwE3w" value="7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii9CxWFEeuqcIj4ulwE3w" name="ExpressionStatement@72851c70" incoming="_AiiWERWFEeuqcIj4ulwE3w" outgoing="_AiiWEhWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9DBWFEeuqcIj4ulwE3w" target="_Aii9EBWFEeuqcIj4ulwE3w" source="_Aii9GxWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9DRWFEeuqcIj4ulwE3w" target="_Aii9FhWFEeuqcIj4ulwE3w" source="_Aii9IBWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9DhWFEeuqcIj4ulwE3w" target="_Aii9DxWFEeuqcIj4ulwE3w" source="_Aii9GRWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii9DxWFEeuqcIj4ulwE3w" name="Call(AssertEqual)" incoming="_Aii9DhWFEeuqcIj4ulwE3w" behavior="_AijloBWFEeuqcIj4ulwE3w">
                <argument xmi:id="_Aii9EBWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(label)" incoming="_Aii9DBWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9ERWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9EhWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <argument xmi:id="_Aii9ExWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(value1)" incoming="_AiiWEBWFEeuqcIj4ulwE3w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9FBWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9FRWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <argument xmi:id="_Aii9FhWFEeuqcIj4ulwE3w" name="Call(AssertEqual).argument(value2)" incoming="_Aii9DRWFEeuqcIj4ulwE3w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9FxWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9GBWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii9GRWFEeuqcIj4ulwE3w" name="Tuple@2db4b11c" outgoing="_Aii9DhWFEeuqcIj4ulwE3w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii9GhWFEeuqcIj4ulwE3w" name="Value(&quot;a&quot;)">
                  <result xmi:id="_Aii9GxWFEeuqcIj4ulwE3w" name="Value(&quot;a&quot;).result" outgoing="_Aii9DBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9HBWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9HRWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_Aii9HhWFEeuqcIj4ulwE3w" value="a">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii9HxWFEeuqcIj4ulwE3w" name="Value(2)">
                  <result xmi:id="_Aii9IBWFEeuqcIj4ulwE3w" name="Value(2).result" outgoing="_Aii9DRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9IRWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9IhWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Aii9IxWFEeuqcIj4ulwE3w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii9JBWFEeuqcIj4ulwE3w" name="ExpressionStatement@7fb99462" incoming="_AiiWEhWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9JRWFEeuqcIj4ulwE3w" target="_Aii9JxWFEeuqcIj4ulwE3w" source="_Aii9KxWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_Aii9JhWFEeuqcIj4ulwE3w" name="Call(done)" operation="_AijlAhWFEeuqcIj4ulwE3w">
                <target xmi:id="_Aii9JxWFEeuqcIj4ulwE3w" name="Call(done).target" incoming="_Aii9JRWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9KBWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9KRWFEeuqcIj4ulwE3w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_Aii9KhWFEeuqcIj4ulwE3w" name="ReadSelf">
                <result xmi:id="_Aii9KxWFEeuqcIj4ulwE3w" name="ReadSelf.result" outgoing="_Aii9JRWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9LBWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9LRWFEeuqcIj4ulwE3w" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_Aii9LhWFEeuqcIj4ulwE3w" name="ReadSelf">
            <result xmi:id="_Aii9LxWFEeuqcIj4ulwE3w" name="ReadSelf.result" outgoing="_AiiV-RWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9MBWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9MRWFEeuqcIj4ulwE3w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Aii9MhWFEeuqcIj4ulwE3w" name="Fork(ReadSelf.result)" incoming="_AiiV-RWFEeuqcIj4ulwE3w" outgoing="_AiiV8xWFEeuqcIj4ulwE3w _AiiV-hWFEeuqcIj4ulwE3w _AiiV_RWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii9MxWFEeuqcIj4ulwE3w" name="Super" incoming="_AiiWAxWFEeuqcIj4ulwE3w" outgoing="_AiiV_BWFEeuqcIj4ulwE3w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii9NBWFEeuqcIj4ulwE3w" name="ExpressionStatement@231cb868">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii9NRWFEeuqcIj4ulwE3w" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9NhWFEeuqcIj4ulwE3w" target="_Aii9NxWFEeuqcIj4ulwE3w" source="_Aii9PhWFEeuqcIj4ulwE3w"/>
                <structuredNodeOutput xmi:id="_Aii9NxWFEeuqcIj4ulwE3w" name="Output(Call(Test$method$1).result())" incoming="_Aii9NhWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9OBWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9ORWFEeuqcIj4ulwE3w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii9OhWFEeuqcIj4ulwE3w" name="Call(Test$method$1)" behavior="_AijkIRWFEeuqcIj4ulwE3w">
                  <argument xmi:id="_Aii9OxWFEeuqcIj4ulwE3w" name="Call(Test$method$1).argument(tester)" incoming="_AiiV9BWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9PBWFEeuqcIj4ulwE3w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9PRWFEeuqcIj4ulwE3w" value="1"/>
                  </argument>
                  <result xmi:id="_Aii9PhWFEeuqcIj4ulwE3w" name="Call(Test$method$1).result()" outgoing="_Aii9NhWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9PxWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9QBWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_Aii9QRWFEeuqcIj4ulwE3w" name="Call(Expressions_Assignment$initialization$1)" incoming="_AiiV_BWFEeuqcIj4ulwE3w" outgoing="_AiiV-xWFEeuqcIj4ulwE3w" operation="_AijAUBWFEeuqcIj4ulwE3w">
            <target xmi:id="_Aii9QhWFEeuqcIj4ulwE3w" name="Call(Expressions_Assignment$initialization$1).target" incoming="_AiiV-hWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9QxWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9RBWFEeuqcIj4ulwE3w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Aii9RRWFEeuqcIj4ulwE3w" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_AiiV6BWFEeuqcIj4ulwE3w">
            <object xmi:id="_Aii9RhWFEeuqcIj4ulwE3w" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_AiiV_RWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9RxWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9SBWFEeuqcIj4ulwE3w" value="1"/>
            </object>
            <result xmi:id="_Aii9SRWFEeuqcIj4ulwE3w" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_AiiV_hWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9ShWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9SxWFEeuqcIj4ulwE3w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii9TBWFEeuqcIj4ulwE3w" name="Call(ListSize)">
            <argument xmi:id="_Aii9TRWFEeuqcIj4ulwE3w" name="Call(ListSize).argument(list)" incoming="_AiiV_hWFEeuqcIj4ulwE3w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9ThWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9TxWFEeuqcIj4ulwE3w" value="*"/>
            </argument>
            <result xmi:id="_Aii9UBWFEeuqcIj4ulwE3w" name="Call(ListSize).result(result)" outgoing="_AiiV_xWFEeuqcIj4ulwE3w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9URWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9UhWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii9UxWFEeuqcIj4ulwE3w" name="Value(0)">
            <result xmi:id="_Aii9VBWFEeuqcIj4ulwE3w" name="Value(0).result" outgoing="_AiiWABWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9VRWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9VhWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_Aii9VxWFEeuqcIj4ulwE3w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Aii9WBWFEeuqcIj4ulwE3w" name="Test(Size==0)">
            <first xmi:id="_Aii9WRWFEeuqcIj4ulwE3w" name="Test(Size==0).first" incoming="_AiiV_xWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9WhWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9WxWFEeuqcIj4ulwE3w" value="1"/>
            </first>
            <result xmi:id="_Aii9XBWFEeuqcIj4ulwE3w" name="Test(Size==0).result" outgoing="_AiiWAhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9XRWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9XhWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <second xmi:id="_Aii9XxWFEeuqcIj4ulwE3w" name="Test(Size==0).second" incoming="_AiiWABWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9YBWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9YRWFEeuqcIj4ulwE3w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_Aii9YhWFEeuqcIj4ulwE3w" name="InitialNode" outgoing="_AiiWARWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_Aii9YxWFEeuqcIj4ulwE3w" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" incoming="_AiiWARWFEeuqcIj4ulwE3w _AiiWAhWFEeuqcIj4ulwE3w" outgoing="_AiiWAxWFEeuqcIj4ulwE3w" decisionInputFlow="_AiiWAhWFEeuqcIj4ulwE3w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_AiiV9RWFEeuqcIj4ulwE3w" name="Input(tester)" outgoing="_AiiV8hWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" parameter="_AiiV7BWFEeuqcIj4ulwE3w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_AiiV9hWFEeuqcIj4ulwE3w" name="Fork(tester)" incoming="_AiiV8hWFEeuqcIj4ulwE3w" outgoing="_AiiV9BWFEeuqcIj4ulwE3w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_AiiV9xWFEeuqcIj4ulwE3w" name="Return" incoming="_AiiV8xWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" parameter="_AiiV7xWFEeuqcIj4ulwE3w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Aii9ZBWFEeuqcIj4ulwE3w" name="Expressions_Assignment$method$1" visibility="private" specification="_AijAWBWFEeuqcIj4ulwE3w" node="_Aii9aRWFEeuqcIj4ulwE3w _Aii9ahWFEeuqcIj4ulwE3w" group="_Aii9ahWFEeuqcIj4ulwE3w">
        <ownedParameter xmi:id="_Aii9ZRWFEeuqcIj4ulwE3w" name="" type="_AiiV4RWFEeuqcIj4ulwE3w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9ZhWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9ZxWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9aBWFEeuqcIj4ulwE3w" target="_Aii9aRWFEeuqcIj4ulwE3w" source="_Aii9kxWFEeuqcIj4ulwE3w"/>
        <structuredNode xmi:id="_Aii9ahWFEeuqcIj4ulwE3w" name="Body(Expressions_Assignment$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9axWFEeuqcIj4ulwE3w" target="_Aii9kxWFEeuqcIj4ulwE3w" source="_Aii9kBWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii9bBWFEeuqcIj4ulwE3w" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii9bRWFEeuqcIj4ulwE3w" name="ExpressionStatement@352710de">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9bhWFEeuqcIj4ulwE3w" target="_Aii9hhWFEeuqcIj4ulwE3w" source="_Aii9dBWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9bxWFEeuqcIj4ulwE3w" target="_Aii9hRWFEeuqcIj4ulwE3w" source="_Aii9chWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9cBWFEeuqcIj4ulwE3w" target="_Aii9fxWFEeuqcIj4ulwE3w" source="_Aii9eRWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9cRWFEeuqcIj4ulwE3w" target="_Aii9fBWFEeuqcIj4ulwE3w" source="_Aii9chWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii9chWFEeuqcIj4ulwE3w" name="Tuple@4ca78107" outgoing="_Aii9bxWFEeuqcIj4ulwE3w _Aii9cRWFEeuqcIj4ulwE3w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii9cxWFEeuqcIj4ulwE3w" name="Value(null)">
                  <result xmi:id="_Aii9dBWFEeuqcIj4ulwE3w" name="Value(null).result" outgoing="_Aii9bhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9dRWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9dhWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_Aii9dxWFEeuqcIj4ulwE3w"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_Aii9eBWFEeuqcIj4ulwE3w" name="ReadSelf">
                <result xmi:id="_Aii9eRWFEeuqcIj4ulwE3w" name="ReadSelf.result" outgoing="_Aii9cBWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9ehWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9exWFEeuqcIj4ulwE3w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii9fBWFEeuqcIj4ulwE3w" name="Node(Call(run))" incoming="_Aii9cRWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9fRWFEeuqcIj4ulwE3w" target="_Aii9ghWFEeuqcIj4ulwE3w" source="_Aii9iRWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9fhWFEeuqcIj4ulwE3w" target="_Aii9jBWFEeuqcIj4ulwE3w" source="_Aii9fxWFEeuqcIj4ulwE3w"/>
                <structuredNodeInput xmi:id="_Aii9fxWFEeuqcIj4ulwE3w" name="Input(Call(run).target)" incoming="_Aii9cBWFEeuqcIj4ulwE3w" outgoing="_Aii9fhWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9gBWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9gRWFEeuqcIj4ulwE3w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Aii9ghWFEeuqcIj4ulwE3w" name="Output(Call(run).result())" incoming="_Aii9fRWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9gxWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9hBWFEeuqcIj4ulwE3w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_Aii9hRWFEeuqcIj4ulwE3w" name="Call(run)" incoming="_Aii9bxWFEeuqcIj4ulwE3w" operation="_AijAURWFEeuqcIj4ulwE3w">
                  <argument xmi:id="_Aii9hhWFEeuqcIj4ulwE3w" name="Call(run).argument(tester)" incoming="_Aii9bhWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9hxWFEeuqcIj4ulwE3w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9iBWFEeuqcIj4ulwE3w" value="1"/>
                  </argument>
                  <result xmi:id="_Aii9iRWFEeuqcIj4ulwE3w" name="Call(run).result()" outgoing="_Aii9fRWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9ihWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9ixWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <target xmi:id="_Aii9jBWFEeuqcIj4ulwE3w" name="Call(run).target" incoming="_Aii9fhWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9jRWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9jhWFEeuqcIj4ulwE3w" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_Aii9jxWFEeuqcIj4ulwE3w" name="ReadSelf">
            <result xmi:id="_Aii9kBWFEeuqcIj4ulwE3w" name="ReadSelf.result" outgoing="_Aii9axWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9kRWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9khWFEeuqcIj4ulwE3w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Aii9kxWFEeuqcIj4ulwE3w" name="Fork(ReadSelf.result)" incoming="_Aii9axWFEeuqcIj4ulwE3w" outgoing="_Aii9aBWFEeuqcIj4ulwE3w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Aii9aRWFEeuqcIj4ulwE3w" name="Return" incoming="_Aii9aBWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" parameter="_Aii9ZRWFEeuqcIj4ulwE3w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Aii9lBWFEeuqcIj4ulwE3w" name="test$method$1" visibility="private" specification="_AijAXBWFEeuqcIj4ulwE3w" node="_Aii9rRWFEeuqcIj4ulwE3w _Aii9rhWFEeuqcIj4ulwE3w _Aii9rxWFEeuqcIj4ulwE3w _Aii9sBWFEeuqcIj4ulwE3w _Aii9sRWFEeuqcIj4ulwE3w _Aii9shWFEeuqcIj4ulwE3w _Aii9sxWFEeuqcIj4ulwE3w" group="_Aii9sxWFEeuqcIj4ulwE3w">
        <ownedParameter xmi:id="_Aii9lRWFEeuqcIj4ulwE3w" name="i" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9lhWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9lxWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Aii9mBWFEeuqcIj4ulwE3w" name="f" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9mRWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9mhWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Aii9mxWFEeuqcIj4ulwE3w" name="h" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9nBWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9nRWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Aii9nhWFEeuqcIj4ulwE3w" name="filename" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9nxWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9oBWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Aii9oRWFEeuqcIj4ulwE3w" name="s" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9ohWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9oxWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Aii9pBWFEeuqcIj4ulwE3w" name="a" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9pRWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9phWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9pxWFEeuqcIj4ulwE3w" target="_Aii9rRWFEeuqcIj4ulwE3w" source="_Aii96RWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9qBWFEeuqcIj4ulwE3w" target="_Aii9rhWFEeuqcIj4ulwE3w" source="_Aii97BWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9qRWFEeuqcIj4ulwE3w" target="_Aii9rxWFEeuqcIj4ulwE3w" source="_Aii97xWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9qhWFEeuqcIj4ulwE3w" target="_Aii9sBWFEeuqcIj4ulwE3w" source="_Aii98hWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9qxWFEeuqcIj4ulwE3w" target="_Aii9sRWFEeuqcIj4ulwE3w" source="_Aii99RWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9rBWFEeuqcIj4ulwE3w" target="_Aii9shWFEeuqcIj4ulwE3w" source="_Aii9-BWFEeuqcIj4ulwE3w"/>
        <structuredNode xmi:id="_Aii9sxWFEeuqcIj4ulwE3w" name="Body(test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9tBWFEeuqcIj4ulwE3w" target="_Aii-CBWFEeuqcIj4ulwE3w" source="_Aii9_RWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9tRWFEeuqcIj4ulwE3w" target="_Aii-BBWFEeuqcIj4ulwE3w" source="_Aii9-xWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9thWFEeuqcIj4ulwE3w" target="_Aii-HBWFEeuqcIj4ulwE3w" source="_Aii-ERWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9txWFEeuqcIj4ulwE3w" target="_Aii-GBWFEeuqcIj4ulwE3w" source="_Aii-BBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9uBWFEeuqcIj4ulwE3w" target="_Aii-MBWFEeuqcIj4ulwE3w" source="_Aii-JRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9uRWFEeuqcIj4ulwE3w" target="_Aii-LBWFEeuqcIj4ulwE3w" source="_Aii-GBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9uhWFEeuqcIj4ulwE3w" target="_Aii-RBWFEeuqcIj4ulwE3w" source="_Aii-ORWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9uxWFEeuqcIj4ulwE3w" target="_Aii-QBWFEeuqcIj4ulwE3w" source="_Aii-LBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9vBWFEeuqcIj4ulwE3w" target="_Aii-WBWFEeuqcIj4ulwE3w" source="_Aii-TRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9vRWFEeuqcIj4ulwE3w" target="_Aii-VBWFEeuqcIj4ulwE3w" source="_Aii-QBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9vhWFEeuqcIj4ulwE3w" target="_Aii-bBWFEeuqcIj4ulwE3w" source="_Aii-YRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9vxWFEeuqcIj4ulwE3w" target="_Aii-aBWFEeuqcIj4ulwE3w" source="_Aii-VBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9wBWFEeuqcIj4ulwE3w" target="_Aii-fBWFEeuqcIj4ulwE3w" source="_Aii-aBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9wRWFEeuqcIj4ulwE3w" target="_Aii-iRWFEeuqcIj4ulwE3w" source="_Aii-fhWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9whWFEeuqcIj4ulwE3w" target="_Aii-hRWFEeuqcIj4ulwE3w" source="_Aii-fBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9wxWFEeuqcIj4ulwE3w" target="_Aii-nRWFEeuqcIj4ulwE3w" source="_Aii-khWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9xBWFEeuqcIj4ulwE3w" target="_Aii-mRWFEeuqcIj4ulwE3w" source="_Aii-hRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9xRWFEeuqcIj4ulwE3w" target="_Aii-sRWFEeuqcIj4ulwE3w" source="_Aii-phWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9xhWFEeuqcIj4ulwE3w" target="_Aii-rRWFEeuqcIj4ulwE3w" source="_Aii-mRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9xxWFEeuqcIj4ulwE3w" target="_Aii-wRWFEeuqcIj4ulwE3w" source="_Aii-rRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9yBWFEeuqcIj4ulwE3w" target="_Aii-5xWFEeuqcIj4ulwE3w" source="_Aii-wRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9yRWFEeuqcIj4ulwE3w" target="_Aii-_BWFEeuqcIj4ulwE3w" source="_Aii-6RWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9yhWFEeuqcIj4ulwE3w" target="_Aii--BWFEeuqcIj4ulwE3w" source="_Aii-5xWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9yxWFEeuqcIj4ulwE3w" target="_Aii_GBWFEeuqcIj4ulwE3w" source="_Aii_BRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9zBWFEeuqcIj4ulwE3w" target="_Aii_FBWFEeuqcIj4ulwE3w" source="_Aii--BWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9zRWFEeuqcIj4ulwE3w" target="_Aii_NBWFEeuqcIj4ulwE3w" source="_Aii_IRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii9zhWFEeuqcIj4ulwE3w" target="_Aii_MBWFEeuqcIj4ulwE3w" source="_Aii_FBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9zxWFEeuqcIj4ulwE3w" target="_Aii_UBWFEeuqcIj4ulwE3w" source="_Aii_PRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii90BWFEeuqcIj4ulwE3w" target="_Aii_TBWFEeuqcIj4ulwE3w" source="_Aii_MBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii90RWFEeuqcIj4ulwE3w" target="_Aii_ZBWFEeuqcIj4ulwE3w" source="_Aii_WRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii90hWFEeuqcIj4ulwE3w" target="_Aii_YBWFEeuqcIj4ulwE3w" source="_Aii_TBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii90xWFEeuqcIj4ulwE3w" target="_Aii_eBWFEeuqcIj4ulwE3w" source="_Aii_bRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii91BWFEeuqcIj4ulwE3w" target="_Aii_dBWFEeuqcIj4ulwE3w" source="_Aii_YBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii91RWFEeuqcIj4ulwE3w" target="_Aii_iBWFEeuqcIj4ulwE3w" source="_Aii_dBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii91hWFEeuqcIj4ulwE3w" target="_Aii_lRWFEeuqcIj4ulwE3w" source="_Aii_ihWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii91xWFEeuqcIj4ulwE3w" target="_Aii_kRWFEeuqcIj4ulwE3w" source="_Aii_iBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii92BWFEeuqcIj4ulwE3w" target="_Aii_pRWFEeuqcIj4ulwE3w" source="_Aii_kRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii92RWFEeuqcIj4ulwE3w" target="_Aii_rhWFEeuqcIj4ulwE3w" source="_Aii_pRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii92hWFEeuqcIj4ulwE3w" target="_Aii_uxWFEeuqcIj4ulwE3w" source="_Aii_sBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii92xWFEeuqcIj4ulwE3w" target="_Aii_txWFEeuqcIj4ulwE3w" source="_Aii_rhWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii93BWFEeuqcIj4ulwE3w" target="_Aii_yxWFEeuqcIj4ulwE3w" source="_Aii_txWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii93RWFEeuqcIj4ulwE3w" target="_Aii_1xWFEeuqcIj4ulwE3w" source="_Aii_zRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii93hWFEeuqcIj4ulwE3w" target="_Aii_2hWFEeuqcIj4ulwE3w" source="_Aii-dRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii93xWFEeuqcIj4ulwE3w" target="_Aii_1BWFEeuqcIj4ulwE3w" source="_Aii_yxWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii94BWFEeuqcIj4ulwE3w" target="_Aii_4hWFEeuqcIj4ulwE3w" source="_Aii_1BWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii94RWFEeuqcIj4ulwE3w" target="_Aii_7xWFEeuqcIj4ulwE3w" source="_Aii_5BWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aii94hWFEeuqcIj4ulwE3w" target="_Aii_6xWFEeuqcIj4ulwE3w" source="_Aii_4hWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii94xWFEeuqcIj4ulwE3w" target="_Aii96RWFEeuqcIj4ulwE3w" source="_Aii-dRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii95BWFEeuqcIj4ulwE3w" target="_Aii97BWFEeuqcIj4ulwE3w" source="_Aii-uhWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii95RWFEeuqcIj4ulwE3w" target="_Aii97xWFEeuqcIj4ulwE3w" source="_Aii_gRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii95hWFEeuqcIj4ulwE3w" target="_Aii98hWFEeuqcIj4ulwE3w" source="_Aii_nhWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii95xWFEeuqcIj4ulwE3w" target="_Aii99RWFEeuqcIj4ulwE3w" source="_Aii_pxWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii96BWFEeuqcIj4ulwE3w" target="_Aii9-BWFEeuqcIj4ulwE3w" source="_Aii_-BWFEeuqcIj4ulwE3w"/>
          <structuredNodeOutput xmi:id="_Aii96RWFEeuqcIj4ulwE3w" name="Output(i)" incoming="_Aii94xWFEeuqcIj4ulwE3w" outgoing="_Aii9pxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii96hWFEeuqcIj4ulwE3w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii96xWFEeuqcIj4ulwE3w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Aii97BWFEeuqcIj4ulwE3w" name="Output(f)" incoming="_Aii95BWFEeuqcIj4ulwE3w" outgoing="_Aii9qBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii97RWFEeuqcIj4ulwE3w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii97hWFEeuqcIj4ulwE3w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Aii97xWFEeuqcIj4ulwE3w" name="Output(h)" incoming="_Aii95RWFEeuqcIj4ulwE3w" outgoing="_Aii9qRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii98BWFEeuqcIj4ulwE3w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii98RWFEeuqcIj4ulwE3w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Aii98hWFEeuqcIj4ulwE3w" name="Output(filename)" incoming="_Aii95hWFEeuqcIj4ulwE3w" outgoing="_Aii9qhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii98xWFEeuqcIj4ulwE3w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii99BWFEeuqcIj4ulwE3w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Aii99RWFEeuqcIj4ulwE3w" name="Output(s)" incoming="_Aii95xWFEeuqcIj4ulwE3w" outgoing="_Aii9qxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii99hWFEeuqcIj4ulwE3w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii99xWFEeuqcIj4ulwE3w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Aii9-BWFEeuqcIj4ulwE3w" name="Output(a)" incoming="_Aii96BWFEeuqcIj4ulwE3w" outgoing="_Aii9rBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii9-RWFEeuqcIj4ulwE3w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii9-hWFEeuqcIj4ulwE3w" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii9-xWFEeuqcIj4ulwE3w" name="ExpressionStatement@7fff715c" outgoing="_Aii9tRWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii9_BWFEeuqcIj4ulwE3w" target="_Aii9_RWFEeuqcIj4ulwE3w" source="_Aii-ABWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii9_RWFEeuqcIj4ulwE3w" name="Fork(i)@6fad5a32" incoming="_Aii9_BWFEeuqcIj4ulwE3w" outgoing="_Aii9tBWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii9_hWFEeuqcIj4ulwE3w" name="RightHandSide@1dbc87b0">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii9_xWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii-ABWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii9_BWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-ARWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-AhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii-AxWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-BBWFEeuqcIj4ulwE3w" name="ExpressionStatement@60ed00b1" incoming="_Aii9tRWFEeuqcIj4ulwE3w" outgoing="_Aii9txWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-BRWFEeuqcIj4ulwE3w" target="_Aii-CxWFEeuqcIj4ulwE3w" source="_Aii-FBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-BhWFEeuqcIj4ulwE3w" target="_Aii-ERWFEeuqcIj4ulwE3w" source="_Aii-DhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii-BxWFEeuqcIj4ulwE3w" name="Call(+)">
              <argument xmi:id="_Aii-CBWFEeuqcIj4ulwE3w" name="Call(+).argument(x)" incoming="_Aii9tBWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-CRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-ChWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii-CxWFEeuqcIj4ulwE3w" name="Call(+).argument(y)" incoming="_Aii-BRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-DBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-DRWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii-DhWFEeuqcIj4ulwE3w" name="Call(+).result(result)" outgoing="_Aii-BhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-DxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-EBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii-ERWFEeuqcIj4ulwE3w" name="Fork(i)@255b58a2" incoming="_Aii-BhWFEeuqcIj4ulwE3w" outgoing="_Aii9thWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-EhWFEeuqcIj4ulwE3w" name="RightHandSide@1d91213b">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii-ExWFEeuqcIj4ulwE3w" name="Value(4)">
                <result xmi:id="_Aii-FBWFEeuqcIj4ulwE3w" name="Value(4).result" outgoing="_Aii-BRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-FRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-FhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii-FxWFEeuqcIj4ulwE3w" value="4">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-GBWFEeuqcIj4ulwE3w" name="ExpressionStatement@6d9609b0" incoming="_Aii9txWFEeuqcIj4ulwE3w" outgoing="_Aii9uRWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-GRWFEeuqcIj4ulwE3w" target="_Aii-HxWFEeuqcIj4ulwE3w" source="_Aii-KBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-GhWFEeuqcIj4ulwE3w" target="_Aii-JRWFEeuqcIj4ulwE3w" source="_Aii-IhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii-GxWFEeuqcIj4ulwE3w" name="Call(+)">
              <argument xmi:id="_Aii-HBWFEeuqcIj4ulwE3w" name="Call(+).argument(x)" incoming="_Aii9thWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-HRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-HhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii-HxWFEeuqcIj4ulwE3w" name="Call(+).argument(y)" incoming="_Aii-GRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-IBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-IRWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii-IhWFEeuqcIj4ulwE3w" name="Call(+).result(result)" outgoing="_Aii-GhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-IxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-JBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii-JRWFEeuqcIj4ulwE3w" name="Fork(i)@65c7bd2f" incoming="_Aii-GhWFEeuqcIj4ulwE3w" outgoing="_Aii9uBWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-JhWFEeuqcIj4ulwE3w" name="RightHandSide@4890273d">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii-JxWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii-KBWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii-GRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-KRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-KhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii-KxWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-LBWFEeuqcIj4ulwE3w" name="ExpressionStatement@25f8b308" incoming="_Aii9uRWFEeuqcIj4ulwE3w" outgoing="_Aii9uxWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-LRWFEeuqcIj4ulwE3w" target="_Aii-MxWFEeuqcIj4ulwE3w" source="_Aii-PBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-LhWFEeuqcIj4ulwE3w" target="_Aii-ORWFEeuqcIj4ulwE3w" source="_Aii-NhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii-LxWFEeuqcIj4ulwE3w" name="Call(-)">
              <argument xmi:id="_Aii-MBWFEeuqcIj4ulwE3w" name="Call(-).argument(x)" incoming="_Aii9uBWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-MRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-MhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii-MxWFEeuqcIj4ulwE3w" name="Call(-).argument(y)" incoming="_Aii-LRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-NBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-NRWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii-NhWFEeuqcIj4ulwE3w" name="Call(-).result(result)" outgoing="_Aii-LhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-NxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-OBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii-ORWFEeuqcIj4ulwE3w" name="Fork(i)@65ebb4c4" incoming="_Aii-LhWFEeuqcIj4ulwE3w" outgoing="_Aii9uhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-OhWFEeuqcIj4ulwE3w" name="RightHandSide@3e6327ef">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii-OxWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii-PBWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii-LRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-PRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-PhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii-PxWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-QBWFEeuqcIj4ulwE3w" name="ExpressionStatement@6b105d5e" incoming="_Aii9uxWFEeuqcIj4ulwE3w" outgoing="_Aii9vRWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-QRWFEeuqcIj4ulwE3w" target="_Aii-RxWFEeuqcIj4ulwE3w" source="_Aii-UBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-QhWFEeuqcIj4ulwE3w" target="_Aii-TRWFEeuqcIj4ulwE3w" source="_Aii-ShWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii-QxWFEeuqcIj4ulwE3w" name="Call(*)">
              <argument xmi:id="_Aii-RBWFEeuqcIj4ulwE3w" name="Call(*).argument(x)" incoming="_Aii9uhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-RRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-RhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii-RxWFEeuqcIj4ulwE3w" name="Call(*).argument(y)" incoming="_Aii-QRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-SBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-SRWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii-ShWFEeuqcIj4ulwE3w" name="Call(*).result(result)" outgoing="_Aii-QhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-SxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-TBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-times"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii-TRWFEeuqcIj4ulwE3w" name="Fork(i)@31f84de4" incoming="_Aii-QhWFEeuqcIj4ulwE3w" outgoing="_Aii9vBWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-ThWFEeuqcIj4ulwE3w" name="RightHandSide@17068631">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii-TxWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii-UBWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii-QRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-URWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-UhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii-UxWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-VBWFEeuqcIj4ulwE3w" name="ExpressionStatement@6aa91374" incoming="_Aii9vRWFEeuqcIj4ulwE3w" outgoing="_Aii9vxWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-VRWFEeuqcIj4ulwE3w" target="_Aii-WxWFEeuqcIj4ulwE3w" source="_Aii-ZBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-VhWFEeuqcIj4ulwE3w" target="_Aii-YRWFEeuqcIj4ulwE3w" source="_Aii-XhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii-VxWFEeuqcIj4ulwE3w" name="Call(Mod)">
              <argument xmi:id="_Aii-WBWFEeuqcIj4ulwE3w" name="Call(Mod).argument(x)" incoming="_Aii9vBWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-WRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-WhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii-WxWFEeuqcIj4ulwE3w" name="Call(Mod).argument(y)" incoming="_Aii-VRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-XBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-XRWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii-XhWFEeuqcIj4ulwE3w" name="Call(Mod).result(result)" outgoing="_Aii-VhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-XxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-YBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii-YRWFEeuqcIj4ulwE3w" name="Fork(i)@282509ad" incoming="_Aii-VhWFEeuqcIj4ulwE3w" outgoing="_Aii9vhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-YhWFEeuqcIj4ulwE3w" name="RightHandSide@4fcb6e9b">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii-YxWFEeuqcIj4ulwE3w" name="Value(6)">
                <result xmi:id="_Aii-ZBWFEeuqcIj4ulwE3w" name="Value(6).result" outgoing="_Aii-VRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-ZRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-ZhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii-ZxWFEeuqcIj4ulwE3w" value="6">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-aBWFEeuqcIj4ulwE3w" name="ExpressionStatement@606abfb9" incoming="_Aii9vxWFEeuqcIj4ulwE3w" outgoing="_Aii9wBWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-aRWFEeuqcIj4ulwE3w" target="_Aii-bxWFEeuqcIj4ulwE3w" source="_Aii-eBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-ahWFEeuqcIj4ulwE3w" target="_Aii-dRWFEeuqcIj4ulwE3w" source="_Aii-chWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii-axWFEeuqcIj4ulwE3w" name="Call(Div)">
              <argument xmi:id="_Aii-bBWFEeuqcIj4ulwE3w" name="Call(Div).argument(x)" incoming="_Aii9vhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-bRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-bhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii-bxWFEeuqcIj4ulwE3w" name="Call(Div).argument(y)" incoming="_Aii-aRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-cBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-cRWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii-chWFEeuqcIj4ulwE3w" name="Call(Div).result(result)" outgoing="_Aii-ahWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-cxWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-dBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii-dRWFEeuqcIj4ulwE3w" name="Fork(i)@41dccd34" incoming="_Aii-ahWFEeuqcIj4ulwE3w" outgoing="_Aii93hWFEeuqcIj4ulwE3w _Aii94xWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-dhWFEeuqcIj4ulwE3w" name="RightHandSide@40811ec5">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii-dxWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii-eBWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii-aRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-eRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-ehWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii-exWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-fBWFEeuqcIj4ulwE3w" name="ExpressionStatement@3a76bd75" incoming="_Aii9wBWFEeuqcIj4ulwE3w" outgoing="_Aii9whWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-fRWFEeuqcIj4ulwE3w" target="_Aii-fhWFEeuqcIj4ulwE3w" source="_Aii-gRWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii-fhWFEeuqcIj4ulwE3w" name="Fork(f)@6ea15bf1" incoming="_Aii-fRWFEeuqcIj4ulwE3w" outgoing="_Aii9wRWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-fxWFEeuqcIj4ulwE3w" name="RightHandSide@3e1d445e">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii-gBWFEeuqcIj4ulwE3w" name="Value(true)">
                <result xmi:id="_Aii-gRWFEeuqcIj4ulwE3w" name="Value(true).result" outgoing="_Aii-fRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-ghWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-gxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_Aii-hBWFEeuqcIj4ulwE3w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-hRWFEeuqcIj4ulwE3w" name="ExpressionStatement@6e15cfef" incoming="_Aii9whWFEeuqcIj4ulwE3w" outgoing="_Aii9xBWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-hhWFEeuqcIj4ulwE3w" target="_Aii-jBWFEeuqcIj4ulwE3w" source="_Aii-lRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-hxWFEeuqcIj4ulwE3w" target="_Aii-khWFEeuqcIj4ulwE3w" source="_Aii-jxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii-iBWFEeuqcIj4ulwE3w" name="Call(And)">
              <argument xmi:id="_Aii-iRWFEeuqcIj4ulwE3w" name="Call(And).argument(x)" incoming="_Aii9wRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-ihWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-ixWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii-jBWFEeuqcIj4ulwE3w" name="Call(And).argument(y)" incoming="_Aii-hhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-jRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-jhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii-jxWFEeuqcIj4ulwE3w" name="Call(And).result(result)" outgoing="_Aii-hxWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-kBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-kRWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-And"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii-khWFEeuqcIj4ulwE3w" name="Fork(f)@481e8843" incoming="_Aii-hxWFEeuqcIj4ulwE3w" outgoing="_Aii9wxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-kxWFEeuqcIj4ulwE3w" name="RightHandSide@436003d5">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii-lBWFEeuqcIj4ulwE3w" name="Value(true)">
                <result xmi:id="_Aii-lRWFEeuqcIj4ulwE3w" name="Value(true).result" outgoing="_Aii-hhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-lhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-lxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_Aii-mBWFEeuqcIj4ulwE3w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-mRWFEeuqcIj4ulwE3w" name="ExpressionStatement@3546c488" incoming="_Aii9xBWFEeuqcIj4ulwE3w" outgoing="_Aii9xhWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-mhWFEeuqcIj4ulwE3w" target="_Aii-oBWFEeuqcIj4ulwE3w" source="_Aii-qRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-mxWFEeuqcIj4ulwE3w" target="_Aii-phWFEeuqcIj4ulwE3w" source="_Aii-oxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii-nBWFEeuqcIj4ulwE3w" name="Call(Or)">
              <argument xmi:id="_Aii-nRWFEeuqcIj4ulwE3w" name="Call(Or).argument(x)" incoming="_Aii9wxWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-nhWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-nxWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii-oBWFEeuqcIj4ulwE3w" name="Call(Or).argument(y)" incoming="_Aii-mhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-oRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-ohWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii-oxWFEeuqcIj4ulwE3w" name="Call(Or).result(result)" outgoing="_Aii-mxWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-pBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-pRWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii-phWFEeuqcIj4ulwE3w" name="Fork(f)@14b0adf2" incoming="_Aii-mxWFEeuqcIj4ulwE3w" outgoing="_Aii9xRWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-pxWFEeuqcIj4ulwE3w" name="RightHandSide@7ad1880c">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii-qBWFEeuqcIj4ulwE3w" name="Value(true)">
                <result xmi:id="_Aii-qRWFEeuqcIj4ulwE3w" name="Value(true).result" outgoing="_Aii-mhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-qhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-qxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_Aii-rBWFEeuqcIj4ulwE3w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-rRWFEeuqcIj4ulwE3w" name="ExpressionStatement@23af44d5" incoming="_Aii9xhWFEeuqcIj4ulwE3w" outgoing="_Aii9xxWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-rhWFEeuqcIj4ulwE3w" target="_Aii-tBWFEeuqcIj4ulwE3w" source="_Aii-vRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-rxWFEeuqcIj4ulwE3w" target="_Aii-uhWFEeuqcIj4ulwE3w" source="_Aii-txWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii-sBWFEeuqcIj4ulwE3w" name="Call(Xor)">
              <argument xmi:id="_Aii-sRWFEeuqcIj4ulwE3w" name="Call(Xor).argument(x)" incoming="_Aii9xRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-shWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-sxWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii-tBWFEeuqcIj4ulwE3w" name="Call(Xor).argument(y)" incoming="_Aii-rhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-tRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-thWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii-txWFEeuqcIj4ulwE3w" name="Call(Xor).result(result)" outgoing="_Aii-rxWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-uBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-uRWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Xor"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii-uhWFEeuqcIj4ulwE3w" name="Fork(f)@291c9418" incoming="_Aii-rxWFEeuqcIj4ulwE3w" outgoing="_Aii95BWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-uxWFEeuqcIj4ulwE3w" name="RightHandSide@3d44dd1">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii-vBWFEeuqcIj4ulwE3w" name="Value(true)">
                <result xmi:id="_Aii-vRWFEeuqcIj4ulwE3w" name="Value(true).result" outgoing="_Aii-rhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-vhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-vxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_Aii-wBWFEeuqcIj4ulwE3w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-wRWFEeuqcIj4ulwE3w" name="ExpressionStatement@35699c88" incoming="_Aii9xxWFEeuqcIj4ulwE3w" outgoing="_Aii9yBWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-whWFEeuqcIj4ulwE3w" target="_Aii-wxWFEeuqcIj4ulwE3w" source="_Aii-5hWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii-wxWFEeuqcIj4ulwE3w" name="Fork(h)@665b82ed" incoming="_Aii-whWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-xBWFEeuqcIj4ulwE3w" name="RightHandSide@4a5987f">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-xRWFEeuqcIj4ulwE3w" target="_Aii-5RWFEeuqcIj4ulwE3w" source="_Aii-xxWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii-xhWFEeuqcIj4ulwE3w" name="Value(0)">
                <result xmi:id="_Aii-xxWFEeuqcIj4ulwE3w" name="Value(0).result" outgoing="_Aii-xRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-yBWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-yRWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii-yhWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Aii-yxWFEeuqcIj4ulwE3w" name="CastExpression@4a5987f" mode="parallel" outputElement="_Aii-5hWFEeuqcIj4ulwE3w" inputElement="_Aii-5RWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-zBWFEeuqcIj4ulwE3w" target="_Aii-1hWFEeuqcIj4ulwE3w" source="_Aii-3BWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-zRWFEeuqcIj4ulwE3w" target="_Aii-1BWFEeuqcIj4ulwE3w" source="_Aii-4RWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-zhWFEeuqcIj4ulwE3w" target="_Aii-5BWFEeuqcIj4ulwE3w" source="_Aii-3BWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-zxWFEeuqcIj4ulwE3w" target="_Aii-5BWFEeuqcIj4ulwE3w" source="_Aii-2RWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-0BWFEeuqcIj4ulwE3w" target="_Aii-3hWFEeuqcIj4ulwE3w" source="_Aii-5BWFEeuqcIj4ulwE3w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Aii-0RWFEeuqcIj4ulwE3w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-0hWFEeuqcIj4ulwE3w" target="_Aii-3BWFEeuqcIj4ulwE3w" source="_Aii-5RWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-0xWFEeuqcIj4ulwE3w" target="_Aii-5hWFEeuqcIj4ulwE3w" source="_Aii-1BWFEeuqcIj4ulwE3w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_Aii-1BWFEeuqcIj4ulwE3w" name="Merge(CastExpression@4a5987f.operand)" incoming="_Aii-zRWFEeuqcIj4ulwE3w" outgoing="_Aii-0xWFEeuqcIj4ulwE3w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Aii-1RWFEeuqcIj4ulwE3w" name="ReadIsClassifiedObject(Integer)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_Aii-1hWFEeuqcIj4ulwE3w" name="ReadIsClassifiedObject(Integer).object" incoming="_Aii-zBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-1xWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-2BWFEeuqcIj4ulwE3w" value="1"/>
                  </object>
                  <result xmi:id="_Aii-2RWFEeuqcIj4ulwE3w" name="ReadIsClassifiedObject(Integer).result" outgoing="_Aii-zxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-2hWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-2xWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Aii-3BWFEeuqcIj4ulwE3w" name="Fork(ReadIsClassifiedObject(Integer).object)" incoming="_Aii-0hWFEeuqcIj4ulwE3w" outgoing="_Aii-zBWFEeuqcIj4ulwE3w _Aii-zhWFEeuqcIj4ulwE3w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii-3RWFEeuqcIj4ulwE3w" name="Call(ToBitString)">
                  <argument xmi:id="_Aii-3hWFEeuqcIj4ulwE3w" name="Call(ToBitString).argument(n)" incoming="_Aii-0BWFEeuqcIj4ulwE3w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-3xWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-4BWFEeuqcIj4ulwE3w" value="1"/>
                  </argument>
                  <result xmi:id="_Aii-4RWFEeuqcIj4ulwE3w" name="Call(ToBitString).result()" outgoing="_Aii-zRWFEeuqcIj4ulwE3w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-4hWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-4xWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_Aii-5BWFEeuqcIj4ulwE3w" name="Decision(ReadIsClassifiedObject(Integer).result)" incoming="_Aii-zhWFEeuqcIj4ulwE3w _Aii-zxWFEeuqcIj4ulwE3w" outgoing="_Aii-0BWFEeuqcIj4ulwE3w" decisionInputFlow="_Aii-zxWFEeuqcIj4ulwE3w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Aii-5RWFEeuqcIj4ulwE3w" name="CastExpression@4a5987f.inputElement" incoming="_Aii-xRWFEeuqcIj4ulwE3w" outgoing="_Aii-0hWFEeuqcIj4ulwE3w" regionAsInput="_Aii-yxWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Aii-5hWFEeuqcIj4ulwE3w" name="CastExpression@4a5987f.outputElement" incoming="_Aii-0xWFEeuqcIj4ulwE3w" outgoing="_Aii-whWFEeuqcIj4ulwE3w" regionAsOutput="_Aii-yxWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-5xWFEeuqcIj4ulwE3w" name="ExpressionStatement@4f6a920" incoming="_Aii9yBWFEeuqcIj4ulwE3w" outgoing="_Aii9yhWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-6BWFEeuqcIj4ulwE3w" target="_Aii-6RWFEeuqcIj4ulwE3w" source="_Aii-9RWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii-6RWFEeuqcIj4ulwE3w" name="Fork(h)@7e478a4f" incoming="_Aii-6BWFEeuqcIj4ulwE3w" outgoing="_Aii9yRWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii-6hWFEeuqcIj4ulwE3w" name="RightHandSide@3c4b472d">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii-6xWFEeuqcIj4ulwE3w" target="_Aii-8hWFEeuqcIj4ulwE3w" source="_Aii-7RWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii-7BWFEeuqcIj4ulwE3w" name="Value(171)">
                <result xmi:id="_Aii-7RWFEeuqcIj4ulwE3w" name="Value(171).result" outgoing="_Aii-6xWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-7hWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-7xWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii-8BWFEeuqcIj4ulwE3w" value="171">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii-8RWFEeuqcIj4ulwE3w" name="Call(ToBitString)">
                <argument xmi:id="_Aii-8hWFEeuqcIj4ulwE3w" name="Call(ToBitString).argument(n)" incoming="_Aii-6xWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-8xWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-9BWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <result xmi:id="_Aii-9RWFEeuqcIj4ulwE3w" name="Call(ToBitString).result()" outgoing="_Aii-6BWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-9hWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-9xWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii--BWFEeuqcIj4ulwE3w" name="ExpressionStatement@6f6c1c44" incoming="_Aii9yhWFEeuqcIj4ulwE3w" outgoing="_Aii9zBWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii--RWFEeuqcIj4ulwE3w" target="_Aii-_xWFEeuqcIj4ulwE3w" source="_Aii_ERWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii--hWFEeuqcIj4ulwE3w" target="_Aii_BRWFEeuqcIj4ulwE3w" source="_Aii_AhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii--xWFEeuqcIj4ulwE3w" name="Call(&amp;)">
              <argument xmi:id="_Aii-_BWFEeuqcIj4ulwE3w" name="Call(&amp;).argument(b1)" incoming="_Aii9yRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii-_RWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii-_hWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii-_xWFEeuqcIj4ulwE3w" name="Call(&amp;).argument(b2)" incoming="_Aii--RWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_ABWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_ARWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii_AhWFEeuqcIj4ulwE3w" name="Call(&amp;).result()" outgoing="_Aii--hWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_AxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_BBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-amp"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_BRWFEeuqcIj4ulwE3w" name="Fork(h)@6d4e0df5" incoming="_Aii--hWFEeuqcIj4ulwE3w" outgoing="_Aii9yxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_BhWFEeuqcIj4ulwE3w" name="RightHandSide@5ee00693">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_BxWFEeuqcIj4ulwE3w" target="_Aii_DhWFEeuqcIj4ulwE3w" source="_Aii_CRWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_CBWFEeuqcIj4ulwE3w" name="Value(255)">
                <result xmi:id="_Aii_CRWFEeuqcIj4ulwE3w" name="Value(255).result" outgoing="_Aii_BxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_ChWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_CxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii_DBWFEeuqcIj4ulwE3w" value="255">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii_DRWFEeuqcIj4ulwE3w" name="Call(ToBitString)">
                <argument xmi:id="_Aii_DhWFEeuqcIj4ulwE3w" name="Call(ToBitString).argument(n)" incoming="_Aii_BxWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_DxWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_EBWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <result xmi:id="_Aii_ERWFEeuqcIj4ulwE3w" name="Call(ToBitString).result()" outgoing="_Aii--RWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_EhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_ExWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_FBWFEeuqcIj4ulwE3w" name="ExpressionStatement@7ca55d0b" incoming="_Aii9zBWFEeuqcIj4ulwE3w" outgoing="_Aii9zhWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_FRWFEeuqcIj4ulwE3w" target="_Aii_GxWFEeuqcIj4ulwE3w" source="_Aii_LRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_FhWFEeuqcIj4ulwE3w" target="_Aii_IRWFEeuqcIj4ulwE3w" source="_Aii_HhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii_FxWFEeuqcIj4ulwE3w" name="Call(|)">
              <argument xmi:id="_Aii_GBWFEeuqcIj4ulwE3w" name="Call(|).argument(b1)" incoming="_Aii9yxWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_GRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_GhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii_GxWFEeuqcIj4ulwE3w" name="Call(|).argument(b2)" incoming="_Aii_FRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_HBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_HRWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii_HhWFEeuqcIj4ulwE3w" name="Call(|).result()" outgoing="_Aii_FhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_HxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_IBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-bar"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_IRWFEeuqcIj4ulwE3w" name="Fork(h)@75d614ea" incoming="_Aii_FhWFEeuqcIj4ulwE3w" outgoing="_Aii9zRWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_IhWFEeuqcIj4ulwE3w" name="RightHandSide@4efd469e">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_IxWFEeuqcIj4ulwE3w" target="_Aii_KhWFEeuqcIj4ulwE3w" source="_Aii_JRWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_JBWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii_JRWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii_IxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_JhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_JxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii_KBWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii_KRWFEeuqcIj4ulwE3w" name="Call(ToBitString)">
                <argument xmi:id="_Aii_KhWFEeuqcIj4ulwE3w" name="Call(ToBitString).argument(n)" incoming="_Aii_IxWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_KxWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_LBWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <result xmi:id="_Aii_LRWFEeuqcIj4ulwE3w" name="Call(ToBitString).result()" outgoing="_Aii_FRWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_LhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_LxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_MBWFEeuqcIj4ulwE3w" name="ExpressionStatement@66482ba8" incoming="_Aii9zhWFEeuqcIj4ulwE3w" outgoing="_Aii90BWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_MRWFEeuqcIj4ulwE3w" target="_Aii_NxWFEeuqcIj4ulwE3w" source="_Aii_SRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_MhWFEeuqcIj4ulwE3w" target="_Aii_PRWFEeuqcIj4ulwE3w" source="_Aii_OhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii_MxWFEeuqcIj4ulwE3w" name="Call(^)">
              <argument xmi:id="_Aii_NBWFEeuqcIj4ulwE3w" name="Call(^).argument(b1)" incoming="_Aii9zRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_NRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_NhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii_NxWFEeuqcIj4ulwE3w" name="Call(^).argument(b2)" incoming="_Aii_MRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_OBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_ORWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii_OhWFEeuqcIj4ulwE3w" name="Call(^).result()" outgoing="_Aii_MhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_OxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_PBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-caret"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_PRWFEeuqcIj4ulwE3w" name="Fork(h)@4c1d42f" incoming="_Aii_MhWFEeuqcIj4ulwE3w" outgoing="_Aii9zxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_PhWFEeuqcIj4ulwE3w" name="RightHandSide@58eccf71">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_PxWFEeuqcIj4ulwE3w" target="_Aii_RhWFEeuqcIj4ulwE3w" source="_Aii_QRWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_QBWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii_QRWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii_PxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_QhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_QxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii_RBWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii_RRWFEeuqcIj4ulwE3w" name="Call(ToBitString)">
                <argument xmi:id="_Aii_RhWFEeuqcIj4ulwE3w" name="Call(ToBitString).argument(n)" incoming="_Aii_PxWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_RxWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_SBWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <result xmi:id="_Aii_SRWFEeuqcIj4ulwE3w" name="Call(ToBitString).result()" outgoing="_Aii_MRWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_ShWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_SxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_TBWFEeuqcIj4ulwE3w" name="ExpressionStatement@cf82b23" incoming="_Aii90BWFEeuqcIj4ulwE3w" outgoing="_Aii90hWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_TRWFEeuqcIj4ulwE3w" target="_Aii_UxWFEeuqcIj4ulwE3w" source="_Aii_XBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_ThWFEeuqcIj4ulwE3w" target="_Aii_WRWFEeuqcIj4ulwE3w" source="_Aii_VhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii_TxWFEeuqcIj4ulwE3w" name="Call(&lt;&lt;)">
              <argument xmi:id="_Aii_UBWFEeuqcIj4ulwE3w" name="Call(&lt;&lt;).argument(x)" incoming="_Aii9zxWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_URWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_UhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii_UxWFEeuqcIj4ulwE3w" name="Call(&lt;&lt;).argument(n)" incoming="_Aii_TRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_VBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_VRWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii_VhWFEeuqcIj4ulwE3w" name="Call(&lt;&lt;).result()" outgoing="_Aii_ThWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_VxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_WBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ltlt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_WRWFEeuqcIj4ulwE3w" name="Fork(h)@407a377a" incoming="_Aii_ThWFEeuqcIj4ulwE3w" outgoing="_Aii90RWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_WhWFEeuqcIj4ulwE3w" name="RightHandSide@3eb0c1d0">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_WxWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii_XBWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii_TRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_XRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_XhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii_XxWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_YBWFEeuqcIj4ulwE3w" name="ExpressionStatement@473685f1" incoming="_Aii90hWFEeuqcIj4ulwE3w" outgoing="_Aii91BWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_YRWFEeuqcIj4ulwE3w" target="_Aii_ZxWFEeuqcIj4ulwE3w" source="_Aii_cBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_YhWFEeuqcIj4ulwE3w" target="_Aii_bRWFEeuqcIj4ulwE3w" source="_Aii_ahWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii_YxWFEeuqcIj4ulwE3w" name="Call(>>)">
              <argument xmi:id="_Aii_ZBWFEeuqcIj4ulwE3w" name="Call(>>).argument(x)" incoming="_Aii90RWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_ZRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_ZhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii_ZxWFEeuqcIj4ulwE3w" name="Call(>>).argument(n)" incoming="_Aii_YRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_aBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_aRWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii_ahWFEeuqcIj4ulwE3w" name="Call(>>).result()" outgoing="_Aii_YhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_axWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_bBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_bRWFEeuqcIj4ulwE3w" name="Fork(h)@57c02b40" incoming="_Aii_YhWFEeuqcIj4ulwE3w" outgoing="_Aii90xWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_bhWFEeuqcIj4ulwE3w" name="RightHandSide@1b1db408">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_bxWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii_cBWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii_YRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_cRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_chWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii_cxWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_dBWFEeuqcIj4ulwE3w" name="ExpressionStatement@344197a6" incoming="_Aii91BWFEeuqcIj4ulwE3w" outgoing="_Aii91RWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_dRWFEeuqcIj4ulwE3w" target="_Aii_exWFEeuqcIj4ulwE3w" source="_Aii_hBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_dhWFEeuqcIj4ulwE3w" target="_Aii_gRWFEeuqcIj4ulwE3w" source="_Aii_fhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii_dxWFEeuqcIj4ulwE3w" name="Call(>>>)">
              <argument xmi:id="_Aii_eBWFEeuqcIj4ulwE3w" name="Call(>>>).argument(x)" incoming="_Aii90xWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_eRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_ehWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii_exWFEeuqcIj4ulwE3w" name="Call(>>>).argument(n)" incoming="_Aii_dRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_fBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_fRWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii_fhWFEeuqcIj4ulwE3w" name="Call(>>>).result()" outgoing="_Aii_dhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_fxWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_gBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_gRWFEeuqcIj4ulwE3w" name="Fork(h)@35dc6559" incoming="_Aii_dhWFEeuqcIj4ulwE3w" outgoing="_Aii95RWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_ghWFEeuqcIj4ulwE3w" name="RightHandSide@61de4c50">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_gxWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii_hBWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii_dRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_hRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_hhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii_hxWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_iBWFEeuqcIj4ulwE3w" name="ExpressionStatement@f46b275" incoming="_Aii91RWFEeuqcIj4ulwE3w" outgoing="_Aii91xWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_iRWFEeuqcIj4ulwE3w" target="_Aii_ihWFEeuqcIj4ulwE3w" source="_Aii_jRWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_ihWFEeuqcIj4ulwE3w" name="Fork(filename)@724dc44d" incoming="_Aii_iRWFEeuqcIj4ulwE3w" outgoing="_Aii91hWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_ixWFEeuqcIj4ulwE3w" name="RightHandSide@560478b8">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_jBWFEeuqcIj4ulwE3w" name="Value(&quot;xyz&quot;)">
                <result xmi:id="_Aii_jRWFEeuqcIj4ulwE3w" name="Value(&quot;xyz&quot;).result" outgoing="_Aii_iRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_jhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_jxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Aii_kBWFEeuqcIj4ulwE3w" value="xyz">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_kRWFEeuqcIj4ulwE3w" name="ExpressionStatement@5e805a8c" incoming="_Aii91xWFEeuqcIj4ulwE3w" outgoing="_Aii92BWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_khWFEeuqcIj4ulwE3w" target="_Aii_mBWFEeuqcIj4ulwE3w" source="_Aii_oRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_kxWFEeuqcIj4ulwE3w" target="_Aii_nhWFEeuqcIj4ulwE3w" source="_Aii_mxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii_lBWFEeuqcIj4ulwE3w" name="Call(Concat)">
              <argument xmi:id="_Aii_lRWFEeuqcIj4ulwE3w" name="Call(Concat).argument(x)" incoming="_Aii91hWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_lhWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_lxWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii_mBWFEeuqcIj4ulwE3w" name="Call(Concat).argument(y)" incoming="_Aii_khWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_mRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_mhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii_mxWFEeuqcIj4ulwE3w" name="Call(Concat).result(result)" outgoing="_Aii_kxWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_nBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_nRWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_nhWFEeuqcIj4ulwE3w" name="Fork(filename)@5a46fe46" incoming="_Aii_kxWFEeuqcIj4ulwE3w" outgoing="_Aii95hWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_nxWFEeuqcIj4ulwE3w" name="RightHandSide@2623e715">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_oBWFEeuqcIj4ulwE3w" name="Value(&quot;.doc&quot;)">
                <result xmi:id="_Aii_oRWFEeuqcIj4ulwE3w" name="Value(&quot;.doc&quot;).result" outgoing="_Aii_khWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_ohWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_oxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Aii_pBWFEeuqcIj4ulwE3w" value=".doc">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_pRWFEeuqcIj4ulwE3w" name="ExpressionStatement@161b829f" incoming="_Aii92BWFEeuqcIj4ulwE3w" outgoing="_Aii92RWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_phWFEeuqcIj4ulwE3w" target="_Aii_pxWFEeuqcIj4ulwE3w" source="_Aii_qhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_pxWFEeuqcIj4ulwE3w" name="Fork(s)@4065b536" incoming="_Aii_phWFEeuqcIj4ulwE3w" outgoing="_Aii95xWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_qBWFEeuqcIj4ulwE3w" name="RightHandSide@63b603ce">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_qRWFEeuqcIj4ulwE3w" name="Value(&quot;'&quot;    \&quot;)">
                <result xmi:id="_Aii_qhWFEeuqcIj4ulwE3w" name="Value(&quot;'&quot;    \&quot;).result" outgoing="_Aii_phWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_qxWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_rBWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Aii_rRWFEeuqcIj4ulwE3w" value="'&quot;&#x8;&#xC;&#xA;&#x9;\">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_rhWFEeuqcIj4ulwE3w" name="ExpressionStatement@332cdf91" incoming="_Aii92RWFEeuqcIj4ulwE3w" outgoing="_Aii92xWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_rxWFEeuqcIj4ulwE3w" target="_Aii_sBWFEeuqcIj4ulwE3w" source="_Aii_sxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_sBWFEeuqcIj4ulwE3w" name="Fork(a)@36f50436" incoming="_Aii_rxWFEeuqcIj4ulwE3w" outgoing="_Aii92hWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_sRWFEeuqcIj4ulwE3w" name="RightHandSide@48ba410c">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_shWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii_sxWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii_rxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_tBWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_tRWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii_thWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_txWFEeuqcIj4ulwE3w" name="ExpressionStatement@73e3e7e2" incoming="_Aii92xWFEeuqcIj4ulwE3w" outgoing="_Aii93BWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_uBWFEeuqcIj4ulwE3w" target="_Aii_vhWFEeuqcIj4ulwE3w" source="_Aii_xxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_uRWFEeuqcIj4ulwE3w" target="_Aii_xBWFEeuqcIj4ulwE3w" source="_Aii_wRWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii_uhWFEeuqcIj4ulwE3w" name="Call(+)">
              <argument xmi:id="_Aii_uxWFEeuqcIj4ulwE3w" name="Call(+).argument(x)" incoming="_Aii92hWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_vBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_vRWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii_vhWFEeuqcIj4ulwE3w" name="Call(+).argument(y)" incoming="_Aii_uBWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_vxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_wBWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii_wRWFEeuqcIj4ulwE3w" name="Call(+).result(result)" outgoing="_Aii_uRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_whWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_wxWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_xBWFEeuqcIj4ulwE3w" name="Fork(a)@724a513f" incoming="_Aii_uRWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_xRWFEeuqcIj4ulwE3w" name="RightHandSide@6a9acc2d">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_xhWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii_xxWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii_uBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_yBWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_yRWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii_yhWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_yxWFEeuqcIj4ulwE3w" name="ExpressionStatement@48216061" incoming="_Aii93BWFEeuqcIj4ulwE3w" outgoing="_Aii93xWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_zBWFEeuqcIj4ulwE3w" target="_Aii_zRWFEeuqcIj4ulwE3w" source="_Aii_0BWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_zRWFEeuqcIj4ulwE3w" name="Fork(test::a)@36c3515c" incoming="_Aii_zBWFEeuqcIj4ulwE3w" outgoing="_Aii93RWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_zhWFEeuqcIj4ulwE3w" name="RightHandSide@23d47f7">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_zxWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii_0BWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii_zBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_0RWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_0hWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii_0xWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_1BWFEeuqcIj4ulwE3w" name="ExpressionStatement@65afcc2a" incoming="_Aii93xWFEeuqcIj4ulwE3w" outgoing="_Aii94BWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_1RWFEeuqcIj4ulwE3w" target="_Aii_4BWFEeuqcIj4ulwE3w" source="_Aii_3RWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii_1hWFEeuqcIj4ulwE3w" name="Call(+)">
              <argument xmi:id="_Aii_1xWFEeuqcIj4ulwE3w" name="Call(+).argument(x)" incoming="_Aii93RWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_2BWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_2RWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii_2hWFEeuqcIj4ulwE3w" name="Call(+).argument(y)" incoming="_Aii93hWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_2xWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_3BWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii_3RWFEeuqcIj4ulwE3w" name="Call(+).result(result)" outgoing="_Aii_1RWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_3hWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_3xWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_4BWFEeuqcIj4ulwE3w" name="Fork(test::a)@2c7171ce" incoming="_Aii_1RWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_4RWFEeuqcIj4ulwE3w" name="RightHandSide@14cb2512"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_4hWFEeuqcIj4ulwE3w" name="ExpressionStatement@65112c5d" incoming="_Aii94BWFEeuqcIj4ulwE3w" outgoing="_Aii94hWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_4xWFEeuqcIj4ulwE3w" target="_Aii_5BWFEeuqcIj4ulwE3w" source="_Aii_5xWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_5BWFEeuqcIj4ulwE3w" name="Fork(test::a)@38dee3ec" incoming="_Aii_4xWFEeuqcIj4ulwE3w" outgoing="_Aii94RWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_5RWFEeuqcIj4ulwE3w" name="RightHandSide@3e2c3ac7">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_5hWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii_5xWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii_4xWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_6BWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_6RWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii_6hWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_6xWFEeuqcIj4ulwE3w" name="ExpressionStatement@79a8e756" incoming="_Aii94hWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_7BWFEeuqcIj4ulwE3w" target="_Aii_8hWFEeuqcIj4ulwE3w" source="_Aii_-xWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aii_7RWFEeuqcIj4ulwE3w" target="_Aii_-BWFEeuqcIj4ulwE3w" source="_Aii_9RWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aii_7hWFEeuqcIj4ulwE3w" name="Call(+)">
              <argument xmi:id="_Aii_7xWFEeuqcIj4ulwE3w" name="Call(+).argument(x)" incoming="_Aii94RWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_8BWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_8RWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <argument xmi:id="_Aii_8hWFEeuqcIj4ulwE3w" name="Call(+).argument(y)" incoming="_Aii_7BWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_8xWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_9BWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_Aii_9RWFEeuqcIj4ulwE3w" name="Call(+).result(result)" outgoing="_Aii_7RWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii_9hWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii_9xWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aii_-BWFEeuqcIj4ulwE3w" name="Fork(test::a)@20ee8e41" incoming="_Aii_7RWFEeuqcIj4ulwE3w" outgoing="_Aii96BWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aii_-RWFEeuqcIj4ulwE3w" name="RightHandSide@2fb76643">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aii_-hWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_Aii_-xWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_Aii_7BWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aii__BWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aii__RWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Aii__hWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Aii9rRWFEeuqcIj4ulwE3w" name="Output(i)" incoming="_Aii9pxWFEeuqcIj4ulwE3w" parameter="_Aii9lRWFEeuqcIj4ulwE3w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Aii9rhWFEeuqcIj4ulwE3w" name="Output(f)" incoming="_Aii9qBWFEeuqcIj4ulwE3w" parameter="_Aii9mBWFEeuqcIj4ulwE3w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Aii9rxWFEeuqcIj4ulwE3w" name="Output(h)" incoming="_Aii9qRWFEeuqcIj4ulwE3w" parameter="_Aii9mxWFEeuqcIj4ulwE3w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Aii9sBWFEeuqcIj4ulwE3w" name="Output(filename)" incoming="_Aii9qhWFEeuqcIj4ulwE3w" parameter="_Aii9nhWFEeuqcIj4ulwE3w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Aii9sRWFEeuqcIj4ulwE3w" name="Output(s)" incoming="_Aii9qxWFEeuqcIj4ulwE3w" parameter="_Aii9oRWFEeuqcIj4ulwE3w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Aii9shWFEeuqcIj4ulwE3w" name="Output(a)" incoming="_Aii9rBWFEeuqcIj4ulwE3w" parameter="_Aii9pBWFEeuqcIj4ulwE3w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Aii__xWFEeuqcIj4ulwE3w" name="destroy$method$1" visibility="private" specification="_AijAbxWFEeuqcIj4ulwE3w" node="_AijAABWFEeuqcIj4ulwE3w" group="_AijAABWFEeuqcIj4ulwE3w">
        <structuredNode xmi:id="_AijAABWFEeuqcIj4ulwE3w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_AijAARWFEeuqcIj4ulwE3w" name="Expressions_Assignment$initialization$1" visibility="private" specification="_AijAUBWFEeuqcIj4ulwE3w" node="_AijAAhWFEeuqcIj4ulwE3w" group="_AijAAhWFEeuqcIj4ulwE3w">
        <structuredNode xmi:id="_AijAAhWFEeuqcIj4ulwE3w" name="Body(Expressions_Assignment$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijAAxWFEeuqcIj4ulwE3w" target="_AijAEhWFEeuqcIj4ulwE3w" source="_AijADxWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijABBWFEeuqcIj4ulwE3w" target="_AijAFhWFEeuqcIj4ulwE3w" source="_AijAEhWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijABRWFEeuqcIj4ulwE3w" target="_AijAIxWFEeuqcIj4ulwE3w" source="_AijAEhWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijABhWFEeuqcIj4ulwE3w" target="_AijAMhWFEeuqcIj4ulwE3w" source="_AijAEhWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijABxWFEeuqcIj4ulwE3w" target="_AijAORWFEeuqcIj4ulwE3w" source="_AijANRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijACBWFEeuqcIj4ulwE3w" target="_AijARRWFEeuqcIj4ulwE3w" source="_AijAPBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijACRWFEeuqcIj4ulwE3w" target="_AijASxWFEeuqcIj4ulwE3w" source="_AijAQBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AijAChWFEeuqcIj4ulwE3w" target="_AijATxWFEeuqcIj4ulwE3w" source="_AijAThWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijACxWFEeuqcIj4ulwE3w" target="_AijATxWFEeuqcIj4ulwE3w" source="_AijASBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AijADBWFEeuqcIj4ulwE3w" target="_AijAExWFEeuqcIj4ulwE3w" source="_AijATxWFEeuqcIj4ulwE3w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_AijADRWFEeuqcIj4ulwE3w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_AijADhWFEeuqcIj4ulwE3w" name="ReadSelf">
            <result xmi:id="_AijADxWFEeuqcIj4ulwE3w" name="ReadSelf.result" outgoing="_AijAAxWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAEBWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAERWFEeuqcIj4ulwE3w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_AijAEhWFEeuqcIj4ulwE3w" name="Fork(ReadSelf.result)" incoming="_AijAAxWFEeuqcIj4ulwE3w" outgoing="_AijABBWFEeuqcIj4ulwE3w _AijABRWFEeuqcIj4ulwE3w _AijABhWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijAExWFEeuqcIj4ulwE3w" name="Initialization" incoming="_AijADBWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ControlFlow" xmi:id="_AijAFBWFEeuqcIj4ulwE3w" target="_AijAGRWFEeuqcIj4ulwE3w" source="_AijAFRWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_AijAFRWFEeuqcIj4ulwE3w" name="Call(Test$initialization$1)" outgoing="_AijAFBWFEeuqcIj4ulwE3w" operation="_AijlABWFEeuqcIj4ulwE3w">
              <target xmi:id="_AijAFhWFEeuqcIj4ulwE3w" name="Call(Test$initialization$1).target" incoming="_AijABBWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAFxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAGBWFEeuqcIj4ulwE3w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijAGRWFEeuqcIj4ulwE3w" name="Set(initializationFlag)" incoming="_AijAFBWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijAGhWFEeuqcIj4ulwE3w" target="_AijAMBWFEeuqcIj4ulwE3w" source="_AijAHBWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijAGxWFEeuqcIj4ulwE3w" name="Value(true)">
                <result xmi:id="_AijAHBWFEeuqcIj4ulwE3w" name="Value(true).result" outgoing="_AijAGhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAHRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAHhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_AijAHxWFEeuqcIj4ulwE3w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_AijAIBWFEeuqcIj4ulwE3w" name="Iterate(Write(Expressions_Assignment$initializationFlag$1))" inputElement="_AijAMBWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijAIRWFEeuqcIj4ulwE3w" target="_AijALRWFEeuqcIj4ulwE3w" source="_AijAMBWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijAIhWFEeuqcIj4ulwE3w" target="_AijAJxWFEeuqcIj4ulwE3w" source="_AijAIxWFEeuqcIj4ulwE3w"/>
                <structuredNodeInput xmi:id="_AijAIxWFEeuqcIj4ulwE3w" name="Iterate(Write(Expressions_Assignment$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_AijABRWFEeuqcIj4ulwE3w" outgoing="_AijAIhWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAJBWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAJRWFEeuqcIj4ulwE3w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AijAJhWFEeuqcIj4ulwE3w" name="Write(Expressions_Assignment$initializationFlag$1)" structuralFeature="_AiiV6BWFEeuqcIj4ulwE3w">
                  <object xmi:id="_AijAJxWFEeuqcIj4ulwE3w" name="Write(Expressions_Assignment$initializationFlag$1).object" incoming="_AijAIhWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAKBWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAKRWFEeuqcIj4ulwE3w" value="1"/>
                  </object>
                  <result xmi:id="_AijAKhWFEeuqcIj4ulwE3w" name="Write(Expressions_Assignment$initializationFlag$1).result" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAKxWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijALBWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:id="_AijALRWFEeuqcIj4ulwE3w" name="Write(Expressions_Assignment$initializationFlag$1).value" incoming="_AijAIRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijALhWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijALxWFEeuqcIj4ulwE3w" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_AijAMBWFEeuqcIj4ulwE3w" name="Iterate(Write(Expressions_Assignment$initializationFlag$1)).inputElement" incoming="_AijAGhWFEeuqcIj4ulwE3w" outgoing="_AijAIRWFEeuqcIj4ulwE3w" regionAsInput="_AijAIBWFEeuqcIj4ulwE3w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AijAMRWFEeuqcIj4ulwE3w" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_AiiV6BWFEeuqcIj4ulwE3w">
            <object xmi:id="_AijAMhWFEeuqcIj4ulwE3w" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_AijABhWFEeuqcIj4ulwE3w" type="_AiiV4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAMxWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijANBWFEeuqcIj4ulwE3w" value="1"/>
            </object>
            <result xmi:id="_AijANRWFEeuqcIj4ulwE3w" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_AijABxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijANhWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijANxWFEeuqcIj4ulwE3w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijAOBWFEeuqcIj4ulwE3w" name="Call(ListSize)">
            <argument xmi:id="_AijAORWFEeuqcIj4ulwE3w" name="Call(ListSize).argument(list)" incoming="_AijABxWFEeuqcIj4ulwE3w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAOhWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAOxWFEeuqcIj4ulwE3w" value="*"/>
            </argument>
            <result xmi:id="_AijAPBWFEeuqcIj4ulwE3w" name="Call(ListSize).result(result)" outgoing="_AijACBWFEeuqcIj4ulwE3w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAPRWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAPhWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijAPxWFEeuqcIj4ulwE3w" name="Value(0)">
            <result xmi:id="_AijAQBWFEeuqcIj4ulwE3w" name="Value(0).result" outgoing="_AijACRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAQRWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAQhWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_AijAQxWFEeuqcIj4ulwE3w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_AijARBWFEeuqcIj4ulwE3w" name="Test(Size==0)">
            <first xmi:id="_AijARRWFEeuqcIj4ulwE3w" name="Test(Size==0).first" incoming="_AijACBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijARhWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijARxWFEeuqcIj4ulwE3w" value="1"/>
            </first>
            <result xmi:id="_AijASBWFEeuqcIj4ulwE3w" name="Test(Size==0).result" outgoing="_AijACxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijASRWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAShWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <second xmi:id="_AijASxWFEeuqcIj4ulwE3w" name="Test(Size==0).second" incoming="_AijACRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijATBWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijATRWFEeuqcIj4ulwE3w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_AijAThWFEeuqcIj4ulwE3w" name="InitialNode" outgoing="_AijAChWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_AijATxWFEeuqcIj4ulwE3w" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" incoming="_AijAChWFEeuqcIj4ulwE3w _AijACxWFEeuqcIj4ulwE3w" outgoing="_AijADBWFEeuqcIj4ulwE3w" decisionInputFlow="_AijACxWFEeuqcIj4ulwE3w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_AijAUBWFEeuqcIj4ulwE3w" name="Expressions_Assignment$initialization$1" visibility="protected" method="_AijAARWFEeuqcIj4ulwE3w"/>
      <ownedOperation xmi:id="_AijAURWFEeuqcIj4ulwE3w" name="run" visibility="public" method="_AiiV6xWFEeuqcIj4ulwE3w">
        <ownedParameter xmi:id="_AijAUhWFEeuqcIj4ulwE3w" name="tester" visibility="package" type="_AijlDhWFEeuqcIj4ulwE3w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAUxWFEeuqcIj4ulwE3w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAVBWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_AijAVRWFEeuqcIj4ulwE3w" name="" visibility="package" type="_AiiV4RWFEeuqcIj4ulwE3w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAVhWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAVxWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_AijAWBWFEeuqcIj4ulwE3w" name="Expressions_Assignment" visibility="public" method="_Aii9ZBWFEeuqcIj4ulwE3w">
        <ownedParameter xmi:id="_AijAWRWFEeuqcIj4ulwE3w" name="" visibility="package" type="_AiiV4RWFEeuqcIj4ulwE3w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAWhWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAWxWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_AijAXBWFEeuqcIj4ulwE3w" name="test" visibility="public" method="_Aii9lBWFEeuqcIj4ulwE3w">
        <ownedParameter xmi:id="_AijAXRWFEeuqcIj4ulwE3w" name="i" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAXhWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAXxWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_AijAYBWFEeuqcIj4ulwE3w" name="f" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAYRWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAYhWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_AijAYxWFEeuqcIj4ulwE3w" name="h" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAZBWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAZRWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_AijAZhWFEeuqcIj4ulwE3w" name="filename" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAZxWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAaBWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_AijAaRWFEeuqcIj4ulwE3w" name="s" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAahWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAaxWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_AijAbBWFEeuqcIj4ulwE3w" name="a" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijAbRWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijAbhWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_AijAbxWFEeuqcIj4ulwE3w" name="destroy" visibility="public" method="_Aii__xWFEeuqcIj4ulwE3w" redefinedOperation="_AijlARWFEeuqcIj4ulwE3w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_AijAcBWFEeuqcIj4ulwE3w" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_AijAcRWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_AijAchWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_AijAcxWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_AijkABWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_AijkARWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_AijkAhWFEeuqcIj4ulwE3w" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkAxWFEeuqcIj4ulwE3w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkBBWFEeuqcIj4ulwE3w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_AijkBRWFEeuqcIj4ulwE3w" name="tester" visibility="private" type="_AijlDhWFEeuqcIj4ulwE3w">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkBhWFEeuqcIj4ulwE3w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkBxWFEeuqcIj4ulwE3w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_AijkCBWFEeuqcIj4ulwE3w" name="destroy$method$1" visibility="private" specification="_AijlARWFEeuqcIj4ulwE3w" node="_AijkCRWFEeuqcIj4ulwE3w" group="_AijkCRWFEeuqcIj4ulwE3w">
        <structuredNode xmi:id="_AijkCRWFEeuqcIj4ulwE3w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_AijkChWFEeuqcIj4ulwE3w" name="done$method$1" visibility="private" specification="_AijlAhWFEeuqcIj4ulwE3w" node="_AijkCxWFEeuqcIj4ulwE3w" group="_AijkCxWFEeuqcIj4ulwE3w">
        <structuredNode xmi:id="_AijkCxWFEeuqcIj4ulwE3w" name="Body(done$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijkDBWFEeuqcIj4ulwE3w" name="ExpressionStatement@602c91ab">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkDRWFEeuqcIj4ulwE3w" target="_AijkERWFEeuqcIj4ulwE3w" source="_AijkGRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AijkDhWFEeuqcIj4ulwE3w" target="_AijkEBWFEeuqcIj4ulwE3w" source="_AijkFxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkDxWFEeuqcIj4ulwE3w" target="_AijkFBWFEeuqcIj4ulwE3w" source="_AijkHhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_AijkEBWFEeuqcIj4ulwE3w" name="Call(done)" incoming="_AijkDhWFEeuqcIj4ulwE3w" operation="_AijlChWFEeuqcIj4ulwE3w">
              <argument xmi:id="_AijkERWFEeuqcIj4ulwE3w" name="Call(done).argument(message)" incoming="_AijkDRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkEhWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkExWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <target xmi:id="_AijkFBWFEeuqcIj4ulwE3w" name="Call(done).target" incoming="_AijkDxWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkFRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkFhWFEeuqcIj4ulwE3w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijkFxWFEeuqcIj4ulwE3w" name="Tuple@1c2dae93" outgoing="_AijkDhWFEeuqcIj4ulwE3w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijkGBWFEeuqcIj4ulwE3w" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_AijkGRWFEeuqcIj4ulwE3w" name="Value(&quot;Done.&quot;).result" outgoing="_AijkDRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkGhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkGxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_AijkHBWFEeuqcIj4ulwE3w" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_AijkHRWFEeuqcIj4ulwE3w" name="ReadSelf">
              <result xmi:id="_AijkHhWFEeuqcIj4ulwE3w" name="ReadSelf.result" outgoing="_AijkDxWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkHxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkIBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_AijkIRWFEeuqcIj4ulwE3w" name="Test$method$1" visibility="private" specification="_AijlAxWFEeuqcIj4ulwE3w" node="_AijkKxWFEeuqcIj4ulwE3w _AijkLBWFEeuqcIj4ulwE3w _AijkLRWFEeuqcIj4ulwE3w _AijkLhWFEeuqcIj4ulwE3w" group="_AijkLhWFEeuqcIj4ulwE3w">
        <ownedParameter xmi:id="_AijkIhWFEeuqcIj4ulwE3w" name="tester" type="_AijlDhWFEeuqcIj4ulwE3w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkIxWFEeuqcIj4ulwE3w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkJBWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_AijkJRWFEeuqcIj4ulwE3w" name="" type="_AijAcBWFEeuqcIj4ulwE3w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkJhWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkJxWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkKBWFEeuqcIj4ulwE3w" target="_AijkLBWFEeuqcIj4ulwE3w" source="_AijkKxWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkKRWFEeuqcIj4ulwE3w" target="_AijkTBWFEeuqcIj4ulwE3w" source="_AijkLBWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkKhWFEeuqcIj4ulwE3w" target="_AijkLRWFEeuqcIj4ulwE3w" source="_AijkaBWFEeuqcIj4ulwE3w"/>
        <structuredNode xmi:id="_AijkLhWFEeuqcIj4ulwE3w" name="Body(Test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkLxWFEeuqcIj4ulwE3w" target="_AijkaBWFEeuqcIj4ulwE3w" source="_AijkZRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkMBWFEeuqcIj4ulwE3w" target="_AijkahWFEeuqcIj4ulwE3w" source="_AijkaBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AijkMRWFEeuqcIj4ulwE3w" target="_AijkOhWFEeuqcIj4ulwE3w" source="_AijkaRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkMhWFEeuqcIj4ulwE3w" target="_AijkbhWFEeuqcIj4ulwE3w" source="_AijkaBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkMxWFEeuqcIj4ulwE3w" target="_AijkdRWFEeuqcIj4ulwE3w" source="_AijkcRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkNBWFEeuqcIj4ulwE3w" target="_AijkgRWFEeuqcIj4ulwE3w" source="_AijkeBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkNRWFEeuqcIj4ulwE3w" target="_AijkhxWFEeuqcIj4ulwE3w" source="_AijkfBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AijkNhWFEeuqcIj4ulwE3w" target="_AijkixWFEeuqcIj4ulwE3w" source="_AijkihWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkNxWFEeuqcIj4ulwE3w" target="_AijkixWFEeuqcIj4ulwE3w" source="_AijkhBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AijkOBWFEeuqcIj4ulwE3w" target="_AijkaRWFEeuqcIj4ulwE3w" source="_AijkixWFEeuqcIj4ulwE3w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_AijkORWFEeuqcIj4ulwE3w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijkOhWFEeuqcIj4ulwE3w" name="Body" incoming="_AijkMRWFEeuqcIj4ulwE3w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijkOxWFEeuqcIj4ulwE3w" name="ExpressionStatement@86bf26">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkPBWFEeuqcIj4ulwE3w" target="_AijkRhWFEeuqcIj4ulwE3w" source="_AijkQhWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkPRWFEeuqcIj4ulwE3w" target="_AijkTxWFEeuqcIj4ulwE3w" source="_AijkTBWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkPhWFEeuqcIj4ulwE3w" target="_AijkVRWFEeuqcIj4ulwE3w" source="_AijkSRWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AijkPxWFEeuqcIj4ulwE3w" target="_AijkQBWFEeuqcIj4ulwE3w" source="_AijkYxWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijkQBWFEeuqcIj4ulwE3w" name="Expression(LeftHandSide@16658abc)" incoming="_AijkPxWFEeuqcIj4ulwE3w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_AijkQRWFEeuqcIj4ulwE3w" name="ReadSelf">
                  <result xmi:id="_AijkQhWFEeuqcIj4ulwE3w" name="ReadSelf.result" outgoing="_AijkPBWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkQxWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkRBWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_AijkRRWFEeuqcIj4ulwE3w" name="Clear(tester)" structuralFeature="_AijkBRWFEeuqcIj4ulwE3w">
                <object xmi:id="_AijkRhWFEeuqcIj4ulwE3w" name="Clear(tester).object" incoming="_AijkPBWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkRxWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkSBWFEeuqcIj4ulwE3w" value="1"/>
                </object>
                <result xmi:id="_AijkSRWFEeuqcIj4ulwE3w" name="Clear(tester).result" outgoing="_AijkPhWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkShWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkSxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_AijkTBWFEeuqcIj4ulwE3w" name="Fork(LeftHandSide@16658abc)" incoming="_AijkKRWFEeuqcIj4ulwE3w" outgoing="_AijkPRWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijkTRWFEeuqcIj4ulwE3w" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkThWFEeuqcIj4ulwE3w" target="_AijkYhWFEeuqcIj4ulwE3w" source="_AijkTxWFEeuqcIj4ulwE3w"/>
                <structuredNodeInput xmi:id="_AijkTxWFEeuqcIj4ulwE3w" name="WriteAll(Test::tester).input(Test::tester)" incoming="_AijkPRWFEeuqcIj4ulwE3w" outgoing="_AijkThWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkUBWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkURWFEeuqcIj4ulwE3w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_AijkUhWFEeuqcIj4ulwE3w" name="Iterate(Write(tester))" inputElement="_AijkYhWFEeuqcIj4ulwE3w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkUxWFEeuqcIj4ulwE3w" target="_AijkXxWFEeuqcIj4ulwE3w" source="_AijkYhWFEeuqcIj4ulwE3w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkVBWFEeuqcIj4ulwE3w" target="_AijkWRWFEeuqcIj4ulwE3w" source="_AijkVRWFEeuqcIj4ulwE3w"/>
                  <structuredNodeInput xmi:id="_AijkVRWFEeuqcIj4ulwE3w" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_AijkPhWFEeuqcIj4ulwE3w" outgoing="_AijkVBWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkVhWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkVxWFEeuqcIj4ulwE3w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AijkWBWFEeuqcIj4ulwE3w" name="Write(tester)" structuralFeature="_AijkBRWFEeuqcIj4ulwE3w">
                    <object xmi:id="_AijkWRWFEeuqcIj4ulwE3w" name="Write(tester).object" incoming="_AijkVBWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkWhWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkWxWFEeuqcIj4ulwE3w" value="1"/>
                    </object>
                    <result xmi:id="_AijkXBWFEeuqcIj4ulwE3w" name="Write(tester).result" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkXRWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkXhWFEeuqcIj4ulwE3w" value="1"/>
                    </result>
                    <value xmi:id="_AijkXxWFEeuqcIj4ulwE3w" name="Write(tester).value" incoming="_AijkUxWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkYBWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkYRWFEeuqcIj4ulwE3w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_AijkYhWFEeuqcIj4ulwE3w" name="Iterate(Write(tester)).inputElement" incoming="_AijkThWFEeuqcIj4ulwE3w" outgoing="_AijkUxWFEeuqcIj4ulwE3w" regionAsInput="_AijkUhWFEeuqcIj4ulwE3w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijkYxWFEeuqcIj4ulwE3w" name="RightHandSide@31055508" outgoing="_AijkPxWFEeuqcIj4ulwE3w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_AijkZBWFEeuqcIj4ulwE3w" name="ReadSelf">
            <result xmi:id="_AijkZRWFEeuqcIj4ulwE3w" name="ReadSelf.result" outgoing="_AijkLxWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkZhWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkZxWFEeuqcIj4ulwE3w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_AijkaBWFEeuqcIj4ulwE3w" name="Fork(ReadSelf.result)" incoming="_AijkLxWFEeuqcIj4ulwE3w" outgoing="_AijkKhWFEeuqcIj4ulwE3w _AijkMBWFEeuqcIj4ulwE3w _AijkMhWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_AijkaRWFEeuqcIj4ulwE3w" name="Call(Test$initialization$1)" incoming="_AijkOBWFEeuqcIj4ulwE3w" outgoing="_AijkMRWFEeuqcIj4ulwE3w" operation="_AijlABWFEeuqcIj4ulwE3w">
            <target xmi:id="_AijkahWFEeuqcIj4ulwE3w" name="Call(Test$initialization$1).target" incoming="_AijkMBWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkaxWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkbBWFEeuqcIj4ulwE3w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AijkbRWFEeuqcIj4ulwE3w" name="Read(Test$initializationFlag$1)" structuralFeature="_AijkAhWFEeuqcIj4ulwE3w">
            <object xmi:id="_AijkbhWFEeuqcIj4ulwE3w" name="Read(Test$initializationFlag$1).object" incoming="_AijkMhWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkbxWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkcBWFEeuqcIj4ulwE3w" value="1"/>
            </object>
            <result xmi:id="_AijkcRWFEeuqcIj4ulwE3w" name="Read(Test$initializationFlag$1).result" outgoing="_AijkMxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkchWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkcxWFEeuqcIj4ulwE3w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijkdBWFEeuqcIj4ulwE3w" name="Call(ListSize)">
            <argument xmi:id="_AijkdRWFEeuqcIj4ulwE3w" name="Call(ListSize).argument(list)" incoming="_AijkMxWFEeuqcIj4ulwE3w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkdhWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkdxWFEeuqcIj4ulwE3w" value="*"/>
            </argument>
            <result xmi:id="_AijkeBWFEeuqcIj4ulwE3w" name="Call(ListSize).result(result)" outgoing="_AijkNBWFEeuqcIj4ulwE3w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkeRWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkehWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijkexWFEeuqcIj4ulwE3w" name="Value(0)">
            <result xmi:id="_AijkfBWFEeuqcIj4ulwE3w" name="Value(0).result" outgoing="_AijkNRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkfRWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkfhWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_AijkfxWFEeuqcIj4ulwE3w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_AijkgBWFEeuqcIj4ulwE3w" name="Test(Size==0)">
            <first xmi:id="_AijkgRWFEeuqcIj4ulwE3w" name="Test(Size==0).first" incoming="_AijkNBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkghWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkgxWFEeuqcIj4ulwE3w" value="1"/>
            </first>
            <result xmi:id="_AijkhBWFEeuqcIj4ulwE3w" name="Test(Size==0).result" outgoing="_AijkNxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkhRWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkhhWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <second xmi:id="_AijkhxWFEeuqcIj4ulwE3w" name="Test(Size==0).second" incoming="_AijkNRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkiBWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkiRWFEeuqcIj4ulwE3w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_AijkihWFEeuqcIj4ulwE3w" name="InitialNode" outgoing="_AijkNhWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_AijkixWFEeuqcIj4ulwE3w" name="Decision(Test(Test$initializationFlag$1))" incoming="_AijkNhWFEeuqcIj4ulwE3w _AijkNxWFEeuqcIj4ulwE3w" outgoing="_AijkOBWFEeuqcIj4ulwE3w" decisionInputFlow="_AijkNxWFEeuqcIj4ulwE3w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_AijkKxWFEeuqcIj4ulwE3w" name="Input(tester)" outgoing="_AijkKBWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" parameter="_AijkIhWFEeuqcIj4ulwE3w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_AijkLBWFEeuqcIj4ulwE3w" name="Fork(tester)" incoming="_AijkKBWFEeuqcIj4ulwE3w" outgoing="_AijkKRWFEeuqcIj4ulwE3w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_AijkLRWFEeuqcIj4ulwE3w" name="Return" incoming="_AijkKhWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" parameter="_AijkJRWFEeuqcIj4ulwE3w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_AijkjBWFEeuqcIj4ulwE3w" name="done$method$2" visibility="private" specification="_AijlChWFEeuqcIj4ulwE3w" node="_AijkkhWFEeuqcIj4ulwE3w _AijkkxWFEeuqcIj4ulwE3w _AijklBWFEeuqcIj4ulwE3w" group="_AijklBWFEeuqcIj4ulwE3w">
        <ownedParameter xmi:id="_AijkjRWFEeuqcIj4ulwE3w" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkjhWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkjxWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkkBWFEeuqcIj4ulwE3w" target="_AijkkxWFEeuqcIj4ulwE3w" source="_AijkkhWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkkRWFEeuqcIj4ulwE3w" target="_AijkmBWFEeuqcIj4ulwE3w" source="_AijkkxWFEeuqcIj4ulwE3w"/>
        <structuredNode xmi:id="_AijklBWFEeuqcIj4ulwE3w" name="Body(done$method$2)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_AijklRWFEeuqcIj4ulwE3w" target="_AijknhWFEeuqcIj4ulwE3w" source="_AijklhWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijklhWFEeuqcIj4ulwE3w" name="ExpressionStatement@5486b815" outgoing="_AijklRWFEeuqcIj4ulwE3w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijklxWFEeuqcIj4ulwE3w" name="Call(WriteLine)">
              <argument xmi:id="_AijkmBWFEeuqcIj4ulwE3w" name="Call(WriteLine).argument(value)" incoming="_AijkkRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkmRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkmhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_AijkmxWFEeuqcIj4ulwE3w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijknBWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijknRWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijknhWFEeuqcIj4ulwE3w" name="ExpressionStatement@69595c25" incoming="_AijklRWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijknxWFEeuqcIj4ulwE3w" target="_AijkpxWFEeuqcIj4ulwE3w" source="_AijksxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AijkoBWFEeuqcIj4ulwE3w" target="_AijkoRWFEeuqcIj4ulwE3w" source="_AijkqBWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_AijkoRWFEeuqcIj4ulwE3w" name="Collect(SendSignal(Continue))" incoming="_AijkoBWFEeuqcIj4ulwE3w" mode="parallel" inputElement="_AijkpxWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkohWFEeuqcIj4ulwE3w" target="_AijkpBWFEeuqcIj4ulwE3w" source="_AijkpxWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_AijkoxWFEeuqcIj4ulwE3w" name="SendSignal(Continue)" signal="_AijlnhWFEeuqcIj4ulwE3w">
                <target xmi:id="_AijkpBWFEeuqcIj4ulwE3w" name="SendSignal(Continue).target" incoming="_AijkohWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkpRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkphWFEeuqcIj4ulwE3w" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_AijkpxWFEeuqcIj4ulwE3w" name="Collect(SendSignal(Continue)).inputElement" incoming="_AijknxWFEeuqcIj4ulwE3w" outgoing="_AijkohWFEeuqcIj4ulwE3w" regionAsInput="_AijkoRWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijkqBWFEeuqcIj4ulwE3w" name="Feature(Read(tester).result)" outgoing="_AijkoBWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkqRWFEeuqcIj4ulwE3w" target="_AijkthWFEeuqcIj4ulwE3w" source="_AijkrBWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkqhWFEeuqcIj4ulwE3w" target="_AijksBWFEeuqcIj4ulwE3w" source="_AijkthWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_AijkqxWFEeuqcIj4ulwE3w" name="ReadSelf">
                <result xmi:id="_AijkrBWFEeuqcIj4ulwE3w" name="ReadSelf.result" outgoing="_AijkqRWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkrRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkrhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AijkrxWFEeuqcIj4ulwE3w" name="Read(tester)" structuralFeature="_AijkBRWFEeuqcIj4ulwE3w">
                <object xmi:id="_AijksBWFEeuqcIj4ulwE3w" name="Read(tester).object" incoming="_AijkqhWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijksRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkshWFEeuqcIj4ulwE3w" value="1"/>
                </object>
                <result xmi:id="_AijksxWFEeuqcIj4ulwE3w" name="Read(tester).result" outgoing="_AijknxWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijktBWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijktRWFEeuqcIj4ulwE3w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_AijkthWFEeuqcIj4ulwE3w" name="Fork(ReadSelf.result)" incoming="_AijkqRWFEeuqcIj4ulwE3w" outgoing="_AijkqhWFEeuqcIj4ulwE3w"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_AijkkhWFEeuqcIj4ulwE3w" name="Input(message)" outgoing="_AijkkBWFEeuqcIj4ulwE3w" parameter="_AijkjRWFEeuqcIj4ulwE3w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_AijkkxWFEeuqcIj4ulwE3w" name="Fork(message)" incoming="_AijkkBWFEeuqcIj4ulwE3w" outgoing="_AijkkRWFEeuqcIj4ulwE3w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_AijktxWFEeuqcIj4ulwE3w" name="Test$initialization$1" visibility="private" specification="_AijlABWFEeuqcIj4ulwE3w" node="_AijkuBWFEeuqcIj4ulwE3w" group="_AijkuBWFEeuqcIj4ulwE3w">
        <structuredNode xmi:id="_AijkuBWFEeuqcIj4ulwE3w" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkuRWFEeuqcIj4ulwE3w" target="_AijkxxWFEeuqcIj4ulwE3w" source="_AijkxBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkuhWFEeuqcIj4ulwE3w" target="_Aijk0xWFEeuqcIj4ulwE3w" source="_AijkxxWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkuxWFEeuqcIj4ulwE3w" target="_Aijk4hWFEeuqcIj4ulwE3w" source="_AijkxxWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkvBWFEeuqcIj4ulwE3w" target="_Aijk6RWFEeuqcIj4ulwE3w" source="_Aijk5RWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkvRWFEeuqcIj4ulwE3w" target="_Aijk9RWFEeuqcIj4ulwE3w" source="_Aijk7BWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkvhWFEeuqcIj4ulwE3w" target="_Aijk-xWFEeuqcIj4ulwE3w" source="_Aijk8BWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AijkvxWFEeuqcIj4ulwE3w" target="_Aijk_xWFEeuqcIj4ulwE3w" source="_Aijk_hWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkwBWFEeuqcIj4ulwE3w" target="_Aijk_xWFEeuqcIj4ulwE3w" source="_Aijk-BWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AijkwRWFEeuqcIj4ulwE3w" target="_AijkyBWFEeuqcIj4ulwE3w" source="_Aijk_xWFEeuqcIj4ulwE3w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_AijkwhWFEeuqcIj4ulwE3w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_AijkwxWFEeuqcIj4ulwE3w" name="ReadSelf">
            <result xmi:id="_AijkxBWFEeuqcIj4ulwE3w" name="ReadSelf.result" outgoing="_AijkuRWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkxRWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkxhWFEeuqcIj4ulwE3w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_AijkxxWFEeuqcIj4ulwE3w" name="Fork(ReadSelf.result)" incoming="_AijkuRWFEeuqcIj4ulwE3w" outgoing="_AijkuhWFEeuqcIj4ulwE3w _AijkuxWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijkyBWFEeuqcIj4ulwE3w" name="Initialization" incoming="_AijkwRWFEeuqcIj4ulwE3w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijkyRWFEeuqcIj4ulwE3w" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijkyhWFEeuqcIj4ulwE3w" target="_Aijk4BWFEeuqcIj4ulwE3w" source="_AijkzBWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijkyxWFEeuqcIj4ulwE3w" name="Value(true)">
                <result xmi:id="_AijkzBWFEeuqcIj4ulwE3w" name="Value(true).result" outgoing="_AijkyhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijkzRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijkzhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_AijkzxWFEeuqcIj4ulwE3w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Aijk0BWFEeuqcIj4ulwE3w" name="Iterate(Write(Test$initializationFlag$1))" inputElement="_Aijk4BWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijk0RWFEeuqcIj4ulwE3w" target="_Aijk3RWFEeuqcIj4ulwE3w" source="_Aijk4BWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijk0hWFEeuqcIj4ulwE3w" target="_Aijk1xWFEeuqcIj4ulwE3w" source="_Aijk0xWFEeuqcIj4ulwE3w"/>
                <structuredNodeInput xmi:id="_Aijk0xWFEeuqcIj4ulwE3w" name="Iterate(Write(Test$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_AijkuhWFEeuqcIj4ulwE3w" outgoing="_Aijk0hWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijk1BWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijk1RWFEeuqcIj4ulwE3w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_Aijk1hWFEeuqcIj4ulwE3w" name="Write(Test$initializationFlag$1)" structuralFeature="_AijkAhWFEeuqcIj4ulwE3w">
                  <object xmi:id="_Aijk1xWFEeuqcIj4ulwE3w" name="Write(Test$initializationFlag$1).object" incoming="_Aijk0hWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijk2BWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijk2RWFEeuqcIj4ulwE3w" value="1"/>
                  </object>
                  <result xmi:id="_Aijk2hWFEeuqcIj4ulwE3w" name="Write(Test$initializationFlag$1).result" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijk2xWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijk3BWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:id="_Aijk3RWFEeuqcIj4ulwE3w" name="Write(Test$initializationFlag$1).value" incoming="_Aijk0RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijk3hWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijk3xWFEeuqcIj4ulwE3w" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Aijk4BWFEeuqcIj4ulwE3w" name="Iterate(Write(Test$initializationFlag$1)).inputElement" incoming="_AijkyhWFEeuqcIj4ulwE3w" outgoing="_Aijk0RWFEeuqcIj4ulwE3w" regionAsInput="_Aijk0BWFEeuqcIj4ulwE3w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Aijk4RWFEeuqcIj4ulwE3w" name="Read(Test$initializationFlag$1)" structuralFeature="_AijkAhWFEeuqcIj4ulwE3w">
            <object xmi:id="_Aijk4hWFEeuqcIj4ulwE3w" name="Read(Test$initializationFlag$1).object" incoming="_AijkuxWFEeuqcIj4ulwE3w" type="_AijAcBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijk4xWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijk5BWFEeuqcIj4ulwE3w" value="1"/>
            </object>
            <result xmi:id="_Aijk5RWFEeuqcIj4ulwE3w" name="Read(Test$initializationFlag$1).result" outgoing="_AijkvBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijk5hWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijk5xWFEeuqcIj4ulwE3w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aijk6BWFEeuqcIj4ulwE3w" name="Call(ListSize)">
            <argument xmi:id="_Aijk6RWFEeuqcIj4ulwE3w" name="Call(ListSize).argument(list)" incoming="_AijkvBWFEeuqcIj4ulwE3w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijk6hWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijk6xWFEeuqcIj4ulwE3w" value="*"/>
            </argument>
            <result xmi:id="_Aijk7BWFEeuqcIj4ulwE3w" name="Call(ListSize).result(result)" outgoing="_AijkvRWFEeuqcIj4ulwE3w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijk7RWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijk7hWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aijk7xWFEeuqcIj4ulwE3w" name="Value(0)">
            <result xmi:id="_Aijk8BWFEeuqcIj4ulwE3w" name="Value(0).result" outgoing="_AijkvhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijk8RWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijk8hWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_Aijk8xWFEeuqcIj4ulwE3w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Aijk9BWFEeuqcIj4ulwE3w" name="Test(Size==0)">
            <first xmi:id="_Aijk9RWFEeuqcIj4ulwE3w" name="Test(Size==0).first" incoming="_AijkvRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijk9hWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijk9xWFEeuqcIj4ulwE3w" value="1"/>
            </first>
            <result xmi:id="_Aijk-BWFEeuqcIj4ulwE3w" name="Test(Size==0).result" outgoing="_AijkwBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijk-RWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijk-hWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <second xmi:id="_Aijk-xWFEeuqcIj4ulwE3w" name="Test(Size==0).second" incoming="_AijkvhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijk_BWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijk_RWFEeuqcIj4ulwE3w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_Aijk_hWFEeuqcIj4ulwE3w" name="InitialNode" outgoing="_AijkvxWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_Aijk_xWFEeuqcIj4ulwE3w" name="Decision(Test(Test$initializationFlag$1))" incoming="_AijkvxWFEeuqcIj4ulwE3w _AijkwBWFEeuqcIj4ulwE3w" outgoing="_AijkwRWFEeuqcIj4ulwE3w" decisionInputFlow="_AijkwBWFEeuqcIj4ulwE3w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_AijlABWFEeuqcIj4ulwE3w" name="Test$initialization$1" visibility="protected" method="_AijktxWFEeuqcIj4ulwE3w"/>
      <ownedOperation xmi:id="_AijlARWFEeuqcIj4ulwE3w" name="destroy" visibility="public" method="_AijkCBWFEeuqcIj4ulwE3w"/>
      <ownedOperation xmi:id="_AijlAhWFEeuqcIj4ulwE3w" name="done" visibility="public" method="_AijkChWFEeuqcIj4ulwE3w"/>
      <ownedOperation xmi:id="_AijlAxWFEeuqcIj4ulwE3w" name="Test" visibility="protected" method="_AijkIRWFEeuqcIj4ulwE3w">
        <ownedParameter xmi:id="_AijlBBWFEeuqcIj4ulwE3w" name="tester" visibility="package" type="_AijlDhWFEeuqcIj4ulwE3w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlBRWFEeuqcIj4ulwE3w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlBhWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_AijlBxWFEeuqcIj4ulwE3w" name="" visibility="package" type="_AijAcBWFEeuqcIj4ulwE3w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlCBWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlCRWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_AijlChWFEeuqcIj4ulwE3w" name="done" visibility="public" method="_AijkjBWFEeuqcIj4ulwE3w">
        <ownedParameter xmi:id="_AijlCxWFEeuqcIj4ulwE3w" name="message" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlDBWFEeuqcIj4ulwE3w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlDRWFEeuqcIj4ulwE3w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_AijlDhWFEeuqcIj4ulwE3w" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_AijlDxWFEeuqcIj4ulwE3w" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlEBWFEeuqcIj4ulwE3w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlERWFEeuqcIj4ulwE3w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AijlEhWFEeuqcIj4ulwE3w" name="Tester$method$1" visibility="private" specification="_AijlmRWFEeuqcIj4ulwE3w" node="_AijlFxWFEeuqcIj4ulwE3w _AijlGBWFEeuqcIj4ulwE3w" group="_AijlGBWFEeuqcIj4ulwE3w">
          <ownedParameter xmi:id="_AijlExWFEeuqcIj4ulwE3w" name="" type="_AijlDhWFEeuqcIj4ulwE3w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlFBWFEeuqcIj4ulwE3w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlFRWFEeuqcIj4ulwE3w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlFhWFEeuqcIj4ulwE3w" target="_AijlFxWFEeuqcIj4ulwE3w" source="_AijlKRWFEeuqcIj4ulwE3w"/>
          <structuredNode xmi:id="_AijlGBWFEeuqcIj4ulwE3w" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlGRWFEeuqcIj4ulwE3w" target="_AijlKRWFEeuqcIj4ulwE3w" source="_AijlJhWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlGhWFEeuqcIj4ulwE3w" target="_AijlKxWFEeuqcIj4ulwE3w" source="_AijlKRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AijlGxWFEeuqcIj4ulwE3w" target="_AijlJBWFEeuqcIj4ulwE3w" source="_AijlKhWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlHBWFEeuqcIj4ulwE3w" target="_AijlLxWFEeuqcIj4ulwE3w" source="_AijlKRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlHRWFEeuqcIj4ulwE3w" target="_AijlNhWFEeuqcIj4ulwE3w" source="_AijlMhWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlHhWFEeuqcIj4ulwE3w" target="_AijlQhWFEeuqcIj4ulwE3w" source="_AijlORWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlHxWFEeuqcIj4ulwE3w" target="_AijlSBWFEeuqcIj4ulwE3w" source="_AijlPRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AijlIBWFEeuqcIj4ulwE3w" target="_AijlTBWFEeuqcIj4ulwE3w" source="_AijlSxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlIRWFEeuqcIj4ulwE3w" target="_AijlTBWFEeuqcIj4ulwE3w" source="_AijlRRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AijlIhWFEeuqcIj4ulwE3w" target="_AijlKhWFEeuqcIj4ulwE3w" source="_AijlTBWFEeuqcIj4ulwE3w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_AijlIxWFEeuqcIj4ulwE3w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijlJBWFEeuqcIj4ulwE3w" name="Body" incoming="_AijlGxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_AijlJRWFEeuqcIj4ulwE3w" name="ReadSelf">
              <result xmi:id="_AijlJhWFEeuqcIj4ulwE3w" name="ReadSelf.result" outgoing="_AijlGRWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlJxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlKBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AijlKRWFEeuqcIj4ulwE3w" name="Fork(ReadSelf.result)" incoming="_AijlGRWFEeuqcIj4ulwE3w" outgoing="_AijlFhWFEeuqcIj4ulwE3w _AijlGhWFEeuqcIj4ulwE3w _AijlHBWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_AijlKhWFEeuqcIj4ulwE3w" name="Call(Tester$initialization$1)" incoming="_AijlIhWFEeuqcIj4ulwE3w" outgoing="_AijlGxWFEeuqcIj4ulwE3w" operation="_AijlmBWFEeuqcIj4ulwE3w">
              <target xmi:id="_AijlKxWFEeuqcIj4ulwE3w" name="Call(Tester$initialization$1).target" incoming="_AijlGhWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlLBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlLRWFEeuqcIj4ulwE3w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AijlLhWFEeuqcIj4ulwE3w" name="Read(Tester$initializationFlag$1)" structuralFeature="_AijlDxWFEeuqcIj4ulwE3w">
              <object xmi:id="_AijlLxWFEeuqcIj4ulwE3w" name="Read(Tester$initializationFlag$1).object" incoming="_AijlHBWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlMBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlMRWFEeuqcIj4ulwE3w" value="1"/>
              </object>
              <result xmi:id="_AijlMhWFEeuqcIj4ulwE3w" name="Read(Tester$initializationFlag$1).result" outgoing="_AijlHRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlMxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlNBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijlNRWFEeuqcIj4ulwE3w" name="Call(ListSize)">
              <argument xmi:id="_AijlNhWFEeuqcIj4ulwE3w" name="Call(ListSize).argument(list)" incoming="_AijlHRWFEeuqcIj4ulwE3w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlNxWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlOBWFEeuqcIj4ulwE3w" value="*"/>
              </argument>
              <result xmi:id="_AijlORWFEeuqcIj4ulwE3w" name="Call(ListSize).result(result)" outgoing="_AijlHhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlOhWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlOxWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijlPBWFEeuqcIj4ulwE3w" name="Value(0)">
              <result xmi:id="_AijlPRWFEeuqcIj4ulwE3w" name="Value(0).result" outgoing="_AijlHxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlPhWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlPxWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_AijlQBWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_AijlQRWFEeuqcIj4ulwE3w" name="Test(Size==0)">
              <first xmi:id="_AijlQhWFEeuqcIj4ulwE3w" name="Test(Size==0).first" incoming="_AijlHhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlQxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlRBWFEeuqcIj4ulwE3w" value="1"/>
              </first>
              <result xmi:id="_AijlRRWFEeuqcIj4ulwE3w" name="Test(Size==0).result" outgoing="_AijlIRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlRhWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlRxWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <second xmi:id="_AijlSBWFEeuqcIj4ulwE3w" name="Test(Size==0).second" incoming="_AijlHxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlSRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlShWFEeuqcIj4ulwE3w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_AijlSxWFEeuqcIj4ulwE3w" name="InitialNode" outgoing="_AijlIBWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_AijlTBWFEeuqcIj4ulwE3w" name="Decision(Test(Tester$initializationFlag$1))" incoming="_AijlIBWFEeuqcIj4ulwE3w _AijlIRWFEeuqcIj4ulwE3w" outgoing="_AijlIhWFEeuqcIj4ulwE3w" decisionInputFlow="_AijlIRWFEeuqcIj4ulwE3w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_AijlFxWFEeuqcIj4ulwE3w" name="Return" incoming="_AijlFhWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" parameter="_AijlExWFEeuqcIj4ulwE3w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AijlTRWFEeuqcIj4ulwE3w" name="destroy$method$1" visibility="private" specification="_AijlnRWFEeuqcIj4ulwE3w" node="_AijlThWFEeuqcIj4ulwE3w" group="_AijlThWFEeuqcIj4ulwE3w">
          <structuredNode xmi:id="_AijlThWFEeuqcIj4ulwE3w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_AijlTxWFEeuqcIj4ulwE3w" name="Tester$initialization$1" visibility="private" specification="_AijlmBWFEeuqcIj4ulwE3w" node="_AijlUBWFEeuqcIj4ulwE3w" group="_AijlUBWFEeuqcIj4ulwE3w">
          <structuredNode xmi:id="_AijlUBWFEeuqcIj4ulwE3w" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlURWFEeuqcIj4ulwE3w" target="_AijlXxWFEeuqcIj4ulwE3w" source="_AijlXBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlUhWFEeuqcIj4ulwE3w" target="_AijlaxWFEeuqcIj4ulwE3w" source="_AijlXxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlUxWFEeuqcIj4ulwE3w" target="_AijlehWFEeuqcIj4ulwE3w" source="_AijlXxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlVBWFEeuqcIj4ulwE3w" target="_AijlgRWFEeuqcIj4ulwE3w" source="_AijlfRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlVRWFEeuqcIj4ulwE3w" target="_AijljRWFEeuqcIj4ulwE3w" source="_AijlhBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlVhWFEeuqcIj4ulwE3w" target="_AijlkxWFEeuqcIj4ulwE3w" source="_AijliBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AijlVxWFEeuqcIj4ulwE3w" target="_AijllxWFEeuqcIj4ulwE3w" source="_AijllhWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlWBWFEeuqcIj4ulwE3w" target="_AijllxWFEeuqcIj4ulwE3w" source="_AijlkBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AijlWRWFEeuqcIj4ulwE3w" target="_AijlYBWFEeuqcIj4ulwE3w" source="_AijllxWFEeuqcIj4ulwE3w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_AijlWhWFEeuqcIj4ulwE3w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_AijlWxWFEeuqcIj4ulwE3w" name="ReadSelf">
              <result xmi:id="_AijlXBWFEeuqcIj4ulwE3w" name="ReadSelf.result" outgoing="_AijlURWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlXRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlXhWFEeuqcIj4ulwE3w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AijlXxWFEeuqcIj4ulwE3w" name="Fork(ReadSelf.result)" incoming="_AijlURWFEeuqcIj4ulwE3w" outgoing="_AijlUhWFEeuqcIj4ulwE3w _AijlUxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijlYBWFEeuqcIj4ulwE3w" name="Initialization" incoming="_AijlWRWFEeuqcIj4ulwE3w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijlYRWFEeuqcIj4ulwE3w" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlYhWFEeuqcIj4ulwE3w" target="_AijleBWFEeuqcIj4ulwE3w" source="_AijlZBWFEeuqcIj4ulwE3w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijlYxWFEeuqcIj4ulwE3w" name="Value(true)">
                  <result xmi:id="_AijlZBWFEeuqcIj4ulwE3w" name="Value(true).result" outgoing="_AijlYhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlZRWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlZhWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_AijlZxWFEeuqcIj4ulwE3w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_AijlaBWFEeuqcIj4ulwE3w" name="Iterate(Write(Tester$initializationFlag$1))" inputElement="_AijleBWFEeuqcIj4ulwE3w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlaRWFEeuqcIj4ulwE3w" target="_AijldRWFEeuqcIj4ulwE3w" source="_AijleBWFEeuqcIj4ulwE3w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlahWFEeuqcIj4ulwE3w" target="_AijlbxWFEeuqcIj4ulwE3w" source="_AijlaxWFEeuqcIj4ulwE3w"/>
                  <structuredNodeInput xmi:id="_AijlaxWFEeuqcIj4ulwE3w" name="Iterate(Write(Tester$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_AijlUhWFEeuqcIj4ulwE3w" outgoing="_AijlahWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlbBWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlbRWFEeuqcIj4ulwE3w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_AijlbhWFEeuqcIj4ulwE3w" name="Write(Tester$initializationFlag$1)" structuralFeature="_AijlDxWFEeuqcIj4ulwE3w">
                    <object xmi:id="_AijlbxWFEeuqcIj4ulwE3w" name="Write(Tester$initializationFlag$1).object" incoming="_AijlahWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlcBWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlcRWFEeuqcIj4ulwE3w" value="1"/>
                    </object>
                    <result xmi:id="_AijlchWFEeuqcIj4ulwE3w" name="Write(Tester$initializationFlag$1).result" type="_AijlDhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlcxWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijldBWFEeuqcIj4ulwE3w" value="1"/>
                    </result>
                    <value xmi:id="_AijldRWFEeuqcIj4ulwE3w" name="Write(Tester$initializationFlag$1).value" incoming="_AijlaRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijldhWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijldxWFEeuqcIj4ulwE3w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_AijleBWFEeuqcIj4ulwE3w" name="Iterate(Write(Tester$initializationFlag$1)).inputElement" incoming="_AijlYhWFEeuqcIj4ulwE3w" outgoing="_AijlaRWFEeuqcIj4ulwE3w" regionAsInput="_AijlaBWFEeuqcIj4ulwE3w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_AijleRWFEeuqcIj4ulwE3w" name="Read(Tester$initializationFlag$1)" structuralFeature="_AijlDxWFEeuqcIj4ulwE3w">
              <object xmi:id="_AijlehWFEeuqcIj4ulwE3w" name="Read(Tester$initializationFlag$1).object" incoming="_AijlUxWFEeuqcIj4ulwE3w" type="_AijlDhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlexWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlfBWFEeuqcIj4ulwE3w" value="1"/>
              </object>
              <result xmi:id="_AijlfRWFEeuqcIj4ulwE3w" name="Read(Tester$initializationFlag$1).result" outgoing="_AijlVBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlfhWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlfxWFEeuqcIj4ulwE3w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijlgBWFEeuqcIj4ulwE3w" name="Call(ListSize)">
              <argument xmi:id="_AijlgRWFEeuqcIj4ulwE3w" name="Call(ListSize).argument(list)" incoming="_AijlVBWFEeuqcIj4ulwE3w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlghWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlgxWFEeuqcIj4ulwE3w" value="*"/>
              </argument>
              <result xmi:id="_AijlhBWFEeuqcIj4ulwE3w" name="Call(ListSize).result(result)" outgoing="_AijlVRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlhRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlhhWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijlhxWFEeuqcIj4ulwE3w" name="Value(0)">
              <result xmi:id="_AijliBWFEeuqcIj4ulwE3w" name="Value(0).result" outgoing="_AijlVhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijliRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlihWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_AijlixWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_AijljBWFEeuqcIj4ulwE3w" name="Test(Size==0)">
              <first xmi:id="_AijljRWFEeuqcIj4ulwE3w" name="Test(Size==0).first" incoming="_AijlVRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijljhWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijljxWFEeuqcIj4ulwE3w" value="1"/>
              </first>
              <result xmi:id="_AijlkBWFEeuqcIj4ulwE3w" name="Test(Size==0).result" outgoing="_AijlWBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlkRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlkhWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <second xmi:id="_AijlkxWFEeuqcIj4ulwE3w" name="Test(Size==0).second" incoming="_AijlVhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijllBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijllRWFEeuqcIj4ulwE3w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_AijllhWFEeuqcIj4ulwE3w" name="InitialNode" outgoing="_AijlVxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_AijllxWFEeuqcIj4ulwE3w" name="Decision(Test(Tester$initializationFlag$1))" incoming="_AijlVxWFEeuqcIj4ulwE3w _AijlWBWFEeuqcIj4ulwE3w" outgoing="_AijlWRWFEeuqcIj4ulwE3w" decisionInputFlow="_AijlWBWFEeuqcIj4ulwE3w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_AijlmBWFEeuqcIj4ulwE3w" name="Tester$initialization$1" visibility="protected" method="_AijlTxWFEeuqcIj4ulwE3w"/>
        <ownedOperation xmi:id="_AijlmRWFEeuqcIj4ulwE3w" name="Tester" visibility="public" method="_AijlEhWFEeuqcIj4ulwE3w">
          <ownedParameter xmi:id="_AijlmhWFEeuqcIj4ulwE3w" name="" visibility="package" type="_AijlDhWFEeuqcIj4ulwE3w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlmxWFEeuqcIj4ulwE3w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlnBWFEeuqcIj4ulwE3w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_AijlnRWFEeuqcIj4ulwE3w" name="destroy" visibility="public" method="_AijlTRWFEeuqcIj4ulwE3w"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_AijlnhWFEeuqcIj4ulwE3w" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_AijlnxWFEeuqcIj4ulwE3w" name="Continue" signal="_AijlnhWFEeuqcIj4ulwE3w"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_AijloBWFEeuqcIj4ulwE3w" name="AssertEqual" visibility="public" node="_AijlwBWFEeuqcIj4ulwE3w _AijlwRWFEeuqcIj4ulwE3w _AijlwhWFEeuqcIj4ulwE3w _AijlwxWFEeuqcIj4ulwE3w _AijlxBWFEeuqcIj4ulwE3w _AijlxRWFEeuqcIj4ulwE3w _AijlxhWFEeuqcIj4ulwE3w" group="_AijlxhWFEeuqcIj4ulwE3w">
      <packageImport xmi:id="_AijloRWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_AijlohWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_AijloxWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_AijlpBWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_AijlpRWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_AijlphWFEeuqcIj4ulwE3w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlpxWFEeuqcIj4ulwE3w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlqBWFEeuqcIj4ulwE3w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_AijlqRWFEeuqcIj4ulwE3w" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlqhWFEeuqcIj4ulwE3w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlqxWFEeuqcIj4ulwE3w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_AijlrBWFEeuqcIj4ulwE3w" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijlrRWFEeuqcIj4ulwE3w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijlrhWFEeuqcIj4ulwE3w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlrxWFEeuqcIj4ulwE3w" target="_AijlwRWFEeuqcIj4ulwE3w" source="_AijlwBWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlsBWFEeuqcIj4ulwE3w" target="_AijlwxWFEeuqcIj4ulwE3w" source="_AijlwhWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlsRWFEeuqcIj4ulwE3w" target="_AijlxRWFEeuqcIj4ulwE3w" source="_AijlxBWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlshWFEeuqcIj4ulwE3w" target="_Aijl_RWFEeuqcIj4ulwE3w" source="_AijlwxWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlsxWFEeuqcIj4ulwE3w" target="_AijmBRWFEeuqcIj4ulwE3w" source="_AijlxRWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijltBWFEeuqcIj4ulwE3w" target="_AijmPxWFEeuqcIj4ulwE3w" source="_AijlwRWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijltRWFEeuqcIj4ulwE3w" target="_AijmfhWFEeuqcIj4ulwE3w" source="_AijlxRWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlthWFEeuqcIj4ulwE3w" target="_Aijm0hWFEeuqcIj4ulwE3w" source="_AijlwRWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijltxWFEeuqcIj4ulwE3w" target="_Aijm4hWFEeuqcIj4ulwE3w" source="_AijlxRWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijluBWFEeuqcIj4ulwE3w" target="_Aijm6hWFEeuqcIj4ulwE3w" source="_AijlwxWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijluRWFEeuqcIj4ulwE3w" target="_AijnCRWFEeuqcIj4ulwE3w" source="_AijlxRWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijluhWFEeuqcIj4ulwE3w" target="_AijnLBWFEeuqcIj4ulwE3w" source="_AijlwRWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijluxWFEeuqcIj4ulwE3w" target="_AijnPBWFEeuqcIj4ulwE3w" source="_AijlxRWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlvBWFEeuqcIj4ulwE3w" target="_AijnRBWFEeuqcIj4ulwE3w" source="_AijlwxWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlvRWFEeuqcIj4ulwE3w" target="_AikLJxWFEeuqcIj4ulwE3w" source="_AijlwRWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlvhWFEeuqcIj4ulwE3w" target="_AikLNBWFEeuqcIj4ulwE3w" source="_AijlxRWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlvxWFEeuqcIj4ulwE3w" target="_AikLPBWFEeuqcIj4ulwE3w" source="_AijlwxWFEeuqcIj4ulwE3w"/>
      <structuredNode xmi:id="_AijlxhWFEeuqcIj4ulwE3w" name="Body(AssertEqual)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlxxWFEeuqcIj4ulwE3w" target="_AikLUBWFEeuqcIj4ulwE3w" source="_AikLRBWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlyBWFEeuqcIj4ulwE3w" target="_AikLURWFEeuqcIj4ulwE3w" source="_AikLRxWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlyRWFEeuqcIj4ulwE3w" target="_AikLUhWFEeuqcIj4ulwE3w" source="_AikLShWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlyhWFEeuqcIj4ulwE3w" target="_AikLUxWFEeuqcIj4ulwE3w" source="_AikLTRWFEeuqcIj4ulwE3w"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_AijlyxWFEeuqcIj4ulwE3w" name="IfStatement@3387e020">
          <edge xmi:type="uml:ControlFlow" xmi:id="_AijlzBWFEeuqcIj4ulwE3w" target="_AijmaBWFEeuqcIj4ulwE3w" source="_AijmKBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlzRWFEeuqcIj4ulwE3w" target="_AijnWBWFEeuqcIj4ulwE3w" source="_AijnTBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlzhWFEeuqcIj4ulwE3w" target="_AijnWRWFEeuqcIj4ulwE3w" source="_AijnTxWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AijlzxWFEeuqcIj4ulwE3w" target="_AijnWhWFEeuqcIj4ulwE3w" source="_AijnUhWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl0BWFEeuqcIj4ulwE3w" target="_AijnWxWFEeuqcIj4ulwE3w" source="_AijnVRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl0RWFEeuqcIj4ulwE3w" target="_AijmihWFEeuqcIj4ulwE3w" source="_AijmahWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl0hWFEeuqcIj4ulwE3w" target="_AijmpxWFEeuqcIj4ulwE3w" source="_AijmahWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl0xWFEeuqcIj4ulwE3w" target="_Aijm2hWFEeuqcIj4ulwE3w" source="_AijmahWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl1BWFEeuqcIj4ulwE3w" target="_AijnNBWFEeuqcIj4ulwE3w" source="_AijmahWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aijl1RWFEeuqcIj4ulwE3w" target="_AijmgBWFEeuqcIj4ulwE3w" source="_AijmaBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Aijl1hWFEeuqcIj4ulwE3w" target="_AijnXBWFEeuqcIj4ulwE3w" source="_AijmgBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl1xWFEeuqcIj4ulwE3w" target="_AijnbhWFEeuqcIj4ulwE3w" source="_AijnWBWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl2BWFEeuqcIj4ulwE3w" target="_AijndhWFEeuqcIj4ulwE3w" source="_AijnWRWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl2RWFEeuqcIj4ulwE3w" target="_AikLEhWFEeuqcIj4ulwE3w" source="_AijnWhWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl2hWFEeuqcIj4ulwE3w" target="_AikLGhWFEeuqcIj4ulwE3w" source="_AijnWxWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aijl2xWFEeuqcIj4ulwE3w" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl3BWFEeuqcIj4ulwE3w" target="_Aijl9BWFEeuqcIj4ulwE3w" source="_Aijl_RWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl3RWFEeuqcIj4ulwE3w" target="_Aijl_xWFEeuqcIj4ulwE3w" source="_Aijl_RWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl3hWFEeuqcIj4ulwE3w" target="_Aijl-hWFEeuqcIj4ulwE3w" source="_AijmBRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl3xWFEeuqcIj4ulwE3w" target="_AijmBxWFEeuqcIj4ulwE3w" source="_AijmBRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl4BWFEeuqcIj4ulwE3w" target="_AijmDhWFEeuqcIj4ulwE3w" source="_AijmAhWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl4RWFEeuqcIj4ulwE3w" target="_AijmDxWFEeuqcIj4ulwE3w" source="_AijmChWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl4hWFEeuqcIj4ulwE3w" target="_AijmERWFEeuqcIj4ulwE3w" source="_AijmDhWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl4xWFEeuqcIj4ulwE3w" target="_AijmGBWFEeuqcIj4ulwE3w" source="_AijmDxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl5BWFEeuqcIj4ulwE3w" target="_AijmHhWFEeuqcIj4ulwE3w" source="_AijmDxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Aijl5RWFEeuqcIj4ulwE3w" target="_Aijl8xWFEeuqcIj4ulwE3w" source="_AijmHhWFEeuqcIj4ulwE3w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Aijl5hWFEeuqcIj4ulwE3w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Aijl5xWFEeuqcIj4ulwE3w" target="_AijmEBWFEeuqcIj4ulwE3w" source="_AijmHhWFEeuqcIj4ulwE3w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Aijl6BWFEeuqcIj4ulwE3w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Aijl6RWFEeuqcIj4ulwE3w" target="_AijmHxWFEeuqcIj4ulwE3w" source="_AijmDRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl6hWFEeuqcIj4ulwE3w" target="_AijmHxWFEeuqcIj4ulwE3w" source="_AijmDhWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Aijl6xWFEeuqcIj4ulwE3w" target="_AijmHhWFEeuqcIj4ulwE3w" source="_AijmHxWFEeuqcIj4ulwE3w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Aijl7BWFEeuqcIj4ulwE3w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Aijl7RWFEeuqcIj4ulwE3w" target="_AijmFxWFEeuqcIj4ulwE3w" source="_AijmHxWFEeuqcIj4ulwE3w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_Aijl7hWFEeuqcIj4ulwE3w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl7xWFEeuqcIj4ulwE3w" target="_AijmIBWFEeuqcIj4ulwE3w" source="_Aijl9xWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl8BWFEeuqcIj4ulwE3w" target="_AijmIBWFEeuqcIj4ulwE3w" source="_AijmFBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl8RWFEeuqcIj4ulwE3w" target="_AijmIBWFEeuqcIj4ulwE3w" source="_AijmGxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijl8hWFEeuqcIj4ulwE3w" target="_AijmIhWFEeuqcIj4ulwE3w" source="_AijmIBWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_Aijl8xWFEeuqcIj4ulwE3w" name="Test(==)" incoming="_Aijl5RWFEeuqcIj4ulwE3w">
              <first xmi:id="_Aijl9BWFEeuqcIj4ulwE3w" name="Test(==).first" incoming="_Aijl3BWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijl9RWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijl9hWFEeuqcIj4ulwE3w" value="1"/>
              </first>
              <result xmi:id="_Aijl9xWFEeuqcIj4ulwE3w" name="Test(==).result" outgoing="_Aijl7xWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijl-BWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijl-RWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <second xmi:id="_Aijl-hWFEeuqcIj4ulwE3w" name="Test(==).second" incoming="_Aijl3hWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijl-xWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijl_BWFEeuqcIj4ulwE3w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Aijl_RWFEeuqcIj4ulwE3w" name="Fork(Fork(value1))" incoming="_AijlshWFEeuqcIj4ulwE3w" outgoing="_Aijl3BWFEeuqcIj4ulwE3w _Aijl3RWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aijl_hWFEeuqcIj4ulwE3w" name="Call(NotEmpty)">
              <argument xmi:id="_Aijl_xWFEeuqcIj4ulwE3w" name="Call(NotEmpty).argument(seq)" incoming="_Aijl3RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmABWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmARWFEeuqcIj4ulwE3w" value="*"/>
              </argument>
              <result xmi:id="_AijmAhWFEeuqcIj4ulwE3w" name="Call(NotEmpty).result()" outgoing="_Aijl4BWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmAxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmBBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AijmBRWFEeuqcIj4ulwE3w" name="Fork(Fork(value2))" incoming="_AijlsxWFEeuqcIj4ulwE3w" outgoing="_Aijl3hWFEeuqcIj4ulwE3w _Aijl3xWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijmBhWFEeuqcIj4ulwE3w" name="Call(NotEmpty)">
              <argument xmi:id="_AijmBxWFEeuqcIj4ulwE3w" name="Call(NotEmpty).argument(seq)" incoming="_Aijl3xWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmCBWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmCRWFEeuqcIj4ulwE3w" value="*"/>
              </argument>
              <result xmi:id="_AijmChWFEeuqcIj4ulwE3w" name="Call(NotEmpty).result()" outgoing="_Aijl4RWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmCxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmDBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_AijmDRWFEeuqcIj4ulwE3w" name="Initial(Test(==))" outgoing="_Aijl6RWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_AijmDhWFEeuqcIj4ulwE3w" name="Fork(Call(NotEmpty).result())" incoming="_Aijl4BWFEeuqcIj4ulwE3w" outgoing="_Aijl4hWFEeuqcIj4ulwE3w _Aijl6hWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_AijmDxWFEeuqcIj4ulwE3w" name="Fork(Call(NotEmpty).result())" incoming="_Aijl4RWFEeuqcIj4ulwE3w" outgoing="_Aijl4xWFEeuqcIj4ulwE3w _Aijl5BWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijmEBWFEeuqcIj4ulwE3w" name="Call(Not)" incoming="_Aijl5xWFEeuqcIj4ulwE3w">
              <argument xmi:id="_AijmERWFEeuqcIj4ulwE3w" name="Call(Not).argument(x)" incoming="_Aijl4hWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmEhWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmExWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_AijmFBWFEeuqcIj4ulwE3w" name="Call(Not).result(result)" outgoing="_Aijl8BWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmFRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmFhWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijmFxWFEeuqcIj4ulwE3w" name="Call(Not)" incoming="_Aijl7RWFEeuqcIj4ulwE3w">
              <argument xmi:id="_AijmGBWFEeuqcIj4ulwE3w" name="Call(Not).argument(x)" incoming="_Aijl4xWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmGRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmGhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_AijmGxWFEeuqcIj4ulwE3w" name="Call(Not).result(result)" outgoing="_Aijl8RWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmHBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmHRWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_AijmHhWFEeuqcIj4ulwE3w" name="Decision(Call(NotEmpty).result())" incoming="_Aijl5BWFEeuqcIj4ulwE3w _Aijl6xWFEeuqcIj4ulwE3w" outgoing="_Aijl5RWFEeuqcIj4ulwE3w _Aijl5xWFEeuqcIj4ulwE3w" decisionInputFlow="_Aijl5BWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_AijmHxWFEeuqcIj4ulwE3w" name="Decision(Call(NotEmpty).result())" incoming="_Aijl6RWFEeuqcIj4ulwE3w _Aijl6hWFEeuqcIj4ulwE3w" outgoing="_Aijl6xWFEeuqcIj4ulwE3w _Aijl7RWFEeuqcIj4ulwE3w" decisionInputFlow="_Aijl6hWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_AijmIBWFEeuqcIj4ulwE3w" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_Aijl7xWFEeuqcIj4ulwE3w _Aijl8BWFEeuqcIj4ulwE3w _Aijl8RWFEeuqcIj4ulwE3w" outgoing="_Aijl8hWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijmIRWFEeuqcIj4ulwE3w" name="Call(Not)">
              <argument xmi:id="_AijmIhWFEeuqcIj4ulwE3w" name="Call(Not).argument(x)" incoming="_Aijl8hWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmIxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmJBWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_AijmJRWFEeuqcIj4ulwE3w" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmJhWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmJxWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmKBWFEeuqcIj4ulwE3w" name="ExpressionStatement@fef8528" outgoing="_AijlzBWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmKRWFEeuqcIj4ulwE3w" target="_AijmLBWFEeuqcIj4ulwE3w" source="_AijmWxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AijmKhWFEeuqcIj4ulwE3w" target="_AijmKxWFEeuqcIj4ulwE3w" source="_AijmLxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijmKxWFEeuqcIj4ulwE3w" name="Call(Write)" incoming="_AijmKhWFEeuqcIj4ulwE3w" behavior="_AikLuRWFEeuqcIj4ulwE3w">
              <argument xmi:id="_AijmLBWFEeuqcIj4ulwE3w" name="Call(Write).argument(value)" incoming="_AijmKRWFEeuqcIj4ulwE3w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmLRWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmLhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmLxWFEeuqcIj4ulwE3w" name="Tuple@4b64dec2" outgoing="_AijmKhWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmMBWFEeuqcIj4ulwE3w" target="_AijmSxWFEeuqcIj4ulwE3w" source="_AijmORWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmMRWFEeuqcIj4ulwE3w" target="_AijmThWFEeuqcIj4ulwE3w" source="_AijmQhWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AijmMhWFEeuqcIj4ulwE3w" target="_AijmRRWFEeuqcIj4ulwE3w" source="_AijmOBWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AijmMxWFEeuqcIj4ulwE3w" target="_AijmRRWFEeuqcIj4ulwE3w" source="_AijmPRWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmNBWFEeuqcIj4ulwE3w" target="_AijmXxWFEeuqcIj4ulwE3w" source="_AijmRxWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmNRWFEeuqcIj4ulwE3w" target="_AijmYhWFEeuqcIj4ulwE3w" source="_AijmVRWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AijmNhWFEeuqcIj4ulwE3w" target="_AijmWRWFEeuqcIj4ulwE3w" source="_AijmRRWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AijmNxWFEeuqcIj4ulwE3w" target="_AijmWRWFEeuqcIj4ulwE3w" source="_AijmVBWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijmOBWFEeuqcIj4ulwE3w" name="Value(&quot;FAILED: &quot;)" outgoing="_AijmMhWFEeuqcIj4ulwE3w">
                <result xmi:id="_AijmORWFEeuqcIj4ulwE3w" name="Value(&quot;FAILED: &quot;).result" outgoing="_AijmMBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmOhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmOxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_AijmPBWFEeuqcIj4ulwE3w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmPRWFEeuqcIj4ulwE3w" name="Passthru(Fork(label))" outgoing="_AijmMxWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmPhWFEeuqcIj4ulwE3w" target="_AijmQhWFEeuqcIj4ulwE3w" source="_AijmPxWFEeuqcIj4ulwE3w"/>
                <structuredNodeInput xmi:id="_AijmPxWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).input" incoming="_AijltBWFEeuqcIj4ulwE3w" outgoing="_AijmPhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmQBWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmQRWFEeuqcIj4ulwE3w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_AijmQhWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).output" incoming="_AijmPhWFEeuqcIj4ulwE3w" outgoing="_AijmMRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmQxWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmRBWFEeuqcIj4ulwE3w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmRRWFEeuqcIj4ulwE3w" name="Node(Call(Concat))" incoming="_AijmMhWFEeuqcIj4ulwE3w _AijmMxWFEeuqcIj4ulwE3w" outgoing="_AijmNhWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmRhWFEeuqcIj4ulwE3w" target="_AijmRxWFEeuqcIj4ulwE3w" source="_AijmURWFEeuqcIj4ulwE3w"/>
                <structuredNodeOutput xmi:id="_AijmRxWFEeuqcIj4ulwE3w" name="Output(Call(Concat).result(result))" incoming="_AijmRhWFEeuqcIj4ulwE3w" outgoing="_AijmNBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmSBWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmSRWFEeuqcIj4ulwE3w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijmShWFEeuqcIj4ulwE3w" name="Call(Concat)">
                  <argument xmi:id="_AijmSxWFEeuqcIj4ulwE3w" name="Call(Concat).argument(x)" incoming="_AijmMBWFEeuqcIj4ulwE3w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmTBWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmTRWFEeuqcIj4ulwE3w" value="1"/>
                  </argument>
                  <argument xmi:id="_AijmThWFEeuqcIj4ulwE3w" name="Call(Concat).argument(y)" incoming="_AijmMRWFEeuqcIj4ulwE3w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmTxWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmUBWFEeuqcIj4ulwE3w" value="1"/>
                  </argument>
                  <result xmi:id="_AijmURWFEeuqcIj4ulwE3w" name="Call(Concat).result(result)" outgoing="_AijmRhWFEeuqcIj4ulwE3w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmUhWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmUxWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijmVBWFEeuqcIj4ulwE3w" name="Value(&quot;==&quot;)" outgoing="_AijmNxWFEeuqcIj4ulwE3w">
                <result xmi:id="_AijmVRWFEeuqcIj4ulwE3w" name="Value(&quot;==&quot;).result" outgoing="_AijmNRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmVhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmVxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_AijmWBWFEeuqcIj4ulwE3w" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmWRWFEeuqcIj4ulwE3w" name="Node(Call(Concat))" incoming="_AijmNhWFEeuqcIj4ulwE3w _AijmNxWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmWhWFEeuqcIj4ulwE3w" target="_AijmWxWFEeuqcIj4ulwE3w" source="_AijmZRWFEeuqcIj4ulwE3w"/>
                <structuredNodeOutput xmi:id="_AijmWxWFEeuqcIj4ulwE3w" name="Output(Call(Concat).result(result))" incoming="_AijmWhWFEeuqcIj4ulwE3w" outgoing="_AijmKRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmXBWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmXRWFEeuqcIj4ulwE3w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijmXhWFEeuqcIj4ulwE3w" name="Call(Concat)">
                  <argument xmi:id="_AijmXxWFEeuqcIj4ulwE3w" name="Call(Concat).argument(x)" incoming="_AijmNBWFEeuqcIj4ulwE3w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmYBWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmYRWFEeuqcIj4ulwE3w" value="1"/>
                  </argument>
                  <argument xmi:id="_AijmYhWFEeuqcIj4ulwE3w" name="Call(Concat).argument(y)" incoming="_AijmNRWFEeuqcIj4ulwE3w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmYxWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmZBWFEeuqcIj4ulwE3w" value="1"/>
                  </argument>
                  <result xmi:id="_AijmZRWFEeuqcIj4ulwE3w" name="Call(Concat).result(result)" outgoing="_AijmWhWFEeuqcIj4ulwE3w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmZhWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmZxWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmaBWFEeuqcIj4ulwE3w" name="ExpressionStatement@317e5666" incoming="_AijlzBWFEeuqcIj4ulwE3w" outgoing="_Aijl1RWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmaRWFEeuqcIj4ulwE3w" target="_AijmahWFEeuqcIj4ulwE3w" source="_AijmfxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_AijmahWFEeuqcIj4ulwE3w" name="Fork(s)@1690012e" incoming="_AijmaRWFEeuqcIj4ulwE3w" outgoing="_Aijl0RWFEeuqcIj4ulwE3w _Aijl0hWFEeuqcIj4ulwE3w _Aijl0xWFEeuqcIj4ulwE3w _Aijl1BWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmaxWFEeuqcIj4ulwE3w" name="RightHandSide@15f8aca1">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_AijmbBWFEeuqcIj4ulwE3w" name="CastExpression@15f8aca1" mode="parallel" outputElement="_AijmfxWFEeuqcIj4ulwE3w" inputElement="_AijmfhWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmbRWFEeuqcIj4ulwE3w" target="_AijmdhWFEeuqcIj4ulwE3w" source="_AijmfBWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmbhWFEeuqcIj4ulwE3w" target="_AijmfRWFEeuqcIj4ulwE3w" source="_AijmfBWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmbxWFEeuqcIj4ulwE3w" target="_AijmfRWFEeuqcIj4ulwE3w" source="_AijmeRWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmcBWFEeuqcIj4ulwE3w" target="_AijmdBWFEeuqcIj4ulwE3w" source="_AijmfRWFEeuqcIj4ulwE3w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_AijmcRWFEeuqcIj4ulwE3w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmchWFEeuqcIj4ulwE3w" target="_AijmfBWFEeuqcIj4ulwE3w" source="_AijmfhWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmcxWFEeuqcIj4ulwE3w" target="_AijmfxWFEeuqcIj4ulwE3w" source="_AijmdBWFEeuqcIj4ulwE3w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_AijmdBWFEeuqcIj4ulwE3w" name="Merge(CastExpression@15f8aca1.operand)" incoming="_AijmcBWFEeuqcIj4ulwE3w" outgoing="_AijmcxWFEeuqcIj4ulwE3w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_AijmdRWFEeuqcIj4ulwE3w" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_AijmdhWFEeuqcIj4ulwE3w" name="ReadIsClassifiedObject(String).object" incoming="_AijmbRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmdxWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmeBWFEeuqcIj4ulwE3w" value="1"/>
                  </object>
                  <result xmi:id="_AijmeRWFEeuqcIj4ulwE3w" name="ReadIsClassifiedObject(String).result" outgoing="_AijmbxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmehWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmexWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_AijmfBWFEeuqcIj4ulwE3w" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_AijmchWFEeuqcIj4ulwE3w" outgoing="_AijmbRWFEeuqcIj4ulwE3w _AijmbhWFEeuqcIj4ulwE3w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_AijmfRWFEeuqcIj4ulwE3w" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_AijmbhWFEeuqcIj4ulwE3w _AijmbxWFEeuqcIj4ulwE3w" outgoing="_AijmcBWFEeuqcIj4ulwE3w" decisionInputFlow="_AijmbxWFEeuqcIj4ulwE3w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_AijmfhWFEeuqcIj4ulwE3w" name="CastExpression@15f8aca1.inputElement" incoming="_AijltRWFEeuqcIj4ulwE3w" outgoing="_AijmchWFEeuqcIj4ulwE3w" regionAsInput="_AijmbBWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_AijmfxWFEeuqcIj4ulwE3w" name="CastExpression@15f8aca1.outputElement" incoming="_AijmcxWFEeuqcIj4ulwE3w" outgoing="_AijmaRWFEeuqcIj4ulwE3w" regionAsOutput="_AijmbBWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_AijmgBWFEeuqcIj4ulwE3w" name="IfStatement@5bac0866" incoming="_Aijl1RWFEeuqcIj4ulwE3w" outgoing="_Aijl1hWFEeuqcIj4ulwE3w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmgRWFEeuqcIj4ulwE3w" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_AijmghWFEeuqcIj4ulwE3w" target="_AijmiRWFEeuqcIj4ulwE3w" source="_AijmgxWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmgxWFEeuqcIj4ulwE3w" name="Operands(EqualityExpression@1fb46d87)" outgoing="_AijmghWFEeuqcIj4ulwE3w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijmhBWFEeuqcIj4ulwE3w" name="Value(null)">
                  <result xmi:id="_AijmhRWFEeuqcIj4ulwE3w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmhhWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmhxWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_AijmiBWFEeuqcIj4ulwE3w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijmiRWFEeuqcIj4ulwE3w" name="Call(NotEmpty)" incoming="_AijmghWFEeuqcIj4ulwE3w">
                <argument xmi:id="_AijmihWFEeuqcIj4ulwE3w" name="Call(NotEmpty).argument(seq)" incoming="_Aijl0RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmixWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmjBWFEeuqcIj4ulwE3w" value="*"/>
                </argument>
                <result xmi:id="_AijmjRWFEeuqcIj4ulwE3w" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmjhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmjxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmkBWFEeuqcIj4ulwE3w" name="ExpressionStatement@4d8ac50d">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmkRWFEeuqcIj4ulwE3w" target="_AijmlBWFEeuqcIj4ulwE3w" source="_AijmwxWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AijmkhWFEeuqcIj4ulwE3w" target="_AijmkxWFEeuqcIj4ulwE3w" source="_AijmlxWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijmkxWFEeuqcIj4ulwE3w" name="Call(Write)" incoming="_AijmkhWFEeuqcIj4ulwE3w" behavior="_AikLuRWFEeuqcIj4ulwE3w">
                <argument xmi:id="_AijmlBWFEeuqcIj4ulwE3w" name="Call(Write).argument(value)" incoming="_AijmkRWFEeuqcIj4ulwE3w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmlRWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmlhWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmlxWFEeuqcIj4ulwE3w" name="Tuple@3e02e71a" outgoing="_AijmkhWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmmBWFEeuqcIj4ulwE3w" target="_AijmsxWFEeuqcIj4ulwE3w" source="_AijmoRWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmmRWFEeuqcIj4ulwE3w" target="_AijmthWFEeuqcIj4ulwE3w" source="_AijmqhWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AijmmhWFEeuqcIj4ulwE3w" target="_AijmrRWFEeuqcIj4ulwE3w" source="_AijmoBWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AijmmxWFEeuqcIj4ulwE3w" target="_AijmrRWFEeuqcIj4ulwE3w" source="_AijmpRWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmnBWFEeuqcIj4ulwE3w" target="_AijmxxWFEeuqcIj4ulwE3w" source="_AijmrxWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmnRWFEeuqcIj4ulwE3w" target="_AijmyhWFEeuqcIj4ulwE3w" source="_AijmvRWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AijmnhWFEeuqcIj4ulwE3w" target="_AijmwRWFEeuqcIj4ulwE3w" source="_AijmrRWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AijmnxWFEeuqcIj4ulwE3w" target="_AijmwRWFEeuqcIj4ulwE3w" source="_AijmvBWFEeuqcIj4ulwE3w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijmoBWFEeuqcIj4ulwE3w" name="Value(&quot;&quot;&quot;)" outgoing="_AijmmhWFEeuqcIj4ulwE3w">
                  <result xmi:id="_AijmoRWFEeuqcIj4ulwE3w" name="Value(&quot;&quot;&quot;).result" outgoing="_AijmmBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmohWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmoxWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AijmpBWFEeuqcIj4ulwE3w" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmpRWFEeuqcIj4ulwE3w" name="Passthru(Fork(s)@1690012e)" outgoing="_AijmmxWFEeuqcIj4ulwE3w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmphWFEeuqcIj4ulwE3w" target="_AijmqhWFEeuqcIj4ulwE3w" source="_AijmpxWFEeuqcIj4ulwE3w"/>
                  <structuredNodeInput xmi:id="_AijmpxWFEeuqcIj4ulwE3w" name="Passthru(Fork(s)@1690012e).input" incoming="_Aijl0hWFEeuqcIj4ulwE3w" outgoing="_AijmphWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmqBWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmqRWFEeuqcIj4ulwE3w" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_AijmqhWFEeuqcIj4ulwE3w" name="Passthru(Fork(s)@1690012e).output" incoming="_AijmphWFEeuqcIj4ulwE3w" outgoing="_AijmmRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmqxWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmrBWFEeuqcIj4ulwE3w" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmrRWFEeuqcIj4ulwE3w" name="Node(Call(Concat))" incoming="_AijmmhWFEeuqcIj4ulwE3w _AijmmxWFEeuqcIj4ulwE3w" outgoing="_AijmnhWFEeuqcIj4ulwE3w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmrhWFEeuqcIj4ulwE3w" target="_AijmrxWFEeuqcIj4ulwE3w" source="_AijmuRWFEeuqcIj4ulwE3w"/>
                  <structuredNodeOutput xmi:id="_AijmrxWFEeuqcIj4ulwE3w" name="Output(Call(Concat).result(result))" incoming="_AijmrhWFEeuqcIj4ulwE3w" outgoing="_AijmnBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmsBWFEeuqcIj4ulwE3w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmsRWFEeuqcIj4ulwE3w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijmshWFEeuqcIj4ulwE3w" name="Call(Concat)">
                    <argument xmi:id="_AijmsxWFEeuqcIj4ulwE3w" name="Call(Concat).argument(x)" incoming="_AijmmBWFEeuqcIj4ulwE3w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmtBWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmtRWFEeuqcIj4ulwE3w" value="1"/>
                    </argument>
                    <argument xmi:id="_AijmthWFEeuqcIj4ulwE3w" name="Call(Concat).argument(y)" incoming="_AijmmRWFEeuqcIj4ulwE3w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmtxWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmuBWFEeuqcIj4ulwE3w" value="1"/>
                    </argument>
                    <result xmi:id="_AijmuRWFEeuqcIj4ulwE3w" name="Call(Concat).result(result)" outgoing="_AijmrhWFEeuqcIj4ulwE3w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmuhWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmuxWFEeuqcIj4ulwE3w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijmvBWFEeuqcIj4ulwE3w" name="Value(&quot;&quot;&quot;)" outgoing="_AijmnxWFEeuqcIj4ulwE3w">
                  <result xmi:id="_AijmvRWFEeuqcIj4ulwE3w" name="Value(&quot;&quot;&quot;).result" outgoing="_AijmnRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmvhWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmvxWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AijmwBWFEeuqcIj4ulwE3w" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijmwRWFEeuqcIj4ulwE3w" name="Node(Call(Concat))" incoming="_AijmnhWFEeuqcIj4ulwE3w _AijmnxWFEeuqcIj4ulwE3w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AijmwhWFEeuqcIj4ulwE3w" target="_AijmwxWFEeuqcIj4ulwE3w" source="_AijmzRWFEeuqcIj4ulwE3w"/>
                  <structuredNodeOutput xmi:id="_AijmwxWFEeuqcIj4ulwE3w" name="Output(Call(Concat).result(result))" incoming="_AijmwhWFEeuqcIj4ulwE3w" outgoing="_AijmkRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmxBWFEeuqcIj4ulwE3w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmxRWFEeuqcIj4ulwE3w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijmxhWFEeuqcIj4ulwE3w" name="Call(Concat)">
                    <argument xmi:id="_AijmxxWFEeuqcIj4ulwE3w" name="Call(Concat).argument(x)" incoming="_AijmnBWFEeuqcIj4ulwE3w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmyBWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmyRWFEeuqcIj4ulwE3w" value="1"/>
                    </argument>
                    <argument xmi:id="_AijmyhWFEeuqcIj4ulwE3w" name="Call(Concat).argument(y)" incoming="_AijmnRWFEeuqcIj4ulwE3w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmyxWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmzBWFEeuqcIj4ulwE3w" value="1"/>
                    </argument>
                    <result xmi:id="_AijmzRWFEeuqcIj4ulwE3w" name="Call(Concat).result(result)" outgoing="_AijmwhWFEeuqcIj4ulwE3w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijmzhWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijmzxWFEeuqcIj4ulwE3w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aijm0BWFEeuqcIj4ulwE3w" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijm0RWFEeuqcIj4ulwE3w" target="_Aijm1RWFEeuqcIj4ulwE3w" source="_Aijm0hWFEeuqcIj4ulwE3w"/>
              <structuredNodeInput xmi:id="_Aijm0hWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).input" incoming="_AijlthWFEeuqcIj4ulwE3w" outgoing="_Aijm0RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijm0xWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijm1BWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_Aijm1RWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).output" incoming="_Aijm0RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijm1hWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijm1xWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aijm2BWFEeuqcIj4ulwE3w" name="Passthru(Fork(s)@1690012e)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijm2RWFEeuqcIj4ulwE3w" target="_Aijm3RWFEeuqcIj4ulwE3w" source="_Aijm2hWFEeuqcIj4ulwE3w"/>
              <structuredNodeInput xmi:id="_Aijm2hWFEeuqcIj4ulwE3w" name="Passthru(Fork(s)@1690012e).input" incoming="_Aijl0xWFEeuqcIj4ulwE3w" outgoing="_Aijm2RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijm2xWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijm3BWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_Aijm3RWFEeuqcIj4ulwE3w" name="Passthru(Fork(s)@1690012e).output" incoming="_Aijm2RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijm3hWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijm3xWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aijm4BWFEeuqcIj4ulwE3w" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijm4RWFEeuqcIj4ulwE3w" target="_Aijm5RWFEeuqcIj4ulwE3w" source="_Aijm4hWFEeuqcIj4ulwE3w"/>
              <structuredNodeInput xmi:id="_Aijm4hWFEeuqcIj4ulwE3w" name="Passthru(Fork(value2)).input" incoming="_AijltxWFEeuqcIj4ulwE3w" outgoing="_Aijm4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijm4xWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijm5BWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_Aijm5RWFEeuqcIj4ulwE3w" name="Passthru(Fork(value2)).output" incoming="_Aijm4RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijm5hWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijm5xWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aijm6BWFEeuqcIj4ulwE3w" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijm6RWFEeuqcIj4ulwE3w" target="_Aijm7RWFEeuqcIj4ulwE3w" source="_Aijm6hWFEeuqcIj4ulwE3w"/>
              <structuredNodeInput xmi:id="_Aijm6hWFEeuqcIj4ulwE3w" name="Passthru(Fork(value1)).input" incoming="_AijluBWFEeuqcIj4ulwE3w" outgoing="_Aijm6RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijm6xWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijm7BWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_Aijm7RWFEeuqcIj4ulwE3w" name="Passthru(Fork(value1)).output" incoming="_Aijm6RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijm7hWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijm7xWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Aijm8BWFEeuqcIj4ulwE3w" name="Value(true)">
              <result xmi:id="_Aijm8RWFEeuqcIj4ulwE3w" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijm8hWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijm8xWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_Aijm9BWFEeuqcIj4ulwE3w" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aijm9RWFEeuqcIj4ulwE3w" name="ExpressionStatement@170849c6">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijm9hWFEeuqcIj4ulwE3w" target="_Aijm-RWFEeuqcIj4ulwE3w" source="_AijnKRWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Aijm9xWFEeuqcIj4ulwE3w" target="_Aijm-BWFEeuqcIj4ulwE3w" source="_Aijm_BWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Aijm-BWFEeuqcIj4ulwE3w" name="Call(Write)" incoming="_Aijm9xWFEeuqcIj4ulwE3w" behavior="_AikLuRWFEeuqcIj4ulwE3w">
                <argument xmi:id="_Aijm-RWFEeuqcIj4ulwE3w" name="Call(Write).argument(value)" incoming="_Aijm9hWFEeuqcIj4ulwE3w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Aijm-hWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aijm-xWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Aijm_BWFEeuqcIj4ulwE3w" name="Tuple@57da5b03" outgoing="_Aijm9xWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijm_RWFEeuqcIj4ulwE3w" target="_AijnERWFEeuqcIj4ulwE3w" source="_AijnCRWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Aijm_hWFEeuqcIj4ulwE3w" target="_AijnEBWFEeuqcIj4ulwE3w" source="_AijnCBWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Aijm_xWFEeuqcIj4ulwE3w" target="_AijnHBWFEeuqcIj4ulwE3w" source="_AijnCRWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AijnABWFEeuqcIj4ulwE3w" target="_AijnKBWFEeuqcIj4ulwE3w" source="_AijnJxWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijnARWFEeuqcIj4ulwE3w" target="_AijnKBWFEeuqcIj4ulwE3w" source="_AijnFBWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AijnAhWFEeuqcIj4ulwE3w" target="_AijnFxWFEeuqcIj4ulwE3w" source="_AijnKBWFEeuqcIj4ulwE3w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_AijnAxWFEeuqcIj4ulwE3w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_AijnBBWFEeuqcIj4ulwE3w" target="_AijnHRWFEeuqcIj4ulwE3w" source="_AijnKBWFEeuqcIj4ulwE3w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_AijnBRWFEeuqcIj4ulwE3w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijnBhWFEeuqcIj4ulwE3w" target="_AijnKRWFEeuqcIj4ulwE3w" source="_AijnGRWFEeuqcIj4ulwE3w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AijnBxWFEeuqcIj4ulwE3w" target="_AijnKRWFEeuqcIj4ulwE3w" source="_AijnHxWFEeuqcIj4ulwE3w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijnCBWFEeuqcIj4ulwE3w" name="Operands(EqualityExpression@285a704c)" outgoing="_Aijm_hWFEeuqcIj4ulwE3w">
                  <node xmi:type="uml:ForkNode" xmi:id="_AijnCRWFEeuqcIj4ulwE3w" name="Fork('')@318edbbe" incoming="_AijluRWFEeuqcIj4ulwE3w" outgoing="_Aijm_RWFEeuqcIj4ulwE3w _Aijm_xWFEeuqcIj4ulwE3w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijnChWFEeuqcIj4ulwE3w" name="RightHandSide@3dce6b55"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijnCxWFEeuqcIj4ulwE3w" name="Value(null)">
                    <result xmi:id="_AijnDBWFEeuqcIj4ulwE3w" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnDRWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnDhWFEeuqcIj4ulwE3w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_AijnDxWFEeuqcIj4ulwE3w"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijnEBWFEeuqcIj4ulwE3w" name="Call(NotEmpty)" incoming="_Aijm_hWFEeuqcIj4ulwE3w">
                  <argument xmi:id="_AijnERWFEeuqcIj4ulwE3w" name="Call(NotEmpty).argument(seq)" incoming="_Aijm_RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnEhWFEeuqcIj4ulwE3w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnExWFEeuqcIj4ulwE3w" value="*"/>
                  </argument>
                  <result xmi:id="_AijnFBWFEeuqcIj4ulwE3w" name="Call(NotEmpty).result()" outgoing="_AijnARWFEeuqcIj4ulwE3w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnFRWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnFhWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijnFxWFEeuqcIj4ulwE3w" name="NullCoalescingExpression@5ae25682.operand2" incoming="_AijnAhWFEeuqcIj4ulwE3w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AijnGBWFEeuqcIj4ulwE3w" target="_AijnGRWFEeuqcIj4ulwE3w" source="_AijnHBWFEeuqcIj4ulwE3w"/>
                  <structuredNodeOutput xmi:id="_AijnGRWFEeuqcIj4ulwE3w" name="NullCoalescingExpression@5ae25682.operand2.result" incoming="_AijnGBWFEeuqcIj4ulwE3w" outgoing="_AijnBhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnGhWFEeuqcIj4ulwE3w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnGxWFEeuqcIj4ulwE3w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_AijnHBWFEeuqcIj4ulwE3w" name="Merge(Fork('')@318edbbe)" incoming="_Aijm_xWFEeuqcIj4ulwE3w" outgoing="_AijnGBWFEeuqcIj4ulwE3w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijnHRWFEeuqcIj4ulwE3w" name="NullCoalescingExpression@5ae25682.operand3" incoming="_AijnBBWFEeuqcIj4ulwE3w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_AijnHhWFEeuqcIj4ulwE3w" target="_AijnHxWFEeuqcIj4ulwE3w" source="_AijnIxWFEeuqcIj4ulwE3w"/>
                  <structuredNodeOutput xmi:id="_AijnHxWFEeuqcIj4ulwE3w" name="NullCoalescingExpression@5ae25682.operand3.result" incoming="_AijnHhWFEeuqcIj4ulwE3w" outgoing="_AijnBxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnIBWFEeuqcIj4ulwE3w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnIRWFEeuqcIj4ulwE3w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijnIhWFEeuqcIj4ulwE3w" name="Value(&quot;null&quot;)">
                    <result xmi:id="_AijnIxWFEeuqcIj4ulwE3w" name="Value(&quot;null&quot;).result" outgoing="_AijnHhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnJBWFEeuqcIj4ulwE3w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnJRWFEeuqcIj4ulwE3w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_AijnJhWFEeuqcIj4ulwE3w" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_AijnJxWFEeuqcIj4ulwE3w" name="Initial(NullCoalescingExpression@5ae25682)" outgoing="_AijnABWFEeuqcIj4ulwE3w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_AijnKBWFEeuqcIj4ulwE3w" name="Decision(NullCoalescingExpression@5ae25682)" incoming="_AijnABWFEeuqcIj4ulwE3w _AijnARWFEeuqcIj4ulwE3w" outgoing="_AijnAhWFEeuqcIj4ulwE3w _AijnBBWFEeuqcIj4ulwE3w" decisionInputFlow="_AijnARWFEeuqcIj4ulwE3w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_AijnKRWFEeuqcIj4ulwE3w" name="Merge(NullCoalescingExpression@5ae25682.result)" incoming="_AijnBhWFEeuqcIj4ulwE3w _AijnBxWFEeuqcIj4ulwE3w" outgoing="_Aijm9hWFEeuqcIj4ulwE3w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijnKhWFEeuqcIj4ulwE3w" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijnKxWFEeuqcIj4ulwE3w" target="_AijnLxWFEeuqcIj4ulwE3w" source="_AijnLBWFEeuqcIj4ulwE3w"/>
              <structuredNodeInput xmi:id="_AijnLBWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).input" incoming="_AijluhWFEeuqcIj4ulwE3w" outgoing="_AijnKxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnLRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnLhWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_AijnLxWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).output" incoming="_AijnKxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnMBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnMRWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijnMhWFEeuqcIj4ulwE3w" name="Passthru(Fork(s)@1690012e)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijnMxWFEeuqcIj4ulwE3w" target="_AijnNxWFEeuqcIj4ulwE3w" source="_AijnNBWFEeuqcIj4ulwE3w"/>
              <structuredNodeInput xmi:id="_AijnNBWFEeuqcIj4ulwE3w" name="Passthru(Fork(s)@1690012e).input" incoming="_Aijl1BWFEeuqcIj4ulwE3w" outgoing="_AijnMxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnNRWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnNhWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_AijnNxWFEeuqcIj4ulwE3w" name="Passthru(Fork(s)@1690012e).output" incoming="_AijnMxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnOBWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnORWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijnOhWFEeuqcIj4ulwE3w" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijnOxWFEeuqcIj4ulwE3w" target="_AijnPxWFEeuqcIj4ulwE3w" source="_AijnPBWFEeuqcIj4ulwE3w"/>
              <structuredNodeInput xmi:id="_AijnPBWFEeuqcIj4ulwE3w" name="Passthru(Fork(value2)).input" incoming="_AijluxWFEeuqcIj4ulwE3w" outgoing="_AijnOxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnPRWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnPhWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_AijnPxWFEeuqcIj4ulwE3w" name="Passthru(Fork(value2)).output" incoming="_AijnOxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnQBWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnQRWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijnQhWFEeuqcIj4ulwE3w" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AijnQxWFEeuqcIj4ulwE3w" target="_AijnRxWFEeuqcIj4ulwE3w" source="_AijnRBWFEeuqcIj4ulwE3w"/>
              <structuredNodeInput xmi:id="_AijnRBWFEeuqcIj4ulwE3w" name="Passthru(Fork(value1)).input" incoming="_AijlvBWFEeuqcIj4ulwE3w" outgoing="_AijnQxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnRRWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnRhWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_AijnRxWFEeuqcIj4ulwE3w" name="Passthru(Fork(value1)).output" incoming="_AijnQxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnSBWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnSRWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_AijnShWFEeuqcIj4ulwE3w" body="_AijmkBWFEeuqcIj4ulwE3w _Aijm0BWFEeuqcIj4ulwE3w _Aijm2BWFEeuqcIj4ulwE3w _Aijm4BWFEeuqcIj4ulwE3w _Aijm6BWFEeuqcIj4ulwE3w" bodyOutput="_Aijm1RWFEeuqcIj4ulwE3w _Aijm3RWFEeuqcIj4ulwE3w _Aijm5RWFEeuqcIj4ulwE3w _Aijm7RWFEeuqcIj4ulwE3w" decider="_AijmjRWFEeuqcIj4ulwE3w" successorClause="_AijnSxWFEeuqcIj4ulwE3w" test="_AijmgRWFEeuqcIj4ulwE3w"/>
            <clause xmi:id="_AijnSxWFEeuqcIj4ulwE3w" body="_Aijm9RWFEeuqcIj4ulwE3w _AijnKhWFEeuqcIj4ulwE3w _AijnMhWFEeuqcIj4ulwE3w _AijnOhWFEeuqcIj4ulwE3w _AijnQhWFEeuqcIj4ulwE3w" bodyOutput="_AijnLxWFEeuqcIj4ulwE3w _AijnNxWFEeuqcIj4ulwE3w _AijnPxWFEeuqcIj4ulwE3w _AijnRxWFEeuqcIj4ulwE3w" decider="_Aijm8RWFEeuqcIj4ulwE3w" predecessorClause="_AijnShWFEeuqcIj4ulwE3w" test="_Aijm8BWFEeuqcIj4ulwE3w"/>
            <result xmi:id="_AijnTBWFEeuqcIj4ulwE3w" name="IfStatement@5bac0866.result(label)" outgoing="_AijlzRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnTRWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnThWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <result xmi:id="_AijnTxWFEeuqcIj4ulwE3w" name="IfStatement@5bac0866.result(s)" outgoing="_AijlzhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnUBWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnURWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <result xmi:id="_AijnUhWFEeuqcIj4ulwE3w" name="IfStatement@5bac0866.result(value2)" outgoing="_AijlzxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnUxWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnVBWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <result xmi:id="_AijnVRWFEeuqcIj4ulwE3w" name="IfStatement@5bac0866.result(value1)" outgoing="_Aijl0BWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnVhWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnVxWFEeuqcIj4ulwE3w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_AijnWBWFEeuqcIj4ulwE3w" name="Fork(label)" incoming="_AijlzRWFEeuqcIj4ulwE3w" outgoing="_Aijl1xWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_AijnWRWFEeuqcIj4ulwE3w" name="Fork(s)" incoming="_AijlzhWFEeuqcIj4ulwE3w" outgoing="_Aijl2BWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_AijnWhWFEeuqcIj4ulwE3w" name="Fork(value2)" incoming="_AijlzxWFEeuqcIj4ulwE3w" outgoing="_Aijl2RWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_AijnWxWFEeuqcIj4ulwE3w" name="Fork(value1)" incoming="_Aijl0BWFEeuqcIj4ulwE3w" outgoing="_Aijl2hWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijnXBWFEeuqcIj4ulwE3w" name="ExpressionStatement@42285bf0" incoming="_Aijl1hWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijnXRWFEeuqcIj4ulwE3w" target="_AijnYBWFEeuqcIj4ulwE3w" source="_AijnaBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AijnXhWFEeuqcIj4ulwE3w" target="_AijnXxWFEeuqcIj4ulwE3w" source="_AijnZhWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AijnXxWFEeuqcIj4ulwE3w" name="Call(WriteLine)" incoming="_AijnXhWFEeuqcIj4ulwE3w">
              <argument xmi:id="_AijnYBWFEeuqcIj4ulwE3w" name="Call(WriteLine).argument(value)" incoming="_AijnXRWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnYRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnYhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_AijnYxWFEeuqcIj4ulwE3w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnZBWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnZRWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijnZhWFEeuqcIj4ulwE3w" name="Tuple@13e9c3c6" outgoing="_AijnXhWFEeuqcIj4ulwE3w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AijnZxWFEeuqcIj4ulwE3w" name="Value(&quot;&quot;)">
                <result xmi:id="_AijnaBWFEeuqcIj4ulwE3w" name="Value(&quot;&quot;).result" outgoing="_AijnXRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnaRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnahWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_AijnaxWFEeuqcIj4ulwE3w" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijnbBWFEeuqcIj4ulwE3w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijnbRWFEeuqcIj4ulwE3w" target="_AijncRWFEeuqcIj4ulwE3w" source="_AijnbhWFEeuqcIj4ulwE3w"/>
            <structuredNodeInput xmi:id="_AijnbhWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).input" incoming="_Aijl1xWFEeuqcIj4ulwE3w" outgoing="_AijnbRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnbxWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijncBWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_AijncRWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).output" incoming="_AijnbRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnchWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijncxWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AijndBWFEeuqcIj4ulwE3w" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AijndRWFEeuqcIj4ulwE3w" target="_AijneRWFEeuqcIj4ulwE3w" source="_AijndhWFEeuqcIj4ulwE3w"/>
            <structuredNodeInput xmi:id="_AijndhWFEeuqcIj4ulwE3w" name="Passthru(Fork(s)).input" incoming="_Aijl2BWFEeuqcIj4ulwE3w" outgoing="_AijndRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijndxWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijneBWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_AijneRWFEeuqcIj4ulwE3w" name="Passthru(Fork(s)).output" incoming="_AijndRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AijnehWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AijnexWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikLEBWFEeuqcIj4ulwE3w" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLERWFEeuqcIj4ulwE3w" target="_AikLFRWFEeuqcIj4ulwE3w" source="_AikLEhWFEeuqcIj4ulwE3w"/>
            <structuredNodeInput xmi:id="_AikLEhWFEeuqcIj4ulwE3w" name="Passthru(Fork(value2)).input" incoming="_Aijl2RWFEeuqcIj4ulwE3w" outgoing="_AikLERWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLExWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLFBWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_AikLFRWFEeuqcIj4ulwE3w" name="Passthru(Fork(value2)).output" incoming="_AikLERWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLFhWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLFxWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikLGBWFEeuqcIj4ulwE3w" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLGRWFEeuqcIj4ulwE3w" target="_AikLHRWFEeuqcIj4ulwE3w" source="_AikLGhWFEeuqcIj4ulwE3w"/>
            <structuredNodeInput xmi:id="_AikLGhWFEeuqcIj4ulwE3w" name="Passthru(Fork(value1)).input" incoming="_Aijl2hWFEeuqcIj4ulwE3w" outgoing="_AikLGRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLGxWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLHBWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_AikLHRWFEeuqcIj4ulwE3w" name="Passthru(Fork(value1)).output" incoming="_AikLGRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLHhWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLHxWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AikLIBWFEeuqcIj4ulwE3w" name="Value(true)">
            <result xmi:id="_AikLIRWFEeuqcIj4ulwE3w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLIhWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLIxWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_AikLJBWFEeuqcIj4ulwE3w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikLJRWFEeuqcIj4ulwE3w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLJhWFEeuqcIj4ulwE3w" target="_AikLKhWFEeuqcIj4ulwE3w" source="_AikLJxWFEeuqcIj4ulwE3w"/>
            <structuredNodeInput xmi:id="_AikLJxWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).input" incoming="_AijlvRWFEeuqcIj4ulwE3w" outgoing="_AikLJhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLKBWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLKRWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_AikLKhWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).output" incoming="_AikLJhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLKxWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLLBWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AikLLRWFEeuqcIj4ulwE3w" name="Value(null)">
            <result xmi:id="_AikLLhWFEeuqcIj4ulwE3w" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLLxWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLMBWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_AikLMRWFEeuqcIj4ulwE3w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikLMhWFEeuqcIj4ulwE3w" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLMxWFEeuqcIj4ulwE3w" target="_AikLNxWFEeuqcIj4ulwE3w" source="_AikLNBWFEeuqcIj4ulwE3w"/>
            <structuredNodeInput xmi:id="_AikLNBWFEeuqcIj4ulwE3w" name="Passthru(Fork(value2)).input" incoming="_AijlvhWFEeuqcIj4ulwE3w" outgoing="_AikLMxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLNRWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLNhWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_AikLNxWFEeuqcIj4ulwE3w" name="Passthru(Fork(value2)).output" incoming="_AikLMxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLOBWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLORWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikLOhWFEeuqcIj4ulwE3w" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLOxWFEeuqcIj4ulwE3w" target="_AikLPxWFEeuqcIj4ulwE3w" source="_AikLPBWFEeuqcIj4ulwE3w"/>
            <structuredNodeInput xmi:id="_AikLPBWFEeuqcIj4ulwE3w" name="Passthru(Fork(value1)).input" incoming="_AijlvxWFEeuqcIj4ulwE3w" outgoing="_AikLOxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLPRWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLPhWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_AikLPxWFEeuqcIj4ulwE3w" name="Passthru(Fork(value1)).output" incoming="_AikLOxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLQBWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLQRWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_AikLQhWFEeuqcIj4ulwE3w" body="_AijmKBWFEeuqcIj4ulwE3w _AijmaBWFEeuqcIj4ulwE3w _AijmgBWFEeuqcIj4ulwE3w _AijnXBWFEeuqcIj4ulwE3w _AijnbBWFEeuqcIj4ulwE3w _AijndBWFEeuqcIj4ulwE3w _AikLEBWFEeuqcIj4ulwE3w _AikLGBWFEeuqcIj4ulwE3w" bodyOutput="_AijncRWFEeuqcIj4ulwE3w _AijneRWFEeuqcIj4ulwE3w _AikLFRWFEeuqcIj4ulwE3w _AikLHRWFEeuqcIj4ulwE3w" decider="_AijmJRWFEeuqcIj4ulwE3w" successorClause="_AikLQxWFEeuqcIj4ulwE3w" test="_Aijl2xWFEeuqcIj4ulwE3w"/>
          <clause xmi:id="_AikLQxWFEeuqcIj4ulwE3w" body="_AikLJRWFEeuqcIj4ulwE3w _AikLLRWFEeuqcIj4ulwE3w _AikLMhWFEeuqcIj4ulwE3w _AikLOhWFEeuqcIj4ulwE3w" bodyOutput="_AikLKhWFEeuqcIj4ulwE3w _AikLLhWFEeuqcIj4ulwE3w _AikLNxWFEeuqcIj4ulwE3w _AikLPxWFEeuqcIj4ulwE3w" decider="_AikLIRWFEeuqcIj4ulwE3w" predecessorClause="_AikLQhWFEeuqcIj4ulwE3w" test="_AikLIBWFEeuqcIj4ulwE3w"/>
          <result xmi:id="_AikLRBWFEeuqcIj4ulwE3w" name="IfStatement@3387e020.result(label)" outgoing="_AijlxxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLRRWFEeuqcIj4ulwE3w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLRhWFEeuqcIj4ulwE3w" value="1"/>
          </result>
          <result xmi:id="_AikLRxWFEeuqcIj4ulwE3w" name="IfStatement@3387e020.result(s)" outgoing="_AijlyBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLSBWFEeuqcIj4ulwE3w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLSRWFEeuqcIj4ulwE3w" value="1"/>
          </result>
          <result xmi:id="_AikLShWFEeuqcIj4ulwE3w" name="IfStatement@3387e020.result(value2)" outgoing="_AijlyRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLSxWFEeuqcIj4ulwE3w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLTBWFEeuqcIj4ulwE3w" value="1"/>
          </result>
          <result xmi:id="_AikLTRWFEeuqcIj4ulwE3w" name="IfStatement@3387e020.result(value1)" outgoing="_AijlyhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLThWFEeuqcIj4ulwE3w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLTxWFEeuqcIj4ulwE3w" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_AikLUBWFEeuqcIj4ulwE3w" name="Fork(label)" incoming="_AijlxxWFEeuqcIj4ulwE3w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_AikLURWFEeuqcIj4ulwE3w" name="Fork(s)" incoming="_AijlyBWFEeuqcIj4ulwE3w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_AikLUhWFEeuqcIj4ulwE3w" name="Fork(value2)" incoming="_AijlyRWFEeuqcIj4ulwE3w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_AikLUxWFEeuqcIj4ulwE3w" name="Fork(value1)" incoming="_AijlyhWFEeuqcIj4ulwE3w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AijlwBWFEeuqcIj4ulwE3w" name="Input(label)" outgoing="_AijlrxWFEeuqcIj4ulwE3w" parameter="_AijlphWFEeuqcIj4ulwE3w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_AijlwRWFEeuqcIj4ulwE3w" name="Fork(label)" incoming="_AijlrxWFEeuqcIj4ulwE3w" outgoing="_AijltBWFEeuqcIj4ulwE3w _AijlthWFEeuqcIj4ulwE3w _AijluhWFEeuqcIj4ulwE3w _AijlvRWFEeuqcIj4ulwE3w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AijlwhWFEeuqcIj4ulwE3w" name="Input(value1)" outgoing="_AijlsBWFEeuqcIj4ulwE3w" parameter="_AijlqRWFEeuqcIj4ulwE3w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_AijlwxWFEeuqcIj4ulwE3w" name="Fork(value1)" incoming="_AijlsBWFEeuqcIj4ulwE3w" outgoing="_AijlshWFEeuqcIj4ulwE3w _AijluBWFEeuqcIj4ulwE3w _AijlvBWFEeuqcIj4ulwE3w _AijlvxWFEeuqcIj4ulwE3w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AijlxBWFEeuqcIj4ulwE3w" name="Input(value2)" outgoing="_AijlsRWFEeuqcIj4ulwE3w" parameter="_AijlrBWFEeuqcIj4ulwE3w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_AijlxRWFEeuqcIj4ulwE3w" name="Fork(value2)" incoming="_AijlsRWFEeuqcIj4ulwE3w" outgoing="_AijlsxWFEeuqcIj4ulwE3w _AijltRWFEeuqcIj4ulwE3w _AijltxWFEeuqcIj4ulwE3w _AijluRWFEeuqcIj4ulwE3w _AijluxWFEeuqcIj4ulwE3w _AijlvhWFEeuqcIj4ulwE3w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_AikLVBWFEeuqcIj4ulwE3w" name="AssertFalse" visibility="public" node="_AikLZRWFEeuqcIj4ulwE3w _AikLZhWFEeuqcIj4ulwE3w _AikLZxWFEeuqcIj4ulwE3w _AikLaBWFEeuqcIj4ulwE3w _AikLaRWFEeuqcIj4ulwE3w" group="_AikLaRWFEeuqcIj4ulwE3w">
      <elementImport xmi:id="_AikLVRWFEeuqcIj4ulwE3w" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_AikLVhWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_AikLVxWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_AikLWBWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_AikLWRWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_AikLWhWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_AikLWxWFEeuqcIj4ulwE3w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLXBWFEeuqcIj4ulwE3w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLXRWFEeuqcIj4ulwE3w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_AikLXhWFEeuqcIj4ulwE3w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLXxWFEeuqcIj4ulwE3w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLYBWFEeuqcIj4ulwE3w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLYRWFEeuqcIj4ulwE3w" target="_AikLZhWFEeuqcIj4ulwE3w" source="_AikLZRWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLYhWFEeuqcIj4ulwE3w" target="_AikLaBWFEeuqcIj4ulwE3w" source="_AikLZxWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLYxWFEeuqcIj4ulwE3w" target="_AikLihWFEeuqcIj4ulwE3w" source="_AikLZhWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLZBWFEeuqcIj4ulwE3w" target="_AikLrhWFEeuqcIj4ulwE3w" source="_AikLaBWFEeuqcIj4ulwE3w"/>
      <structuredNode xmi:id="_AikLaRWFEeuqcIj4ulwE3w" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikLahWFEeuqcIj4ulwE3w" name="ExpressionStatement@366989ba">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLaxWFEeuqcIj4ulwE3w" target="_AikLbxWFEeuqcIj4ulwE3w" source="_AikLkhWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLbBWFEeuqcIj4ulwE3w" target="_AikLchWFEeuqcIj4ulwE3w" source="_AikLtxWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AikLbRWFEeuqcIj4ulwE3w" target="_AikLbhWFEeuqcIj4ulwE3w" source="_AikLdRWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_AikLbhWFEeuqcIj4ulwE3w" name="Call(AssertTrue)" incoming="_AikLbRWFEeuqcIj4ulwE3w" behavior="_AikMJRWFEeuqcIj4ulwE3w">
            <argument xmi:id="_AikLbxWFEeuqcIj4ulwE3w" name="Call(AssertTrue).argument(label)" incoming="_AikLaxWFEeuqcIj4ulwE3w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLcBWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLcRWFEeuqcIj4ulwE3w" value="1"/>
            </argument>
            <argument xmi:id="_AikLchWFEeuqcIj4ulwE3w" name="Call(AssertTrue).argument(condition)" incoming="_AikLbBWFEeuqcIj4ulwE3w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLcxWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLdBWFEeuqcIj4ulwE3w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikLdRWFEeuqcIj4ulwE3w" name="Tuple@7e22b360" outgoing="_AikLbRWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLdhWFEeuqcIj4ulwE3w" target="_AikLlhWFEeuqcIj4ulwE3w" source="_AikLhBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLdxWFEeuqcIj4ulwE3w" target="_AikLmRWFEeuqcIj4ulwE3w" source="_AikLjRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AikLeBWFEeuqcIj4ulwE3w" target="_AikLkBWFEeuqcIj4ulwE3w" source="_AikLgxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AikLeRWFEeuqcIj4ulwE3w" target="_AikLkBWFEeuqcIj4ulwE3w" source="_AikLiBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLehWFEeuqcIj4ulwE3w" target="_AikLpRWFEeuqcIj4ulwE3w" source="_AikLrhWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLexWFEeuqcIj4ulwE3w" target="_AikLsBWFEeuqcIj4ulwE3w" source="_AikLrhWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLfBWFEeuqcIj4ulwE3w" target="_AikLthWFEeuqcIj4ulwE3w" source="_AikLsxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLfRWFEeuqcIj4ulwE3w" target="_AikLtxWFEeuqcIj4ulwE3w" source="_AikLqBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLfhWFEeuqcIj4ulwE3w" target="_AikLuBWFEeuqcIj4ulwE3w" source="_AikLthWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLfxWFEeuqcIj4ulwE3w" target="_AikLuBWFEeuqcIj4ulwE3w" source="_AikLthWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLgBWFEeuqcIj4ulwE3w" target="_AikLtxWFEeuqcIj4ulwE3w" source="_AikLuBWFEeuqcIj4ulwE3w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_AikLgRWFEeuqcIj4ulwE3w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLghWFEeuqcIj4ulwE3w" target="_AikLqxWFEeuqcIj4ulwE3w" source="_AikLoBWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AikLgxWFEeuqcIj4ulwE3w" name="Value(&quot;! &quot;)" outgoing="_AikLeBWFEeuqcIj4ulwE3w">
              <result xmi:id="_AikLhBWFEeuqcIj4ulwE3w" name="Value(&quot;! &quot;).result" outgoing="_AikLdhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLhRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLhhWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_AikLhxWFEeuqcIj4ulwE3w" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikLiBWFEeuqcIj4ulwE3w" name="Passthru(Fork(label))" outgoing="_AikLeRWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLiRWFEeuqcIj4ulwE3w" target="_AikLjRWFEeuqcIj4ulwE3w" source="_AikLihWFEeuqcIj4ulwE3w"/>
              <structuredNodeInput xmi:id="_AikLihWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).input" incoming="_AikLYxWFEeuqcIj4ulwE3w" outgoing="_AikLiRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLixWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLjBWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_AikLjRWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).output" incoming="_AikLiRWFEeuqcIj4ulwE3w" outgoing="_AikLdxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLjhWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLjxWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikLkBWFEeuqcIj4ulwE3w" name="Node(Call(Concat))" incoming="_AikLeBWFEeuqcIj4ulwE3w _AikLeRWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLkRWFEeuqcIj4ulwE3w" target="_AikLkhWFEeuqcIj4ulwE3w" source="_AikLnBWFEeuqcIj4ulwE3w"/>
              <structuredNodeOutput xmi:id="_AikLkhWFEeuqcIj4ulwE3w" name="Output(Call(Concat).result(result))" incoming="_AikLkRWFEeuqcIj4ulwE3w" outgoing="_AikLaxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLkxWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLlBWFEeuqcIj4ulwE3w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AikLlRWFEeuqcIj4ulwE3w" name="Call(Concat)">
                <argument xmi:id="_AikLlhWFEeuqcIj4ulwE3w" name="Call(Concat).argument(x)" incoming="_AikLdhWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLlxWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLmBWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <argument xmi:id="_AikLmRWFEeuqcIj4ulwE3w" name="Call(Concat).argument(y)" incoming="_AikLdxWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLmhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLmxWFEeuqcIj4ulwE3w" value="1"/>
                </argument>
                <result xmi:id="_AikLnBWFEeuqcIj4ulwE3w" name="Call(Concat).result(result)" outgoing="_AikLkRWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLnRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLnhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AikLnxWFEeuqcIj4ulwE3w" name="Value(false)">
              <result xmi:id="_AikLoBWFEeuqcIj4ulwE3w" name="Value(false).result" outgoing="_AikLghWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLoRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLohWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_AikLoxWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_AikLpBWFEeuqcIj4ulwE3w" name="Test(==)">
              <first xmi:id="_AikLpRWFEeuqcIj4ulwE3w" name="Test(==).first" incoming="_AikLehWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLphWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLpxWFEeuqcIj4ulwE3w" value="1"/>
              </first>
              <result xmi:id="_AikLqBWFEeuqcIj4ulwE3w" name="Test(==).result" outgoing="_AikLfRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLqRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLqhWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <second xmi:id="_AikLqxWFEeuqcIj4ulwE3w" name="Test(==).second" incoming="_AikLghWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLrBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLrRWFEeuqcIj4ulwE3w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AikLrhWFEeuqcIj4ulwE3w" name="Fork(Fork(condition))" incoming="_AikLZBWFEeuqcIj4ulwE3w" outgoing="_AikLehWFEeuqcIj4ulwE3w _AikLexWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AikLrxWFEeuqcIj4ulwE3w" name="Call(NotEmpty)">
              <argument xmi:id="_AikLsBWFEeuqcIj4ulwE3w" name="Call(NotEmpty).argument(seq)" incoming="_AikLexWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLsRWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLshWFEeuqcIj4ulwE3w" value="*"/>
              </argument>
              <result xmi:id="_AikLsxWFEeuqcIj4ulwE3w" name="Call(NotEmpty).result()" outgoing="_AikLfBWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLtBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLtRWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AikLthWFEeuqcIj4ulwE3w" name="Fork(Call(NotEmpty).result())" incoming="_AikLfBWFEeuqcIj4ulwE3w" outgoing="_AikLfhWFEeuqcIj4ulwE3w _AikLfxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_AikLtxWFEeuqcIj4ulwE3w" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_AikLfRWFEeuqcIj4ulwE3w _AikLgBWFEeuqcIj4ulwE3w" outgoing="_AikLbBWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_AikLuBWFEeuqcIj4ulwE3w" name="Decision(Call(NotEmpty).result())" incoming="_AikLfhWFEeuqcIj4ulwE3w _AikLfxWFEeuqcIj4ulwE3w" outgoing="_AikLgBWFEeuqcIj4ulwE3w" decisionInputFlow="_AikLfxWFEeuqcIj4ulwE3w"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AikLZRWFEeuqcIj4ulwE3w" name="Input(label)" outgoing="_AikLYRWFEeuqcIj4ulwE3w" parameter="_AikLWxWFEeuqcIj4ulwE3w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_AikLZhWFEeuqcIj4ulwE3w" name="Fork(label)" incoming="_AikLYRWFEeuqcIj4ulwE3w" outgoing="_AikLYxWFEeuqcIj4ulwE3w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AikLZxWFEeuqcIj4ulwE3w" name="Input(condition)" outgoing="_AikLYhWFEeuqcIj4ulwE3w" parameter="_AikLXhWFEeuqcIj4ulwE3w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_AikLaBWFEeuqcIj4ulwE3w" name="Fork(condition)" incoming="_AikLYhWFEeuqcIj4ulwE3w" outgoing="_AikLZBWFEeuqcIj4ulwE3w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_AikLuRWFEeuqcIj4ulwE3w" name="Write" visibility="public" node="_AikLxBWFEeuqcIj4ulwE3w _AikLxRWFEeuqcIj4ulwE3w _AikLxhWFEeuqcIj4ulwE3w" group="_AikLxhWFEeuqcIj4ulwE3w">
      <packageImport xmi:id="_AikLuhWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_AikLuxWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_AikLvBWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_AikLvRWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_AikLvhWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_AikLvxWFEeuqcIj4ulwE3w" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikLwBWFEeuqcIj4ulwE3w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikLwRWFEeuqcIj4ulwE3w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLwhWFEeuqcIj4ulwE3w" target="_AikLxRWFEeuqcIj4ulwE3w" source="_AikLxBWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLwxWFEeuqcIj4ulwE3w" target="_AikLzxWFEeuqcIj4ulwE3w" source="_AikLxRWFEeuqcIj4ulwE3w"/>
      <structuredNode xmi:id="_AikLxhWFEeuqcIj4ulwE3w" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikLxxWFEeuqcIj4ulwE3w" name="ExpressionStatement@741e9160">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLyBWFEeuqcIj4ulwE3w" target="_AikMChWFEeuqcIj4ulwE3w" source="_AikMFxWFEeuqcIj4ulwE3w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_AikLyRWFEeuqcIj4ulwE3w" target="_AikLyhWFEeuqcIj4ulwE3w" source="_AikMCxWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_AikLyhWFEeuqcIj4ulwE3w" name="Collect(Call(write))" incoming="_AikLyRWFEeuqcIj4ulwE3w" mode="parallel" inputElement="_AikMChWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLyxWFEeuqcIj4ulwE3w" target="_AikL0xWFEeuqcIj4ulwE3w" source="_AikMCRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLzBWFEeuqcIj4ulwE3w" target="_AikL6RWFEeuqcIj4ulwE3w" source="_AikLzxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AikLzRWFEeuqcIj4ulwE3w" target="_AikL0hWFEeuqcIj4ulwE3w" source="_AikL3BWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikLzhWFEeuqcIj4ulwE3w" target="_AikL2RWFEeuqcIj4ulwE3w" source="_AikMChWFEeuqcIj4ulwE3w"/>
            <structuredNodeInput xmi:id="_AikLzxWFEeuqcIj4ulwE3w" name="Collect(Call(write)).input(Fork(value))" incoming="_AikLwxWFEeuqcIj4ulwE3w" outgoing="_AikLzBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikL0BWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikL0RWFEeuqcIj4ulwE3w" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_AikL0hWFEeuqcIj4ulwE3w" name="Call(write)" incoming="_AikLzRWFEeuqcIj4ulwE3w">
              <argument xmi:id="_AikL0xWFEeuqcIj4ulwE3w" name="Call(write).argument(value)" incoming="_AikLyxWFEeuqcIj4ulwE3w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikL1BWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikL1RWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_AikL1hWFEeuqcIj4ulwE3w" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikL1xWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikL2BWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_AikL2RWFEeuqcIj4ulwE3w" name="Call(write).target" incoming="_AikLzhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikL2hWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikL2xWFEeuqcIj4ulwE3w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikL3BWFEeuqcIj4ulwE3w" name="Tuple@6b02529d" outgoing="_AikLzRWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AikL3RWFEeuqcIj4ulwE3w" target="_AikL8RWFEeuqcIj4ulwE3w" source="_AikL6RWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AikL3hWFEeuqcIj4ulwE3w" target="_AikL8BWFEeuqcIj4ulwE3w" source="_AikL6BWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AikL3xWFEeuqcIj4ulwE3w" target="_AikL_BWFEeuqcIj4ulwE3w" source="_AikL6RWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AikL4BWFEeuqcIj4ulwE3w" target="_AikMCBWFEeuqcIj4ulwE3w" source="_AikMBxWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AikL4RWFEeuqcIj4ulwE3w" target="_AikMCBWFEeuqcIj4ulwE3w" source="_AikL9BWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AikL4hWFEeuqcIj4ulwE3w" target="_AikL9xWFEeuqcIj4ulwE3w" source="_AikMCBWFEeuqcIj4ulwE3w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_AikL4xWFEeuqcIj4ulwE3w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AikL5BWFEeuqcIj4ulwE3w" target="_AikL_RWFEeuqcIj4ulwE3w" source="_AikMCBWFEeuqcIj4ulwE3w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_AikL5RWFEeuqcIj4ulwE3w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AikL5hWFEeuqcIj4ulwE3w" target="_AikMCRWFEeuqcIj4ulwE3w" source="_AikL-RWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AikL5xWFEeuqcIj4ulwE3w" target="_AikMCRWFEeuqcIj4ulwE3w" source="_AikL_xWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikL6BWFEeuqcIj4ulwE3w" name="Operands(EqualityExpression@48aa7350)" outgoing="_AikL3hWFEeuqcIj4ulwE3w">
                <node xmi:type="uml:ForkNode" xmi:id="_AikL6RWFEeuqcIj4ulwE3w" name="Fork('')@352744a6" incoming="_AikLzBWFEeuqcIj4ulwE3w" outgoing="_AikL3RWFEeuqcIj4ulwE3w _AikL3xWFEeuqcIj4ulwE3w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikL6hWFEeuqcIj4ulwE3w" name="RightHandSide@631efaea"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AikL6xWFEeuqcIj4ulwE3w" name="Value(null)">
                  <result xmi:id="_AikL7BWFEeuqcIj4ulwE3w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikL7RWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikL7hWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_AikL7xWFEeuqcIj4ulwE3w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_AikL8BWFEeuqcIj4ulwE3w" name="Call(NotEmpty)" incoming="_AikL3hWFEeuqcIj4ulwE3w">
                <argument xmi:id="_AikL8RWFEeuqcIj4ulwE3w" name="Call(NotEmpty).argument(seq)" incoming="_AikL3RWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikL8hWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikL8xWFEeuqcIj4ulwE3w" value="*"/>
                </argument>
                <result xmi:id="_AikL9BWFEeuqcIj4ulwE3w" name="Call(NotEmpty).result()" outgoing="_AikL4RWFEeuqcIj4ulwE3w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikL9RWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikL9hWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikL9xWFEeuqcIj4ulwE3w" name="NullCoalescingExpression@63db7ed2.operand2" incoming="_AikL4hWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AikL-BWFEeuqcIj4ulwE3w" target="_AikL-RWFEeuqcIj4ulwE3w" source="_AikL_BWFEeuqcIj4ulwE3w"/>
                <structuredNodeOutput xmi:id="_AikL-RWFEeuqcIj4ulwE3w" name="NullCoalescingExpression@63db7ed2.operand2.result" incoming="_AikL-BWFEeuqcIj4ulwE3w" outgoing="_AikL5hWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikL-hWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikL-xWFEeuqcIj4ulwE3w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_AikL_BWFEeuqcIj4ulwE3w" name="Merge(Fork('')@352744a6)" incoming="_AikL3xWFEeuqcIj4ulwE3w" outgoing="_AikL-BWFEeuqcIj4ulwE3w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikL_RWFEeuqcIj4ulwE3w" name="NullCoalescingExpression@63db7ed2.operand3" incoming="_AikL5BWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AikL_hWFEeuqcIj4ulwE3w" target="_AikL_xWFEeuqcIj4ulwE3w" source="_AikMAxWFEeuqcIj4ulwE3w"/>
                <structuredNodeOutput xmi:id="_AikL_xWFEeuqcIj4ulwE3w" name="NullCoalescingExpression@63db7ed2.operand3.result" incoming="_AikL_hWFEeuqcIj4ulwE3w" outgoing="_AikL5xWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMABWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMARWFEeuqcIj4ulwE3w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AikMAhWFEeuqcIj4ulwE3w" name="Value(&quot;null&quot;)">
                  <result xmi:id="_AikMAxWFEeuqcIj4ulwE3w" name="Value(&quot;null&quot;).result" outgoing="_AikL_hWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMBBWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMBRWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_AikMBhWFEeuqcIj4ulwE3w" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_AikMBxWFEeuqcIj4ulwE3w" name="Initial(NullCoalescingExpression@63db7ed2)" outgoing="_AikL4BWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_AikMCBWFEeuqcIj4ulwE3w" name="Decision(NullCoalescingExpression@63db7ed2)" incoming="_AikL4BWFEeuqcIj4ulwE3w _AikL4RWFEeuqcIj4ulwE3w" outgoing="_AikL4hWFEeuqcIj4ulwE3w _AikL5BWFEeuqcIj4ulwE3w" decisionInputFlow="_AikL4RWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_AikMCRWFEeuqcIj4ulwE3w" name="Merge(NullCoalescingExpression@63db7ed2.result)" incoming="_AikL5hWFEeuqcIj4ulwE3w _AikL5xWFEeuqcIj4ulwE3w" outgoing="_AikLyxWFEeuqcIj4ulwE3w"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_AikMChWFEeuqcIj4ulwE3w" name="Collect(Call(write)).inputElement" incoming="_AikLyBWFEeuqcIj4ulwE3w" outgoing="_AikLzhWFEeuqcIj4ulwE3w" regionAsInput="_AikLyhWFEeuqcIj4ulwE3w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikMCxWFEeuqcIj4ulwE3w" name="Feature(Call(At).result())" outgoing="_AikLyRWFEeuqcIj4ulwE3w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMDBWFEeuqcIj4ulwE3w" target="_AikMERWFEeuqcIj4ulwE3w" source="_AikMHBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMDRWFEeuqcIj4ulwE3w" target="_AikMJBWFEeuqcIj4ulwE3w" source="_AikMIBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AikMDhWFEeuqcIj4ulwE3w" target="_AikMEBWFEeuqcIj4ulwE3w" source="_AikMGhWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMDxWFEeuqcIj4ulwE3w" target="_AikMFBWFEeuqcIj4ulwE3w" source="_AikMJBWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AikMEBWFEeuqcIj4ulwE3w" name="Call(At)" incoming="_AikMDhWFEeuqcIj4ulwE3w">
              <argument xmi:id="_AikMERWFEeuqcIj4ulwE3w" name="Call(At).argument(seq)" incoming="_AikMDBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMEhWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMExWFEeuqcIj4ulwE3w" value="*"/>
              </argument>
              <argument xmi:id="_AikMFBWFEeuqcIj4ulwE3w" name="Call(At).argument(index)" incoming="_AikMDxWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMFRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMFhWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_AikMFxWFEeuqcIj4ulwE3w" name="Call(At).result()" outgoing="_AikLyBWFEeuqcIj4ulwE3w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMGBWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMGRWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikMGhWFEeuqcIj4ulwE3w" name="Tuple@3bec312f" outgoing="_AikMDhWFEeuqcIj4ulwE3w">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_AikMGxWFEeuqcIj4ulwE3w" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_AikMHBWFEeuqcIj4ulwE3w" name="ReadExtent(StandardOutputChannel).result" outgoing="_AikMDBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMHRWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMHhWFEeuqcIj4ulwE3w" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AikMHxWFEeuqcIj4ulwE3w" name="Value(1)">
                <result xmi:id="_AikMIBWFEeuqcIj4ulwE3w" name="Value(1).result" outgoing="_AikMDRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMIRWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMIhWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_AikMIxWFEeuqcIj4ulwE3w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AikMJBWFEeuqcIj4ulwE3w" name="Fork(Call(At).argument(index))" incoming="_AikMDRWFEeuqcIj4ulwE3w" outgoing="_AikMDxWFEeuqcIj4ulwE3w"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AikLxBWFEeuqcIj4ulwE3w" name="Input(value)" outgoing="_AikLwhWFEeuqcIj4ulwE3w" parameter="_AikLvxWFEeuqcIj4ulwE3w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_AikLxRWFEeuqcIj4ulwE3w" name="Fork(value)" incoming="_AikLwhWFEeuqcIj4ulwE3w" outgoing="_AikLwxWFEeuqcIj4ulwE3w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_AikMJRWFEeuqcIj4ulwE3w" name="AssertTrue" visibility="public" node="_AikMORWFEeuqcIj4ulwE3w _AikMOhWFEeuqcIj4ulwE3w _AikMOxWFEeuqcIj4ulwE3w _AikMPBWFEeuqcIj4ulwE3w _AikMPRWFEeuqcIj4ulwE3w" group="_AikMPRWFEeuqcIj4ulwE3w">
      <packageImport xmi:id="_AikMJhWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_AikMJxWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_AikMKBWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_AikMKRWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_AikMKhWFEeuqcIj4ulwE3w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_AikMKxWFEeuqcIj4ulwE3w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMLBWFEeuqcIj4ulwE3w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMLRWFEeuqcIj4ulwE3w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_AikMLhWFEeuqcIj4ulwE3w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMLxWFEeuqcIj4ulwE3w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMMBWFEeuqcIj4ulwE3w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMMRWFEeuqcIj4ulwE3w" target="_AikMOhWFEeuqcIj4ulwE3w" source="_AikMORWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMMhWFEeuqcIj4ulwE3w" target="_AikMPBWFEeuqcIj4ulwE3w" source="_AikMOxWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMMxWFEeuqcIj4ulwE3w" target="_AikMWxWFEeuqcIj4ulwE3w" source="_AikMPBWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMNBWFEeuqcIj4ulwE3w" target="_AikMgxWFEeuqcIj4ulwE3w" source="_AikMOhWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMNRWFEeuqcIj4ulwE3w" target="_AikMmhWFEeuqcIj4ulwE3w" source="_AikMPBWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMNhWFEeuqcIj4ulwE3w" target="_AikMohWFEeuqcIj4ulwE3w" source="_AikMOhWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMNxWFEeuqcIj4ulwE3w" target="_AikMrxWFEeuqcIj4ulwE3w" source="_AikMPBWFEeuqcIj4ulwE3w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMOBWFEeuqcIj4ulwE3w" target="_AikMtxWFEeuqcIj4ulwE3w" source="_AikMOhWFEeuqcIj4ulwE3w"/>
      <structuredNode xmi:id="_AikMPRWFEeuqcIj4ulwE3w" name="Body(AssertTrue)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMPhWFEeuqcIj4ulwE3w" target="_AikMxRWFEeuqcIj4ulwE3w" source="_AikMvxWFEeuqcIj4ulwE3w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMPxWFEeuqcIj4ulwE3w" target="_AikMxhWFEeuqcIj4ulwE3w" source="_AikMwhWFEeuqcIj4ulwE3w"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_AikMQBWFEeuqcIj4ulwE3w" name="IfStatement@7d0d6586">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikMQRWFEeuqcIj4ulwE3w" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMQhWFEeuqcIj4ulwE3w" target="_AikMUhWFEeuqcIj4ulwE3w" source="_AikMWxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMQxWFEeuqcIj4ulwE3w" target="_AikMXRWFEeuqcIj4ulwE3w" source="_AikMWxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMRBWFEeuqcIj4ulwE3w" target="_AikMYxWFEeuqcIj4ulwE3w" source="_AikMYBWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMRRWFEeuqcIj4ulwE3w" target="_AikMZBWFEeuqcIj4ulwE3w" source="_AikMVRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMRhWFEeuqcIj4ulwE3w" target="_AikMZRWFEeuqcIj4ulwE3w" source="_AikMYxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMRxWFEeuqcIj4ulwE3w" target="_AikMZRWFEeuqcIj4ulwE3w" source="_AikMYxWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMSBWFEeuqcIj4ulwE3w" target="_AikMZBWFEeuqcIj4ulwE3w" source="_AikMZRWFEeuqcIj4ulwE3w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_AikMSRWFEeuqcIj4ulwE3w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMShWFEeuqcIj4ulwE3w" target="_AikMWBWFEeuqcIj4ulwE3w" source="_AikMTRWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMSxWFEeuqcIj4ulwE3w" target="_AikMZxWFEeuqcIj4ulwE3w" source="_AikMZBWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AikMTBWFEeuqcIj4ulwE3w" name="Value(true)">
              <result xmi:id="_AikMTRWFEeuqcIj4ulwE3w" name="Value(true).result" outgoing="_AikMShWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMThWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMTxWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_AikMUBWFEeuqcIj4ulwE3w" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_AikMURWFEeuqcIj4ulwE3w" name="Test(==)">
              <first xmi:id="_AikMUhWFEeuqcIj4ulwE3w" name="Test(==).first" incoming="_AikMQhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMUxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMVBWFEeuqcIj4ulwE3w" value="1"/>
              </first>
              <result xmi:id="_AikMVRWFEeuqcIj4ulwE3w" name="Test(==).result" outgoing="_AikMRRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMVhWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMVxWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <second xmi:id="_AikMWBWFEeuqcIj4ulwE3w" name="Test(==).second" incoming="_AikMShWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMWRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMWhWFEeuqcIj4ulwE3w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AikMWxWFEeuqcIj4ulwE3w" name="Fork(Fork(condition))" incoming="_AikMMxWFEeuqcIj4ulwE3w" outgoing="_AikMQhWFEeuqcIj4ulwE3w _AikMQxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AikMXBWFEeuqcIj4ulwE3w" name="Call(NotEmpty)">
              <argument xmi:id="_AikMXRWFEeuqcIj4ulwE3w" name="Call(NotEmpty).argument(seq)" incoming="_AikMQxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMXhWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMXxWFEeuqcIj4ulwE3w" value="*"/>
              </argument>
              <result xmi:id="_AikMYBWFEeuqcIj4ulwE3w" name="Call(NotEmpty).result()" outgoing="_AikMRBWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMYRWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMYhWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_AikMYxWFEeuqcIj4ulwE3w" name="Fork(Call(NotEmpty).result())" incoming="_AikMRBWFEeuqcIj4ulwE3w" outgoing="_AikMRhWFEeuqcIj4ulwE3w _AikMRxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_AikMZBWFEeuqcIj4ulwE3w" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_AikMRRWFEeuqcIj4ulwE3w _AikMSBWFEeuqcIj4ulwE3w" outgoing="_AikMSxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_AikMZRWFEeuqcIj4ulwE3w" name="Decision(Call(NotEmpty).result())" incoming="_AikMRhWFEeuqcIj4ulwE3w _AikMRxWFEeuqcIj4ulwE3w" outgoing="_AikMSBWFEeuqcIj4ulwE3w" decisionInputFlow="_AikMRxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AikMZhWFEeuqcIj4ulwE3w" name="Call(Not)">
              <argument xmi:id="_AikMZxWFEeuqcIj4ulwE3w" name="Call(Not).argument(x)" incoming="_AikMSxWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMaBWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMaRWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_AikMahWFEeuqcIj4ulwE3w" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMaxWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMbBWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikMbRWFEeuqcIj4ulwE3w" name="ExpressionStatement@313fd7b2">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMbhWFEeuqcIj4ulwE3w" target="_AikMcRWFEeuqcIj4ulwE3w" source="_AikMixWFEeuqcIj4ulwE3w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_AikMbxWFEeuqcIj4ulwE3w" target="_AikMcBWFEeuqcIj4ulwE3w" source="_AikMdxWFEeuqcIj4ulwE3w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_AikMcBWFEeuqcIj4ulwE3w" name="Call(WriteLine)" incoming="_AikMbxWFEeuqcIj4ulwE3w">
              <argument xmi:id="_AikMcRWFEeuqcIj4ulwE3w" name="Call(WriteLine).argument(value)" incoming="_AikMbhWFEeuqcIj4ulwE3w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMchWFEeuqcIj4ulwE3w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMcxWFEeuqcIj4ulwE3w" value="1"/>
              </argument>
              <result xmi:id="_AikMdBWFEeuqcIj4ulwE3w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMdRWFEeuqcIj4ulwE3w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMdhWFEeuqcIj4ulwE3w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikMdxWFEeuqcIj4ulwE3w" name="Tuple@39d4daa5" outgoing="_AikMbxWFEeuqcIj4ulwE3w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMeBWFEeuqcIj4ulwE3w" target="_AikMjxWFEeuqcIj4ulwE3w" source="_AikMfRWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMeRWFEeuqcIj4ulwE3w" target="_AikMkhWFEeuqcIj4ulwE3w" source="_AikMhhWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AikMehWFEeuqcIj4ulwE3w" target="_AikMiRWFEeuqcIj4ulwE3w" source="_AikMfBWFEeuqcIj4ulwE3w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_AikMexWFEeuqcIj4ulwE3w" target="_AikMiRWFEeuqcIj4ulwE3w" source="_AikMgRWFEeuqcIj4ulwE3w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AikMfBWFEeuqcIj4ulwE3w" name="Value(&quot;FAILED: &quot;)" outgoing="_AikMehWFEeuqcIj4ulwE3w">
                <result xmi:id="_AikMfRWFEeuqcIj4ulwE3w" name="Value(&quot;FAILED: &quot;).result" outgoing="_AikMeBWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMfhWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMfxWFEeuqcIj4ulwE3w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_AikMgBWFEeuqcIj4ulwE3w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikMgRWFEeuqcIj4ulwE3w" name="Passthru(Fork(label))" outgoing="_AikMexWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMghWFEeuqcIj4ulwE3w" target="_AikMhhWFEeuqcIj4ulwE3w" source="_AikMgxWFEeuqcIj4ulwE3w"/>
                <structuredNodeInput xmi:id="_AikMgxWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).input" incoming="_AikMNBWFEeuqcIj4ulwE3w" outgoing="_AikMghWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMhBWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMhRWFEeuqcIj4ulwE3w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_AikMhhWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).output" incoming="_AikMghWFEeuqcIj4ulwE3w" outgoing="_AikMeRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMhxWFEeuqcIj4ulwE3w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMiBWFEeuqcIj4ulwE3w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikMiRWFEeuqcIj4ulwE3w" name="Node(Call(Concat))" incoming="_AikMehWFEeuqcIj4ulwE3w _AikMexWFEeuqcIj4ulwE3w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMihWFEeuqcIj4ulwE3w" target="_AikMixWFEeuqcIj4ulwE3w" source="_AikMlRWFEeuqcIj4ulwE3w"/>
                <structuredNodeOutput xmi:id="_AikMixWFEeuqcIj4ulwE3w" name="Output(Call(Concat).result(result))" incoming="_AikMihWFEeuqcIj4ulwE3w" outgoing="_AikMbhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMjBWFEeuqcIj4ulwE3w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMjRWFEeuqcIj4ulwE3w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_AikMjhWFEeuqcIj4ulwE3w" name="Call(Concat)">
                  <argument xmi:id="_AikMjxWFEeuqcIj4ulwE3w" name="Call(Concat).argument(x)" incoming="_AikMeBWFEeuqcIj4ulwE3w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMkBWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMkRWFEeuqcIj4ulwE3w" value="1"/>
                  </argument>
                  <argument xmi:id="_AikMkhWFEeuqcIj4ulwE3w" name="Call(Concat).argument(y)" incoming="_AikMeRWFEeuqcIj4ulwE3w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMkxWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMlBWFEeuqcIj4ulwE3w" value="1"/>
                  </argument>
                  <result xmi:id="_AikMlRWFEeuqcIj4ulwE3w" name="Call(Concat).result(result)" outgoing="_AikMihWFEeuqcIj4ulwE3w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMlhWFEeuqcIj4ulwE3w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMlxWFEeuqcIj4ulwE3w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikMmBWFEeuqcIj4ulwE3w" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMmRWFEeuqcIj4ulwE3w" target="_AikMnRWFEeuqcIj4ulwE3w" source="_AikMmhWFEeuqcIj4ulwE3w"/>
            <structuredNodeInput xmi:id="_AikMmhWFEeuqcIj4ulwE3w" name="Passthru(Fork(condition)).input" incoming="_AikMNRWFEeuqcIj4ulwE3w" outgoing="_AikMmRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMmxWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMnBWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_AikMnRWFEeuqcIj4ulwE3w" name="Passthru(Fork(condition)).output" incoming="_AikMmRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMnhWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMnxWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikMoBWFEeuqcIj4ulwE3w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMoRWFEeuqcIj4ulwE3w" target="_AikMpRWFEeuqcIj4ulwE3w" source="_AikMohWFEeuqcIj4ulwE3w"/>
            <structuredNodeInput xmi:id="_AikMohWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).input" incoming="_AikMNhWFEeuqcIj4ulwE3w" outgoing="_AikMoRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMoxWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMpBWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_AikMpRWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).output" incoming="_AikMoRWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMphWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMpxWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_AikMqBWFEeuqcIj4ulwE3w" name="Value(true)">
            <result xmi:id="_AikMqRWFEeuqcIj4ulwE3w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMqhWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMqxWFEeuqcIj4ulwE3w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_AikMrBWFEeuqcIj4ulwE3w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikMrRWFEeuqcIj4ulwE3w" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMrhWFEeuqcIj4ulwE3w" target="_AikMshWFEeuqcIj4ulwE3w" source="_AikMrxWFEeuqcIj4ulwE3w"/>
            <structuredNodeInput xmi:id="_AikMrxWFEeuqcIj4ulwE3w" name="Passthru(Fork(condition)).input" incoming="_AikMNxWFEeuqcIj4ulwE3w" outgoing="_AikMrhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMsBWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMsRWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_AikMshWFEeuqcIj4ulwE3w" name="Passthru(Fork(condition)).output" incoming="_AikMrhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMsxWFEeuqcIj4ulwE3w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMtBWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_AikMtRWFEeuqcIj4ulwE3w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_AikMthWFEeuqcIj4ulwE3w" target="_AikMuhWFEeuqcIj4ulwE3w" source="_AikMtxWFEeuqcIj4ulwE3w"/>
            <structuredNodeInput xmi:id="_AikMtxWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).input" incoming="_AikMOBWFEeuqcIj4ulwE3w" outgoing="_AikMthWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMuBWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMuRWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_AikMuhWFEeuqcIj4ulwE3w" name="Passthru(Fork(label)).output" incoming="_AikMthWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMuxWFEeuqcIj4ulwE3w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMvBWFEeuqcIj4ulwE3w" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_AikMvRWFEeuqcIj4ulwE3w" body="_AikMbRWFEeuqcIj4ulwE3w _AikMmBWFEeuqcIj4ulwE3w _AikMoBWFEeuqcIj4ulwE3w" bodyOutput="_AikMnRWFEeuqcIj4ulwE3w _AikMpRWFEeuqcIj4ulwE3w" decider="_AikMahWFEeuqcIj4ulwE3w" successorClause="_AikMvhWFEeuqcIj4ulwE3w" test="_AikMQRWFEeuqcIj4ulwE3w"/>
          <clause xmi:id="_AikMvhWFEeuqcIj4ulwE3w" body="_AikMrRWFEeuqcIj4ulwE3w _AikMtRWFEeuqcIj4ulwE3w" bodyOutput="_AikMshWFEeuqcIj4ulwE3w _AikMuhWFEeuqcIj4ulwE3w" decider="_AikMqRWFEeuqcIj4ulwE3w" predecessorClause="_AikMvRWFEeuqcIj4ulwE3w" test="_AikMqBWFEeuqcIj4ulwE3w"/>
          <result xmi:id="_AikMvxWFEeuqcIj4ulwE3w" name="IfStatement@7d0d6586.result(condition)" outgoing="_AikMPhWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMwBWFEeuqcIj4ulwE3w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMwRWFEeuqcIj4ulwE3w" value="1"/>
          </result>
          <result xmi:id="_AikMwhWFEeuqcIj4ulwE3w" name="IfStatement@7d0d6586.result(label)" outgoing="_AikMPxWFEeuqcIj4ulwE3w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AikMwxWFEeuqcIj4ulwE3w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AikMxBWFEeuqcIj4ulwE3w" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_AikMxRWFEeuqcIj4ulwE3w" name="Fork(condition)" incoming="_AikMPhWFEeuqcIj4ulwE3w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_AikMxhWFEeuqcIj4ulwE3w" name="Fork(label)" incoming="_AikMPxWFEeuqcIj4ulwE3w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AikMORWFEeuqcIj4ulwE3w" name="Input(label)" outgoing="_AikMMRWFEeuqcIj4ulwE3w" parameter="_AikMKxWFEeuqcIj4ulwE3w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_AikMOhWFEeuqcIj4ulwE3w" name="Fork(label)" incoming="_AikMMRWFEeuqcIj4ulwE3w" outgoing="_AikMNBWFEeuqcIj4ulwE3w _AikMNhWFEeuqcIj4ulwE3w _AikMOBWFEeuqcIj4ulwE3w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_AikMOxWFEeuqcIj4ulwE3w" name="Input(condition)" outgoing="_AikMMhWFEeuqcIj4ulwE3w" parameter="_AikMLhWFEeuqcIj4ulwE3w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_AikMPBWFEeuqcIj4ulwE3w" name="Fork(condition)" incoming="_AikMMhWFEeuqcIj4ulwE3w" outgoing="_AikMMxWFEeuqcIj4ulwE3w _AikMNRWFEeuqcIj4ulwE3w _AikMNxWFEeuqcIj4ulwE3w"/>
    </packagedElement>
    <profileApplication xmi:id="_AikMxxWFEeuqcIj4ulwE3w">
      <eAnnotations xmi:id="_AikMyBWFEeuqcIj4ulwE3w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_AikMyRWFEeuqcIj4ulwE3w" base_BehavioralFeature="_AijlmRWFEeuqcIj4ulwE3w"/>
  <l2:Destroy xmi:id="_AikMyhWFEeuqcIj4ulwE3w" base_BehavioralFeature="_AijlnRWFEeuqcIj4ulwE3w"/>
  <l2:Destroy xmi:id="_AikMyxWFEeuqcIj4ulwE3w" base_BehavioralFeature="_AijAbxWFEeuqcIj4ulwE3w"/>
  <l2:Create xmi:id="_AikMzBWFEeuqcIj4ulwE3w" base_BehavioralFeature="_AijlAxWFEeuqcIj4ulwE3w"/>
  <l2:Destroy xmi:id="_AikMzRWFEeuqcIj4ulwE3w" base_BehavioralFeature="_AijlARWFEeuqcIj4ulwE3w"/>
  <l2:Create xmi:id="_AikMzhWFEeuqcIj4ulwE3w" base_BehavioralFeature="_AijAWBWFEeuqcIj4ulwE3w"/>
  <l2:Create xmi:id="_AikMzxWFEeuqcIj4ulwE3w" base_BehavioralFeature="_AijAURWFEeuqcIj4ulwE3w"/>
</xmi:XMI>

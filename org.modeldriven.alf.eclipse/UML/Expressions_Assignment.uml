<?xml version="1.1" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_3kqcINXWEem1l5O0R0OWkQ" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_3kqcIdXWEem1l5O0R0OWkQ" name="Expressions_Assignment" visibility="public">
      <packageImport xmi:id="_3kqcItXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_3kqcI9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_3kqcJNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_3kqcJdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_3kqcJtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_3kqcJ9XWEem1l5O0R0OWkQ" general="_3krEYNXWEem1l5O0R0OWkQ"/>
      <ownedAttribute xmi:id="_3kqcKNXWEem1l5O0R0OWkQ" name="Expressions_Assignment$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcKdXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcKtXWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3kqcK9XWEem1l5O0R0OWkQ" name="run$method$1" visibility="private" specification="_3krEQdXWEem1l5O0R0OWkQ" node="_3kqcNdXWEem1l5O0R0OWkQ _3kqcNtXWEem1l5O0R0OWkQ _3kqcN9XWEem1l5O0R0OWkQ _3kqcONXWEem1l5O0R0OWkQ" group="_3kqcONXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_3kqcLNXWEem1l5O0R0OWkQ" name="tester" type="_3krFctXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcLdXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcLtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3kqcL9XWEem1l5O0R0OWkQ" name="" type="_3kqcIdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcMNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcMdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcMtXWEem1l5O0R0OWkQ" target="_3kqcNtXWEem1l5O0R0OWkQ" source="_3kqcNdXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcM9XWEem1l5O0R0OWkQ" target="_3kqcN9XWEem1l5O0R0OWkQ" source="_3kqdI9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcNNXWEem1l5O0R0OWkQ" target="_3kqdLNXWEem1l5O0R0OWkQ" source="_3kqcNtXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_3kqcONXWEem1l5O0R0OWkQ" name="Body(run$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcOdXWEem1l5O0R0OWkQ" target="_3kqdI9XWEem1l5O0R0OWkQ" source="_3kqdINXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcOtXWEem1l5O0R0OWkQ" target="_3kqdM9XWEem1l5O0R0OWkQ" source="_3kqdI9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcO9XWEem1l5O0R0OWkQ" target="_3kqcRdXWEem1l5O0R0OWkQ" source="_3kqdMtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcPNXWEem1l5O0R0OWkQ" target="_3kqdMtXWEem1l5O0R0OWkQ" source="_3kqdJNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcPdXWEem1l5O0R0OWkQ" target="_3kqdN9XWEem1l5O0R0OWkQ" source="_3kqdI9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcPtXWEem1l5O0R0OWkQ" target="_3kqdPtXWEem1l5O0R0OWkQ" source="_3kqdOtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcP9XWEem1l5O0R0OWkQ" target="_3kqdStXWEem1l5O0R0OWkQ" source="_3kqdQdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcQNXWEem1l5O0R0OWkQ" target="_3kqdUNXWEem1l5O0R0OWkQ" source="_3kqdRdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcQdXWEem1l5O0R0OWkQ" target="_3kqdVNXWEem1l5O0R0OWkQ" source="_3kqdU9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcQtXWEem1l5O0R0OWkQ" target="_3kqdVNXWEem1l5O0R0OWkQ" source="_3kqdTdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcQ9XWEem1l5O0R0OWkQ" target="_3kqdJNXWEem1l5O0R0OWkQ" source="_3kqdVNXWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_3kqcRNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqcRdXWEem1l5O0R0OWkQ" name="Body" incoming="_3kqcO9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcRtXWEem1l5O0R0OWkQ" target="_3kqcg9XWEem1l5O0R0OWkQ" source="_3kqcddXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcR9XWEem1l5O0R0OWkQ" target="_3kqce9XWEem1l5O0R0OWkQ" source="_3kqcU9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcSNXWEem1l5O0R0OWkQ" target="_3kqcm9XWEem1l5O0R0OWkQ" source="_3kqcdtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcSdXWEem1l5O0R0OWkQ" target="_3kqclNXWEem1l5O0R0OWkQ" source="_3kqce9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcStXWEem1l5O0R0OWkQ" target="_3kqcrNXWEem1l5O0R0OWkQ" source="_3kqcd9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcS9XWEem1l5O0R0OWkQ" target="_3kqcpNXWEem1l5O0R0OWkQ" source="_3kqclNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcTNXWEem1l5O0R0OWkQ" target="_3kqcxdXWEem1l5O0R0OWkQ" source="_3kqceNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcTdXWEem1l5O0R0OWkQ" target="_3kqcvdXWEem1l5O0R0OWkQ" source="_3kqcpNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcTtXWEem1l5O0R0OWkQ" target="_3kqc8dXWEem1l5O0R0OWkQ" source="_3kqcedXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcT9XWEem1l5O0R0OWkQ" target="_3kqc1tXWEem1l5O0R0OWkQ" source="_3kqcvdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcUNXWEem1l5O0R0OWkQ" target="_3kqdBNXWEem1l5O0R0OWkQ" source="_3kqcetXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcUdXWEem1l5O0R0OWkQ" target="_3kqc_NXWEem1l5O0R0OWkQ" source="_3kqc1tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcUtXWEem1l5O0R0OWkQ" target="_3kqdFdXWEem1l5O0R0OWkQ" source="_3kqc_NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqcU9XWEem1l5O0R0OWkQ" name="ExpressionStatement@6359c1db" outgoing="_3kqcR9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcVNXWEem1l5O0R0OWkQ" target="_3kqcddXWEem1l5O0R0OWkQ" source="_3kqcXNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcVdXWEem1l5O0R0OWkQ" target="_3kqcdtXWEem1l5O0R0OWkQ" source="_3kqcX9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcVtXWEem1l5O0R0OWkQ" target="_3kqcd9XWEem1l5O0R0OWkQ" source="_3kqcYtXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcV9XWEem1l5O0R0OWkQ" target="_3kqceNXWEem1l5O0R0OWkQ" source="_3kqcZdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcWNXWEem1l5O0R0OWkQ" target="_3kqcedXWEem1l5O0R0OWkQ" source="_3kqcaNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcWdXWEem1l5O0R0OWkQ" target="_3kqcetXWEem1l5O0R0OWkQ" source="_3kqca9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcWtXWEem1l5O0R0OWkQ" target="_3kqcbtXWEem1l5O0R0OWkQ" source="_3kqcctXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_3kqcW9XWEem1l5O0R0OWkQ" name="Call(test)" operation="_3krETNXWEem1l5O0R0OWkQ">
                <result xmi:id="_3kqcXNXWEem1l5O0R0OWkQ" name="Call(test).result(i)" outgoing="_3kqcVNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcXdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcXtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_3kqcX9XWEem1l5O0R0OWkQ" name="Call(test).result(f)" outgoing="_3kqcVdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcYNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcYdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_3kqcYtXWEem1l5O0R0OWkQ" name="Call(test).result(h)" outgoing="_3kqcVtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcY9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcZNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_3kqcZdXWEem1l5O0R0OWkQ" name="Call(test).result(filename)" outgoing="_3kqcV9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcZtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcZ9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_3kqcaNXWEem1l5O0R0OWkQ" name="Call(test).result(s)" outgoing="_3kqcWNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcadXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcatXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <result xmi:id="_3kqca9XWEem1l5O0R0OWkQ" name="Call(test).result(a)" outgoing="_3kqcWdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcbNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcbdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <target xmi:id="_3kqcbtXWEem1l5O0R0OWkQ" name="Call(test).target" incoming="_3kqcWtXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcb9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqccNXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_3kqccdXWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_3kqcctXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_3kqcWtXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcc9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcdNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_3kqcddXWEem1l5O0R0OWkQ" name="Fork(i)@5fdb687b" incoming="_3kqcVNXWEem1l5O0R0OWkQ" outgoing="_3kqcRtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_3kqcdtXWEem1l5O0R0OWkQ" name="Fork(f)@7d3f8f09" incoming="_3kqcVdXWEem1l5O0R0OWkQ" outgoing="_3kqcSNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_3kqcd9XWEem1l5O0R0OWkQ" name="Fork(h)@147312a5" incoming="_3kqcVtXWEem1l5O0R0OWkQ" outgoing="_3kqcStXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_3kqceNXWEem1l5O0R0OWkQ" name="Fork(filename)@10ef28e0" incoming="_3kqcV9XWEem1l5O0R0OWkQ" outgoing="_3kqcTNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_3kqcedXWEem1l5O0R0OWkQ" name="Fork(s)@1ecad7dd" incoming="_3kqcWNXWEem1l5O0R0OWkQ" outgoing="_3kqcTtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_3kqcetXWEem1l5O0R0OWkQ" name="Fork(a)@1f8c44ca" incoming="_3kqcWdXWEem1l5O0R0OWkQ" outgoing="_3kqcUNXWEem1l5O0R0OWkQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqce9XWEem1l5O0R0OWkQ" name="ExpressionStatement@4de3f95e" incoming="_3kqcR9XWEem1l5O0R0OWkQ" outgoing="_3kqcSdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcfNXWEem1l5O0R0OWkQ" target="_3kqcgNXWEem1l5O0R0OWkQ" source="_3kqci9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcfdXWEem1l5O0R0OWkQ" target="_3kqchtXWEem1l5O0R0OWkQ" source="_3kqckNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcftXWEem1l5O0R0OWkQ" target="_3kqcf9XWEem1l5O0R0OWkQ" source="_3kqcidXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqcf9XWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_3kqcftXWEem1l5O0R0OWkQ" behavior="_3krGBNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_3kqcgNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_3kqcfNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcgdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcgtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_3kqcg9XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_3kqcRtXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqchNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqchdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_3kqchtXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_3kqcfdXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqch9XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqciNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqcidXWEem1l5O0R0OWkQ" name="Tuple@6370a226" outgoing="_3kqcftXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqcitXWEem1l5O0R0OWkQ" name="Value(&quot;i&quot;)">
                  <result xmi:id="_3kqci9XWEem1l5O0R0OWkQ" name="Value(&quot;i&quot;).result" outgoing="_3kqcfNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcjNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcjdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3kqcjtXWEem1l5O0R0OWkQ" value="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqcj9XWEem1l5O0R0OWkQ" name="Value(5)">
                  <result xmi:id="_3kqckNXWEem1l5O0R0OWkQ" name="Value(5).result" outgoing="_3kqcfdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqckdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcktXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_3kqck9XWEem1l5O0R0OWkQ" value="5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqclNXWEem1l5O0R0OWkQ" name="ExpressionStatement@34613814" incoming="_3kqcSdXWEem1l5O0R0OWkQ" outgoing="_3kqcS9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcldXWEem1l5O0R0OWkQ" target="_3kqcmNXWEem1l5O0R0OWkQ" source="_3kqcoNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcltXWEem1l5O0R0OWkQ" target="_3kqcl9XWEem1l5O0R0OWkQ" source="_3kqcntXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqcl9XWEem1l5O0R0OWkQ" name="Call(AssertFalse)" incoming="_3kqcltXWEem1l5O0R0OWkQ" behavior="_3krrQNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_3kqcmNXWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(label)" incoming="_3kqcldXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcmdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcmtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_3kqcm9XWEem1l5O0R0OWkQ" name="Call(AssertFalse).argument(condition)" incoming="_3kqcSNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcnNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcndXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqcntXWEem1l5O0R0OWkQ" name="Tuple@56a35f13" outgoing="_3kqcltXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqcn9XWEem1l5O0R0OWkQ" name="Value(&quot;f&quot;)">
                  <result xmi:id="_3kqcoNXWEem1l5O0R0OWkQ" name="Value(&quot;f&quot;).result" outgoing="_3kqcldXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcodXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcotXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3kqco9XWEem1l5O0R0OWkQ" value="f">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqcpNXWEem1l5O0R0OWkQ" name="ExpressionStatement@4dbde008" incoming="_3kqcS9XWEem1l5O0R0OWkQ" outgoing="_3kqcTdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcpdXWEem1l5O0R0OWkQ" target="_3kqcqdXWEem1l5O0R0OWkQ" source="_3kqctNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcptXWEem1l5O0R0OWkQ" target="_3kqcr9XWEem1l5O0R0OWkQ" source="_3kqcudXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcp9XWEem1l5O0R0OWkQ" target="_3kqcqNXWEem1l5O0R0OWkQ" source="_3kqcstXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqcqNXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_3kqcp9XWEem1l5O0R0OWkQ" behavior="_3krGBNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_3kqcqdXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_3kqcpdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcqtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcq9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_3kqcrNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_3kqcStXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcrdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcrtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_3kqcr9XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_3kqcptXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcsNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcsdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqcstXWEem1l5O0R0OWkQ" name="Tuple@1eafae72" outgoing="_3kqcp9XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqcs9XWEem1l5O0R0OWkQ" name="Value(&quot;h&quot;)">
                  <result xmi:id="_3kqctNXWEem1l5O0R0OWkQ" name="Value(&quot;h&quot;).result" outgoing="_3kqcpdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqctdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcttXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3kqct9XWEem1l5O0R0OWkQ" value="h">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqcuNXWEem1l5O0R0OWkQ" name="Value(85)">
                  <result xmi:id="_3kqcudXWEem1l5O0R0OWkQ" name="Value(85).result" outgoing="_3kqcptXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcutXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcu9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_3kqcvNXWEem1l5O0R0OWkQ" value="85">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqcvdXWEem1l5O0R0OWkQ" name="ExpressionStatement@251dd4f5" incoming="_3kqcTdXWEem1l5O0R0OWkQ" outgoing="_3kqcT9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcvtXWEem1l5O0R0OWkQ" target="_3kqcwtXWEem1l5O0R0OWkQ" source="_3kqczdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqcv9XWEem1l5O0R0OWkQ" target="_3kqcyNXWEem1l5O0R0OWkQ" source="_3kqc0tXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3kqcwNXWEem1l5O0R0OWkQ" target="_3kqcwdXWEem1l5O0R0OWkQ" source="_3kqcy9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqcwdXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_3kqcwNXWEem1l5O0R0OWkQ" behavior="_3krGBNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_3kqcwtXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_3kqcvtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcw9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcxNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_3kqcxdXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_3kqcTNXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcxtXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcx9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_3kqcyNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_3kqcv9XWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcydXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcytXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqcy9XWEem1l5O0R0OWkQ" name="Tuple@576f423" outgoing="_3kqcwNXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqczNXWEem1l5O0R0OWkQ" name="Value(&quot;filename&quot;)">
                  <result xmi:id="_3kqczdXWEem1l5O0R0OWkQ" name="Value(&quot;filename&quot;).result" outgoing="_3kqcvtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqcztXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqcz9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3kqc0NXWEem1l5O0R0OWkQ" value="filename">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqc0dXWEem1l5O0R0OWkQ" name="Value(&quot;xyz.doc&quot;)">
                  <result xmi:id="_3kqc0tXWEem1l5O0R0OWkQ" name="Value(&quot;xyz.doc&quot;).result" outgoing="_3kqcv9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqc09XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqc1NXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3kqc1dXWEem1l5O0R0OWkQ" value="xyz.doc">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqc1tXWEem1l5O0R0OWkQ" name="ExpressionStatement@432aedea" incoming="_3kqcT9XWEem1l5O0R0OWkQ" outgoing="_3kqcUdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqc19XWEem1l5O0R0OWkQ" target="_3kqc3NXWEem1l5O0R0OWkQ" source="_3kqc59XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqc2NXWEem1l5O0R0OWkQ" target="_3kqc39XWEem1l5O0R0OWkQ" source="_3kqc7dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqc2dXWEem1l5O0R0OWkQ" target="_3kqc4tXWEem1l5O0R0OWkQ" source="_3kqc-NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3kqc2tXWEem1l5O0R0OWkQ" target="_3kqc29XWEem1l5O0R0OWkQ" source="_3kqc5dXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqc29XWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_3kqc2tXWEem1l5O0R0OWkQ" behavior="_3krGBNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_3kqc3NXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_3kqc19XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqc3dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqc3tXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_3kqc39XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_3kqc2NXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqc4NXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqc4dXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_3kqc4tXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_3kqc2dXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqc49XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqc5NXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqc5dXWEem1l5O0R0OWkQ" name="Tuple@51fb3929" outgoing="_3kqc2tXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqc5tXWEem1l5O0R0OWkQ" name="Value(&quot;Size(s)&quot;)">
                  <result xmi:id="_3kqc59XWEem1l5O0R0OWkQ" name="Value(&quot;Size(s)&quot;).result" outgoing="_3kqc19XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqc6NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqc6dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3kqc6tXWEem1l5O0R0OWkQ" value="Size(s)">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqc69XWEem1l5O0R0OWkQ" name="Node(Call(Size))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqc7NXWEem1l5O0R0OWkQ" target="_3kqc7dXWEem1l5O0R0OWkQ" source="_3kqc9NXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_3kqc7dXWEem1l5O0R0OWkQ" name="Output(Call(Size).result(result))" incoming="_3kqc7NXWEem1l5O0R0OWkQ" outgoing="_3kqc2NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqc7tXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqc79XWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqc8NXWEem1l5O0R0OWkQ" name="Call(Size)">
                    <argument xmi:id="_3kqc8dXWEem1l5O0R0OWkQ" name="Call(Size).argument(x)" incoming="_3kqcTtXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqc8tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqc89XWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_3kqc9NXWEem1l5O0R0OWkQ" name="Call(Size).result(result)" outgoing="_3kqc7NXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqc9dXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqc9tXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Size"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqc99XWEem1l5O0R0OWkQ" name="Value(7)">
                  <result xmi:id="_3kqc-NXWEem1l5O0R0OWkQ" name="Value(7).result" outgoing="_3kqc2dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqc-dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqc-tXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_3kqc-9XWEem1l5O0R0OWkQ" value="7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqc_NXWEem1l5O0R0OWkQ" name="ExpressionStatement@1eb01211" incoming="_3kqcUdXWEem1l5O0R0OWkQ" outgoing="_3kqcUtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqc_dXWEem1l5O0R0OWkQ" target="_3kqdAdXWEem1l5O0R0OWkQ" source="_3kqdDNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqc_tXWEem1l5O0R0OWkQ" target="_3kqdB9XWEem1l5O0R0OWkQ" source="_3kqdEdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3kqc_9XWEem1l5O0R0OWkQ" target="_3kqdANXWEem1l5O0R0OWkQ" source="_3kqdCtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqdANXWEem1l5O0R0OWkQ" name="Call(AssertEqual)" incoming="_3kqc_9XWEem1l5O0R0OWkQ" behavior="_3krGBNXWEem1l5O0R0OWkQ">
                <argument xmi:id="_3kqdAdXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(label)" incoming="_3kqc_dXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdAtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdA9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_3kqdBNXWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value1)" incoming="_3kqcUNXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdBdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdBtXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_3kqdB9XWEem1l5O0R0OWkQ" name="Call(AssertEqual).argument(value2)" incoming="_3kqc_tXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdCNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdCdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqdCtXWEem1l5O0R0OWkQ" name="Tuple@2e2a6809" outgoing="_3kqc_9XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqdC9XWEem1l5O0R0OWkQ" name="Value(&quot;a&quot;)">
                  <result xmi:id="_3kqdDNXWEem1l5O0R0OWkQ" name="Value(&quot;a&quot;).result" outgoing="_3kqc_dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdDdXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdDtXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3kqdD9XWEem1l5O0R0OWkQ" value="a">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqdENXWEem1l5O0R0OWkQ" name="Value(2)">
                  <result xmi:id="_3kqdEdXWEem1l5O0R0OWkQ" name="Value(2).result" outgoing="_3kqc_tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdEtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdE9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_3kqdFNXWEem1l5O0R0OWkQ" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqdFdXWEem1l5O0R0OWkQ" name="ExpressionStatement@1fc8a0f2" incoming="_3kqcUtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdFtXWEem1l5O0R0OWkQ" target="_3kqdGNXWEem1l5O0R0OWkQ" source="_3kqdHNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_3kqdF9XWEem1l5O0R0OWkQ" name="Call(done)" operation="_3krFZtXWEem1l5O0R0OWkQ">
                <target xmi:id="_3kqdGNXWEem1l5O0R0OWkQ" name="Call(done).target" incoming="_3kqdFtXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdGdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdGtXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_3kqdG9XWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_3kqdHNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_3kqdFtXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdHdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdHtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_3kqdH9XWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_3kqdINXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_3kqcOdXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdIdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdItXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_3kqdI9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_3kqcOdXWEem1l5O0R0OWkQ" outgoing="_3kqcM9XWEem1l5O0R0OWkQ _3kqcOtXWEem1l5O0R0OWkQ _3kqcPdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqdJNXWEem1l5O0R0OWkQ" name="Super" incoming="_3kqcQ9XWEem1l5O0R0OWkQ" outgoing="_3kqcPNXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqdJdXWEem1l5O0R0OWkQ" name="ExpressionStatement@38fef44c">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqdJtXWEem1l5O0R0OWkQ" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdJ9XWEem1l5O0R0OWkQ" target="_3kqdKNXWEem1l5O0R0OWkQ" source="_3kqdL9XWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_3kqdKNXWEem1l5O0R0OWkQ" name="Output(Call(Test$method$1).result())" incoming="_3kqdJ9XWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdKdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdKtXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqdK9XWEem1l5O0R0OWkQ" name="Call(Test$method$1)" behavior="_3krEhdXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_3kqdLNXWEem1l5O0R0OWkQ" name="Call(Test$method$1).argument(tester)" incoming="_3kqcNNXWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdLdXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdLtXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_3kqdL9XWEem1l5O0R0OWkQ" name="Call(Test$method$1).result()" outgoing="_3kqdJ9XWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdMNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdMdXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_3kqdMtXWEem1l5O0R0OWkQ" name="Call(Expressions_Assignment$initialization$1)" incoming="_3kqcPNXWEem1l5O0R0OWkQ" outgoing="_3kqcO9XWEem1l5O0R0OWkQ" operation="_3krEQNXWEem1l5O0R0OWkQ">
            <target xmi:id="_3kqdM9XWEem1l5O0R0OWkQ" name="Call(Expressions_Assignment$initialization$1).target" incoming="_3kqcOtXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdNNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdNdXWEem1l5O0R0OWkQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3kqdNtXWEem1l5O0R0OWkQ" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_3kqcKNXWEem1l5O0R0OWkQ">
            <object xmi:id="_3kqdN9XWEem1l5O0R0OWkQ" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_3kqcPdXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdONXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdOdXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_3kqdOtXWEem1l5O0R0OWkQ" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_3kqcPtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdO9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdPNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqdPdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_3kqdPtXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_3kqcPtXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdP9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdQNXWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_3kqdQdXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_3kqcP9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdQtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdQ9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqdRNXWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_3kqdRdXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_3kqcQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdRtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdR9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_3kqdSNXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_3kqdSdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_3kqdStXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_3kqcP9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdS9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdTNXWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_3kqdTdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_3kqcQtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdTtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdT9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_3kqdUNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_3kqcQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdUdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdUtXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_3kqdU9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_3kqcQdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_3kqdVNXWEem1l5O0R0OWkQ" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" incoming="_3kqcQdXWEem1l5O0R0OWkQ _3kqcQtXWEem1l5O0R0OWkQ" outgoing="_3kqcQ9XWEem1l5O0R0OWkQ" decisionInputFlow="_3kqcQtXWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3kqcNdXWEem1l5O0R0OWkQ" name="Input(tester)" outgoing="_3kqcMtXWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" parameter="_3kqcLNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_3kqcNtXWEem1l5O0R0OWkQ" name="Fork(tester)" incoming="_3kqcMtXWEem1l5O0R0OWkQ" outgoing="_3kqcNNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3kqcN9XWEem1l5O0R0OWkQ" name="Return" incoming="_3kqcM9XWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" parameter="_3kqcL9XWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3kqdVdXWEem1l5O0R0OWkQ" name="Expressions_Assignment$method$1" visibility="private" specification="_3krESNXWEem1l5O0R0OWkQ" node="_3kqdWtXWEem1l5O0R0OWkQ _3kqdW9XWEem1l5O0R0OWkQ" group="_3kqdW9XWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_3kqdVtXWEem1l5O0R0OWkQ" name="" type="_3kqcIdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdV9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdWNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdWdXWEem1l5O0R0OWkQ" target="_3kqdWtXWEem1l5O0R0OWkQ" source="_3kqdhNXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_3kqdW9XWEem1l5O0R0OWkQ" name="Body(Expressions_Assignment$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdXNXWEem1l5O0R0OWkQ" target="_3kqdhNXWEem1l5O0R0OWkQ" source="_3kqdgdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqdXdXWEem1l5O0R0OWkQ" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqdXtXWEem1l5O0R0OWkQ" name="ExpressionStatement@57d6396f">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdX9XWEem1l5O0R0OWkQ" target="_3kqdd9XWEem1l5O0R0OWkQ" source="_3kqdZdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdYNXWEem1l5O0R0OWkQ" target="_3kqddtXWEem1l5O0R0OWkQ" source="_3kqdY9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdYdXWEem1l5O0R0OWkQ" target="_3kqdcNXWEem1l5O0R0OWkQ" source="_3kqdatXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdYtXWEem1l5O0R0OWkQ" target="_3kqdbdXWEem1l5O0R0OWkQ" source="_3kqdY9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqdY9XWEem1l5O0R0OWkQ" name="Tuple@f799d8b" outgoing="_3kqdYNXWEem1l5O0R0OWkQ _3kqdYtXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqdZNXWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_3kqdZdXWEem1l5O0R0OWkQ" name="Value(null).result" outgoing="_3kqdX9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdZtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdZ9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_3kqdaNXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_3kqdadXWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_3kqdatXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_3kqdYdXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqda9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdbNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqdbdXWEem1l5O0R0OWkQ" name="Node(Call(run))" incoming="_3kqdYtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdbtXWEem1l5O0R0OWkQ" target="_3kqdc9XWEem1l5O0R0OWkQ" source="_3kqdetXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdb9XWEem1l5O0R0OWkQ" target="_3kqdfdXWEem1l5O0R0OWkQ" source="_3kqdcNXWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_3kqdcNXWEem1l5O0R0OWkQ" name="Input(Call(run).target)" incoming="_3kqdYdXWEem1l5O0R0OWkQ" outgoing="_3kqdb9XWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdcdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdctXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_3kqdc9XWEem1l5O0R0OWkQ" name="Output(Call(run).result())" incoming="_3kqdbtXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqddNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdddXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_3kqddtXWEem1l5O0R0OWkQ" name="Call(run)" incoming="_3kqdYNXWEem1l5O0R0OWkQ" operation="_3krEQdXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_3kqdd9XWEem1l5O0R0OWkQ" name="Call(run).argument(tester)" incoming="_3kqdX9XWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdeNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdedXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_3kqdetXWEem1l5O0R0OWkQ" name="Call(run).result()" outgoing="_3kqdbtXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqde9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdfNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <target xmi:id="_3kqdfdXWEem1l5O0R0OWkQ" name="Call(run).target" incoming="_3kqdb9XWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdftXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdf9XWEem1l5O0R0OWkQ" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_3kqdgNXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_3kqdgdXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_3kqdXNXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdgtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdg9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_3kqdhNXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_3kqdXNXWEem1l5O0R0OWkQ" outgoing="_3kqdWdXWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3kqdWtXWEem1l5O0R0OWkQ" name="Return" incoming="_3kqdWdXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" parameter="_3kqdVtXWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3kqdhdXWEem1l5O0R0OWkQ" name="test$method$1" visibility="private" specification="_3krETNXWEem1l5O0R0OWkQ" node="_3kqdntXWEem1l5O0R0OWkQ _3kqdn9XWEem1l5O0R0OWkQ _3kqdoNXWEem1l5O0R0OWkQ _3kqdodXWEem1l5O0R0OWkQ _3kqdotXWEem1l5O0R0OWkQ _3kqdo9XWEem1l5O0R0OWkQ _3kqdpNXWEem1l5O0R0OWkQ" group="_3kqdpNXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_3kqdhtXWEem1l5O0R0OWkQ" name="i" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdh9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdiNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3kqdidXWEem1l5O0R0OWkQ" name="f" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqditXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdi9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3kqdjNXWEem1l5O0R0OWkQ" name="h" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdjdXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdjtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3kqdj9XWEem1l5O0R0OWkQ" name="filename" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdkNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdkdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3kqdktXWEem1l5O0R0OWkQ" name="s" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdk9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdlNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3kqdldXWEem1l5O0R0OWkQ" name="a" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqdltXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqdl9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdmNXWEem1l5O0R0OWkQ" target="_3kqdntXWEem1l5O0R0OWkQ" source="_3kqd2tXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdmdXWEem1l5O0R0OWkQ" target="_3kqdn9XWEem1l5O0R0OWkQ" source="_3kqd3dXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdmtXWEem1l5O0R0OWkQ" target="_3kqdoNXWEem1l5O0R0OWkQ" source="_3kqd4NXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdm9XWEem1l5O0R0OWkQ" target="_3kqdodXWEem1l5O0R0OWkQ" source="_3kqd49XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdnNXWEem1l5O0R0OWkQ" target="_3kqdotXWEem1l5O0R0OWkQ" source="_3kqd5tXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdndXWEem1l5O0R0OWkQ" target="_3kqdo9XWEem1l5O0R0OWkQ" source="_3kqd6dXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_3kqdpNXWEem1l5O0R0OWkQ" name="Body(test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdpdXWEem1l5O0R0OWkQ" target="_3kqd-dXWEem1l5O0R0OWkQ" source="_3kqd7tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdptXWEem1l5O0R0OWkQ" target="_3kqd9dXWEem1l5O0R0OWkQ" source="_3kqd7NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdp9XWEem1l5O0R0OWkQ" target="_3kqeDdXWEem1l5O0R0OWkQ" source="_3kqeAtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdqNXWEem1l5O0R0OWkQ" target="_3kqeCdXWEem1l5O0R0OWkQ" source="_3kqd9dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdqdXWEem1l5O0R0OWkQ" target="_3kqeIdXWEem1l5O0R0OWkQ" source="_3kqeFtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdqtXWEem1l5O0R0OWkQ" target="_3kqeHdXWEem1l5O0R0OWkQ" source="_3kqeCdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdq9XWEem1l5O0R0OWkQ" target="_3kqeNdXWEem1l5O0R0OWkQ" source="_3kqeKtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdrNXWEem1l5O0R0OWkQ" target="_3kqeMdXWEem1l5O0R0OWkQ" source="_3kqeHdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdrdXWEem1l5O0R0OWkQ" target="_3kqeSdXWEem1l5O0R0OWkQ" source="_3kqePtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdrtXWEem1l5O0R0OWkQ" target="_3kqeRdXWEem1l5O0R0OWkQ" source="_3kqeMdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdr9XWEem1l5O0R0OWkQ" target="_3kqeXdXWEem1l5O0R0OWkQ" source="_3kqeUtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdsNXWEem1l5O0R0OWkQ" target="_3kqeWdXWEem1l5O0R0OWkQ" source="_3kqeRdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdsdXWEem1l5O0R0OWkQ" target="_3kqebdXWEem1l5O0R0OWkQ" source="_3kqeWdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdstXWEem1l5O0R0OWkQ" target="_3kqeetXWEem1l5O0R0OWkQ" source="_3kqeb9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqds9XWEem1l5O0R0OWkQ" target="_3kqedtXWEem1l5O0R0OWkQ" source="_3kqebdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdtNXWEem1l5O0R0OWkQ" target="_3kqejtXWEem1l5O0R0OWkQ" source="_3kqeg9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdtdXWEem1l5O0R0OWkQ" target="_3kqeitXWEem1l5O0R0OWkQ" source="_3kqedtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdttXWEem1l5O0R0OWkQ" target="_3kqeotXWEem1l5O0R0OWkQ" source="_3kqel9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdt9XWEem1l5O0R0OWkQ" target="_3kqentXWEem1l5O0R0OWkQ" source="_3kqeitXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqduNXWEem1l5O0R0OWkQ" target="_3kqestXWEem1l5O0R0OWkQ" source="_3kqentXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdudXWEem1l5O0R0OWkQ" target="_3kqe2NXWEem1l5O0R0OWkQ" source="_3kqestXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdutXWEem1l5O0R0OWkQ" target="_3kqe7dXWEem1l5O0R0OWkQ" source="_3kqe2tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdu9XWEem1l5O0R0OWkQ" target="_3kqe6dXWEem1l5O0R0OWkQ" source="_3kqe2NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdvNXWEem1l5O0R0OWkQ" target="_3kqfCdXWEem1l5O0R0OWkQ" source="_3kqe9tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdvdXWEem1l5O0R0OWkQ" target="_3kqfBdXWEem1l5O0R0OWkQ" source="_3kqe6dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdvtXWEem1l5O0R0OWkQ" target="_3kqfJdXWEem1l5O0R0OWkQ" source="_3kqfEtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdv9XWEem1l5O0R0OWkQ" target="_3kqfIdXWEem1l5O0R0OWkQ" source="_3kqfBdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdwNXWEem1l5O0R0OWkQ" target="_3krDQNXWEem1l5O0R0OWkQ" source="_3kqfLtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdwdXWEem1l5O0R0OWkQ" target="_3krDPNXWEem1l5O0R0OWkQ" source="_3kqfIdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdwtXWEem1l5O0R0OWkQ" target="_3krDVNXWEem1l5O0R0OWkQ" source="_3krDSdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdw9XWEem1l5O0R0OWkQ" target="_3krDUNXWEem1l5O0R0OWkQ" source="_3krDPNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdxNXWEem1l5O0R0OWkQ" target="_3krDaNXWEem1l5O0R0OWkQ" source="_3krDXdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdxdXWEem1l5O0R0OWkQ" target="_3krDZNXWEem1l5O0R0OWkQ" source="_3krDUNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdxtXWEem1l5O0R0OWkQ" target="_3krDeNXWEem1l5O0R0OWkQ" source="_3krDZNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdx9XWEem1l5O0R0OWkQ" target="_3krDhdXWEem1l5O0R0OWkQ" source="_3krDetXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdyNXWEem1l5O0R0OWkQ" target="_3krDgdXWEem1l5O0R0OWkQ" source="_3krDeNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdydXWEem1l5O0R0OWkQ" target="_3krDldXWEem1l5O0R0OWkQ" source="_3krDgdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdytXWEem1l5O0R0OWkQ" target="_3krDntXWEem1l5O0R0OWkQ" source="_3krDldXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdy9XWEem1l5O0R0OWkQ" target="_3krDq9XWEem1l5O0R0OWkQ" source="_3krDoNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdzNXWEem1l5O0R0OWkQ" target="_3krDp9XWEem1l5O0R0OWkQ" source="_3krDntXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqdzdXWEem1l5O0R0OWkQ" target="_3krDu9XWEem1l5O0R0OWkQ" source="_3krDp9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdztXWEem1l5O0R0OWkQ" target="_3krDx9XWEem1l5O0R0OWkQ" source="_3krDvdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqdz9XWEem1l5O0R0OWkQ" target="_3krDytXWEem1l5O0R0OWkQ" source="_3kqeZtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqd0NXWEem1l5O0R0OWkQ" target="_3krDxNXWEem1l5O0R0OWkQ" source="_3krDu9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqd0dXWEem1l5O0R0OWkQ" target="_3krD0tXWEem1l5O0R0OWkQ" source="_3krDxNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqd0tXWEem1l5O0R0OWkQ" target="_3krD39XWEem1l5O0R0OWkQ" source="_3krD1NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3kqd09XWEem1l5O0R0OWkQ" target="_3krD29XWEem1l5O0R0OWkQ" source="_3krD0tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqd1NXWEem1l5O0R0OWkQ" target="_3kqd2tXWEem1l5O0R0OWkQ" source="_3kqeZtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqd1dXWEem1l5O0R0OWkQ" target="_3kqd3dXWEem1l5O0R0OWkQ" source="_3kqeq9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqd1tXWEem1l5O0R0OWkQ" target="_3kqd4NXWEem1l5O0R0OWkQ" source="_3krDcdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqd19XWEem1l5O0R0OWkQ" target="_3kqd49XWEem1l5O0R0OWkQ" source="_3krDjtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqd2NXWEem1l5O0R0OWkQ" target="_3kqd5tXWEem1l5O0R0OWkQ" source="_3krDl9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqd2dXWEem1l5O0R0OWkQ" target="_3kqd6dXWEem1l5O0R0OWkQ" source="_3krD6NXWEem1l5O0R0OWkQ"/>
          <structuredNodeOutput xmi:id="_3kqd2tXWEem1l5O0R0OWkQ" name="Output(i)" incoming="_3kqd1NXWEem1l5O0R0OWkQ" outgoing="_3kqdmNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqd29XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqd3NXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_3kqd3dXWEem1l5O0R0OWkQ" name="Output(f)" incoming="_3kqd1dXWEem1l5O0R0OWkQ" outgoing="_3kqdmdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqd3tXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqd39XWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_3kqd4NXWEem1l5O0R0OWkQ" name="Output(h)" incoming="_3kqd1tXWEem1l5O0R0OWkQ" outgoing="_3kqdmtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqd4dXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqd4tXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_3kqd49XWEem1l5O0R0OWkQ" name="Output(filename)" incoming="_3kqd19XWEem1l5O0R0OWkQ" outgoing="_3kqdm9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqd5NXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqd5dXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_3kqd5tXWEem1l5O0R0OWkQ" name="Output(s)" incoming="_3kqd2NXWEem1l5O0R0OWkQ" outgoing="_3kqdnNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqd59XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqd6NXWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_3kqd6dXWEem1l5O0R0OWkQ" name="Output(a)" incoming="_3kqd2dXWEem1l5O0R0OWkQ" outgoing="_3kqdndXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqd6tXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqd69XWEem1l5O0R0OWkQ" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqd7NXWEem1l5O0R0OWkQ" name="ExpressionStatement@7b0d1fed" outgoing="_3kqdptXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqd7dXWEem1l5O0R0OWkQ" target="_3kqd7tXWEem1l5O0R0OWkQ" source="_3kqd8dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqd7tXWEem1l5O0R0OWkQ" name="Fork(i)@7791f607" incoming="_3kqd7dXWEem1l5O0R0OWkQ" outgoing="_3kqdpdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqd79XWEem1l5O0R0OWkQ" name="RightHandSide@32af37b0">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqd8NXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3kqd8dXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3kqd7dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqd8tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqd89XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3kqd9NXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqd9dXWEem1l5O0R0OWkQ" name="ExpressionStatement@3b499332" incoming="_3kqdptXWEem1l5O0R0OWkQ" outgoing="_3kqdqNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqd9tXWEem1l5O0R0OWkQ" target="_3kqd_NXWEem1l5O0R0OWkQ" source="_3kqeBdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqd99XWEem1l5O0R0OWkQ" target="_3kqeAtXWEem1l5O0R0OWkQ" source="_3kqd_9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqd-NXWEem1l5O0R0OWkQ" name="Call(+)">
              <argument xmi:id="_3kqd-dXWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_3kqdpdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqd-tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqd-9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3kqd_NXWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_3kqd9tXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqd_dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqd_tXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3kqd_9XWEem1l5O0R0OWkQ" name="Call(+).result(result)" outgoing="_3kqd99XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeANXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeAdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqeAtXWEem1l5O0R0OWkQ" name="Fork(i)@4a760c0a" incoming="_3kqd99XWEem1l5O0R0OWkQ" outgoing="_3kqdp9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqeA9XWEem1l5O0R0OWkQ" name="RightHandSide@218b98b7">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqeBNXWEem1l5O0R0OWkQ" name="Value(4)">
                <result xmi:id="_3kqeBdXWEem1l5O0R0OWkQ" name="Value(4).result" outgoing="_3kqd9tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeBtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeB9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3kqeCNXWEem1l5O0R0OWkQ" value="4">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqeCdXWEem1l5O0R0OWkQ" name="ExpressionStatement@65d9deef" incoming="_3kqdqNXWEem1l5O0R0OWkQ" outgoing="_3kqdqtXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqeCtXWEem1l5O0R0OWkQ" target="_3kqeENXWEem1l5O0R0OWkQ" source="_3kqeGdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqeC9XWEem1l5O0R0OWkQ" target="_3kqeFtXWEem1l5O0R0OWkQ" source="_3kqeE9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqeDNXWEem1l5O0R0OWkQ" name="Call(+)">
              <argument xmi:id="_3kqeDdXWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_3kqdp9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeDtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeD9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3kqeENXWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_3kqeCtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeEdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeEtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3kqeE9XWEem1l5O0R0OWkQ" name="Call(+).result(result)" outgoing="_3kqeC9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeFNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeFdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqeFtXWEem1l5O0R0OWkQ" name="Fork(i)@581dd694" incoming="_3kqeC9XWEem1l5O0R0OWkQ" outgoing="_3kqdqdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqeF9XWEem1l5O0R0OWkQ" name="RightHandSide@71ef3210">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqeGNXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3kqeGdXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3kqeCtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeGtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeG9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3kqeHNXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqeHdXWEem1l5O0R0OWkQ" name="ExpressionStatement@4ce1a3b1" incoming="_3kqdqtXWEem1l5O0R0OWkQ" outgoing="_3kqdrNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqeHtXWEem1l5O0R0OWkQ" target="_3kqeJNXWEem1l5O0R0OWkQ" source="_3kqeLdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqeH9XWEem1l5O0R0OWkQ" target="_3kqeKtXWEem1l5O0R0OWkQ" source="_3kqeJ9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqeINXWEem1l5O0R0OWkQ" name="Call(-)">
              <argument xmi:id="_3kqeIdXWEem1l5O0R0OWkQ" name="Call(-).argument(x)" incoming="_3kqdqdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeItXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeI9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3kqeJNXWEem1l5O0R0OWkQ" name="Call(-).argument(y)" incoming="_3kqeHtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeJdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeJtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3kqeJ9XWEem1l5O0R0OWkQ" name="Call(-).result(result)" outgoing="_3kqeH9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeKNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeKdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqeKtXWEem1l5O0R0OWkQ" name="Fork(i)@697d6835" incoming="_3kqeH9XWEem1l5O0R0OWkQ" outgoing="_3kqdq9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqeK9XWEem1l5O0R0OWkQ" name="RightHandSide@6fad5a32">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqeLNXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3kqeLdXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3kqeHtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeLtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeL9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3kqeMNXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqeMdXWEem1l5O0R0OWkQ" name="ExpressionStatement@1f343f4d" incoming="_3kqdrNXWEem1l5O0R0OWkQ" outgoing="_3kqdrtXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqeMtXWEem1l5O0R0OWkQ" target="_3kqeONXWEem1l5O0R0OWkQ" source="_3kqeQdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqeM9XWEem1l5O0R0OWkQ" target="_3kqePtXWEem1l5O0R0OWkQ" source="_3kqeO9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqeNNXWEem1l5O0R0OWkQ" name="Call(*)">
              <argument xmi:id="_3kqeNdXWEem1l5O0R0OWkQ" name="Call(*).argument(x)" incoming="_3kqdq9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeNtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeN9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3kqeONXWEem1l5O0R0OWkQ" name="Call(*).argument(y)" incoming="_3kqeMtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeOdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeOtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3kqeO9XWEem1l5O0R0OWkQ" name="Call(*).result(result)" outgoing="_3kqeM9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqePNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqePdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-times"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqePtXWEem1l5O0R0OWkQ" name="Fork(i)@1d91213b" incoming="_3kqeM9XWEem1l5O0R0OWkQ" outgoing="_3kqdrdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqeP9XWEem1l5O0R0OWkQ" name="RightHandSide@636f50f">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqeQNXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3kqeQdXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3kqeMtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeQtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeQ9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3kqeRNXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqeRdXWEem1l5O0R0OWkQ" name="ExpressionStatement@5c4b2da" incoming="_3kqdrtXWEem1l5O0R0OWkQ" outgoing="_3kqdsNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqeRtXWEem1l5O0R0OWkQ" target="_3kqeTNXWEem1l5O0R0OWkQ" source="_3kqeVdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqeR9XWEem1l5O0R0OWkQ" target="_3kqeUtXWEem1l5O0R0OWkQ" source="_3kqeT9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqeSNXWEem1l5O0R0OWkQ" name="Call(Mod)">
              <argument xmi:id="_3kqeSdXWEem1l5O0R0OWkQ" name="Call(Mod).argument(x)" incoming="_3kqdrdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeStXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeS9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3kqeTNXWEem1l5O0R0OWkQ" name="Call(Mod).argument(y)" incoming="_3kqeRtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeTdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeTtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3kqeT9XWEem1l5O0R0OWkQ" name="Call(Mod).result(result)" outgoing="_3kqeR9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeUNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeUdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqeUtXWEem1l5O0R0OWkQ" name="Fork(i)@4890273d" incoming="_3kqeR9XWEem1l5O0R0OWkQ" outgoing="_3kqdr9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqeU9XWEem1l5O0R0OWkQ" name="RightHandSide@613c21de">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqeVNXWEem1l5O0R0OWkQ" name="Value(6)">
                <result xmi:id="_3kqeVdXWEem1l5O0R0OWkQ" name="Value(6).result" outgoing="_3kqeRtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeVtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeV9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3kqeWNXWEem1l5O0R0OWkQ" value="6">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqeWdXWEem1l5O0R0OWkQ" name="ExpressionStatement@55d3ed2c" incoming="_3kqdsNXWEem1l5O0R0OWkQ" outgoing="_3kqdsdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqeWtXWEem1l5O0R0OWkQ" target="_3kqeYNXWEem1l5O0R0OWkQ" source="_3kqeadXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqeW9XWEem1l5O0R0OWkQ" target="_3kqeZtXWEem1l5O0R0OWkQ" source="_3kqeY9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqeXNXWEem1l5O0R0OWkQ" name="Call(Div)">
              <argument xmi:id="_3kqeXdXWEem1l5O0R0OWkQ" name="Call(Div).argument(x)" incoming="_3kqdr9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeXtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeX9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3kqeYNXWEem1l5O0R0OWkQ" name="Call(Div).argument(y)" incoming="_3kqeWtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeYdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeYtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3kqeY9XWEem1l5O0R0OWkQ" name="Call(Div).result(result)" outgoing="_3kqeW9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeZNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeZdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqeZtXWEem1l5O0R0OWkQ" name="Fork(i)@3e6327ef" incoming="_3kqeW9XWEem1l5O0R0OWkQ" outgoing="_3kqdz9XWEem1l5O0R0OWkQ _3kqd1NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqeZ9XWEem1l5O0R0OWkQ" name="RightHandSide@f3b8eac">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqeaNXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3kqeadXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3kqeWtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeatXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqea9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3kqebNXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqebdXWEem1l5O0R0OWkQ" name="ExpressionStatement@68e7300d" incoming="_3kqdsdXWEem1l5O0R0OWkQ" outgoing="_3kqds9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqebtXWEem1l5O0R0OWkQ" target="_3kqeb9XWEem1l5O0R0OWkQ" source="_3kqectXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqeb9XWEem1l5O0R0OWkQ" name="Fork(f)@68c8b25c" incoming="_3kqebtXWEem1l5O0R0OWkQ" outgoing="_3kqdstXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqecNXWEem1l5O0R0OWkQ" name="RightHandSide@38c749b6">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqecdXWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_3kqectXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_3kqebtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqec9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqedNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_3kqeddXWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqedtXWEem1l5O0R0OWkQ" name="ExpressionStatement@29681d1b" incoming="_3kqds9XWEem1l5O0R0OWkQ" outgoing="_3kqdtdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqed9XWEem1l5O0R0OWkQ" target="_3kqefdXWEem1l5O0R0OWkQ" source="_3kqehtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqeeNXWEem1l5O0R0OWkQ" target="_3kqeg9XWEem1l5O0R0OWkQ" source="_3kqegNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqeedXWEem1l5O0R0OWkQ" name="Call(And)">
              <argument xmi:id="_3kqeetXWEem1l5O0R0OWkQ" name="Call(And).argument(x)" incoming="_3kqdstXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqee9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqefNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3kqefdXWEem1l5O0R0OWkQ" name="Call(And).argument(y)" incoming="_3kqed9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeftXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqef9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3kqegNXWEem1l5O0R0OWkQ" name="Call(And).result(result)" outgoing="_3kqeeNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqegdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqegtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-And"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqeg9XWEem1l5O0R0OWkQ" name="Fork(f)@19447f43" incoming="_3kqeeNXWEem1l5O0R0OWkQ" outgoing="_3kqdtNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqehNXWEem1l5O0R0OWkQ" name="RightHandSide@26c464ff">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqehdXWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_3kqehtXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_3kqed9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeh9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeiNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_3kqeidXWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqeitXWEem1l5O0R0OWkQ" name="ExpressionStatement@3a63e1c0" incoming="_3kqdtdXWEem1l5O0R0OWkQ" outgoing="_3kqdt9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqei9XWEem1l5O0R0OWkQ" target="_3kqekdXWEem1l5O0R0OWkQ" source="_3kqemtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqejNXWEem1l5O0R0OWkQ" target="_3kqel9XWEem1l5O0R0OWkQ" source="_3kqelNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqejdXWEem1l5O0R0OWkQ" name="Call(Or)">
              <argument xmi:id="_3kqejtXWEem1l5O0R0OWkQ" name="Call(Or).argument(x)" incoming="_3kqdtNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqej9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqekNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3kqekdXWEem1l5O0R0OWkQ" name="Call(Or).argument(y)" incoming="_3kqei9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqektXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqek9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3kqelNXWEem1l5O0R0OWkQ" name="Call(Or).result(result)" outgoing="_3kqejNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeldXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeltXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqel9XWEem1l5O0R0OWkQ" name="Fork(f)@606abfb9" incoming="_3kqejNXWEem1l5O0R0OWkQ" outgoing="_3kqdttXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqemNXWEem1l5O0R0OWkQ" name="RightHandSide@209dbaa4">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqemdXWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_3kqemtXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_3kqei9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqem9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqenNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_3kqendXWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqentXWEem1l5O0R0OWkQ" name="ExpressionStatement@7deb86d2" incoming="_3kqdt9XWEem1l5O0R0OWkQ" outgoing="_3kqduNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqen9XWEem1l5O0R0OWkQ" target="_3kqepdXWEem1l5O0R0OWkQ" source="_3kqertXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqeoNXWEem1l5O0R0OWkQ" target="_3kqeq9XWEem1l5O0R0OWkQ" source="_3kqeqNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqeodXWEem1l5O0R0OWkQ" name="Call(Xor)">
              <argument xmi:id="_3kqeotXWEem1l5O0R0OWkQ" name="Call(Xor).argument(x)" incoming="_3kqdttXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeo9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqepNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3kqepdXWEem1l5O0R0OWkQ" name="Call(Xor).argument(y)" incoming="_3kqen9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeptXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqep9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3kqeqNXWEem1l5O0R0OWkQ" name="Call(Xor).result(result)" outgoing="_3kqeoNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeqdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeqtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Xor"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqeq9XWEem1l5O0R0OWkQ" name="Fork(f)@b3e97da" incoming="_3kqeoNXWEem1l5O0R0OWkQ" outgoing="_3kqd1dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqerNXWEem1l5O0R0OWkQ" name="RightHandSide@7fafbe3f">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqerdXWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_3kqertXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_3kqen9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqer9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqesNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_3kqesdXWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqestXWEem1l5O0R0OWkQ" name="ExpressionStatement@3e1d445e" incoming="_3kqduNXWEem1l5O0R0OWkQ" outgoing="_3kqdudXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqes9XWEem1l5O0R0OWkQ" target="_3kqetNXWEem1l5O0R0OWkQ" source="_3kqe19XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqetNXWEem1l5O0R0OWkQ" name="Fork(h)@3d8b243b" incoming="_3kqes9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqetdXWEem1l5O0R0OWkQ" name="RightHandSide@5ff243ba">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqettXWEem1l5O0R0OWkQ" target="_3kqe1tXWEem1l5O0R0OWkQ" source="_3kqeuNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqet9XWEem1l5O0R0OWkQ" name="Value(0)">
                <result xmi:id="_3kqeuNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_3kqettXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeudXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeutXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3kqeu9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_3kqevNXWEem1l5O0R0OWkQ" name="CastExpression@5ff243ba" mode="parallel" outputElement="_3kqe19XWEem1l5O0R0OWkQ" inputElement="_3kqe1tXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqevdXWEem1l5O0R0OWkQ" target="_3kqex9XWEem1l5O0R0OWkQ" source="_3kqezdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqevtXWEem1l5O0R0OWkQ" target="_3kqexdXWEem1l5O0R0OWkQ" source="_3kqe0tXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqev9XWEem1l5O0R0OWkQ" target="_3kqe1dXWEem1l5O0R0OWkQ" source="_3kqezdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqewNXWEem1l5O0R0OWkQ" target="_3kqe1dXWEem1l5O0R0OWkQ" source="_3kqeytXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqewdXWEem1l5O0R0OWkQ" target="_3kqez9XWEem1l5O0R0OWkQ" source="_3kqe1dXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_3kqewtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqew9XWEem1l5O0R0OWkQ" target="_3kqezdXWEem1l5O0R0OWkQ" source="_3kqe1tXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqexNXWEem1l5O0R0OWkQ" target="_3kqe19XWEem1l5O0R0OWkQ" source="_3kqexdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_3kqexdXWEem1l5O0R0OWkQ" name="Merge(CastExpression@5ff243ba.operand)" incoming="_3kqevtXWEem1l5O0R0OWkQ" outgoing="_3kqexNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_3kqextXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Integer)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_3kqex9XWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Integer).object" incoming="_3kqevdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqeyNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqeydXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_3kqeytXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(Integer).result" outgoing="_3kqewNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqey9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqezNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_3kqezdXWEem1l5O0R0OWkQ" name="Fork(ReadIsClassifiedObject(Integer).object)" incoming="_3kqew9XWEem1l5O0R0OWkQ" outgoing="_3kqevdXWEem1l5O0R0OWkQ _3kqev9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqeztXWEem1l5O0R0OWkQ" name="Call(ToBitString)">
                  <argument xmi:id="_3kqez9XWEem1l5O0R0OWkQ" name="Call(ToBitString).argument(n)" incoming="_3kqewdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqe0NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqe0dXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_3kqe0tXWEem1l5O0R0OWkQ" name="Call(ToBitString).result()" outgoing="_3kqevtXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqe09XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqe1NXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_3kqe1dXWEem1l5O0R0OWkQ" name="Decision(ReadIsClassifiedObject(Integer).result)" incoming="_3kqev9XWEem1l5O0R0OWkQ _3kqewNXWEem1l5O0R0OWkQ" outgoing="_3kqewdXWEem1l5O0R0OWkQ" decisionInputFlow="_3kqewNXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_3kqe1tXWEem1l5O0R0OWkQ" name="CastExpression@5ff243ba.inputElement" incoming="_3kqettXWEem1l5O0R0OWkQ" outgoing="_3kqew9XWEem1l5O0R0OWkQ" regionAsInput="_3kqevNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_3kqe19XWEem1l5O0R0OWkQ" name="CastExpression@5ff243ba.outputElement" incoming="_3kqexNXWEem1l5O0R0OWkQ" outgoing="_3kqes9XWEem1l5O0R0OWkQ" regionAsOutput="_3kqevNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqe2NXWEem1l5O0R0OWkQ" name="ExpressionStatement@45d5eca" incoming="_3kqdudXWEem1l5O0R0OWkQ" outgoing="_3kqdu9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqe2dXWEem1l5O0R0OWkQ" target="_3kqe2tXWEem1l5O0R0OWkQ" source="_3kqe5tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqe2tXWEem1l5O0R0OWkQ" name="Fork(h)@57a41866" incoming="_3kqe2dXWEem1l5O0R0OWkQ" outgoing="_3kqdutXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqe29XWEem1l5O0R0OWkQ" name="RightHandSide@315e0ad9">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqe3NXWEem1l5O0R0OWkQ" target="_3kqe49XWEem1l5O0R0OWkQ" source="_3kqe3tXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqe3dXWEem1l5O0R0OWkQ" name="Value(171)">
                <result xmi:id="_3kqe3tXWEem1l5O0R0OWkQ" name="Value(171).result" outgoing="_3kqe3NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqe39XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqe4NXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3kqe4dXWEem1l5O0R0OWkQ" value="171">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqe4tXWEem1l5O0R0OWkQ" name="Call(ToBitString)">
                <argument xmi:id="_3kqe49XWEem1l5O0R0OWkQ" name="Call(ToBitString).argument(n)" incoming="_3kqe3NXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqe5NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqe5dXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_3kqe5tXWEem1l5O0R0OWkQ" name="Call(ToBitString).result()" outgoing="_3kqe2dXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqe59XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqe6NXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqe6dXWEem1l5O0R0OWkQ" name="ExpressionStatement@5ca96bf7" incoming="_3kqdu9XWEem1l5O0R0OWkQ" outgoing="_3kqdvdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqe6tXWEem1l5O0R0OWkQ" target="_3kqe8NXWEem1l5O0R0OWkQ" source="_3kqfAtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqe69XWEem1l5O0R0OWkQ" target="_3kqe9tXWEem1l5O0R0OWkQ" source="_3kqe89XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqe7NXWEem1l5O0R0OWkQ" name="Call(&amp;)">
              <argument xmi:id="_3kqe7dXWEem1l5O0R0OWkQ" name="Call(&amp;).argument(b1)" incoming="_3kqdutXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqe7tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqe79XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3kqe8NXWEem1l5O0R0OWkQ" name="Call(&amp;).argument(b2)" incoming="_3kqe6tXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqe8dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqe8tXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3kqe89XWEem1l5O0R0OWkQ" name="Call(&amp;).result()" outgoing="_3kqe69XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqe9NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqe9dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-amp"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqe9tXWEem1l5O0R0OWkQ" name="Fork(h)@e2b65ca" incoming="_3kqe69XWEem1l5O0R0OWkQ" outgoing="_3kqdvNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqe99XWEem1l5O0R0OWkQ" name="RightHandSide@23447a4">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqe-NXWEem1l5O0R0OWkQ" target="_3kqe_9XWEem1l5O0R0OWkQ" source="_3kqe-tXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqe-dXWEem1l5O0R0OWkQ" name="Value(255)">
                <result xmi:id="_3kqe-tXWEem1l5O0R0OWkQ" name="Value(255).result" outgoing="_3kqe-NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqe-9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqe_NXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3kqe_dXWEem1l5O0R0OWkQ" value="255">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqe_tXWEem1l5O0R0OWkQ" name="Call(ToBitString)">
                <argument xmi:id="_3kqe_9XWEem1l5O0R0OWkQ" name="Call(ToBitString).argument(n)" incoming="_3kqe-NXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqfANXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqfAdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_3kqfAtXWEem1l5O0R0OWkQ" name="Call(ToBitString).result()" outgoing="_3kqe6tXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqfA9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqfBNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqfBdXWEem1l5O0R0OWkQ" name="ExpressionStatement@2fd9d184" incoming="_3kqdvdXWEem1l5O0R0OWkQ" outgoing="_3kqdv9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqfBtXWEem1l5O0R0OWkQ" target="_3kqfDNXWEem1l5O0R0OWkQ" source="_3kqfHtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqfB9XWEem1l5O0R0OWkQ" target="_3kqfEtXWEem1l5O0R0OWkQ" source="_3kqfD9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqfCNXWEem1l5O0R0OWkQ" name="Call(|)">
              <argument xmi:id="_3kqfCdXWEem1l5O0R0OWkQ" name="Call(|).argument(b1)" incoming="_3kqdvNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqfCtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqfC9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3kqfDNXWEem1l5O0R0OWkQ" name="Call(|).argument(b2)" incoming="_3kqfBtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqfDdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqfDtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3kqfD9XWEem1l5O0R0OWkQ" name="Call(|).result()" outgoing="_3kqfB9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqfENXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqfEdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-bar"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqfEtXWEem1l5O0R0OWkQ" name="Fork(h)@c0d7ccd" incoming="_3kqfB9XWEem1l5O0R0OWkQ" outgoing="_3kqdvtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqfE9XWEem1l5O0R0OWkQ" name="RightHandSide@7a16fb7a">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqfFNXWEem1l5O0R0OWkQ" target="_3kqfG9XWEem1l5O0R0OWkQ" source="_3kqfFtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3kqfFdXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3kqfFtXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3kqfFNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqfF9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqfGNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3kqfGdXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqfGtXWEem1l5O0R0OWkQ" name="Call(ToBitString)">
                <argument xmi:id="_3kqfG9XWEem1l5O0R0OWkQ" name="Call(ToBitString).argument(n)" incoming="_3kqfFNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqfHNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqfHdXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_3kqfHtXWEem1l5O0R0OWkQ" name="Call(ToBitString).result()" outgoing="_3kqfBtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqfH9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqfINXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqfIdXWEem1l5O0R0OWkQ" name="ExpressionStatement@3c4b472d" incoming="_3kqdv9XWEem1l5O0R0OWkQ" outgoing="_3kqdwdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqfItXWEem1l5O0R0OWkQ" target="_3kqfKNXWEem1l5O0R0OWkQ" source="_3krDOdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqfI9XWEem1l5O0R0OWkQ" target="_3kqfLtXWEem1l5O0R0OWkQ" source="_3kqfK9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3kqfJNXWEem1l5O0R0OWkQ" name="Call(^)">
              <argument xmi:id="_3kqfJdXWEem1l5O0R0OWkQ" name="Call(^).argument(b1)" incoming="_3kqdvtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqfJtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqfJ9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3kqfKNXWEem1l5O0R0OWkQ" name="Call(^).argument(b2)" incoming="_3kqfItXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqfKdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqfKtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3kqfK9XWEem1l5O0R0OWkQ" name="Call(^).result()" outgoing="_3kqfI9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3kqfLNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3kqfLdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-caret"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3kqfLtXWEem1l5O0R0OWkQ" name="Fork(h)@3445b19e" incoming="_3kqfI9XWEem1l5O0R0OWkQ" outgoing="_3kqdwNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3kqfL9XWEem1l5O0R0OWkQ" name="RightHandSide@66344ca0">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3kqfMNXWEem1l5O0R0OWkQ" target="_3krDNtXWEem1l5O0R0OWkQ" source="_3krDMdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krDMNXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3krDMdXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3kqfMNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDMtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDM9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3krDNNXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krDNdXWEem1l5O0R0OWkQ" name="Call(ToBitString)">
                <argument xmi:id="_3krDNtXWEem1l5O0R0OWkQ" name="Call(ToBitString).argument(n)" incoming="_3kqfMNXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDN9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDONXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_3krDOdXWEem1l5O0R0OWkQ" name="Call(ToBitString).result()" outgoing="_3kqfItXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDOtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDO9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDPNXWEem1l5O0R0OWkQ" name="ExpressionStatement@24ab9b2c" incoming="_3kqdwdXWEem1l5O0R0OWkQ" outgoing="_3kqdw9XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDPdXWEem1l5O0R0OWkQ" target="_3krDQ9XWEem1l5O0R0OWkQ" source="_3krDTNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDPtXWEem1l5O0R0OWkQ" target="_3krDSdXWEem1l5O0R0OWkQ" source="_3krDRtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krDP9XWEem1l5O0R0OWkQ" name="Call(&lt;&lt;)">
              <argument xmi:id="_3krDQNXWEem1l5O0R0OWkQ" name="Call(&lt;&lt;).argument(x)" incoming="_3kqdwNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDQdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDQtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3krDQ9XWEem1l5O0R0OWkQ" name="Call(&lt;&lt;).argument(n)" incoming="_3krDPdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDRNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDRdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krDRtXWEem1l5O0R0OWkQ" name="Call(&lt;&lt;).result()" outgoing="_3krDPtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDR9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDSNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ltlt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krDSdXWEem1l5O0R0OWkQ" name="Fork(h)@5d4012ac" incoming="_3krDPtXWEem1l5O0R0OWkQ" outgoing="_3kqdwtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDStXWEem1l5O0R0OWkQ" name="RightHandSide@783fb2c4">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krDS9XWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3krDTNXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3krDPdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDTdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDTtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3krDT9XWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDUNXWEem1l5O0R0OWkQ" name="ExpressionStatement@373a9c96" incoming="_3kqdw9XWEem1l5O0R0OWkQ" outgoing="_3kqdxdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDUdXWEem1l5O0R0OWkQ" target="_3krDV9XWEem1l5O0R0OWkQ" source="_3krDYNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDUtXWEem1l5O0R0OWkQ" target="_3krDXdXWEem1l5O0R0OWkQ" source="_3krDWtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krDU9XWEem1l5O0R0OWkQ" name="Call(>>)">
              <argument xmi:id="_3krDVNXWEem1l5O0R0OWkQ" name="Call(>>).argument(x)" incoming="_3kqdwtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDVdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDVtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3krDV9XWEem1l5O0R0OWkQ" name="Call(>>).argument(n)" incoming="_3krDUdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDWNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDWdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krDWtXWEem1l5O0R0OWkQ" name="Call(>>).result()" outgoing="_3krDUtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDW9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDXNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krDXdXWEem1l5O0R0OWkQ" name="Fork(h)@5db73783" incoming="_3krDUtXWEem1l5O0R0OWkQ" outgoing="_3kqdxNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDXtXWEem1l5O0R0OWkQ" name="RightHandSide@788f2bb4">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krDX9XWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3krDYNXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3krDUdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDYdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDYtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3krDY9XWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDZNXWEem1l5O0R0OWkQ" name="ExpressionStatement@b98d67f" incoming="_3kqdxdXWEem1l5O0R0OWkQ" outgoing="_3kqdxtXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDZdXWEem1l5O0R0OWkQ" target="_3krDa9XWEem1l5O0R0OWkQ" source="_3krDdNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDZtXWEem1l5O0R0OWkQ" target="_3krDcdXWEem1l5O0R0OWkQ" source="_3krDbtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krDZ9XWEem1l5O0R0OWkQ" name="Call(>>>)">
              <argument xmi:id="_3krDaNXWEem1l5O0R0OWkQ" name="Call(>>>).argument(x)" incoming="_3kqdxNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDadXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDatXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3krDa9XWEem1l5O0R0OWkQ" name="Call(>>>).argument(n)" incoming="_3krDZdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDbNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDbdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krDbtXWEem1l5O0R0OWkQ" name="Call(>>>).result()" outgoing="_3krDZtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDb9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDcNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krDcdXWEem1l5O0R0OWkQ" name="Fork(h)@60f0c5c" incoming="_3krDZtXWEem1l5O0R0OWkQ" outgoing="_3kqd1tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDctXWEem1l5O0R0OWkQ" name="RightHandSide@c65c01e">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krDc9XWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3krDdNXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3krDZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDddXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDdtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3krDd9XWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDeNXWEem1l5O0R0OWkQ" name="ExpressionStatement@5374a7f1" incoming="_3kqdxtXWEem1l5O0R0OWkQ" outgoing="_3kqdyNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDedXWEem1l5O0R0OWkQ" target="_3krDetXWEem1l5O0R0OWkQ" source="_3krDfdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3krDetXWEem1l5O0R0OWkQ" name="Fork(filename)@4b2d31e4" incoming="_3krDedXWEem1l5O0R0OWkQ" outgoing="_3kqdx9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDe9XWEem1l5O0R0OWkQ" name="RightHandSide@38eb3a35">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krDfNXWEem1l5O0R0OWkQ" name="Value(&quot;xyz&quot;)">
                <result xmi:id="_3krDfdXWEem1l5O0R0OWkQ" name="Value(&quot;xyz&quot;).result" outgoing="_3krDedXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDftXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDf9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3krDgNXWEem1l5O0R0OWkQ" value="xyz">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDgdXWEem1l5O0R0OWkQ" name="ExpressionStatement@34f572c6" incoming="_3kqdyNXWEem1l5O0R0OWkQ" outgoing="_3kqdydXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDgtXWEem1l5O0R0OWkQ" target="_3krDiNXWEem1l5O0R0OWkQ" source="_3krDkdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDg9XWEem1l5O0R0OWkQ" target="_3krDjtXWEem1l5O0R0OWkQ" source="_3krDi9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krDhNXWEem1l5O0R0OWkQ" name="Call(Concat)">
              <argument xmi:id="_3krDhdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_3kqdx9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDhtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDh9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3krDiNXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_3krDgtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDidXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDitXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krDi9XWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_3krDg9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDjNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDjdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krDjtXWEem1l5O0R0OWkQ" name="Fork(filename)@2be2d43f" incoming="_3krDg9XWEem1l5O0R0OWkQ" outgoing="_3kqd19XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDj9XWEem1l5O0R0OWkQ" name="RightHandSide@71769a52">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krDkNXWEem1l5O0R0OWkQ" name="Value(&quot;.doc&quot;)">
                <result xmi:id="_3krDkdXWEem1l5O0R0OWkQ" name="Value(&quot;.doc&quot;).result" outgoing="_3krDgtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDktXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDk9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3krDlNXWEem1l5O0R0OWkQ" value=".doc">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDldXWEem1l5O0R0OWkQ" name="ExpressionStatement@848421d" incoming="_3kqdydXWEem1l5O0R0OWkQ" outgoing="_3kqdytXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDltXWEem1l5O0R0OWkQ" target="_3krDl9XWEem1l5O0R0OWkQ" source="_3krDmtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3krDl9XWEem1l5O0R0OWkQ" name="Fork(s)@6e2a3faa" incoming="_3krDltXWEem1l5O0R0OWkQ" outgoing="_3kqd2NXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDmNXWEem1l5O0R0OWkQ" name="RightHandSide@57c02b40">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krDmdXWEem1l5O0R0OWkQ" name="Value(&quot;'&quot;    \&quot;)">
                <result xmi:id="_3krDmtXWEem1l5O0R0OWkQ" name="Value(&quot;'&quot;    \&quot;).result" outgoing="_3krDltXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDm9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDnNXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3krDndXWEem1l5O0R0OWkQ" value="'&quot;&#x8;&#xC;&#xA;&#x9;\">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDntXWEem1l5O0R0OWkQ" name="ExpressionStatement@15bc5468" incoming="_3kqdytXWEem1l5O0R0OWkQ" outgoing="_3kqdzNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDn9XWEem1l5O0R0OWkQ" target="_3krDoNXWEem1l5O0R0OWkQ" source="_3krDo9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3krDoNXWEem1l5O0R0OWkQ" name="Fork(a)@41d24c21" incoming="_3krDn9XWEem1l5O0R0OWkQ" outgoing="_3kqdy9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDodXWEem1l5O0R0OWkQ" name="RightHandSide@3b5582c1">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krDotXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3krDo9XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3krDn9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDpNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDpdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3krDptXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDp9XWEem1l5O0R0OWkQ" name="ExpressionStatement@45b878ec" incoming="_3kqdzNXWEem1l5O0R0OWkQ" outgoing="_3kqdzdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDqNXWEem1l5O0R0OWkQ" target="_3krDrtXWEem1l5O0R0OWkQ" source="_3krDt9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDqdXWEem1l5O0R0OWkQ" target="_3krDtNXWEem1l5O0R0OWkQ" source="_3krDsdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krDqtXWEem1l5O0R0OWkQ" name="Call(+)">
              <argument xmi:id="_3krDq9XWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_3kqdy9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDrNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDrdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3krDrtXWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_3krDqNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDr9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDsNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krDsdXWEem1l5O0R0OWkQ" name="Call(+).result(result)" outgoing="_3krDqdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDstXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDs9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krDtNXWEem1l5O0R0OWkQ" name="Fork(a)@f46b275" incoming="_3krDqdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDtdXWEem1l5O0R0OWkQ" name="RightHandSide@3c725ad9">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krDttXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3krDt9XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3krDqNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDuNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDudXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3krDutXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDu9XWEem1l5O0R0OWkQ" name="ExpressionStatement@12b21dea" incoming="_3kqdzdXWEem1l5O0R0OWkQ" outgoing="_3kqd0NXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDvNXWEem1l5O0R0OWkQ" target="_3krDvdXWEem1l5O0R0OWkQ" source="_3krDwNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3krDvdXWEem1l5O0R0OWkQ" name="Fork(test::a)@5cfc4d19" incoming="_3krDvNXWEem1l5O0R0OWkQ" outgoing="_3kqdztXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDvtXWEem1l5O0R0OWkQ" name="RightHandSide@a7b1b0f">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krDv9XWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3krDwNXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3krDvNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDwdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDwtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3krDw9XWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krDxNXWEem1l5O0R0OWkQ" name="ExpressionStatement@5147f2c6" incoming="_3kqd0NXWEem1l5O0R0OWkQ" outgoing="_3kqd0dXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krDxdXWEem1l5O0R0OWkQ" target="_3krD0NXWEem1l5O0R0OWkQ" source="_3krDzdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krDxtXWEem1l5O0R0OWkQ" name="Call(+)">
              <argument xmi:id="_3krDx9XWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_3kqdztXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDyNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDydXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3krDytXWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_3kqdz9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDy9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDzNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krDzdXWEem1l5O0R0OWkQ" name="Call(+).result(result)" outgoing="_3krDxdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krDztXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krDz9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krD0NXWEem1l5O0R0OWkQ" name="Fork(test::a)@3023436d" incoming="_3krDxdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krD0dXWEem1l5O0R0OWkQ" name="RightHandSide@ec257e9"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krD0tXWEem1l5O0R0OWkQ" name="ExpressionStatement@59a18a25" incoming="_3kqd0dXWEem1l5O0R0OWkQ" outgoing="_3kqd09XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krD09XWEem1l5O0R0OWkQ" target="_3krD1NXWEem1l5O0R0OWkQ" source="_3krD19XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3krD1NXWEem1l5O0R0OWkQ" name="Fork(test::a)@6f8f9a99" incoming="_3krD09XWEem1l5O0R0OWkQ" outgoing="_3kqd0tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krD1dXWEem1l5O0R0OWkQ" name="RightHandSide@3cf45cd5">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krD1tXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3krD19XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3krD09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krD2NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krD2dXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3krD2tXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krD29XWEem1l5O0R0OWkQ" name="ExpressionStatement@1b2cb0a0" incoming="_3kqd09XWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krD3NXWEem1l5O0R0OWkQ" target="_3krD4tXWEem1l5O0R0OWkQ" source="_3krD69XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krD3dXWEem1l5O0R0OWkQ" target="_3krD6NXWEem1l5O0R0OWkQ" source="_3krD5dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krD3tXWEem1l5O0R0OWkQ" name="Call(+)">
              <argument xmi:id="_3krD39XWEem1l5O0R0OWkQ" name="Call(+).argument(x)" incoming="_3kqd0tXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krD4NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krD4dXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <argument xmi:id="_3krD4tXWEem1l5O0R0OWkQ" name="Call(+).argument(y)" incoming="_3krD3NXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krD49XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krD5NXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krD5dXWEem1l5O0R0OWkQ" name="Call(+).result(result)" outgoing="_3krD3dXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krD5tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krD59XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krD6NXWEem1l5O0R0OWkQ" name="Fork(test::a)@4b913189" incoming="_3krD3dXWEem1l5O0R0OWkQ" outgoing="_3kqd2dXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krD6dXWEem1l5O0R0OWkQ" name="RightHandSide@462eeeb2">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krD6tXWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3krD69XWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3krD3NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krD7NXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krD7dXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3krD7tXWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3kqdntXWEem1l5O0R0OWkQ" name="Output(i)" incoming="_3kqdmNXWEem1l5O0R0OWkQ" parameter="_3kqdhtXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3kqdn9XWEem1l5O0R0OWkQ" name="Output(f)" incoming="_3kqdmdXWEem1l5O0R0OWkQ" parameter="_3kqdidXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3kqdoNXWEem1l5O0R0OWkQ" name="Output(h)" incoming="_3kqdmtXWEem1l5O0R0OWkQ" parameter="_3kqdjNXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3kqdodXWEem1l5O0R0OWkQ" name="Output(filename)" incoming="_3kqdm9XWEem1l5O0R0OWkQ" parameter="_3kqdj9XWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3kqdotXWEem1l5O0R0OWkQ" name="Output(s)" incoming="_3kqdnNXWEem1l5O0R0OWkQ" parameter="_3kqdktXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3kqdo9XWEem1l5O0R0OWkQ" name="Output(a)" incoming="_3kqdndXWEem1l5O0R0OWkQ" parameter="_3kqdldXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3krD79XWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_3krEX9XWEem1l5O0R0OWkQ" node="_3krD8NXWEem1l5O0R0OWkQ" group="_3krD8NXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_3krD8NXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3krD8dXWEem1l5O0R0OWkQ" name="Expressions_Assignment$initialization$1" visibility="private" specification="_3krEQNXWEem1l5O0R0OWkQ" node="_3krD8tXWEem1l5O0R0OWkQ" group="_3krD8tXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_3krD8tXWEem1l5O0R0OWkQ" name="Body(Expressions_Assignment$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krD89XWEem1l5O0R0OWkQ" target="_3krEAtXWEem1l5O0R0OWkQ" source="_3krD_9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krD9NXWEem1l5O0R0OWkQ" target="_3krEBtXWEem1l5O0R0OWkQ" source="_3krEAtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krD9dXWEem1l5O0R0OWkQ" target="_3krEE9XWEem1l5O0R0OWkQ" source="_3krEAtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krD9tXWEem1l5O0R0OWkQ" target="_3krEItXWEem1l5O0R0OWkQ" source="_3krEAtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krD99XWEem1l5O0R0OWkQ" target="_3krEKdXWEem1l5O0R0OWkQ" source="_3krEJdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krD-NXWEem1l5O0R0OWkQ" target="_3krENdXWEem1l5O0R0OWkQ" source="_3krELNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krD-dXWEem1l5O0R0OWkQ" target="_3krEO9XWEem1l5O0R0OWkQ" source="_3krEMNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3krD-tXWEem1l5O0R0OWkQ" target="_3krEP9XWEem1l5O0R0OWkQ" source="_3krEPtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krD-9XWEem1l5O0R0OWkQ" target="_3krEP9XWEem1l5O0R0OWkQ" source="_3krEONXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3krD_NXWEem1l5O0R0OWkQ" target="_3krEA9XWEem1l5O0R0OWkQ" source="_3krEP9XWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krD_dXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_3krD_tXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_3krD_9XWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_3krD89XWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEANXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEAdXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_3krEAtXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_3krD89XWEem1l5O0R0OWkQ" outgoing="_3krD9NXWEem1l5O0R0OWkQ _3krD9dXWEem1l5O0R0OWkQ _3krD9tXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krEA9XWEem1l5O0R0OWkQ" name="Initialization" incoming="_3krD_NXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krEBNXWEem1l5O0R0OWkQ" target="_3krECdXWEem1l5O0R0OWkQ" source="_3krEBdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_3krEBdXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1)" outgoing="_3krEBNXWEem1l5O0R0OWkQ" operation="_3krFZNXWEem1l5O0R0OWkQ">
              <target xmi:id="_3krEBtXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1).target" incoming="_3krD9NXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEB9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krECNXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krECdXWEem1l5O0R0OWkQ" name="Set(initializationFlag)" incoming="_3krEBNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krECtXWEem1l5O0R0OWkQ" target="_3krEINXWEem1l5O0R0OWkQ" source="_3krEDNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krEC9XWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_3krEDNXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_3krECtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEDdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEDtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_3krED9XWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_3krEENXWEem1l5O0R0OWkQ" name="Iterate(Write(Expressions_Assignment$initializationFlag$1))" inputElement="_3krEINXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEEdXWEem1l5O0R0OWkQ" target="_3krEHdXWEem1l5O0R0OWkQ" source="_3krEINXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEEtXWEem1l5O0R0OWkQ" target="_3krEF9XWEem1l5O0R0OWkQ" source="_3krEE9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_3krEE9XWEem1l5O0R0OWkQ" name="Iterate(Write(Expressions_Assignment$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_3krD9dXWEem1l5O0R0OWkQ" outgoing="_3krEEtXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEFNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEFdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_3krEFtXWEem1l5O0R0OWkQ" name="Write(Expressions_Assignment$initializationFlag$1)" structuralFeature="_3kqcKNXWEem1l5O0R0OWkQ">
                  <object xmi:id="_3krEF9XWEem1l5O0R0OWkQ" name="Write(Expressions_Assignment$initializationFlag$1).object" incoming="_3krEEtXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEGNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEGdXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_3krEGtXWEem1l5O0R0OWkQ" name="Write(Expressions_Assignment$initializationFlag$1).result" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEG9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEHNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_3krEHdXWEem1l5O0R0OWkQ" name="Write(Expressions_Assignment$initializationFlag$1).value" incoming="_3krEEdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEHtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEH9XWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_3krEINXWEem1l5O0R0OWkQ" name="Iterate(Write(Expressions_Assignment$initializationFlag$1)).inputElement" incoming="_3krECtXWEem1l5O0R0OWkQ" outgoing="_3krEEdXWEem1l5O0R0OWkQ" regionAsInput="_3krEENXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3krEIdXWEem1l5O0R0OWkQ" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_3kqcKNXWEem1l5O0R0OWkQ">
            <object xmi:id="_3krEItXWEem1l5O0R0OWkQ" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_3krD9tXWEem1l5O0R0OWkQ" type="_3kqcIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEI9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEJNXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_3krEJdXWEem1l5O0R0OWkQ" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_3krD99XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEJtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEJ9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krEKNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_3krEKdXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_3krD99XWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEKtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEK9XWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_3krELNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_3krD-NXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krELdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krELtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krEL9XWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_3krEMNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_3krD-dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEMdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEMtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_3krEM9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_3krENNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_3krENdXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_3krD-NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krENtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEN9XWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_3krEONXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_3krD-9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEOdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEOtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_3krEO9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_3krD-dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEPNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEPdXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_3krEPtXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_3krD-tXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_3krEP9XWEem1l5O0R0OWkQ" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" incoming="_3krD-tXWEem1l5O0R0OWkQ _3krD-9XWEem1l5O0R0OWkQ" outgoing="_3krD_NXWEem1l5O0R0OWkQ" decisionInputFlow="_3krD-9XWEem1l5O0R0OWkQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_3krEQNXWEem1l5O0R0OWkQ" name="Expressions_Assignment$initialization$1" visibility="protected" method="_3krD8dXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_3krEQdXWEem1l5O0R0OWkQ" name="run" visibility="public" method="_3kqcK9XWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_3krEQtXWEem1l5O0R0OWkQ" name="tester" visibility="package" type="_3krFctXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEQ9XWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krERNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3krERdXWEem1l5O0R0OWkQ" name="" visibility="package" type="_3kqcIdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krERtXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krER9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_3krESNXWEem1l5O0R0OWkQ" name="Expressions_Assignment" visibility="public" method="_3kqdVdXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_3krESdXWEem1l5O0R0OWkQ" name="" visibility="package" type="_3kqcIdXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEStXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krES9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_3krETNXWEem1l5O0R0OWkQ" name="test" visibility="public" method="_3kqdhdXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_3krETdXWEem1l5O0R0OWkQ" name="i" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krETtXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krET9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3krEUNXWEem1l5O0R0OWkQ" name="f" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEUdXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEUtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3krEU9XWEem1l5O0R0OWkQ" name="h" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEVNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEVdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3krEVtXWEem1l5O0R0OWkQ" name="filename" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEV9XWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEWNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3krEWdXWEem1l5O0R0OWkQ" name="s" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEWtXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEW9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3krEXNXWEem1l5O0R0OWkQ" name="a" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEXdXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEXtXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_3krEX9XWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_3krD79XWEem1l5O0R0OWkQ" redefinedOperation="_3krFZdXWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3krEYNXWEem1l5O0R0OWkQ" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_3krEYdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_3krEYtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_3krEY9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_3krEZNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_3krEZdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_3krEZtXWEem1l5O0R0OWkQ" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEZ9XWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEaNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_3krEadXWEem1l5O0R0OWkQ" name="tester" visibility="private" type="_3krFctXWEem1l5O0R0OWkQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEatXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEa9XWEem1l5O0R0OWkQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3krEbNXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_3krFZdXWEem1l5O0R0OWkQ" node="_3krEbdXWEem1l5O0R0OWkQ" group="_3krEbdXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_3krEbdXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3krEbtXWEem1l5O0R0OWkQ" name="done$method$1" visibility="private" specification="_3krFZtXWEem1l5O0R0OWkQ" node="_3krEb9XWEem1l5O0R0OWkQ" group="_3krEb9XWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_3krEb9XWEem1l5O0R0OWkQ" name="Body(done$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krEcNXWEem1l5O0R0OWkQ" name="ExpressionStatement@2a7a867">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEcdXWEem1l5O0R0OWkQ" target="_3krEddXWEem1l5O0R0OWkQ" source="_3krEfdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krEctXWEem1l5O0R0OWkQ" target="_3krEdNXWEem1l5O0R0OWkQ" source="_3krEe9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEc9XWEem1l5O0R0OWkQ" target="_3krEeNXWEem1l5O0R0OWkQ" source="_3krEgtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_3krEdNXWEem1l5O0R0OWkQ" name="Call(done)" incoming="_3krEctXWEem1l5O0R0OWkQ" operation="_3krFbtXWEem1l5O0R0OWkQ">
              <argument xmi:id="_3krEddXWEem1l5O0R0OWkQ" name="Call(done).argument(message)" incoming="_3krEcdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEdtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEd9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <target xmi:id="_3krEeNXWEem1l5O0R0OWkQ" name="Call(done).target" incoming="_3krEc9XWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEedXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEetXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krEe9XWEem1l5O0R0OWkQ" name="Tuple@7d70a10c" outgoing="_3krEctXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krEfNXWEem1l5O0R0OWkQ" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_3krEfdXWEem1l5O0R0OWkQ" name="Value(&quot;Done.&quot;).result" outgoing="_3krEcdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEftXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEf9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3krEgNXWEem1l5O0R0OWkQ" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_3krEgdXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_3krEgtXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_3krEc9XWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEg9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEhNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3krEhdXWEem1l5O0R0OWkQ" name="Test$method$1" visibility="private" specification="_3krFZ9XWEem1l5O0R0OWkQ" node="_3krEj9XWEem1l5O0R0OWkQ _3krEkNXWEem1l5O0R0OWkQ _3krEkdXWEem1l5O0R0OWkQ _3krEktXWEem1l5O0R0OWkQ" group="_3krEktXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_3krEhtXWEem1l5O0R0OWkQ" name="tester" type="_3krFctXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEh9XWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEiNXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3krEidXWEem1l5O0R0OWkQ" name="" type="_3krEYNXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEitXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEi9XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEjNXWEem1l5O0R0OWkQ" target="_3krEkNXWEem1l5O0R0OWkQ" source="_3krEj9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEjdXWEem1l5O0R0OWkQ" target="_3krEsNXWEem1l5O0R0OWkQ" source="_3krEkNXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEjtXWEem1l5O0R0OWkQ" target="_3krEkdXWEem1l5O0R0OWkQ" source="_3krEzNXWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_3krEktXWEem1l5O0R0OWkQ" name="Body(Test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEk9XWEem1l5O0R0OWkQ" target="_3krEzNXWEem1l5O0R0OWkQ" source="_3krEydXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krElNXWEem1l5O0R0OWkQ" target="_3krEztXWEem1l5O0R0OWkQ" source="_3krEzNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3krEldXWEem1l5O0R0OWkQ" target="_3krEntXWEem1l5O0R0OWkQ" source="_3krEzdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEltXWEem1l5O0R0OWkQ" target="_3krE0tXWEem1l5O0R0OWkQ" source="_3krEzNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEl9XWEem1l5O0R0OWkQ" target="_3krE2dXWEem1l5O0R0OWkQ" source="_3krE1dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEmNXWEem1l5O0R0OWkQ" target="_3krE5dXWEem1l5O0R0OWkQ" source="_3krE3NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEmdXWEem1l5O0R0OWkQ" target="_3krE69XWEem1l5O0R0OWkQ" source="_3krE4NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3krEmtXWEem1l5O0R0OWkQ" target="_3krE79XWEem1l5O0R0OWkQ" source="_3krE7tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEm9XWEem1l5O0R0OWkQ" target="_3krE79XWEem1l5O0R0OWkQ" source="_3krE6NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3krEnNXWEem1l5O0R0OWkQ" target="_3krEzdXWEem1l5O0R0OWkQ" source="_3krE79XWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krEndXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krEntXWEem1l5O0R0OWkQ" name="Body" incoming="_3krEldXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krEn9XWEem1l5O0R0OWkQ" name="ExpressionStatement@6402212b">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEoNXWEem1l5O0R0OWkQ" target="_3krEqtXWEem1l5O0R0OWkQ" source="_3krEptXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEodXWEem1l5O0R0OWkQ" target="_3krEs9XWEem1l5O0R0OWkQ" source="_3krEsNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEotXWEem1l5O0R0OWkQ" target="_3krEudXWEem1l5O0R0OWkQ" source="_3krErdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krEo9XWEem1l5O0R0OWkQ" target="_3krEpNXWEem1l5O0R0OWkQ" source="_3krEx9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krEpNXWEem1l5O0R0OWkQ" name="Expression(LeftHandSide@258a2884)" incoming="_3krEo9XWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_3krEpdXWEem1l5O0R0OWkQ" name="ReadSelf">
                  <result xmi:id="_3krEptXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_3krEoNXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEp9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEqNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_3krEqdXWEem1l5O0R0OWkQ" name="Clear(tester)" structuralFeature="_3krEadXWEem1l5O0R0OWkQ">
                <object xmi:id="_3krEqtXWEem1l5O0R0OWkQ" name="Clear(tester).object" incoming="_3krEoNXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEq9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krErNXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_3krErdXWEem1l5O0R0OWkQ" name="Clear(tester).result" outgoing="_3krEotXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krErtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEr9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_3krEsNXWEem1l5O0R0OWkQ" name="Fork(LeftHandSide@258a2884)" incoming="_3krEjdXWEem1l5O0R0OWkQ" outgoing="_3krEodXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krEsdXWEem1l5O0R0OWkQ" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEstXWEem1l5O0R0OWkQ" target="_3krExtXWEem1l5O0R0OWkQ" source="_3krEs9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_3krEs9XWEem1l5O0R0OWkQ" name="WriteAll(Test::tester).input(Test::tester)" incoming="_3krEodXWEem1l5O0R0OWkQ" outgoing="_3krEstXWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEtNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEtdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_3krEttXWEem1l5O0R0OWkQ" name="Iterate(Write(tester))" inputElement="_3krExtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEt9XWEem1l5O0R0OWkQ" target="_3krEw9XWEem1l5O0R0OWkQ" source="_3krExtXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3krEuNXWEem1l5O0R0OWkQ" target="_3krEvdXWEem1l5O0R0OWkQ" source="_3krEudXWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_3krEudXWEem1l5O0R0OWkQ" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_3krEotXWEem1l5O0R0OWkQ" outgoing="_3krEuNXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEutXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEu9XWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_3krEvNXWEem1l5O0R0OWkQ" name="Write(tester)" structuralFeature="_3krEadXWEem1l5O0R0OWkQ">
                    <object xmi:id="_3krEvdXWEem1l5O0R0OWkQ" name="Write(tester).object" incoming="_3krEuNXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEvtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEv9XWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_3krEwNXWEem1l5O0R0OWkQ" name="Write(tester).result" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEwdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEwtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_3krEw9XWEem1l5O0R0OWkQ" name="Write(tester).value" incoming="_3krEt9XWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krExNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krExdXWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_3krExtXWEem1l5O0R0OWkQ" name="Iterate(Write(tester)).inputElement" incoming="_3krEstXWEem1l5O0R0OWkQ" outgoing="_3krEt9XWEem1l5O0R0OWkQ" regionAsInput="_3krEttXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krEx9XWEem1l5O0R0OWkQ" name="RightHandSide@1bd0d3f" outgoing="_3krEo9XWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_3krEyNXWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_3krEydXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_3krEk9XWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEytXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krEy9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_3krEzNXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_3krEk9XWEem1l5O0R0OWkQ" outgoing="_3krEjtXWEem1l5O0R0OWkQ _3krElNXWEem1l5O0R0OWkQ _3krEltXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_3krEzdXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1)" incoming="_3krEnNXWEem1l5O0R0OWkQ" outgoing="_3krEldXWEem1l5O0R0OWkQ" operation="_3krFZNXWEem1l5O0R0OWkQ">
            <target xmi:id="_3krEztXWEem1l5O0R0OWkQ" name="Call(Test$initialization$1).target" incoming="_3krElNXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krEz9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krE0NXWEem1l5O0R0OWkQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3krE0dXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1)" structuralFeature="_3krEZtXWEem1l5O0R0OWkQ">
            <object xmi:id="_3krE0tXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).object" incoming="_3krEltXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krE09XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krE1NXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_3krE1dXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).result" outgoing="_3krEl9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krE1tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krE19XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krE2NXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_3krE2dXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_3krEl9XWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krE2tXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krE29XWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_3krE3NXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_3krEmNXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krE3dXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krE3tXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krE39XWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_3krE4NXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_3krEmdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krE4dXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krE4tXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_3krE49XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_3krE5NXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_3krE5dXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_3krEmNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krE5tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krE59XWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_3krE6NXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_3krEm9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krE6dXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krE6tXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_3krE69XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_3krEmdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krE7NXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krE7dXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_3krE7tXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_3krEmtXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_3krE79XWEem1l5O0R0OWkQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_3krEmtXWEem1l5O0R0OWkQ _3krEm9XWEem1l5O0R0OWkQ" outgoing="_3krEnNXWEem1l5O0R0OWkQ" decisionInputFlow="_3krEm9XWEem1l5O0R0OWkQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3krEj9XWEem1l5O0R0OWkQ" name="Input(tester)" outgoing="_3krEjNXWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" parameter="_3krEhtXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_3krEkNXWEem1l5O0R0OWkQ" name="Fork(tester)" incoming="_3krEjNXWEem1l5O0R0OWkQ" outgoing="_3krEjdXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3krEkdXWEem1l5O0R0OWkQ" name="Return" incoming="_3krEjtXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" parameter="_3krEidXWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3krE8NXWEem1l5O0R0OWkQ" name="done$method$2" visibility="private" specification="_3krFbtXWEem1l5O0R0OWkQ" node="_3krE9tXWEem1l5O0R0OWkQ _3krE99XWEem1l5O0R0OWkQ _3krE-NXWEem1l5O0R0OWkQ" group="_3krE-NXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_3krE8dXWEem1l5O0R0OWkQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krE8tXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krE89XWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3krE9NXWEem1l5O0R0OWkQ" target="_3krE99XWEem1l5O0R0OWkQ" source="_3krE9tXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3krE9dXWEem1l5O0R0OWkQ" target="_3krE_NXWEem1l5O0R0OWkQ" source="_3krE99XWEem1l5O0R0OWkQ"/>
        <structuredNode xmi:id="_3krE-NXWEem1l5O0R0OWkQ" name="Body(done$method$2)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_3krE-dXWEem1l5O0R0OWkQ" target="_3krFAtXWEem1l5O0R0OWkQ" source="_3krE-tXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krE-tXWEem1l5O0R0OWkQ" name="ExpressionStatement@1b0f5ce5" outgoing="_3krE-dXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krE-9XWEem1l5O0R0OWkQ" name="Call(WriteLine)">
              <argument xmi:id="_3krE_NXWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_3krE9dXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krE_dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krE_tXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krE_9XWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFANXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFAdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krFAtXWEem1l5O0R0OWkQ" name="ExpressionStatement@6021a582" incoming="_3krE-dXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFA9XWEem1l5O0R0OWkQ" target="_3krFC9XWEem1l5O0R0OWkQ" source="_3krFF9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krFBNXWEem1l5O0R0OWkQ" target="_3krFBdXWEem1l5O0R0OWkQ" source="_3krFDNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_3krFBdXWEem1l5O0R0OWkQ" name="Collect(SendSignal(Continue))" incoming="_3krFBNXWEem1l5O0R0OWkQ" mode="parallel" inputElement="_3krFC9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFBtXWEem1l5O0R0OWkQ" target="_3krFCNXWEem1l5O0R0OWkQ" source="_3krFC9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_3krFB9XWEem1l5O0R0OWkQ" name="SendSignal(Continue)" signal="_3krGAtXWEem1l5O0R0OWkQ">
                <target xmi:id="_3krFCNXWEem1l5O0R0OWkQ" name="SendSignal(Continue).target" incoming="_3krFBtXWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFCdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFCtXWEem1l5O0R0OWkQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_3krFC9XWEem1l5O0R0OWkQ" name="Collect(SendSignal(Continue)).inputElement" incoming="_3krFA9XWEem1l5O0R0OWkQ" outgoing="_3krFBtXWEem1l5O0R0OWkQ" regionAsInput="_3krFBdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krFDNXWEem1l5O0R0OWkQ" name="Feature(Read(tester).result)" outgoing="_3krFBNXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFDdXWEem1l5O0R0OWkQ" target="_3krFGtXWEem1l5O0R0OWkQ" source="_3krFENXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFDtXWEem1l5O0R0OWkQ" target="_3krFFNXWEem1l5O0R0OWkQ" source="_3krFGtXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_3krFD9XWEem1l5O0R0OWkQ" name="ReadSelf">
                <result xmi:id="_3krFENXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_3krFDdXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFEdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFEtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3krFE9XWEem1l5O0R0OWkQ" name="Read(tester)" structuralFeature="_3krEadXWEem1l5O0R0OWkQ">
                <object xmi:id="_3krFFNXWEem1l5O0R0OWkQ" name="Read(tester).object" incoming="_3krFDtXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFFdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFFtXWEem1l5O0R0OWkQ" value="1"/>
                </object>
                <result xmi:id="_3krFF9XWEem1l5O0R0OWkQ" name="Read(tester).result" outgoing="_3krFA9XWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFGNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFGdXWEem1l5O0R0OWkQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_3krFGtXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_3krFDdXWEem1l5O0R0OWkQ" outgoing="_3krFDtXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_3krE9tXWEem1l5O0R0OWkQ" name="Input(message)" outgoing="_3krE9NXWEem1l5O0R0OWkQ" parameter="_3krE8dXWEem1l5O0R0OWkQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_3krE99XWEem1l5O0R0OWkQ" name="Fork(message)" incoming="_3krE9NXWEem1l5O0R0OWkQ" outgoing="_3krE9dXWEem1l5O0R0OWkQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_3krFG9XWEem1l5O0R0OWkQ" name="Test$initialization$1" visibility="private" specification="_3krFZNXWEem1l5O0R0OWkQ" node="_3krFHNXWEem1l5O0R0OWkQ" group="_3krFHNXWEem1l5O0R0OWkQ">
        <structuredNode xmi:id="_3krFHNXWEem1l5O0R0OWkQ" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFHdXWEem1l5O0R0OWkQ" target="_3krFK9XWEem1l5O0R0OWkQ" source="_3krFKNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFHtXWEem1l5O0R0OWkQ" target="_3krFN9XWEem1l5O0R0OWkQ" source="_3krFK9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFH9XWEem1l5O0R0OWkQ" target="_3krFRtXWEem1l5O0R0OWkQ" source="_3krFK9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFINXWEem1l5O0R0OWkQ" target="_3krFTdXWEem1l5O0R0OWkQ" source="_3krFSdXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFIdXWEem1l5O0R0OWkQ" target="_3krFWdXWEem1l5O0R0OWkQ" source="_3krFUNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFItXWEem1l5O0R0OWkQ" target="_3krFX9XWEem1l5O0R0OWkQ" source="_3krFVNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3krFI9XWEem1l5O0R0OWkQ" target="_3krFY9XWEem1l5O0R0OWkQ" source="_3krFYtXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFJNXWEem1l5O0R0OWkQ" target="_3krFY9XWEem1l5O0R0OWkQ" source="_3krFXNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3krFJdXWEem1l5O0R0OWkQ" target="_3krFLNXWEem1l5O0R0OWkQ" source="_3krFY9XWEem1l5O0R0OWkQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krFJtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_3krFJ9XWEem1l5O0R0OWkQ" name="ReadSelf">
            <result xmi:id="_3krFKNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_3krFHdXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFKdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFKtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_3krFK9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_3krFHdXWEem1l5O0R0OWkQ" outgoing="_3krFHtXWEem1l5O0R0OWkQ _3krFH9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krFLNXWEem1l5O0R0OWkQ" name="Initialization" incoming="_3krFJdXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krFLdXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFLtXWEem1l5O0R0OWkQ" target="_3krFRNXWEem1l5O0R0OWkQ" source="_3krFMNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krFL9XWEem1l5O0R0OWkQ" name="Value(true)">
                <result xmi:id="_3krFMNXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_3krFLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFMdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFMtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_3krFM9XWEem1l5O0R0OWkQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_3krFNNXWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1))" inputElement="_3krFRNXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFNdXWEem1l5O0R0OWkQ" target="_3krFQdXWEem1l5O0R0OWkQ" source="_3krFRNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFNtXWEem1l5O0R0OWkQ" target="_3krFO9XWEem1l5O0R0OWkQ" source="_3krFN9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_3krFN9XWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_3krFHtXWEem1l5O0R0OWkQ" outgoing="_3krFNtXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFONXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFOdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_3krFOtXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1)" structuralFeature="_3krEZtXWEem1l5O0R0OWkQ">
                  <object xmi:id="_3krFO9XWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).object" incoming="_3krFNtXWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFPNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFPdXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_3krFPtXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).result" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFP9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFQNXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:id="_3krFQdXWEem1l5O0R0OWkQ" name="Write(Test$initializationFlag$1).value" incoming="_3krFNdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFQtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFQ9XWEem1l5O0R0OWkQ" value="1"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_3krFRNXWEem1l5O0R0OWkQ" name="Iterate(Write(Test$initializationFlag$1)).inputElement" incoming="_3krFLtXWEem1l5O0R0OWkQ" outgoing="_3krFNdXWEem1l5O0R0OWkQ" regionAsInput="_3krFNNXWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3krFRdXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1)" structuralFeature="_3krEZtXWEem1l5O0R0OWkQ">
            <object xmi:id="_3krFRtXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).object" incoming="_3krFH9XWEem1l5O0R0OWkQ" type="_3krEYNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFR9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFSNXWEem1l5O0R0OWkQ" value="1"/>
            </object>
            <result xmi:id="_3krFSdXWEem1l5O0R0OWkQ" name="Read(Test$initializationFlag$1).result" outgoing="_3krFINXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFStXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFS9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krFTNXWEem1l5O0R0OWkQ" name="Call(ListSize)">
            <argument xmi:id="_3krFTdXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_3krFINXWEem1l5O0R0OWkQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFTtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFT9XWEem1l5O0R0OWkQ" value="*"/>
            </argument>
            <result xmi:id="_3krFUNXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_3krFIdXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFUdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFUtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krFU9XWEem1l5O0R0OWkQ" name="Value(0)">
            <result xmi:id="_3krFVNXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_3krFItXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFVdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFVtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_3krFV9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_3krFWNXWEem1l5O0R0OWkQ" name="Test(Size==0)">
            <first xmi:id="_3krFWdXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_3krFIdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFWtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFW9XWEem1l5O0R0OWkQ" value="1"/>
            </first>
            <result xmi:id="_3krFXNXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_3krFJNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFXdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFXtXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <second xmi:id="_3krFX9XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_3krFItXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFYNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFYdXWEem1l5O0R0OWkQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_3krFYtXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_3krFI9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_3krFY9XWEem1l5O0R0OWkQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_3krFI9XWEem1l5O0R0OWkQ _3krFJNXWEem1l5O0R0OWkQ" outgoing="_3krFJdXWEem1l5O0R0OWkQ" decisionInputFlow="_3krFJNXWEem1l5O0R0OWkQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_3krFZNXWEem1l5O0R0OWkQ" name="Test$initialization$1" visibility="protected" method="_3krFG9XWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_3krFZdXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_3krEbNXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_3krFZtXWEem1l5O0R0OWkQ" name="done" visibility="public" method="_3krEbtXWEem1l5O0R0OWkQ"/>
      <ownedOperation xmi:id="_3krFZ9XWEem1l5O0R0OWkQ" name="Test" visibility="protected" method="_3krEhdXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_3krFaNXWEem1l5O0R0OWkQ" name="tester" visibility="package" type="_3krFctXWEem1l5O0R0OWkQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFadXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFatXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3krFa9XWEem1l5O0R0OWkQ" name="" visibility="package" type="_3krEYNXWEem1l5O0R0OWkQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFbNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFbdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_3krFbtXWEem1l5O0R0OWkQ" name="done" visibility="public" method="_3krE8NXWEem1l5O0R0OWkQ">
        <ownedParameter xmi:id="_3krFb9XWEem1l5O0R0OWkQ" name="message" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFcNXWEem1l5O0R0OWkQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFcdXWEem1l5O0R0OWkQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_3krFctXWEem1l5O0R0OWkQ" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_3krFc9XWEem1l5O0R0OWkQ" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFdNXWEem1l5O0R0OWkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFddXWEem1l5O0R0OWkQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_3krFdtXWEem1l5O0R0OWkQ" name="Tester$method$1" visibility="private" specification="_3krF_dXWEem1l5O0R0OWkQ" node="_3krFe9XWEem1l5O0R0OWkQ _3krFfNXWEem1l5O0R0OWkQ" group="_3krFfNXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_3krFd9XWEem1l5O0R0OWkQ" name="" type="_3krFctXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFeNXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFedXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFetXWEem1l5O0R0OWkQ" target="_3krFe9XWEem1l5O0R0OWkQ" source="_3krFjdXWEem1l5O0R0OWkQ"/>
          <structuredNode xmi:id="_3krFfNXWEem1l5O0R0OWkQ" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFfdXWEem1l5O0R0OWkQ" target="_3krFjdXWEem1l5O0R0OWkQ" source="_3krFitXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFftXWEem1l5O0R0OWkQ" target="_3krFj9XWEem1l5O0R0OWkQ" source="_3krFjdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krFf9XWEem1l5O0R0OWkQ" target="_3krFiNXWEem1l5O0R0OWkQ" source="_3krFjtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFgNXWEem1l5O0R0OWkQ" target="_3krFk9XWEem1l5O0R0OWkQ" source="_3krFjdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFgdXWEem1l5O0R0OWkQ" target="_3krFmtXWEem1l5O0R0OWkQ" source="_3krFltXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFgtXWEem1l5O0R0OWkQ" target="_3krFptXWEem1l5O0R0OWkQ" source="_3krFndXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFg9XWEem1l5O0R0OWkQ" target="_3krFrNXWEem1l5O0R0OWkQ" source="_3krFodXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krFhNXWEem1l5O0R0OWkQ" target="_3krFsNXWEem1l5O0R0OWkQ" source="_3krFr9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFhdXWEem1l5O0R0OWkQ" target="_3krFsNXWEem1l5O0R0OWkQ" source="_3krFqdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krFhtXWEem1l5O0R0OWkQ" target="_3krFjtXWEem1l5O0R0OWkQ" source="_3krFsNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krFh9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krFiNXWEem1l5O0R0OWkQ" name="Body" incoming="_3krFf9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_3krFidXWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_3krFitXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_3krFfdXWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFi9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFjNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krFjdXWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_3krFfdXWEem1l5O0R0OWkQ" outgoing="_3krFetXWEem1l5O0R0OWkQ _3krFftXWEem1l5O0R0OWkQ _3krFgNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_3krFjtXWEem1l5O0R0OWkQ" name="Call(Tester$initialization$1)" incoming="_3krFhtXWEem1l5O0R0OWkQ" outgoing="_3krFf9XWEem1l5O0R0OWkQ" operation="_3krF_NXWEem1l5O0R0OWkQ">
              <target xmi:id="_3krFj9XWEem1l5O0R0OWkQ" name="Call(Tester$initialization$1).target" incoming="_3krFftXWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFkNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFkdXWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3krFktXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_3krFc9XWEem1l5O0R0OWkQ">
              <object xmi:id="_3krFk9XWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).object" incoming="_3krFgNXWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFlNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFldXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_3krFltXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).result" outgoing="_3krFgdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFl9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFmNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krFmdXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_3krFmtXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_3krFgdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFm9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFnNXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_3krFndXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_3krFgtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFntXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFn9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krFoNXWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_3krFodXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_3krFg9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFotXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFo9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_3krFpNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_3krFpdXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_3krFptXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_3krFgtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFp9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFqNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_3krFqdXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_3krFhdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFqtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFq9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_3krFrNXWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_3krFg9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFrdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFrtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_3krFr9XWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_3krFhNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_3krFsNXWEem1l5O0R0OWkQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_3krFhNXWEem1l5O0R0OWkQ _3krFhdXWEem1l5O0R0OWkQ" outgoing="_3krFhtXWEem1l5O0R0OWkQ" decisionInputFlow="_3krFhdXWEem1l5O0R0OWkQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_3krFe9XWEem1l5O0R0OWkQ" name="Return" incoming="_3krFetXWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" parameter="_3krFd9XWEem1l5O0R0OWkQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_3krFsdXWEem1l5O0R0OWkQ" name="destroy$method$1" visibility="private" specification="_3krGAdXWEem1l5O0R0OWkQ" node="_3krFstXWEem1l5O0R0OWkQ" group="_3krFstXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_3krFstXWEem1l5O0R0OWkQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_3krFs9XWEem1l5O0R0OWkQ" name="Tester$initialization$1" visibility="private" specification="_3krF_NXWEem1l5O0R0OWkQ" node="_3krFtNXWEem1l5O0R0OWkQ" group="_3krFtNXWEem1l5O0R0OWkQ">
          <structuredNode xmi:id="_3krFtNXWEem1l5O0R0OWkQ" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFtdXWEem1l5O0R0OWkQ" target="_3krFw9XWEem1l5O0R0OWkQ" source="_3krFwNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFttXWEem1l5O0R0OWkQ" target="_3krFz9XWEem1l5O0R0OWkQ" source="_3krFw9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFt9XWEem1l5O0R0OWkQ" target="_3krF3tXWEem1l5O0R0OWkQ" source="_3krFw9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFuNXWEem1l5O0R0OWkQ" target="_3krF5dXWEem1l5O0R0OWkQ" source="_3krF4dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFudXWEem1l5O0R0OWkQ" target="_3krF8dXWEem1l5O0R0OWkQ" source="_3krF6NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFutXWEem1l5O0R0OWkQ" target="_3krF99XWEem1l5O0R0OWkQ" source="_3krF7NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krFu9XWEem1l5O0R0OWkQ" target="_3krF-9XWEem1l5O0R0OWkQ" source="_3krF-tXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFvNXWEem1l5O0R0OWkQ" target="_3krF-9XWEem1l5O0R0OWkQ" source="_3krF9NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krFvdXWEem1l5O0R0OWkQ" target="_3krFxNXWEem1l5O0R0OWkQ" source="_3krF-9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krFvtXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_3krFv9XWEem1l5O0R0OWkQ" name="ReadSelf">
              <result xmi:id="_3krFwNXWEem1l5O0R0OWkQ" name="ReadSelf.result" outgoing="_3krFtdXWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFwdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFwtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krFw9XWEem1l5O0R0OWkQ" name="Fork(ReadSelf.result)" incoming="_3krFtdXWEem1l5O0R0OWkQ" outgoing="_3krFttXWEem1l5O0R0OWkQ _3krFt9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krFxNXWEem1l5O0R0OWkQ" name="Initialization" incoming="_3krFvdXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krFxdXWEem1l5O0R0OWkQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFxtXWEem1l5O0R0OWkQ" target="_3krF3NXWEem1l5O0R0OWkQ" source="_3krFyNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krFx9XWEem1l5O0R0OWkQ" name="Value(true)">
                  <result xmi:id="_3krFyNXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_3krFxtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krFydXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krFytXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_3krFy9XWEem1l5O0R0OWkQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_3krFzNXWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1))" inputElement="_3krF3NXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFzdXWEem1l5O0R0OWkQ" target="_3krF2dXWEem1l5O0R0OWkQ" source="_3krF3NXWEem1l5O0R0OWkQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3krFztXWEem1l5O0R0OWkQ" target="_3krF09XWEem1l5O0R0OWkQ" source="_3krFz9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_3krFz9XWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1)).input(Fork(ReadSelf.result))" incoming="_3krFttXWEem1l5O0R0OWkQ" outgoing="_3krFztXWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krF0NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krF0dXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_3krF0tXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1)" structuralFeature="_3krFc9XWEem1l5O0R0OWkQ">
                    <object xmi:id="_3krF09XWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).object" incoming="_3krFztXWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krF1NXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krF1dXWEem1l5O0R0OWkQ" value="1"/>
                    </object>
                    <result xmi:id="_3krF1tXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).result" type="_3krFctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krF19XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krF2NXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:id="_3krF2dXWEem1l5O0R0OWkQ" name="Write(Tester$initializationFlag$1).value" incoming="_3krFzdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krF2tXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krF29XWEem1l5O0R0OWkQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_3krF3NXWEem1l5O0R0OWkQ" name="Iterate(Write(Tester$initializationFlag$1)).inputElement" incoming="_3krFxtXWEem1l5O0R0OWkQ" outgoing="_3krFzdXWEem1l5O0R0OWkQ" regionAsInput="_3krFzNXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_3krF3dXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_3krFc9XWEem1l5O0R0OWkQ">
              <object xmi:id="_3krF3tXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).object" incoming="_3krFt9XWEem1l5O0R0OWkQ" type="_3krFctXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krF39XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krF4NXWEem1l5O0R0OWkQ" value="1"/>
              </object>
              <result xmi:id="_3krF4dXWEem1l5O0R0OWkQ" name="Read(Tester$initializationFlag$1).result" outgoing="_3krFuNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krF4tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krF49XWEem1l5O0R0OWkQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krF5NXWEem1l5O0R0OWkQ" name="Call(ListSize)">
              <argument xmi:id="_3krF5dXWEem1l5O0R0OWkQ" name="Call(ListSize).argument(list)" incoming="_3krFuNXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krF5tXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krF59XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_3krF6NXWEem1l5O0R0OWkQ" name="Call(ListSize).result(result)" outgoing="_3krFudXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krF6dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krF6tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krF69XWEem1l5O0R0OWkQ" name="Value(0)">
              <result xmi:id="_3krF7NXWEem1l5O0R0OWkQ" name="Value(0).result" outgoing="_3krFutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krF7dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krF7tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_3krF79XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_3krF8NXWEem1l5O0R0OWkQ" name="Test(Size==0)">
              <first xmi:id="_3krF8dXWEem1l5O0R0OWkQ" name="Test(Size==0).first" incoming="_3krFudXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krF8tXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krF89XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_3krF9NXWEem1l5O0R0OWkQ" name="Test(Size==0).result" outgoing="_3krFvNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krF9dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krF9tXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_3krF99XWEem1l5O0R0OWkQ" name="Test(Size==0).second" incoming="_3krFutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krF-NXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krF-dXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_3krF-tXWEem1l5O0R0OWkQ" name="InitialNode" outgoing="_3krFu9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_3krF-9XWEem1l5O0R0OWkQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_3krFu9XWEem1l5O0R0OWkQ _3krFvNXWEem1l5O0R0OWkQ" outgoing="_3krFvdXWEem1l5O0R0OWkQ" decisionInputFlow="_3krFvNXWEem1l5O0R0OWkQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_3krF_NXWEem1l5O0R0OWkQ" name="Tester$initialization$1" visibility="protected" method="_3krFs9XWEem1l5O0R0OWkQ"/>
        <ownedOperation xmi:id="_3krF_dXWEem1l5O0R0OWkQ" name="Tester" visibility="public" method="_3krFdtXWEem1l5O0R0OWkQ">
          <ownedParameter xmi:id="_3krF_tXWEem1l5O0R0OWkQ" name="" visibility="package" type="_3krFctXWEem1l5O0R0OWkQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krF_9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGANXWEem1l5O0R0OWkQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_3krGAdXWEem1l5O0R0OWkQ" name="destroy" visibility="public" method="_3krFsdXWEem1l5O0R0OWkQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_3krGAtXWEem1l5O0R0OWkQ" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_3krGA9XWEem1l5O0R0OWkQ" name="Continue" signal="_3krGAtXWEem1l5O0R0OWkQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_3krGBNXWEem1l5O0R0OWkQ" name="AssertEqual" visibility="public" node="_3krGJNXWEem1l5O0R0OWkQ _3krGJdXWEem1l5O0R0OWkQ _3krGJtXWEem1l5O0R0OWkQ _3krGJ9XWEem1l5O0R0OWkQ _3krGKNXWEem1l5O0R0OWkQ _3krGKdXWEem1l5O0R0OWkQ _3krGKtXWEem1l5O0R0OWkQ" group="_3krGKtXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_3krGBdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_3krGBtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_3krGB9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_3krGCNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_3krGCdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_3krGCtXWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGC9XWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGDNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_3krGDdXWEem1l5O0R0OWkQ" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGDtXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGD9XWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_3krGENXWEem1l5O0R0OWkQ" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGEdXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGEtXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGE9XWEem1l5O0R0OWkQ" target="_3krGJdXWEem1l5O0R0OWkQ" source="_3krGJNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGFNXWEem1l5O0R0OWkQ" target="_3krGJ9XWEem1l5O0R0OWkQ" source="_3krGJtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGFdXWEem1l5O0R0OWkQ" target="_3krGKdXWEem1l5O0R0OWkQ" source="_3krGKNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGFtXWEem1l5O0R0OWkQ" target="_3krGYdXWEem1l5O0R0OWkQ" source="_3krGJ9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGF9XWEem1l5O0R0OWkQ" target="_3krGadXWEem1l5O0R0OWkQ" source="_3krGKdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGGNXWEem1l5O0R0OWkQ" target="_3krGo9XWEem1l5O0R0OWkQ" source="_3krGJdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGGdXWEem1l5O0R0OWkQ" target="_3krG4tXWEem1l5O0R0OWkQ" source="_3krGKdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGGtXWEem1l5O0R0OWkQ" target="_3krqUtXWEem1l5O0R0OWkQ" source="_3krGJdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGG9XWEem1l5O0R0OWkQ" target="_3krqYtXWEem1l5O0R0OWkQ" source="_3krGKdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGHNXWEem1l5O0R0OWkQ" target="_3krqatXWEem1l5O0R0OWkQ" source="_3krGJ9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGHdXWEem1l5O0R0OWkQ" target="_3krqidXWEem1l5O0R0OWkQ" source="_3krGKdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGHtXWEem1l5O0R0OWkQ" target="_3krqrNXWEem1l5O0R0OWkQ" source="_3krGJdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGH9XWEem1l5O0R0OWkQ" target="_3krqvNXWEem1l5O0R0OWkQ" source="_3krGKdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGINXWEem1l5O0R0OWkQ" target="_3krqxNXWEem1l5O0R0OWkQ" source="_3krGJ9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGIdXWEem1l5O0R0OWkQ" target="_3krrE9XWEem1l5O0R0OWkQ" source="_3krGJdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGItXWEem1l5O0R0OWkQ" target="_3krrINXWEem1l5O0R0OWkQ" source="_3krGKdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGI9XWEem1l5O0R0OWkQ" target="_3krrKNXWEem1l5O0R0OWkQ" source="_3krGJ9XWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_3krGKtXWEem1l5O0R0OWkQ" name="Body(AssertEqual)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGK9XWEem1l5O0R0OWkQ" target="_3krrPNXWEem1l5O0R0OWkQ" source="_3krrMNXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGLNXWEem1l5O0R0OWkQ" target="_3krrPdXWEem1l5O0R0OWkQ" source="_3krrM9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGLdXWEem1l5O0R0OWkQ" target="_3krrPtXWEem1l5O0R0OWkQ" source="_3krrNtXWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGLtXWEem1l5O0R0OWkQ" target="_3krrP9XWEem1l5O0R0OWkQ" source="_3krrOdXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_3krGL9XWEem1l5O0R0OWkQ" name="IfStatement@3775625c">
          <edge xmi:type="uml:ControlFlow" xmi:id="_3krGMNXWEem1l5O0R0OWkQ" target="_3krGzNXWEem1l5O0R0OWkQ" source="_3krGjNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGMdXWEem1l5O0R0OWkQ" target="_3krq2NXWEem1l5O0R0OWkQ" source="_3krqzNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGMtXWEem1l5O0R0OWkQ" target="_3krq2dXWEem1l5O0R0OWkQ" source="_3krqz9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGM9XWEem1l5O0R0OWkQ" target="_3krq2tXWEem1l5O0R0OWkQ" source="_3krq0tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGNNXWEem1l5O0R0OWkQ" target="_3krq29XWEem1l5O0R0OWkQ" source="_3krq1dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGNdXWEem1l5O0R0OWkQ" target="_3krG7tXWEem1l5O0R0OWkQ" source="_3krGztXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGNtXWEem1l5O0R0OWkQ" target="_3krHC9XWEem1l5O0R0OWkQ" source="_3krGztXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGN9XWEem1l5O0R0OWkQ" target="_3krqWtXWEem1l5O0R0OWkQ" source="_3krGztXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGONXWEem1l5O0R0OWkQ" target="_3krqtNXWEem1l5O0R0OWkQ" source="_3krGztXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3krGOdXWEem1l5O0R0OWkQ" target="_3krG5NXWEem1l5O0R0OWkQ" source="_3krGzNXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3krGOtXWEem1l5O0R0OWkQ" target="_3krq3NXWEem1l5O0R0OWkQ" source="_3krG5NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGO9XWEem1l5O0R0OWkQ" target="_3krq7tXWEem1l5O0R0OWkQ" source="_3krq2NXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGPNXWEem1l5O0R0OWkQ" target="_3krq9tXWEem1l5O0R0OWkQ" source="_3krq2dXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGPdXWEem1l5O0R0OWkQ" target="_3krq_tXWEem1l5O0R0OWkQ" source="_3krq2tXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGPtXWEem1l5O0R0OWkQ" target="_3krrBtXWEem1l5O0R0OWkQ" source="_3krq29XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krGP9XWEem1l5O0R0OWkQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGQNXWEem1l5O0R0OWkQ" target="_3krGWNXWEem1l5O0R0OWkQ" source="_3krGYdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGQdXWEem1l5O0R0OWkQ" target="_3krGY9XWEem1l5O0R0OWkQ" source="_3krGYdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGQtXWEem1l5O0R0OWkQ" target="_3krGXtXWEem1l5O0R0OWkQ" source="_3krGadXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGQ9XWEem1l5O0R0OWkQ" target="_3krGa9XWEem1l5O0R0OWkQ" source="_3krGadXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGRNXWEem1l5O0R0OWkQ" target="_3krGctXWEem1l5O0R0OWkQ" source="_3krGZtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGRdXWEem1l5O0R0OWkQ" target="_3krGc9XWEem1l5O0R0OWkQ" source="_3krGbtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGRtXWEem1l5O0R0OWkQ" target="_3krGddXWEem1l5O0R0OWkQ" source="_3krGctXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGR9XWEem1l5O0R0OWkQ" target="_3krGfNXWEem1l5O0R0OWkQ" source="_3krGc9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGSNXWEem1l5O0R0OWkQ" target="_3krGgtXWEem1l5O0R0OWkQ" source="_3krGc9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krGSdXWEem1l5O0R0OWkQ" target="_3krGV9XWEem1l5O0R0OWkQ" source="_3krGgtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krGStXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krGS9XWEem1l5O0R0OWkQ" target="_3krGdNXWEem1l5O0R0OWkQ" source="_3krGgtXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krGTNXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krGTdXWEem1l5O0R0OWkQ" target="_3krGg9XWEem1l5O0R0OWkQ" source="_3krGcdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGTtXWEem1l5O0R0OWkQ" target="_3krGg9XWEem1l5O0R0OWkQ" source="_3krGctXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krGT9XWEem1l5O0R0OWkQ" target="_3krGgtXWEem1l5O0R0OWkQ" source="_3krGg9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krGUNXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krGUdXWEem1l5O0R0OWkQ" target="_3krGe9XWEem1l5O0R0OWkQ" source="_3krGg9XWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krGUtXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGU9XWEem1l5O0R0OWkQ" target="_3krGhNXWEem1l5O0R0OWkQ" source="_3krGW9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGVNXWEem1l5O0R0OWkQ" target="_3krGhNXWEem1l5O0R0OWkQ" source="_3krGeNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGVdXWEem1l5O0R0OWkQ" target="_3krGhNXWEem1l5O0R0OWkQ" source="_3krGf9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGVtXWEem1l5O0R0OWkQ" target="_3krGhtXWEem1l5O0R0OWkQ" source="_3krGhNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_3krGV9XWEem1l5O0R0OWkQ" name="Test(==)" incoming="_3krGSdXWEem1l5O0R0OWkQ">
              <first xmi:id="_3krGWNXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_3krGQNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGWdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGWtXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_3krGW9XWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_3krGU9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGXNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGXdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_3krGXtXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_3krGQtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGX9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGYNXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krGYdXWEem1l5O0R0OWkQ" name="Fork(Fork(value1))" incoming="_3krGFtXWEem1l5O0R0OWkQ" outgoing="_3krGQNXWEem1l5O0R0OWkQ _3krGQdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krGYtXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_3krGY9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_3krGQdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGZNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGZdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_3krGZtXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_3krGRNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGZ9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGaNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krGadXWEem1l5O0R0OWkQ" name="Fork(Fork(value2))" incoming="_3krGF9XWEem1l5O0R0OWkQ" outgoing="_3krGQtXWEem1l5O0R0OWkQ _3krGQ9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krGatXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_3krGa9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_3krGQ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGbNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGbdXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_3krGbtXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_3krGRdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGb9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGcNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_3krGcdXWEem1l5O0R0OWkQ" name="Initial(Test(==))" outgoing="_3krGTdXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3krGctXWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_3krGRNXWEem1l5O0R0OWkQ" outgoing="_3krGRtXWEem1l5O0R0OWkQ _3krGTtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3krGc9XWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_3krGRdXWEem1l5O0R0OWkQ" outgoing="_3krGR9XWEem1l5O0R0OWkQ _3krGSNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krGdNXWEem1l5O0R0OWkQ" name="Call(Not)" incoming="_3krGS9XWEem1l5O0R0OWkQ">
              <argument xmi:id="_3krGddXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_3krGRtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGdtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGd9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krGeNXWEem1l5O0R0OWkQ" name="Call(Not).result(result)" outgoing="_3krGVNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGedXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGetXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krGe9XWEem1l5O0R0OWkQ" name="Call(Not)" incoming="_3krGUdXWEem1l5O0R0OWkQ">
              <argument xmi:id="_3krGfNXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_3krGR9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGfdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGftXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krGf9XWEem1l5O0R0OWkQ" name="Call(Not).result(result)" outgoing="_3krGVdXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGgNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGgdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_3krGgtXWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_3krGSNXWEem1l5O0R0OWkQ _3krGT9XWEem1l5O0R0OWkQ" outgoing="_3krGSdXWEem1l5O0R0OWkQ _3krGS9XWEem1l5O0R0OWkQ" decisionInputFlow="_3krGSNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_3krGg9XWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_3krGTdXWEem1l5O0R0OWkQ _3krGTtXWEem1l5O0R0OWkQ" outgoing="_3krGT9XWEem1l5O0R0OWkQ _3krGUdXWEem1l5O0R0OWkQ" decisionInputFlow="_3krGTtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_3krGhNXWEem1l5O0R0OWkQ" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_3krGU9XWEem1l5O0R0OWkQ _3krGVNXWEem1l5O0R0OWkQ _3krGVdXWEem1l5O0R0OWkQ" outgoing="_3krGVtXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krGhdXWEem1l5O0R0OWkQ" name="Call(Not)">
              <argument xmi:id="_3krGhtXWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_3krGVtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGh9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGiNXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krGidXWEem1l5O0R0OWkQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGitXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGi9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krGjNXWEem1l5O0R0OWkQ" name="ExpressionStatement@269db8ed" outgoing="_3krGMNXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGjdXWEem1l5O0R0OWkQ" target="_3krGkNXWEem1l5O0R0OWkQ" source="_3krGv9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krGjtXWEem1l5O0R0OWkQ" target="_3krGj9XWEem1l5O0R0OWkQ" source="_3krGk9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krGj9XWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_3krGjtXWEem1l5O0R0OWkQ" behavior="_3krrpdXWEem1l5O0R0OWkQ">
              <argument xmi:id="_3krGkNXWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_3krGjdXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGkdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGktXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krGk9XWEem1l5O0R0OWkQ" name="Tuple@396d8bb9" outgoing="_3krGjtXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGlNXWEem1l5O0R0OWkQ" target="_3krGr9XWEem1l5O0R0OWkQ" source="_3krGndXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGldXWEem1l5O0R0OWkQ" target="_3krGstXWEem1l5O0R0OWkQ" source="_3krGptXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krGltXWEem1l5O0R0OWkQ" target="_3krGqdXWEem1l5O0R0OWkQ" source="_3krGnNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krGl9XWEem1l5O0R0OWkQ" target="_3krGqdXWEem1l5O0R0OWkQ" source="_3krGodXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGmNXWEem1l5O0R0OWkQ" target="_3krGw9XWEem1l5O0R0OWkQ" source="_3krGq9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGmdXWEem1l5O0R0OWkQ" target="_3krGxtXWEem1l5O0R0OWkQ" source="_3krGudXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krGmtXWEem1l5O0R0OWkQ" target="_3krGvdXWEem1l5O0R0OWkQ" source="_3krGqdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krGm9XWEem1l5O0R0OWkQ" target="_3krGvdXWEem1l5O0R0OWkQ" source="_3krGuNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krGnNXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;)" outgoing="_3krGltXWEem1l5O0R0OWkQ">
                <result xmi:id="_3krGndXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_3krGlNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGntXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGn9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3krGoNXWEem1l5O0R0OWkQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krGodXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_3krGl9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGotXWEem1l5O0R0OWkQ" target="_3krGptXWEem1l5O0R0OWkQ" source="_3krGo9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_3krGo9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_3krGGNXWEem1l5O0R0OWkQ" outgoing="_3krGotXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGpNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGpdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_3krGptXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_3krGotXWEem1l5O0R0OWkQ" outgoing="_3krGldXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGp9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGqNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krGqdXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_3krGltXWEem1l5O0R0OWkQ _3krGl9XWEem1l5O0R0OWkQ" outgoing="_3krGmtXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGqtXWEem1l5O0R0OWkQ" target="_3krGq9XWEem1l5O0R0OWkQ" source="_3krGtdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_3krGq9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_3krGqtXWEem1l5O0R0OWkQ" outgoing="_3krGmNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGrNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGrdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krGrtXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_3krGr9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_3krGlNXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGsNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGsdXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_3krGstXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_3krGldXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGs9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGtNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_3krGtdXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_3krGqtXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGttXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGt9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krGuNXWEem1l5O0R0OWkQ" name="Value(&quot;==&quot;)" outgoing="_3krGm9XWEem1l5O0R0OWkQ">
                <result xmi:id="_3krGudXWEem1l5O0R0OWkQ" name="Value(&quot;==&quot;).result" outgoing="_3krGmdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGutXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGu9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3krGvNXWEem1l5O0R0OWkQ" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krGvdXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_3krGmtXWEem1l5O0R0OWkQ _3krGm9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGvtXWEem1l5O0R0OWkQ" target="_3krGv9XWEem1l5O0R0OWkQ" source="_3krGydXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_3krGv9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_3krGvtXWEem1l5O0R0OWkQ" outgoing="_3krGjdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGwNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGwdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krGwtXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_3krGw9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_3krGmNXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGxNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGxdXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_3krGxtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_3krGmdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGx9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGyNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_3krGydXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_3krGvtXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krGytXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krGy9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krGzNXWEem1l5O0R0OWkQ" name="ExpressionStatement@7157bbb3" incoming="_3krGMNXWEem1l5O0R0OWkQ" outgoing="_3krGOdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krGzdXWEem1l5O0R0OWkQ" target="_3krGztXWEem1l5O0R0OWkQ" source="_3krG49XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_3krGztXWEem1l5O0R0OWkQ" name="Fork(s)@71dae693" incoming="_3krGzdXWEem1l5O0R0OWkQ" outgoing="_3krGNdXWEem1l5O0R0OWkQ _3krGNtXWEem1l5O0R0OWkQ _3krGN9XWEem1l5O0R0OWkQ _3krGONXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krGz9XWEem1l5O0R0OWkQ" name="RightHandSide@2f69f844">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_3krG0NXWEem1l5O0R0OWkQ" name="CastExpression@2f69f844" mode="parallel" outputElement="_3krG49XWEem1l5O0R0OWkQ" inputElement="_3krG4tXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krG0dXWEem1l5O0R0OWkQ" target="_3krG2tXWEem1l5O0R0OWkQ" source="_3krG4NXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krG0tXWEem1l5O0R0OWkQ" target="_3krG4dXWEem1l5O0R0OWkQ" source="_3krG4NXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krG09XWEem1l5O0R0OWkQ" target="_3krG4dXWEem1l5O0R0OWkQ" source="_3krG3dXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krG1NXWEem1l5O0R0OWkQ" target="_3krG2NXWEem1l5O0R0OWkQ" source="_3krG4dXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krG1dXWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krG1tXWEem1l5O0R0OWkQ" target="_3krG4NXWEem1l5O0R0OWkQ" source="_3krG4tXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krG19XWEem1l5O0R0OWkQ" target="_3krG49XWEem1l5O0R0OWkQ" source="_3krG2NXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_3krG2NXWEem1l5O0R0OWkQ" name="Merge(CastExpression@2f69f844.operand)" incoming="_3krG1NXWEem1l5O0R0OWkQ" outgoing="_3krG19XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_3krG2dXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_3krG2tXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String).object" incoming="_3krG0dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krG29XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krG3NXWEem1l5O0R0OWkQ" value="1"/>
                  </object>
                  <result xmi:id="_3krG3dXWEem1l5O0R0OWkQ" name="ReadIsClassifiedObject(String).result" outgoing="_3krG09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krG3tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krG39XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_3krG4NXWEem1l5O0R0OWkQ" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_3krG1tXWEem1l5O0R0OWkQ" outgoing="_3krG0dXWEem1l5O0R0OWkQ _3krG0tXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_3krG4dXWEem1l5O0R0OWkQ" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_3krG0tXWEem1l5O0R0OWkQ _3krG09XWEem1l5O0R0OWkQ" outgoing="_3krG1NXWEem1l5O0R0OWkQ" decisionInputFlow="_3krG09XWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_3krG4tXWEem1l5O0R0OWkQ" name="CastExpression@2f69f844.inputElement" incoming="_3krGGdXWEem1l5O0R0OWkQ" outgoing="_3krG1tXWEem1l5O0R0OWkQ" regionAsInput="_3krG0NXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_3krG49XWEem1l5O0R0OWkQ" name="CastExpression@2f69f844.outputElement" incoming="_3krG19XWEem1l5O0R0OWkQ" outgoing="_3krGzdXWEem1l5O0R0OWkQ" regionAsOutput="_3krG0NXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_3krG5NXWEem1l5O0R0OWkQ" name="IfStatement@44622a27" incoming="_3krGOdXWEem1l5O0R0OWkQ" outgoing="_3krGOtXWEem1l5O0R0OWkQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krG5dXWEem1l5O0R0OWkQ" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krG5tXWEem1l5O0R0OWkQ" target="_3krG7dXWEem1l5O0R0OWkQ" source="_3krG59XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krG59XWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@7dd8d638)" outgoing="_3krG5tXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krG6NXWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_3krG6dXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krG6tXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krG69XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_3krG7NXWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krG7dXWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_3krG5tXWEem1l5O0R0OWkQ">
                <argument xmi:id="_3krG7tXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_3krGNdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krG79XWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krG8NXWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_3krG8dXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krG8tXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krG89XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krG9NXWEem1l5O0R0OWkQ" name="ExpressionStatement@6a0ed4aa">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krG9dXWEem1l5O0R0OWkQ" target="_3krG-NXWEem1l5O0R0OWkQ" source="_3krqQ9XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krG9tXWEem1l5O0R0OWkQ" target="_3krG99XWEem1l5O0R0OWkQ" source="_3krG-9XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krG99XWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_3krG9tXWEem1l5O0R0OWkQ" behavior="_3krrpdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_3krG-NXWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_3krG9dXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krG-dXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krG-tXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krG-9XWEem1l5O0R0OWkQ" name="Tuple@4873e2ba" outgoing="_3krG9tXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krG_NXWEem1l5O0R0OWkQ" target="_3krHF9XWEem1l5O0R0OWkQ" source="_3krHBdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krG_dXWEem1l5O0R0OWkQ" target="_3krHGtXWEem1l5O0R0OWkQ" source="_3krHDtXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3krG_tXWEem1l5O0R0OWkQ" target="_3krHEdXWEem1l5O0R0OWkQ" source="_3krHBNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3krG_9XWEem1l5O0R0OWkQ" target="_3krHEdXWEem1l5O0R0OWkQ" source="_3krHCdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krHANXWEem1l5O0R0OWkQ" target="_3krqR9XWEem1l5O0R0OWkQ" source="_3krHE9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krHAdXWEem1l5O0R0OWkQ" target="_3krqStXWEem1l5O0R0OWkQ" source="_3krHIdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3krHAtXWEem1l5O0R0OWkQ" target="_3krqQdXWEem1l5O0R0OWkQ" source="_3krHEdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3krHA9XWEem1l5O0R0OWkQ" target="_3krqQdXWEem1l5O0R0OWkQ" source="_3krHINXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krHBNXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;)" outgoing="_3krG_tXWEem1l5O0R0OWkQ">
                  <result xmi:id="_3krHBdXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;).result" outgoing="_3krG_NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krHBtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krHB9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3krHCNXWEem1l5O0R0OWkQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krHCdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@71dae693)" outgoing="_3krG_9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3krHCtXWEem1l5O0R0OWkQ" target="_3krHDtXWEem1l5O0R0OWkQ" source="_3krHC9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeInput xmi:id="_3krHC9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@71dae693).input" incoming="_3krGNtXWEem1l5O0R0OWkQ" outgoing="_3krHCtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krHDNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krHDdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_3krHDtXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@71dae693).output" incoming="_3krHCtXWEem1l5O0R0OWkQ" outgoing="_3krG_dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krHD9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krHENXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krHEdXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_3krG_tXWEem1l5O0R0OWkQ _3krG_9XWEem1l5O0R0OWkQ" outgoing="_3krHAtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3krHEtXWEem1l5O0R0OWkQ" target="_3krHE9XWEem1l5O0R0OWkQ" source="_3krHHdXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_3krHE9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_3krHEtXWEem1l5O0R0OWkQ" outgoing="_3krHANXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krHFNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krHFdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krHFtXWEem1l5O0R0OWkQ" name="Call(Concat)">
                    <argument xmi:id="_3krHF9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_3krG_NXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krHGNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krHGdXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <argument xmi:id="_3krHGtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_3krG_dXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krHG9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krHHNXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_3krHHdXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_3krHEtXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krHHtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krHH9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krHINXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;)" outgoing="_3krHA9XWEem1l5O0R0OWkQ">
                  <result xmi:id="_3krHIdXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;&quot;).result" outgoing="_3krHAdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krHItXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krHI9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3krqQNXWEem1l5O0R0OWkQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqQdXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_3krHAtXWEem1l5O0R0OWkQ _3krHA9XWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqQtXWEem1l5O0R0OWkQ" target="_3krqQ9XWEem1l5O0R0OWkQ" source="_3krqTdXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_3krqQ9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_3krqQtXWEem1l5O0R0OWkQ" outgoing="_3krG9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqRNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqRdXWEem1l5O0R0OWkQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krqRtXWEem1l5O0R0OWkQ" name="Call(Concat)">
                    <argument xmi:id="_3krqR9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_3krHANXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqSNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqSdXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <argument xmi:id="_3krqStXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_3krHAdXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqS9XWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqTNXWEem1l5O0R0OWkQ" value="1"/>
                    </argument>
                    <result xmi:id="_3krqTdXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_3krqQtXWEem1l5O0R0OWkQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqTtXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqT9XWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqUNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqUdXWEem1l5O0R0OWkQ" target="_3krqVdXWEem1l5O0R0OWkQ" source="_3krqUtXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_3krqUtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_3krGGtXWEem1l5O0R0OWkQ" outgoing="_3krqUdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqU9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqVNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3krqVdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_3krqUdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqVtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqV9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqWNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@71dae693)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqWdXWEem1l5O0R0OWkQ" target="_3krqXdXWEem1l5O0R0OWkQ" source="_3krqWtXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_3krqWtXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@71dae693).input" incoming="_3krGN9XWEem1l5O0R0OWkQ" outgoing="_3krqWdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqW9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqXNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3krqXdXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@71dae693).output" incoming="_3krqWdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqXtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqX9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqYNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqYdXWEem1l5O0R0OWkQ" target="_3krqZdXWEem1l5O0R0OWkQ" source="_3krqYtXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_3krqYtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_3krGG9XWEem1l5O0R0OWkQ" outgoing="_3krqYdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqY9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqZNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3krqZdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_3krqYdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqZtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqZ9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqaNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqadXWEem1l5O0R0OWkQ" target="_3krqbdXWEem1l5O0R0OWkQ" source="_3krqatXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_3krqatXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_3krGHNXWEem1l5O0R0OWkQ" outgoing="_3krqadXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqa9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqbNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3krqbdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_3krqadXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqbtXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqb9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krqcNXWEem1l5O0R0OWkQ" name="Value(true)">
              <result xmi:id="_3krqcdXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqctXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqc9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_3krqdNXWEem1l5O0R0OWkQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqddXWEem1l5O0R0OWkQ" name="ExpressionStatement@7900c636">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqdtXWEem1l5O0R0OWkQ" target="_3krqedXWEem1l5O0R0OWkQ" source="_3krqqdXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krqd9XWEem1l5O0R0OWkQ" target="_3krqeNXWEem1l5O0R0OWkQ" source="_3krqfNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krqeNXWEem1l5O0R0OWkQ" name="Call(Write)" incoming="_3krqd9XWEem1l5O0R0OWkQ" behavior="_3krrpdXWEem1l5O0R0OWkQ">
                <argument xmi:id="_3krqedXWEem1l5O0R0OWkQ" name="Call(Write).argument(value)" incoming="_3krqdtXWEem1l5O0R0OWkQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqetXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqe9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqfNXWEem1l5O0R0OWkQ" name="Tuple@447b7638" outgoing="_3krqd9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqfdXWEem1l5O0R0OWkQ" target="_3krqkdXWEem1l5O0R0OWkQ" source="_3krqidXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3krqftXWEem1l5O0R0OWkQ" target="_3krqkNXWEem1l5O0R0OWkQ" source="_3krqiNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqf9XWEem1l5O0R0OWkQ" target="_3krqnNXWEem1l5O0R0OWkQ" source="_3krqidXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3krqgNXWEem1l5O0R0OWkQ" target="_3krqqNXWEem1l5O0R0OWkQ" source="_3krqp9XWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqgdXWEem1l5O0R0OWkQ" target="_3krqqNXWEem1l5O0R0OWkQ" source="_3krqlNXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3krqgtXWEem1l5O0R0OWkQ" target="_3krql9XWEem1l5O0R0OWkQ" source="_3krqqNXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krqg9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_3krqhNXWEem1l5O0R0OWkQ" target="_3krqndXWEem1l5O0R0OWkQ" source="_3krqqNXWEem1l5O0R0OWkQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krqhdXWEem1l5O0R0OWkQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqhtXWEem1l5O0R0OWkQ" target="_3krqqdXWEem1l5O0R0OWkQ" source="_3krqmdXWEem1l5O0R0OWkQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqh9XWEem1l5O0R0OWkQ" target="_3krqqdXWEem1l5O0R0OWkQ" source="_3krqn9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqiNXWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@3e02e71a)" outgoing="_3krqftXWEem1l5O0R0OWkQ">
                  <node xmi:type="uml:ForkNode" xmi:id="_3krqidXWEem1l5O0R0OWkQ" name="Fork('')@1b048855" incoming="_3krGHdXWEem1l5O0R0OWkQ" outgoing="_3krqfdXWEem1l5O0R0OWkQ _3krqf9XWEem1l5O0R0OWkQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqitXWEem1l5O0R0OWkQ" name="RightHandSide@13c7ebe5"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krqi9XWEem1l5O0R0OWkQ" name="Value(null)">
                    <result xmi:id="_3krqjNXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqjdXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqjtXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_3krqj9XWEem1l5O0R0OWkQ"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krqkNXWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_3krqftXWEem1l5O0R0OWkQ">
                  <argument xmi:id="_3krqkdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_3krqfdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqktXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqk9XWEem1l5O0R0OWkQ" value="*"/>
                  </argument>
                  <result xmi:id="_3krqlNXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_3krqgdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqldXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqltXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krql9XWEem1l5O0R0OWkQ" name="NullCoalescingExpression@1ca240a8.operand2" incoming="_3krqgtXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqmNXWEem1l5O0R0OWkQ" target="_3krqmdXWEem1l5O0R0OWkQ" source="_3krqnNXWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_3krqmdXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@1ca240a8.operand2.result" incoming="_3krqmNXWEem1l5O0R0OWkQ" outgoing="_3krqhtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqmtXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqm9XWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_3krqnNXWEem1l5O0R0OWkQ" name="Merge(Fork('')@1b048855)" incoming="_3krqf9XWEem1l5O0R0OWkQ" outgoing="_3krqmNXWEem1l5O0R0OWkQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqndXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@1ca240a8.operand3" incoming="_3krqhNXWEem1l5O0R0OWkQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqntXWEem1l5O0R0OWkQ" target="_3krqn9XWEem1l5O0R0OWkQ" source="_3krqo9XWEem1l5O0R0OWkQ"/>
                  <structuredNodeOutput xmi:id="_3krqn9XWEem1l5O0R0OWkQ" name="NullCoalescingExpression@1ca240a8.operand3.result" incoming="_3krqntXWEem1l5O0R0OWkQ" outgoing="_3krqh9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqoNXWEem1l5O0R0OWkQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqodXWEem1l5O0R0OWkQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krqotXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;)">
                    <result xmi:id="_3krqo9XWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;).result" outgoing="_3krqntXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqpNXWEem1l5O0R0OWkQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqpdXWEem1l5O0R0OWkQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_3krqptXWEem1l5O0R0OWkQ" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_3krqp9XWEem1l5O0R0OWkQ" name="Initial(NullCoalescingExpression@1ca240a8)" outgoing="_3krqgNXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_3krqqNXWEem1l5O0R0OWkQ" name="Decision(NullCoalescingExpression@1ca240a8)" incoming="_3krqgNXWEem1l5O0R0OWkQ _3krqgdXWEem1l5O0R0OWkQ" outgoing="_3krqgtXWEem1l5O0R0OWkQ _3krqhNXWEem1l5O0R0OWkQ" decisionInputFlow="_3krqgdXWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_3krqqdXWEem1l5O0R0OWkQ" name="Merge(NullCoalescingExpression@1ca240a8.result)" incoming="_3krqhtXWEem1l5O0R0OWkQ _3krqh9XWEem1l5O0R0OWkQ" outgoing="_3krqdtXWEem1l5O0R0OWkQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqqtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqq9XWEem1l5O0R0OWkQ" target="_3krqr9XWEem1l5O0R0OWkQ" source="_3krqrNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_3krqrNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_3krGHtXWEem1l5O0R0OWkQ" outgoing="_3krqq9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqrdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqrtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3krqr9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_3krqq9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqsNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqsdXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqstXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@71dae693)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqs9XWEem1l5O0R0OWkQ" target="_3krqt9XWEem1l5O0R0OWkQ" source="_3krqtNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_3krqtNXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@71dae693).input" incoming="_3krGONXWEem1l5O0R0OWkQ" outgoing="_3krqs9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqtdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqttXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3krqt9XWEem1l5O0R0OWkQ" name="Passthru(Fork(s)@71dae693).output" incoming="_3krqs9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krquNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqudXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqutXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqu9XWEem1l5O0R0OWkQ" target="_3krqv9XWEem1l5O0R0OWkQ" source="_3krqvNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_3krqvNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_3krGH9XWEem1l5O0R0OWkQ" outgoing="_3krqu9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqvdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqvtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3krqv9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_3krqu9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqwNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqwdXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krqwtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krqw9XWEem1l5O0R0OWkQ" target="_3krqx9XWEem1l5O0R0OWkQ" source="_3krqxNXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_3krqxNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_3krGINXWEem1l5O0R0OWkQ" outgoing="_3krqw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqxdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqxtXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3krqx9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_3krqw9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqyNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqydXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_3krqytXWEem1l5O0R0OWkQ" body="_3krG9NXWEem1l5O0R0OWkQ _3krqUNXWEem1l5O0R0OWkQ _3krqWNXWEem1l5O0R0OWkQ _3krqYNXWEem1l5O0R0OWkQ _3krqaNXWEem1l5O0R0OWkQ" bodyOutput="_3krqVdXWEem1l5O0R0OWkQ _3krqXdXWEem1l5O0R0OWkQ _3krqZdXWEem1l5O0R0OWkQ _3krqbdXWEem1l5O0R0OWkQ" decider="_3krG8dXWEem1l5O0R0OWkQ" successorClause="_3krqy9XWEem1l5O0R0OWkQ" test="_3krG5dXWEem1l5O0R0OWkQ"/>
            <clause xmi:id="_3krqy9XWEem1l5O0R0OWkQ" body="_3krqddXWEem1l5O0R0OWkQ _3krqqtXWEem1l5O0R0OWkQ _3krqstXWEem1l5O0R0OWkQ _3krqutXWEem1l5O0R0OWkQ _3krqwtXWEem1l5O0R0OWkQ" bodyOutput="_3krqr9XWEem1l5O0R0OWkQ _3krqt9XWEem1l5O0R0OWkQ _3krqv9XWEem1l5O0R0OWkQ _3krqx9XWEem1l5O0R0OWkQ" decider="_3krqcdXWEem1l5O0R0OWkQ" predecessorClause="_3krqytXWEem1l5O0R0OWkQ" test="_3krqcNXWEem1l5O0R0OWkQ"/>
            <result xmi:id="_3krqzNXWEem1l5O0R0OWkQ" name="IfStatement@44622a27.result(label)" outgoing="_3krGMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krqzdXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krqztXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_3krqz9XWEem1l5O0R0OWkQ" name="IfStatement@44622a27.result(s)" outgoing="_3krGMtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krq0NXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krq0dXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_3krq0tXWEem1l5O0R0OWkQ" name="IfStatement@44622a27.result(value2)" outgoing="_3krGM9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krq09XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krq1NXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <result xmi:id="_3krq1dXWEem1l5O0R0OWkQ" name="IfStatement@44622a27.result(value1)" outgoing="_3krGNNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krq1tXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krq19XWEem1l5O0R0OWkQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_3krq2NXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_3krGMdXWEem1l5O0R0OWkQ" outgoing="_3krGO9XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_3krq2dXWEem1l5O0R0OWkQ" name="Fork(s)" incoming="_3krGMtXWEem1l5O0R0OWkQ" outgoing="_3krGPNXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_3krq2tXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_3krGM9XWEem1l5O0R0OWkQ" outgoing="_3krGPdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_3krq29XWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_3krGNNXWEem1l5O0R0OWkQ" outgoing="_3krGPtXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krq3NXWEem1l5O0R0OWkQ" name="ExpressionStatement@17bb547b" incoming="_3krGOtXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krq3dXWEem1l5O0R0OWkQ" target="_3krq4NXWEem1l5O0R0OWkQ" source="_3krq6NXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krq3tXWEem1l5O0R0OWkQ" target="_3krq39XWEem1l5O0R0OWkQ" source="_3krq5tXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krq39XWEem1l5O0R0OWkQ" name="Call(WriteLine)" incoming="_3krq3tXWEem1l5O0R0OWkQ">
              <argument xmi:id="_3krq4NXWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_3krq3dXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krq4dXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krq4tXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krq49XWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krq5NXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krq5dXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krq5tXWEem1l5O0R0OWkQ" name="Tuple@af92f3d" outgoing="_3krq3tXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krq59XWEem1l5O0R0OWkQ" name="Value(&quot;&quot;)">
                <result xmi:id="_3krq6NXWEem1l5O0R0OWkQ" name="Value(&quot;&quot;).result" outgoing="_3krq3dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krq6dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krq6tXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3krq69XWEem1l5O0R0OWkQ" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krq7NXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krq7dXWEem1l5O0R0OWkQ" target="_3krq8dXWEem1l5O0R0OWkQ" source="_3krq7tXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_3krq7tXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_3krGO9XWEem1l5O0R0OWkQ" outgoing="_3krq7dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krq79XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krq8NXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3krq8dXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_3krq7dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krq8tXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krq89XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krq9NXWEem1l5O0R0OWkQ" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krq9dXWEem1l5O0R0OWkQ" target="_3krq-dXWEem1l5O0R0OWkQ" source="_3krq9tXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_3krq9tXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).input" incoming="_3krGPNXWEem1l5O0R0OWkQ" outgoing="_3krq9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krq99XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krq-NXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3krq-dXWEem1l5O0R0OWkQ" name="Passthru(Fork(s)).output" incoming="_3krq9dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krq-tXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krq-9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krq_NXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krq_dXWEem1l5O0R0OWkQ" target="_3krrAdXWEem1l5O0R0OWkQ" source="_3krq_tXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_3krq_tXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_3krGPdXWEem1l5O0R0OWkQ" outgoing="_3krq_dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krq_9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrANXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3krrAdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_3krq_dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrAtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrA9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krrBNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrBdXWEem1l5O0R0OWkQ" target="_3krrCdXWEem1l5O0R0OWkQ" source="_3krrBtXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_3krrBtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_3krGPtXWEem1l5O0R0OWkQ" outgoing="_3krrBdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrB9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrCNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3krrCdXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_3krrBdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrCtXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrC9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krrDNXWEem1l5O0R0OWkQ" name="Value(true)">
            <result xmi:id="_3krrDdXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrDtXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrD9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_3krrENXWEem1l5O0R0OWkQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krrEdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrEtXWEem1l5O0R0OWkQ" target="_3krrFtXWEem1l5O0R0OWkQ" source="_3krrE9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_3krrE9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_3krGIdXWEem1l5O0R0OWkQ" outgoing="_3krrEtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrFNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrFdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3krrFtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_3krrEtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrF9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrGNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krrGdXWEem1l5O0R0OWkQ" name="Value(null)">
            <result xmi:id="_3krrGtXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrG9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrHNXWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_3krrHdXWEem1l5O0R0OWkQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krrHtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrH9XWEem1l5O0R0OWkQ" target="_3krrI9XWEem1l5O0R0OWkQ" source="_3krrINXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_3krrINXWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).input" incoming="_3krGItXWEem1l5O0R0OWkQ" outgoing="_3krrH9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrIdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrItXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3krrI9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value2)).output" incoming="_3krrH9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrJNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrJdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krrJtXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrJ9XWEem1l5O0R0OWkQ" target="_3krrK9XWEem1l5O0R0OWkQ" source="_3krrKNXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_3krrKNXWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).input" incoming="_3krGI9XWEem1l5O0R0OWkQ" outgoing="_3krrJ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrKdXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrKtXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3krrK9XWEem1l5O0R0OWkQ" name="Passthru(Fork(value1)).output" incoming="_3krrJ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrLNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrLdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_3krrLtXWEem1l5O0R0OWkQ" body="_3krGjNXWEem1l5O0R0OWkQ _3krGzNXWEem1l5O0R0OWkQ _3krG5NXWEem1l5O0R0OWkQ _3krq3NXWEem1l5O0R0OWkQ _3krq7NXWEem1l5O0R0OWkQ _3krq9NXWEem1l5O0R0OWkQ _3krq_NXWEem1l5O0R0OWkQ _3krrBNXWEem1l5O0R0OWkQ" bodyOutput="_3krq8dXWEem1l5O0R0OWkQ _3krq-dXWEem1l5O0R0OWkQ _3krrAdXWEem1l5O0R0OWkQ _3krrCdXWEem1l5O0R0OWkQ" decider="_3krGidXWEem1l5O0R0OWkQ" successorClause="_3krrL9XWEem1l5O0R0OWkQ" test="_3krGP9XWEem1l5O0R0OWkQ"/>
          <clause xmi:id="_3krrL9XWEem1l5O0R0OWkQ" body="_3krrEdXWEem1l5O0R0OWkQ _3krrGdXWEem1l5O0R0OWkQ _3krrHtXWEem1l5O0R0OWkQ _3krrJtXWEem1l5O0R0OWkQ" bodyOutput="_3krrFtXWEem1l5O0R0OWkQ _3krrGtXWEem1l5O0R0OWkQ _3krrI9XWEem1l5O0R0OWkQ _3krrK9XWEem1l5O0R0OWkQ" decider="_3krrDdXWEem1l5O0R0OWkQ" predecessorClause="_3krrLtXWEem1l5O0R0OWkQ" test="_3krrDNXWEem1l5O0R0OWkQ"/>
          <result xmi:id="_3krrMNXWEem1l5O0R0OWkQ" name="IfStatement@3775625c.result(label)" outgoing="_3krGK9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrMdXWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrMtXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_3krrM9XWEem1l5O0R0OWkQ" name="IfStatement@3775625c.result(s)" outgoing="_3krGLNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrNNXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrNdXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_3krrNtXWEem1l5O0R0OWkQ" name="IfStatement@3775625c.result(value2)" outgoing="_3krGLdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrN9XWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrONXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_3krrOdXWEem1l5O0R0OWkQ" name="IfStatement@3775625c.result(value1)" outgoing="_3krGLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrOtXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrO9XWEem1l5O0R0OWkQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_3krrPNXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_3krGK9XWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_3krrPdXWEem1l5O0R0OWkQ" name="Fork(s)" incoming="_3krGLNXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_3krrPtXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_3krGLdXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_3krrP9XWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_3krGLtXWEem1l5O0R0OWkQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3krGJNXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_3krGE9XWEem1l5O0R0OWkQ" parameter="_3krGCtXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_3krGJdXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_3krGE9XWEem1l5O0R0OWkQ" outgoing="_3krGGNXWEem1l5O0R0OWkQ _3krGGtXWEem1l5O0R0OWkQ _3krGHtXWEem1l5O0R0OWkQ _3krGIdXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3krGJtXWEem1l5O0R0OWkQ" name="Input(value1)" outgoing="_3krGFNXWEem1l5O0R0OWkQ" parameter="_3krGDdXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_3krGJ9XWEem1l5O0R0OWkQ" name="Fork(value1)" incoming="_3krGFNXWEem1l5O0R0OWkQ" outgoing="_3krGFtXWEem1l5O0R0OWkQ _3krGHNXWEem1l5O0R0OWkQ _3krGINXWEem1l5O0R0OWkQ _3krGI9XWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3krGKNXWEem1l5O0R0OWkQ" name="Input(value2)" outgoing="_3krGFdXWEem1l5O0R0OWkQ" parameter="_3krGENXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_3krGKdXWEem1l5O0R0OWkQ" name="Fork(value2)" incoming="_3krGFdXWEem1l5O0R0OWkQ" outgoing="_3krGF9XWEem1l5O0R0OWkQ _3krGGdXWEem1l5O0R0OWkQ _3krGG9XWEem1l5O0R0OWkQ _3krGHdXWEem1l5O0R0OWkQ _3krGH9XWEem1l5O0R0OWkQ _3krGItXWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_3krrQNXWEem1l5O0R0OWkQ" name="AssertFalse" visibility="public" node="_3krrUdXWEem1l5O0R0OWkQ _3krrUtXWEem1l5O0R0OWkQ _3krrU9XWEem1l5O0R0OWkQ _3krrVNXWEem1l5O0R0OWkQ _3krrVdXWEem1l5O0R0OWkQ" group="_3krrVdXWEem1l5O0R0OWkQ">
      <elementImport xmi:id="_3krrQdXWEem1l5O0R0OWkQ" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_3krrQtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_3krrQ9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_3krrRNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_3krrRdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_3krrRtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_3krrR9XWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrSNXWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrSdXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_3krrStXWEem1l5O0R0OWkQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrS9XWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrTNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrTdXWEem1l5O0R0OWkQ" target="_3krrUtXWEem1l5O0R0OWkQ" source="_3krrUdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrTtXWEem1l5O0R0OWkQ" target="_3krrVNXWEem1l5O0R0OWkQ" source="_3krrU9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrT9XWEem1l5O0R0OWkQ" target="_3krrdtXWEem1l5O0R0OWkQ" source="_3krrUtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrUNXWEem1l5O0R0OWkQ" target="_3krrmtXWEem1l5O0R0OWkQ" source="_3krrVNXWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_3krrVdXWEem1l5O0R0OWkQ" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krrVtXWEem1l5O0R0OWkQ" name="ExpressionStatement@28d09404">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrV9XWEem1l5O0R0OWkQ" target="_3krrW9XWEem1l5O0R0OWkQ" source="_3krrftXWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrWNXWEem1l5O0R0OWkQ" target="_3krrXtXWEem1l5O0R0OWkQ" source="_3krro9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3krrWdXWEem1l5O0R0OWkQ" target="_3krrWtXWEem1l5O0R0OWkQ" source="_3krrYdXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krrWtXWEem1l5O0R0OWkQ" name="Call(AssertTrue)" incoming="_3krrWdXWEem1l5O0R0OWkQ" behavior="_3krsEdXWEem1l5O0R0OWkQ">
            <argument xmi:id="_3krrW9XWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(label)" incoming="_3krrV9XWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrXNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrXdXWEem1l5O0R0OWkQ" value="1"/>
            </argument>
            <argument xmi:id="_3krrXtXWEem1l5O0R0OWkQ" name="Call(AssertTrue).argument(condition)" incoming="_3krrWNXWEem1l5O0R0OWkQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrX9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrYNXWEem1l5O0R0OWkQ" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krrYdXWEem1l5O0R0OWkQ" name="Tuple@44f7a962" outgoing="_3krrWdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrYtXWEem1l5O0R0OWkQ" target="_3krrgtXWEem1l5O0R0OWkQ" source="_3krrcNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrY9XWEem1l5O0R0OWkQ" target="_3krrhdXWEem1l5O0R0OWkQ" source="_3krredXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krrZNXWEem1l5O0R0OWkQ" target="_3krrfNXWEem1l5O0R0OWkQ" source="_3krrb9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krrZdXWEem1l5O0R0OWkQ" target="_3krrfNXWEem1l5O0R0OWkQ" source="_3krrdNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrZtXWEem1l5O0R0OWkQ" target="_3krrkdXWEem1l5O0R0OWkQ" source="_3krrmtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrZ9XWEem1l5O0R0OWkQ" target="_3krrnNXWEem1l5O0R0OWkQ" source="_3krrmtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krraNXWEem1l5O0R0OWkQ" target="_3krrotXWEem1l5O0R0OWkQ" source="_3krrn9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krradXWEem1l5O0R0OWkQ" target="_3krro9XWEem1l5O0R0OWkQ" source="_3krrlNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krratXWEem1l5O0R0OWkQ" target="_3krrpNXWEem1l5O0R0OWkQ" source="_3krrotXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krra9XWEem1l5O0R0OWkQ" target="_3krrpNXWEem1l5O0R0OWkQ" source="_3krrotXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrbNXWEem1l5O0R0OWkQ" target="_3krro9XWEem1l5O0R0OWkQ" source="_3krrpNXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krrbdXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrbtXWEem1l5O0R0OWkQ" target="_3krrl9XWEem1l5O0R0OWkQ" source="_3krrjNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krrb9XWEem1l5O0R0OWkQ" name="Value(&quot;! &quot;)" outgoing="_3krrZNXWEem1l5O0R0OWkQ">
              <result xmi:id="_3krrcNXWEem1l5O0R0OWkQ" name="Value(&quot;! &quot;).result" outgoing="_3krrYtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrcdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrctXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_3krrc9XWEem1l5O0R0OWkQ" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krrdNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_3krrZdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrddXWEem1l5O0R0OWkQ" target="_3krredXWEem1l5O0R0OWkQ" source="_3krrdtXWEem1l5O0R0OWkQ"/>
              <structuredNodeInput xmi:id="_3krrdtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_3krrT9XWEem1l5O0R0OWkQ" outgoing="_3krrddXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrd9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krreNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_3krredXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_3krrddXWEem1l5O0R0OWkQ" outgoing="_3krrY9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krretXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krre9XWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krrfNXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_3krrZNXWEem1l5O0R0OWkQ _3krrZdXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrfdXWEem1l5O0R0OWkQ" target="_3krrftXWEem1l5O0R0OWkQ" source="_3krriNXWEem1l5O0R0OWkQ"/>
              <structuredNodeOutput xmi:id="_3krrftXWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_3krrfdXWEem1l5O0R0OWkQ" outgoing="_3krrV9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrf9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrgNXWEem1l5O0R0OWkQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krrgdXWEem1l5O0R0OWkQ" name="Call(Concat)">
                <argument xmi:id="_3krrgtXWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_3krrYtXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrg9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrhNXWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <argument xmi:id="_3krrhdXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_3krrY9XWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrhtXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrh9XWEem1l5O0R0OWkQ" value="1"/>
                </argument>
                <result xmi:id="_3krriNXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_3krrfdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krridXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krritXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krri9XWEem1l5O0R0OWkQ" name="Value(false)">
              <result xmi:id="_3krrjNXWEem1l5O0R0OWkQ" name="Value(false).result" outgoing="_3krrbtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrjdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrjtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_3krrj9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_3krrkNXWEem1l5O0R0OWkQ" name="Test(==)">
              <first xmi:id="_3krrkdXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_3krrZtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrktXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrk9XWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_3krrlNXWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_3krradXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrldXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrltXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_3krrl9XWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_3krrbtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrmNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrmdXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krrmtXWEem1l5O0R0OWkQ" name="Fork(Fork(condition))" incoming="_3krrUNXWEem1l5O0R0OWkQ" outgoing="_3krrZtXWEem1l5O0R0OWkQ _3krrZ9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krrm9XWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_3krrnNXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_3krrZ9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrndXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrntXWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_3krrn9XWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_3krraNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krroNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrodXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krrotXWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_3krraNXWEem1l5O0R0OWkQ" outgoing="_3krratXWEem1l5O0R0OWkQ _3krra9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_3krro9XWEem1l5O0R0OWkQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_3krradXWEem1l5O0R0OWkQ _3krrbNXWEem1l5O0R0OWkQ" outgoing="_3krrWNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_3krrpNXWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_3krratXWEem1l5O0R0OWkQ _3krra9XWEem1l5O0R0OWkQ" outgoing="_3krrbNXWEem1l5O0R0OWkQ" decisionInputFlow="_3krra9XWEem1l5O0R0OWkQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3krrUdXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_3krrTdXWEem1l5O0R0OWkQ" parameter="_3krrR9XWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_3krrUtXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_3krrTdXWEem1l5O0R0OWkQ" outgoing="_3krrT9XWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3krrU9XWEem1l5O0R0OWkQ" name="Input(condition)" outgoing="_3krrTtXWEem1l5O0R0OWkQ" parameter="_3krrStXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_3krrVNXWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_3krrTtXWEem1l5O0R0OWkQ" outgoing="_3krrUNXWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_3krrpdXWEem1l5O0R0OWkQ" name="Write" visibility="public" node="_3krrsNXWEem1l5O0R0OWkQ _3krrsdXWEem1l5O0R0OWkQ _3krrstXWEem1l5O0R0OWkQ" group="_3krrstXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_3krrptXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_3krrp9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_3krrqNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_3krrqdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_3krrqtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_3krrq9XWEem1l5O0R0OWkQ" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrrNXWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrrdXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrrtXWEem1l5O0R0OWkQ" target="_3krrsdXWEem1l5O0R0OWkQ" source="_3krrsNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrr9XWEem1l5O0R0OWkQ" target="_3krru9XWEem1l5O0R0OWkQ" source="_3krrsdXWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_3krrstXWEem1l5O0R0OWkQ" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krrs9XWEem1l5O0R0OWkQ" name="ExpressionStatement@e560fd8">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrtNXWEem1l5O0R0OWkQ" target="_3krr9tXWEem1l5O0R0OWkQ" source="_3krsA9XWEem1l5O0R0OWkQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3krrtdXWEem1l5O0R0OWkQ" target="_3krrttXWEem1l5O0R0OWkQ" source="_3krr99XWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_3krrttXWEem1l5O0R0OWkQ" name="Collect(Call(write))" incoming="_3krrtdXWEem1l5O0R0OWkQ" mode="parallel" inputElement="_3krr9tXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrt9XWEem1l5O0R0OWkQ" target="_3krrv9XWEem1l5O0R0OWkQ" source="_3krr9dXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krruNXWEem1l5O0R0OWkQ" target="_3krr1dXWEem1l5O0R0OWkQ" source="_3krru9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krrudXWEem1l5O0R0OWkQ" target="_3krrvtXWEem1l5O0R0OWkQ" source="_3krryNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrutXWEem1l5O0R0OWkQ" target="_3krrxdXWEem1l5O0R0OWkQ" source="_3krr9tXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_3krru9XWEem1l5O0R0OWkQ" name="Collect(Call(write)).input(Fork(value))" incoming="_3krrr9XWEem1l5O0R0OWkQ" outgoing="_3krruNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrvNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrvdXWEem1l5O0R0OWkQ" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_3krrvtXWEem1l5O0R0OWkQ" name="Call(write)" incoming="_3krrudXWEem1l5O0R0OWkQ">
              <argument xmi:id="_3krrv9XWEem1l5O0R0OWkQ" name="Call(write).argument(value)" incoming="_3krrt9XWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrwNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrwdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krrwtXWEem1l5O0R0OWkQ" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrw9XWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrxNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_3krrxdXWEem1l5O0R0OWkQ" name="Call(write).target" incoming="_3krrutXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krrxtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krrx9XWEem1l5O0R0OWkQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krryNXWEem1l5O0R0OWkQ" name="Tuple@1acb5b6d" outgoing="_3krrudXWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrydXWEem1l5O0R0OWkQ" target="_3krr3dXWEem1l5O0R0OWkQ" source="_3krr1dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krrytXWEem1l5O0R0OWkQ" target="_3krr3NXWEem1l5O0R0OWkQ" source="_3krr1NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krry9XWEem1l5O0R0OWkQ" target="_3krr6NXWEem1l5O0R0OWkQ" source="_3krr1dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krrzNXWEem1l5O0R0OWkQ" target="_3krr9NXWEem1l5O0R0OWkQ" source="_3krr89XWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krrzdXWEem1l5O0R0OWkQ" target="_3krr9NXWEem1l5O0R0OWkQ" source="_3krr4NXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krrztXWEem1l5O0R0OWkQ" target="_3krr49XWEem1l5O0R0OWkQ" source="_3krr9NXWEem1l5O0R0OWkQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krrz9XWEem1l5O0R0OWkQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krr0NXWEem1l5O0R0OWkQ" target="_3krr6dXWEem1l5O0R0OWkQ" source="_3krr9NXWEem1l5O0R0OWkQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krr0dXWEem1l5O0R0OWkQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krr0tXWEem1l5O0R0OWkQ" target="_3krr9dXWEem1l5O0R0OWkQ" source="_3krr5dXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krr09XWEem1l5O0R0OWkQ" target="_3krr9dXWEem1l5O0R0OWkQ" source="_3krr69XWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krr1NXWEem1l5O0R0OWkQ" name="Operands(EqualityExpression@4b9f81be)" outgoing="_3krrytXWEem1l5O0R0OWkQ">
                <node xmi:type="uml:ForkNode" xmi:id="_3krr1dXWEem1l5O0R0OWkQ" name="Fork('')@33583f89" incoming="_3krruNXWEem1l5O0R0OWkQ" outgoing="_3krrydXWEem1l5O0R0OWkQ _3krry9XWEem1l5O0R0OWkQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krr1tXWEem1l5O0R0OWkQ" name="RightHandSide@6d69973b"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krr19XWEem1l5O0R0OWkQ" name="Value(null)">
                  <result xmi:id="_3krr2NXWEem1l5O0R0OWkQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krr2dXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krr2tXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_3krr29XWEem1l5O0R0OWkQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krr3NXWEem1l5O0R0OWkQ" name="Call(NotEmpty)" incoming="_3krrytXWEem1l5O0R0OWkQ">
                <argument xmi:id="_3krr3dXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_3krrydXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krr3tXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krr39XWEem1l5O0R0OWkQ" value="*"/>
                </argument>
                <result xmi:id="_3krr4NXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_3krrzdXWEem1l5O0R0OWkQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krr4dXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krr4tXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krr49XWEem1l5O0R0OWkQ" name="NullCoalescingExpression@4449da56.operand2" incoming="_3krrztXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krr5NXWEem1l5O0R0OWkQ" target="_3krr5dXWEem1l5O0R0OWkQ" source="_3krr6NXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_3krr5dXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@4449da56.operand2.result" incoming="_3krr5NXWEem1l5O0R0OWkQ" outgoing="_3krr0tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krr5tXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krr59XWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_3krr6NXWEem1l5O0R0OWkQ" name="Merge(Fork('')@33583f89)" incoming="_3krry9XWEem1l5O0R0OWkQ" outgoing="_3krr5NXWEem1l5O0R0OWkQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krr6dXWEem1l5O0R0OWkQ" name="NullCoalescingExpression@4449da56.operand3" incoming="_3krr0NXWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krr6tXWEem1l5O0R0OWkQ" target="_3krr69XWEem1l5O0R0OWkQ" source="_3krr79XWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_3krr69XWEem1l5O0R0OWkQ" name="NullCoalescingExpression@4449da56.operand3.result" incoming="_3krr6tXWEem1l5O0R0OWkQ" outgoing="_3krr09XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krr7NXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krr7dXWEem1l5O0R0OWkQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krr7tXWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;)">
                  <result xmi:id="_3krr79XWEem1l5O0R0OWkQ" name="Value(&quot;null&quot;).result" outgoing="_3krr6tXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krr8NXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krr8dXWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_3krr8tXWEem1l5O0R0OWkQ" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_3krr89XWEem1l5O0R0OWkQ" name="Initial(NullCoalescingExpression@4449da56)" outgoing="_3krrzNXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_3krr9NXWEem1l5O0R0OWkQ" name="Decision(NullCoalescingExpression@4449da56)" incoming="_3krrzNXWEem1l5O0R0OWkQ _3krrzdXWEem1l5O0R0OWkQ" outgoing="_3krrztXWEem1l5O0R0OWkQ _3krr0NXWEem1l5O0R0OWkQ" decisionInputFlow="_3krrzdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:MergeNode" xmi:id="_3krr9dXWEem1l5O0R0OWkQ" name="Merge(NullCoalescingExpression@4449da56.result)" incoming="_3krr0tXWEem1l5O0R0OWkQ _3krr09XWEem1l5O0R0OWkQ" outgoing="_3krrt9XWEem1l5O0R0OWkQ"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_3krr9tXWEem1l5O0R0OWkQ" name="Collect(Call(write)).inputElement" incoming="_3krrtNXWEem1l5O0R0OWkQ" outgoing="_3krrutXWEem1l5O0R0OWkQ" regionAsInput="_3krrttXWEem1l5O0R0OWkQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krr99XWEem1l5O0R0OWkQ" name="Feature(Call(At).result())" outgoing="_3krrtdXWEem1l5O0R0OWkQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krr-NXWEem1l5O0R0OWkQ" target="_3krr_dXWEem1l5O0R0OWkQ" source="_3krsCNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krr-dXWEem1l5O0R0OWkQ" target="_3krsENXWEem1l5O0R0OWkQ" source="_3krsDNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krr-tXWEem1l5O0R0OWkQ" target="_3krr_NXWEem1l5O0R0OWkQ" source="_3krsBtXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krr-9XWEem1l5O0R0OWkQ" target="_3krsANXWEem1l5O0R0OWkQ" source="_3krsENXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krr_NXWEem1l5O0R0OWkQ" name="Call(At)" incoming="_3krr-tXWEem1l5O0R0OWkQ">
              <argument xmi:id="_3krr_dXWEem1l5O0R0OWkQ" name="Call(At).argument(seq)" incoming="_3krr-NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krr_tXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krr_9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <argument xmi:id="_3krsANXWEem1l5O0R0OWkQ" name="Call(At).argument(index)" incoming="_3krr-9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsAdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsAtXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krsA9XWEem1l5O0R0OWkQ" name="Call(At).result()" outgoing="_3krrtNXWEem1l5O0R0OWkQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsBNXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsBdXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krsBtXWEem1l5O0R0OWkQ" name="Tuple@4ba00ddd" outgoing="_3krr-tXWEem1l5O0R0OWkQ">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_3krsB9XWEem1l5O0R0OWkQ" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_3krsCNXWEem1l5O0R0OWkQ" name="ReadExtent(StandardOutputChannel).result" outgoing="_3krr-NXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsCdXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsCtXWEem1l5O0R0OWkQ" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krsC9XWEem1l5O0R0OWkQ" name="Value(1)">
                <result xmi:id="_3krsDNXWEem1l5O0R0OWkQ" name="Value(1).result" outgoing="_3krr-dXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsDdXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsDtXWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_3krsD9XWEem1l5O0R0OWkQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krsENXWEem1l5O0R0OWkQ" name="Fork(Call(At).argument(index))" incoming="_3krr-dXWEem1l5O0R0OWkQ" outgoing="_3krr-9XWEem1l5O0R0OWkQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3krrsNXWEem1l5O0R0OWkQ" name="Input(value)" outgoing="_3krrrtXWEem1l5O0R0OWkQ" parameter="_3krrq9XWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ForkNode" xmi:id="_3krrsdXWEem1l5O0R0OWkQ" name="Fork(value)" incoming="_3krrrtXWEem1l5O0R0OWkQ" outgoing="_3krrr9XWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_3krsEdXWEem1l5O0R0OWkQ" name="AssertTrue" visibility="public" node="_3krsJdXWEem1l5O0R0OWkQ _3krsJtXWEem1l5O0R0OWkQ _3krsJ9XWEem1l5O0R0OWkQ _3krsKNXWEem1l5O0R0OWkQ _3krsKdXWEem1l5O0R0OWkQ" group="_3krsKdXWEem1l5O0R0OWkQ">
      <packageImport xmi:id="_3krsEtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_3krsE9XWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_3krsFNXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_3krsFdXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_3krsFtXWEem1l5O0R0OWkQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_3krsF9XWEem1l5O0R0OWkQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsGNXWEem1l5O0R0OWkQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsGdXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_3krsGtXWEem1l5O0R0OWkQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsG9XWEem1l5O0R0OWkQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsHNXWEem1l5O0R0OWkQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsHdXWEem1l5O0R0OWkQ" target="_3krsJtXWEem1l5O0R0OWkQ" source="_3krsJdXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsHtXWEem1l5O0R0OWkQ" target="_3krsKNXWEem1l5O0R0OWkQ" source="_3krsJ9XWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsH9XWEem1l5O0R0OWkQ" target="_3krsR9XWEem1l5O0R0OWkQ" source="_3krsKNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsINXWEem1l5O0R0OWkQ" target="_3krsb9XWEem1l5O0R0OWkQ" source="_3krsJtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsIdXWEem1l5O0R0OWkQ" target="_3krshtXWEem1l5O0R0OWkQ" source="_3krsKNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsItXWEem1l5O0R0OWkQ" target="_3krsjtXWEem1l5O0R0OWkQ" source="_3krsJtXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsI9XWEem1l5O0R0OWkQ" target="_3krsm9XWEem1l5O0R0OWkQ" source="_3krsKNXWEem1l5O0R0OWkQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsJNXWEem1l5O0R0OWkQ" target="_3krso9XWEem1l5O0R0OWkQ" source="_3krsJtXWEem1l5O0R0OWkQ"/>
      <structuredNode xmi:id="_3krsKdXWEem1l5O0R0OWkQ" name="Body(AssertTrue)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsKtXWEem1l5O0R0OWkQ" target="_3krssdXWEem1l5O0R0OWkQ" source="_3krsq9XWEem1l5O0R0OWkQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsK9XWEem1l5O0R0OWkQ" target="_3krsstXWEem1l5O0R0OWkQ" source="_3krsrtXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_3krsLNXWEem1l5O0R0OWkQ" name="IfStatement@3210279d">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krsLdXWEem1l5O0R0OWkQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsLtXWEem1l5O0R0OWkQ" target="_3krsPtXWEem1l5O0R0OWkQ" source="_3krsR9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsL9XWEem1l5O0R0OWkQ" target="_3krsSdXWEem1l5O0R0OWkQ" source="_3krsR9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsMNXWEem1l5O0R0OWkQ" target="_3krsT9XWEem1l5O0R0OWkQ" source="_3krsTNXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsMdXWEem1l5O0R0OWkQ" target="_3krsUNXWEem1l5O0R0OWkQ" source="_3krsQdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsMtXWEem1l5O0R0OWkQ" target="_3krsUdXWEem1l5O0R0OWkQ" source="_3krsT9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsM9XWEem1l5O0R0OWkQ" target="_3krsUdXWEem1l5O0R0OWkQ" source="_3krsT9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsNNXWEem1l5O0R0OWkQ" target="_3krsUNXWEem1l5O0R0OWkQ" source="_3krsUdXWEem1l5O0R0OWkQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_3krsNdXWEem1l5O0R0OWkQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsNtXWEem1l5O0R0OWkQ" target="_3krsRNXWEem1l5O0R0OWkQ" source="_3krsOdXWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsN9XWEem1l5O0R0OWkQ" target="_3krsU9XWEem1l5O0R0OWkQ" source="_3krsUNXWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krsONXWEem1l5O0R0OWkQ" name="Value(true)">
              <result xmi:id="_3krsOdXWEem1l5O0R0OWkQ" name="Value(true).result" outgoing="_3krsNtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsOtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsO9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_3krsPNXWEem1l5O0R0OWkQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_3krsPdXWEem1l5O0R0OWkQ" name="Test(==)">
              <first xmi:id="_3krsPtXWEem1l5O0R0OWkQ" name="Test(==).first" incoming="_3krsLtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsP9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsQNXWEem1l5O0R0OWkQ" value="1"/>
              </first>
              <result xmi:id="_3krsQdXWEem1l5O0R0OWkQ" name="Test(==).result" outgoing="_3krsMdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsQtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsQ9XWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <second xmi:id="_3krsRNXWEem1l5O0R0OWkQ" name="Test(==).second" incoming="_3krsNtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsRdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsRtXWEem1l5O0R0OWkQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krsR9XWEem1l5O0R0OWkQ" name="Fork(Fork(condition))" incoming="_3krsH9XWEem1l5O0R0OWkQ" outgoing="_3krsLtXWEem1l5O0R0OWkQ _3krsL9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krsSNXWEem1l5O0R0OWkQ" name="Call(NotEmpty)">
              <argument xmi:id="_3krsSdXWEem1l5O0R0OWkQ" name="Call(NotEmpty).argument(seq)" incoming="_3krsL9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsStXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsS9XWEem1l5O0R0OWkQ" value="*"/>
              </argument>
              <result xmi:id="_3krsTNXWEem1l5O0R0OWkQ" name="Call(NotEmpty).result()" outgoing="_3krsMNXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsTdXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsTtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_3krsT9XWEem1l5O0R0OWkQ" name="Fork(Call(NotEmpty).result())" incoming="_3krsMNXWEem1l5O0R0OWkQ" outgoing="_3krsMtXWEem1l5O0R0OWkQ _3krsM9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_3krsUNXWEem1l5O0R0OWkQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_3krsMdXWEem1l5O0R0OWkQ _3krsNNXWEem1l5O0R0OWkQ" outgoing="_3krsN9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_3krsUdXWEem1l5O0R0OWkQ" name="Decision(Call(NotEmpty).result())" incoming="_3krsMtXWEem1l5O0R0OWkQ _3krsM9XWEem1l5O0R0OWkQ" outgoing="_3krsNNXWEem1l5O0R0OWkQ" decisionInputFlow="_3krsM9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krsUtXWEem1l5O0R0OWkQ" name="Call(Not)">
              <argument xmi:id="_3krsU9XWEem1l5O0R0OWkQ" name="Call(Not).argument(x)" incoming="_3krsN9XWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsVNXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsVdXWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krsVtXWEem1l5O0R0OWkQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsV9XWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsWNXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krsWdXWEem1l5O0R0OWkQ" name="ExpressionStatement@328d5f7b">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsWtXWEem1l5O0R0OWkQ" target="_3krsXdXWEem1l5O0R0OWkQ" source="_3krsd9XWEem1l5O0R0OWkQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_3krsW9XWEem1l5O0R0OWkQ" target="_3krsXNXWEem1l5O0R0OWkQ" source="_3krsY9XWEem1l5O0R0OWkQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krsXNXWEem1l5O0R0OWkQ" name="Call(WriteLine)" incoming="_3krsW9XWEem1l5O0R0OWkQ">
              <argument xmi:id="_3krsXdXWEem1l5O0R0OWkQ" name="Call(WriteLine).argument(value)" incoming="_3krsWtXWEem1l5O0R0OWkQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsXtXWEem1l5O0R0OWkQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsX9XWEem1l5O0R0OWkQ" value="1"/>
              </argument>
              <result xmi:id="_3krsYNXWEem1l5O0R0OWkQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsYdXWEem1l5O0R0OWkQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsYtXWEem1l5O0R0OWkQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krsY9XWEem1l5O0R0OWkQ" name="Tuple@7ad5185e" outgoing="_3krsW9XWEem1l5O0R0OWkQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsZNXWEem1l5O0R0OWkQ" target="_3krse9XWEem1l5O0R0OWkQ" source="_3krsadXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsZdXWEem1l5O0R0OWkQ" target="_3krsftXWEem1l5O0R0OWkQ" source="_3krsctXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krsZtXWEem1l5O0R0OWkQ" target="_3krsddXWEem1l5O0R0OWkQ" source="_3krsaNXWEem1l5O0R0OWkQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_3krsZ9XWEem1l5O0R0OWkQ" target="_3krsddXWEem1l5O0R0OWkQ" source="_3krsbdXWEem1l5O0R0OWkQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krsaNXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;)" outgoing="_3krsZtXWEem1l5O0R0OWkQ">
                <result xmi:id="_3krsadXWEem1l5O0R0OWkQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_3krsZNXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsatXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsa9XWEem1l5O0R0OWkQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_3krsbNXWEem1l5O0R0OWkQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krsbdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))" outgoing="_3krsZ9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsbtXWEem1l5O0R0OWkQ" target="_3krsctXWEem1l5O0R0OWkQ" source="_3krsb9XWEem1l5O0R0OWkQ"/>
                <structuredNodeInput xmi:id="_3krsb9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_3krsINXWEem1l5O0R0OWkQ" outgoing="_3krsbtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krscNXWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krscdXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_3krsctXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_3krsbtXWEem1l5O0R0OWkQ" outgoing="_3krsZdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsc9XWEem1l5O0R0OWkQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsdNXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krsddXWEem1l5O0R0OWkQ" name="Node(Call(Concat))" incoming="_3krsZtXWEem1l5O0R0OWkQ _3krsZ9XWEem1l5O0R0OWkQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsdtXWEem1l5O0R0OWkQ" target="_3krsd9XWEem1l5O0R0OWkQ" source="_3krsgdXWEem1l5O0R0OWkQ"/>
                <structuredNodeOutput xmi:id="_3krsd9XWEem1l5O0R0OWkQ" name="Output(Call(Concat).result(result))" incoming="_3krsdtXWEem1l5O0R0OWkQ" outgoing="_3krsWtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krseNXWEem1l5O0R0OWkQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsedXWEem1l5O0R0OWkQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_3krsetXWEem1l5O0R0OWkQ" name="Call(Concat)">
                  <argument xmi:id="_3krse9XWEem1l5O0R0OWkQ" name="Call(Concat).argument(x)" incoming="_3krsZNXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsfNXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsfdXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <argument xmi:id="_3krsftXWEem1l5O0R0OWkQ" name="Call(Concat).argument(y)" incoming="_3krsZdXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsf9XWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsgNXWEem1l5O0R0OWkQ" value="1"/>
                  </argument>
                  <result xmi:id="_3krsgdXWEem1l5O0R0OWkQ" name="Call(Concat).result(result)" outgoing="_3krsdtXWEem1l5O0R0OWkQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsgtXWEem1l5O0R0OWkQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsg9XWEem1l5O0R0OWkQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krshNXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krshdXWEem1l5O0R0OWkQ" target="_3krsidXWEem1l5O0R0OWkQ" source="_3krshtXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_3krshtXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).input" incoming="_3krsIdXWEem1l5O0R0OWkQ" outgoing="_3krshdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsh9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsiNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3krsidXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).output" incoming="_3krshdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsitXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsi9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krsjNXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsjdXWEem1l5O0R0OWkQ" target="_3krskdXWEem1l5O0R0OWkQ" source="_3krsjtXWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_3krsjtXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_3krsItXWEem1l5O0R0OWkQ" outgoing="_3krsjdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsj9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krskNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3krskdXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_3krsjdXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsktXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsk9XWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3krslNXWEem1l5O0R0OWkQ" name="Value(true)">
            <result xmi:id="_3krsldXWEem1l5O0R0OWkQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsltXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsl9XWEem1l5O0R0OWkQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_3krsmNXWEem1l5O0R0OWkQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krsmdXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsmtXWEem1l5O0R0OWkQ" target="_3krsntXWEem1l5O0R0OWkQ" source="_3krsm9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_3krsm9XWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).input" incoming="_3krsI9XWEem1l5O0R0OWkQ" outgoing="_3krsmtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsnNXWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsndXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3krsntXWEem1l5O0R0OWkQ" name="Passthru(Fork(condition)).output" incoming="_3krsmtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsn9XWEem1l5O0R0OWkQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsoNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3krsodXWEem1l5O0R0OWkQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_3krsotXWEem1l5O0R0OWkQ" target="_3krsptXWEem1l5O0R0OWkQ" source="_3krso9XWEem1l5O0R0OWkQ"/>
            <structuredNodeInput xmi:id="_3krso9XWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).input" incoming="_3krsJNXWEem1l5O0R0OWkQ" outgoing="_3krsotXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krspNXWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krspdXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_3krsptXWEem1l5O0R0OWkQ" name="Passthru(Fork(label)).output" incoming="_3krsotXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsp9XWEem1l5O0R0OWkQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsqNXWEem1l5O0R0OWkQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_3krsqdXWEem1l5O0R0OWkQ" body="_3krsWdXWEem1l5O0R0OWkQ _3krshNXWEem1l5O0R0OWkQ _3krsjNXWEem1l5O0R0OWkQ" bodyOutput="_3krsidXWEem1l5O0R0OWkQ _3krskdXWEem1l5O0R0OWkQ" decider="_3krsVtXWEem1l5O0R0OWkQ" successorClause="_3krsqtXWEem1l5O0R0OWkQ" test="_3krsLdXWEem1l5O0R0OWkQ"/>
          <clause xmi:id="_3krsqtXWEem1l5O0R0OWkQ" body="_3krsmdXWEem1l5O0R0OWkQ _3krsodXWEem1l5O0R0OWkQ" bodyOutput="_3krsntXWEem1l5O0R0OWkQ _3krsptXWEem1l5O0R0OWkQ" decider="_3krsldXWEem1l5O0R0OWkQ" predecessorClause="_3krsqdXWEem1l5O0R0OWkQ" test="_3krslNXWEem1l5O0R0OWkQ"/>
          <result xmi:id="_3krsq9XWEem1l5O0R0OWkQ" name="IfStatement@3210279d.result(condition)" outgoing="_3krsKtXWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsrNXWEem1l5O0R0OWkQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krsrdXWEem1l5O0R0OWkQ" value="1"/>
          </result>
          <result xmi:id="_3krsrtXWEem1l5O0R0OWkQ" name="IfStatement@3210279d.result(label)" outgoing="_3krsK9XWEem1l5O0R0OWkQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3krsr9XWEem1l5O0R0OWkQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3krssNXWEem1l5O0R0OWkQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_3krssdXWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_3krsKtXWEem1l5O0R0OWkQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_3krsstXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_3krsK9XWEem1l5O0R0OWkQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3krsJdXWEem1l5O0R0OWkQ" name="Input(label)" outgoing="_3krsHdXWEem1l5O0R0OWkQ" parameter="_3krsF9XWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_3krsJtXWEem1l5O0R0OWkQ" name="Fork(label)" incoming="_3krsHdXWEem1l5O0R0OWkQ" outgoing="_3krsINXWEem1l5O0R0OWkQ _3krsItXWEem1l5O0R0OWkQ _3krsJNXWEem1l5O0R0OWkQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_3krsJ9XWEem1l5O0R0OWkQ" name="Input(condition)" outgoing="_3krsHtXWEem1l5O0R0OWkQ" parameter="_3krsGtXWEem1l5O0R0OWkQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_3krsKNXWEem1l5O0R0OWkQ" name="Fork(condition)" incoming="_3krsHtXWEem1l5O0R0OWkQ" outgoing="_3krsH9XWEem1l5O0R0OWkQ _3krsIdXWEem1l5O0R0OWkQ _3krsI9XWEem1l5O0R0OWkQ"/>
    </packagedElement>
    <profileApplication xmi:id="_3krss9XWEem1l5O0R0OWkQ">
      <eAnnotations xmi:id="_3krstNXWEem1l5O0R0OWkQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_3krstdXWEem1l5O0R0OWkQ" base_BehavioralFeature="_3krFZ9XWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_3krsttXWEem1l5O0R0OWkQ" base_BehavioralFeature="_3krF_dXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_3krst9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_3krFZdXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_3krsuNXWEem1l5O0R0OWkQ" base_BehavioralFeature="_3krESNXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_3krsudXWEem1l5O0R0OWkQ" base_BehavioralFeature="_3krGAdXWEem1l5O0R0OWkQ"/>
  <l2:Create xmi:id="_3krsutXWEem1l5O0R0OWkQ" base_BehavioralFeature="_3krEQdXWEem1l5O0R0OWkQ"/>
  <l2:Destroy xmi:id="_3krsu9XWEem1l5O0R0OWkQ" base_BehavioralFeature="_3krEX9XWEem1l5O0R0OWkQ"/>
</xmi:XMI>

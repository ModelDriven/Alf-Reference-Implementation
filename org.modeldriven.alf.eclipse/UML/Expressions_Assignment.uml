<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_T60yYPhYEeaxkoRKVpmNyQ" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_T60yYfhYEeaxkoRKVpmNyQ" name="Expressions_Assignment" visibility="public">
      <packageImport xmi:id="_T60yYvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_T60yY_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_T60yZPhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_T60yZfhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_T60yZvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_T60yZ_hYEeaxkoRKVpmNyQ" general="_T65D-fhYEeaxkoRKVpmNyQ"/>
      <ownedAttribute xmi:id="_T60yaPhYEeaxkoRKVpmNyQ" name="Expressions_Assignment$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60yafhYEeaxkoRKVpmNyQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T60yavhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_T60ya_hYEeaxkoRKVpmNyQ" name="run$method$1" specification="_T65D3fhYEeaxkoRKVpmNyQ" node="_T60yd_hYEeaxkoRKVpmNyQ _T60yevhYEeaxkoRKVpmNyQ _T60yePhYEeaxkoRKVpmNyQ _T60ygPhYEeaxkoRKVpmNyQ _T60yefhYEeaxkoRKVpmNyQ" group="_T60yevhYEeaxkoRKVpmNyQ _T60ygPhYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_T60ybPhYEeaxkoRKVpmNyQ" name="tester" type="_T65E8vhYEeaxkoRKVpmNyQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60ybfhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T60ybvhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_T60yb_hYEeaxkoRKVpmNyQ" name="" type="_T60yYfhYEeaxkoRKVpmNyQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60ycPhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T60ycfhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ycvhYEeaxkoRKVpmNyQ" target="_T60yfPhYEeaxkoRKVpmNyQ" source="_T60yd_hYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T60yc_hYEeaxkoRKVpmNyQ" target="_T60yePhYEeaxkoRKVpmNyQ" source="_T62oBfhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ydPhYEeaxkoRKVpmNyQ" target="_T62oDvhYEeaxkoRKVpmNyQ" source="_T60yf_hYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_T60ydfhYEeaxkoRKVpmNyQ" target="_T60yefhYEeaxkoRKVpmNyQ" source="_T60yevhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_T60ydvhYEeaxkoRKVpmNyQ" target="_T60ygPhYEeaxkoRKVpmNyQ" source="_T60yefhYEeaxkoRKVpmNyQ"/>
        <structuredNode xmi:id="_T60yevhYEeaxkoRKVpmNyQ" name="Node(Input(tester))" outgoing="_T60ydfhYEeaxkoRKVpmNyQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ye_hYEeaxkoRKVpmNyQ" target="_T60yf_hYEeaxkoRKVpmNyQ" source="_T60yfPhYEeaxkoRKVpmNyQ"/>
          <structuredNodeInput xmi:id="_T60yfPhYEeaxkoRKVpmNyQ" name="Input(tester)" incoming="_T60ycvhYEeaxkoRKVpmNyQ" outgoing="_T60ye_hYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60yffhYEeaxkoRKVpmNyQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T60yfvhYEeaxkoRKVpmNyQ" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_T60yf_hYEeaxkoRKVpmNyQ" name="Fork(tester)" incoming="_T60ye_hYEeaxkoRKVpmNyQ" outgoing="_T60ydPhYEeaxkoRKVpmNyQ"/>
        </structuredNode>
        <structuredNode xmi:id="_T60ygPhYEeaxkoRKVpmNyQ" name="Body(run$method$1)" incoming="_T60ydvhYEeaxkoRKVpmNyQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ygfhYEeaxkoRKVpmNyQ" target="_T62oBfhYEeaxkoRKVpmNyQ" source="_T62oAvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ygvhYEeaxkoRKVpmNyQ" target="_T62oFfhYEeaxkoRKVpmNyQ" source="_T62oBfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T60yg_hYEeaxkoRKVpmNyQ" target="_T60yjfhYEeaxkoRKVpmNyQ" source="_T62oFPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T60yhPhYEeaxkoRKVpmNyQ" target="_T62oFPhYEeaxkoRKVpmNyQ" source="_T62oBvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T60yhfhYEeaxkoRKVpmNyQ" target="_T62oGfhYEeaxkoRKVpmNyQ" source="_T62oBfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T60yhvhYEeaxkoRKVpmNyQ" target="_T62oIPhYEeaxkoRKVpmNyQ" source="_T62oHPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T60yh_hYEeaxkoRKVpmNyQ" target="_T62oLPhYEeaxkoRKVpmNyQ" source="_T62oI_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T60yiPhYEeaxkoRKVpmNyQ" target="_T63Oo_hYEeaxkoRKVpmNyQ" source="_T62oJ_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T60yifhYEeaxkoRKVpmNyQ" target="_T63Op_hYEeaxkoRKVpmNyQ" source="_T63OpvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T60yivhYEeaxkoRKVpmNyQ" target="_T63Op_hYEeaxkoRKVpmNyQ" source="_T63OoPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T60yi_hYEeaxkoRKVpmNyQ" target="_T62oBvhYEeaxkoRKVpmNyQ" source="_T63Op_hYEeaxkoRKVpmNyQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_T60yjPhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T60yjfhYEeaxkoRKVpmNyQ" name="Body" incoming="_T60yg_hYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T60yjvhYEeaxkoRKVpmNyQ" target="_T60yxPhYEeaxkoRKVpmNyQ" source="_T60yt_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T60yj_hYEeaxkoRKVpmNyQ" target="_T60yvPhYEeaxkoRKVpmNyQ" source="_T60ymfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ykPhYEeaxkoRKVpmNyQ" target="_T62no_hYEeaxkoRKVpmNyQ" source="_T60yuPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T60ykfhYEeaxkoRKVpmNyQ" target="_T62nnPhYEeaxkoRKVpmNyQ" source="_T60yvPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ykvhYEeaxkoRKVpmNyQ" target="_T62ntPhYEeaxkoRKVpmNyQ" source="_T60yufhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T60yk_hYEeaxkoRKVpmNyQ" target="_T62nrPhYEeaxkoRKVpmNyQ" source="_T62nnPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ylPhYEeaxkoRKVpmNyQ" target="_T62nzfhYEeaxkoRKVpmNyQ" source="_T60yuvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T60ylfhYEeaxkoRKVpmNyQ" target="_T62nxfhYEeaxkoRKVpmNyQ" source="_T62nrPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ylvhYEeaxkoRKVpmNyQ" target="_T62n5vhYEeaxkoRKVpmNyQ" source="_T60yu_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T60yl_hYEeaxkoRKVpmNyQ" target="_T62n3vhYEeaxkoRKVpmNyQ" source="_T62nxfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T60ymPhYEeaxkoRKVpmNyQ" target="_T62n9_hYEeaxkoRKVpmNyQ" source="_T62n3vhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T60ymfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@dd26ca6" outgoing="_T60yj_hYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ymvhYEeaxkoRKVpmNyQ" target="_T60yt_hYEeaxkoRKVpmNyQ" source="_T60yofhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ym_hYEeaxkoRKVpmNyQ" target="_T60yuPhYEeaxkoRKVpmNyQ" source="_T60ypPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ynPhYEeaxkoRKVpmNyQ" target="_T60yufhYEeaxkoRKVpmNyQ" source="_T60yp_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ynfhYEeaxkoRKVpmNyQ" target="_T60yuvhYEeaxkoRKVpmNyQ" source="_T60yqvhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T60ynvhYEeaxkoRKVpmNyQ" target="_T60yu_hYEeaxkoRKVpmNyQ" source="_T60yrfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T60yn_hYEeaxkoRKVpmNyQ" target="_T60ysPhYEeaxkoRKVpmNyQ" source="_T60ytPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_T60yoPhYEeaxkoRKVpmNyQ" name="Call(test)" operation="_T65D6PhYEeaxkoRKVpmNyQ">
                <result xmi:id="_T60yofhYEeaxkoRKVpmNyQ" name="Call(test).result(i)" outgoing="_T60ymvhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60yovhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T60yo_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <result xmi:id="_T60ypPhYEeaxkoRKVpmNyQ" name="Call(test).result(f)" outgoing="_T60ym_hYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60ypfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T60ypvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <result xmi:id="_T60yp_hYEeaxkoRKVpmNyQ" name="Call(test).result(h)" outgoing="_T60ynPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60yqPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T60yqfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <result xmi:id="_T60yqvhYEeaxkoRKVpmNyQ" name="Call(test).result(filename)" outgoing="_T60ynfhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60yq_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T60yrPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <result xmi:id="_T60yrfhYEeaxkoRKVpmNyQ" name="Call(test).result(a)" outgoing="_T60ynvhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60yrvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T60yr_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <target xmi:id="_T60ysPhYEeaxkoRKVpmNyQ" name="Call(test).target" incoming="_T60yn_hYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60ysfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T60ysvhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_T60ys_hYEeaxkoRKVpmNyQ" name="ReadSelf">
                <result xmi:id="_T60ytPhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_T60yn_hYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60ytfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T60ytvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_T60yt_hYEeaxkoRKVpmNyQ" name="Fork(i)@2534229" incoming="_T60ymvhYEeaxkoRKVpmNyQ" outgoing="_T60yjvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_T60yuPhYEeaxkoRKVpmNyQ" name="Fork(f)@2293d694" incoming="_T60ym_hYEeaxkoRKVpmNyQ" outgoing="_T60ykPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_T60yufhYEeaxkoRKVpmNyQ" name="Fork(h)@2b8df4bc" incoming="_T60ynPhYEeaxkoRKVpmNyQ" outgoing="_T60ykvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_T60yuvhYEeaxkoRKVpmNyQ" name="Fork(filename)@3469a432" incoming="_T60ynfhYEeaxkoRKVpmNyQ" outgoing="_T60ylPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ForkNode" xmi:id="_T60yu_hYEeaxkoRKVpmNyQ" name="Fork(a)@7e821499" incoming="_T60ynvhYEeaxkoRKVpmNyQ" outgoing="_T60ylvhYEeaxkoRKVpmNyQ"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T60yvPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@4b7c4e0e" incoming="_T60yj_hYEeaxkoRKVpmNyQ" outgoing="_T60ykfhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T60yvfhYEeaxkoRKVpmNyQ" target="_T60ywfhYEeaxkoRKVpmNyQ" source="_T62nk_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T60yvvhYEeaxkoRKVpmNyQ" target="_T60yx_hYEeaxkoRKVpmNyQ" source="_T62nmPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_T60yv_hYEeaxkoRKVpmNyQ" target="_T60ywPhYEeaxkoRKVpmNyQ" source="_T62nkfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T60ywPhYEeaxkoRKVpmNyQ" name="Call(AssertEqual)" incoming="_T60yv_hYEeaxkoRKVpmNyQ" behavior="_T65rX_hYEeaxkoRKVpmNyQ">
                <argument xmi:id="_T60ywfhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(label)" incoming="_T60yvfhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60ywvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T60yw_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_T60yxPhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value1)" incoming="_T60yjvhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60yxfhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T60yxvhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_T60yx_hYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value2)" incoming="_T60yvvhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T60yyPhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62nkPhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T62nkfhYEeaxkoRKVpmNyQ" name="Tuple@78ac66e2" outgoing="_T60yv_hYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T62nkvhYEeaxkoRKVpmNyQ" name="Value(&quot;i&quot;)">
                  <result xmi:id="_T62nk_hYEeaxkoRKVpmNyQ" name="Value(&quot;i&quot;).result" outgoing="_T60yvfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62nlPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62nlfhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_T62nlvhYEeaxkoRKVpmNyQ" value="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T62nl_hYEeaxkoRKVpmNyQ" name="Value(5)">
                  <result xmi:id="_T62nmPhYEeaxkoRKVpmNyQ" name="Value(5).result" outgoing="_T60yvvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62nmfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62nmvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_T62nm_hYEeaxkoRKVpmNyQ" value="5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T62nnPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@3030edcc" incoming="_T60ykfhYEeaxkoRKVpmNyQ" outgoing="_T60yk_hYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T62nnfhYEeaxkoRKVpmNyQ" target="_T62noPhYEeaxkoRKVpmNyQ" source="_T62nqPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_T62nnvhYEeaxkoRKVpmNyQ" target="_T62nn_hYEeaxkoRKVpmNyQ" source="_T62npvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T62nn_hYEeaxkoRKVpmNyQ" name="Call(AssertFalse)" incoming="_T62nnvhYEeaxkoRKVpmNyQ" behavior="_T665NPhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_T62noPhYEeaxkoRKVpmNyQ" name="Call(AssertFalse).argument(label)" incoming="_T62nnfhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62nofhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62novhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_T62no_hYEeaxkoRKVpmNyQ" name="Call(AssertFalse).argument(condition)" incoming="_T60ykPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62npPhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62npfhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T62npvhYEeaxkoRKVpmNyQ" name="Tuple@10679360" outgoing="_T62nnvhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T62np_hYEeaxkoRKVpmNyQ" name="Value(&quot;f&quot;)">
                  <result xmi:id="_T62nqPhYEeaxkoRKVpmNyQ" name="Value(&quot;f&quot;).result" outgoing="_T62nnfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62nqfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62nqvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_T62nq_hYEeaxkoRKVpmNyQ" value="f">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T62nrPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@33957e5b" incoming="_T60yk_hYEeaxkoRKVpmNyQ" outgoing="_T60ylfhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T62nrfhYEeaxkoRKVpmNyQ" target="_T62nsfhYEeaxkoRKVpmNyQ" source="_T62nvPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T62nrvhYEeaxkoRKVpmNyQ" target="_T62nt_hYEeaxkoRKVpmNyQ" source="_T62nwfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_T62nr_hYEeaxkoRKVpmNyQ" target="_T62nsPhYEeaxkoRKVpmNyQ" source="_T62nuvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T62nsPhYEeaxkoRKVpmNyQ" name="Call(AssertEqual)" incoming="_T62nr_hYEeaxkoRKVpmNyQ" behavior="_T65rX_hYEeaxkoRKVpmNyQ">
                <argument xmi:id="_T62nsfhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(label)" incoming="_T62nrfhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62nsvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62ns_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_T62ntPhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value1)" incoming="_T60ykvhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62ntfhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62ntvhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_T62nt_hYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value2)" incoming="_T62nrvhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62nuPhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62nufhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T62nuvhYEeaxkoRKVpmNyQ" name="Tuple@129294c3" outgoing="_T62nr_hYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T62nu_hYEeaxkoRKVpmNyQ" name="Value(&quot;h&quot;)">
                  <result xmi:id="_T62nvPhYEeaxkoRKVpmNyQ" name="Value(&quot;h&quot;).result" outgoing="_T62nrfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62nvfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62nvvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_T62nv_hYEeaxkoRKVpmNyQ" value="h">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T62nwPhYEeaxkoRKVpmNyQ" name="Value(85)">
                  <result xmi:id="_T62nwfhYEeaxkoRKVpmNyQ" name="Value(85).result" outgoing="_T62nrvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62nwvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62nw_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_T62nxPhYEeaxkoRKVpmNyQ" value="85">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T62nxfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@393ca457" incoming="_T60ylfhYEeaxkoRKVpmNyQ" outgoing="_T60yl_hYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T62nxvhYEeaxkoRKVpmNyQ" target="_T62nyvhYEeaxkoRKVpmNyQ" source="_T62n1fhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T62nx_hYEeaxkoRKVpmNyQ" target="_T62n0PhYEeaxkoRKVpmNyQ" source="_T62n2vhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_T62nyPhYEeaxkoRKVpmNyQ" target="_T62nyfhYEeaxkoRKVpmNyQ" source="_T62n0_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T62nyfhYEeaxkoRKVpmNyQ" name="Call(AssertEqual)" incoming="_T62nyPhYEeaxkoRKVpmNyQ" behavior="_T65rX_hYEeaxkoRKVpmNyQ">
                <argument xmi:id="_T62nyvhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(label)" incoming="_T62nxvhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62ny_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62nzPhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_T62nzfhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value1)" incoming="_T60ylPhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62nzvhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62nz_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_T62n0PhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value2)" incoming="_T62nx_hYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62n0fhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62n0vhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T62n0_hYEeaxkoRKVpmNyQ" name="Tuple@5e583af4" outgoing="_T62nyPhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T62n1PhYEeaxkoRKVpmNyQ" name="Value(&quot;filename&quot;)">
                  <result xmi:id="_T62n1fhYEeaxkoRKVpmNyQ" name="Value(&quot;filename&quot;).result" outgoing="_T62nxvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62n1vhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62n1_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_T62n2PhYEeaxkoRKVpmNyQ" value="filename">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T62n2fhYEeaxkoRKVpmNyQ" name="Value(&quot;xyz.doc&quot;)">
                  <result xmi:id="_T62n2vhYEeaxkoRKVpmNyQ" name="Value(&quot;xyz.doc&quot;).result" outgoing="_T62nx_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62n2_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62n3PhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_T62n3fhYEeaxkoRKVpmNyQ" value="xyz.doc">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T62n3vhYEeaxkoRKVpmNyQ" name="ExpressionStatement@456454e0" incoming="_T60yl_hYEeaxkoRKVpmNyQ" outgoing="_T60ymPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T62n3_hYEeaxkoRKVpmNyQ" target="_T62n4_hYEeaxkoRKVpmNyQ" source="_T62n7vhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T62n4PhYEeaxkoRKVpmNyQ" target="_T62n6fhYEeaxkoRKVpmNyQ" source="_T62n8_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_T62n4fhYEeaxkoRKVpmNyQ" target="_T62n4vhYEeaxkoRKVpmNyQ" source="_T62n7PhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T62n4vhYEeaxkoRKVpmNyQ" name="Call(AssertEqual)" incoming="_T62n4fhYEeaxkoRKVpmNyQ" behavior="_T65rX_hYEeaxkoRKVpmNyQ">
                <argument xmi:id="_T62n4_hYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(label)" incoming="_T62n3_hYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62n5PhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62n5fhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_T62n5vhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value1)" incoming="_T60ylvhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62n5_hYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62n6PhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_T62n6fhYEeaxkoRKVpmNyQ" name="Call(AssertEqual).argument(value2)" incoming="_T62n4PhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62n6vhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62n6_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T62n7PhYEeaxkoRKVpmNyQ" name="Tuple@69b96cd" outgoing="_T62n4fhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T62n7fhYEeaxkoRKVpmNyQ" name="Value(&quot;a&quot;)">
                  <result xmi:id="_T62n7vhYEeaxkoRKVpmNyQ" name="Value(&quot;a&quot;).result" outgoing="_T62n3_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62n7_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62n8PhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_T62n8fhYEeaxkoRKVpmNyQ" value="a">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T62n8vhYEeaxkoRKVpmNyQ" name="Value(2)">
                  <result xmi:id="_T62n8_hYEeaxkoRKVpmNyQ" name="Value(2).result" outgoing="_T62n4PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62n9PhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62n9fhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_T62n9vhYEeaxkoRKVpmNyQ" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T62n9_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@5cf24f99" incoming="_T60ymPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T62n-PhYEeaxkoRKVpmNyQ" target="_T62n-vhYEeaxkoRKVpmNyQ" source="_T62n_vhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_T62n-fhYEeaxkoRKVpmNyQ" name="Call(done)" operation="_T65E6vhYEeaxkoRKVpmNyQ">
                <target xmi:id="_T62n-vhYEeaxkoRKVpmNyQ" name="Call(done).target" incoming="_T62n-PhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62n-_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62n_PhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_T62n_fhYEeaxkoRKVpmNyQ" name="ReadSelf">
                <result xmi:id="_T62n_vhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_T62n-PhYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62n__hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62oAPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_T62oAfhYEeaxkoRKVpmNyQ" name="ReadSelf">
            <result xmi:id="_T62oAvhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_T60ygfhYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62oA_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62oBPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_T62oBfhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_T60ygfhYEeaxkoRKVpmNyQ" outgoing="_T60yc_hYEeaxkoRKVpmNyQ _T60ygvhYEeaxkoRKVpmNyQ _T60yhfhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T62oBvhYEeaxkoRKVpmNyQ" name="Super" incoming="_T60yi_hYEeaxkoRKVpmNyQ" outgoing="_T60yhPhYEeaxkoRKVpmNyQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T62oB_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@1ab07559">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T62oCPhYEeaxkoRKVpmNyQ" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T62oCfhYEeaxkoRKVpmNyQ" target="_T62oCvhYEeaxkoRKVpmNyQ" source="_T62oEfhYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_T62oCvhYEeaxkoRKVpmNyQ" name="Output(Call(Test$method$1).result())" incoming="_T62oCfhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62oC_hYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62oDPhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_T62oDfhYEeaxkoRKVpmNyQ" name="Call(Test$method$1)" behavior="_T65EM_hYEeaxkoRKVpmNyQ">
                  <argument xmi:id="_T62oDvhYEeaxkoRKVpmNyQ" name="Call(Test$method$1).argument(tester)" incoming="_T60ydPhYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62oD_hYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62oEPhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_T62oEfhYEeaxkoRKVpmNyQ" name="Call(Test$method$1).result()" outgoing="_T62oCfhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62oEvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62oE_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_T62oFPhYEeaxkoRKVpmNyQ" name="Call(Expressions_Assignment$initialization$1)" incoming="_T60yhPhYEeaxkoRKVpmNyQ" outgoing="_T60yg_hYEeaxkoRKVpmNyQ" operation="_T65D3PhYEeaxkoRKVpmNyQ">
            <target xmi:id="_T62oFfhYEeaxkoRKVpmNyQ" name="Call(Expressions_Assignment$initialization$1).target" incoming="_T60ygvhYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62oFvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62oF_hYEeaxkoRKVpmNyQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_T62oGPhYEeaxkoRKVpmNyQ" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_T60yaPhYEeaxkoRKVpmNyQ">
            <object xmi:id="_T62oGfhYEeaxkoRKVpmNyQ" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_T60yhfhYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62oGvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62oG_hYEeaxkoRKVpmNyQ" value="1"/>
            </object>
            <result xmi:id="_T62oHPhYEeaxkoRKVpmNyQ" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_T60yhvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62oHfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62oHvhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_T62oH_hYEeaxkoRKVpmNyQ" name="Call(ListSize)">
            <argument xmi:id="_T62oIPhYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_T60yhvhYEeaxkoRKVpmNyQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62oIfhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62oIvhYEeaxkoRKVpmNyQ" value="*"/>
            </argument>
            <result xmi:id="_T62oI_hYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_T60yh_hYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62oJPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62oJfhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T62oJvhYEeaxkoRKVpmNyQ" name="Value(0)">
            <result xmi:id="_T62oJ_hYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_T60yiPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62oKPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62oKfhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_T62oKvhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_T62oK_hYEeaxkoRKVpmNyQ" name="Test(Size==0)">
            <first xmi:id="_T62oLPhYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_T60yh_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T62oLfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T62oLvhYEeaxkoRKVpmNyQ" value="1"/>
            </first>
            <result xmi:id="_T63OoPhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_T60yivhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63OofhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63OovhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <second xmi:id="_T63Oo_hYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_T60yiPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63OpPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63OpfhYEeaxkoRKVpmNyQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_T63OpvhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_T60yifhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_T63Op_hYEeaxkoRKVpmNyQ" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" incoming="_T60yifhYEeaxkoRKVpmNyQ _T60yivhYEeaxkoRKVpmNyQ" outgoing="_T60yi_hYEeaxkoRKVpmNyQ" decisionInputFlow="_T60yivhYEeaxkoRKVpmNyQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_T60yd_hYEeaxkoRKVpmNyQ" name="Input(tester)" outgoing="_T60ycvhYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" parameter="_T60ybPhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_T60yePhYEeaxkoRKVpmNyQ" name="Return" incoming="_T60yc_hYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" parameter="_T60yb_hYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:JoinNode" xmi:id="_T60yefhYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_T60ydfhYEeaxkoRKVpmNyQ" outgoing="_T60ydvhYEeaxkoRKVpmNyQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_T63OqPhYEeaxkoRKVpmNyQ" name="Expressions_Assignment$method$1" specification="_T65D5PhYEeaxkoRKVpmNyQ" node="_T63OrfhYEeaxkoRKVpmNyQ _T63OrvhYEeaxkoRKVpmNyQ" group="_T63OrvhYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_T63OqfhYEeaxkoRKVpmNyQ" name="" type="_T60yYfhYEeaxkoRKVpmNyQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63OqvhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63Oq_hYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T63OrPhYEeaxkoRKVpmNyQ" target="_T63OrfhYEeaxkoRKVpmNyQ" source="_T63O0vhYEeaxkoRKVpmNyQ"/>
        <structuredNode xmi:id="_T63OrvhYEeaxkoRKVpmNyQ" name="Body(Expressions_Assignment$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63Or_hYEeaxkoRKVpmNyQ" target="_T63O0vhYEeaxkoRKVpmNyQ" source="_T63Oz_hYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63OsPhYEeaxkoRKVpmNyQ" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63OsfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@f75843e">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T63OsvhYEeaxkoRKVpmNyQ" target="_T63OxfhYEeaxkoRKVpmNyQ" source="_T63Ot_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_T63Os_hYEeaxkoRKVpmNyQ" target="_T63OxPhYEeaxkoRKVpmNyQ" source="_T63OtfhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T63OtPhYEeaxkoRKVpmNyQ" target="_T63Oy_hYEeaxkoRKVpmNyQ" source="_T63OvPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63OtfhYEeaxkoRKVpmNyQ" name="Tuple@30906ad3" outgoing="_T63Os_hYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T63OtvhYEeaxkoRKVpmNyQ" name="Value(null)">
                  <result xmi:id="_T63Ot_hYEeaxkoRKVpmNyQ" name="Value(null).result" outgoing="_T63OsvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63OuPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63OufhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_T63OuvhYEeaxkoRKVpmNyQ"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_T63Ou_hYEeaxkoRKVpmNyQ" name="ReadSelf">
                <result xmi:id="_T63OvPhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_T63OtPhYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63OvfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63OvvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63Ov_hYEeaxkoRKVpmNyQ" name="Node(Call(run))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T63OwPhYEeaxkoRKVpmNyQ" target="_T63OwfhYEeaxkoRKVpmNyQ" source="_T63OyPhYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_T63OwfhYEeaxkoRKVpmNyQ" name="Output(Call(run).result())" incoming="_T63OwPhYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63OwvhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63Ow_hYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_T63OxPhYEeaxkoRKVpmNyQ" name="Call(run)" incoming="_T63Os_hYEeaxkoRKVpmNyQ" operation="_T65D3fhYEeaxkoRKVpmNyQ">
                  <argument xmi:id="_T63OxfhYEeaxkoRKVpmNyQ" name="Call(run).argument(tester)" incoming="_T63OsvhYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63OxvhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63Ox_hYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_T63OyPhYEeaxkoRKVpmNyQ" name="Call(run).result()" outgoing="_T63OwPhYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63OyfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63OyvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <target xmi:id="_T63Oy_hYEeaxkoRKVpmNyQ" name="Call(run).target" incoming="_T63OtPhYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63OzPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63OzfhYEeaxkoRKVpmNyQ" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_T63OzvhYEeaxkoRKVpmNyQ" name="ReadSelf">
            <result xmi:id="_T63Oz_hYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_T63Or_hYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63O0PhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63O0fhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_T63O0vhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_T63Or_hYEeaxkoRKVpmNyQ" outgoing="_T63OrPhYEeaxkoRKVpmNyQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_T63OrfhYEeaxkoRKVpmNyQ" name="Return" incoming="_T63OrPhYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" parameter="_T63OqfhYEeaxkoRKVpmNyQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_T63O0_hYEeaxkoRKVpmNyQ" name="test$method$1" specification="_T65D6PhYEeaxkoRKVpmNyQ" node="_T63O6PhYEeaxkoRKVpmNyQ _T63O6fhYEeaxkoRKVpmNyQ _T63O6vhYEeaxkoRKVpmNyQ _T63O6_hYEeaxkoRKVpmNyQ _T63O7PhYEeaxkoRKVpmNyQ _T63O7fhYEeaxkoRKVpmNyQ" group="_T63O7fhYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_T63O1PhYEeaxkoRKVpmNyQ" name="i" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63O1fhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63O1vhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_T63O1_hYEeaxkoRKVpmNyQ" name="f" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63O2PhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63O2fhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_T63O2vhYEeaxkoRKVpmNyQ" name="h" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63O2_hYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63O3PhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_T63O3fhYEeaxkoRKVpmNyQ" name="filename" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63O3vhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63O3_hYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_T63O4PhYEeaxkoRKVpmNyQ" name="a" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63O4fhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63O4vhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O4_hYEeaxkoRKVpmNyQ" target="_T63O6PhYEeaxkoRKVpmNyQ" source="_T63PIfhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O5PhYEeaxkoRKVpmNyQ" target="_T63O6fhYEeaxkoRKVpmNyQ" source="_T63PJPhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O5fhYEeaxkoRKVpmNyQ" target="_T63O6vhYEeaxkoRKVpmNyQ" source="_T63PJ_hYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O5vhYEeaxkoRKVpmNyQ" target="_T63O6_hYEeaxkoRKVpmNyQ" source="_T63PKvhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O5_hYEeaxkoRKVpmNyQ" target="_T63O7PhYEeaxkoRKVpmNyQ" source="_T63PLfhYEeaxkoRKVpmNyQ"/>
        <structuredNode xmi:id="_T63O7fhYEeaxkoRKVpmNyQ" name="Body(test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O7vhYEeaxkoRKVpmNyQ" target="_T63PPfhYEeaxkoRKVpmNyQ" source="_T63PMvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63O7_hYEeaxkoRKVpmNyQ" target="_T63POfhYEeaxkoRKVpmNyQ" source="_T63PMPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O8PhYEeaxkoRKVpmNyQ" target="_T63PUfhYEeaxkoRKVpmNyQ" source="_T63PRvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63O8fhYEeaxkoRKVpmNyQ" target="_T63PTfhYEeaxkoRKVpmNyQ" source="_T63POfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O8vhYEeaxkoRKVpmNyQ" target="_T63PZfhYEeaxkoRKVpmNyQ" source="_T63PWvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63O8_hYEeaxkoRKVpmNyQ" target="_T63PYfhYEeaxkoRKVpmNyQ" source="_T63PTfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O9PhYEeaxkoRKVpmNyQ" target="_T63PefhYEeaxkoRKVpmNyQ" source="_T63PbvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63O9fhYEeaxkoRKVpmNyQ" target="_T63PdfhYEeaxkoRKVpmNyQ" source="_T63PYfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O9vhYEeaxkoRKVpmNyQ" target="_T63PjfhYEeaxkoRKVpmNyQ" source="_T63PgvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63O9_hYEeaxkoRKVpmNyQ" target="_T63PifhYEeaxkoRKVpmNyQ" source="_T63PdfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O-PhYEeaxkoRKVpmNyQ" target="_T631ufhYEeaxkoRKVpmNyQ" source="_T63PlvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63O-fhYEeaxkoRKVpmNyQ" target="_T631tfhYEeaxkoRKVpmNyQ" source="_T63PifhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63O-vhYEeaxkoRKVpmNyQ" target="_T631yfhYEeaxkoRKVpmNyQ" source="_T631tfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O-_hYEeaxkoRKVpmNyQ" target="_T6311vhYEeaxkoRKVpmNyQ" source="_T631y_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63O_PhYEeaxkoRKVpmNyQ" target="_T6310vhYEeaxkoRKVpmNyQ" source="_T631yfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O_fhYEeaxkoRKVpmNyQ" target="_T6316vhYEeaxkoRKVpmNyQ" source="_T6313_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63O_vhYEeaxkoRKVpmNyQ" target="_T6315vhYEeaxkoRKVpmNyQ" source="_T6310vhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63O__hYEeaxkoRKVpmNyQ" target="_T631_vhYEeaxkoRKVpmNyQ" source="_T6318_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PAPhYEeaxkoRKVpmNyQ" target="_T631-vhYEeaxkoRKVpmNyQ" source="_T6315vhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PAfhYEeaxkoRKVpmNyQ" target="_T632DvhYEeaxkoRKVpmNyQ" source="_T631-vhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PAvhYEeaxkoRKVpmNyQ" target="_T632NPhYEeaxkoRKVpmNyQ" source="_T632DvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PA_hYEeaxkoRKVpmNyQ" target="_T632SfhYEeaxkoRKVpmNyQ" source="_T632NvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PBPhYEeaxkoRKVpmNyQ" target="_T632RfhYEeaxkoRKVpmNyQ" source="_T632NPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PBfhYEeaxkoRKVpmNyQ" target="_T632ZfhYEeaxkoRKVpmNyQ" source="_T632UvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PBvhYEeaxkoRKVpmNyQ" target="_T632YfhYEeaxkoRKVpmNyQ" source="_T632RfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PB_hYEeaxkoRKVpmNyQ" target="_T632gfhYEeaxkoRKVpmNyQ" source="_T632bvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PCPhYEeaxkoRKVpmNyQ" target="_T632ffhYEeaxkoRKVpmNyQ" source="_T632YfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PCfhYEeaxkoRKVpmNyQ" target="_T632nfhYEeaxkoRKVpmNyQ" source="_T632ivhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PCvhYEeaxkoRKVpmNyQ" target="_T632mfhYEeaxkoRKVpmNyQ" source="_T632ffhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PC_hYEeaxkoRKVpmNyQ" target="_T64cwvhYEeaxkoRKVpmNyQ" source="_T632pvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PDPhYEeaxkoRKVpmNyQ" target="_T632rfhYEeaxkoRKVpmNyQ" source="_T632mfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PDfhYEeaxkoRKVpmNyQ" target="_T64c1vhYEeaxkoRKVpmNyQ" source="_T64cy_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PDvhYEeaxkoRKVpmNyQ" target="_T64c0vhYEeaxkoRKVpmNyQ" source="_T632rfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PD_hYEeaxkoRKVpmNyQ" target="_T64c5vhYEeaxkoRKVpmNyQ" source="_T64c0vhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PEPhYEeaxkoRKVpmNyQ" target="_T64c8_hYEeaxkoRKVpmNyQ" source="_T64c6PhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PEfhYEeaxkoRKVpmNyQ" target="_T64c7_hYEeaxkoRKVpmNyQ" source="_T64c5vhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PEvhYEeaxkoRKVpmNyQ" target="_T64dA_hYEeaxkoRKVpmNyQ" source="_T64c7_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PE_hYEeaxkoRKVpmNyQ" target="_T64dEPhYEeaxkoRKVpmNyQ" source="_T64dBfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PFPhYEeaxkoRKVpmNyQ" target="_T64dDPhYEeaxkoRKVpmNyQ" source="_T64dA_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PFfhYEeaxkoRKVpmNyQ" target="_T64dIPhYEeaxkoRKVpmNyQ" source="_T64dDPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PFvhYEeaxkoRKVpmNyQ" target="_T64dLPhYEeaxkoRKVpmNyQ" source="_T64dIvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PF_hYEeaxkoRKVpmNyQ" target="_T64dL_hYEeaxkoRKVpmNyQ" source="_T631wvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PGPhYEeaxkoRKVpmNyQ" target="_T64dKfhYEeaxkoRKVpmNyQ" source="_T64dIPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PGfhYEeaxkoRKVpmNyQ" target="_T64dN_hYEeaxkoRKVpmNyQ" source="_T64dKfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PGvhYEeaxkoRKVpmNyQ" target="_T64dRPhYEeaxkoRKVpmNyQ" source="_T64dOfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T63PG_hYEeaxkoRKVpmNyQ" target="_T64dQPhYEeaxkoRKVpmNyQ" source="_T64dN_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PHPhYEeaxkoRKVpmNyQ" target="_T63PIfhYEeaxkoRKVpmNyQ" source="_T631wvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PHfhYEeaxkoRKVpmNyQ" target="_T63PJPhYEeaxkoRKVpmNyQ" source="_T632B_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PHvhYEeaxkoRKVpmNyQ" target="_T63PJ_hYEeaxkoRKVpmNyQ" source="_T64c3_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PH_hYEeaxkoRKVpmNyQ" target="_T63PKvhYEeaxkoRKVpmNyQ" source="_T64c_PhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PIPhYEeaxkoRKVpmNyQ" target="_T63PLfhYEeaxkoRKVpmNyQ" source="_T64dTfhYEeaxkoRKVpmNyQ"/>
          <structuredNodeOutput xmi:id="_T63PIfhYEeaxkoRKVpmNyQ" name="Output(i)" incoming="_T63PHPhYEeaxkoRKVpmNyQ" outgoing="_T63O4_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PIvhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PI_hYEeaxkoRKVpmNyQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_T63PJPhYEeaxkoRKVpmNyQ" name="Output(f)" incoming="_T63PHfhYEeaxkoRKVpmNyQ" outgoing="_T63O5PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PJfhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PJvhYEeaxkoRKVpmNyQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_T63PJ_hYEeaxkoRKVpmNyQ" name="Output(h)" incoming="_T63PHvhYEeaxkoRKVpmNyQ" outgoing="_T63O5fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PKPhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PKfhYEeaxkoRKVpmNyQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_T63PKvhYEeaxkoRKVpmNyQ" name="Output(filename)" incoming="_T63PH_hYEeaxkoRKVpmNyQ" outgoing="_T63O5vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PK_hYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PLPhYEeaxkoRKVpmNyQ" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_T63PLfhYEeaxkoRKVpmNyQ" name="Output(a)" incoming="_T63PIPhYEeaxkoRKVpmNyQ" outgoing="_T63O5_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PLvhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PL_hYEeaxkoRKVpmNyQ" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63PMPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@51920bb0" outgoing="_T63O7_hYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PMfhYEeaxkoRKVpmNyQ" target="_T63PMvhYEeaxkoRKVpmNyQ" source="_T63PNfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_T63PMvhYEeaxkoRKVpmNyQ" name="Fork(i)@45f9f520" incoming="_T63PMfhYEeaxkoRKVpmNyQ" outgoing="_T63O7vhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63PM_hYEeaxkoRKVpmNyQ" name="RightHandSide@77e55368">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T63PNPhYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T63PNfhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T63PMfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PNvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PN_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T63POPhYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63POfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@43f0a612" incoming="_T63O7_hYEeaxkoRKVpmNyQ" outgoing="_T63O8fhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T63POvhYEeaxkoRKVpmNyQ" target="_T63PQPhYEeaxkoRKVpmNyQ" source="_T63PSfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PO_hYEeaxkoRKVpmNyQ" target="_T63PRvhYEeaxkoRKVpmNyQ" source="_T63PQ_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T63PPPhYEeaxkoRKVpmNyQ" name="Call(+)">
              <argument xmi:id="_T63PPfhYEeaxkoRKVpmNyQ" name="Call(+).argument(x)" incoming="_T63O7vhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PPvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PP_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T63PQPhYEeaxkoRKVpmNyQ" name="Call(+).argument(y)" incoming="_T63POvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PQfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PQvhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T63PQ_hYEeaxkoRKVpmNyQ" name="Call(+).result(result)" outgoing="_T63PO_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PRPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PRfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T63PRvhYEeaxkoRKVpmNyQ" name="Fork(i)@799c1c8" incoming="_T63PO_hYEeaxkoRKVpmNyQ" outgoing="_T63O8PhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63PR_hYEeaxkoRKVpmNyQ" name="RightHandSide@7fefa1cc">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T63PSPhYEeaxkoRKVpmNyQ" name="Value(4)">
                <result xmi:id="_T63PSfhYEeaxkoRKVpmNyQ" name="Value(4).result" outgoing="_T63POvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PSvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PS_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T63PTPhYEeaxkoRKVpmNyQ" value="4">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63PTfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@76ccefaf" incoming="_T63O8fhYEeaxkoRKVpmNyQ" outgoing="_T63O8_hYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PTvhYEeaxkoRKVpmNyQ" target="_T63PVPhYEeaxkoRKVpmNyQ" source="_T63PXfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PT_hYEeaxkoRKVpmNyQ" target="_T63PWvhYEeaxkoRKVpmNyQ" source="_T63PV_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T63PUPhYEeaxkoRKVpmNyQ" name="Call(+)">
              <argument xmi:id="_T63PUfhYEeaxkoRKVpmNyQ" name="Call(+).argument(x)" incoming="_T63O8PhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PUvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PU_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T63PVPhYEeaxkoRKVpmNyQ" name="Call(+).argument(y)" incoming="_T63PTvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PVfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PVvhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T63PV_hYEeaxkoRKVpmNyQ" name="Call(+).result(result)" outgoing="_T63PT_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PWPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PWfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T63PWvhYEeaxkoRKVpmNyQ" name="Fork(i)@59af828a" incoming="_T63PT_hYEeaxkoRKVpmNyQ" outgoing="_T63O8vhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63PW_hYEeaxkoRKVpmNyQ" name="RightHandSide@2177809a">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T63PXPhYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T63PXfhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T63PTvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PXvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PX_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T63PYPhYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63PYfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@30fc1d0c" incoming="_T63O8_hYEeaxkoRKVpmNyQ" outgoing="_T63O9fhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PYvhYEeaxkoRKVpmNyQ" target="_T63PaPhYEeaxkoRKVpmNyQ" source="_T63PcfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PY_hYEeaxkoRKVpmNyQ" target="_T63PbvhYEeaxkoRKVpmNyQ" source="_T63Pa_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T63PZPhYEeaxkoRKVpmNyQ" name="Call(-)">
              <argument xmi:id="_T63PZfhYEeaxkoRKVpmNyQ" name="Call(-).argument(x)" incoming="_T63O8vhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PZvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PZ_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T63PaPhYEeaxkoRKVpmNyQ" name="Call(-).argument(y)" incoming="_T63PYvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PafhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PavhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T63Pa_hYEeaxkoRKVpmNyQ" name="Call(-).result(result)" outgoing="_T63PY_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PbPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PbfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T63PbvhYEeaxkoRKVpmNyQ" name="Fork(i)@27d58238" incoming="_T63PY_hYEeaxkoRKVpmNyQ" outgoing="_T63O9PhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63Pb_hYEeaxkoRKVpmNyQ" name="RightHandSide@a6bd353">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T63PcPhYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T63PcfhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T63PYvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PcvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63Pc_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T63PdPhYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63PdfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@335c68db" incoming="_T63O9fhYEeaxkoRKVpmNyQ" outgoing="_T63O9_hYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PdvhYEeaxkoRKVpmNyQ" target="_T63PfPhYEeaxkoRKVpmNyQ" source="_T63PhfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T63Pd_hYEeaxkoRKVpmNyQ" target="_T63PgvhYEeaxkoRKVpmNyQ" source="_T63Pf_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T63PePhYEeaxkoRKVpmNyQ" name="Call(*)">
              <argument xmi:id="_T63PefhYEeaxkoRKVpmNyQ" name="Call(*).argument(x)" incoming="_T63O9PhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PevhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63Pe_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T63PfPhYEeaxkoRKVpmNyQ" name="Call(*).argument(y)" incoming="_T63PdvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PffhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PfvhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T63Pf_hYEeaxkoRKVpmNyQ" name="Call(*).result(result)" outgoing="_T63Pd_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PgPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PgfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-times"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T63PgvhYEeaxkoRKVpmNyQ" name="Fork(i)@26fda5ee" incoming="_T63Pd_hYEeaxkoRKVpmNyQ" outgoing="_T63O9vhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63Pg_hYEeaxkoRKVpmNyQ" name="RightHandSide@3de4bfa9">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T63PhPhYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T63PhfhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T63PdvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PhvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63Ph_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T63PiPhYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63PifhYEeaxkoRKVpmNyQ" name="ExpressionStatement@6d1aa79c" incoming="_T63O9_hYEeaxkoRKVpmNyQ" outgoing="_T63O-fhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T63PivhYEeaxkoRKVpmNyQ" target="_T63PkPhYEeaxkoRKVpmNyQ" source="_T631sfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T63Pi_hYEeaxkoRKVpmNyQ" target="_T63PlvhYEeaxkoRKVpmNyQ" source="_T63Pk_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T63PjPhYEeaxkoRKVpmNyQ" name="Call(Mod)">
              <argument xmi:id="_T63PjfhYEeaxkoRKVpmNyQ" name="Call(Mod).argument(x)" incoming="_T63O9vhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PjvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63Pj_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T63PkPhYEeaxkoRKVpmNyQ" name="Call(Mod).argument(y)" incoming="_T63PivhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PkfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PkvhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T63Pk_hYEeaxkoRKVpmNyQ" name="Call(Mod).result(result)" outgoing="_T63Pi_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T63PlPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T63PlfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T63PlvhYEeaxkoRKVpmNyQ" name="Fork(i)@772739ee" incoming="_T63Pi_hYEeaxkoRKVpmNyQ" outgoing="_T63O-PhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T63Pl_hYEeaxkoRKVpmNyQ" name="RightHandSide@f406ea2">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T631sPhYEeaxkoRKVpmNyQ" name="Value(6)">
                <result xmi:id="_T631sfhYEeaxkoRKVpmNyQ" name="Value(6).result" outgoing="_T63PivhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T631svhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T631s_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T631tPhYEeaxkoRKVpmNyQ" value="6">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T631tfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@2ba70002" incoming="_T63O-fhYEeaxkoRKVpmNyQ" outgoing="_T63O-vhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T631tvhYEeaxkoRKVpmNyQ" target="_T631vPhYEeaxkoRKVpmNyQ" source="_T631xfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T631t_hYEeaxkoRKVpmNyQ" target="_T631wvhYEeaxkoRKVpmNyQ" source="_T631v_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T631uPhYEeaxkoRKVpmNyQ" name="Call(Div)">
              <argument xmi:id="_T631ufhYEeaxkoRKVpmNyQ" name="Call(Div).argument(x)" incoming="_T63O-PhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T631uvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T631u_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T631vPhYEeaxkoRKVpmNyQ" name="Call(Div).argument(y)" incoming="_T631tvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T631vfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T631vvhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T631v_hYEeaxkoRKVpmNyQ" name="Call(Div).result(result)" outgoing="_T631t_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T631wPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T631wfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T631wvhYEeaxkoRKVpmNyQ" name="Fork(i)@bb832f0" incoming="_T631t_hYEeaxkoRKVpmNyQ" outgoing="_T63PF_hYEeaxkoRKVpmNyQ _T63PHPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T631w_hYEeaxkoRKVpmNyQ" name="RightHandSide@1cdb691a">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T631xPhYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T631xfhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T631tvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T631xvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T631x_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T631yPhYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T631yfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@119655f1" incoming="_T63O-vhYEeaxkoRKVpmNyQ" outgoing="_T63O_PhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T631yvhYEeaxkoRKVpmNyQ" target="_T631y_hYEeaxkoRKVpmNyQ" source="_T631zvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_T631y_hYEeaxkoRKVpmNyQ" name="Fork(f)@5d869991" incoming="_T631yvhYEeaxkoRKVpmNyQ" outgoing="_T63O-_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T631zPhYEeaxkoRKVpmNyQ" name="RightHandSide@597880b1">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T631zfhYEeaxkoRKVpmNyQ" name="Value(true)">
                <result xmi:id="_T631zvhYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_T631yvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T631z_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6310PhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_T6310fhYEeaxkoRKVpmNyQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T6310vhYEeaxkoRKVpmNyQ" name="ExpressionStatement@574e1381" incoming="_T63O_PhYEeaxkoRKVpmNyQ" outgoing="_T63O_vhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T6310_hYEeaxkoRKVpmNyQ" target="_T6312fhYEeaxkoRKVpmNyQ" source="_T6314vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T6311PhYEeaxkoRKVpmNyQ" target="_T6313_hYEeaxkoRKVpmNyQ" source="_T6313PhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T6311fhYEeaxkoRKVpmNyQ" name="Call(And)">
              <argument xmi:id="_T6311vhYEeaxkoRKVpmNyQ" name="Call(And).argument(x)" incoming="_T63O-_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6311_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6312PhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T6312fhYEeaxkoRKVpmNyQ" name="Call(And).argument(y)" incoming="_T6310_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6312vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6312_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T6313PhYEeaxkoRKVpmNyQ" name="Call(And).result(result)" outgoing="_T6311PhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6313fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6313vhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-And"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T6313_hYEeaxkoRKVpmNyQ" name="Fork(f)@7fac91fb" incoming="_T6311PhYEeaxkoRKVpmNyQ" outgoing="_T63O_fhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T6314PhYEeaxkoRKVpmNyQ" name="RightHandSide@457af059">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T6314fhYEeaxkoRKVpmNyQ" name="Value(true)">
                <result xmi:id="_T6314vhYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_T6310_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6314_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6315PhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_T6315fhYEeaxkoRKVpmNyQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T6315vhYEeaxkoRKVpmNyQ" name="ExpressionStatement@27e93770" incoming="_T63O_vhYEeaxkoRKVpmNyQ" outgoing="_T63PAPhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T6315_hYEeaxkoRKVpmNyQ" target="_T6317fhYEeaxkoRKVpmNyQ" source="_T6319vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T6316PhYEeaxkoRKVpmNyQ" target="_T6318_hYEeaxkoRKVpmNyQ" source="_T6318PhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T6316fhYEeaxkoRKVpmNyQ" name="Call(Or)">
              <argument xmi:id="_T6316vhYEeaxkoRKVpmNyQ" name="Call(Or).argument(x)" incoming="_T63O_fhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6316_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6317PhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T6317fhYEeaxkoRKVpmNyQ" name="Call(Or).argument(y)" incoming="_T6315_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6317vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6317_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T6318PhYEeaxkoRKVpmNyQ" name="Call(Or).result(result)" outgoing="_T6316PhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6318fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6318vhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T6318_hYEeaxkoRKVpmNyQ" name="Fork(f)@77aa1e4" incoming="_T6316PhYEeaxkoRKVpmNyQ" outgoing="_T63O__hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T6319PhYEeaxkoRKVpmNyQ" name="RightHandSide@5e454172">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T6319fhYEeaxkoRKVpmNyQ" name="Value(true)">
                <result xmi:id="_T6319vhYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_T6315_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6319_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T631-PhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_T631-fhYEeaxkoRKVpmNyQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T631-vhYEeaxkoRKVpmNyQ" name="ExpressionStatement@3312dd3e" incoming="_T63PAPhYEeaxkoRKVpmNyQ" outgoing="_T63PAfhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T631-_hYEeaxkoRKVpmNyQ" target="_T632AfhYEeaxkoRKVpmNyQ" source="_T632CvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T631_PhYEeaxkoRKVpmNyQ" target="_T632B_hYEeaxkoRKVpmNyQ" source="_T632BPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T631_fhYEeaxkoRKVpmNyQ" name="Call(Xor)">
              <argument xmi:id="_T631_vhYEeaxkoRKVpmNyQ" name="Call(Xor).argument(x)" incoming="_T63O__hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T631__hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632APhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T632AfhYEeaxkoRKVpmNyQ" name="Call(Xor).argument(y)" incoming="_T631-_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632AvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632A_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T632BPhYEeaxkoRKVpmNyQ" name="Call(Xor).result(result)" outgoing="_T631_PhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632BfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632BvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Xor"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T632B_hYEeaxkoRKVpmNyQ" name="Fork(f)@65a5458b" incoming="_T631_PhYEeaxkoRKVpmNyQ" outgoing="_T63PHfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632CPhYEeaxkoRKVpmNyQ" name="RightHandSide@a04462d">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T632CfhYEeaxkoRKVpmNyQ" name="Value(true)">
                <result xmi:id="_T632CvhYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_T631-_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632C_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632DPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_T632DfhYEeaxkoRKVpmNyQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632DvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@609047a6" incoming="_T63PAfhYEeaxkoRKVpmNyQ" outgoing="_T63PAvhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T632D_hYEeaxkoRKVpmNyQ" target="_T632EPhYEeaxkoRKVpmNyQ" source="_T632M_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_T632EPhYEeaxkoRKVpmNyQ" name="Fork(h)@5e409078" incoming="_T632D_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632EfhYEeaxkoRKVpmNyQ" name="RightHandSide@2273255e">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T632EvhYEeaxkoRKVpmNyQ" target="_T632MvhYEeaxkoRKVpmNyQ" source="_T632FPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T632E_hYEeaxkoRKVpmNyQ" name="Value(0)">
                <result xmi:id="_T632FPhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_T632EvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632FfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632FvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T632F_hYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_T632GPhYEeaxkoRKVpmNyQ" name="CastExpression@2273255e" mode="parallel" outputElement="_T632M_hYEeaxkoRKVpmNyQ" inputElement="_T632MvhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T632GfhYEeaxkoRKVpmNyQ" target="_T632I_hYEeaxkoRKVpmNyQ" source="_T632KfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T632GvhYEeaxkoRKVpmNyQ" target="_T632IfhYEeaxkoRKVpmNyQ" source="_T632LvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T632G_hYEeaxkoRKVpmNyQ" target="_T632MfhYEeaxkoRKVpmNyQ" source="_T632KfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T632HPhYEeaxkoRKVpmNyQ" target="_T632MfhYEeaxkoRKVpmNyQ" source="_T632JvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T632HfhYEeaxkoRKVpmNyQ" target="_T632K_hYEeaxkoRKVpmNyQ" source="_T632MfhYEeaxkoRKVpmNyQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_T632HvhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T632H_hYEeaxkoRKVpmNyQ" target="_T632KfhYEeaxkoRKVpmNyQ" source="_T632MvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T632IPhYEeaxkoRKVpmNyQ" target="_T632M_hYEeaxkoRKVpmNyQ" source="_T632IfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_T632IfhYEeaxkoRKVpmNyQ" name="Merge(CastExpression@2273255e.operand)" incoming="_T632GvhYEeaxkoRKVpmNyQ" outgoing="_T632IPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_T632IvhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(Integer)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_T632I_hYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(Integer).object" incoming="_T632GfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632JPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632JfhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_T632JvhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(Integer).result" outgoing="_T632HPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632J_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632KPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_T632KfhYEeaxkoRKVpmNyQ" name="Fork(ReadIsClassifiedObject(Integer).object)" incoming="_T632H_hYEeaxkoRKVpmNyQ" outgoing="_T632GfhYEeaxkoRKVpmNyQ _T632G_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_T632KvhYEeaxkoRKVpmNyQ" name="Call(ToBitString)">
                  <argument xmi:id="_T632K_hYEeaxkoRKVpmNyQ" name="Call(ToBitString).argument(n)" incoming="_T632HfhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632LPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632LfhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_T632LvhYEeaxkoRKVpmNyQ" name="Call(ToBitString).result()" outgoing="_T632GvhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632L_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632MPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_T632MfhYEeaxkoRKVpmNyQ" name="Decision(ReadIsClassifiedObject(Integer).result)" incoming="_T632G_hYEeaxkoRKVpmNyQ _T632HPhYEeaxkoRKVpmNyQ" outgoing="_T632HfhYEeaxkoRKVpmNyQ" decisionInputFlow="_T632HPhYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_T632MvhYEeaxkoRKVpmNyQ" name="CastExpression@2273255e.inputElement" incoming="_T632EvhYEeaxkoRKVpmNyQ" outgoing="_T632H_hYEeaxkoRKVpmNyQ" regionAsInput="_T632GPhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_T632M_hYEeaxkoRKVpmNyQ" name="CastExpression@2273255e.outputElement" incoming="_T632IPhYEeaxkoRKVpmNyQ" outgoing="_T632D_hYEeaxkoRKVpmNyQ" regionAsOutput="_T632GPhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632NPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@52777e0b" incoming="_T63PAvhYEeaxkoRKVpmNyQ" outgoing="_T63PBPhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T632NfhYEeaxkoRKVpmNyQ" target="_T632NvhYEeaxkoRKVpmNyQ" source="_T632QvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_T632NvhYEeaxkoRKVpmNyQ" name="Fork(h)@34ded59f" incoming="_T632NfhYEeaxkoRKVpmNyQ" outgoing="_T63PA_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632N_hYEeaxkoRKVpmNyQ" name="RightHandSide@5fbcc71d">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T632OPhYEeaxkoRKVpmNyQ" target="_T632P_hYEeaxkoRKVpmNyQ" source="_T632OvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T632OfhYEeaxkoRKVpmNyQ" name="Value(171)">
                <result xmi:id="_T632OvhYEeaxkoRKVpmNyQ" name="Value(171).result" outgoing="_T632OPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632O_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632PPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T632PfhYEeaxkoRKVpmNyQ" value="171">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T632PvhYEeaxkoRKVpmNyQ" name="Call(ToBitString)">
                <argument xmi:id="_T632P_hYEeaxkoRKVpmNyQ" name="Call(ToBitString).argument(n)" incoming="_T632OPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632QPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632QfhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <result xmi:id="_T632QvhYEeaxkoRKVpmNyQ" name="Call(ToBitString).result()" outgoing="_T632NfhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632Q_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632RPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632RfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@1e1f9de4" incoming="_T63PBPhYEeaxkoRKVpmNyQ" outgoing="_T63PBvhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T632RvhYEeaxkoRKVpmNyQ" target="_T632TPhYEeaxkoRKVpmNyQ" source="_T632XvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T632R_hYEeaxkoRKVpmNyQ" target="_T632UvhYEeaxkoRKVpmNyQ" source="_T632T_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T632SPhYEeaxkoRKVpmNyQ" name="Call(&amp;)">
              <argument xmi:id="_T632SfhYEeaxkoRKVpmNyQ" name="Call(&amp;).argument(b1)" incoming="_T63PA_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632SvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632S_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T632TPhYEeaxkoRKVpmNyQ" name="Call(&amp;).argument(b2)" incoming="_T632RvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632TfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632TvhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T632T_hYEeaxkoRKVpmNyQ" name="Call(&amp;).result()" outgoing="_T632R_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632UPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632UfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-amp"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T632UvhYEeaxkoRKVpmNyQ" name="Fork(h)@620bb4ea" incoming="_T632R_hYEeaxkoRKVpmNyQ" outgoing="_T63PBfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632U_hYEeaxkoRKVpmNyQ" name="RightHandSide@16c5974d">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T632VPhYEeaxkoRKVpmNyQ" target="_T632W_hYEeaxkoRKVpmNyQ" source="_T632VvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T632VfhYEeaxkoRKVpmNyQ" name="Value(255)">
                <result xmi:id="_T632VvhYEeaxkoRKVpmNyQ" name="Value(255).result" outgoing="_T632VPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632V_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632WPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T632WfhYEeaxkoRKVpmNyQ" value="255">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T632WvhYEeaxkoRKVpmNyQ" name="Call(ToBitString)">
                <argument xmi:id="_T632W_hYEeaxkoRKVpmNyQ" name="Call(ToBitString).argument(n)" incoming="_T632VPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632XPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632XfhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <result xmi:id="_T632XvhYEeaxkoRKVpmNyQ" name="Call(ToBitString).result()" outgoing="_T632RvhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632X_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632YPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632YfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@2b80fadc" incoming="_T63PBvhYEeaxkoRKVpmNyQ" outgoing="_T63PCPhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T632YvhYEeaxkoRKVpmNyQ" target="_T632aPhYEeaxkoRKVpmNyQ" source="_T632evhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T632Y_hYEeaxkoRKVpmNyQ" target="_T632bvhYEeaxkoRKVpmNyQ" source="_T632a_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T632ZPhYEeaxkoRKVpmNyQ" name="Call(|)">
              <argument xmi:id="_T632ZfhYEeaxkoRKVpmNyQ" name="Call(|).argument(b1)" incoming="_T63PBfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632ZvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632Z_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T632aPhYEeaxkoRKVpmNyQ" name="Call(|).argument(b2)" incoming="_T632YvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632afhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632avhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T632a_hYEeaxkoRKVpmNyQ" name="Call(|).result()" outgoing="_T632Y_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632bPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632bfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-bar"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T632bvhYEeaxkoRKVpmNyQ" name="Fork(h)@4bc40cb8" incoming="_T632Y_hYEeaxkoRKVpmNyQ" outgoing="_T63PB_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632b_hYEeaxkoRKVpmNyQ" name="RightHandSide@8019a5">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T632cPhYEeaxkoRKVpmNyQ" target="_T632d_hYEeaxkoRKVpmNyQ" source="_T632cvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T632cfhYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T632cvhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T632cPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632c_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632dPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T632dfhYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T632dvhYEeaxkoRKVpmNyQ" name="Call(ToBitString)">
                <argument xmi:id="_T632d_hYEeaxkoRKVpmNyQ" name="Call(ToBitString).argument(n)" incoming="_T632cPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632ePhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632efhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <result xmi:id="_T632evhYEeaxkoRKVpmNyQ" name="Call(ToBitString).result()" outgoing="_T632YvhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632e_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632fPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632ffhYEeaxkoRKVpmNyQ" name="ExpressionStatement@5162ccc9" incoming="_T63PCPhYEeaxkoRKVpmNyQ" outgoing="_T63PCvhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T632fvhYEeaxkoRKVpmNyQ" target="_T632hPhYEeaxkoRKVpmNyQ" source="_T632lvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T632f_hYEeaxkoRKVpmNyQ" target="_T632ivhYEeaxkoRKVpmNyQ" source="_T632h_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T632gPhYEeaxkoRKVpmNyQ" name="Call(^)">
              <argument xmi:id="_T632gfhYEeaxkoRKVpmNyQ" name="Call(^).argument(b1)" incoming="_T63PB_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632gvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632g_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T632hPhYEeaxkoRKVpmNyQ" name="Call(^).argument(b2)" incoming="_T632fvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632hfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632hvhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T632h_hYEeaxkoRKVpmNyQ" name="Call(^).result()" outgoing="_T632f_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632iPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632ifhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-caret"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T632ivhYEeaxkoRKVpmNyQ" name="Fork(h)@472ab5a1" incoming="_T632f_hYEeaxkoRKVpmNyQ" outgoing="_T63PCfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632i_hYEeaxkoRKVpmNyQ" name="RightHandSide@66fa0be5">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T632jPhYEeaxkoRKVpmNyQ" target="_T632k_hYEeaxkoRKVpmNyQ" source="_T632jvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T632jfhYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T632jvhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T632jPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632j_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632kPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T632kfhYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T632kvhYEeaxkoRKVpmNyQ" name="Call(ToBitString)">
                <argument xmi:id="_T632k_hYEeaxkoRKVpmNyQ" name="Call(ToBitString).argument(n)" incoming="_T632jPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632lPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632lfhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <result xmi:id="_T632lvhYEeaxkoRKVpmNyQ" name="Call(ToBitString).result()" outgoing="_T632fvhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632l_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632mPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632mfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@58f252fe" incoming="_T63PCvhYEeaxkoRKVpmNyQ" outgoing="_T63PDPhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T632mvhYEeaxkoRKVpmNyQ" target="_T632oPhYEeaxkoRKVpmNyQ" source="_T632qfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T632m_hYEeaxkoRKVpmNyQ" target="_T632pvhYEeaxkoRKVpmNyQ" source="_T632o_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T632nPhYEeaxkoRKVpmNyQ" name="Call(&lt;&lt;)">
              <argument xmi:id="_T632nfhYEeaxkoRKVpmNyQ" name="Call(&lt;&lt;).argument(x)" incoming="_T63PCfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632nvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632n_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T632oPhYEeaxkoRKVpmNyQ" name="Call(&lt;&lt;).argument(n)" incoming="_T632mvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632ofhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632ovhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T632o_hYEeaxkoRKVpmNyQ" name="Call(&lt;&lt;).result()" outgoing="_T632m_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632pPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632pfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ltlt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T632pvhYEeaxkoRKVpmNyQ" name="Fork(h)@7ef4f2b0" incoming="_T632m_hYEeaxkoRKVpmNyQ" outgoing="_T63PC_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632p_hYEeaxkoRKVpmNyQ" name="RightHandSide@61938fae">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T632qPhYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T632qfhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T632mvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T632qvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T632q_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T632rPhYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T632rfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@6537c17c" incoming="_T63PDPhYEeaxkoRKVpmNyQ" outgoing="_T63PDvhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T632rvhYEeaxkoRKVpmNyQ" target="_T64cxfhYEeaxkoRKVpmNyQ" source="_T64czvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64cwPhYEeaxkoRKVpmNyQ" target="_T64cy_hYEeaxkoRKVpmNyQ" source="_T64cyPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T64cwfhYEeaxkoRKVpmNyQ" name="Call(>>)">
              <argument xmi:id="_T64cwvhYEeaxkoRKVpmNyQ" name="Call(>>).argument(x)" incoming="_T63PC_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64cw_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64cxPhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T64cxfhYEeaxkoRKVpmNyQ" name="Call(>>).argument(n)" incoming="_T632rvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64cxvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64cx_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T64cyPhYEeaxkoRKVpmNyQ" name="Call(>>).result()" outgoing="_T64cwPhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64cyfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64cyvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T64cy_hYEeaxkoRKVpmNyQ" name="Fork(h)@65876774" incoming="_T64cwPhYEeaxkoRKVpmNyQ" outgoing="_T63PDfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64czPhYEeaxkoRKVpmNyQ" name="RightHandSide@11ef3bee">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T64czfhYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T64czvhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T632rvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64cz_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64c0PhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T64c0fhYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64c0vhYEeaxkoRKVpmNyQ" name="ExpressionStatement@40df1311" incoming="_T63PDvhYEeaxkoRKVpmNyQ" outgoing="_T63PD_hYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64c0_hYEeaxkoRKVpmNyQ" target="_T64c2fhYEeaxkoRKVpmNyQ" source="_T64c4vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64c1PhYEeaxkoRKVpmNyQ" target="_T64c3_hYEeaxkoRKVpmNyQ" source="_T64c3PhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T64c1fhYEeaxkoRKVpmNyQ" name="Call(>>>)">
              <argument xmi:id="_T64c1vhYEeaxkoRKVpmNyQ" name="Call(>>>).argument(x)" incoming="_T63PDfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64c1_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64c2PhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T64c2fhYEeaxkoRKVpmNyQ" name="Call(>>>).argument(n)" incoming="_T64c0_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64c2vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64c2_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T64c3PhYEeaxkoRKVpmNyQ" name="Call(>>>).result()" outgoing="_T64c1PhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64c3fhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64c3vhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T64c3_hYEeaxkoRKVpmNyQ" name="Fork(h)@1a7ba443" incoming="_T64c1PhYEeaxkoRKVpmNyQ" outgoing="_T63PHvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64c4PhYEeaxkoRKVpmNyQ" name="RightHandSide@d750a">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T64c4fhYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T64c4vhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T64c0_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64c4_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64c5PhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T64c5fhYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64c5vhYEeaxkoRKVpmNyQ" name="ExpressionStatement@5bdf8295" incoming="_T63PD_hYEeaxkoRKVpmNyQ" outgoing="_T63PEfhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64c5_hYEeaxkoRKVpmNyQ" target="_T64c6PhYEeaxkoRKVpmNyQ" source="_T64c6_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_T64c6PhYEeaxkoRKVpmNyQ" name="Fork(filename)@52d48643" incoming="_T64c5_hYEeaxkoRKVpmNyQ" outgoing="_T63PEPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64c6fhYEeaxkoRKVpmNyQ" name="RightHandSide@269bf0ac">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T64c6vhYEeaxkoRKVpmNyQ" name="Value(&quot;xyz&quot;)">
                <result xmi:id="_T64c6_hYEeaxkoRKVpmNyQ" name="Value(&quot;xyz&quot;).result" outgoing="_T64c5_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64c7PhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64c7fhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_T64c7vhYEeaxkoRKVpmNyQ" value="xyz">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64c7_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@3d426638" incoming="_T63PEfhYEeaxkoRKVpmNyQ" outgoing="_T63PEvhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64c8PhYEeaxkoRKVpmNyQ" target="_T64c9vhYEeaxkoRKVpmNyQ" source="_T64c__hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64c8fhYEeaxkoRKVpmNyQ" target="_T64c_PhYEeaxkoRKVpmNyQ" source="_T64c-fhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T64c8vhYEeaxkoRKVpmNyQ" name="Call(Concat)">
              <argument xmi:id="_T64c8_hYEeaxkoRKVpmNyQ" name="Call(Concat).argument(x)" incoming="_T63PEPhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64c9PhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64c9fhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T64c9vhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(y)" incoming="_T64c8PhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64c9_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64c-PhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T64c-fhYEeaxkoRKVpmNyQ" name="Call(Concat).result(result)" outgoing="_T64c8fhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64c-vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64c-_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T64c_PhYEeaxkoRKVpmNyQ" name="Fork(filename)@16bb8ff5" incoming="_T64c8fhYEeaxkoRKVpmNyQ" outgoing="_T63PH_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64c_fhYEeaxkoRKVpmNyQ" name="RightHandSide@2cbf8f2c">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T64c_vhYEeaxkoRKVpmNyQ" name="Value(&quot;.doc&quot;)">
                <result xmi:id="_T64c__hYEeaxkoRKVpmNyQ" name="Value(&quot;.doc&quot;).result" outgoing="_T64c8PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dAPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dAfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_T64dAvhYEeaxkoRKVpmNyQ" value=".doc">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64dA_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@75084fe4" incoming="_T63PEvhYEeaxkoRKVpmNyQ" outgoing="_T63PFPhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dBPhYEeaxkoRKVpmNyQ" target="_T64dBfhYEeaxkoRKVpmNyQ" source="_T64dCPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_T64dBfhYEeaxkoRKVpmNyQ" name="Fork(a)@4ceb6854" incoming="_T64dBPhYEeaxkoRKVpmNyQ" outgoing="_T63PE_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64dBvhYEeaxkoRKVpmNyQ" name="RightHandSide@59ccdde4">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T64dB_hYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T64dCPhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T64dBPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dCfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dCvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T64dC_hYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64dDPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@614220b8" incoming="_T63PFPhYEeaxkoRKVpmNyQ" outgoing="_T63PFfhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dDfhYEeaxkoRKVpmNyQ" target="_T64dE_hYEeaxkoRKVpmNyQ" source="_T64dHPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dDvhYEeaxkoRKVpmNyQ" target="_T64dGfhYEeaxkoRKVpmNyQ" source="_T64dFvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T64dD_hYEeaxkoRKVpmNyQ" name="Call(+)">
              <argument xmi:id="_T64dEPhYEeaxkoRKVpmNyQ" name="Call(+).argument(x)" incoming="_T63PE_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dEfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dEvhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T64dE_hYEeaxkoRKVpmNyQ" name="Call(+).argument(y)" incoming="_T64dDfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dFPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dFfhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T64dFvhYEeaxkoRKVpmNyQ" name="Call(+).result(result)" outgoing="_T64dDvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dF_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dGPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T64dGfhYEeaxkoRKVpmNyQ" name="Fork(a)@280de5ae" incoming="_T64dDvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64dGvhYEeaxkoRKVpmNyQ" name="RightHandSide@eb87c61">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T64dG_hYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T64dHPhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T64dDfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dHfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dHvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T64dH_hYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64dIPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@3738bd7a" incoming="_T63PFfhYEeaxkoRKVpmNyQ" outgoing="_T63PGPhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dIfhYEeaxkoRKVpmNyQ" target="_T64dIvhYEeaxkoRKVpmNyQ" source="_T64dJfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_T64dIvhYEeaxkoRKVpmNyQ" name="Fork(test::a)@ba1a239" incoming="_T64dIfhYEeaxkoRKVpmNyQ" outgoing="_T63PFvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64dI_hYEeaxkoRKVpmNyQ" name="RightHandSide@31287930">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T64dJPhYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T64dJfhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T64dIfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dJvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dJ_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T64dKPhYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64dKfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@752448d2" incoming="_T63PGPhYEeaxkoRKVpmNyQ" outgoing="_T63PGfhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dKvhYEeaxkoRKVpmNyQ" target="_T64dNfhYEeaxkoRKVpmNyQ" source="_T64dMvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T64dK_hYEeaxkoRKVpmNyQ" name="Call(+)">
              <argument xmi:id="_T64dLPhYEeaxkoRKVpmNyQ" name="Call(+).argument(x)" incoming="_T63PFvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dLfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dLvhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T64dL_hYEeaxkoRKVpmNyQ" name="Call(+).argument(y)" incoming="_T63PF_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dMPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dMfhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T64dMvhYEeaxkoRKVpmNyQ" name="Call(+).result(result)" outgoing="_T64dKvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dM_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dNPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T64dNfhYEeaxkoRKVpmNyQ" name="Fork(test::a)@66e33cea" incoming="_T64dKvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64dNvhYEeaxkoRKVpmNyQ" name="RightHandSide@5b81d35c"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64dN_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@4288c5a8" incoming="_T63PGfhYEeaxkoRKVpmNyQ" outgoing="_T63PG_hYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dOPhYEeaxkoRKVpmNyQ" target="_T64dOfhYEeaxkoRKVpmNyQ" source="_T64dPPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_T64dOfhYEeaxkoRKVpmNyQ" name="Fork(test::a)@7cc880cf" incoming="_T64dOPhYEeaxkoRKVpmNyQ" outgoing="_T63PGvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64dOvhYEeaxkoRKVpmNyQ" name="RightHandSide@5dd02ce0">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T64dO_hYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T64dPPhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T64dOPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dPfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dPvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T64dP_hYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64dQPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@10742c78" incoming="_T63PG_hYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dQfhYEeaxkoRKVpmNyQ" target="_T64dR_hYEeaxkoRKVpmNyQ" source="_T64dUPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dQvhYEeaxkoRKVpmNyQ" target="_T64dTfhYEeaxkoRKVpmNyQ" source="_T64dSvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T64dQ_hYEeaxkoRKVpmNyQ" name="Call(+)">
              <argument xmi:id="_T64dRPhYEeaxkoRKVpmNyQ" name="Call(+).argument(x)" incoming="_T63PGvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dRfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dRvhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <argument xmi:id="_T64dR_hYEeaxkoRKVpmNyQ" name="Call(+).argument(y)" incoming="_T64dQfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dSPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dSfhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T64dSvhYEeaxkoRKVpmNyQ" name="Call(+).result(result)" outgoing="_T64dQvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dS_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dTPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T64dTfhYEeaxkoRKVpmNyQ" name="Fork(test::a)@7a4764bb" incoming="_T64dQvhYEeaxkoRKVpmNyQ" outgoing="_T63PIPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64dTvhYEeaxkoRKVpmNyQ" name="RightHandSide@33cd31cf">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T64dT_hYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T64dUPhYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T64dQfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dUfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dUvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T64dU_hYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_T63O6PhYEeaxkoRKVpmNyQ" name="Output(i)" incoming="_T63O4_hYEeaxkoRKVpmNyQ" parameter="_T63O1PhYEeaxkoRKVpmNyQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_T63O6fhYEeaxkoRKVpmNyQ" name="Output(f)" incoming="_T63O5PhYEeaxkoRKVpmNyQ" parameter="_T63O1_hYEeaxkoRKVpmNyQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_T63O6vhYEeaxkoRKVpmNyQ" name="Output(h)" incoming="_T63O5fhYEeaxkoRKVpmNyQ" parameter="_T63O2vhYEeaxkoRKVpmNyQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_T63O6_hYEeaxkoRKVpmNyQ" name="Output(filename)" incoming="_T63O5vhYEeaxkoRKVpmNyQ" parameter="_T63O3fhYEeaxkoRKVpmNyQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_T63O7PhYEeaxkoRKVpmNyQ" name="Output(a)" incoming="_T63O5_hYEeaxkoRKVpmNyQ" parameter="_T63O4PhYEeaxkoRKVpmNyQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_T64dVPhYEeaxkoRKVpmNyQ" name="destroy$method$1" specification="_T65D-PhYEeaxkoRKVpmNyQ" node="_T64dVfhYEeaxkoRKVpmNyQ" group="_T64dVfhYEeaxkoRKVpmNyQ">
        <structuredNode xmi:id="_T64dVfhYEeaxkoRKVpmNyQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_T64dVvhYEeaxkoRKVpmNyQ" name="Expressions_Assignment$initialization$1" specification="_T65D3PhYEeaxkoRKVpmNyQ" node="_T64dV_hYEeaxkoRKVpmNyQ" group="_T64dV_hYEeaxkoRKVpmNyQ">
        <structuredNode xmi:id="_T64dV_hYEeaxkoRKVpmNyQ" name="Body(Expressions_Assignment$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dWPhYEeaxkoRKVpmNyQ" target="_T64dZ_hYEeaxkoRKVpmNyQ" source="_T64dZPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dWfhYEeaxkoRKVpmNyQ" target="_T64da_hYEeaxkoRKVpmNyQ" source="_T64dZ_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dWvhYEeaxkoRKVpmNyQ" target="_T64ddvhYEeaxkoRKVpmNyQ" source="_T64dZ_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dW_hYEeaxkoRKVpmNyQ" target="_T64dgPhYEeaxkoRKVpmNyQ" source="_T64dZ_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dXPhYEeaxkoRKVpmNyQ" target="_T64dh_hYEeaxkoRKVpmNyQ" source="_T64dg_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dXfhYEeaxkoRKVpmNyQ" target="_T65D0fhYEeaxkoRKVpmNyQ" source="_T64divhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dXvhYEeaxkoRKVpmNyQ" target="_T65D1_hYEeaxkoRKVpmNyQ" source="_T64djvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T64dX_hYEeaxkoRKVpmNyQ" target="_T65D2_hYEeaxkoRKVpmNyQ" source="_T65D2vhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T64dYPhYEeaxkoRKVpmNyQ" target="_T65D2_hYEeaxkoRKVpmNyQ" source="_T65D1PhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T64dYfhYEeaxkoRKVpmNyQ" target="_T64daPhYEeaxkoRKVpmNyQ" source="_T65D2_hYEeaxkoRKVpmNyQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_T64dYvhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_T64dY_hYEeaxkoRKVpmNyQ" name="ReadSelf">
            <result xmi:id="_T64dZPhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_T64dWPhYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dZfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dZvhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_T64dZ_hYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_T64dWPhYEeaxkoRKVpmNyQ" outgoing="_T64dWfhYEeaxkoRKVpmNyQ _T64dWvhYEeaxkoRKVpmNyQ _T64dW_hYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64daPhYEeaxkoRKVpmNyQ" name="Initialization" incoming="_T64dYfhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ControlFlow" xmi:id="_T64dafhYEeaxkoRKVpmNyQ" target="_T64dbvhYEeaxkoRKVpmNyQ" source="_T64davhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_T64davhYEeaxkoRKVpmNyQ" name="Call(Test$initialization$1)" outgoing="_T64dafhYEeaxkoRKVpmNyQ" operation="_T65E6PhYEeaxkoRKVpmNyQ">
              <target xmi:id="_T64da_hYEeaxkoRKVpmNyQ" name="Call(Test$initialization$1).target" incoming="_T64dWfhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dbPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dbfhYEeaxkoRKVpmNyQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T64dbvhYEeaxkoRKVpmNyQ" name="Set(initializationFlag)" incoming="_T64dafhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T64db_hYEeaxkoRKVpmNyQ" target="_T64dfPhYEeaxkoRKVpmNyQ" source="_T64dcfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T64dcPhYEeaxkoRKVpmNyQ" name="Value(true)">
                <result xmi:id="_T64dcfhYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_T64db_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dcvhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dc_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_T64ddPhYEeaxkoRKVpmNyQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_T64ddfhYEeaxkoRKVpmNyQ" name="Write(Expressions_Assignment$initializationFlag$1)" structuralFeature="_T60yaPhYEeaxkoRKVpmNyQ" isReplaceAll="true">
                <object xmi:id="_T64ddvhYEeaxkoRKVpmNyQ" name="Write(Expressions_Assignment$initializationFlag$1).object" incoming="_T64dWvhYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dd_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dePhYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_T64defhYEeaxkoRKVpmNyQ" name="Write(Expressions_Assignment$initializationFlag$1).result" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64devhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64de_hYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:id="_T64dfPhYEeaxkoRKVpmNyQ" name="Write(Expressions_Assignment$initializationFlag$1).value" incoming="_T64db_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dffhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dfvhYEeaxkoRKVpmNyQ" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_T64df_hYEeaxkoRKVpmNyQ" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_T60yaPhYEeaxkoRKVpmNyQ">
            <object xmi:id="_T64dgPhYEeaxkoRKVpmNyQ" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_T64dW_hYEeaxkoRKVpmNyQ" type="_T60yYfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dgfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dgvhYEeaxkoRKVpmNyQ" value="1"/>
            </object>
            <result xmi:id="_T64dg_hYEeaxkoRKVpmNyQ" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_T64dXPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dhPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dhfhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_T64dhvhYEeaxkoRKVpmNyQ" name="Call(ListSize)">
            <argument xmi:id="_T64dh_hYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_T64dXPhYEeaxkoRKVpmNyQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64diPhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64difhYEeaxkoRKVpmNyQ" value="*"/>
            </argument>
            <result xmi:id="_T64divhYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_T64dXfhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64di_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64djPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T64djfhYEeaxkoRKVpmNyQ" name="Value(0)">
            <result xmi:id="_T64djvhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_T64dXvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T64dj_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T64dkPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_T64dkfhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_T65D0PhYEeaxkoRKVpmNyQ" name="Test(Size==0)">
            <first xmi:id="_T65D0fhYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_T64dXfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65D0vhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65D0_hYEeaxkoRKVpmNyQ" value="1"/>
            </first>
            <result xmi:id="_T65D1PhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_T64dYPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65D1fhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65D1vhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <second xmi:id="_T65D1_hYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_T64dXvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65D2PhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65D2fhYEeaxkoRKVpmNyQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_T65D2vhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_T64dX_hYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_T65D2_hYEeaxkoRKVpmNyQ" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" incoming="_T64dX_hYEeaxkoRKVpmNyQ _T64dYPhYEeaxkoRKVpmNyQ" outgoing="_T64dYfhYEeaxkoRKVpmNyQ" decisionInputFlow="_T64dYPhYEeaxkoRKVpmNyQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_T65D3PhYEeaxkoRKVpmNyQ" name="Expressions_Assignment$initialization$1" visibility="protected" method="_T64dVvhYEeaxkoRKVpmNyQ"/>
      <ownedOperation xmi:id="_T65D3fhYEeaxkoRKVpmNyQ" name="run" visibility="public" method="_T60ya_hYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_T65D3vhYEeaxkoRKVpmNyQ" name="tester" visibility="package" type="_T65E8vhYEeaxkoRKVpmNyQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65D3_hYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65D4PhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_T65D4fhYEeaxkoRKVpmNyQ" name="" visibility="package" type="_T60yYfhYEeaxkoRKVpmNyQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65D4vhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65D4_hYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_T65D5PhYEeaxkoRKVpmNyQ" name="Expressions_Assignment" visibility="public" method="_T63OqPhYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_T65D5fhYEeaxkoRKVpmNyQ" name="" visibility="package" type="_T60yYfhYEeaxkoRKVpmNyQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65D5vhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65D5_hYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_T65D6PhYEeaxkoRKVpmNyQ" name="test" visibility="public" method="_T63O0_hYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_T65D6fhYEeaxkoRKVpmNyQ" name="i" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65D6vhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65D6_hYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_T65D7PhYEeaxkoRKVpmNyQ" name="f" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65D7fhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65D7vhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_T65D7_hYEeaxkoRKVpmNyQ" name="h" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65D8PhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65D8fhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_T65D8vhYEeaxkoRKVpmNyQ" name="filename" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65D8_hYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65D9PhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_T65D9fhYEeaxkoRKVpmNyQ" name="a" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65D9vhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65D9_hYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_T65D-PhYEeaxkoRKVpmNyQ" name="destroy" visibility="public" method="_T64dVPhYEeaxkoRKVpmNyQ" redefinedOperation="_T65E6fhYEeaxkoRKVpmNyQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_T65D-fhYEeaxkoRKVpmNyQ" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_T65D-vhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_T65D-_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_T65D_PhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_T65D_fhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_T65D_vhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_T65D__hYEeaxkoRKVpmNyQ" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EAPhYEeaxkoRKVpmNyQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EAfhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_T65EAvhYEeaxkoRKVpmNyQ" name="tester" visibility="private" type="_T65E8vhYEeaxkoRKVpmNyQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EA_hYEeaxkoRKVpmNyQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EBPhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_T65EBfhYEeaxkoRKVpmNyQ" name="destroy$method$1" specification="_T65E6fhYEeaxkoRKVpmNyQ" node="_T65EBvhYEeaxkoRKVpmNyQ" group="_T65EBvhYEeaxkoRKVpmNyQ">
        <structuredNode xmi:id="_T65EBvhYEeaxkoRKVpmNyQ" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_T65EB_hYEeaxkoRKVpmNyQ" name="done$method$1" specification="_T65E6vhYEeaxkoRKVpmNyQ" node="_T65ECPhYEeaxkoRKVpmNyQ" group="_T65ECPhYEeaxkoRKVpmNyQ">
        <structuredNode xmi:id="_T65ECPhYEeaxkoRKVpmNyQ" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_T65ECfhYEeaxkoRKVpmNyQ" target="_T65EGvhYEeaxkoRKVpmNyQ" source="_T65ECvhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65ECvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@3519f35" outgoing="_T65ECfhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EC_hYEeaxkoRKVpmNyQ" target="_T65EDvhYEeaxkoRKVpmNyQ" source="_T65EFvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T65EDPhYEeaxkoRKVpmNyQ" target="_T65EDfhYEeaxkoRKVpmNyQ" source="_T65EFPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T65EDfhYEeaxkoRKVpmNyQ" name="Call(WriteLine)" incoming="_T65EDPhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_T65EDvhYEeaxkoRKVpmNyQ" name="Call(WriteLine).argument(value)" incoming="_T65EC_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65ED_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EEPhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T65EEfhYEeaxkoRKVpmNyQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EEvhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EE_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65EFPhYEeaxkoRKVpmNyQ" name="Tuple@9aa9e4a" outgoing="_T65EDPhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T65EFfhYEeaxkoRKVpmNyQ" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_T65EFvhYEeaxkoRKVpmNyQ" name="Value(&quot;Done.&quot;).result" outgoing="_T65EC_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EF_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EGPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_T65EGfhYEeaxkoRKVpmNyQ" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65EGvhYEeaxkoRKVpmNyQ" name="ExpressionStatement@4237d6e4" incoming="_T65ECfhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EG_hYEeaxkoRKVpmNyQ" target="_T65EI_hYEeaxkoRKVpmNyQ" source="_T65EL_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T65EHPhYEeaxkoRKVpmNyQ" target="_T65EHfhYEeaxkoRKVpmNyQ" source="_T65EJPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_T65EHfhYEeaxkoRKVpmNyQ" name="Collect(SendSignal(Continue))" incoming="_T65EHPhYEeaxkoRKVpmNyQ" mode="parallel" inputElement="_T65EI_hYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EHvhYEeaxkoRKVpmNyQ" target="_T65EIPhYEeaxkoRKVpmNyQ" source="_T65EI_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_T65EH_hYEeaxkoRKVpmNyQ" name="SendSignal(Continue)" signal="_T65rXfhYEeaxkoRKVpmNyQ">
                <target xmi:id="_T65EIPhYEeaxkoRKVpmNyQ" name="SendSignal(Continue).target" incoming="_T65EHvhYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EIfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EIvhYEeaxkoRKVpmNyQ" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_T65EI_hYEeaxkoRKVpmNyQ" name="Collect(SendSignal(Continue)).inputElement" incoming="_T65EG_hYEeaxkoRKVpmNyQ" outgoing="_T65EHvhYEeaxkoRKVpmNyQ" regionAsInput="_T65EHfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65EJPhYEeaxkoRKVpmNyQ" name="Feature(Read(tester).result)" outgoing="_T65EHPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EJfhYEeaxkoRKVpmNyQ" target="_T65EMvhYEeaxkoRKVpmNyQ" source="_T65EKPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EJvhYEeaxkoRKVpmNyQ" target="_T65ELPhYEeaxkoRKVpmNyQ" source="_T65EMvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_T65EJ_hYEeaxkoRKVpmNyQ" name="ReadSelf">
                <result xmi:id="_T65EKPhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_T65EJfhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EKfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EKvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_T65EK_hYEeaxkoRKVpmNyQ" name="Read(tester)" structuralFeature="_T65EAvhYEeaxkoRKVpmNyQ">
                <object xmi:id="_T65ELPhYEeaxkoRKVpmNyQ" name="Read(tester).object" incoming="_T65EJvhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65ELfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65ELvhYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_T65EL_hYEeaxkoRKVpmNyQ" name="Read(tester).result" outgoing="_T65EG_hYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EMPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EMfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_T65EMvhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_T65EJfhYEeaxkoRKVpmNyQ" outgoing="_T65EJvhYEeaxkoRKVpmNyQ"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_T65EM_hYEeaxkoRKVpmNyQ" name="Test$method$1" specification="_T65E6_hYEeaxkoRKVpmNyQ" node="_T65EP_hYEeaxkoRKVpmNyQ _T65EQvhYEeaxkoRKVpmNyQ _T65EQPhYEeaxkoRKVpmNyQ _T65ESPhYEeaxkoRKVpmNyQ _T65EQfhYEeaxkoRKVpmNyQ" group="_T65EQvhYEeaxkoRKVpmNyQ _T65ESPhYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_T65ENPhYEeaxkoRKVpmNyQ" name="tester" type="_T65E8vhYEeaxkoRKVpmNyQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65ENfhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65ENvhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_T65EN_hYEeaxkoRKVpmNyQ" name="" type="_T65D-fhYEeaxkoRKVpmNyQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EOPhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EOfhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EOvhYEeaxkoRKVpmNyQ" target="_T65ERPhYEeaxkoRKVpmNyQ" source="_T65EP_hYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EO_hYEeaxkoRKVpmNyQ" target="_T65EZvhYEeaxkoRKVpmNyQ" source="_T65ER_hYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EPPhYEeaxkoRKVpmNyQ" target="_T65EQPhYEeaxkoRKVpmNyQ" source="_T65EgvhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_T65EPfhYEeaxkoRKVpmNyQ" target="_T65EQfhYEeaxkoRKVpmNyQ" source="_T65EQvhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_T65EPvhYEeaxkoRKVpmNyQ" target="_T65ESPhYEeaxkoRKVpmNyQ" source="_T65EQfhYEeaxkoRKVpmNyQ"/>
        <structuredNode xmi:id="_T65EQvhYEeaxkoRKVpmNyQ" name="Node(Input(tester))" outgoing="_T65EPfhYEeaxkoRKVpmNyQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EQ_hYEeaxkoRKVpmNyQ" target="_T65ER_hYEeaxkoRKVpmNyQ" source="_T65ERPhYEeaxkoRKVpmNyQ"/>
          <structuredNodeInput xmi:id="_T65ERPhYEeaxkoRKVpmNyQ" name="Input(tester)" incoming="_T65EOvhYEeaxkoRKVpmNyQ" outgoing="_T65EQ_hYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65ERfhYEeaxkoRKVpmNyQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65ERvhYEeaxkoRKVpmNyQ" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_T65ER_hYEeaxkoRKVpmNyQ" name="Fork(tester)" incoming="_T65EQ_hYEeaxkoRKVpmNyQ" outgoing="_T65EO_hYEeaxkoRKVpmNyQ"/>
        </structuredNode>
        <structuredNode xmi:id="_T65ESPhYEeaxkoRKVpmNyQ" name="Body(Test$method$1)" incoming="_T65EPvhYEeaxkoRKVpmNyQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65ESfhYEeaxkoRKVpmNyQ" target="_T65EgvhYEeaxkoRKVpmNyQ" source="_T65Ef_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65ESvhYEeaxkoRKVpmNyQ" target="_T65EhPhYEeaxkoRKVpmNyQ" source="_T65EgvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T65ES_hYEeaxkoRKVpmNyQ" target="_T65EVPhYEeaxkoRKVpmNyQ" source="_T65Eg_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65ETPhYEeaxkoRKVpmNyQ" target="_T65EiPhYEeaxkoRKVpmNyQ" source="_T65EgvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65ETfhYEeaxkoRKVpmNyQ" target="_T65Ej_hYEeaxkoRKVpmNyQ" source="_T65Ei_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65ETvhYEeaxkoRKVpmNyQ" target="_T65Em_hYEeaxkoRKVpmNyQ" source="_T65EkvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65ET_hYEeaxkoRKVpmNyQ" target="_T65EofhYEeaxkoRKVpmNyQ" source="_T65ElvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T65EUPhYEeaxkoRKVpmNyQ" target="_T65EpfhYEeaxkoRKVpmNyQ" source="_T65EpPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EUfhYEeaxkoRKVpmNyQ" target="_T65EpfhYEeaxkoRKVpmNyQ" source="_T65EnvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T65EUvhYEeaxkoRKVpmNyQ" target="_T65Eg_hYEeaxkoRKVpmNyQ" source="_T65EpfhYEeaxkoRKVpmNyQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_T65EU_hYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65EVPhYEeaxkoRKVpmNyQ" name="Body" incoming="_T65ES_hYEeaxkoRKVpmNyQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65EVfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@7650e219">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EVvhYEeaxkoRKVpmNyQ" target="_T65EYPhYEeaxkoRKVpmNyQ" source="_T65EXPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EV_hYEeaxkoRKVpmNyQ" target="_T65EafhYEeaxkoRKVpmNyQ" source="_T65EZvhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EWPhYEeaxkoRKVpmNyQ" target="_T65Eb_hYEeaxkoRKVpmNyQ" source="_T65EY_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_T65EWfhYEeaxkoRKVpmNyQ" target="_T65EWvhYEeaxkoRKVpmNyQ" source="_T65EffhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65EWvhYEeaxkoRKVpmNyQ" name="Expression(LeftHandSide@5ce1ed2f)" incoming="_T65EWfhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_T65EW_hYEeaxkoRKVpmNyQ" name="ReadSelf">
                  <result xmi:id="_T65EXPhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_T65EVvhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EXfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EXvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_T65EX_hYEeaxkoRKVpmNyQ" name="Clear(tester)" structuralFeature="_T65EAvhYEeaxkoRKVpmNyQ">
                <object xmi:id="_T65EYPhYEeaxkoRKVpmNyQ" name="Clear(tester).object" incoming="_T65EVvhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EYfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EYvhYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_T65EY_hYEeaxkoRKVpmNyQ" name="Clear(tester).result" outgoing="_T65EWPhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EZPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EZfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_T65EZvhYEeaxkoRKVpmNyQ" name="Fork(LeftHandSide@5ce1ed2f)" incoming="_T65EO_hYEeaxkoRKVpmNyQ" outgoing="_T65EV_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65EZ_hYEeaxkoRKVpmNyQ" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EaPhYEeaxkoRKVpmNyQ" target="_T65EfPhYEeaxkoRKVpmNyQ" source="_T65EafhYEeaxkoRKVpmNyQ"/>
                <structuredNodeInput xmi:id="_T65EafhYEeaxkoRKVpmNyQ" name="WriteAll(Test::tester).input(Test::tester)" incoming="_T65EV_hYEeaxkoRKVpmNyQ" outgoing="_T65EaPhYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EavhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65Ea_hYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_T65EbPhYEeaxkoRKVpmNyQ" name="Iterate(Write(tester))" inputElement="_T65EfPhYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EbfhYEeaxkoRKVpmNyQ" target="_T65EefhYEeaxkoRKVpmNyQ" source="_T65EfPhYEeaxkoRKVpmNyQ"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EbvhYEeaxkoRKVpmNyQ" target="_T65Ec_hYEeaxkoRKVpmNyQ" source="_T65Eb_hYEeaxkoRKVpmNyQ"/>
                  <structuredNodeInput xmi:id="_T65Eb_hYEeaxkoRKVpmNyQ" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_T65EWPhYEeaxkoRKVpmNyQ" outgoing="_T65EbvhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EcPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EcfhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_T65EcvhYEeaxkoRKVpmNyQ" name="Write(tester)" structuralFeature="_T65EAvhYEeaxkoRKVpmNyQ">
                    <object xmi:id="_T65Ec_hYEeaxkoRKVpmNyQ" name="Write(tester).object" incoming="_T65EbvhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EdPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EdfhYEeaxkoRKVpmNyQ" value="1"/>
                    </object>
                    <result xmi:id="_T65EdvhYEeaxkoRKVpmNyQ" name="Write(tester).result" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65Ed_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EePhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:id="_T65EefhYEeaxkoRKVpmNyQ" name="Write(tester).value" incoming="_T65EbfhYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EevhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65Ee_hYEeaxkoRKVpmNyQ" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_T65EfPhYEeaxkoRKVpmNyQ" name="Iterate(Write(tester)).inputElement" incoming="_T65EaPhYEeaxkoRKVpmNyQ" outgoing="_T65EbfhYEeaxkoRKVpmNyQ" regionAsInput="_T65EbPhYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65EffhYEeaxkoRKVpmNyQ" name="RightHandSide@3a66fb8f" outgoing="_T65EWfhYEeaxkoRKVpmNyQ"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_T65EfvhYEeaxkoRKVpmNyQ" name="ReadSelf">
            <result xmi:id="_T65Ef_hYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_T65ESfhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EgPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EgfhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_T65EgvhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_T65ESfhYEeaxkoRKVpmNyQ" outgoing="_T65EPPhYEeaxkoRKVpmNyQ _T65ESvhYEeaxkoRKVpmNyQ _T65ETPhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_T65Eg_hYEeaxkoRKVpmNyQ" name="Call(Test$initialization$1)" incoming="_T65EUvhYEeaxkoRKVpmNyQ" outgoing="_T65ES_hYEeaxkoRKVpmNyQ" operation="_T65E6PhYEeaxkoRKVpmNyQ">
            <target xmi:id="_T65EhPhYEeaxkoRKVpmNyQ" name="Call(Test$initialization$1).target" incoming="_T65ESvhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EhfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EhvhYEeaxkoRKVpmNyQ" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_T65Eh_hYEeaxkoRKVpmNyQ" name="Read(Test$initializationFlag$1)" structuralFeature="_T65D__hYEeaxkoRKVpmNyQ">
            <object xmi:id="_T65EiPhYEeaxkoRKVpmNyQ" name="Read(Test$initializationFlag$1).object" incoming="_T65ETPhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EifhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EivhYEeaxkoRKVpmNyQ" value="1"/>
            </object>
            <result xmi:id="_T65Ei_hYEeaxkoRKVpmNyQ" name="Read(Test$initializationFlag$1).result" outgoing="_T65ETfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EjPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EjfhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_T65EjvhYEeaxkoRKVpmNyQ" name="Call(ListSize)">
            <argument xmi:id="_T65Ej_hYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_T65ETfhYEeaxkoRKVpmNyQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EkPhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EkfhYEeaxkoRKVpmNyQ" value="*"/>
            </argument>
            <result xmi:id="_T65EkvhYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_T65ETvhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65Ek_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65ElPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T65ElfhYEeaxkoRKVpmNyQ" name="Value(0)">
            <result xmi:id="_T65ElvhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_T65ET_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65El_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EmPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_T65EmfhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_T65EmvhYEeaxkoRKVpmNyQ" name="Test(Size==0)">
            <first xmi:id="_T65Em_hYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_T65ETvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EnPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EnfhYEeaxkoRKVpmNyQ" value="1"/>
            </first>
            <result xmi:id="_T65EnvhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_T65EUfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65En_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EoPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <second xmi:id="_T65EofhYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_T65ET_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EovhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65Eo_hYEeaxkoRKVpmNyQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_T65EpPhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_T65EUPhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_T65EpfhYEeaxkoRKVpmNyQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_T65EUPhYEeaxkoRKVpmNyQ _T65EUfhYEeaxkoRKVpmNyQ" outgoing="_T65EUvhYEeaxkoRKVpmNyQ" decisionInputFlow="_T65EUfhYEeaxkoRKVpmNyQ"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_T65EP_hYEeaxkoRKVpmNyQ" name="Input(tester)" outgoing="_T65EOvhYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" parameter="_T65ENPhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_T65EQPhYEeaxkoRKVpmNyQ" name="Return" incoming="_T65EPPhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" parameter="_T65EN_hYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:JoinNode" xmi:id="_T65EQfhYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_T65EPfhYEeaxkoRKVpmNyQ" outgoing="_T65EPvhYEeaxkoRKVpmNyQ"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_T65EpvhYEeaxkoRKVpmNyQ" name="Test$initialization$1" specification="_T65E6PhYEeaxkoRKVpmNyQ" node="_T65Ep_hYEeaxkoRKVpmNyQ" group="_T65Ep_hYEeaxkoRKVpmNyQ">
        <structuredNode xmi:id="_T65Ep_hYEeaxkoRKVpmNyQ" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EqPhYEeaxkoRKVpmNyQ" target="_T65EtvhYEeaxkoRKVpmNyQ" source="_T65Es_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EqfhYEeaxkoRKVpmNyQ" target="_T65EwPhYEeaxkoRKVpmNyQ" source="_T65EtvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EqvhYEeaxkoRKVpmNyQ" target="_T65EyvhYEeaxkoRKVpmNyQ" source="_T65EtvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65Eq_hYEeaxkoRKVpmNyQ" target="_T65E0fhYEeaxkoRKVpmNyQ" source="_T65EzfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65ErPhYEeaxkoRKVpmNyQ" target="_T65E3fhYEeaxkoRKVpmNyQ" source="_T65E1PhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65ErfhYEeaxkoRKVpmNyQ" target="_T65E4_hYEeaxkoRKVpmNyQ" source="_T65E2PhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T65ErvhYEeaxkoRKVpmNyQ" target="_T65E5_hYEeaxkoRKVpmNyQ" source="_T65E5vhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65Er_hYEeaxkoRKVpmNyQ" target="_T65E5_hYEeaxkoRKVpmNyQ" source="_T65E4PhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T65EsPhYEeaxkoRKVpmNyQ" target="_T65Et_hYEeaxkoRKVpmNyQ" source="_T65E5_hYEeaxkoRKVpmNyQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_T65EsfhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_T65EsvhYEeaxkoRKVpmNyQ" name="ReadSelf">
            <result xmi:id="_T65Es_hYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_T65EqPhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EtPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EtfhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_T65EtvhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_T65EqPhYEeaxkoRKVpmNyQ" outgoing="_T65EqfhYEeaxkoRKVpmNyQ _T65EqvhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65Et_hYEeaxkoRKVpmNyQ" name="Initialization" incoming="_T65EsPhYEeaxkoRKVpmNyQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65EuPhYEeaxkoRKVpmNyQ" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T65EufhYEeaxkoRKVpmNyQ" target="_T65ExvhYEeaxkoRKVpmNyQ" source="_T65Eu_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T65EuvhYEeaxkoRKVpmNyQ" name="Value(true)">
                <result xmi:id="_T65Eu_hYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_T65EufhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EvPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EvfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_T65EvvhYEeaxkoRKVpmNyQ" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_T65Ev_hYEeaxkoRKVpmNyQ" name="Write(Test$initializationFlag$1)" structuralFeature="_T65D__hYEeaxkoRKVpmNyQ" isReplaceAll="true">
                <object xmi:id="_T65EwPhYEeaxkoRKVpmNyQ" name="Write(Test$initializationFlag$1).object" incoming="_T65EqfhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EwfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EwvhYEeaxkoRKVpmNyQ" value="1"/>
                </object>
                <result xmi:id="_T65Ew_hYEeaxkoRKVpmNyQ" name="Write(Test$initializationFlag$1).result" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65ExPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65ExfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:id="_T65ExvhYEeaxkoRKVpmNyQ" name="Write(Test$initializationFlag$1).value" incoming="_T65EufhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65Ex_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EyPhYEeaxkoRKVpmNyQ" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_T65EyfhYEeaxkoRKVpmNyQ" name="Read(Test$initializationFlag$1)" structuralFeature="_T65D__hYEeaxkoRKVpmNyQ">
            <object xmi:id="_T65EyvhYEeaxkoRKVpmNyQ" name="Read(Test$initializationFlag$1).object" incoming="_T65EqvhYEeaxkoRKVpmNyQ" type="_T65D-fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65Ey_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65EzPhYEeaxkoRKVpmNyQ" value="1"/>
            </object>
            <result xmi:id="_T65EzfhYEeaxkoRKVpmNyQ" name="Read(Test$initializationFlag$1).result" outgoing="_T65Eq_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65EzvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65Ez_hYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_T65E0PhYEeaxkoRKVpmNyQ" name="Call(ListSize)">
            <argument xmi:id="_T65E0fhYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_T65Eq_hYEeaxkoRKVpmNyQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65E0vhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65E0_hYEeaxkoRKVpmNyQ" value="*"/>
            </argument>
            <result xmi:id="_T65E1PhYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_T65ErPhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65E1fhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65E1vhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T65E1_hYEeaxkoRKVpmNyQ" name="Value(0)">
            <result xmi:id="_T65E2PhYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_T65ErfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65E2fhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65E2vhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_T65E2_hYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_T65E3PhYEeaxkoRKVpmNyQ" name="Test(Size==0)">
            <first xmi:id="_T65E3fhYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_T65ErPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65E3vhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65E3_hYEeaxkoRKVpmNyQ" value="1"/>
            </first>
            <result xmi:id="_T65E4PhYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_T65Er_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65E4fhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65E4vhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <second xmi:id="_T65E4_hYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_T65ErfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65E5PhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65E5fhYEeaxkoRKVpmNyQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_T65E5vhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_T65ErvhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_T65E5_hYEeaxkoRKVpmNyQ" name="Decision(Test(Test$initializationFlag$1))" incoming="_T65ErvhYEeaxkoRKVpmNyQ _T65Er_hYEeaxkoRKVpmNyQ" outgoing="_T65EsPhYEeaxkoRKVpmNyQ" decisionInputFlow="_T65Er_hYEeaxkoRKVpmNyQ"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_T65E6PhYEeaxkoRKVpmNyQ" name="Test$initialization$1" visibility="protected" method="_T65EpvhYEeaxkoRKVpmNyQ"/>
      <ownedOperation xmi:id="_T65E6fhYEeaxkoRKVpmNyQ" name="destroy" visibility="public" method="_T65EBfhYEeaxkoRKVpmNyQ"/>
      <ownedOperation xmi:id="_T65E6vhYEeaxkoRKVpmNyQ" name="done" visibility="public" method="_T65EB_hYEeaxkoRKVpmNyQ"/>
      <ownedOperation xmi:id="_T65E6_hYEeaxkoRKVpmNyQ" name="Test" visibility="protected" method="_T65EM_hYEeaxkoRKVpmNyQ">
        <ownedParameter xmi:id="_T65E7PhYEeaxkoRKVpmNyQ" name="tester" visibility="package" type="_T65E8vhYEeaxkoRKVpmNyQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65E7fhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65E7vhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_T65E7_hYEeaxkoRKVpmNyQ" name="" visibility="package" type="_T65D-fhYEeaxkoRKVpmNyQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65E8PhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65E8fhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_T65E8vhYEeaxkoRKVpmNyQ" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_T65E8_hYEeaxkoRKVpmNyQ" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65E9PhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65E9fhYEeaxkoRKVpmNyQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_T65E9vhYEeaxkoRKVpmNyQ" name="Tester$method$1" specification="_T65rWPhYEeaxkoRKVpmNyQ" node="_T65E-_hYEeaxkoRKVpmNyQ _T65E_PhYEeaxkoRKVpmNyQ" group="_T65E_PhYEeaxkoRKVpmNyQ">
          <ownedParameter xmi:id="_T65E9_hYEeaxkoRKVpmNyQ" name="" type="_T65E8vhYEeaxkoRKVpmNyQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65E-PhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65E-fhYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65E-vhYEeaxkoRKVpmNyQ" target="_T65E-_hYEeaxkoRKVpmNyQ" source="_T65q7_hYEeaxkoRKVpmNyQ"/>
          <structuredNode xmi:id="_T65E_PhYEeaxkoRKVpmNyQ" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65E_fhYEeaxkoRKVpmNyQ" target="_T65q7_hYEeaxkoRKVpmNyQ" source="_T65q7PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65q4PhYEeaxkoRKVpmNyQ" target="_T65q8fhYEeaxkoRKVpmNyQ" source="_T65q7_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T65q4fhYEeaxkoRKVpmNyQ" target="_T65q6vhYEeaxkoRKVpmNyQ" source="_T65q8PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65q4vhYEeaxkoRKVpmNyQ" target="_T65q9fhYEeaxkoRKVpmNyQ" source="_T65q7_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65q4_hYEeaxkoRKVpmNyQ" target="_T65q_PhYEeaxkoRKVpmNyQ" source="_T65q-PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65q5PhYEeaxkoRKVpmNyQ" target="_T65rCPhYEeaxkoRKVpmNyQ" source="_T65q__hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65q5fhYEeaxkoRKVpmNyQ" target="_T65rDvhYEeaxkoRKVpmNyQ" source="_T65rA_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T65q5vhYEeaxkoRKVpmNyQ" target="_T65rEvhYEeaxkoRKVpmNyQ" source="_T65rEfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65q5_hYEeaxkoRKVpmNyQ" target="_T65rEvhYEeaxkoRKVpmNyQ" source="_T65rC_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T65q6PhYEeaxkoRKVpmNyQ" target="_T65q8PhYEeaxkoRKVpmNyQ" source="_T65rEvhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_T65q6fhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65q6vhYEeaxkoRKVpmNyQ" name="Body" incoming="_T65q4fhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_T65q6_hYEeaxkoRKVpmNyQ" name="ReadSelf">
              <result xmi:id="_T65q7PhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_T65E_fhYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65q7fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65q7vhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T65q7_hYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_T65E_fhYEeaxkoRKVpmNyQ" outgoing="_T65E-vhYEeaxkoRKVpmNyQ _T65q4PhYEeaxkoRKVpmNyQ _T65q4vhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_T65q8PhYEeaxkoRKVpmNyQ" name="Call(Tester$initialization$1)" incoming="_T65q6PhYEeaxkoRKVpmNyQ" outgoing="_T65q4fhYEeaxkoRKVpmNyQ" operation="_T65rV_hYEeaxkoRKVpmNyQ">
              <target xmi:id="_T65q8fhYEeaxkoRKVpmNyQ" name="Call(Tester$initialization$1).target" incoming="_T65q4PhYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65q8vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65q8_hYEeaxkoRKVpmNyQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_T65q9PhYEeaxkoRKVpmNyQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_T65E8_hYEeaxkoRKVpmNyQ">
              <object xmi:id="_T65q9fhYEeaxkoRKVpmNyQ" name="Read(Tester$initializationFlag$1).object" incoming="_T65q4vhYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65q9vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65q9_hYEeaxkoRKVpmNyQ" value="1"/>
              </object>
              <result xmi:id="_T65q-PhYEeaxkoRKVpmNyQ" name="Read(Tester$initializationFlag$1).result" outgoing="_T65q4_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65q-fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65q-vhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T65q-_hYEeaxkoRKVpmNyQ" name="Call(ListSize)">
              <argument xmi:id="_T65q_PhYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_T65q4_hYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65q_fhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65q_vhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_T65q__hYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_T65q5PhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rAPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rAfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T65rAvhYEeaxkoRKVpmNyQ" name="Value(0)">
              <result xmi:id="_T65rA_hYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_T65q5fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rBPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rBfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_T65rBvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_T65rB_hYEeaxkoRKVpmNyQ" name="Test(Size==0)">
              <first xmi:id="_T65rCPhYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_T65q5PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rCfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rCvhYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_T65rC_hYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_T65q5_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rDPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rDfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_T65rDvhYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_T65q5fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rD_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rEPhYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_T65rEfhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_T65q5vhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_T65rEvhYEeaxkoRKVpmNyQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_T65q5vhYEeaxkoRKVpmNyQ _T65q5_hYEeaxkoRKVpmNyQ" outgoing="_T65q6PhYEeaxkoRKVpmNyQ" decisionInputFlow="_T65q5_hYEeaxkoRKVpmNyQ"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_T65E-_hYEeaxkoRKVpmNyQ" name="Return" incoming="_T65E-vhYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" parameter="_T65E9_hYEeaxkoRKVpmNyQ"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_T65rE_hYEeaxkoRKVpmNyQ" name="destroy$method$1" specification="_T65rXPhYEeaxkoRKVpmNyQ" node="_T65rFPhYEeaxkoRKVpmNyQ" group="_T65rFPhYEeaxkoRKVpmNyQ">
          <structuredNode xmi:id="_T65rFPhYEeaxkoRKVpmNyQ" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_T65rFfhYEeaxkoRKVpmNyQ" name="Tester$initialization$1" specification="_T65rV_hYEeaxkoRKVpmNyQ" node="_T65rFvhYEeaxkoRKVpmNyQ" group="_T65rFvhYEeaxkoRKVpmNyQ">
          <structuredNode xmi:id="_T65rFvhYEeaxkoRKVpmNyQ" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rF_hYEeaxkoRKVpmNyQ" target="_T65rJfhYEeaxkoRKVpmNyQ" source="_T65rIvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rGPhYEeaxkoRKVpmNyQ" target="_T65rL_hYEeaxkoRKVpmNyQ" source="_T65rJfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rGfhYEeaxkoRKVpmNyQ" target="_T65rOfhYEeaxkoRKVpmNyQ" source="_T65rJfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rGvhYEeaxkoRKVpmNyQ" target="_T65rQPhYEeaxkoRKVpmNyQ" source="_T65rPPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rG_hYEeaxkoRKVpmNyQ" target="_T65rTPhYEeaxkoRKVpmNyQ" source="_T65rQ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rHPhYEeaxkoRKVpmNyQ" target="_T65rUvhYEeaxkoRKVpmNyQ" source="_T65rR_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T65rHfhYEeaxkoRKVpmNyQ" target="_T65rVvhYEeaxkoRKVpmNyQ" source="_T65rVfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rHvhYEeaxkoRKVpmNyQ" target="_T65rVvhYEeaxkoRKVpmNyQ" source="_T65rT_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T65rH_hYEeaxkoRKVpmNyQ" target="_T65rJvhYEeaxkoRKVpmNyQ" source="_T65rVvhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_T65rIPhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_T65rIfhYEeaxkoRKVpmNyQ" name="ReadSelf">
              <result xmi:id="_T65rIvhYEeaxkoRKVpmNyQ" name="ReadSelf.result" outgoing="_T65rF_hYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rI_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rJPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T65rJfhYEeaxkoRKVpmNyQ" name="Fork(ReadSelf.result)" incoming="_T65rF_hYEeaxkoRKVpmNyQ" outgoing="_T65rGPhYEeaxkoRKVpmNyQ _T65rGfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65rJvhYEeaxkoRKVpmNyQ" name="Initialization" incoming="_T65rH_hYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65rJ_hYEeaxkoRKVpmNyQ" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rKPhYEeaxkoRKVpmNyQ" target="_T65rNfhYEeaxkoRKVpmNyQ" source="_T65rKvhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T65rKfhYEeaxkoRKVpmNyQ" name="Value(true)">
                  <result xmi:id="_T65rKvhYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_T65rKPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rK_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rLPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_T65rLfhYEeaxkoRKVpmNyQ" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_T65rLvhYEeaxkoRKVpmNyQ" name="Write(Tester$initializationFlag$1)" structuralFeature="_T65E8_hYEeaxkoRKVpmNyQ" isReplaceAll="true">
                  <object xmi:id="_T65rL_hYEeaxkoRKVpmNyQ" name="Write(Tester$initializationFlag$1).object" incoming="_T65rGPhYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rMPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rMfhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_T65rMvhYEeaxkoRKVpmNyQ" name="Write(Tester$initializationFlag$1).result" type="_T65E8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rM_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rNPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:id="_T65rNfhYEeaxkoRKVpmNyQ" name="Write(Tester$initializationFlag$1).value" incoming="_T65rKPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rNvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rN_hYEeaxkoRKVpmNyQ" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_T65rOPhYEeaxkoRKVpmNyQ" name="Read(Tester$initializationFlag$1)" structuralFeature="_T65E8_hYEeaxkoRKVpmNyQ">
              <object xmi:id="_T65rOfhYEeaxkoRKVpmNyQ" name="Read(Tester$initializationFlag$1).object" incoming="_T65rGfhYEeaxkoRKVpmNyQ" type="_T65E8vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rOvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rO_hYEeaxkoRKVpmNyQ" value="1"/>
              </object>
              <result xmi:id="_T65rPPhYEeaxkoRKVpmNyQ" name="Read(Tester$initializationFlag$1).result" outgoing="_T65rGvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rPfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rPvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T65rP_hYEeaxkoRKVpmNyQ" name="Call(ListSize)">
              <argument xmi:id="_T65rQPhYEeaxkoRKVpmNyQ" name="Call(ListSize).argument(list)" incoming="_T65rGvhYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rQfhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rQvhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_T65rQ_hYEeaxkoRKVpmNyQ" name="Call(ListSize).result(result)" outgoing="_T65rG_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rRPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rRfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T65rRvhYEeaxkoRKVpmNyQ" name="Value(0)">
              <result xmi:id="_T65rR_hYEeaxkoRKVpmNyQ" name="Value(0).result" outgoing="_T65rHPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rSPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rSfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_T65rSvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_T65rS_hYEeaxkoRKVpmNyQ" name="Test(Size==0)">
              <first xmi:id="_T65rTPhYEeaxkoRKVpmNyQ" name="Test(Size==0).first" incoming="_T65rG_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rTfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rTvhYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_T65rT_hYEeaxkoRKVpmNyQ" name="Test(Size==0).result" outgoing="_T65rHvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rUPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rUfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_T65rUvhYEeaxkoRKVpmNyQ" name="Test(Size==0).second" incoming="_T65rHPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rU_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rVPhYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_T65rVfhYEeaxkoRKVpmNyQ" name="InitialNode" outgoing="_T65rHfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_T65rVvhYEeaxkoRKVpmNyQ" name="Decision(Test(Tester$initializationFlag$1))" incoming="_T65rHfhYEeaxkoRKVpmNyQ _T65rHvhYEeaxkoRKVpmNyQ" outgoing="_T65rH_hYEeaxkoRKVpmNyQ" decisionInputFlow="_T65rHvhYEeaxkoRKVpmNyQ"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_T65rV_hYEeaxkoRKVpmNyQ" name="Tester$initialization$1" visibility="protected" method="_T65rFfhYEeaxkoRKVpmNyQ"/>
        <ownedOperation xmi:id="_T65rWPhYEeaxkoRKVpmNyQ" name="Tester" visibility="public" method="_T65E9vhYEeaxkoRKVpmNyQ">
          <ownedParameter xmi:id="_T65rWfhYEeaxkoRKVpmNyQ" name="" visibility="package" type="_T65E8vhYEeaxkoRKVpmNyQ" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rWvhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rW_hYEeaxkoRKVpmNyQ" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_T65rXPhYEeaxkoRKVpmNyQ" name="destroy" visibility="public" method="_T65rE_hYEeaxkoRKVpmNyQ"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_T65rXfhYEeaxkoRKVpmNyQ" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_T65rXvhYEeaxkoRKVpmNyQ" name="Continue" signal="_T65rXfhYEeaxkoRKVpmNyQ"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_T65rX_hYEeaxkoRKVpmNyQ" name="AssertEqual" visibility="public" node="_T65rg_hYEeaxkoRKVpmNyQ _T65rh_hYEeaxkoRKVpmNyQ _T65rhPhYEeaxkoRKVpmNyQ _T65rjfhYEeaxkoRKVpmNyQ _T65rhfhYEeaxkoRKVpmNyQ _T65rk_hYEeaxkoRKVpmNyQ _T65rmfhYEeaxkoRKVpmNyQ _T65rhvhYEeaxkoRKVpmNyQ" group="_T65rh_hYEeaxkoRKVpmNyQ _T65rjfhYEeaxkoRKVpmNyQ _T65rk_hYEeaxkoRKVpmNyQ _T65rmfhYEeaxkoRKVpmNyQ">
      <packageImport xmi:id="_T65rYPhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_T65rYfhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_T65rYvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_T65rY_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_T65rZPhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_T65rZfhYEeaxkoRKVpmNyQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rZvhYEeaxkoRKVpmNyQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rZ_hYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_T65raPhYEeaxkoRKVpmNyQ" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rafhYEeaxkoRKVpmNyQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65ravhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_T65ra_hYEeaxkoRKVpmNyQ" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rbPhYEeaxkoRKVpmNyQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rbfhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rbvhYEeaxkoRKVpmNyQ" target="_T65rifhYEeaxkoRKVpmNyQ" source="_T65rg_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rb_hYEeaxkoRKVpmNyQ" target="_T65rj_hYEeaxkoRKVpmNyQ" source="_T65rhPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rcPhYEeaxkoRKVpmNyQ" target="_T65rlfhYEeaxkoRKVpmNyQ" source="_T65rhfhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rcfhYEeaxkoRKVpmNyQ" target="_T65r0PhYEeaxkoRKVpmNyQ" source="_T65rkvhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rcvhYEeaxkoRKVpmNyQ" target="_T65r2PhYEeaxkoRKVpmNyQ" source="_T65rmPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rc_hYEeaxkoRKVpmNyQ" target="_T66SB_hYEeaxkoRKVpmNyQ" source="_T65rjPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rdPhYEeaxkoRKVpmNyQ" target="_T66SN_hYEeaxkoRKVpmNyQ" source="_T65rmPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rdfhYEeaxkoRKVpmNyQ" target="_T66SfvhYEeaxkoRKVpmNyQ" source="_T65rjPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rdvhYEeaxkoRKVpmNyQ" target="_T66SjvhYEeaxkoRKVpmNyQ" source="_T65rmPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rd_hYEeaxkoRKVpmNyQ" target="_T66SlvhYEeaxkoRKVpmNyQ" source="_T65rkvhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rePhYEeaxkoRKVpmNyQ" target="_T66StfhYEeaxkoRKVpmNyQ" source="_T65rmPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65refhYEeaxkoRKVpmNyQ" target="_T66S2PhYEeaxkoRKVpmNyQ" source="_T65rjPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65revhYEeaxkoRKVpmNyQ" target="_T66S6PhYEeaxkoRKVpmNyQ" source="_T65rmPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65re_hYEeaxkoRKVpmNyQ" target="_T66S8PhYEeaxkoRKVpmNyQ" source="_T65rkvhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rfPhYEeaxkoRKVpmNyQ" target="_T665B_hYEeaxkoRKVpmNyQ" source="_T65rjPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rffhYEeaxkoRKVpmNyQ" target="_T665FPhYEeaxkoRKVpmNyQ" source="_T65rmPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rfvhYEeaxkoRKVpmNyQ" target="_T665HPhYEeaxkoRKVpmNyQ" source="_T65rkvhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_T65rf_hYEeaxkoRKVpmNyQ" target="_T65rhvhYEeaxkoRKVpmNyQ" source="_T65rh_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_T65rgPhYEeaxkoRKVpmNyQ" target="_T65rhvhYEeaxkoRKVpmNyQ" source="_T65rjfhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_T65rgfhYEeaxkoRKVpmNyQ" target="_T65rhvhYEeaxkoRKVpmNyQ" source="_T65rk_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_T65rgvhYEeaxkoRKVpmNyQ" target="_T65rmfhYEeaxkoRKVpmNyQ" source="_T65rhvhYEeaxkoRKVpmNyQ"/>
      <structuredNode xmi:id="_T65rh_hYEeaxkoRKVpmNyQ" name="Node(Input(label))" outgoing="_T65rf_hYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T65riPhYEeaxkoRKVpmNyQ" target="_T65rjPhYEeaxkoRKVpmNyQ" source="_T65rifhYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_T65rifhYEeaxkoRKVpmNyQ" name="Input(label)" incoming="_T65rbvhYEeaxkoRKVpmNyQ" outgoing="_T65riPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rivhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65ri_hYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_T65rjPhYEeaxkoRKVpmNyQ" name="Fork(label)" incoming="_T65riPhYEeaxkoRKVpmNyQ" outgoing="_T65rc_hYEeaxkoRKVpmNyQ _T65rdfhYEeaxkoRKVpmNyQ _T65refhYEeaxkoRKVpmNyQ _T65rfPhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_T65rjfhYEeaxkoRKVpmNyQ" name="Node(Input(value1))" outgoing="_T65rgPhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rjvhYEeaxkoRKVpmNyQ" target="_T65rkvhYEeaxkoRKVpmNyQ" source="_T65rj_hYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_T65rj_hYEeaxkoRKVpmNyQ" name="Input(value1)" incoming="_T65rb_hYEeaxkoRKVpmNyQ" outgoing="_T65rjvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rkPhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rkfhYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_T65rkvhYEeaxkoRKVpmNyQ" name="Fork(value1)" incoming="_T65rjvhYEeaxkoRKVpmNyQ" outgoing="_T65rcfhYEeaxkoRKVpmNyQ _T65rd_hYEeaxkoRKVpmNyQ _T65re_hYEeaxkoRKVpmNyQ _T65rfvhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_T65rk_hYEeaxkoRKVpmNyQ" name="Node(Input(value2))" outgoing="_T65rgfhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rlPhYEeaxkoRKVpmNyQ" target="_T65rmPhYEeaxkoRKVpmNyQ" source="_T65rlfhYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_T65rlfhYEeaxkoRKVpmNyQ" name="Input(value2)" incoming="_T65rcPhYEeaxkoRKVpmNyQ" outgoing="_T65rlPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rlvhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rl_hYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_T65rmPhYEeaxkoRKVpmNyQ" name="Fork(value2)" incoming="_T65rlPhYEeaxkoRKVpmNyQ" outgoing="_T65rcvhYEeaxkoRKVpmNyQ _T65rdPhYEeaxkoRKVpmNyQ _T65rdvhYEeaxkoRKVpmNyQ _T65rePhYEeaxkoRKVpmNyQ _T65revhYEeaxkoRKVpmNyQ _T65rffhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_T65rmfhYEeaxkoRKVpmNyQ" name="Body(AssertEqual)" incoming="_T65rgvhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rmvhYEeaxkoRKVpmNyQ" target="_T665MPhYEeaxkoRKVpmNyQ" source="_T665JPhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rm_hYEeaxkoRKVpmNyQ" target="_T665MfhYEeaxkoRKVpmNyQ" source="_T665J_hYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rnPhYEeaxkoRKVpmNyQ" target="_T665MvhYEeaxkoRKVpmNyQ" source="_T665KvhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rnfhYEeaxkoRKVpmNyQ" target="_T665M_hYEeaxkoRKVpmNyQ" source="_T665LfhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_T65rnvhYEeaxkoRKVpmNyQ" name="IfStatement@5ac1ba35">
          <edge xmi:type="uml:ControlFlow" xmi:id="_T65rn_hYEeaxkoRKVpmNyQ" target="_T66SIfhYEeaxkoRKVpmNyQ" source="_T65r-_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65roPhYEeaxkoRKVpmNyQ" target="_T66TBPhYEeaxkoRKVpmNyQ" source="_T66S-PhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rofhYEeaxkoRKVpmNyQ" target="_T66TBfhYEeaxkoRKVpmNyQ" source="_T66S-_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rovhYEeaxkoRKVpmNyQ" target="_T66TBvhYEeaxkoRKVpmNyQ" source="_T66S_vhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65ro_hYEeaxkoRKVpmNyQ" target="_T66TB_hYEeaxkoRKVpmNyQ" source="_T66TAfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rpPhYEeaxkoRKVpmNyQ" target="_T66SQ_hYEeaxkoRKVpmNyQ" source="_T66SI_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rpfhYEeaxkoRKVpmNyQ" target="_T66SYvhYEeaxkoRKVpmNyQ" source="_T66SI_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rpvhYEeaxkoRKVpmNyQ" target="_T66ShvhYEeaxkoRKVpmNyQ" source="_T66SI_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rp_hYEeaxkoRKVpmNyQ" target="_T66S4PhYEeaxkoRKVpmNyQ" source="_T66SI_hYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T65rqPhYEeaxkoRKVpmNyQ" target="_T66SOfhYEeaxkoRKVpmNyQ" source="_T66SIfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T65rqfhYEeaxkoRKVpmNyQ" target="_T66TCPhYEeaxkoRKVpmNyQ" source="_T66SOfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rqvhYEeaxkoRKVpmNyQ" target="_T66TGvhYEeaxkoRKVpmNyQ" source="_T66TBPhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rq_hYEeaxkoRKVpmNyQ" target="_T66TIvhYEeaxkoRKVpmNyQ" source="_T66TBfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rrPhYEeaxkoRKVpmNyQ" target="_T66TKvhYEeaxkoRKVpmNyQ" source="_T66TBvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rrfhYEeaxkoRKVpmNyQ" target="_T66TMvhYEeaxkoRKVpmNyQ" source="_T66TB_hYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65rrvhYEeaxkoRKVpmNyQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rr_hYEeaxkoRKVpmNyQ" target="_T65rx_hYEeaxkoRKVpmNyQ" source="_T65r0PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rsPhYEeaxkoRKVpmNyQ" target="_T65r0vhYEeaxkoRKVpmNyQ" source="_T65r0PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rsfhYEeaxkoRKVpmNyQ" target="_T65rzfhYEeaxkoRKVpmNyQ" source="_T65r2PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rsvhYEeaxkoRKVpmNyQ" target="_T65r2vhYEeaxkoRKVpmNyQ" source="_T65r2PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rs_hYEeaxkoRKVpmNyQ" target="_T65r4fhYEeaxkoRKVpmNyQ" source="_T65r1fhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rtPhYEeaxkoRKVpmNyQ" target="_T65r4vhYEeaxkoRKVpmNyQ" source="_T65r3fhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rtfhYEeaxkoRKVpmNyQ" target="_T65r5PhYEeaxkoRKVpmNyQ" source="_T65r4fhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rtvhYEeaxkoRKVpmNyQ" target="_T65r6_hYEeaxkoRKVpmNyQ" source="_T65r4vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rt_hYEeaxkoRKVpmNyQ" target="_T65r8fhYEeaxkoRKVpmNyQ" source="_T65r4vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T65ruPhYEeaxkoRKVpmNyQ" target="_T65rxvhYEeaxkoRKVpmNyQ" source="_T65r8fhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_T65rufhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T65ruvhYEeaxkoRKVpmNyQ" target="_T65r4_hYEeaxkoRKVpmNyQ" source="_T65r8fhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_T65ru_hYEeaxkoRKVpmNyQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T65rvPhYEeaxkoRKVpmNyQ" target="_T65r8vhYEeaxkoRKVpmNyQ" source="_T65r4PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rvfhYEeaxkoRKVpmNyQ" target="_T65r8vhYEeaxkoRKVpmNyQ" source="_T65r4fhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T65rvvhYEeaxkoRKVpmNyQ" target="_T65r8fhYEeaxkoRKVpmNyQ" source="_T65r8vhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_T65rv_hYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T65rwPhYEeaxkoRKVpmNyQ" target="_T65r6vhYEeaxkoRKVpmNyQ" source="_T65r8vhYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_T65rwfhYEeaxkoRKVpmNyQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rwvhYEeaxkoRKVpmNyQ" target="_T65r8_hYEeaxkoRKVpmNyQ" source="_T65ryvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rw_hYEeaxkoRKVpmNyQ" target="_T65r8_hYEeaxkoRKVpmNyQ" source="_T65r5_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rxPhYEeaxkoRKVpmNyQ" target="_T65r8_hYEeaxkoRKVpmNyQ" source="_T65r7vhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65rxfhYEeaxkoRKVpmNyQ" target="_T65r9fhYEeaxkoRKVpmNyQ" source="_T65r8_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_T65rxvhYEeaxkoRKVpmNyQ" name="Test(==)" incoming="_T65ruPhYEeaxkoRKVpmNyQ">
              <first xmi:id="_T65rx_hYEeaxkoRKVpmNyQ" name="Test(==).first" incoming="_T65rr_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65ryPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65ryfhYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_T65ryvhYEeaxkoRKVpmNyQ" name="Test(==).result" outgoing="_T65rwvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65ry_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rzPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_T65rzfhYEeaxkoRKVpmNyQ" name="Test(==).second" incoming="_T65rsfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65rzvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65rz_hYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T65r0PhYEeaxkoRKVpmNyQ" name="Fork(Fork(value1))" incoming="_T65rcfhYEeaxkoRKVpmNyQ" outgoing="_T65rr_hYEeaxkoRKVpmNyQ _T65rsPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T65r0fhYEeaxkoRKVpmNyQ" name="Call(NotEmpty)">
              <argument xmi:id="_T65r0vhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_T65rsPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65r0_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65r1PhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_T65r1fhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_T65rs_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65r1vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65r1_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T65r2PhYEeaxkoRKVpmNyQ" name="Fork(Fork(value2))" incoming="_T65rcvhYEeaxkoRKVpmNyQ" outgoing="_T65rsfhYEeaxkoRKVpmNyQ _T65rsvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T65r2fhYEeaxkoRKVpmNyQ" name="Call(NotEmpty)">
              <argument xmi:id="_T65r2vhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_T65rsvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65r2_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65r3PhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_T65r3fhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_T65rtPhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65r3vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65r3_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_T65r4PhYEeaxkoRKVpmNyQ" name="Initial(Test(==))" outgoing="_T65rvPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_T65r4fhYEeaxkoRKVpmNyQ" name="Fork(Call(NotEmpty).result())" incoming="_T65rs_hYEeaxkoRKVpmNyQ" outgoing="_T65rtfhYEeaxkoRKVpmNyQ _T65rvfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_T65r4vhYEeaxkoRKVpmNyQ" name="Fork(Call(NotEmpty).result())" incoming="_T65rtPhYEeaxkoRKVpmNyQ" outgoing="_T65rtvhYEeaxkoRKVpmNyQ _T65rt_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T65r4_hYEeaxkoRKVpmNyQ" name="Call(Not)" incoming="_T65ruvhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_T65r5PhYEeaxkoRKVpmNyQ" name="Call(Not).argument(x)" incoming="_T65rtfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65r5fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65r5vhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T65r5_hYEeaxkoRKVpmNyQ" name="Call(Not).result(result)" outgoing="_T65rw_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65r6PhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65r6fhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T65r6vhYEeaxkoRKVpmNyQ" name="Call(Not)" incoming="_T65rwPhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_T65r6_hYEeaxkoRKVpmNyQ" name="Call(Not).argument(x)" incoming="_T65rtvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65r7PhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65r7fhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T65r7vhYEeaxkoRKVpmNyQ" name="Call(Not).result(result)" outgoing="_T65rxPhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65r7_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65r8PhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_T65r8fhYEeaxkoRKVpmNyQ" name="Decision(Call(NotEmpty).result())" incoming="_T65rt_hYEeaxkoRKVpmNyQ _T65rvvhYEeaxkoRKVpmNyQ" outgoing="_T65ruPhYEeaxkoRKVpmNyQ _T65ruvhYEeaxkoRKVpmNyQ" decisionInputFlow="_T65rt_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_T65r8vhYEeaxkoRKVpmNyQ" name="Decision(Call(NotEmpty).result())" incoming="_T65rvPhYEeaxkoRKVpmNyQ _T65rvfhYEeaxkoRKVpmNyQ" outgoing="_T65rvvhYEeaxkoRKVpmNyQ _T65rwPhYEeaxkoRKVpmNyQ" decisionInputFlow="_T65rvfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_T65r8_hYEeaxkoRKVpmNyQ" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_T65rwvhYEeaxkoRKVpmNyQ _T65rw_hYEeaxkoRKVpmNyQ _T65rxPhYEeaxkoRKVpmNyQ" outgoing="_T65rxfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T65r9PhYEeaxkoRKVpmNyQ" name="Call(Not)">
              <argument xmi:id="_T65r9fhYEeaxkoRKVpmNyQ" name="Call(Not).argument(x)" incoming="_T65rxfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65r9vhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65r9_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T65r-PhYEeaxkoRKVpmNyQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T65r-fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T65r-vhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T65r-_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@6a056d13" outgoing="_T65rn_hYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T65r_PhYEeaxkoRKVpmNyQ" target="_T66R8vhYEeaxkoRKVpmNyQ" source="_T66SFPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T66R8PhYEeaxkoRKVpmNyQ" target="_T66R8fhYEeaxkoRKVpmNyQ" source="_T66R9fhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T66R8fhYEeaxkoRKVpmNyQ" name="Call(Write)" incoming="_T66R8PhYEeaxkoRKVpmNyQ" behavior="_T665nPhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_T66R8vhYEeaxkoRKVpmNyQ" name="Call(Write).argument(value)" incoming="_T65r_PhYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66R8_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66R9PhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66R9fhYEeaxkoRKVpmNyQ" name="Tuple@1e35e4d9" outgoing="_T66R8PhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T66R9vhYEeaxkoRKVpmNyQ" target="_T66SBPhYEeaxkoRKVpmNyQ" source="_T66R-vhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T66R9_hYEeaxkoRKVpmNyQ" target="_T66SGPhYEeaxkoRKVpmNyQ" source="_T66SAPhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T66R-PhYEeaxkoRKVpmNyQ" target="_T66SG_hYEeaxkoRKVpmNyQ" source="_T66SDvhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T66R-fhYEeaxkoRKVpmNyQ" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_T66R-vhYEeaxkoRKVpmNyQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_T66R9vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66R-_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66R_PhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_T66R_fhYEeaxkoRKVpmNyQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66R_vhYEeaxkoRKVpmNyQ" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66R__hYEeaxkoRKVpmNyQ" target="_T66SAPhYEeaxkoRKVpmNyQ" source="_T66SCvhYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_T66SAPhYEeaxkoRKVpmNyQ" name="Output(Call(Concat).result(result))" incoming="_T66R__hYEeaxkoRKVpmNyQ" outgoing="_T66R9_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SAfhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SAvhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_T66SA_hYEeaxkoRKVpmNyQ" name="Call(Concat)">
                  <argument xmi:id="_T66SBPhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(x)" incoming="_T66R9vhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SBfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SBvhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <argument xmi:id="_T66SB_hYEeaxkoRKVpmNyQ" name="Call(Concat).argument(y)" incoming="_T65rc_hYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SCPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SCfhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_T66SCvhYEeaxkoRKVpmNyQ" name="Call(Concat).result(result)" outgoing="_T66R__hYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SC_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SDPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T66SDfhYEeaxkoRKVpmNyQ" name="Value(&quot;==&quot;)">
                <result xmi:id="_T66SDvhYEeaxkoRKVpmNyQ" name="Value(&quot;==&quot;).result" outgoing="_T66R-PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SD_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SEPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_T66SEfhYEeaxkoRKVpmNyQ" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SEvhYEeaxkoRKVpmNyQ" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SE_hYEeaxkoRKVpmNyQ" target="_T66SFPhYEeaxkoRKVpmNyQ" source="_T66SHvhYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_T66SFPhYEeaxkoRKVpmNyQ" name="Output(Call(Concat).result(result))" incoming="_T66SE_hYEeaxkoRKVpmNyQ" outgoing="_T65r_PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SFfhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SFvhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_T66SF_hYEeaxkoRKVpmNyQ" name="Call(Concat)">
                  <argument xmi:id="_T66SGPhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(x)" incoming="_T66R9_hYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SGfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SGvhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <argument xmi:id="_T66SG_hYEeaxkoRKVpmNyQ" name="Call(Concat).argument(y)" incoming="_T66R-PhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SHPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SHfhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_T66SHvhYEeaxkoRKVpmNyQ" name="Call(Concat).result(result)" outgoing="_T66SE_hYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SH_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SIPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SIfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@6084d56b" incoming="_T65rn_hYEeaxkoRKVpmNyQ" outgoing="_T65rqPhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SIvhYEeaxkoRKVpmNyQ" target="_T66SI_hYEeaxkoRKVpmNyQ" source="_T66SOPhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ForkNode" xmi:id="_T66SI_hYEeaxkoRKVpmNyQ" name="Fork(s)@57e86d0c" incoming="_T66SIvhYEeaxkoRKVpmNyQ" outgoing="_T65rpPhYEeaxkoRKVpmNyQ _T65rpfhYEeaxkoRKVpmNyQ _T65rpvhYEeaxkoRKVpmNyQ _T65rp_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SJPhYEeaxkoRKVpmNyQ" name="RightHandSide@53e1be66">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_T66SJfhYEeaxkoRKVpmNyQ" name="CastExpression@53e1be66" mode="parallel" outputElement="_T66SOPhYEeaxkoRKVpmNyQ" inputElement="_T66SN_hYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SJvhYEeaxkoRKVpmNyQ" target="_T66SL_hYEeaxkoRKVpmNyQ" source="_T66SNfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SJ_hYEeaxkoRKVpmNyQ" target="_T66SNvhYEeaxkoRKVpmNyQ" source="_T66SNfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SKPhYEeaxkoRKVpmNyQ" target="_T66SNvhYEeaxkoRKVpmNyQ" source="_T66SMvhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SKfhYEeaxkoRKVpmNyQ" target="_T66SLfhYEeaxkoRKVpmNyQ" source="_T66SNvhYEeaxkoRKVpmNyQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_T66SKvhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SK_hYEeaxkoRKVpmNyQ" target="_T66SNfhYEeaxkoRKVpmNyQ" source="_T66SN_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SLPhYEeaxkoRKVpmNyQ" target="_T66SOPhYEeaxkoRKVpmNyQ" source="_T66SLfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_T66SLfhYEeaxkoRKVpmNyQ" name="Merge(CastExpression@53e1be66.operand)" incoming="_T66SKfhYEeaxkoRKVpmNyQ" outgoing="_T66SLPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_T66SLvhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_T66SL_hYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(String).object" incoming="_T66SJvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SMPhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SMfhYEeaxkoRKVpmNyQ" value="1"/>
                  </object>
                  <result xmi:id="_T66SMvhYEeaxkoRKVpmNyQ" name="ReadIsClassifiedObject(String).result" outgoing="_T66SKPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SM_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SNPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_T66SNfhYEeaxkoRKVpmNyQ" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_T66SK_hYEeaxkoRKVpmNyQ" outgoing="_T66SJvhYEeaxkoRKVpmNyQ _T66SJ_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_T66SNvhYEeaxkoRKVpmNyQ" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_T66SJ_hYEeaxkoRKVpmNyQ _T66SKPhYEeaxkoRKVpmNyQ" outgoing="_T66SKfhYEeaxkoRKVpmNyQ" decisionInputFlow="_T66SKPhYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_T66SN_hYEeaxkoRKVpmNyQ" name="CastExpression@53e1be66.inputElement" incoming="_T65rdPhYEeaxkoRKVpmNyQ" outgoing="_T66SK_hYEeaxkoRKVpmNyQ" regionAsInput="_T66SJfhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_T66SOPhYEeaxkoRKVpmNyQ" name="CastExpression@53e1be66.outputElement" incoming="_T66SLPhYEeaxkoRKVpmNyQ" outgoing="_T66SIvhYEeaxkoRKVpmNyQ" regionAsOutput="_T66SJfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_T66SOfhYEeaxkoRKVpmNyQ" name="IfStatement@e53a969" incoming="_T65rqPhYEeaxkoRKVpmNyQ" outgoing="_T65rqfhYEeaxkoRKVpmNyQ">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SOvhYEeaxkoRKVpmNyQ" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_T66SO_hYEeaxkoRKVpmNyQ" target="_T66SQvhYEeaxkoRKVpmNyQ" source="_T66SPPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SPPhYEeaxkoRKVpmNyQ" name="Operands(EqualityExpression@78b00778)" outgoing="_T66SO_hYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T66SPfhYEeaxkoRKVpmNyQ" name="Value(null)">
                  <result xmi:id="_T66SPvhYEeaxkoRKVpmNyQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SP_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SQPhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_T66SQfhYEeaxkoRKVpmNyQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T66SQvhYEeaxkoRKVpmNyQ" name="Call(NotEmpty)" incoming="_T66SO_hYEeaxkoRKVpmNyQ">
                <argument xmi:id="_T66SQ_hYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_T65rpPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SRPhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SRfhYEeaxkoRKVpmNyQ" value="*"/>
                </argument>
                <result xmi:id="_T66SRvhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SR_hYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SSPhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SSfhYEeaxkoRKVpmNyQ" name="ExpressionStatement@4acca937">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SSvhYEeaxkoRKVpmNyQ" target="_T66STfhYEeaxkoRKVpmNyQ" source="_T66Sb_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_T66SS_hYEeaxkoRKVpmNyQ" target="_T66STPhYEeaxkoRKVpmNyQ" source="_T66SUPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T66STPhYEeaxkoRKVpmNyQ" name="Call(Write)" incoming="_T66SS_hYEeaxkoRKVpmNyQ" behavior="_T665nPhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_T66STfhYEeaxkoRKVpmNyQ" name="Call(Write).argument(value)" incoming="_T66SSvhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66STvhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66ST_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SUPhYEeaxkoRKVpmNyQ" name="Tuple@57916acc" outgoing="_T66SS_hYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SUfhYEeaxkoRKVpmNyQ" target="_T66SX_hYEeaxkoRKVpmNyQ" source="_T66SVfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SUvhYEeaxkoRKVpmNyQ" target="_T66Sc_hYEeaxkoRKVpmNyQ" source="_T66SW_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SU_hYEeaxkoRKVpmNyQ" target="_T66SdvhYEeaxkoRKVpmNyQ" source="_T66SafhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T66SVPhYEeaxkoRKVpmNyQ" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_T66SVfhYEeaxkoRKVpmNyQ" name="Value(&quot;&quot;&quot;).result" outgoing="_T66SUfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SVvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SV_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_T66SWPhYEeaxkoRKVpmNyQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SWfhYEeaxkoRKVpmNyQ" name="Node(Call(Concat))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SWvhYEeaxkoRKVpmNyQ" target="_T66SW_hYEeaxkoRKVpmNyQ" source="_T66SZfhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_T66SW_hYEeaxkoRKVpmNyQ" name="Output(Call(Concat).result(result))" incoming="_T66SWvhYEeaxkoRKVpmNyQ" outgoing="_T66SUvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SXPhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SXfhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_T66SXvhYEeaxkoRKVpmNyQ" name="Call(Concat)">
                    <argument xmi:id="_T66SX_hYEeaxkoRKVpmNyQ" name="Call(Concat).argument(x)" incoming="_T66SUfhYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SYPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SYfhYEeaxkoRKVpmNyQ" value="1"/>
                    </argument>
                    <argument xmi:id="_T66SYvhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(y)" incoming="_T65rpfhYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SY_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SZPhYEeaxkoRKVpmNyQ" value="1"/>
                    </argument>
                    <result xmi:id="_T66SZfhYEeaxkoRKVpmNyQ" name="Call(Concat).result(result)" outgoing="_T66SWvhYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SZvhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SZ_hYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T66SaPhYEeaxkoRKVpmNyQ" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_T66SafhYEeaxkoRKVpmNyQ" name="Value(&quot;&quot;&quot;).result" outgoing="_T66SU_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SavhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66Sa_hYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_T66SbPhYEeaxkoRKVpmNyQ" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SbfhYEeaxkoRKVpmNyQ" name="Node(Call(Concat))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SbvhYEeaxkoRKVpmNyQ" target="_T66Sb_hYEeaxkoRKVpmNyQ" source="_T66SefhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_T66Sb_hYEeaxkoRKVpmNyQ" name="Output(Call(Concat).result(result))" incoming="_T66SbvhYEeaxkoRKVpmNyQ" outgoing="_T66SSvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66ScPhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66ScfhYEeaxkoRKVpmNyQ" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_T66ScvhYEeaxkoRKVpmNyQ" name="Call(Concat)">
                    <argument xmi:id="_T66Sc_hYEeaxkoRKVpmNyQ" name="Call(Concat).argument(x)" incoming="_T66SUvhYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SdPhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SdfhYEeaxkoRKVpmNyQ" value="1"/>
                    </argument>
                    <argument xmi:id="_T66SdvhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(y)" incoming="_T66SU_hYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66Sd_hYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SePhYEeaxkoRKVpmNyQ" value="1"/>
                    </argument>
                    <result xmi:id="_T66SefhYEeaxkoRKVpmNyQ" name="Call(Concat).result(result)" outgoing="_T66SbvhYEeaxkoRKVpmNyQ">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SevhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66Se_hYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SfPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SffhYEeaxkoRKVpmNyQ" target="_T66SgfhYEeaxkoRKVpmNyQ" source="_T66SfvhYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_T66SfvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).input" incoming="_T65rdfhYEeaxkoRKVpmNyQ" outgoing="_T66SffhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66Sf_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SgPhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_T66SgfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).output" incoming="_T66SffhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SgvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66Sg_hYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66ShPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)@57e86d0c)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T66ShfhYEeaxkoRKVpmNyQ" target="_T66SifhYEeaxkoRKVpmNyQ" source="_T66ShvhYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_T66ShvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)@57e86d0c).input" incoming="_T65rpvhYEeaxkoRKVpmNyQ" outgoing="_T66ShfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66Sh_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SiPhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_T66SifhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)@57e86d0c).output" incoming="_T66ShfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SivhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66Si_hYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SjPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SjfhYEeaxkoRKVpmNyQ" target="_T66SkfhYEeaxkoRKVpmNyQ" source="_T66SjvhYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_T66SjvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).input" incoming="_T65rdvhYEeaxkoRKVpmNyQ" outgoing="_T66SjfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66Sj_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SkPhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_T66SkfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).output" incoming="_T66SjfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SkvhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66Sk_hYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SlPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SlfhYEeaxkoRKVpmNyQ" target="_T66SmfhYEeaxkoRKVpmNyQ" source="_T66SlvhYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_T66SlvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).input" incoming="_T65rd_hYEeaxkoRKVpmNyQ" outgoing="_T66SlfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66Sl_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SmPhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_T66SmfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).output" incoming="_T66SlfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SmvhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66Sm_hYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T66SnPhYEeaxkoRKVpmNyQ" name="Value(true)">
              <result xmi:id="_T66SnfhYEeaxkoRKVpmNyQ" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SnvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66Sn_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_T66SoPhYEeaxkoRKVpmNyQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SofhYEeaxkoRKVpmNyQ" name="ExpressionStatement@64b95cd7">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SovhYEeaxkoRKVpmNyQ" target="_T66SpfhYEeaxkoRKVpmNyQ" source="_T66S1fhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_T66So_hYEeaxkoRKVpmNyQ" target="_T66SpPhYEeaxkoRKVpmNyQ" source="_T66SqPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T66SpPhYEeaxkoRKVpmNyQ" name="Call(Write)" incoming="_T66So_hYEeaxkoRKVpmNyQ" behavior="_T665nPhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_T66SpfhYEeaxkoRKVpmNyQ" name="Call(Write).argument(value)" incoming="_T66SovhYEeaxkoRKVpmNyQ">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SpvhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66Sp_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SqPhYEeaxkoRKVpmNyQ" name="Tuple@63dee1b7" outgoing="_T66So_hYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SqfhYEeaxkoRKVpmNyQ" target="_T66SvfhYEeaxkoRKVpmNyQ" source="_T66StfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_T66SqvhYEeaxkoRKVpmNyQ" target="_T66SvPhYEeaxkoRKVpmNyQ" source="_T66StPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66Sq_hYEeaxkoRKVpmNyQ" target="_T66SyPhYEeaxkoRKVpmNyQ" source="_T66StfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_T66SrPhYEeaxkoRKVpmNyQ" target="_T66S1PhYEeaxkoRKVpmNyQ" source="_T66S0_hYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SrfhYEeaxkoRKVpmNyQ" target="_T66S1PhYEeaxkoRKVpmNyQ" source="_T66SwPhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_T66SrvhYEeaxkoRKVpmNyQ" target="_T66Sw_hYEeaxkoRKVpmNyQ" source="_T66S1PhYEeaxkoRKVpmNyQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_T66Sr_hYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_T66SsPhYEeaxkoRKVpmNyQ" target="_T66SyfhYEeaxkoRKVpmNyQ" source="_T66S1PhYEeaxkoRKVpmNyQ">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_T66SsfhYEeaxkoRKVpmNyQ" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SsvhYEeaxkoRKVpmNyQ" target="_T66S1fhYEeaxkoRKVpmNyQ" source="_T66SxfhYEeaxkoRKVpmNyQ"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T66Ss_hYEeaxkoRKVpmNyQ" target="_T66S1fhYEeaxkoRKVpmNyQ" source="_T66Sy_hYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66StPhYEeaxkoRKVpmNyQ" name="Operands(EqualityExpression@147b7f3c)" outgoing="_T66SqvhYEeaxkoRKVpmNyQ">
                  <node xmi:type="uml:ForkNode" xmi:id="_T66StfhYEeaxkoRKVpmNyQ" name="Fork()@1cd9c2de" incoming="_T65rePhYEeaxkoRKVpmNyQ" outgoing="_T66SqfhYEeaxkoRKVpmNyQ _T66Sq_hYEeaxkoRKVpmNyQ"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66StvhYEeaxkoRKVpmNyQ" name="RightHandSide@140b395c"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T66St_hYEeaxkoRKVpmNyQ" name="Value(null)">
                    <result xmi:id="_T66SuPhYEeaxkoRKVpmNyQ" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SufhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SuvhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_T66Su_hYEeaxkoRKVpmNyQ"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_T66SvPhYEeaxkoRKVpmNyQ" name="Call(NotEmpty)" incoming="_T66SqvhYEeaxkoRKVpmNyQ">
                  <argument xmi:id="_T66SvfhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_T66SqfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SvvhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66Sv_hYEeaxkoRKVpmNyQ" value="*"/>
                  </argument>
                  <result xmi:id="_T66SwPhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_T66SrfhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SwfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SwvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66Sw_hYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@6cee59d6.operand2" incoming="_T66SrvhYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SxPhYEeaxkoRKVpmNyQ" target="_T66SxfhYEeaxkoRKVpmNyQ" source="_T66SyPhYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_T66SxfhYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@6cee59d6.operand2.result" incoming="_T66SxPhYEeaxkoRKVpmNyQ" outgoing="_T66SsvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SxvhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66Sx_hYEeaxkoRKVpmNyQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_T66SyPhYEeaxkoRKVpmNyQ" name="Merge(Fork()@1cd9c2de)" incoming="_T66Sq_hYEeaxkoRKVpmNyQ" outgoing="_T66SxPhYEeaxkoRKVpmNyQ"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66SyfhYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@6cee59d6.operand3" incoming="_T66SsPhYEeaxkoRKVpmNyQ">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_T66SyvhYEeaxkoRKVpmNyQ" target="_T66Sy_hYEeaxkoRKVpmNyQ" source="_T66Sz_hYEeaxkoRKVpmNyQ"/>
                  <structuredNodeOutput xmi:id="_T66Sy_hYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@6cee59d6.operand3.result" incoming="_T66SyvhYEeaxkoRKVpmNyQ" outgoing="_T66Ss_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66SzPhYEeaxkoRKVpmNyQ"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66SzfhYEeaxkoRKVpmNyQ" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T66SzvhYEeaxkoRKVpmNyQ" name="Value(&quot;null&quot;)">
                    <result xmi:id="_T66Sz_hYEeaxkoRKVpmNyQ" name="Value(&quot;null&quot;).result" outgoing="_T66SyvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66S0PhYEeaxkoRKVpmNyQ" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66S0fhYEeaxkoRKVpmNyQ" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_T66S0vhYEeaxkoRKVpmNyQ" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_T66S0_hYEeaxkoRKVpmNyQ" name="Initial(NullCoalescingExpression@6cee59d6)" outgoing="_T66SrPhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_T66S1PhYEeaxkoRKVpmNyQ" name="Decision(NullCoalescingExpression@6cee59d6)" incoming="_T66SrPhYEeaxkoRKVpmNyQ _T66SrfhYEeaxkoRKVpmNyQ" outgoing="_T66SrvhYEeaxkoRKVpmNyQ _T66SsPhYEeaxkoRKVpmNyQ" decisionInputFlow="_T66SrfhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:MergeNode" xmi:id="_T66S1fhYEeaxkoRKVpmNyQ" name="Merge(NullCoalescingExpression@6cee59d6.result)" incoming="_T66SsvhYEeaxkoRKVpmNyQ _T66Ss_hYEeaxkoRKVpmNyQ" outgoing="_T66SovhYEeaxkoRKVpmNyQ"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66S1vhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T66S1_hYEeaxkoRKVpmNyQ" target="_T66S2_hYEeaxkoRKVpmNyQ" source="_T66S2PhYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_T66S2PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).input" incoming="_T65refhYEeaxkoRKVpmNyQ" outgoing="_T66S1_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66S2fhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66S2vhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_T66S2_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).output" incoming="_T66S1_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66S3PhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66S3fhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66S3vhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)@57e86d0c)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T66S3_hYEeaxkoRKVpmNyQ" target="_T66S4_hYEeaxkoRKVpmNyQ" source="_T66S4PhYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_T66S4PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)@57e86d0c).input" incoming="_T65rp_hYEeaxkoRKVpmNyQ" outgoing="_T66S3_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66S4fhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66S4vhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_T66S4_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)@57e86d0c).output" incoming="_T66S3_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66S5PhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66S5fhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66S5vhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T66S5_hYEeaxkoRKVpmNyQ" target="_T66S6_hYEeaxkoRKVpmNyQ" source="_T66S6PhYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_T66S6PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).input" incoming="_T65revhYEeaxkoRKVpmNyQ" outgoing="_T66S5_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66S6fhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66S6vhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_T66S6_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).output" incoming="_T66S5_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66S7PhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66S7fhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66S7vhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T66S7_hYEeaxkoRKVpmNyQ" target="_T66S8_hYEeaxkoRKVpmNyQ" source="_T66S8PhYEeaxkoRKVpmNyQ"/>
              <structuredNodeInput xmi:id="_T66S8PhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).input" incoming="_T65re_hYEeaxkoRKVpmNyQ" outgoing="_T66S7_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66S8fhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66S8vhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_T66S8_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).output" incoming="_T66S7_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66S9PhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66S9fhYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_T66S9vhYEeaxkoRKVpmNyQ" body="_T66SSfhYEeaxkoRKVpmNyQ _T66SfPhYEeaxkoRKVpmNyQ _T66ShPhYEeaxkoRKVpmNyQ _T66SjPhYEeaxkoRKVpmNyQ _T66SlPhYEeaxkoRKVpmNyQ" bodyOutput="_T66SgfhYEeaxkoRKVpmNyQ _T66SifhYEeaxkoRKVpmNyQ _T66SkfhYEeaxkoRKVpmNyQ _T66SmfhYEeaxkoRKVpmNyQ" decider="_T66SRvhYEeaxkoRKVpmNyQ" successorClause="_T66S9_hYEeaxkoRKVpmNyQ" test="_T66SOvhYEeaxkoRKVpmNyQ"/>
            <clause xmi:id="_T66S9_hYEeaxkoRKVpmNyQ" body="_T66SofhYEeaxkoRKVpmNyQ _T66S1vhYEeaxkoRKVpmNyQ _T66S3vhYEeaxkoRKVpmNyQ _T66S5vhYEeaxkoRKVpmNyQ _T66S7vhYEeaxkoRKVpmNyQ" bodyOutput="_T66S2_hYEeaxkoRKVpmNyQ _T66S4_hYEeaxkoRKVpmNyQ _T66S6_hYEeaxkoRKVpmNyQ _T66S8_hYEeaxkoRKVpmNyQ" decider="_T66SnfhYEeaxkoRKVpmNyQ" predecessorClause="_T66S9vhYEeaxkoRKVpmNyQ" test="_T66SnPhYEeaxkoRKVpmNyQ"/>
            <result xmi:id="_T66S-PhYEeaxkoRKVpmNyQ" name="IfStatement@e53a969.result(label)" outgoing="_T65roPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66S-fhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66S-vhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <result xmi:id="_T66S-_hYEeaxkoRKVpmNyQ" name="IfStatement@e53a969.result(s)" outgoing="_T65rofhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66S_PhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66S_fhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <result xmi:id="_T66S_vhYEeaxkoRKVpmNyQ" name="IfStatement@e53a969.result(value2)" outgoing="_T65rovhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66S__hYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66TAPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <result xmi:id="_T66TAfhYEeaxkoRKVpmNyQ" name="IfStatement@e53a969.result(value1)" outgoing="_T65ro_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66TAvhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66TA_hYEeaxkoRKVpmNyQ" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_T66TBPhYEeaxkoRKVpmNyQ" name="Fork(label)" incoming="_T65roPhYEeaxkoRKVpmNyQ" outgoing="_T65rqvhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_T66TBfhYEeaxkoRKVpmNyQ" name="Fork(s)" incoming="_T65rofhYEeaxkoRKVpmNyQ" outgoing="_T65rq_hYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_T66TBvhYEeaxkoRKVpmNyQ" name="Fork(value2)" incoming="_T65rovhYEeaxkoRKVpmNyQ" outgoing="_T65rrPhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:ForkNode" xmi:id="_T66TB_hYEeaxkoRKVpmNyQ" name="Fork(value1)" incoming="_T65ro_hYEeaxkoRKVpmNyQ" outgoing="_T65rrfhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66TCPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@5d947961" incoming="_T65rqfhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T66TCfhYEeaxkoRKVpmNyQ" target="_T66TDPhYEeaxkoRKVpmNyQ" source="_T66TFPhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T66TCvhYEeaxkoRKVpmNyQ" target="_T66TC_hYEeaxkoRKVpmNyQ" source="_T66TEvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T66TC_hYEeaxkoRKVpmNyQ" name="Call(WriteLine)" incoming="_T66TCvhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_T66TDPhYEeaxkoRKVpmNyQ" name="Call(WriteLine).argument(value)" incoming="_T66TCfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66TDfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66TDvhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T66TD_hYEeaxkoRKVpmNyQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66TEPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66TEfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66TEvhYEeaxkoRKVpmNyQ" name="Tuple@3de64145" outgoing="_T66TCvhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T66TE_hYEeaxkoRKVpmNyQ" name="Value(&quot;&quot;)">
                <result xmi:id="_T66TFPhYEeaxkoRKVpmNyQ" name="Value(&quot;&quot;).result" outgoing="_T66TCfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66TFfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66TFvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_T66TF_hYEeaxkoRKVpmNyQ" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66TGPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T66TGfhYEeaxkoRKVpmNyQ" target="_T66THfhYEeaxkoRKVpmNyQ" source="_T66TGvhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_T66TGvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).input" incoming="_T65rqvhYEeaxkoRKVpmNyQ" outgoing="_T66TGfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66TG_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66THPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_T66THfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).output" incoming="_T66TGfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66THvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66TH_hYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66TIPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T66TIfhYEeaxkoRKVpmNyQ" target="_T66TJfhYEeaxkoRKVpmNyQ" source="_T66TIvhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_T66TIvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)).input" incoming="_T65rq_hYEeaxkoRKVpmNyQ" outgoing="_T66TIfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66TI_hYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66TJPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_T66TJfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(s)).output" incoming="_T66TIfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66TJvhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66TJ_hYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66TKPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T66TKfhYEeaxkoRKVpmNyQ" target="_T66TLfhYEeaxkoRKVpmNyQ" source="_T66TKvhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_T66TKvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).input" incoming="_T65rrPhYEeaxkoRKVpmNyQ" outgoing="_T66TKfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66TK_hYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66TLPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_T66TLfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).output" incoming="_T66TKfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66TLvhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66TL_hYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T66TMPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T66TMfhYEeaxkoRKVpmNyQ" target="_T66TNfhYEeaxkoRKVpmNyQ" source="_T66TMvhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_T66TMvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).input" incoming="_T65rrfhYEeaxkoRKVpmNyQ" outgoing="_T66TMfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66TM_hYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66TNPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_T66TNfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).output" incoming="_T66TMfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T66TNvhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T66TN_hYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T665APhYEeaxkoRKVpmNyQ" name="Value(true)">
            <result xmi:id="_T665AfhYEeaxkoRKVpmNyQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665AvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665A_hYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_T665BPhYEeaxkoRKVpmNyQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T665BfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665BvhYEeaxkoRKVpmNyQ" target="_T665CvhYEeaxkoRKVpmNyQ" source="_T665B_hYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_T665B_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).input" incoming="_T65rfPhYEeaxkoRKVpmNyQ" outgoing="_T665BvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665CPhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665CfhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_T665CvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).output" incoming="_T665BvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665C_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665DPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T665DfhYEeaxkoRKVpmNyQ" name="Value(null)">
            <result xmi:id="_T665DvhYEeaxkoRKVpmNyQ" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665D_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665EPhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_T665EfhYEeaxkoRKVpmNyQ"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T665EvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665E_hYEeaxkoRKVpmNyQ" target="_T665F_hYEeaxkoRKVpmNyQ" source="_T665FPhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_T665FPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).input" incoming="_T65rffhYEeaxkoRKVpmNyQ" outgoing="_T665E_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665FfhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665FvhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_T665F_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(value2)).output" incoming="_T665E_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665GPhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665GfhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T665GvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665G_hYEeaxkoRKVpmNyQ" target="_T665H_hYEeaxkoRKVpmNyQ" source="_T665HPhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_T665HPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).input" incoming="_T65rfvhYEeaxkoRKVpmNyQ" outgoing="_T665G_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665HfhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665HvhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_T665H_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(value1)).output" incoming="_T665G_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665IPhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665IfhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_T665IvhYEeaxkoRKVpmNyQ" body="_T65r-_hYEeaxkoRKVpmNyQ _T66SIfhYEeaxkoRKVpmNyQ _T66SOfhYEeaxkoRKVpmNyQ _T66TCPhYEeaxkoRKVpmNyQ _T66TGPhYEeaxkoRKVpmNyQ _T66TIPhYEeaxkoRKVpmNyQ _T66TKPhYEeaxkoRKVpmNyQ _T66TMPhYEeaxkoRKVpmNyQ" bodyOutput="_T66THfhYEeaxkoRKVpmNyQ _T66TJfhYEeaxkoRKVpmNyQ _T66TLfhYEeaxkoRKVpmNyQ _T66TNfhYEeaxkoRKVpmNyQ" decider="_T65r-PhYEeaxkoRKVpmNyQ" successorClause="_T665I_hYEeaxkoRKVpmNyQ" test="_T65rrvhYEeaxkoRKVpmNyQ"/>
          <clause xmi:id="_T665I_hYEeaxkoRKVpmNyQ" body="_T665BfhYEeaxkoRKVpmNyQ _T665DfhYEeaxkoRKVpmNyQ _T665EvhYEeaxkoRKVpmNyQ _T665GvhYEeaxkoRKVpmNyQ" bodyOutput="_T665CvhYEeaxkoRKVpmNyQ _T665DvhYEeaxkoRKVpmNyQ _T665F_hYEeaxkoRKVpmNyQ _T665H_hYEeaxkoRKVpmNyQ" decider="_T665AfhYEeaxkoRKVpmNyQ" predecessorClause="_T665IvhYEeaxkoRKVpmNyQ" test="_T665APhYEeaxkoRKVpmNyQ"/>
          <result xmi:id="_T665JPhYEeaxkoRKVpmNyQ" name="IfStatement@5ac1ba35.result(label)" outgoing="_T65rmvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665JfhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665JvhYEeaxkoRKVpmNyQ" value="1"/>
          </result>
          <result xmi:id="_T665J_hYEeaxkoRKVpmNyQ" name="IfStatement@5ac1ba35.result(s)" outgoing="_T65rm_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665KPhYEeaxkoRKVpmNyQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665KfhYEeaxkoRKVpmNyQ" value="1"/>
          </result>
          <result xmi:id="_T665KvhYEeaxkoRKVpmNyQ" name="IfStatement@5ac1ba35.result(value2)" outgoing="_T65rnPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665K_hYEeaxkoRKVpmNyQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665LPhYEeaxkoRKVpmNyQ" value="1"/>
          </result>
          <result xmi:id="_T665LfhYEeaxkoRKVpmNyQ" name="IfStatement@5ac1ba35.result(value1)" outgoing="_T65rnfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665LvhYEeaxkoRKVpmNyQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665L_hYEeaxkoRKVpmNyQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_T665MPhYEeaxkoRKVpmNyQ" name="Fork(label)" incoming="_T65rmvhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_T665MfhYEeaxkoRKVpmNyQ" name="Fork(s)" incoming="_T65rm_hYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_T665MvhYEeaxkoRKVpmNyQ" name="Fork(value2)" incoming="_T65rnPhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_T665M_hYEeaxkoRKVpmNyQ" name="Fork(value1)" incoming="_T65rnfhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_T65rg_hYEeaxkoRKVpmNyQ" name="Input(label)" outgoing="_T65rbvhYEeaxkoRKVpmNyQ" parameter="_T65rZfhYEeaxkoRKVpmNyQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_T65rhPhYEeaxkoRKVpmNyQ" name="Input(value1)" outgoing="_T65rb_hYEeaxkoRKVpmNyQ" parameter="_T65raPhYEeaxkoRKVpmNyQ"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_T65rhfhYEeaxkoRKVpmNyQ" name="Input(value2)" outgoing="_T65rcPhYEeaxkoRKVpmNyQ" parameter="_T65ra_hYEeaxkoRKVpmNyQ"/>
      <node xmi:type="uml:JoinNode" xmi:id="_T65rhvhYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_T65rf_hYEeaxkoRKVpmNyQ _T65rgPhYEeaxkoRKVpmNyQ _T65rgfhYEeaxkoRKVpmNyQ" outgoing="_T65rgvhYEeaxkoRKVpmNyQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_T665NPhYEeaxkoRKVpmNyQ" name="AssertFalse" visibility="public" node="_T665SPhYEeaxkoRKVpmNyQ _T665S_hYEeaxkoRKVpmNyQ _T665SfhYEeaxkoRKVpmNyQ _T665UfhYEeaxkoRKVpmNyQ _T665V_hYEeaxkoRKVpmNyQ _T665SvhYEeaxkoRKVpmNyQ" group="_T665S_hYEeaxkoRKVpmNyQ _T665UfhYEeaxkoRKVpmNyQ _T665V_hYEeaxkoRKVpmNyQ">
      <elementImport xmi:id="_T665NfhYEeaxkoRKVpmNyQ" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_T665NvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_T665N_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_T665OPhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_T665OfhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_T665OvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_T665O_hYEeaxkoRKVpmNyQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665PPhYEeaxkoRKVpmNyQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665PfhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_T665PvhYEeaxkoRKVpmNyQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665P_hYEeaxkoRKVpmNyQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665QPhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T665QfhYEeaxkoRKVpmNyQ" target="_T665TfhYEeaxkoRKVpmNyQ" source="_T665SPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T665QvhYEeaxkoRKVpmNyQ" target="_T665U_hYEeaxkoRKVpmNyQ" source="_T665SfhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T665Q_hYEeaxkoRKVpmNyQ" target="_T665fPhYEeaxkoRKVpmNyQ" source="_T665UPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T665RPhYEeaxkoRKVpmNyQ" target="_T665kfhYEeaxkoRKVpmNyQ" source="_T665VvhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_T665RfhYEeaxkoRKVpmNyQ" target="_T665SvhYEeaxkoRKVpmNyQ" source="_T665S_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_T665RvhYEeaxkoRKVpmNyQ" target="_T665SvhYEeaxkoRKVpmNyQ" source="_T665UfhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_T665R_hYEeaxkoRKVpmNyQ" target="_T665V_hYEeaxkoRKVpmNyQ" source="_T665SvhYEeaxkoRKVpmNyQ"/>
      <structuredNode xmi:id="_T665S_hYEeaxkoRKVpmNyQ" name="Node(Input(label))" outgoing="_T665RfhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T665TPhYEeaxkoRKVpmNyQ" target="_T665UPhYEeaxkoRKVpmNyQ" source="_T665TfhYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_T665TfhYEeaxkoRKVpmNyQ" name="Input(label)" incoming="_T665QfhYEeaxkoRKVpmNyQ" outgoing="_T665TPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665TvhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665T_hYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_T665UPhYEeaxkoRKVpmNyQ" name="Fork(label)" incoming="_T665TPhYEeaxkoRKVpmNyQ" outgoing="_T665Q_hYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_T665UfhYEeaxkoRKVpmNyQ" name="Node(Input(condition))" outgoing="_T665RvhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T665UvhYEeaxkoRKVpmNyQ" target="_T665VvhYEeaxkoRKVpmNyQ" source="_T665U_hYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_T665U_hYEeaxkoRKVpmNyQ" name="Input(condition)" incoming="_T665QvhYEeaxkoRKVpmNyQ" outgoing="_T665UvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665VPhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665VfhYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_T665VvhYEeaxkoRKVpmNyQ" name="Fork(condition)" incoming="_T665UvhYEeaxkoRKVpmNyQ" outgoing="_T665RPhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_T665V_hYEeaxkoRKVpmNyQ" name="Body(AssertFalse)" incoming="_T665R_hYEeaxkoRKVpmNyQ">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_T665WPhYEeaxkoRKVpmNyQ" name="ExpressionStatement@247113ce">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T665WfhYEeaxkoRKVpmNyQ" target="_T665XfhYEeaxkoRKVpmNyQ" source="_T665dfhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T665WvhYEeaxkoRKVpmNyQ" target="_T665YPhYEeaxkoRKVpmNyQ" source="_T665mvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T665W_hYEeaxkoRKVpmNyQ" target="_T665XPhYEeaxkoRKVpmNyQ" source="_T665Y_hYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_T665XPhYEeaxkoRKVpmNyQ" name="Call(AssertTrue)" incoming="_T665W_hYEeaxkoRKVpmNyQ" behavior="_T666EPhYEeaxkoRKVpmNyQ">
            <argument xmi:id="_T665XfhYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(label)" incoming="_T665WfhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665XvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665X_hYEeaxkoRKVpmNyQ" value="1"/>
            </argument>
            <argument xmi:id="_T665YPhYEeaxkoRKVpmNyQ" name="Call(AssertTrue).argument(condition)" incoming="_T665WvhYEeaxkoRKVpmNyQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665YfhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665YvhYEeaxkoRKVpmNyQ" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T665Y_hYEeaxkoRKVpmNyQ" name="Tuple@152e530d" outgoing="_T665W_hYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665ZPhYEeaxkoRKVpmNyQ" target="_T665efhYEeaxkoRKVpmNyQ" source="_T665b_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665ZfhYEeaxkoRKVpmNyQ" target="_T665iPhYEeaxkoRKVpmNyQ" source="_T665kfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665ZvhYEeaxkoRKVpmNyQ" target="_T665k_hYEeaxkoRKVpmNyQ" source="_T665kfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665Z_hYEeaxkoRKVpmNyQ" target="_T665mfhYEeaxkoRKVpmNyQ" source="_T665lvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665aPhYEeaxkoRKVpmNyQ" target="_T665mvhYEeaxkoRKVpmNyQ" source="_T665i_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665afhYEeaxkoRKVpmNyQ" target="_T665m_hYEeaxkoRKVpmNyQ" source="_T665mfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665avhYEeaxkoRKVpmNyQ" target="_T665m_hYEeaxkoRKVpmNyQ" source="_T665mfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665a_hYEeaxkoRKVpmNyQ" target="_T665mvhYEeaxkoRKVpmNyQ" source="_T665m_hYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_T665bPhYEeaxkoRKVpmNyQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665bfhYEeaxkoRKVpmNyQ" target="_T665jvhYEeaxkoRKVpmNyQ" source="_T665g_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T665bvhYEeaxkoRKVpmNyQ" name="Value(&quot;! &quot;)">
              <result xmi:id="_T665b_hYEeaxkoRKVpmNyQ" name="Value(&quot;! &quot;).result" outgoing="_T665ZPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665cPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665cfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_T665cvhYEeaxkoRKVpmNyQ" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T665c_hYEeaxkoRKVpmNyQ" name="Node(Call(Concat))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T665dPhYEeaxkoRKVpmNyQ" target="_T665dfhYEeaxkoRKVpmNyQ" source="_T665f_hYEeaxkoRKVpmNyQ"/>
              <structuredNodeOutput xmi:id="_T665dfhYEeaxkoRKVpmNyQ" name="Output(Call(Concat).result(result))" incoming="_T665dPhYEeaxkoRKVpmNyQ" outgoing="_T665WfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665dvhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665d_hYEeaxkoRKVpmNyQ" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T665ePhYEeaxkoRKVpmNyQ" name="Call(Concat)">
                <argument xmi:id="_T665efhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(x)" incoming="_T665ZPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665evhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665e_hYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <argument xmi:id="_T665fPhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(y)" incoming="_T665Q_hYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665ffhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665fvhYEeaxkoRKVpmNyQ" value="1"/>
                </argument>
                <result xmi:id="_T665f_hYEeaxkoRKVpmNyQ" name="Call(Concat).result(result)" outgoing="_T665dPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665gPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665gfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T665gvhYEeaxkoRKVpmNyQ" name="Value(false)">
              <result xmi:id="_T665g_hYEeaxkoRKVpmNyQ" name="Value(false).result" outgoing="_T665bfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665hPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665hfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_T665hvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_T665h_hYEeaxkoRKVpmNyQ" name="Test(==)">
              <first xmi:id="_T665iPhYEeaxkoRKVpmNyQ" name="Test(==).first" incoming="_T665ZfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665ifhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665ivhYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_T665i_hYEeaxkoRKVpmNyQ" name="Test(==).result" outgoing="_T665aPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665jPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665jfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_T665jvhYEeaxkoRKVpmNyQ" name="Test(==).second" incoming="_T665bfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665j_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665kPhYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T665kfhYEeaxkoRKVpmNyQ" name="Fork(Fork(condition))" incoming="_T665RPhYEeaxkoRKVpmNyQ" outgoing="_T665ZfhYEeaxkoRKVpmNyQ _T665ZvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T665kvhYEeaxkoRKVpmNyQ" name="Call(NotEmpty)">
              <argument xmi:id="_T665k_hYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_T665ZvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665lPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665lfhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_T665lvhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_T665Z_hYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665l_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665mPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T665mfhYEeaxkoRKVpmNyQ" name="Fork(Call(NotEmpty).result())" incoming="_T665Z_hYEeaxkoRKVpmNyQ" outgoing="_T665afhYEeaxkoRKVpmNyQ _T665avhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_T665mvhYEeaxkoRKVpmNyQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_T665aPhYEeaxkoRKVpmNyQ _T665a_hYEeaxkoRKVpmNyQ" outgoing="_T665WvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_T665m_hYEeaxkoRKVpmNyQ" name="Decision(Call(NotEmpty).result())" incoming="_T665afhYEeaxkoRKVpmNyQ _T665avhYEeaxkoRKVpmNyQ" outgoing="_T665a_hYEeaxkoRKVpmNyQ" decisionInputFlow="_T665avhYEeaxkoRKVpmNyQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_T665SPhYEeaxkoRKVpmNyQ" name="Input(label)" outgoing="_T665QfhYEeaxkoRKVpmNyQ" parameter="_T665O_hYEeaxkoRKVpmNyQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_T665SfhYEeaxkoRKVpmNyQ" name="Input(condition)" outgoing="_T665QvhYEeaxkoRKVpmNyQ" parameter="_T665PvhYEeaxkoRKVpmNyQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_T665SvhYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_T665RfhYEeaxkoRKVpmNyQ _T665RvhYEeaxkoRKVpmNyQ" outgoing="_T665R_hYEeaxkoRKVpmNyQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_T665nPhYEeaxkoRKVpmNyQ" name="Write" visibility="public" node="_T665qfhYEeaxkoRKVpmNyQ _T665q_hYEeaxkoRKVpmNyQ _T665sfhYEeaxkoRKVpmNyQ _T665qvhYEeaxkoRKVpmNyQ" group="_T665q_hYEeaxkoRKVpmNyQ _T665sfhYEeaxkoRKVpmNyQ">
      <packageImport xmi:id="_T665nfhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_T665nvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_T665n_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_T665oPhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_T665ofhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_T665ovhYEeaxkoRKVpmNyQ" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665o_hYEeaxkoRKVpmNyQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665pPhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T665pfhYEeaxkoRKVpmNyQ" target="_T665rfhYEeaxkoRKVpmNyQ" source="_T665qfhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T665pvhYEeaxkoRKVpmNyQ" target="_T665uvhYEeaxkoRKVpmNyQ" source="_T665sPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_T665p_hYEeaxkoRKVpmNyQ" target="_T665qvhYEeaxkoRKVpmNyQ" source="_T665q_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_T665qPhYEeaxkoRKVpmNyQ" target="_T665sfhYEeaxkoRKVpmNyQ" source="_T665qvhYEeaxkoRKVpmNyQ"/>
      <structuredNode xmi:id="_T665q_hYEeaxkoRKVpmNyQ" name="Node(Input(value))" outgoing="_T665p_hYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T665rPhYEeaxkoRKVpmNyQ" target="_T665sPhYEeaxkoRKVpmNyQ" source="_T665rfhYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_T665rfhYEeaxkoRKVpmNyQ" name="Input(value)" incoming="_T665pfhYEeaxkoRKVpmNyQ" outgoing="_T665rPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665rvhYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665r_hYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_T665sPhYEeaxkoRKVpmNyQ" name="Fork(value)" incoming="_T665rPhYEeaxkoRKVpmNyQ" outgoing="_T665pvhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_T665sfhYEeaxkoRKVpmNyQ" name="Body(Write)" incoming="_T665qPhYEeaxkoRKVpmNyQ">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_T665svhYEeaxkoRKVpmNyQ" name="ExpressionStatement@46e052e5">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_T665s_hYEeaxkoRKVpmNyQ" target="_T6659fhYEeaxkoRKVpmNyQ" source="_T666AvhYEeaxkoRKVpmNyQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_T665tPhYEeaxkoRKVpmNyQ" target="_T665tfhYEeaxkoRKVpmNyQ" source="_T6659vhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_T665tfhYEeaxkoRKVpmNyQ" name="Collect(Call(write))" incoming="_T665tPhYEeaxkoRKVpmNyQ" mode="parallel" inputElement="_T6659fhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665tvhYEeaxkoRKVpmNyQ" target="_T665vvhYEeaxkoRKVpmNyQ" source="_T6659PhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665t_hYEeaxkoRKVpmNyQ" target="_T6651PhYEeaxkoRKVpmNyQ" source="_T665uvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T665uPhYEeaxkoRKVpmNyQ" target="_T665vfhYEeaxkoRKVpmNyQ" source="_T665x_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665ufhYEeaxkoRKVpmNyQ" target="_T665xPhYEeaxkoRKVpmNyQ" source="_T6659fhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_T665uvhYEeaxkoRKVpmNyQ" name="Collect(Call(write)).input(Fork(value))" incoming="_T665pvhYEeaxkoRKVpmNyQ" outgoing="_T665t_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665u_hYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665vPhYEeaxkoRKVpmNyQ" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_T665vfhYEeaxkoRKVpmNyQ" name="Call(write)" incoming="_T665uPhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_T665vvhYEeaxkoRKVpmNyQ" name="Call(write).argument(value)" incoming="_T665tvhYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665v_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665wPhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T665wfhYEeaxkoRKVpmNyQ" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665wvhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665w_hYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_T665xPhYEeaxkoRKVpmNyQ" name="Call(write).target" incoming="_T665ufhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665xfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665xvhYEeaxkoRKVpmNyQ" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T665x_hYEeaxkoRKVpmNyQ" name="Tuple@36db2ef8" outgoing="_T665uPhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T665yPhYEeaxkoRKVpmNyQ" target="_T6653PhYEeaxkoRKVpmNyQ" source="_T6651PhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_T665yfhYEeaxkoRKVpmNyQ" target="_T6652_hYEeaxkoRKVpmNyQ" source="_T6650_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T665yvhYEeaxkoRKVpmNyQ" target="_T6655_hYEeaxkoRKVpmNyQ" source="_T6651PhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_T665y_hYEeaxkoRKVpmNyQ" target="_T6658_hYEeaxkoRKVpmNyQ" source="_T6658vhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T665zPhYEeaxkoRKVpmNyQ" target="_T6658_hYEeaxkoRKVpmNyQ" source="_T6653_hYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_T665zfhYEeaxkoRKVpmNyQ" target="_T6654vhYEeaxkoRKVpmNyQ" source="_T6658_hYEeaxkoRKVpmNyQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_T665zvhYEeaxkoRKVpmNyQ" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_T665z_hYEeaxkoRKVpmNyQ" target="_T6656PhYEeaxkoRKVpmNyQ" source="_T6658_hYEeaxkoRKVpmNyQ">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_T6650PhYEeaxkoRKVpmNyQ" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T6650fhYEeaxkoRKVpmNyQ" target="_T6659PhYEeaxkoRKVpmNyQ" source="_T6655PhYEeaxkoRKVpmNyQ"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T6650vhYEeaxkoRKVpmNyQ" target="_T6659PhYEeaxkoRKVpmNyQ" source="_T6656vhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T6650_hYEeaxkoRKVpmNyQ" name="Operands(EqualityExpression@7191c18b)" outgoing="_T665yfhYEeaxkoRKVpmNyQ">
                <node xmi:type="uml:ForkNode" xmi:id="_T6651PhYEeaxkoRKVpmNyQ" name="Fork()@3f12af2f" incoming="_T665t_hYEeaxkoRKVpmNyQ" outgoing="_T665yPhYEeaxkoRKVpmNyQ _T665yvhYEeaxkoRKVpmNyQ"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_T6651fhYEeaxkoRKVpmNyQ" name="RightHandSide@4fe99105"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T6651vhYEeaxkoRKVpmNyQ" name="Value(null)">
                  <result xmi:id="_T6651_hYEeaxkoRKVpmNyQ" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6652PhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6652fhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_T6652vhYEeaxkoRKVpmNyQ"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_T6652_hYEeaxkoRKVpmNyQ" name="Call(NotEmpty)" incoming="_T665yfhYEeaxkoRKVpmNyQ">
                <argument xmi:id="_T6653PhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_T665yPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6653fhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6653vhYEeaxkoRKVpmNyQ" value="*"/>
                </argument>
                <result xmi:id="_T6653_hYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_T665zPhYEeaxkoRKVpmNyQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6654PhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6654fhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T6654vhYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@30428572.operand2" incoming="_T665zfhYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T6654_hYEeaxkoRKVpmNyQ" target="_T6655PhYEeaxkoRKVpmNyQ" source="_T6655_hYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_T6655PhYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@30428572.operand2.result" incoming="_T6654_hYEeaxkoRKVpmNyQ" outgoing="_T6650fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6655fhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6655vhYEeaxkoRKVpmNyQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_T6655_hYEeaxkoRKVpmNyQ" name="Merge(Fork()@3f12af2f)" incoming="_T665yvhYEeaxkoRKVpmNyQ" outgoing="_T6654_hYEeaxkoRKVpmNyQ"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T6656PhYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@30428572.operand3" incoming="_T665z_hYEeaxkoRKVpmNyQ">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T6656fhYEeaxkoRKVpmNyQ" target="_T6656vhYEeaxkoRKVpmNyQ" source="_T6657vhYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_T6656vhYEeaxkoRKVpmNyQ" name="NullCoalescingExpression@30428572.operand3.result" incoming="_T6656fhYEeaxkoRKVpmNyQ" outgoing="_T6650vhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6656_hYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6657PhYEeaxkoRKVpmNyQ" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T6657fhYEeaxkoRKVpmNyQ" name="Value(&quot;null&quot;)">
                  <result xmi:id="_T6657vhYEeaxkoRKVpmNyQ" name="Value(&quot;null&quot;).result" outgoing="_T6656fhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T6657_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T6658PhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_T6658fhYEeaxkoRKVpmNyQ" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_T6658vhYEeaxkoRKVpmNyQ" name="Initial(NullCoalescingExpression@30428572)" outgoing="_T665y_hYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_T6658_hYEeaxkoRKVpmNyQ" name="Decision(NullCoalescingExpression@30428572)" incoming="_T665y_hYEeaxkoRKVpmNyQ _T665zPhYEeaxkoRKVpmNyQ" outgoing="_T665zfhYEeaxkoRKVpmNyQ _T665z_hYEeaxkoRKVpmNyQ" decisionInputFlow="_T665zPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:MergeNode" xmi:id="_T6659PhYEeaxkoRKVpmNyQ" name="Merge(NullCoalescingExpression@30428572.result)" incoming="_T6650fhYEeaxkoRKVpmNyQ _T6650vhYEeaxkoRKVpmNyQ" outgoing="_T665tvhYEeaxkoRKVpmNyQ"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_T6659fhYEeaxkoRKVpmNyQ" name="Collect(Call(write)).inputElement" incoming="_T665s_hYEeaxkoRKVpmNyQ" outgoing="_T665ufhYEeaxkoRKVpmNyQ" regionAsInput="_T665tfhYEeaxkoRKVpmNyQ"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T6659vhYEeaxkoRKVpmNyQ" name="Feature(Call(At).result())" outgoing="_T665tPhYEeaxkoRKVpmNyQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T6659_hYEeaxkoRKVpmNyQ" target="_T665_PhYEeaxkoRKVpmNyQ" source="_T666B_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665-PhYEeaxkoRKVpmNyQ" target="_T666D_hYEeaxkoRKVpmNyQ" source="_T666C_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T665-fhYEeaxkoRKVpmNyQ" target="_T665-_hYEeaxkoRKVpmNyQ" source="_T666BfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T665-vhYEeaxkoRKVpmNyQ" target="_T665__hYEeaxkoRKVpmNyQ" source="_T666D_hYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T665-_hYEeaxkoRKVpmNyQ" name="Call(At)" incoming="_T665-fhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_T665_PhYEeaxkoRKVpmNyQ" name="Call(At).argument(seq)" incoming="_T6659_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T665_fhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T665_vhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <argument xmi:id="_T665__hYEeaxkoRKVpmNyQ" name="Call(At).argument(index)" incoming="_T665-vhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T666APhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T666AfhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T666AvhYEeaxkoRKVpmNyQ" name="Call(At).result()" outgoing="_T665s_hYEeaxkoRKVpmNyQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T666A_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T666BPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T666BfhYEeaxkoRKVpmNyQ" name="Tuple@47af69bc" outgoing="_T665-fhYEeaxkoRKVpmNyQ">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_T666BvhYEeaxkoRKVpmNyQ" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_T666B_hYEeaxkoRKVpmNyQ" name="ReadExtent(StandardOutputChannel).result" outgoing="_T6659_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T666CPhYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T666CfhYEeaxkoRKVpmNyQ" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T666CvhYEeaxkoRKVpmNyQ" name="Value(1)">
                <result xmi:id="_T666C_hYEeaxkoRKVpmNyQ" name="Value(1).result" outgoing="_T665-PhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T666DPhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T666DfhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_T666DvhYEeaxkoRKVpmNyQ" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T666D_hYEeaxkoRKVpmNyQ" name="Fork(Call(At).argument(index))" incoming="_T665-PhYEeaxkoRKVpmNyQ" outgoing="_T665-vhYEeaxkoRKVpmNyQ"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_T665qfhYEeaxkoRKVpmNyQ" name="Input(value)" outgoing="_T665pfhYEeaxkoRKVpmNyQ" parameter="_T665ovhYEeaxkoRKVpmNyQ"/>
      <node xmi:type="uml:JoinNode" xmi:id="_T665qvhYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_T665p_hYEeaxkoRKVpmNyQ" outgoing="_T665qPhYEeaxkoRKVpmNyQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_T666EPhYEeaxkoRKVpmNyQ" name="AssertTrue" visibility="public" node="_T666J_hYEeaxkoRKVpmNyQ _T666KvhYEeaxkoRKVpmNyQ _T666KPhYEeaxkoRKVpmNyQ _T666MPhYEeaxkoRKVpmNyQ _T666NvhYEeaxkoRKVpmNyQ _T666KfhYEeaxkoRKVpmNyQ" group="_T666KvhYEeaxkoRKVpmNyQ _T666MPhYEeaxkoRKVpmNyQ _T666NvhYEeaxkoRKVpmNyQ">
      <packageImport xmi:id="_T666EfhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_T666EvhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_T666E_hYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_T666FPhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_T666FfhYEeaxkoRKVpmNyQ" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_T666FvhYEeaxkoRKVpmNyQ" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T666F_hYEeaxkoRKVpmNyQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T666GPhYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_T666GfhYEeaxkoRKVpmNyQ" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T666GvhYEeaxkoRKVpmNyQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T666G_hYEeaxkoRKVpmNyQ" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T666HPhYEeaxkoRKVpmNyQ" target="_T666LPhYEeaxkoRKVpmNyQ" source="_T666J_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T666HfhYEeaxkoRKVpmNyQ" target="_T666MvhYEeaxkoRKVpmNyQ" source="_T666KPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T666HvhYEeaxkoRKVpmNyQ" target="_T67gLfhYEeaxkoRKVpmNyQ" source="_T666NfhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T666H_hYEeaxkoRKVpmNyQ" target="_T67gWfhYEeaxkoRKVpmNyQ" source="_T666L_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T666IPhYEeaxkoRKVpmNyQ" target="_T67gYfhYEeaxkoRKVpmNyQ" source="_T666NfhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T666IfhYEeaxkoRKVpmNyQ" target="_T67gafhYEeaxkoRKVpmNyQ" source="_T666L_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T666IvhYEeaxkoRKVpmNyQ" target="_T67gdvhYEeaxkoRKVpmNyQ" source="_T666NfhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_T666I_hYEeaxkoRKVpmNyQ" target="_T67gfvhYEeaxkoRKVpmNyQ" source="_T666L_hYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_T666JPhYEeaxkoRKVpmNyQ" target="_T666KfhYEeaxkoRKVpmNyQ" source="_T666KvhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_T666JfhYEeaxkoRKVpmNyQ" target="_T666KfhYEeaxkoRKVpmNyQ" source="_T666MPhYEeaxkoRKVpmNyQ"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_T666JvhYEeaxkoRKVpmNyQ" target="_T666NvhYEeaxkoRKVpmNyQ" source="_T666KfhYEeaxkoRKVpmNyQ"/>
      <structuredNode xmi:id="_T666KvhYEeaxkoRKVpmNyQ" name="Node(Input(label))" outgoing="_T666JPhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T666K_hYEeaxkoRKVpmNyQ" target="_T666L_hYEeaxkoRKVpmNyQ" source="_T666LPhYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_T666LPhYEeaxkoRKVpmNyQ" name="Input(label)" incoming="_T666HPhYEeaxkoRKVpmNyQ" outgoing="_T666K_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T666LfhYEeaxkoRKVpmNyQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T666LvhYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_T666L_hYEeaxkoRKVpmNyQ" name="Fork(label)" incoming="_T666K_hYEeaxkoRKVpmNyQ" outgoing="_T666H_hYEeaxkoRKVpmNyQ _T666IfhYEeaxkoRKVpmNyQ _T666I_hYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_T666MPhYEeaxkoRKVpmNyQ" name="Node(Input(condition))" outgoing="_T666JfhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T666MfhYEeaxkoRKVpmNyQ" target="_T666NfhYEeaxkoRKVpmNyQ" source="_T666MvhYEeaxkoRKVpmNyQ"/>
        <structuredNodeInput xmi:id="_T666MvhYEeaxkoRKVpmNyQ" name="Input(condition)" incoming="_T666HfhYEeaxkoRKVpmNyQ" outgoing="_T666MfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T666M_hYEeaxkoRKVpmNyQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T666NPhYEeaxkoRKVpmNyQ" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_T666NfhYEeaxkoRKVpmNyQ" name="Fork(condition)" incoming="_T666MfhYEeaxkoRKVpmNyQ" outgoing="_T666HvhYEeaxkoRKVpmNyQ _T666IPhYEeaxkoRKVpmNyQ _T666IvhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <structuredNode xmi:id="_T666NvhYEeaxkoRKVpmNyQ" name="Body(AssertTrue)" incoming="_T666JvhYEeaxkoRKVpmNyQ">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gEPhYEeaxkoRKVpmNyQ" target="_T67gjPhYEeaxkoRKVpmNyQ" source="_T67ghvhYEeaxkoRKVpmNyQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gEfhYEeaxkoRKVpmNyQ" target="_T67gjfhYEeaxkoRKVpmNyQ" source="_T67gifhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_T67gEvhYEeaxkoRKVpmNyQ" name="IfStatement@11084cb5">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T67gE_hYEeaxkoRKVpmNyQ" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gFPhYEeaxkoRKVpmNyQ" target="_T67gJPhYEeaxkoRKVpmNyQ" source="_T67gLfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gFfhYEeaxkoRKVpmNyQ" target="_T67gL_hYEeaxkoRKVpmNyQ" source="_T67gLfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gFvhYEeaxkoRKVpmNyQ" target="_T67gNfhYEeaxkoRKVpmNyQ" source="_T67gMvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gF_hYEeaxkoRKVpmNyQ" target="_T67gNvhYEeaxkoRKVpmNyQ" source="_T67gJ_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gGPhYEeaxkoRKVpmNyQ" target="_T67gN_hYEeaxkoRKVpmNyQ" source="_T67gNfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gGfhYEeaxkoRKVpmNyQ" target="_T67gN_hYEeaxkoRKVpmNyQ" source="_T67gNfhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gGvhYEeaxkoRKVpmNyQ" target="_T67gNvhYEeaxkoRKVpmNyQ" source="_T67gN_hYEeaxkoRKVpmNyQ">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_T67gG_hYEeaxkoRKVpmNyQ" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gHPhYEeaxkoRKVpmNyQ" target="_T67gKvhYEeaxkoRKVpmNyQ" source="_T67gH_hYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gHfhYEeaxkoRKVpmNyQ" target="_T67gOfhYEeaxkoRKVpmNyQ" source="_T67gNvhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T67gHvhYEeaxkoRKVpmNyQ" name="Value(true)">
              <result xmi:id="_T67gH_hYEeaxkoRKVpmNyQ" name="Value(true).result" outgoing="_T67gHPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gIPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gIfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_T67gIvhYEeaxkoRKVpmNyQ" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_T67gI_hYEeaxkoRKVpmNyQ" name="Test(==)">
              <first xmi:id="_T67gJPhYEeaxkoRKVpmNyQ" name="Test(==).first" incoming="_T67gFPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gJfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gJvhYEeaxkoRKVpmNyQ" value="1"/>
              </first>
              <result xmi:id="_T67gJ_hYEeaxkoRKVpmNyQ" name="Test(==).result" outgoing="_T67gF_hYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gKPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gKfhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <second xmi:id="_T67gKvhYEeaxkoRKVpmNyQ" name="Test(==).second" incoming="_T67gHPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gK_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gLPhYEeaxkoRKVpmNyQ" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T67gLfhYEeaxkoRKVpmNyQ" name="Fork(Fork(condition))" incoming="_T666HvhYEeaxkoRKVpmNyQ" outgoing="_T67gFPhYEeaxkoRKVpmNyQ _T67gFfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T67gLvhYEeaxkoRKVpmNyQ" name="Call(NotEmpty)">
              <argument xmi:id="_T67gL_hYEeaxkoRKVpmNyQ" name="Call(NotEmpty).argument(seq)" incoming="_T67gFfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gMPhYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gMfhYEeaxkoRKVpmNyQ" value="*"/>
              </argument>
              <result xmi:id="_T67gMvhYEeaxkoRKVpmNyQ" name="Call(NotEmpty).result()" outgoing="_T67gFvhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gM_hYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gNPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_T67gNfhYEeaxkoRKVpmNyQ" name="Fork(Call(NotEmpty).result())" incoming="_T67gFvhYEeaxkoRKVpmNyQ" outgoing="_T67gGPhYEeaxkoRKVpmNyQ _T67gGfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:MergeNode" xmi:id="_T67gNvhYEeaxkoRKVpmNyQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_T67gF_hYEeaxkoRKVpmNyQ _T67gGvhYEeaxkoRKVpmNyQ" outgoing="_T67gHfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_T67gN_hYEeaxkoRKVpmNyQ" name="Decision(Call(NotEmpty).result())" incoming="_T67gGPhYEeaxkoRKVpmNyQ _T67gGfhYEeaxkoRKVpmNyQ" outgoing="_T67gGvhYEeaxkoRKVpmNyQ" decisionInputFlow="_T67gGfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T67gOPhYEeaxkoRKVpmNyQ" name="Call(Not)">
              <argument xmi:id="_T67gOfhYEeaxkoRKVpmNyQ" name="Call(Not).argument(x)" incoming="_T67gHfhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gOvhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gO_hYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T67gPPhYEeaxkoRKVpmNyQ" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gPfhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gPvhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T67gP_hYEeaxkoRKVpmNyQ" name="ExpressionStatement@23184551">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gQPhYEeaxkoRKVpmNyQ" target="_T67gQ_hYEeaxkoRKVpmNyQ" source="_T67gUvhYEeaxkoRKVpmNyQ"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_T67gQfhYEeaxkoRKVpmNyQ" target="_T67gQvhYEeaxkoRKVpmNyQ" source="_T67gSfhYEeaxkoRKVpmNyQ"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_T67gQvhYEeaxkoRKVpmNyQ" name="Call(WriteLine)" incoming="_T67gQfhYEeaxkoRKVpmNyQ">
              <argument xmi:id="_T67gQ_hYEeaxkoRKVpmNyQ" name="Call(WriteLine).argument(value)" incoming="_T67gQPhYEeaxkoRKVpmNyQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gRPhYEeaxkoRKVpmNyQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gRfhYEeaxkoRKVpmNyQ" value="1"/>
              </argument>
              <result xmi:id="_T67gRvhYEeaxkoRKVpmNyQ" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gR_hYEeaxkoRKVpmNyQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gSPhYEeaxkoRKVpmNyQ" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_T67gSfhYEeaxkoRKVpmNyQ" name="Tuple@351b70c1" outgoing="_T67gQfhYEeaxkoRKVpmNyQ">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gSvhYEeaxkoRKVpmNyQ" target="_T67gVvhYEeaxkoRKVpmNyQ" source="_T67gTPhYEeaxkoRKVpmNyQ"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T67gS_hYEeaxkoRKVpmNyQ" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_T67gTPhYEeaxkoRKVpmNyQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_T67gSvhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gTfhYEeaxkoRKVpmNyQ" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gTvhYEeaxkoRKVpmNyQ" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_T67gT_hYEeaxkoRKVpmNyQ" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_T67gUPhYEeaxkoRKVpmNyQ" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gUfhYEeaxkoRKVpmNyQ" target="_T67gUvhYEeaxkoRKVpmNyQ" source="_T67gXPhYEeaxkoRKVpmNyQ"/>
                <structuredNodeOutput xmi:id="_T67gUvhYEeaxkoRKVpmNyQ" name="Output(Call(Concat).result(result))" incoming="_T67gUfhYEeaxkoRKVpmNyQ" outgoing="_T67gQPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gU_hYEeaxkoRKVpmNyQ"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gVPhYEeaxkoRKVpmNyQ" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_T67gVfhYEeaxkoRKVpmNyQ" name="Call(Concat)">
                  <argument xmi:id="_T67gVvhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(x)" incoming="_T67gSvhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gV_hYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gWPhYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <argument xmi:id="_T67gWfhYEeaxkoRKVpmNyQ" name="Call(Concat).argument(y)" incoming="_T666H_hYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gWvhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gW_hYEeaxkoRKVpmNyQ" value="1"/>
                  </argument>
                  <result xmi:id="_T67gXPhYEeaxkoRKVpmNyQ" name="Call(Concat).result(result)" outgoing="_T67gUfhYEeaxkoRKVpmNyQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gXfhYEeaxkoRKVpmNyQ" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gXvhYEeaxkoRKVpmNyQ" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T67gX_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gYPhYEeaxkoRKVpmNyQ" target="_T67gZPhYEeaxkoRKVpmNyQ" source="_T67gYfhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_T67gYfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(condition)).input" incoming="_T666IPhYEeaxkoRKVpmNyQ" outgoing="_T67gYPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gYvhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gY_hYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_T67gZPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(condition)).output" incoming="_T67gYPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gZfhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gZvhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T67gZ_hYEeaxkoRKVpmNyQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gaPhYEeaxkoRKVpmNyQ" target="_T67gbPhYEeaxkoRKVpmNyQ" source="_T67gafhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_T67gafhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).input" incoming="_T666IfhYEeaxkoRKVpmNyQ" outgoing="_T67gaPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gavhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67ga_hYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_T67gbPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).output" incoming="_T67gaPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gbfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gbvhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_T67gb_hYEeaxkoRKVpmNyQ" name="Value(true)">
            <result xmi:id="_T67gcPhYEeaxkoRKVpmNyQ" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gcfhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gcvhYEeaxkoRKVpmNyQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_T67gc_hYEeaxkoRKVpmNyQ" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T67gdPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gdfhYEeaxkoRKVpmNyQ" target="_T67gefhYEeaxkoRKVpmNyQ" source="_T67gdvhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_T67gdvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(condition)).input" incoming="_T666IvhYEeaxkoRKVpmNyQ" outgoing="_T67gdfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gd_hYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gePhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_T67gefhYEeaxkoRKVpmNyQ" name="Passthru(Fork(condition)).output" incoming="_T67gdfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gevhYEeaxkoRKVpmNyQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67ge_hYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_T67gfPhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_T67gffhYEeaxkoRKVpmNyQ" target="_T67ggfhYEeaxkoRKVpmNyQ" source="_T67gfvhYEeaxkoRKVpmNyQ"/>
            <structuredNodeInput xmi:id="_T67gfvhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).input" incoming="_T666I_hYEeaxkoRKVpmNyQ" outgoing="_T67gffhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gf_hYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67ggPhYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_T67ggfhYEeaxkoRKVpmNyQ" name="Passthru(Fork(label)).output" incoming="_T67gffhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67ggvhYEeaxkoRKVpmNyQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gg_hYEeaxkoRKVpmNyQ" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_T67ghPhYEeaxkoRKVpmNyQ" body="_T67gP_hYEeaxkoRKVpmNyQ _T67gX_hYEeaxkoRKVpmNyQ _T67gZ_hYEeaxkoRKVpmNyQ" bodyOutput="_T67gZPhYEeaxkoRKVpmNyQ _T67gbPhYEeaxkoRKVpmNyQ" decider="_T67gPPhYEeaxkoRKVpmNyQ" successorClause="_T67ghfhYEeaxkoRKVpmNyQ" test="_T67gE_hYEeaxkoRKVpmNyQ"/>
          <clause xmi:id="_T67ghfhYEeaxkoRKVpmNyQ" body="_T67gdPhYEeaxkoRKVpmNyQ _T67gfPhYEeaxkoRKVpmNyQ" bodyOutput="_T67gefhYEeaxkoRKVpmNyQ _T67ggfhYEeaxkoRKVpmNyQ" decider="_T67gcPhYEeaxkoRKVpmNyQ" predecessorClause="_T67ghPhYEeaxkoRKVpmNyQ" test="_T67gb_hYEeaxkoRKVpmNyQ"/>
          <result xmi:id="_T67ghvhYEeaxkoRKVpmNyQ" name="IfStatement@11084cb5.result(condition)" outgoing="_T67gEPhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67gh_hYEeaxkoRKVpmNyQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67giPhYEeaxkoRKVpmNyQ" value="1"/>
          </result>
          <result xmi:id="_T67gifhYEeaxkoRKVpmNyQ" name="IfStatement@11084cb5.result(label)" outgoing="_T67gEfhYEeaxkoRKVpmNyQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T67givhYEeaxkoRKVpmNyQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T67gi_hYEeaxkoRKVpmNyQ" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_T67gjPhYEeaxkoRKVpmNyQ" name="Fork(condition)" incoming="_T67gEPhYEeaxkoRKVpmNyQ"/>
        <node xmi:type="uml:ForkNode" xmi:id="_T67gjfhYEeaxkoRKVpmNyQ" name="Fork(label)" incoming="_T67gEfhYEeaxkoRKVpmNyQ"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_T666J_hYEeaxkoRKVpmNyQ" name="Input(label)" outgoing="_T666HPhYEeaxkoRKVpmNyQ" parameter="_T666FvhYEeaxkoRKVpmNyQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_T666KPhYEeaxkoRKVpmNyQ" name="Input(condition)" outgoing="_T666HfhYEeaxkoRKVpmNyQ" parameter="_T666GfhYEeaxkoRKVpmNyQ">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_T666KfhYEeaxkoRKVpmNyQ" name="Join(Input))" incoming="_T666JPhYEeaxkoRKVpmNyQ _T666JfhYEeaxkoRKVpmNyQ" outgoing="_T666JvhYEeaxkoRKVpmNyQ"/>
    </packagedElement>
    <profileApplication xmi:id="_T67gjvhYEeaxkoRKVpmNyQ">
      <eAnnotations xmi:id="_T67gj_hYEeaxkoRKVpmNyQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_T6-jYPhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_T65rXPhYEeaxkoRKVpmNyQ"/>
  <l2:Create xmi:id="_T7A_oPhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_T65D3fhYEeaxkoRKVpmNyQ"/>
  <l2:Create xmi:id="_T7A_ofhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_T65rWPhYEeaxkoRKVpmNyQ"/>
  <l2:Create xmi:id="_T7A_ovhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_T65E6_hYEeaxkoRKVpmNyQ"/>
  <l2:Create xmi:id="_T7BmsPhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_T65D5PhYEeaxkoRKVpmNyQ"/>
  <l2:Destroy xmi:id="_T7BmsfhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_T65D-PhYEeaxkoRKVpmNyQ"/>
  <l2:Destroy xmi:id="_T7BmsvhYEeaxkoRKVpmNyQ" base_BehavioralFeature="_T65E6fhYEeaxkoRKVpmNyQ"/>
</xmi:XMI>

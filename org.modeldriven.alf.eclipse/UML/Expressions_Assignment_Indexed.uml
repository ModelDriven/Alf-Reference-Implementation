<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_RUXgoCcoEeSLVrU2ifxtpw" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_RUXgoScoEeSLVrU2ifxtpw" name="Expressions_Assignment_Indexed" classifierBehavior="_RUXgqicoEeSLVrU2ifxtpw" isActive="true">
      <packageImport xmi:id="_RUXgoicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RUXgoycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RUXgpCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RUXgpScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RUXgpicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_RUXgpycoEeSLVrU2ifxtpw" name="Expressions_Assignment_Indexed$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXgqCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXgqScoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RUXgqicoEeSLVrU2ifxtpw" name="Expressions_Assignment_Indexed$classifierBehavior$1" visibility="private" isActive="true" node="_RUXgqycoEeSLVrU2ifxtpw" group="_RUXgqycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_RUXgqycoEeSLVrU2ifxtpw" name="Body(Expressions_Assignment_Indexed$classifierBehavior$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXgrCcoEeSLVrU2ifxtpw" target="_RUXg6icoEeSLVrU2ifxtpw" source="_RUXgzycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXgrScoEeSLVrU2ifxtpw" target="_RUXg0ScoEeSLVrU2ifxtpw" source="_RUXgvScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXgricoEeSLVrU2ifxtpw" target="_RUXhGCcoEeSLVrU2ifxtpw" source="_RUXgzycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXgrycoEeSLVrU2ifxtpw" target="_RUXg_ycoEeSLVrU2ifxtpw" source="_RUXg0ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXgsCcoEeSLVrU2ifxtpw" target="_RUXhRicoEeSLVrU2ifxtpw" source="_RUXgzycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXgsScoEeSLVrU2ifxtpw" target="_RUXhLScoEeSLVrU2ifxtpw" source="_RUXg_ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXgsicoEeSLVrU2ifxtpw" target="_RUXhdCcoEeSLVrU2ifxtpw" source="_RUXgzycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXgsycoEeSLVrU2ifxtpw" target="_RUXhWycoEeSLVrU2ifxtpw" source="_RUXhLScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXgtCcoEeSLVrU2ifxtpw" target="_RUXhoicoEeSLVrU2ifxtpw" source="_RUXg0CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXgtScoEeSLVrU2ifxtpw" target="_RUXhiScoEeSLVrU2ifxtpw" source="_RUXhWycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXgticoEeSLVrU2ifxtpw" target="_RUXh0CcoEeSLVrU2ifxtpw" source="_RUXg0CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXgtycoEeSLVrU2ifxtpw" target="_RUXhtycoEeSLVrU2ifxtpw" source="_RUXhiScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXguCcoEeSLVrU2ifxtpw" target="_RUXh_icoEeSLVrU2ifxtpw" source="_RUXg0CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXguScoEeSLVrU2ifxtpw" target="_RUXh5ScoEeSLVrU2ifxtpw" source="_RUXhtycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXguicoEeSLVrU2ifxtpw" target="_RUXiLCcoEeSLVrU2ifxtpw" source="_RUXg0CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXguycoEeSLVrU2ifxtpw" target="_RUXiEycoEeSLVrU2ifxtpw" source="_RUXh5ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXgvCcoEeSLVrU2ifxtpw" target="_RUXiQScoEeSLVrU2ifxtpw" source="_RUXiEycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXgvScoEeSLVrU2ifxtpw" name="ExpressionStatement@159fa911" outgoing="_RUXgrScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXgvicoEeSLVrU2ifxtpw" target="_RUXgzycoEeSLVrU2ifxtpw" source="_RUXgwicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXgvycoEeSLVrU2ifxtpw" target="_RUXg0CcoEeSLVrU2ifxtpw" source="_RUXgxScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXgwCcoEeSLVrU2ifxtpw" target="_RUXgyCcoEeSLVrU2ifxtpw" source="_RUXgzCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RUXgwScoEeSLVrU2ifxtpw" name="Call(test)" operation="_RUYIAScoEeSLVrU2ifxtpw">
              <result xmi:id="_RUXgwicoEeSLVrU2ifxtpw" name="Call(test).result(i)" outgoing="_RUXgvicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXgwycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXgxCcoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_RUXgxScoEeSLVrU2ifxtpw" name="Call(test).result(a)" outgoing="_RUXgvycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXgxicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXgxycoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <target xmi:id="_RUXgyCcoEeSLVrU2ifxtpw" name="Call(test).target" incoming="_RUXgwCcoEeSLVrU2ifxtpw" type="_RUXgoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXgyScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXgyicoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RUXgyycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_RUXgzCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RUXgwCcoEeSLVrU2ifxtpw" type="_RUXgoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXgzScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXgzicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXgzycoEeSLVrU2ifxtpw" name="Fork(i)@49c44295" incoming="_RUXgvicoEeSLVrU2ifxtpw" outgoing="_RUXgrCcoEeSLVrU2ifxtpw _RUXgricoEeSLVrU2ifxtpw _RUXgsCcoEeSLVrU2ifxtpw _RUXgsicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXg0CcoEeSLVrU2ifxtpw" name="Fork(a)@6b1a6eae" incoming="_RUXgvycoEeSLVrU2ifxtpw" outgoing="_RUXgtCcoEeSLVrU2ifxtpw _RUXgticoEeSLVrU2ifxtpw _RUXguCcoEeSLVrU2ifxtpw _RUXguicoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXg0ScoEeSLVrU2ifxtpw" name="ExpressionStatement@4e41d2b3" incoming="_RUXgrScoEeSLVrU2ifxtpw" outgoing="_RUXgrycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXg0icoEeSLVrU2ifxtpw" target="_RUXg1ycoEeSLVrU2ifxtpw" source="_RUXg5ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXg0ycoEeSLVrU2ifxtpw" target="_RUXg2icoEeSLVrU2ifxtpw" source="_RUXg8CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXg1CcoEeSLVrU2ifxtpw" target="_RUXg3ScoEeSLVrU2ifxtpw" source="_RUXg-ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXg1ScoEeSLVrU2ifxtpw" target="_RUXg1icoEeSLVrU2ifxtpw" source="_RUXg4CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXg1icoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RUXg1ScoEeSLVrU2ifxtpw" behavior="_RUYIDScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUXg1ycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RUXg0icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXg2CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXg2ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXg2icoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RUXg0ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXg2ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXg3CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXg3ScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RUXg1CcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXg3icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXg3ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXg4CcoEeSLVrU2ifxtpw" name="Tuple@94cf495" outgoing="_RUXg1ScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXg4ScoEeSLVrU2ifxtpw" target="_RUXg-ScoEeSLVrU2ifxtpw" source="_RUXg9ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RUXg4icoEeSLVrU2ifxtpw" target="_RUXg6ScoEeSLVrU2ifxtpw" source="_RUXg8ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXg4ycoEeSLVrU2ifxtpw" target="_RUXg7ScoEeSLVrU2ifxtpw" source="_RUXg-ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXg5CcoEeSLVrU2ifxtpw" name="Value(&quot;i[1]&quot;)">
                <result xmi:id="_RUXg5ScoEeSLVrU2ifxtpw" name="Value(&quot;i[1]&quot;).result" outgoing="_RUXg0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXg5icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXg5ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RUXg6CcoEeSLVrU2ifxtpw" value="i[1]">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXg6ScoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUXg4icoEeSLVrU2ifxtpw">
                <argument xmi:id="_RUXg6icoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUXgrCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXg6ycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXg7CcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_RUXg7ScoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUXg4ycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXg7icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXg7ycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RUXg8CcoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUXg0ycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXg8ScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXg8icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXg8ycoEeSLVrU2ifxtpw" name="Tuple@13f7e75f" outgoing="_RUXg4icoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXg9CcoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_RUXg9ScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RUXg4ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXg9icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXg9ycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RUXg-CcoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RUXg-ScoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUXg4ScoEeSLVrU2ifxtpw" outgoing="_RUXg4ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXg-icoEeSLVrU2ifxtpw" name="Value(0)">
                <result xmi:id="_RUXg-ycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_RUXg1CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXg_CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXg_ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXg_icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXg_ycoEeSLVrU2ifxtpw" name="ExpressionStatement@e59b317" incoming="_RUXgrycoEeSLVrU2ifxtpw" outgoing="_RUXgsScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhACcoEeSLVrU2ifxtpw" target="_RUXhBScoEeSLVrU2ifxtpw" source="_RUXhEycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhAScoEeSLVrU2ifxtpw" target="_RUXhCCcoEeSLVrU2ifxtpw" source="_RUXhHicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhAicoEeSLVrU2ifxtpw" target="_RUXhCycoEeSLVrU2ifxtpw" source="_RUXhKScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXhAycoEeSLVrU2ifxtpw" target="_RUXhBCcoEeSLVrU2ifxtpw" source="_RUXhDicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXhBCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RUXhAycoEeSLVrU2ifxtpw" behavior="_RUYIDScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUXhBScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RUXhACcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhBicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhBycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXhCCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RUXhAScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhCScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhCicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXhCycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RUXhAicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhDCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhDScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXhDicoEeSLVrU2ifxtpw" name="Tuple@12ec5365" outgoing="_RUXhAycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhDycoEeSLVrU2ifxtpw" target="_RUXhJycoEeSLVrU2ifxtpw" source="_RUXhIycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RUXhECcoEeSLVrU2ifxtpw" target="_RUXhFycoEeSLVrU2ifxtpw" source="_RUXhIScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhEScoEeSLVrU2ifxtpw" target="_RUXhGycoEeSLVrU2ifxtpw" source="_RUXhJycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXhEicoEeSLVrU2ifxtpw" name="Value(&quot;i[2]&quot;)">
                <result xmi:id="_RUXhEycoEeSLVrU2ifxtpw" name="Value(&quot;i[2]&quot;).result" outgoing="_RUXhACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhFCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhFScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RUXhFicoEeSLVrU2ifxtpw" value="i[2]">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXhFycoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUXhECcoEeSLVrU2ifxtpw">
                <argument xmi:id="_RUXhGCcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUXgricoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhGScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhGicoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_RUXhGycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUXhEScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhHCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhHScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RUXhHicoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUXhAScoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhHycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhICcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXhIScoEeSLVrU2ifxtpw" name="Tuple@39481d7d" outgoing="_RUXhECcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXhIicoEeSLVrU2ifxtpw" name="Value(2)">
                  <result xmi:id="_RUXhIycoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_RUXhDycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhJCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhJScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RUXhJicoEeSLVrU2ifxtpw" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RUXhJycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUXhDycoEeSLVrU2ifxtpw" outgoing="_RUXhEScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXhKCcoEeSLVrU2ifxtpw" name="Value(5)">
                <result xmi:id="_RUXhKScoEeSLVrU2ifxtpw" name="Value(5).result" outgoing="_RUXhAicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhKicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhKycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXhLCcoEeSLVrU2ifxtpw" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXhLScoEeSLVrU2ifxtpw" name="ExpressionStatement@233c80ad" incoming="_RUXgsScoEeSLVrU2ifxtpw" outgoing="_RUXgsycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhLicoEeSLVrU2ifxtpw" target="_RUXhMycoEeSLVrU2ifxtpw" source="_RUXhQScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhLycoEeSLVrU2ifxtpw" target="_RUXhNicoEeSLVrU2ifxtpw" source="_RUXhTCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhMCcoEeSLVrU2ifxtpw" target="_RUXhOScoEeSLVrU2ifxtpw" source="_RUXhVycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXhMScoEeSLVrU2ifxtpw" target="_RUXhMicoEeSLVrU2ifxtpw" source="_RUXhPCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXhMicoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RUXhMScoEeSLVrU2ifxtpw" behavior="_RUYIDScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUXhMycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RUXhLicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhNCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhNScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXhNicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RUXhLycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhNycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhOCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXhOScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RUXhMCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhOicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhOycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXhPCcoEeSLVrU2ifxtpw" name="Tuple@464786d4" outgoing="_RUXhMScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhPScoEeSLVrU2ifxtpw" target="_RUXhVScoEeSLVrU2ifxtpw" source="_RUXhUScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RUXhPicoEeSLVrU2ifxtpw" target="_RUXhRScoEeSLVrU2ifxtpw" source="_RUXhTycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhPycoEeSLVrU2ifxtpw" target="_RUXhSScoEeSLVrU2ifxtpw" source="_RUXhVScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXhQCcoEeSLVrU2ifxtpw" name="Value(&quot;i[3]&quot;)">
                <result xmi:id="_RUXhQScoEeSLVrU2ifxtpw" name="Value(&quot;i[3]&quot;).result" outgoing="_RUXhLicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhQicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhQycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RUXhRCcoEeSLVrU2ifxtpw" value="i[3]">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXhRScoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUXhPicoEeSLVrU2ifxtpw">
                <argument xmi:id="_RUXhRicoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUXgsCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhRycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhSCcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_RUXhSScoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUXhPycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhSicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhSycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RUXhTCcoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUXhLycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhTScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhTicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXhTycoEeSLVrU2ifxtpw" name="Tuple@367f571d" outgoing="_RUXhPicoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXhUCcoEeSLVrU2ifxtpw" name="Value(3)">
                  <result xmi:id="_RUXhUScoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_RUXhPScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhUicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhUycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RUXhVCcoEeSLVrU2ifxtpw" value="3">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RUXhVScoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUXhPScoEeSLVrU2ifxtpw" outgoing="_RUXhPycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXhVicoEeSLVrU2ifxtpw" name="Value(3)">
                <result xmi:id="_RUXhVycoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_RUXhMCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhWCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhWScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXhWicoEeSLVrU2ifxtpw" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXhWycoEeSLVrU2ifxtpw" name="ExpressionStatement@6f5a6472" incoming="_RUXgsycoEeSLVrU2ifxtpw" outgoing="_RUXgtScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhXCcoEeSLVrU2ifxtpw" target="_RUXhYScoEeSLVrU2ifxtpw" source="_RUXhbycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhXScoEeSLVrU2ifxtpw" target="_RUXhZCcoEeSLVrU2ifxtpw" source="_RUXheicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhXicoEeSLVrU2ifxtpw" target="_RUXhZycoEeSLVrU2ifxtpw" source="_RUXhhScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXhXycoEeSLVrU2ifxtpw" target="_RUXhYCcoEeSLVrU2ifxtpw" source="_RUXhaicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXhYCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RUXhXycoEeSLVrU2ifxtpw" behavior="_RUYIDScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUXhYScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RUXhXCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhYicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhYycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXhZCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RUXhXScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhZScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhZicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXhZycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RUXhXicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhaCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhaScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXhaicoEeSLVrU2ifxtpw" name="Tuple@6e891f79" outgoing="_RUXhXycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhaycoEeSLVrU2ifxtpw" target="_RUXhgycoEeSLVrU2ifxtpw" source="_RUXhfycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RUXhbCcoEeSLVrU2ifxtpw" target="_RUXhcycoEeSLVrU2ifxtpw" source="_RUXhfScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhbScoEeSLVrU2ifxtpw" target="_RUXhdycoEeSLVrU2ifxtpw" source="_RUXhgycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXhbicoEeSLVrU2ifxtpw" name="Value(&quot;i[4]&quot;)">
                <result xmi:id="_RUXhbycoEeSLVrU2ifxtpw" name="Value(&quot;i[4]&quot;).result" outgoing="_RUXhXCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhcCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhcScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RUXhcicoEeSLVrU2ifxtpw" value="i[4]">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXhcycoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUXhbCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_RUXhdCcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUXgsicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhdScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhdicoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_RUXhdycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUXhbScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXheCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXheScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RUXheicoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUXhXScoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXheycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhfCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXhfScoEeSLVrU2ifxtpw" name="Tuple@7fb0c025" outgoing="_RUXhbCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXhficoEeSLVrU2ifxtpw" name="Value(4)">
                  <result xmi:id="_RUXhfycoEeSLVrU2ifxtpw" name="Value(4).result" outgoing="_RUXhaycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhgCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhgScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RUXhgicoEeSLVrU2ifxtpw" value="4">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RUXhgycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUXhaycoEeSLVrU2ifxtpw" outgoing="_RUXhbScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXhhCcoEeSLVrU2ifxtpw" name="Value(4)">
                <result xmi:id="_RUXhhScoEeSLVrU2ifxtpw" name="Value(4).result" outgoing="_RUXhXicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhhicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhhycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXhiCcoEeSLVrU2ifxtpw" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXhiScoEeSLVrU2ifxtpw" name="ExpressionStatement@11d89662" incoming="_RUXgtScoEeSLVrU2ifxtpw" outgoing="_RUXgtycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhiicoEeSLVrU2ifxtpw" target="_RUXhjycoEeSLVrU2ifxtpw" source="_RUXhnScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhiycoEeSLVrU2ifxtpw" target="_RUXhkicoEeSLVrU2ifxtpw" source="_RUXhqCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhjCcoEeSLVrU2ifxtpw" target="_RUXhlScoEeSLVrU2ifxtpw" source="_RUXhsycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXhjScoEeSLVrU2ifxtpw" target="_RUXhjicoEeSLVrU2ifxtpw" source="_RUXhmCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXhjicoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RUXhjScoEeSLVrU2ifxtpw" behavior="_RUYIDScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUXhjycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RUXhiicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhkCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhkScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXhkicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RUXhiycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhkycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhlCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXhlScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RUXhjCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhlicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhlycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXhmCcoEeSLVrU2ifxtpw" name="Tuple@bd9d00b" outgoing="_RUXhjScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhmScoEeSLVrU2ifxtpw" target="_RUXhsScoEeSLVrU2ifxtpw" source="_RUXhrScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RUXhmicoEeSLVrU2ifxtpw" target="_RUXhoScoEeSLVrU2ifxtpw" source="_RUXhqycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhmycoEeSLVrU2ifxtpw" target="_RUXhpScoEeSLVrU2ifxtpw" source="_RUXhsScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXhnCcoEeSLVrU2ifxtpw" name="Value(&quot;a[1]&quot;)">
                <result xmi:id="_RUXhnScoEeSLVrU2ifxtpw" name="Value(&quot;a[1]&quot;).result" outgoing="_RUXhiicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhnicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhnycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RUXhoCcoEeSLVrU2ifxtpw" value="a[1]">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXhoScoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUXhmicoEeSLVrU2ifxtpw">
                <argument xmi:id="_RUXhoicoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUXgtCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhoycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhpCcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_RUXhpScoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUXhmycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhpicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhpycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RUXhqCcoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUXhiycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhqScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhqicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXhqycoEeSLVrU2ifxtpw" name="Tuple@37794c53" outgoing="_RUXhmicoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXhrCcoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_RUXhrScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RUXhmScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhricoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhrycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RUXhsCcoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RUXhsScoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUXhmScoEeSLVrU2ifxtpw" outgoing="_RUXhmycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXhsicoEeSLVrU2ifxtpw" name="Value(0)">
                <result xmi:id="_RUXhsycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_RUXhjCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhtCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhtScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXhticoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXhtycoEeSLVrU2ifxtpw" name="ExpressionStatement@3c4ff559" incoming="_RUXgtycoEeSLVrU2ifxtpw" outgoing="_RUXguScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhuCcoEeSLVrU2ifxtpw" target="_RUXhvScoEeSLVrU2ifxtpw" source="_RUXhyycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhuScoEeSLVrU2ifxtpw" target="_RUXhwCcoEeSLVrU2ifxtpw" source="_RUXh1icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhuicoEeSLVrU2ifxtpw" target="_RUXhwycoEeSLVrU2ifxtpw" source="_RUXh4ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXhuycoEeSLVrU2ifxtpw" target="_RUXhvCcoEeSLVrU2ifxtpw" source="_RUXhxicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXhvCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RUXhuycoEeSLVrU2ifxtpw" behavior="_RUYIDScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUXhvScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RUXhuCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhvicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhvycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXhwCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RUXhuScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhwScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhwicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXhwycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RUXhuicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhxCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhxScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXhxicoEeSLVrU2ifxtpw" name="Tuple@1f06e35c" outgoing="_RUXhuycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhxycoEeSLVrU2ifxtpw" target="_RUXh3ycoEeSLVrU2ifxtpw" source="_RUXh2ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RUXhyCcoEeSLVrU2ifxtpw" target="_RUXhzycoEeSLVrU2ifxtpw" source="_RUXh2ScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXhyScoEeSLVrU2ifxtpw" target="_RUXh0ycoEeSLVrU2ifxtpw" source="_RUXh3ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXhyicoEeSLVrU2ifxtpw" name="Value(&quot;a[2]&quot;)">
                <result xmi:id="_RUXhyycoEeSLVrU2ifxtpw" name="Value(&quot;a[2]&quot;).result" outgoing="_RUXhuCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXhzCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXhzScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RUXhzicoEeSLVrU2ifxtpw" value="a[2]">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXhzycoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUXhyCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_RUXh0CcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUXgticoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXh0ScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXh0icoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_RUXh0ycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUXhyScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXh1CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXh1ScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RUXh1icoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUXhuScoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXh1ycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXh2CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXh2ScoEeSLVrU2ifxtpw" name="Tuple@3fa28ae" outgoing="_RUXhyCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXh2icoEeSLVrU2ifxtpw" name="Value(2)">
                  <result xmi:id="_RUXh2ycoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_RUXhxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXh3CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXh3ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RUXh3icoEeSLVrU2ifxtpw" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RUXh3ycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUXhxycoEeSLVrU2ifxtpw" outgoing="_RUXhyScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXh4CcoEeSLVrU2ifxtpw" name="Value(5)">
                <result xmi:id="_RUXh4ScoEeSLVrU2ifxtpw" name="Value(5).result" outgoing="_RUXhuicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXh4icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXh4ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXh5CcoEeSLVrU2ifxtpw" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXh5ScoEeSLVrU2ifxtpw" name="ExpressionStatement@2477056f" incoming="_RUXguScoEeSLVrU2ifxtpw" outgoing="_RUXguycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXh5icoEeSLVrU2ifxtpw" target="_RUXh6ycoEeSLVrU2ifxtpw" source="_RUXh-ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXh5ycoEeSLVrU2ifxtpw" target="_RUXh7icoEeSLVrU2ifxtpw" source="_RUXiBCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXh6CcoEeSLVrU2ifxtpw" target="_RUXh8ScoEeSLVrU2ifxtpw" source="_RUXiDycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXh6ScoEeSLVrU2ifxtpw" target="_RUXh6icoEeSLVrU2ifxtpw" source="_RUXh9CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXh6icoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RUXh6ScoEeSLVrU2ifxtpw" behavior="_RUYIDScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUXh6ycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RUXh5icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXh7CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXh7ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXh7icoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RUXh5ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXh7ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXh8CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXh8ScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RUXh6CcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXh8icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXh8ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXh9CcoEeSLVrU2ifxtpw" name="Tuple@6f66492a" outgoing="_RUXh6ScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXh9ScoEeSLVrU2ifxtpw" target="_RUXiDScoEeSLVrU2ifxtpw" source="_RUXiCScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RUXh9icoEeSLVrU2ifxtpw" target="_RUXh_ScoEeSLVrU2ifxtpw" source="_RUXiBycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXh9ycoEeSLVrU2ifxtpw" target="_RUXiAScoEeSLVrU2ifxtpw" source="_RUXiDScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXh-CcoEeSLVrU2ifxtpw" name="Value(&quot;a[3]&quot;)">
                <result xmi:id="_RUXh-ScoEeSLVrU2ifxtpw" name="Value(&quot;a[3]&quot;).result" outgoing="_RUXh5icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXh-icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXh-ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RUXh_CcoEeSLVrU2ifxtpw" value="a[3]">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXh_ScoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUXh9icoEeSLVrU2ifxtpw">
                <argument xmi:id="_RUXh_icoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUXguCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXh_ycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiACcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_RUXiAScoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUXh9ycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiAicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiAycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RUXiBCcoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUXh5ycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiBScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiBicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXiBycoEeSLVrU2ifxtpw" name="Tuple@5b48f6b8" outgoing="_RUXh9icoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXiCCcoEeSLVrU2ifxtpw" name="Value(3)">
                  <result xmi:id="_RUXiCScoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_RUXh9ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiCicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiCycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RUXiDCcoEeSLVrU2ifxtpw" value="3">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RUXiDScoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUXh9ScoEeSLVrU2ifxtpw" outgoing="_RUXh9ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXiDicoEeSLVrU2ifxtpw" name="Value(5)">
                <result xmi:id="_RUXiDycoEeSLVrU2ifxtpw" name="Value(5).result" outgoing="_RUXh6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiECcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiEScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXiEicoEeSLVrU2ifxtpw" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXiEycoEeSLVrU2ifxtpw" name="ExpressionStatement@62757508" incoming="_RUXguycoEeSLVrU2ifxtpw" outgoing="_RUXgvCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiFCcoEeSLVrU2ifxtpw" target="_RUXiGScoEeSLVrU2ifxtpw" source="_RUXiJycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiFScoEeSLVrU2ifxtpw" target="_RUXiHCcoEeSLVrU2ifxtpw" source="_RUXiMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiFicoEeSLVrU2ifxtpw" target="_RUXiHycoEeSLVrU2ifxtpw" source="_RUXiPScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXiFycoEeSLVrU2ifxtpw" target="_RUXiGCcoEeSLVrU2ifxtpw" source="_RUXiIicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXiGCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RUXiFycoEeSLVrU2ifxtpw" behavior="_RUYIDScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUXiGScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RUXiFCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiGicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiGycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXiHCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RUXiFScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiHScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiHicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXiHycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RUXiFicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiICcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiIScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXiIicoEeSLVrU2ifxtpw" name="Tuple@2bb235f9" outgoing="_RUXiFycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiIycoEeSLVrU2ifxtpw" target="_RUXiOycoEeSLVrU2ifxtpw" source="_RUXiNycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RUXiJCcoEeSLVrU2ifxtpw" target="_RUXiKycoEeSLVrU2ifxtpw" source="_RUXiNScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiJScoEeSLVrU2ifxtpw" target="_RUXiLycoEeSLVrU2ifxtpw" source="_RUXiOycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXiJicoEeSLVrU2ifxtpw" name="Value(&quot;a[4]&quot;)">
                <result xmi:id="_RUXiJycoEeSLVrU2ifxtpw" name="Value(&quot;a[4]&quot;).result" outgoing="_RUXiFCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiKCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiKScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RUXiKicoEeSLVrU2ifxtpw" value="a[4]">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXiKycoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUXiJCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_RUXiLCcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUXguicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiLScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiLicoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_RUXiLycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUXiJScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiMCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiMScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RUXiMicoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUXiFScoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiMycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiNCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXiNScoEeSLVrU2ifxtpw" name="Tuple@3f0103e" outgoing="_RUXiJCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXiNicoEeSLVrU2ifxtpw" name="Value(4)">
                  <result xmi:id="_RUXiNycoEeSLVrU2ifxtpw" name="Value(4).result" outgoing="_RUXiIycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiOCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiOScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RUXiOicoEeSLVrU2ifxtpw" value="4">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RUXiOycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUXiIycoEeSLVrU2ifxtpw" outgoing="_RUXiJScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXiPCcoEeSLVrU2ifxtpw" name="Value(7)">
                <result xmi:id="_RUXiPScoEeSLVrU2ifxtpw" name="Value(7).result" outgoing="_RUXiFicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiPicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiPycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXiQCcoEeSLVrU2ifxtpw" value="7">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXiQScoEeSLVrU2ifxtpw" name="ExpressionStatement@320e63ef" incoming="_RUXgvCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiQicoEeSLVrU2ifxtpw" target="_RUXiRScoEeSLVrU2ifxtpw" source="_RUXiTScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXiQycoEeSLVrU2ifxtpw" target="_RUXiRCcoEeSLVrU2ifxtpw" source="_RUXiSycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXiRCcoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_RUXiQycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUXiRScoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_RUXiQicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiRicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiRycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXiSCcoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiSScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiSicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXiSycoEeSLVrU2ifxtpw" name="Tuple@2c9d964f" outgoing="_RUXiQycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXiTCcoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;)">
                <result xmi:id="_RUXiTScoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;).result" outgoing="_RUXiQicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiTicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiTycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RUXiUCcoEeSLVrU2ifxtpw" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RUXiUScoEeSLVrU2ifxtpw" name="test$method$1" specification="_RUYIAScoEeSLVrU2ifxtpw" node="_RUXiWicoEeSLVrU2ifxtpw _RUXiWycoEeSLVrU2ifxtpw _RUXiXCcoEeSLVrU2ifxtpw" group="_RUXiXCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_RUXiUicoEeSLVrU2ifxtpw" name="i" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiUycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiVCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RUXiVScoEeSLVrU2ifxtpw" name="a" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiVicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiVycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiWCcoEeSLVrU2ifxtpw" target="_RUXiWicoEeSLVrU2ifxtpw" source="_RUXidicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiWScoEeSLVrU2ifxtpw" target="_RUXiWycoEeSLVrU2ifxtpw" source="_RUXieScoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_RUXiXCcoEeSLVrU2ifxtpw" name="Body(test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiXScoEeSLVrU2ifxtpw" target="_RUXi8ycoEeSLVrU2ifxtpw" source="_RUXificoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXiXicoEeSLVrU2ifxtpw" target="_RUXi5ScoEeSLVrU2ifxtpw" source="_RUXifCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiXycoEeSLVrU2ifxtpw" target="_RUXjEScoEeSLVrU2ifxtpw" source="_RUXi_ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiYCcoEeSLVrU2ifxtpw" target="_RUXjLScoEeSLVrU2ifxtpw" source="_RUXi_ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiYScoEeSLVrU2ifxtpw" target="_RUXjPycoEeSLVrU2ifxtpw" source="_RUXi_ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXiYicoEeSLVrU2ifxtpw" target="_RUXjBicoEeSLVrU2ifxtpw" source="_RUXi5ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiYycoEeSLVrU2ifxtpw" target="_RUXjUCcoEeSLVrU2ifxtpw" source="_RUXjOScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXiZCcoEeSLVrU2ifxtpw" target="_RUXjTycoEeSLVrU2ifxtpw" source="_RUXjBicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiZScoEeSLVrU2ifxtpw" target="_RUXjYCcoEeSLVrU2ifxtpw" source="_RUXjUCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXiZicoEeSLVrU2ifxtpw" target="_RUXjUicoEeSLVrU2ifxtpw" source="_RUXjTycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiZycoEeSLVrU2ifxtpw" target="_RUXjgScoEeSLVrU2ifxtpw" source="_RUXjbCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXiaCcoEeSLVrU2ifxtpw" target="_RUXjcycoEeSLVrU2ifxtpw" source="_RUXjUicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiaScoEeSLVrU2ifxtpw" target="_RUXjoicoEeSLVrU2ifxtpw" source="_RUXjjScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXiaicoEeSLVrU2ifxtpw" target="_RUXjlCcoEeSLVrU2ifxtpw" source="_RUXjcycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiaycoEeSLVrU2ifxtpw" target="_RUXjwCcoEeSLVrU2ifxtpw" source="_RUXjricoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXibCcoEeSLVrU2ifxtpw" target="_RUXj3CcoEeSLVrU2ifxtpw" source="_RUXjricoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXibScoEeSLVrU2ifxtpw" target="_RUXjtScoEeSLVrU2ifxtpw" source="_RUXjlCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXibicoEeSLVrU2ifxtpw" target="_RUXj-icoEeSLVrU2ifxtpw" source="_RUXj6CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXibycoEeSLVrU2ifxtpw" target="_RUXkFicoEeSLVrU2ifxtpw" source="_RUXj6CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXicCcoEeSLVrU2ifxtpw" target="_RUXj7ycoEeSLVrU2ifxtpw" source="_RUXjtScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXicScoEeSLVrU2ifxtpw" target="_RUXkNCcoEeSLVrU2ifxtpw" source="_RUXkIicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXicicoEeSLVrU2ifxtpw" target="_RUXkUCcoEeSLVrU2ifxtpw" source="_RUXkIicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXicycoEeSLVrU2ifxtpw" target="_RUXkKScoEeSLVrU2ifxtpw" source="_RUXj7ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXidCcoEeSLVrU2ifxtpw" target="_RUXidicoEeSLVrU2ifxtpw" source="_RUXjOScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXidScoEeSLVrU2ifxtpw" target="_RUXieScoEeSLVrU2ifxtpw" source="_RUXkXCcoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_RUXidicoEeSLVrU2ifxtpw" name="Output(i)" incoming="_RUXidCcoEeSLVrU2ifxtpw" outgoing="_RUXiWCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXidycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXieCcoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RUXieScoEeSLVrU2ifxtpw" name="Output(a)" incoming="_RUXidScoEeSLVrU2ifxtpw" outgoing="_RUXiWScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXieicoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXieycoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXifCcoEeSLVrU2ifxtpw" name="ExpressionStatement@1f5f4665" outgoing="_RUXiXicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXifScoEeSLVrU2ifxtpw" target="_RUXificoEeSLVrU2ifxtpw" source="_RUXihCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXificoEeSLVrU2ifxtpw" name="Fork(i)@1d83b781" incoming="_RUXifScoEeSLVrU2ifxtpw" outgoing="_RUXiXScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXifycoEeSLVrU2ifxtpw" name="RightHandSide@236d0460">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXigCcoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@236d0460">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXigScoEeSLVrU2ifxtpw" target="_RUXi0ycoEeSLVrU2ifxtpw" source="_RUXiiCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXigicoEeSLVrU2ifxtpw" target="_RUXi1icoEeSLVrU2ifxtpw" source="_RUXijScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXigycoEeSLVrU2ifxtpw" target="_RUXihCcoEeSLVrU2ifxtpw" source="_RUXi4icoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_RUXihCcoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@236d0460.output" incoming="_RUXigycoEeSLVrU2ifxtpw" outgoing="_RUXifScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXihScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXihicoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXihycoEeSLVrU2ifxtpw" name="Value(1)">
                  <result xmi:id="_RUXiiCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RUXigScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiiScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiiicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RUXiiycoEeSLVrU2ifxtpw" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXijCcoEeSLVrU2ifxtpw" name="Value(4)">
                  <result xmi:id="_RUXijScoEeSLVrU2ifxtpw" name="Value(4).result" outgoing="_RUXigicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXijicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXijycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RUXikCcoEeSLVrU2ifxtpw" value="4">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:LoopNode" xmi:id="_RUXikScoEeSLVrU2ifxtpw" name="SequenceRange@4886521b" bodyOutput="_RUXitScoEeSLVrU2ifxtpw _RUXivScoEeSLVrU2ifxtpw _RUXixycoEeSLVrU2ifxtpw" bodyPart="_RUXiqScoEeSLVrU2ifxtpw _RUXiricoEeSLVrU2ifxtpw _RUXiuCcoEeSLVrU2ifxtpw _RUXiwCcoEeSLVrU2ifxtpw" decider="_RUXipicoEeSLVrU2ifxtpw" isTestedFirst="true" test="_RUXinycoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXikicoEeSLVrU2ifxtpw" target="_RUXinCcoEeSLVrU2ifxtpw" source="_RUXiyicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXikycoEeSLVrU2ifxtpw" target="_RUXinScoEeSLVrU2ifxtpw" source="_RUXizScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXilCcoEeSLVrU2ifxtpw" target="_RUXinicoEeSLVrU2ifxtpw" source="_RUXi0CcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXilScoEeSLVrU2ifxtpw" target="_RUXioCcoEeSLVrU2ifxtpw" source="_RUXinCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXilicoEeSLVrU2ifxtpw" target="_RUXioycoEeSLVrU2ifxtpw" source="_RUXinScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXilycoEeSLVrU2ifxtpw" target="_RUXirycoEeSLVrU2ifxtpw" source="_RUXinCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXimCcoEeSLVrU2ifxtpw" target="_RUXisicoEeSLVrU2ifxtpw" source="_RUXiqicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXimScoEeSLVrU2ifxtpw" target="_RUXiuicoEeSLVrU2ifxtpw" source="_RUXinScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXimicoEeSLVrU2ifxtpw" target="_RUXiwScoEeSLVrU2ifxtpw" source="_RUXi0CcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXimycoEeSLVrU2ifxtpw" target="_RUXixCcoEeSLVrU2ifxtpw" source="_RUXinCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_RUXinCcoEeSLVrU2ifxtpw" name="Fork(SequenceRange@4886521b.loopVariable()(rangeLower))" incoming="_RUXikicoEeSLVrU2ifxtpw" outgoing="_RUXilScoEeSLVrU2ifxtpw _RUXilycoEeSLVrU2ifxtpw _RUXimycoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_RUXinScoEeSLVrU2ifxtpw" name="Fork(SequenceRange@4886521b.loopVariable()(rangeUpper))" incoming="_RUXikycoEeSLVrU2ifxtpw" outgoing="_RUXilicoEeSLVrU2ifxtpw _RUXimScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_RUXinicoEeSLVrU2ifxtpw" name="Fork(SequenceRange@4886521b.loopVariable()(range))" incoming="_RUXilCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXinycoEeSLVrU2ifxtpw" name="Call(&lt;=)">
                    <argument xmi:id="_RUXioCcoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(x)" incoming="_RUXilScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXioScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXioicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_RUXioycoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(y)" incoming="_RUXilicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXipCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXipScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RUXipicoEeSLVrU2ifxtpw" name="Call(&lt;=).result(result)">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXipycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiqCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXiqScoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_RUXiqicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RUXimCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiqycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXirCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_RUXirScoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXiricoEeSLVrU2ifxtpw" name="Call(+)">
                    <argument xmi:id="_RUXirycoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RUXilycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXisCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXisScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_RUXisicoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RUXimCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXisycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXitCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RUXitScoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiticoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXitycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXiuCcoEeSLVrU2ifxtpw" name="Node(SequenceRange@4886521b.loopVariable()(rangeUpper)">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXiuScoEeSLVrU2ifxtpw" target="_RUXivScoEeSLVrU2ifxtpw" source="_RUXiuicoEeSLVrU2ifxtpw"/>
                    <structuredNodeInput xmi:id="_RUXiuicoEeSLVrU2ifxtpw" name="Node(SequenceRange@4886521b.loopVariable()(rangeUpper).input" incoming="_RUXimScoEeSLVrU2ifxtpw" outgoing="_RUXiuScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiuycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXivCcoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeInput>
                    <structuredNodeOutput xmi:id="_RUXivScoEeSLVrU2ifxtpw" name="Node(SequenceRange@4886521b.loopVariable()(rangeUpper).output" incoming="_RUXiuScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXivicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXivycoEeSLVrU2ifxtpw" value="1"/>
                    </structuredNodeOutput>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXiwCcoEeSLVrU2ifxtpw" name="Call(Including)">
                    <argument xmi:id="_RUXiwScoEeSLVrU2ifxtpw" name="Call(Including).argument(seq)" incoming="_RUXimicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiwicoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiwycoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_RUXixCcoEeSLVrU2ifxtpw" name="Call(Including).argument(element)" incoming="_RUXimycoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXixScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXixicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RUXixycoEeSLVrU2ifxtpw" name="Call(Including).result()" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiyCcoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXiyScoEeSLVrU2ifxtpw" value="*"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
                  </node>
                  <loopVariable xmi:id="_RUXiyicoEeSLVrU2ifxtpw" name="SequenceRange@4886521b.loopVariable()(rangeLower)" outgoing="_RUXikicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXiyycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXizCcoEeSLVrU2ifxtpw" value="1"/>
                  </loopVariable>
                  <loopVariable xmi:id="_RUXizScoEeSLVrU2ifxtpw" name="SequenceRange@4886521b.loopVariable()(rangeUpper)" outgoing="_RUXikycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXizicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXizycoEeSLVrU2ifxtpw" value="1"/>
                  </loopVariable>
                  <loopVariable xmi:id="_RUXi0CcoEeSLVrU2ifxtpw" name="SequenceRange@4886521b.loopVariable()(range)" outgoing="_RUXilCcoEeSLVrU2ifxtpw _RUXimicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXi0ScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXi0icoEeSLVrU2ifxtpw" value="*"/>
                  </loopVariable>
                  <loopVariableInput xmi:id="_RUXi0ycoEeSLVrU2ifxtpw" name="SequenceRange@4886521b.loopVariableInput(rangeLower)" incoming="_RUXigScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXi1CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXi1ScoEeSLVrU2ifxtpw" value="1"/>
                  </loopVariableInput>
                  <loopVariableInput xmi:id="_RUXi1icoEeSLVrU2ifxtpw" name="SequenceRange@4886521b.loopVariableInput(rangeUpper)" incoming="_RUXigicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXi1ycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXi2CcoEeSLVrU2ifxtpw" value="1"/>
                  </loopVariableInput>
                  <loopVariableInput xmi:id="_RUXi2ScoEeSLVrU2ifxtpw" name="SequenceRange@4886521b.loopVariableInput(range)" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXi2icoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXi2ycoEeSLVrU2ifxtpw" value="*"/>
                  </loopVariableInput>
                  <result xmi:id="_RUXi3CcoEeSLVrU2ifxtpw" name="SequenceRange@4886521b.result(rangeLower)" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXi3ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXi3icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <result xmi:id="_RUXi3ycoEeSLVrU2ifxtpw" name="SequenceRange@4886521b.result(rangeUpper)" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXi4CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXi4ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <result xmi:id="_RUXi4icoEeSLVrU2ifxtpw" name="SequenceRange@4886521b.result(range)" outgoing="_RUXigycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXi4ycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXi5CcoEeSLVrU2ifxtpw" value="*"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXi5ScoEeSLVrU2ifxtpw" name="ExpressionStatement@9f49560" incoming="_RUXiXicoEeSLVrU2ifxtpw" outgoing="_RUXiYicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXi5icoEeSLVrU2ifxtpw" target="_RUXi9icoEeSLVrU2ifxtpw" source="_RUXi7icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXi5ycoEeSLVrU2ifxtpw" target="_RUXi-ScoEeSLVrU2ifxtpw" source="_RUXi6ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXi6CcoEeSLVrU2ifxtpw" target="_RUXi_ycoEeSLVrU2ifxtpw" source="_RUXi_CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXi6ScoEeSLVrU2ifxtpw" target="_RUXi6ycoEeSLVrU2ifxtpw" source="_RUXjAicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXi6icoEeSLVrU2ifxtpw" target="_RUXi7CcoEeSLVrU2ifxtpw" source="_RUXjACcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXi6ycoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@1a94802)" incoming="_RUXi6ScoEeSLVrU2ifxtpw" outgoing="_RUXi5ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXi7CcoEeSLVrU2ifxtpw" name="Index(LeftHandSide@1a94802)" incoming="_RUXi6icoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXi7ScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RUXi7icoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RUXi5icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXi7ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXi8CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXi8ScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXi8icoEeSLVrU2ifxtpw" name="Call(ReplacingAt)">
              <argument xmi:id="_RUXi8ycoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(seq)" incoming="_RUXiXScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXi9CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXi9ScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RUXi9icoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(index)" incoming="_RUXi5icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXi9ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXi-CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXi-ScoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(element)" incoming="_RUXi5ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXi-icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXi-ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXi_CcoEeSLVrU2ifxtpw" name="Call(ReplacingAt).result()" outgoing="_RUXi6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXi_ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXi_icoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ReplacingAt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXi_ycoEeSLVrU2ifxtpw" name="Fork(i)" incoming="_RUXi6CcoEeSLVrU2ifxtpw" outgoing="_RUXiYScoEeSLVrU2ifxtpw _RUXiXycoEeSLVrU2ifxtpw _RUXiYCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjACcoEeSLVrU2ifxtpw" name="RightHandSide@7981903f" outgoing="_RUXi6icoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXjAScoEeSLVrU2ifxtpw" name="Value(0)">
                <result xmi:id="_RUXjAicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_RUXi6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjAycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjBCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXjBScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjBicoEeSLVrU2ifxtpw" name="ExpressionStatement@11746615" incoming="_RUXiYicoEeSLVrU2ifxtpw" outgoing="_RUXiZCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjBycoEeSLVrU2ifxtpw" target="_RUXjICcoEeSLVrU2ifxtpw" source="_RUXjHCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXjCCcoEeSLVrU2ifxtpw" target="_RUXjECcoEeSLVrU2ifxtpw" source="_RUXjGicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjCScoEeSLVrU2ifxtpw" target="_RUXjFCcoEeSLVrU2ifxtpw" source="_RUXjICcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjCicoEeSLVrU2ifxtpw" target="_RUXjIicoEeSLVrU2ifxtpw" source="_RUXjFycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjCycoEeSLVrU2ifxtpw" target="_RUXjJScoEeSLVrU2ifxtpw" source="_RUXjRScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjDCcoEeSLVrU2ifxtpw" target="_RUXjMCcoEeSLVrU2ifxtpw" source="_RUXjICcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjDScoEeSLVrU2ifxtpw" target="_RUXjMycoEeSLVrU2ifxtpw" source="_RUXjKycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjDicoEeSLVrU2ifxtpw" target="_RUXjOScoEeSLVrU2ifxtpw" source="_RUXjNicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjDycoEeSLVrU2ifxtpw" target="_RUXjKycoEeSLVrU2ifxtpw" source="_RUXjKCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXjECcoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUXjCCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUXjEScoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUXiXycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjEicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjEycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RUXjFCcoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUXjCScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjFScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjFicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXjFycoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUXjCicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjGCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjGScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjGicoEeSLVrU2ifxtpw" name="Tuple@5431c9ff" outgoing="_RUXjCCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXjGycoEeSLVrU2ifxtpw" name="Value(2)">
                <result xmi:id="_RUXjHCcoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_RUXjBycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjHScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjHicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXjHycoEeSLVrU2ifxtpw" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXjICcoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUXjBycoEeSLVrU2ifxtpw" outgoing="_RUXjCScoEeSLVrU2ifxtpw _RUXjDCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXjIScoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_RUXjIicoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RUXjCicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjIycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjJCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXjJScoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RUXjCycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjJicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjJycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXjKCcoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_RUXjDycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjKScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjKicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXjKycoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@58b343a9)" incoming="_RUXjDycoEeSLVrU2ifxtpw" outgoing="_RUXjDScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXjLCcoEeSLVrU2ifxtpw" name="Call(ReplacingAt)">
              <argument xmi:id="_RUXjLScoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(seq)" incoming="_RUXiYCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjLicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjLycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RUXjMCcoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(index)" incoming="_RUXjDCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjMScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjMicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXjMycoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(element)" incoming="_RUXjDScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjNCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjNScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXjNicoEeSLVrU2ifxtpw" name="Call(ReplacingAt).result()" outgoing="_RUXjDicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjNycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjOCcoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ReplacingAt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXjOScoEeSLVrU2ifxtpw" name="Fork(i)" incoming="_RUXjDicoEeSLVrU2ifxtpw" outgoing="_RUXiYycoEeSLVrU2ifxtpw _RUXidCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjOicoEeSLVrU2ifxtpw" name="RightHandSide@74e4d58d">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjOycoEeSLVrU2ifxtpw" target="_RUXjTicoEeSLVrU2ifxtpw" source="_RUXjSicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RUXjPCcoEeSLVrU2ifxtpw" target="_RUXjPicoEeSLVrU2ifxtpw" source="_RUXjSCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjPScoEeSLVrU2ifxtpw" target="_RUXjQicoEeSLVrU2ifxtpw" source="_RUXjTicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXjPicoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUXjPCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_RUXjPycoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUXiYScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjQCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjQScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_RUXjQicoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUXjPScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjQycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjRCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RUXjRScoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUXjCycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjRicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjRycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjSCcoEeSLVrU2ifxtpw" name="Tuple@2046bc37" outgoing="_RUXjPCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXjSScoEeSLVrU2ifxtpw" name="Value(3)">
                  <result xmi:id="_RUXjSicoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_RUXjOycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjSycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjTCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_RUXjTScoEeSLVrU2ifxtpw" value="3">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_RUXjTicoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUXjOycoEeSLVrU2ifxtpw" outgoing="_RUXjPScoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjTycoEeSLVrU2ifxtpw" name="ExpressionStatement@76206c9a" incoming="_RUXiZCcoEeSLVrU2ifxtpw" outgoing="_RUXiZicoEeSLVrU2ifxtpw">
            <node xmi:type="uml:ForkNode" xmi:id="_RUXjUCcoEeSLVrU2ifxtpw" name="Fork(a)@4aba2f0c" incoming="_RUXiYycoEeSLVrU2ifxtpw" outgoing="_RUXiZScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjUScoEeSLVrU2ifxtpw" name="RightHandSide@566e328"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjUicoEeSLVrU2ifxtpw" name="ExpressionStatement@1a8257aa" incoming="_RUXiZicoEeSLVrU2ifxtpw" outgoing="_RUXiaCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjUycoEeSLVrU2ifxtpw" target="_RUXjYycoEeSLVrU2ifxtpw" source="_RUXjWycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjVCcoEeSLVrU2ifxtpw" target="_RUXjZicoEeSLVrU2ifxtpw" source="_RUXjWCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjVScoEeSLVrU2ifxtpw" target="_RUXjbCcoEeSLVrU2ifxtpw" source="_RUXjaScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjVicoEeSLVrU2ifxtpw" target="_RUXjWCcoEeSLVrU2ifxtpw" source="_RUXjbycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXjVycoEeSLVrU2ifxtpw" target="_RUXjWScoEeSLVrU2ifxtpw" source="_RUXjbScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXjWCcoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@208494cd)" incoming="_RUXjVicoEeSLVrU2ifxtpw" outgoing="_RUXjVCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjWScoEeSLVrU2ifxtpw" name="Index(LeftHandSide@208494cd)" incoming="_RUXjVycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXjWicoEeSLVrU2ifxtpw" name="Value(3)">
                <result xmi:id="_RUXjWycoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_RUXjUycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjXCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjXScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXjXicoEeSLVrU2ifxtpw" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXjXycoEeSLVrU2ifxtpw" name="Call(ReplacingAt)">
              <argument xmi:id="_RUXjYCcoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(seq)" incoming="_RUXiZScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjYScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjYicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RUXjYycoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(index)" incoming="_RUXjUycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjZCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjZScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXjZicoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(element)" incoming="_RUXjVCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjZycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjaCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXjaScoEeSLVrU2ifxtpw" name="Call(ReplacingAt).result()" outgoing="_RUXjVScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjaicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjaycoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ReplacingAt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXjbCcoEeSLVrU2ifxtpw" name="Fork(a)" incoming="_RUXjVScoEeSLVrU2ifxtpw" outgoing="_RUXiZycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjbScoEeSLVrU2ifxtpw" name="RightHandSide@4ca20429" outgoing="_RUXjVycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXjbicoEeSLVrU2ifxtpw" name="Value(5)">
                <result xmi:id="_RUXjbycoEeSLVrU2ifxtpw" name="Value(5).result" outgoing="_RUXjVicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjcCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjcScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXjcicoEeSLVrU2ifxtpw" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjcycoEeSLVrU2ifxtpw" name="ExpressionStatement@286ee8d5" incoming="_RUXiaCcoEeSLVrU2ifxtpw" outgoing="_RUXiaicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjdCcoEeSLVrU2ifxtpw" target="_RUXjhCcoEeSLVrU2ifxtpw" source="_RUXjfCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjdScoEeSLVrU2ifxtpw" target="_RUXjhycoEeSLVrU2ifxtpw" source="_RUXjeScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjdicoEeSLVrU2ifxtpw" target="_RUXjjScoEeSLVrU2ifxtpw" source="_RUXjiicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjdycoEeSLVrU2ifxtpw" target="_RUXjeScoEeSLVrU2ifxtpw" source="_RUXjkCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXjeCcoEeSLVrU2ifxtpw" target="_RUXjeicoEeSLVrU2ifxtpw" source="_RUXjjicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXjeScoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@b121f48)" incoming="_RUXjdycoEeSLVrU2ifxtpw" outgoing="_RUXjdScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjeicoEeSLVrU2ifxtpw" name="Index(LeftHandSide@b121f48)" incoming="_RUXjeCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXjeycoEeSLVrU2ifxtpw" name="Value(3)">
                <result xmi:id="_RUXjfCcoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_RUXjdCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjfScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjficoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXjfycoEeSLVrU2ifxtpw" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXjgCcoEeSLVrU2ifxtpw" name="Call(ReplacingAt)">
              <argument xmi:id="_RUXjgScoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(seq)" incoming="_RUXiZycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjgicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjgycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RUXjhCcoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(index)" incoming="_RUXjdCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjhScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjhicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXjhycoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(element)" incoming="_RUXjdScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjiCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjiScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXjiicoEeSLVrU2ifxtpw" name="Call(ReplacingAt).result()" outgoing="_RUXjdicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjiycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjjCcoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ReplacingAt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXjjScoEeSLVrU2ifxtpw" name="Fork(test::a)" incoming="_RUXjdicoEeSLVrU2ifxtpw" outgoing="_RUXiaScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjjicoEeSLVrU2ifxtpw" name="RightHandSide@211b2d16" outgoing="_RUXjeCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXjjycoEeSLVrU2ifxtpw" name="Value(5)">
                <result xmi:id="_RUXjkCcoEeSLVrU2ifxtpw" name="Value(5).result" outgoing="_RUXjdycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjkScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjkicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXjkycoEeSLVrU2ifxtpw" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjlCcoEeSLVrU2ifxtpw" name="ExpressionStatement@7071457b" incoming="_RUXiaicoEeSLVrU2ifxtpw" outgoing="_RUXibScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjlScoEeSLVrU2ifxtpw" target="_RUXjpScoEeSLVrU2ifxtpw" source="_RUXjnScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjlicoEeSLVrU2ifxtpw" target="_RUXjqCcoEeSLVrU2ifxtpw" source="_RUXjmicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjlycoEeSLVrU2ifxtpw" target="_RUXjricoEeSLVrU2ifxtpw" source="_RUXjqycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjmCcoEeSLVrU2ifxtpw" target="_RUXjmicoEeSLVrU2ifxtpw" source="_RUXjsScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXjmScoEeSLVrU2ifxtpw" target="_RUXjmycoEeSLVrU2ifxtpw" source="_RUXjrycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXjmicoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@46a30ef0)" incoming="_RUXjmCcoEeSLVrU2ifxtpw" outgoing="_RUXjlicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjmycoEeSLVrU2ifxtpw" name="Index(LeftHandSide@46a30ef0)" incoming="_RUXjmScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXjnCcoEeSLVrU2ifxtpw" name="Value(3)">
                <result xmi:id="_RUXjnScoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_RUXjlScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjnicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjnycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXjoCcoEeSLVrU2ifxtpw" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXjoScoEeSLVrU2ifxtpw" name="Call(ReplacingAt)">
              <argument xmi:id="_RUXjoicoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(seq)" incoming="_RUXiaScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjoycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjpCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RUXjpScoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(index)" incoming="_RUXjlScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjpicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjpycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXjqCcoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(element)" incoming="_RUXjlicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjqScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjqicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXjqycoEeSLVrU2ifxtpw" name="Call(ReplacingAt).result()" outgoing="_RUXjlycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjrCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjrScoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ReplacingAt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXjricoEeSLVrU2ifxtpw" name="Fork(test::a)" incoming="_RUXjlycoEeSLVrU2ifxtpw" outgoing="_RUXiaycoEeSLVrU2ifxtpw _RUXibCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjrycoEeSLVrU2ifxtpw" name="RightHandSide@4c6a22dd" outgoing="_RUXjmScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXjsCcoEeSLVrU2ifxtpw" name="Value(5)">
                <result xmi:id="_RUXjsScoEeSLVrU2ifxtpw" name="Value(5).result" outgoing="_RUXjmCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjsicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjsycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXjtCcoEeSLVrU2ifxtpw" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjtScoEeSLVrU2ifxtpw" name="ExpressionStatement@44264431" incoming="_RUXibScoEeSLVrU2ifxtpw" outgoing="_RUXicCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjticoEeSLVrU2ifxtpw" target="_RUXjzycoEeSLVrU2ifxtpw" source="_RUXjyycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXjtycoEeSLVrU2ifxtpw" target="_RUXjvycoEeSLVrU2ifxtpw" source="_RUXjyScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjuCcoEeSLVrU2ifxtpw" target="_RUXjwycoEeSLVrU2ifxtpw" source="_RUXjzycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjuScoEeSLVrU2ifxtpw" target="_RUXj0ScoEeSLVrU2ifxtpw" source="_RUXjxicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjuicoEeSLVrU2ifxtpw" target="_RUXj1CcoEeSLVrU2ifxtpw" source="_RUXj6ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjuycoEeSLVrU2ifxtpw" target="_RUXj3ycoEeSLVrU2ifxtpw" source="_RUXjzycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjvCcoEeSLVrU2ifxtpw" target="_RUXj4icoEeSLVrU2ifxtpw" source="_RUXj2icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjvScoEeSLVrU2ifxtpw" target="_RUXj6CcoEeSLVrU2ifxtpw" source="_RUXj5ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXjvicoEeSLVrU2ifxtpw" target="_RUXj2icoEeSLVrU2ifxtpw" source="_RUXj1ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXjvycoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUXjtycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUXjwCcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUXiaycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjwScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjwicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RUXjwycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUXjuCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjxCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjxScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXjxicoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUXjuScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjxycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjyCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXjyScoEeSLVrU2ifxtpw" name="Tuple@276dfc04" outgoing="_RUXjtycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXjyicoEeSLVrU2ifxtpw" name="Value(4)">
                <result xmi:id="_RUXjyycoEeSLVrU2ifxtpw" name="Value(4).result" outgoing="_RUXjticoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXjzCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXjzScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXjzicoEeSLVrU2ifxtpw" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXjzycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUXjticoEeSLVrU2ifxtpw" outgoing="_RUXjuCcoEeSLVrU2ifxtpw _RUXjuycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXj0CcoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_RUXj0ScoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RUXjuScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXj0icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXj0ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXj1CcoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RUXjuicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXj1ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXj1icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXj1ycoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_RUXjvicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXj2CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXj2ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXj2icoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@326712c2)" incoming="_RUXjvicoEeSLVrU2ifxtpw" outgoing="_RUXjvCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXj2ycoEeSLVrU2ifxtpw" name="Call(ReplacingAt)">
              <argument xmi:id="_RUXj3CcoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(seq)" incoming="_RUXibCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXj3ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXj3icoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RUXj3ycoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(index)" incoming="_RUXjuycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXj4CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXj4ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXj4icoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(element)" incoming="_RUXjvCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXj4ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXj5CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXj5ScoEeSLVrU2ifxtpw" name="Call(ReplacingAt).result()" outgoing="_RUXjvScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXj5icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXj5ycoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ReplacingAt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXj6CcoEeSLVrU2ifxtpw" name="Fork(a)" incoming="_RUXjvScoEeSLVrU2ifxtpw" outgoing="_RUXibicoEeSLVrU2ifxtpw _RUXibycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXj6ScoEeSLVrU2ifxtpw" name="RightHandSide@1e0be7d2">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXj6icoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RUXj6ycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RUXjuicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXj7CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXj7ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXj7icoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXj7ycoEeSLVrU2ifxtpw" name="ExpressionStatement@3799eda8" incoming="_RUXicCcoEeSLVrU2ifxtpw" outgoing="_RUXicycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXj8CcoEeSLVrU2ifxtpw" target="_RUXkCScoEeSLVrU2ifxtpw" source="_RUXkBScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXj8ScoEeSLVrU2ifxtpw" target="_RUXj-ScoEeSLVrU2ifxtpw" source="_RUXkAycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXj8icoEeSLVrU2ifxtpw" target="_RUXj_ScoEeSLVrU2ifxtpw" source="_RUXkCScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXj8ycoEeSLVrU2ifxtpw" target="_RUXkCycoEeSLVrU2ifxtpw" source="_RUXkACcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXj9CcoEeSLVrU2ifxtpw" target="_RUXkDicoEeSLVrU2ifxtpw" source="_RUXkJScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXj9ScoEeSLVrU2ifxtpw" target="_RUXkGScoEeSLVrU2ifxtpw" source="_RUXkCScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXj9icoEeSLVrU2ifxtpw" target="_RUXkHCcoEeSLVrU2ifxtpw" source="_RUXkFCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXj9ycoEeSLVrU2ifxtpw" target="_RUXkIicoEeSLVrU2ifxtpw" source="_RUXkHycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXj-CcoEeSLVrU2ifxtpw" target="_RUXkFCcoEeSLVrU2ifxtpw" source="_RUXkEScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXj-ScoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUXj8ScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUXj-icoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUXibicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXj-ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXj_CcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RUXj_ScoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUXj8icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXj_icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXj_ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXkACcoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUXj8ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkAScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkAicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXkAycoEeSLVrU2ifxtpw" name="Tuple@2435968a" outgoing="_RUXj8ScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXkBCcoEeSLVrU2ifxtpw" name="Value(4)">
                <result xmi:id="_RUXkBScoEeSLVrU2ifxtpw" name="Value(4).result" outgoing="_RUXj8CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkBicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkBycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXkCCcoEeSLVrU2ifxtpw" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXkCScoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUXj8CcoEeSLVrU2ifxtpw" outgoing="_RUXj8icoEeSLVrU2ifxtpw _RUXj9ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXkCicoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_RUXkCycoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RUXj8ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkDCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkDScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXkDicoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RUXj9CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkDycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkECcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXkEScoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_RUXj-CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkEicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkEycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXkFCcoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@38f239f1)" incoming="_RUXj-CcoEeSLVrU2ifxtpw" outgoing="_RUXj9icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXkFScoEeSLVrU2ifxtpw" name="Call(ReplacingAt)">
              <argument xmi:id="_RUXkFicoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(seq)" incoming="_RUXibycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkFycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkGCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RUXkGScoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(index)" incoming="_RUXj9ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkGicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkGycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXkHCcoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(element)" incoming="_RUXj9icoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkHScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkHicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXkHycoEeSLVrU2ifxtpw" name="Call(ReplacingAt).result()" outgoing="_RUXj9ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkICcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkIScoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ReplacingAt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXkIicoEeSLVrU2ifxtpw" name="Fork(test::a)" incoming="_RUXj9ycoEeSLVrU2ifxtpw" outgoing="_RUXicScoEeSLVrU2ifxtpw _RUXicicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXkIycoEeSLVrU2ifxtpw" name="RightHandSide@3269a206">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXkJCcoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RUXkJScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RUXj9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkJicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkJycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXkKCcoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXkKScoEeSLVrU2ifxtpw" name="ExpressionStatement@2972a1fd" incoming="_RUXicycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkKicoEeSLVrU2ifxtpw" target="_RUXkQycoEeSLVrU2ifxtpw" source="_RUXkPycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUXkKycoEeSLVrU2ifxtpw" target="_RUXkMycoEeSLVrU2ifxtpw" source="_RUXkPScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkLCcoEeSLVrU2ifxtpw" target="_RUXkNycoEeSLVrU2ifxtpw" source="_RUXkQycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkLScoEeSLVrU2ifxtpw" target="_RUXkRScoEeSLVrU2ifxtpw" source="_RUXkOicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkLicoEeSLVrU2ifxtpw" target="_RUXkSCcoEeSLVrU2ifxtpw" source="_RUXkXycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkLycoEeSLVrU2ifxtpw" target="_RUXkUycoEeSLVrU2ifxtpw" source="_RUXkQycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkMCcoEeSLVrU2ifxtpw" target="_RUXkVicoEeSLVrU2ifxtpw" source="_RUXkTicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkMScoEeSLVrU2ifxtpw" target="_RUXkXCcoEeSLVrU2ifxtpw" source="_RUXkWScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkMicoEeSLVrU2ifxtpw" target="_RUXkTicoEeSLVrU2ifxtpw" source="_RUXkSycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXkMycoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUXkKycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUXkNCcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUXicScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkNScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkNicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RUXkNycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUXkLCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkOCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkOScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXkOicoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUXkLScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkOycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkPCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXkPScoEeSLVrU2ifxtpw" name="Tuple@701f2d94" outgoing="_RUXkKycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXkPicoEeSLVrU2ifxtpw" name="Value(4)">
                <result xmi:id="_RUXkPycoEeSLVrU2ifxtpw" name="Value(4).result" outgoing="_RUXkKicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkQCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkQScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXkQicoEeSLVrU2ifxtpw" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXkQycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUXkKicoEeSLVrU2ifxtpw" outgoing="_RUXkLCcoEeSLVrU2ifxtpw _RUXkLycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXkRCcoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_RUXkRScoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RUXkLScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkRicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkRycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXkSCcoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RUXkLicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkSScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkSicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXkSycoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_RUXkMicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkTCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkTScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXkTicoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@7f4aaa58)" incoming="_RUXkMicoEeSLVrU2ifxtpw" outgoing="_RUXkMCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXkTycoEeSLVrU2ifxtpw" name="Call(ReplacingAt)">
              <argument xmi:id="_RUXkUCcoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(seq)" incoming="_RUXicicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkUScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkUicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RUXkUycoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(index)" incoming="_RUXkLycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkVCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkVScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RUXkVicoEeSLVrU2ifxtpw" name="Call(ReplacingAt).argument(element)" incoming="_RUXkMCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkVycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkWCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUXkWScoEeSLVrU2ifxtpw" name="Call(ReplacingAt).result()" outgoing="_RUXkMScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkWicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkWycoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ReplacingAt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUXkXCcoEeSLVrU2ifxtpw" name="Fork(test::a)" incoming="_RUXkMScoEeSLVrU2ifxtpw" outgoing="_RUXidScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXkXScoEeSLVrU2ifxtpw" name="RightHandSide@188dbbe3">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXkXicoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RUXkXycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RUXkLicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkYCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkYScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUXkYicoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RUXiWicoEeSLVrU2ifxtpw" name="Output(i)" incoming="_RUXiWCcoEeSLVrU2ifxtpw" parameter="_RUXiUicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RUXiWycoEeSLVrU2ifxtpw" name="Output(a)" incoming="_RUXiWScoEeSLVrU2ifxtpw" parameter="_RUXiVScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RUXkYycoEeSLVrU2ifxtpw" name="Expressions_Assignment_Indexed$method$1" specification="_RUYICCcoEeSLVrU2ifxtpw" node="_RUXkaCcoEeSLVrU2ifxtpw _RUXkaScoEeSLVrU2ifxtpw" group="_RUXkaScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_RUXkZCcoEeSLVrU2ifxtpw" name="" type="_RUXgoScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkZScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkZicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkZycoEeSLVrU2ifxtpw" target="_RUXkaCcoEeSLVrU2ifxtpw" source="_RUXkeicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_RUXkaScoEeSLVrU2ifxtpw" name="Body(Expressions_Assignment_Indexed$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkaicoEeSLVrU2ifxtpw" target="_RUXkeicoEeSLVrU2ifxtpw" source="_RUXkdycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkaycoEeSLVrU2ifxtpw" target="_RUXkfCcoEeSLVrU2ifxtpw" source="_RUXkeicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXkbCcoEeSLVrU2ifxtpw" target="_RUXkdScoEeSLVrU2ifxtpw" source="_RUXkeycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkbScoEeSLVrU2ifxtpw" target="_RUXkgCcoEeSLVrU2ifxtpw" source="_RUXkeicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkbicoEeSLVrU2ifxtpw" target="_RUXkhycoEeSLVrU2ifxtpw" source="_RUXkgycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkbycoEeSLVrU2ifxtpw" target="_RUYHsScoEeSLVrU2ifxtpw" source="_RUXkiicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkcCcoEeSLVrU2ifxtpw" target="_RUYHtycoEeSLVrU2ifxtpw" source="_RUXkjicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXkcScoEeSLVrU2ifxtpw" target="_RUYHuycoEeSLVrU2ifxtpw" source="_RUYHuicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUXkcicoEeSLVrU2ifxtpw" target="_RUYHuycoEeSLVrU2ifxtpw" source="_RUYHtCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUXkcycoEeSLVrU2ifxtpw" target="_RUXkeycoEeSLVrU2ifxtpw" source="_RUYHuycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RUXkdCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUXkdScoEeSLVrU2ifxtpw" name="Body" incoming="_RUXkbCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RUXkdicoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_RUXkdycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RUXkaicoEeSLVrU2ifxtpw" type="_RUXgoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkeCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkeScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RUXkeicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RUXkaicoEeSLVrU2ifxtpw" outgoing="_RUXkZycoEeSLVrU2ifxtpw _RUXkaycoEeSLVrU2ifxtpw _RUXkbScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_RUXkeycoEeSLVrU2ifxtpw" name="Call(Expressions_Assignment_Indexed$initialization$1)" incoming="_RUXkcycoEeSLVrU2ifxtpw" outgoing="_RUXkbCcoEeSLVrU2ifxtpw" operation="_RUYIACcoEeSLVrU2ifxtpw">
            <target xmi:id="_RUXkfCcoEeSLVrU2ifxtpw" name="Call(Expressions_Assignment_Indexed$initialization$1).target" incoming="_RUXkaycoEeSLVrU2ifxtpw" type="_RUXgoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkfScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkficoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RUXkfycoEeSLVrU2ifxtpw" name="Read(Expressions_Assignment_Indexed$initializationFlag$1)" structuralFeature="_RUXgpycoEeSLVrU2ifxtpw">
            <object xmi:id="_RUXkgCcoEeSLVrU2ifxtpw" name="Read(Expressions_Assignment_Indexed$initializationFlag$1).object" incoming="_RUXkbScoEeSLVrU2ifxtpw" type="_RUXgoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkgScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkgicoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_RUXkgycoEeSLVrU2ifxtpw" name="Read(Expressions_Assignment_Indexed$initializationFlag$1).result" outgoing="_RUXkbicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkhCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkhScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUXkhicoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_RUXkhycoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_RUXkbicoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkiCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkiScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RUXkiicoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_RUXkbycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkiycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkjCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUXkjScoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_RUXkjicoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_RUXkcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUXkjycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUXkkCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RUXkkScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RUYHsCcoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_RUYHsScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_RUXkbycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYHsicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYHsycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_RUYHtCcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_RUXkcicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYHtScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYHticoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_RUYHtycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_RUXkcCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYHuCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYHuScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RUYHuicoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_RUXkcScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RUYHuycoEeSLVrU2ifxtpw" name="Decision(Test(Expressions_Assignment_Indexed$initializationFlag$1))" incoming="_RUXkcScoEeSLVrU2ifxtpw _RUXkcicoEeSLVrU2ifxtpw" outgoing="_RUXkcycoEeSLVrU2ifxtpw" decisionInputFlow="_RUXkcicoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RUXkaCcoEeSLVrU2ifxtpw" name="Return" incoming="_RUXkZycoEeSLVrU2ifxtpw" parameter="_RUXkZCcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RUYHvCcoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_RUYIDCcoEeSLVrU2ifxtpw" node="_RUYHvScoEeSLVrU2ifxtpw" group="_RUYHvScoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_RUYHvScoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RUYHvicoEeSLVrU2ifxtpw" name="Expressions_Assignment_Indexed$initialization$1" specification="_RUYIACcoEeSLVrU2ifxtpw" node="_RUYHvycoEeSLVrU2ifxtpw" group="_RUYHvycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_RUYHvycoEeSLVrU2ifxtpw" name="Body(Expressions_Assignment_Indexed$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYHwCcoEeSLVrU2ifxtpw" target="_RUYHzicoEeSLVrU2ifxtpw" source="_RUYHyycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYHwScoEeSLVrU2ifxtpw" target="_RUYH2CcoEeSLVrU2ifxtpw" source="_RUYHzicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYHwicoEeSLVrU2ifxtpw" target="_RUYH4icoEeSLVrU2ifxtpw" source="_RUYHzicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYHwycoEeSLVrU2ifxtpw" target="_RUYH6ScoEeSLVrU2ifxtpw" source="_RUYH5ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYHxCcoEeSLVrU2ifxtpw" target="_RUYH9ScoEeSLVrU2ifxtpw" source="_RUYH7CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYHxScoEeSLVrU2ifxtpw" target="_RUYH-ycoEeSLVrU2ifxtpw" source="_RUYH8CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUYHxicoEeSLVrU2ifxtpw" target="_RUYH_ycoEeSLVrU2ifxtpw" source="_RUYH_icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYHxycoEeSLVrU2ifxtpw" target="_RUYH_ycoEeSLVrU2ifxtpw" source="_RUYH-CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUYHyCcoEeSLVrU2ifxtpw" target="_RUYHzycoEeSLVrU2ifxtpw" source="_RUYH_ycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RUYHyScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RUYHyicoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_RUYHyycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RUYHwCcoEeSLVrU2ifxtpw" type="_RUXgoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYHzCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYHzScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RUYHzicoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RUYHwCcoEeSLVrU2ifxtpw" outgoing="_RUYHwScoEeSLVrU2ifxtpw _RUYHwicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYHzycoEeSLVrU2ifxtpw" name="Initialization" incoming="_RUYHyCcoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYH0CcoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYH0ScoEeSLVrU2ifxtpw" target="_RUYH3icoEeSLVrU2ifxtpw" source="_RUYH0ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUYH0icoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_RUYH0ycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_RUYH0ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYH1CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYH1ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RUYH1icoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RUYH1ycoEeSLVrU2ifxtpw" name="Write(Expressions_Assignment_Indexed$initializationFlag$1)" structuralFeature="_RUXgpycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_RUYH2CcoEeSLVrU2ifxtpw" name="Write(Expressions_Assignment_Indexed$initializationFlag$1).object" incoming="_RUYHwScoEeSLVrU2ifxtpw" type="_RUXgoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYH2ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYH2icoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RUYH2ycoEeSLVrU2ifxtpw" name="Write(Expressions_Assignment_Indexed$initializationFlag$1).result" type="_RUXgoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYH3CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYH3ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_RUYH3icoEeSLVrU2ifxtpw" name="Write(Expressions_Assignment_Indexed$initializationFlag$1).value" incoming="_RUYH0ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYH3ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYH4CcoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RUYH4ScoEeSLVrU2ifxtpw" name="Read(Expressions_Assignment_Indexed$initializationFlag$1)" structuralFeature="_RUXgpycoEeSLVrU2ifxtpw">
            <object xmi:id="_RUYH4icoEeSLVrU2ifxtpw" name="Read(Expressions_Assignment_Indexed$initializationFlag$1).object" incoming="_RUYHwicoEeSLVrU2ifxtpw" type="_RUXgoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYH4ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYH5CcoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_RUYH5ScoEeSLVrU2ifxtpw" name="Read(Expressions_Assignment_Indexed$initializationFlag$1).result" outgoing="_RUYHwycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYH5icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYH5ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYH6CcoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_RUYH6ScoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_RUYHwycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYH6icoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYH6ycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RUYH7CcoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_RUYHxCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYH7ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYH7icoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUYH7ycoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_RUYH8CcoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_RUYHxScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYH8ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYH8icoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RUYH8ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RUYH9CcoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_RUYH9ScoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_RUYHxCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYH9icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYH9ycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_RUYH-CcoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_RUYHxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYH-ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYH-icoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_RUYH-ycoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_RUYHxScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYH_CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYH_ScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RUYH_icoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_RUYHxicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RUYH_ycoEeSLVrU2ifxtpw" name="Decision(Test(Expressions_Assignment_Indexed$initializationFlag$1))" incoming="_RUYHxicoEeSLVrU2ifxtpw _RUYHxycoEeSLVrU2ifxtpw" outgoing="_RUYHyCcoEeSLVrU2ifxtpw" decisionInputFlow="_RUYHxycoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_RUYIACcoEeSLVrU2ifxtpw" name="Expressions_Assignment_Indexed$initialization$1" visibility="protected" method="_RUYHvicoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_RUYIAScoEeSLVrU2ifxtpw" name="test" visibility="public" method="_RUXiUScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_RUYIAicoEeSLVrU2ifxtpw" name="i" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIAycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIBCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RUYIBScoEeSLVrU2ifxtpw" name="a" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIBicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIBycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_RUYICCcoEeSLVrU2ifxtpw" name="Expressions_Assignment_Indexed" visibility="package" method="_RUXkYycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_RUYICScoEeSLVrU2ifxtpw" name="" visibility="package" type="_RUXgoScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYICicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYICycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_RUYIDCcoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_RUYHvCcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RUYIDScoEeSLVrU2ifxtpw" name="AssertEqual" node="_RUYIJicoEeSLVrU2ifxtpw _RUYIJycoEeSLVrU2ifxtpw _RUYIKCcoEeSLVrU2ifxtpw _RUYIKScoEeSLVrU2ifxtpw _RUYIKicoEeSLVrU2ifxtpw _RUYIKycoEeSLVrU2ifxtpw _RUYILCcoEeSLVrU2ifxtpw" group="_RUYILCcoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_RUYIDicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RUYIDycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RUYIECcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RUYIEScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RUYIEicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RUYIEycoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIFCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIFScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RUYIFicoEeSLVrU2ifxtpw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIFycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIGCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RUYIGScoEeSLVrU2ifxtpw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIGicoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIGycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIHCcoEeSLVrU2ifxtpw" target="_RUYIJycoEeSLVrU2ifxtpw" source="_RUYIJicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIHScoEeSLVrU2ifxtpw" target="_RUYIKScoEeSLVrU2ifxtpw" source="_RUYIKCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIHicoEeSLVrU2ifxtpw" target="_RUYIKycoEeSLVrU2ifxtpw" source="_RUYIKicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIHycoEeSLVrU2ifxtpw" target="_RUYIUScoEeSLVrU2ifxtpw" source="_RUYIKScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIICcoEeSLVrU2ifxtpw" target="_RUYIWScoEeSLVrU2ifxtpw" source="_RUYIKycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIIScoEeSLVrU2ifxtpw" target="_RUYIkCcoEeSLVrU2ifxtpw" source="_RUYIJycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIIicoEeSLVrU2ifxtpw" target="_RUYIticoEeSLVrU2ifxtpw" source="_RUYIKycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIIycoEeSLVrU2ifxtpw" target="_RUYI1CcoEeSLVrU2ifxtpw" source="_RUYIKycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIJCcoEeSLVrU2ifxtpw" target="_RUYI-icoEeSLVrU2ifxtpw" source="_RUYIKycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIJScoEeSLVrU2ifxtpw" target="_RUYJGicoEeSLVrU2ifxtpw" source="_RUYIKycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_RUYILCcoEeSLVrU2ifxtpw" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_RUYILScoEeSLVrU2ifxtpw" name="IfStatement@56869825">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYILicoEeSLVrU2ifxtpw" target="_RUYISCcoEeSLVrU2ifxtpw" source="_RUYIUScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYILycoEeSLVrU2ifxtpw" target="_RUYIUycoEeSLVrU2ifxtpw" source="_RUYIUScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIMCcoEeSLVrU2ifxtpw" target="_RUYITicoEeSLVrU2ifxtpw" source="_RUYIWScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIMScoEeSLVrU2ifxtpw" target="_RUYIWycoEeSLVrU2ifxtpw" source="_RUYIWScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIMicoEeSLVrU2ifxtpw" target="_RUYIYicoEeSLVrU2ifxtpw" source="_RUYIVicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIMycoEeSLVrU2ifxtpw" target="_RUYIYycoEeSLVrU2ifxtpw" source="_RUYIXicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYINCcoEeSLVrU2ifxtpw" target="_RUYIZScoEeSLVrU2ifxtpw" source="_RUYIYicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYINScoEeSLVrU2ifxtpw" target="_RUYIbCcoEeSLVrU2ifxtpw" source="_RUYIYycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYINicoEeSLVrU2ifxtpw" target="_RUYIcicoEeSLVrU2ifxtpw" source="_RUYIYycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUYINycoEeSLVrU2ifxtpw" target="_RUYIRycoEeSLVrU2ifxtpw" source="_RUYIcicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RUYIOCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIOScoEeSLVrU2ifxtpw" target="_RUYIZCcoEeSLVrU2ifxtpw" source="_RUYIcicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RUYIOicoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIOycoEeSLVrU2ifxtpw" target="_RUYIcycoEeSLVrU2ifxtpw" source="_RUYIYScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIPCcoEeSLVrU2ifxtpw" target="_RUYIcycoEeSLVrU2ifxtpw" source="_RUYIYicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIPScoEeSLVrU2ifxtpw" target="_RUYIcicoEeSLVrU2ifxtpw" source="_RUYIcycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RUYIPicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIPycoEeSLVrU2ifxtpw" target="_RUYIaycoEeSLVrU2ifxtpw" source="_RUYIcycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RUYIQCcoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIQScoEeSLVrU2ifxtpw" target="_RUYIdCcoEeSLVrU2ifxtpw" source="_RUYISycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIQicoEeSLVrU2ifxtpw" target="_RUYIdCcoEeSLVrU2ifxtpw" source="_RUYIaCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIQycoEeSLVrU2ifxtpw" target="_RUYIdCcoEeSLVrU2ifxtpw" source="_RUYIbycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIRCcoEeSLVrU2ifxtpw" target="_RUYIdicoEeSLVrU2ifxtpw" source="_RUYIdCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIRScoEeSLVrU2ifxtpw" target="_RUYIpScoEeSLVrU2ifxtpw" source="_RUYIfCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIRicoEeSLVrU2ifxtpw" target="_RUYJIScoEeSLVrU2ifxtpw" source="_RUYIpScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RUYIRycoEeSLVrU2ifxtpw" name="Test(==)" incoming="_RUYINycoEeSLVrU2ifxtpw">
            <first xmi:id="_RUYISCcoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_RUYILicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYISScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYISicoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_RUYISycoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_RUYIQScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYITCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYITScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_RUYITicoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_RUYIMCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYITycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIUCcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RUYIUScoEeSLVrU2ifxtpw" name="Fork(Fork(value1))" incoming="_RUYIHycoEeSLVrU2ifxtpw" outgoing="_RUYILicoEeSLVrU2ifxtpw _RUYILycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYIUicoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_RUYIUycoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RUYILycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIVCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIVScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RUYIVicoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RUYIMicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIVycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIWCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RUYIWScoEeSLVrU2ifxtpw" name="Fork(Fork(value2))" incoming="_RUYIICcoEeSLVrU2ifxtpw" outgoing="_RUYIMCcoEeSLVrU2ifxtpw _RUYIMScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYIWicoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_RUYIWycoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RUYIMScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIXCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIXScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RUYIXicoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RUYIMycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIXycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIYCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RUYIYScoEeSLVrU2ifxtpw" name="Initial(Test(==))" outgoing="_RUYIOycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_RUYIYicoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RUYIMicoEeSLVrU2ifxtpw" outgoing="_RUYINCcoEeSLVrU2ifxtpw _RUYIPCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_RUYIYycoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RUYIMycoEeSLVrU2ifxtpw" outgoing="_RUYINScoEeSLVrU2ifxtpw _RUYINicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYIZCcoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_RUYIOScoEeSLVrU2ifxtpw">
            <argument xmi:id="_RUYIZScoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RUYINCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIZicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIZycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RUYIaCcoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_RUYIQicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIaScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIaicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYIaycoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_RUYIPycoEeSLVrU2ifxtpw">
            <argument xmi:id="_RUYIbCcoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RUYINScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIbScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIbicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RUYIbycoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_RUYIQycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIcCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIcScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_RUYIcicoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RUYINicoEeSLVrU2ifxtpw _RUYIPScoEeSLVrU2ifxtpw" outgoing="_RUYINycoEeSLVrU2ifxtpw _RUYIOScoEeSLVrU2ifxtpw" decisionInputFlow="_RUYINicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RUYIcycoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RUYIOycoEeSLVrU2ifxtpw _RUYIPCcoEeSLVrU2ifxtpw" outgoing="_RUYIPScoEeSLVrU2ifxtpw _RUYIPycoEeSLVrU2ifxtpw" decisionInputFlow="_RUYIPCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_RUYIdCcoEeSLVrU2ifxtpw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_RUYIQScoEeSLVrU2ifxtpw _RUYIQicoEeSLVrU2ifxtpw _RUYIQycoEeSLVrU2ifxtpw" outgoing="_RUYIRCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYIdScoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_RUYIdicoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RUYIRCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIdycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIeCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RUYIeScoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIeicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIeycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYIfCcoEeSLVrU2ifxtpw" name="ExpressionStatement@5e6c65be" outgoing="_RUYIRScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIfScoEeSLVrU2ifxtpw" target="_RUYIgCcoEeSLVrU2ifxtpw" source="_RUYIoicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIficoEeSLVrU2ifxtpw" target="_RUYIfycoEeSLVrU2ifxtpw" source="_RUYIgycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYIfycoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_RUYIficoEeSLVrU2ifxtpw" behavior="_RUYJOCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUYIgCcoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_RUYIfScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIgScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIgicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYIgycoEeSLVrU2ifxtpw" name="Tuple@2e11c35f" outgoing="_RUYIficoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIhCcoEeSLVrU2ifxtpw" target="_RUYIjScoEeSLVrU2ifxtpw" source="_RUYIiCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIhScoEeSLVrU2ifxtpw" target="_RUYInCcoEeSLVrU2ifxtpw" source="_RUYIkycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIhicoEeSLVrU2ifxtpw" target="_RUYInycoEeSLVrU2ifxtpw" source="_RUYIlycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUYIhycoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_RUYIiCcoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_RUYIhCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIiScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIiicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RUYIiycoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYIjCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_RUYIjScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RUYIhCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIjicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIjycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RUYIkCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RUYIIScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIkScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIkicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RUYIkycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RUYIhScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIlCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIlScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUYIlicoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;)">
                <result xmi:id="_RUYIlycoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;).result" outgoing="_RUYIhicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYImCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYImScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RUYImicoEeSLVrU2ifxtpw" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYImycoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_RUYInCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RUYIhScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYInScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYInicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RUYInycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RUYIhicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIoCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIoScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RUYIoicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RUYIfScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIoycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIpCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYIpScoEeSLVrU2ifxtpw" name="ExpressionStatement@2da20234" incoming="_RUYIRScoEeSLVrU2ifxtpw" outgoing="_RUYIRicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIpicoEeSLVrU2ifxtpw" target="_RUYIqScoEeSLVrU2ifxtpw" source="_RUYJICcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIpycoEeSLVrU2ifxtpw" target="_RUYIqCcoEeSLVrU2ifxtpw" source="_RUYIrCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYIqCcoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_RUYIpycoEeSLVrU2ifxtpw" behavior="_RUYJOCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUYIqScoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_RUYIpicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIqicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIqycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYIrCcoEeSLVrU2ifxtpw" name="Tuple@70750b71" outgoing="_RUYIpycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIrScoEeSLVrU2ifxtpw" target="_RUYJHycoEeSLVrU2ifxtpw" source="_RUYJHicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIricoEeSLVrU2ifxtpw" target="_RUYJHycoEeSLVrU2ifxtpw" source="_RUYIuScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIrycoEeSLVrU2ifxtpw" target="_RUYIvCcoEeSLVrU2ifxtpw" source="_RUYJHycoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RUYIsCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIsScoEeSLVrU2ifxtpw" target="_RUYIxicoEeSLVrU2ifxtpw" source="_RUYJHycoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RUYIsicoEeSLVrU2ifxtpw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIsycoEeSLVrU2ifxtpw" target="_RUYJICcoEeSLVrU2ifxtpw" source="_RUYIvicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYItCcoEeSLVrU2ifxtpw" target="_RUYJICcoEeSLVrU2ifxtpw" source="_RUYI0CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYItScoEeSLVrU2ifxtpw" name="Call(IsEmpty)">
                <argument xmi:id="_RUYIticoEeSLVrU2ifxtpw" name="Call(IsEmpty).argument(seq)" incoming="_RUYIIicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYItycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIuCcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_RUYIuScoEeSLVrU2ifxtpw" name="Call(IsEmpty).result()" outgoing="_RUYIricoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIuicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIuycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYIvCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@613d6b63.operand2" incoming="_RUYIrycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIvScoEeSLVrU2ifxtpw" target="_RUYIvicoEeSLVrU2ifxtpw" source="_RUYIwicoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_RUYIvicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@613d6b63.operand2.result" incoming="_RUYIvScoEeSLVrU2ifxtpw" outgoing="_RUYIsycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIvycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIwCcoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUYIwScoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;)">
                  <result xmi:id="_RUYIwicoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;).result" outgoing="_RUYIvScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYIwycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYIxCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RUYIxScoEeSLVrU2ifxtpw" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYIxicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@613d6b63.operand3" incoming="_RUYIsScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIxycoEeSLVrU2ifxtpw" target="_RUYJHCcoEeSLVrU2ifxtpw" source="_RUYJGycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIyCcoEeSLVrU2ifxtpw" target="_RUYJHCcoEeSLVrU2ifxtpw" source="_RUYI1ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIyScoEeSLVrU2ifxtpw" target="_RUYI2icoEeSLVrU2ifxtpw" source="_RUYJHCcoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RUYIyicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RUYIyycoEeSLVrU2ifxtpw" target="_RUYJFScoEeSLVrU2ifxtpw" source="_RUYJHCcoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RUYIzCcoEeSLVrU2ifxtpw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIzScoEeSLVrU2ifxtpw" target="_RUYJHScoEeSLVrU2ifxtpw" source="_RUYI4CcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIzicoEeSLVrU2ifxtpw" target="_RUYJHScoEeSLVrU2ifxtpw" source="_RUYJFycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYIzycoEeSLVrU2ifxtpw" target="_RUYI0CcoEeSLVrU2ifxtpw" source="_RUYJHScoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_RUYI0CcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@613d6b63.operand3.result" incoming="_RUYIzycoEeSLVrU2ifxtpw" outgoing="_RUYItCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYI0ScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYI0icoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RUYI0ycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_RUYI1CcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_RUYIIycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYI1ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYI1icoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_RUYI1ycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_RUYIyCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYI2CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYI2ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYI2icoEeSLVrU2ifxtpw" name="ConditionalTestExpression@7ae6712.operand2" incoming="_RUYIyScoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYI2ycoEeSLVrU2ifxtpw" target="_RUYI_ScoEeSLVrU2ifxtpw" source="_RUYI5CcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYI3CcoEeSLVrU2ifxtpw" target="_RUYJACcoEeSLVrU2ifxtpw" source="_RUYI-ycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYI3ScoEeSLVrU2ifxtpw" target="_RUYJDCcoEeSLVrU2ifxtpw" source="_RUYJAycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYI3icoEeSLVrU2ifxtpw" target="_RUYJDycoEeSLVrU2ifxtpw" source="_RUYJBycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYI3ycoEeSLVrU2ifxtpw" target="_RUYI4CcoEeSLVrU2ifxtpw" source="_RUYJEicoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_RUYI4CcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@7ae6712.operand2.result" incoming="_RUYI3ycoEeSLVrU2ifxtpw" outgoing="_RUYIzScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYI4ScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYI4icoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUYI4ycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_RUYI5CcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_RUYI2ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYI5ScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYI5icoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RUYI5ycoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_RUYI6CcoEeSLVrU2ifxtpw" name="CastExpression@6d3e0146" mode="parallel" outputElement="_RUYI-ycoEeSLVrU2ifxtpw" inputElement="_RUYI-icoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYI6ScoEeSLVrU2ifxtpw" target="_RUYI8icoEeSLVrU2ifxtpw" source="_RUYI-CcoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYI6icoEeSLVrU2ifxtpw" target="_RUYI-ScoEeSLVrU2ifxtpw" source="_RUYI-CcoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYI6ycoEeSLVrU2ifxtpw" target="_RUYI-ScoEeSLVrU2ifxtpw" source="_RUYI9ScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYI7CcoEeSLVrU2ifxtpw" target="_RUYI8CcoEeSLVrU2ifxtpw" source="_RUYI-ScoEeSLVrU2ifxtpw">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_RUYI7ScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYI7icoEeSLVrU2ifxtpw" target="_RUYI-CcoEeSLVrU2ifxtpw" source="_RUYI-icoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYI7ycoEeSLVrU2ifxtpw" target="_RUYI-ycoEeSLVrU2ifxtpw" source="_RUYI8CcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_RUYI8CcoEeSLVrU2ifxtpw" name="Merge(CastExpression@6d3e0146.operand)" incoming="_RUYI7CcoEeSLVrU2ifxtpw" outgoing="_RUYI7ycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RUYI8ScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_RUYI8icoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_RUYI6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYI8ycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYI9CcoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_RUYI9ScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_RUYI6ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYI9icoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYI9ycoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_RUYI-CcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_RUYI7icoEeSLVrU2ifxtpw" outgoing="_RUYI6ScoEeSLVrU2ifxtpw _RUYI6icoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_RUYI-ScoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_RUYI6icoEeSLVrU2ifxtpw _RUYI6ycoEeSLVrU2ifxtpw" outgoing="_RUYI7CcoEeSLVrU2ifxtpw" decisionInputFlow="_RUYI6ycoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_RUYI-icoEeSLVrU2ifxtpw" name="CastExpression@6d3e0146.inputElement" incoming="_RUYIJCcoEeSLVrU2ifxtpw" outgoing="_RUYI7icoEeSLVrU2ifxtpw" regionAsInput="_RUYI6CcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_RUYI-ycoEeSLVrU2ifxtpw" name="CastExpression@6d3e0146.outputElement" incoming="_RUYI7ycoEeSLVrU2ifxtpw" outgoing="_RUYI3CcoEeSLVrU2ifxtpw" regionAsOutput="_RUYI6CcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYI_CcoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_RUYI_ScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RUYI2ycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYI_icoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYI_ycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_RUYJACcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RUYI3CcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJAScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJAicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RUYJAycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RUYI3ScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJBCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJBScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUYJBicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_RUYJBycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_RUYI3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJCCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJCScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RUYJCicoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYJCycoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_RUYJDCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RUYI3ScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJDScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJDicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_RUYJDycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RUYI3icoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJECcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJEScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RUYJEicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RUYI3ycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJEycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJFCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYJFScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@7ae6712.operand3" incoming="_RUYIyycoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYJFicoEeSLVrU2ifxtpw" target="_RUYJFycoEeSLVrU2ifxtpw" source="_RUYJGicoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_RUYJFycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@7ae6712.operand3.result" incoming="_RUYJFicoEeSLVrU2ifxtpw" outgoing="_RUYIzicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJGCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJGScoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_RUYJGicoEeSLVrU2ifxtpw" name="Merge(Fork(value2))" incoming="_RUYIJScoEeSLVrU2ifxtpw" outgoing="_RUYJFicoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_RUYJGycoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@7ae6712)" outgoing="_RUYIxycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_RUYJHCcoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@7ae6712)" incoming="_RUYIxycoEeSLVrU2ifxtpw _RUYIyCcoEeSLVrU2ifxtpw" outgoing="_RUYIyScoEeSLVrU2ifxtpw _RUYIyycoEeSLVrU2ifxtpw" decisionInputFlow="_RUYIyCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_RUYJHScoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@7ae6712.result)" incoming="_RUYIzScoEeSLVrU2ifxtpw _RUYIzicoEeSLVrU2ifxtpw" outgoing="_RUYIzycoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RUYJHicoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@613d6b63)" outgoing="_RUYIrScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_RUYJHycoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@613d6b63)" incoming="_RUYIrScoEeSLVrU2ifxtpw _RUYIricoEeSLVrU2ifxtpw" outgoing="_RUYIrycoEeSLVrU2ifxtpw _RUYIsScoEeSLVrU2ifxtpw" decisionInputFlow="_RUYIricoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_RUYJICcoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@613d6b63.result)" incoming="_RUYIsycoEeSLVrU2ifxtpw _RUYItCcoEeSLVrU2ifxtpw" outgoing="_RUYIpicoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYJIScoEeSLVrU2ifxtpw" name="ExpressionStatement@3ad110e" incoming="_RUYIRicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYJIicoEeSLVrU2ifxtpw" target="_RUYJJScoEeSLVrU2ifxtpw" source="_RUYJLScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUYJIycoEeSLVrU2ifxtpw" target="_RUYJJCcoEeSLVrU2ifxtpw" source="_RUYJKycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYJJCcoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_RUYJIycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUYJJScoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_RUYJIicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJJicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJJycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUYJKCcoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJKScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJKicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYJKycoEeSLVrU2ifxtpw" name="Tuple@177f56f8" outgoing="_RUYJIycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUYJLCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;)">
                <result xmi:id="_RUYJLScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;).result" outgoing="_RUYJIicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJLicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJLycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RUYJMCcoEeSLVrU2ifxtpw" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUYJMScoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_RUYJMicoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJMycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJNCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_RUYJNScoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_RUYJNicoEeSLVrU2ifxtpw" body="_RUYIfCcoEeSLVrU2ifxtpw _RUYIpScoEeSLVrU2ifxtpw _RUYJIScoEeSLVrU2ifxtpw" decider="_RUYIeScoEeSLVrU2ifxtpw" successorClause="_RUYJNycoEeSLVrU2ifxtpw" test="_RUYIRycoEeSLVrU2ifxtpw _RUYIUicoEeSLVrU2ifxtpw _RUYIWicoEeSLVrU2ifxtpw _RUYIZCcoEeSLVrU2ifxtpw _RUYIaycoEeSLVrU2ifxtpw _RUYIdScoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_RUYJNycoEeSLVrU2ifxtpw" decider="_RUYJMicoEeSLVrU2ifxtpw" predecessorClause="_RUYJNicoEeSLVrU2ifxtpw" test="_RUYJMScoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RUYIJicoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_RUYIHCcoEeSLVrU2ifxtpw" parameter="_RUYIEycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RUYIJycoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_RUYIHCcoEeSLVrU2ifxtpw" outgoing="_RUYIIScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RUYIKCcoEeSLVrU2ifxtpw" name="Input(value1)" outgoing="_RUYIHScoEeSLVrU2ifxtpw" parameter="_RUYIFicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RUYIKScoEeSLVrU2ifxtpw" name="Fork(value1)" incoming="_RUYIHScoEeSLVrU2ifxtpw" outgoing="_RUYIHycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RUYIKicoEeSLVrU2ifxtpw" name="Input(value2)" outgoing="_RUYIHicoEeSLVrU2ifxtpw" parameter="_RUYIGScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RUYIKycoEeSLVrU2ifxtpw" name="Fork(value2)" incoming="_RUYIHicoEeSLVrU2ifxtpw" outgoing="_RUYIICcoEeSLVrU2ifxtpw _RUYIIicoEeSLVrU2ifxtpw _RUYIIycoEeSLVrU2ifxtpw _RUYIJCcoEeSLVrU2ifxtpw _RUYIJScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RUYJOCcoEeSLVrU2ifxtpw" name="Write" node="_RUYJQycoEeSLVrU2ifxtpw _RUYJRCcoEeSLVrU2ifxtpw _RUYJRScoEeSLVrU2ifxtpw" group="_RUYJRScoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_RUYJOScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RUYJOicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RUYJOycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RUYJPCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RUYJPScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RUYJPicoEeSLVrU2ifxtpw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJPycoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJQCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYJQScoEeSLVrU2ifxtpw" target="_RUYJRCcoEeSLVrU2ifxtpw" source="_RUYJQycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYJQicoEeSLVrU2ifxtpw" target="_RUYJTCcoEeSLVrU2ifxtpw" source="_RUYJRCcoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_RUYJRScoEeSLVrU2ifxtpw" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYJRicoEeSLVrU2ifxtpw" name="ExpressionStatement@6a17ab7f">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYJRycoEeSLVrU2ifxtpw" target="_RUYJWScoEeSLVrU2ifxtpw" source="_RUYJZicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RUYJSCcoEeSLVrU2ifxtpw" target="_RUYJSScoEeSLVrU2ifxtpw" source="_RUYJWicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_RUYJSScoEeSLVrU2ifxtpw" name="Collect(Call(write))" incoming="_RUYJSCcoEeSLVrU2ifxtpw" mode="parallel" inputElement="_RUYJWScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYJSicoEeSLVrU2ifxtpw" target="_RUYJUCcoEeSLVrU2ifxtpw" source="_RUYJTCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYJSycoEeSLVrU2ifxtpw" target="_RUYJVicoEeSLVrU2ifxtpw" source="_RUYJWScoEeSLVrU2ifxtpw"/>
            <structuredNodeInput xmi:id="_RUYJTCcoEeSLVrU2ifxtpw" name="Collect(Call(write)).input(Fork(value))" incoming="_RUYJQicoEeSLVrU2ifxtpw" outgoing="_RUYJSicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJTScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJTicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RUYJTycoEeSLVrU2ifxtpw" name="Call(write)">
              <argument xmi:id="_RUYJUCcoEeSLVrU2ifxtpw" name="Call(write).argument(value)" incoming="_RUYJSicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJUScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJUicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUYJUycoEeSLVrU2ifxtpw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJVCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJVScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_RUYJVicoEeSLVrU2ifxtpw" name="Call(write).target" incoming="_RUYJSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJVycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJWCcoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_RUYJWScoEeSLVrU2ifxtpw" name="Collect(Call(write)).inputElement" incoming="_RUYJRycoEeSLVrU2ifxtpw" outgoing="_RUYJSycoEeSLVrU2ifxtpw" regionAsInput="_RUYJSScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYJWicoEeSLVrU2ifxtpw" name="Feature(Call(At).result())" outgoing="_RUYJSCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYJWycoEeSLVrU2ifxtpw" target="_RUYJYCcoEeSLVrU2ifxtpw" source="_RUYJaycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYJXCcoEeSLVrU2ifxtpw" target="_RUYJcycoEeSLVrU2ifxtpw" source="_RUYJbycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RUYJXScoEeSLVrU2ifxtpw" target="_RUYJXycoEeSLVrU2ifxtpw" source="_RUYJaScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RUYJXicoEeSLVrU2ifxtpw" target="_RUYJYycoEeSLVrU2ifxtpw" source="_RUYJcycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RUYJXycoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RUYJXScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RUYJYCcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RUYJWycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJYScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJYicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RUYJYycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RUYJXicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJZCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJZScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RUYJZicoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RUYJRycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJZycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJaCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RUYJaScoEeSLVrU2ifxtpw" name="Tuple@3ccc6984" outgoing="_RUYJXScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_RUYJaicoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_RUYJaycoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel).result" outgoing="_RUYJWycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJbCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJbScoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RUYJbicoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RUYJbycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RUYJXCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RUYJcCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYJcScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RUYJcicoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RUYJcycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RUYJXCcoEeSLVrU2ifxtpw" outgoing="_RUYJXicoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RUYJQycoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_RUYJQScoEeSLVrU2ifxtpw" parameter="_RUYJPicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RUYJRCcoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_RUYJQScoEeSLVrU2ifxtpw" outgoing="_RUYJQicoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <profileApplication xmi:id="_RUYJdCcoEeSLVrU2ifxtpw">
      <eAnnotations xmi:id="_RUYJdScoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_RUYJdicoEeSLVrU2ifxtpw" base_BehavioralFeature="_RUYICCcoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_RUYJdycoEeSLVrU2ifxtpw" base_BehavioralFeature="_RUYIDCcoEeSLVrU2ifxtpw"/>
</xmi:XMI>

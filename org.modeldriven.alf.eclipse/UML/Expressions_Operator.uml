<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_18PZUHMaEeeoYuc64YE22w" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_18PZUXMaEeeoYuc64YE22w" name="Expressions_Operator" visibility="public">
      <packageImport xmi:id="_18PZUnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_18PZU3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_18PZVHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_18PZVXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_18PZVnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_18PZV3MaEeeoYuc64YE22w" general="_18R2YHMaEeeoYuc64YE22w"/>
      <ownedAttribute xmi:id="_18PZWHMaEeeoYuc64YE22w" name="Expressions_Operator$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PZWXMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PZWnMaEeeoYuc64YE22w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_18PZW3MaEeeoYuc64YE22w" name="Expressions_Operator$method$1" specification="_18RQ_3MaEeeoYuc64YE22w" node="_18PZYHMaEeeoYuc64YE22w _18PZYXMaEeeoYuc64YE22w" group="_18PZYXMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_18PZXHMaEeeoYuc64YE22w" name="" type="_18PZUXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PZXXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PZXnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZX3MaEeeoYuc64YE22w" target="_18PZYHMaEeeoYuc64YE22w" source="_18PZhXMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_18PZYXMaEeeoYuc64YE22w" name="Body(Expressions_Operator$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZYnMaEeeoYuc64YE22w" target="_18PZhXMaEeeoYuc64YE22w" source="_18PZgnMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PZY3MaEeeoYuc64YE22w" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PZZHMaEeeoYuc64YE22w" name="ExpressionStatement@46a3934c">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZZXMaEeeoYuc64YE22w" target="_18PZeHMaEeeoYuc64YE22w" source="_18PZanMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PZZnMaEeeoYuc64YE22w" target="_18PZd3MaEeeoYuc64YE22w" source="_18PZaHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZZ3MaEeeoYuc64YE22w" target="_18PZfnMaEeeoYuc64YE22w" source="_18PZb3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PZaHMaEeeoYuc64YE22w" name="Tuple@37cb091c" outgoing="_18PZZnMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PZaXMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_18PZanMaEeeoYuc64YE22w" name="Value(null).result" outgoing="_18PZZXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PZa3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PZbHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_18PZbXMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_18PZbnMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_18PZb3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18PZZ3MaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PZcHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PZcXMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PZcnMaEeeoYuc64YE22w" name="Node(Call(run))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZc3MaEeeoYuc64YE22w" target="_18PZdHMaEeeoYuc64YE22w" source="_18PZe3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18PZdHMaEeeoYuc64YE22w" name="Output(Call(run).result())" incoming="_18PZc3MaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PZdXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PZdnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_18PZd3MaEeeoYuc64YE22w" name="Call(run)" incoming="_18PZZnMaEeeoYuc64YE22w" operation="_18RRA3MaEeeoYuc64YE22w">
                  <argument xmi:id="_18PZeHMaEeeoYuc64YE22w" name="Call(run).argument(tester)" incoming="_18PZZXMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PZeXMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PZenMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18PZe3MaEeeoYuc64YE22w" name="Call(run).result()" outgoing="_18PZc3MaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PZfHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PZfXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <target xmi:id="_18PZfnMaEeeoYuc64YE22w" name="Call(run).target" incoming="_18PZZ3MaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PZf3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PZgHMaEeeoYuc64YE22w" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_18PZgXMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_18PZgnMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18PZYnMaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PZg3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PZhHMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_18PZhXMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18PZYnMaEeeoYuc64YE22w" outgoing="_18PZX3MaEeeoYuc64YE22w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18PZYHMaEeeoYuc64YE22w" name="Return" incoming="_18PZX3MaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" parameter="_18PZXHMaEeeoYuc64YE22w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_18PZhnMaEeeoYuc64YE22w" name="run$method$1" specification="_18RRA3MaEeeoYuc64YE22w" node="_18PZknMaEeeoYuc64YE22w _18PZlXMaEeeoYuc64YE22w _18PZk3MaEeeoYuc64YE22w _18PZm3MaEeeoYuc64YE22w _18PZlHMaEeeoYuc64YE22w" group="_18PZlXMaEeeoYuc64YE22w _18PZm3MaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_18PZh3MaEeeoYuc64YE22w" name="tester" type="_18R3WXMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PZiHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PZiXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18PZinMaEeeoYuc64YE22w" name="" type="_18PZUXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PZi3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PZjHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZjXMaEeeoYuc64YE22w" target="_18PZl3MaEeeoYuc64YE22w" source="_18PZknMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZjnMaEeeoYuc64YE22w" target="_18PZk3MaEeeoYuc64YE22w" source="_18QBAnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZj3MaEeeoYuc64YE22w" target="_18QBC3MaEeeoYuc64YE22w" source="_18PZmnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_18PZkHMaEeeoYuc64YE22w" target="_18PZlHMaEeeoYuc64YE22w" source="_18PZlXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_18PZkXMaEeeoYuc64YE22w" target="_18PZm3MaEeeoYuc64YE22w" source="_18PZlHMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_18PZlXMaEeeoYuc64YE22w" name="Node(Input(tester))" outgoing="_18PZkHMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZlnMaEeeoYuc64YE22w" target="_18PZmnMaEeeoYuc64YE22w" source="_18PZl3MaEeeoYuc64YE22w"/>
          <structuredNodeInput xmi:id="_18PZl3MaEeeoYuc64YE22w" name="Input(tester)" incoming="_18PZjXMaEeeoYuc64YE22w" outgoing="_18PZlnMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PZmHMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PZmXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_18PZmnMaEeeoYuc64YE22w" name="Fork(tester)" incoming="_18PZlnMaEeeoYuc64YE22w" outgoing="_18PZj3MaEeeoYuc64YE22w"/>
        </structuredNode>
        <structuredNode xmi:id="_18PZm3MaEeeoYuc64YE22w" name="Body(run$method$1)" incoming="_18PZkXMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZnHMaEeeoYuc64YE22w" target="_18QBAnMaEeeoYuc64YE22w" source="_18QA_3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZnXMaEeeoYuc64YE22w" target="_18QBEnMaEeeoYuc64YE22w" source="_18QBAnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18PZnnMaEeeoYuc64YE22w" target="_18PZqHMaEeeoYuc64YE22w" source="_18QBEXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18PZn3MaEeeoYuc64YE22w" target="_18QBEXMaEeeoYuc64YE22w" source="_18QBA3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZoHMaEeeoYuc64YE22w" target="_18QBFnMaEeeoYuc64YE22w" source="_18QBAnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZoXMaEeeoYuc64YE22w" target="_18QBHXMaEeeoYuc64YE22w" source="_18QBGXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZonMaEeeoYuc64YE22w" target="_18QBKXMaEeeoYuc64YE22w" source="_18QBIHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZo3MaEeeoYuc64YE22w" target="_18QBL3MaEeeoYuc64YE22w" source="_18QBJHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18PZpHMaEeeoYuc64YE22w" target="_18QBM3MaEeeoYuc64YE22w" source="_18QBMnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZpXMaEeeoYuc64YE22w" target="_18QBM3MaEeeoYuc64YE22w" source="_18QBLHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18PZpnMaEeeoYuc64YE22w" target="_18QBA3MaEeeoYuc64YE22w" source="_18QBM3MaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_18PZp3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PZqHMaEeeoYuc64YE22w" name="Body" incoming="_18PZnnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZqXMaEeeoYuc64YE22w" target="_18PalXMaEeeoYuc64YE22w" source="_18PabnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZqnMaEeeoYuc64YE22w" target="_18PajXMaEeeoYuc64YE22w" source="_18PZ6HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZq3MaEeeoYuc64YE22w" target="_18PatnMaEeeoYuc64YE22w" source="_18Pab3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZrHMaEeeoYuc64YE22w" target="_18ParnMaEeeoYuc64YE22w" source="_18PajXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZrXMaEeeoYuc64YE22w" target="_18Paz3MaEeeoYuc64YE22w" source="_18PacHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZrnMaEeeoYuc64YE22w" target="_18Pax3MaEeeoYuc64YE22w" source="_18ParnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZr3MaEeeoYuc64YE22w" target="_18PbBXMaEeeoYuc64YE22w" source="_18PacXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZsHMaEeeoYuc64YE22w" target="_18Pa_XMaEeeoYuc64YE22w" source="_18Pax3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZsXMaEeeoYuc64YE22w" target="_18PbHXMaEeeoYuc64YE22w" source="_18PacnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZsnMaEeeoYuc64YE22w" target="_18PbFnMaEeeoYuc64YE22w" source="_18Pa_XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZs3MaEeeoYuc64YE22w" target="_18PbLXMaEeeoYuc64YE22w" source="_18Pac3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZtHMaEeeoYuc64YE22w" target="_18PbJnMaEeeoYuc64YE22w" source="_18PbFnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZtXMaEeeoYuc64YE22w" target="_18PbPXMaEeeoYuc64YE22w" source="_18PadHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZtnMaEeeoYuc64YE22w" target="_18PbNnMaEeeoYuc64YE22w" source="_18PbJnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZt3MaEeeoYuc64YE22w" target="_18PbTXMaEeeoYuc64YE22w" source="_18PadXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZuHMaEeeoYuc64YE22w" target="_18PbRnMaEeeoYuc64YE22w" source="_18PbNnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZuXMaEeeoYuc64YE22w" target="_18PbXXMaEeeoYuc64YE22w" source="_18PadnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZunMaEeeoYuc64YE22w" target="_18PbVnMaEeeoYuc64YE22w" source="_18PbRnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZu3MaEeeoYuc64YE22w" target="_18PbbXMaEeeoYuc64YE22w" source="_18Pad3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZvHMaEeeoYuc64YE22w" target="_18PbZnMaEeeoYuc64YE22w" source="_18PbVnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZvXMaEeeoYuc64YE22w" target="_18PbfXMaEeeoYuc64YE22w" source="_18PaeHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZvnMaEeeoYuc64YE22w" target="_18PbdnMaEeeoYuc64YE22w" source="_18PbZnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZv3MaEeeoYuc64YE22w" target="_18PbjXMaEeeoYuc64YE22w" source="_18PaeXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZwHMaEeeoYuc64YE22w" target="_18PbhnMaEeeoYuc64YE22w" source="_18PbdnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZwXMaEeeoYuc64YE22w" target="_18PbnXMaEeeoYuc64YE22w" source="_18PaenMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZwnMaEeeoYuc64YE22w" target="_18PblnMaEeeoYuc64YE22w" source="_18PbhnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZw3MaEeeoYuc64YE22w" target="_18PbrXMaEeeoYuc64YE22w" source="_18Pae3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZxHMaEeeoYuc64YE22w" target="_18PbpnMaEeeoYuc64YE22w" source="_18PblnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZxXMaEeeoYuc64YE22w" target="_18PbvXMaEeeoYuc64YE22w" source="_18PafHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZxnMaEeeoYuc64YE22w" target="_18PbtnMaEeeoYuc64YE22w" source="_18PbpnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZx3MaEeeoYuc64YE22w" target="_18PbzXMaEeeoYuc64YE22w" source="_18PafXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZyHMaEeeoYuc64YE22w" target="_18PbxnMaEeeoYuc64YE22w" source="_18PbtnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZyXMaEeeoYuc64YE22w" target="_18Pb3XMaEeeoYuc64YE22w" source="_18PafnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZynMaEeeoYuc64YE22w" target="_18Pb1nMaEeeoYuc64YE22w" source="_18PbxnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZy3MaEeeoYuc64YE22w" target="_18Pb7XMaEeeoYuc64YE22w" source="_18Paf3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZzHMaEeeoYuc64YE22w" target="_18Pb5nMaEeeoYuc64YE22w" source="_18Pb1nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZzXMaEeeoYuc64YE22w" target="_18Pb_XMaEeeoYuc64YE22w" source="_18PagHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZznMaEeeoYuc64YE22w" target="_18Pb9nMaEeeoYuc64YE22w" source="_18Pb5nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZz3MaEeeoYuc64YE22w" target="_18PcDXMaEeeoYuc64YE22w" source="_18PagXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZ0HMaEeeoYuc64YE22w" target="_18PcBnMaEeeoYuc64YE22w" source="_18Pb9nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ0XMaEeeoYuc64YE22w" target="_18PcHXMaEeeoYuc64YE22w" source="_18PagnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZ0nMaEeeoYuc64YE22w" target="_18PcFnMaEeeoYuc64YE22w" source="_18PcBnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ03MaEeeoYuc64YE22w" target="_18PcLnMaEeeoYuc64YE22w" source="_18Pag3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZ1HMaEeeoYuc64YE22w" target="_18PcJnMaEeeoYuc64YE22w" source="_18PcFnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ1XMaEeeoYuc64YE22w" target="_18PcR3MaEeeoYuc64YE22w" source="_18PahHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZ1nMaEeeoYuc64YE22w" target="_18PcP3MaEeeoYuc64YE22w" source="_18PcJnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ13MaEeeoYuc64YE22w" target="_18PcbnMaEeeoYuc64YE22w" source="_18PahXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZ2HMaEeeoYuc64YE22w" target="_18PcZnMaEeeoYuc64YE22w" source="_18PcP3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ2XMaEeeoYuc64YE22w" target="_18PclXMaEeeoYuc64YE22w" source="_18PahnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZ2nMaEeeoYuc64YE22w" target="_18PcjXMaEeeoYuc64YE22w" source="_18PcZnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ23MaEeeoYuc64YE22w" target="_18QAb3MaEeeoYuc64YE22w" source="_18Pah3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZ3HMaEeeoYuc64YE22w" target="_18QAZ3MaEeeoYuc64YE22w" source="_18PcjXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ3XMaEeeoYuc64YE22w" target="_18QAiHMaEeeoYuc64YE22w" source="_18PaiHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZ3nMaEeeoYuc64YE22w" target="_18QAgHMaEeeoYuc64YE22w" source="_18QAZ3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ33MaEeeoYuc64YE22w" target="_18QAoXMaEeeoYuc64YE22w" source="_18PaiXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZ4HMaEeeoYuc64YE22w" target="_18QAmXMaEeeoYuc64YE22w" source="_18QAgHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ4XMaEeeoYuc64YE22w" target="_18QAunMaEeeoYuc64YE22w" source="_18PainMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZ4nMaEeeoYuc64YE22w" target="_18QAsnMaEeeoYuc64YE22w" source="_18QAmXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ43MaEeeoYuc64YE22w" target="_18QA03MaEeeoYuc64YE22w" source="_18Pai3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZ5HMaEeeoYuc64YE22w" target="_18QAy3MaEeeoYuc64YE22w" source="_18QAsnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ5XMaEeeoYuc64YE22w" target="_18QA63MaEeeoYuc64YE22w" source="_18PajHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZ5nMaEeeoYuc64YE22w" target="_18QA5HMaEeeoYuc64YE22w" source="_18QAy3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18PZ53MaEeeoYuc64YE22w" target="_18QA9HMaEeeoYuc64YE22w" source="_18QA5HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PZ6HMaEeeoYuc64YE22w" name="ExpressionStatement@326892a" outgoing="_18PZqnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ6XMaEeeoYuc64YE22w" target="_18PabnMaEeeoYuc64YE22w" source="_18PaCnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ6nMaEeeoYuc64YE22w" target="_18Pab3MaEeeoYuc64YE22w" source="_18PaDXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ63MaEeeoYuc64YE22w" target="_18PacHMaEeeoYuc64YE22w" source="_18PaEHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ7HMaEeeoYuc64YE22w" target="_18PacXMaEeeoYuc64YE22w" source="_18PaE3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ7XMaEeeoYuc64YE22w" target="_18PacnMaEeeoYuc64YE22w" source="_18PaFnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ7nMaEeeoYuc64YE22w" target="_18Pac3MaEeeoYuc64YE22w" source="_18PaGXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ73MaEeeoYuc64YE22w" target="_18PadHMaEeeoYuc64YE22w" source="_18PaHHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ8HMaEeeoYuc64YE22w" target="_18PadXMaEeeoYuc64YE22w" source="_18PaH3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ8XMaEeeoYuc64YE22w" target="_18PadnMaEeeoYuc64YE22w" source="_18PaInMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ8nMaEeeoYuc64YE22w" target="_18Pad3MaEeeoYuc64YE22w" source="_18PaJXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ83MaEeeoYuc64YE22w" target="_18PaeHMaEeeoYuc64YE22w" source="_18PaKHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ9HMaEeeoYuc64YE22w" target="_18PaeXMaEeeoYuc64YE22w" source="_18PaK3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ9XMaEeeoYuc64YE22w" target="_18PaenMaEeeoYuc64YE22w" source="_18PaLnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ9nMaEeeoYuc64YE22w" target="_18Pae3MaEeeoYuc64YE22w" source="_18PaMXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ93MaEeeoYuc64YE22w" target="_18PafHMaEeeoYuc64YE22w" source="_18PaNHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ-HMaEeeoYuc64YE22w" target="_18PafXMaEeeoYuc64YE22w" source="_18PaN3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ-XMaEeeoYuc64YE22w" target="_18PafnMaEeeoYuc64YE22w" source="_18PaOnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ-nMaEeeoYuc64YE22w" target="_18Paf3MaEeeoYuc64YE22w" source="_18PaPXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ-3MaEeeoYuc64YE22w" target="_18PagHMaEeeoYuc64YE22w" source="_18PaQHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ_HMaEeeoYuc64YE22w" target="_18PagXMaEeeoYuc64YE22w" source="_18PaQ3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ_XMaEeeoYuc64YE22w" target="_18PagnMaEeeoYuc64YE22w" source="_18PaRnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ_nMaEeeoYuc64YE22w" target="_18Pag3MaEeeoYuc64YE22w" source="_18PaSXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PZ_3MaEeeoYuc64YE22w" target="_18PahHMaEeeoYuc64YE22w" source="_18PaTHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PaAHMaEeeoYuc64YE22w" target="_18PahXMaEeeoYuc64YE22w" source="_18PaT3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PaAXMaEeeoYuc64YE22w" target="_18PahnMaEeeoYuc64YE22w" source="_18PaUnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PaAnMaEeeoYuc64YE22w" target="_18Pah3MaEeeoYuc64YE22w" source="_18PaVXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PaA3MaEeeoYuc64YE22w" target="_18PaiHMaEeeoYuc64YE22w" source="_18PaWHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PaBHMaEeeoYuc64YE22w" target="_18PaiXMaEeeoYuc64YE22w" source="_18PaW3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PaBXMaEeeoYuc64YE22w" target="_18PainMaEeeoYuc64YE22w" source="_18PaXnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PaBnMaEeeoYuc64YE22w" target="_18Pai3MaEeeoYuc64YE22w" source="_18PaYXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PaB3MaEeeoYuc64YE22w" target="_18PajHMaEeeoYuc64YE22w" source="_18PaZHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PaCHMaEeeoYuc64YE22w" target="_18PaZ3MaEeeoYuc64YE22w" source="_18Paa3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_18PaCXMaEeeoYuc64YE22w" name="Call(test)" operation="_18RRCnMaEeeoYuc64YE22w">
                <result xmi:id="_18PaCnMaEeeoYuc64YE22w" name="Call(test).result(i)" outgoing="_18PZ6XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaC3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaDHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaDXMaEeeoYuc64YE22w" name="Call(test).result(j)" outgoing="_18PZ6nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaDnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaD3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaEHMaEeeoYuc64YE22w" name="Call(test).result(bs)" outgoing="_18PZ63MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaEXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaEnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaE3MaEeeoYuc64YE22w" name="Call(test).result(h)" outgoing="_18PZ7HMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaFHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaFXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaFnMaEeeoYuc64YE22w" name="Call(test).result(a)" outgoing="_18PZ7XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaF3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaGHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaGXMaEeeoYuc64YE22w" name="Call(test).result(b)" outgoing="_18PZ7nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaGnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaG3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaHHMaEeeoYuc64YE22w" name="Call(test).result(c)" outgoing="_18PZ73MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaHXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaHnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaH3MaEeeoYuc64YE22w" name="Call(test).result(d)" outgoing="_18PZ8HMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaIHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaIXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaInMaEeeoYuc64YE22w" name="Call(test).result(e)" outgoing="_18PZ8XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaI3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaJHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaJXMaEeeoYuc64YE22w" name="Call(test).result(e1)" outgoing="_18PZ8nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaJnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaJ3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaKHMaEeeoYuc64YE22w" name="Call(test).result(e2)" outgoing="_18PZ83MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaKXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaKnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaK3MaEeeoYuc64YE22w" name="Call(test).result(e3)" outgoing="_18PZ9HMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaLHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaLXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaLnMaEeeoYuc64YE22w" name="Call(test).result(e4)" outgoing="_18PZ9XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaL3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaMHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaMXMaEeeoYuc64YE22w" name="Call(test).result(e5)" outgoing="_18PZ9nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaMnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaM3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaNHMaEeeoYuc64YE22w" name="Call(test).result(e6)" outgoing="_18PZ93MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaNXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaNnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaN3MaEeeoYuc64YE22w" name="Call(test).result(e7)" outgoing="_18PZ-HMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaOHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaOXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaOnMaEeeoYuc64YE22w" name="Call(test).result(e8)" outgoing="_18PZ-XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaO3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaPHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaPXMaEeeoYuc64YE22w" name="Call(test).result(e9)" outgoing="_18PZ-nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaPnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaP3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaQHMaEeeoYuc64YE22w" name="Call(test).result(f)" outgoing="_18PZ-3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaQXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaQnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaQ3MaEeeoYuc64YE22w" name="Call(test).result(f1)" outgoing="_18PZ_HMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaRHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaRXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaRnMaEeeoYuc64YE22w" name="Call(test).result(f2)" outgoing="_18PZ_XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaR3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaSHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaSXMaEeeoYuc64YE22w" name="Call(test).result(x)" outgoing="_18PZ_nMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaSnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaS3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaTHMaEeeoYuc64YE22w" name="Call(test).result(y)" outgoing="_18PZ_3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaTXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaTnMaEeeoYuc64YE22w" value="*"/>
                </result>
                <result xmi:id="_18PaT3MaEeeoYuc64YE22w" name="Call(test).result(z)" outgoing="_18PaAHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaUHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaUXMaEeeoYuc64YE22w" value="*"/>
                </result>
                <result xmi:id="_18PaUnMaEeeoYuc64YE22w" name="Call(test).result(r)" outgoing="_18PaAXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaU3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaVHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaVXMaEeeoYuc64YE22w" name="Call(test).result(k1)" outgoing="_18PaAnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaVnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaV3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaWHMaEeeoYuc64YE22w" name="Call(test).result(k2)" outgoing="_18PaA3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaWXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaWnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaW3MaEeeoYuc64YE22w" name="Call(test).result(k3)" outgoing="_18PaBHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaXHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaXXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaXnMaEeeoYuc64YE22w" name="Call(test).result(k4)" outgoing="_18PaBXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaX3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaYHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaYXMaEeeoYuc64YE22w" name="Call(test).result(u)" outgoing="_18PaBnMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaYnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaY3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <result xmi:id="_18PaZHMaEeeoYuc64YE22w" name="Call(test).result(v)" outgoing="_18PaB3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaZXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaZnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <target xmi:id="_18PaZ3MaEeeoYuc64YE22w" name="Call(test).target" incoming="_18PaCHMaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaaHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaaXMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_18PaanMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_18Paa3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18PaCHMaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PabHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PabXMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_18PabnMaEeeoYuc64YE22w" name="Fork(i)@6305b260" incoming="_18PZ6XMaEeeoYuc64YE22w" outgoing="_18PZqXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18Pab3MaEeeoYuc64YE22w" name="Fork(j)@2ff7c7f0" incoming="_18PZ6nMaEeeoYuc64YE22w" outgoing="_18PZq3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PacHMaEeeoYuc64YE22w" name="Fork(bs)@de43fd3" incoming="_18PZ63MaEeeoYuc64YE22w" outgoing="_18PZrXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PacXMaEeeoYuc64YE22w" name="Fork(h)@43bc1abd" incoming="_18PZ7HMaEeeoYuc64YE22w" outgoing="_18PZr3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PacnMaEeeoYuc64YE22w" name="Fork(a)@b426526" incoming="_18PZ7XMaEeeoYuc64YE22w" outgoing="_18PZsXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18Pac3MaEeeoYuc64YE22w" name="Fork(b)@1a1bebf9" incoming="_18PZ7nMaEeeoYuc64YE22w" outgoing="_18PZs3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PadHMaEeeoYuc64YE22w" name="Fork(c)@362d45ce" incoming="_18PZ73MaEeeoYuc64YE22w" outgoing="_18PZtXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PadXMaEeeoYuc64YE22w" name="Fork(d)@1567c844" incoming="_18PZ8HMaEeeoYuc64YE22w" outgoing="_18PZt3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PadnMaEeeoYuc64YE22w" name="Fork(e)@d14e49b" incoming="_18PZ8XMaEeeoYuc64YE22w" outgoing="_18PZuXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18Pad3MaEeeoYuc64YE22w" name="Fork(e1)@481592e3" incoming="_18PZ8nMaEeeoYuc64YE22w" outgoing="_18PZu3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PaeHMaEeeoYuc64YE22w" name="Fork(e2)@14cabd1a" incoming="_18PZ83MaEeeoYuc64YE22w" outgoing="_18PZvXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PaeXMaEeeoYuc64YE22w" name="Fork(e3)@3f44722f" incoming="_18PZ9HMaEeeoYuc64YE22w" outgoing="_18PZv3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PaenMaEeeoYuc64YE22w" name="Fork(e4)@155e6960" incoming="_18PZ9XMaEeeoYuc64YE22w" outgoing="_18PZwXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18Pae3MaEeeoYuc64YE22w" name="Fork(e5)@71b873a2" incoming="_18PZ9nMaEeeoYuc64YE22w" outgoing="_18PZw3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PafHMaEeeoYuc64YE22w" name="Fork(e6)@30db22e2" incoming="_18PZ93MaEeeoYuc64YE22w" outgoing="_18PZxXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PafXMaEeeoYuc64YE22w" name="Fork(e7)@2c92ebdc" incoming="_18PZ-HMaEeeoYuc64YE22w" outgoing="_18PZx3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PafnMaEeeoYuc64YE22w" name="Fork(e8)@4ae19247" incoming="_18PZ-XMaEeeoYuc64YE22w" outgoing="_18PZyXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18Paf3MaEeeoYuc64YE22w" name="Fork(e9)@78f6ddda" incoming="_18PZ-nMaEeeoYuc64YE22w" outgoing="_18PZy3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PagHMaEeeoYuc64YE22w" name="Fork(f)@11532c14" incoming="_18PZ-3MaEeeoYuc64YE22w" outgoing="_18PZzXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PagXMaEeeoYuc64YE22w" name="Fork(f1)@2a24e9e9" incoming="_18PZ_HMaEeeoYuc64YE22w" outgoing="_18PZz3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PagnMaEeeoYuc64YE22w" name="Fork(f2)@6c112540" incoming="_18PZ_XMaEeeoYuc64YE22w" outgoing="_18PZ0XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18Pag3MaEeeoYuc64YE22w" name="Fork(x)@22c72d15" incoming="_18PZ_nMaEeeoYuc64YE22w" outgoing="_18PZ03MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PahHMaEeeoYuc64YE22w" name="Fork(y)@2a7c96d5" incoming="_18PZ_3MaEeeoYuc64YE22w" outgoing="_18PZ1XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PahXMaEeeoYuc64YE22w" name="Fork(z)@279a49d2" incoming="_18PaAHMaEeeoYuc64YE22w" outgoing="_18PZ13MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PahnMaEeeoYuc64YE22w" name="Fork(r)@42c45344" incoming="_18PaAXMaEeeoYuc64YE22w" outgoing="_18PZ2XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18Pah3MaEeeoYuc64YE22w" name="Fork(k1)@5970718c" incoming="_18PaAnMaEeeoYuc64YE22w" outgoing="_18PZ23MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PaiHMaEeeoYuc64YE22w" name="Fork(k2)@17f48e49" incoming="_18PaA3MaEeeoYuc64YE22w" outgoing="_18PZ3XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PaiXMaEeeoYuc64YE22w" name="Fork(k3)@62d581bc" incoming="_18PaBHMaEeeoYuc64YE22w" outgoing="_18PZ33MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PainMaEeeoYuc64YE22w" name="Fork(k4)@2ebb0d1" incoming="_18PaBXMaEeeoYuc64YE22w" outgoing="_18PZ4XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18Pai3MaEeeoYuc64YE22w" name="Fork(u)@58cd4d11" incoming="_18PaBnMaEeeoYuc64YE22w" outgoing="_18PZ43MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_18PajHMaEeeoYuc64YE22w" name="Fork(v)@6bf80687" incoming="_18PaB3MaEeeoYuc64YE22w" outgoing="_18PZ5XMaEeeoYuc64YE22w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PajXMaEeeoYuc64YE22w" name="ExpressionStatement@362919c3" incoming="_18PZqnMaEeeoYuc64YE22w" outgoing="_18PZrHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PajnMaEeeoYuc64YE22w" target="_18PaknMaEeeoYuc64YE22w" source="_18PannMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Paj3MaEeeoYuc64YE22w" target="_18PamHMaEeeoYuc64YE22w" source="_18Paq3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PakHMaEeeoYuc64YE22w" target="_18PakXMaEeeoYuc64YE22w" source="_18Pam3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PakXMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_18PakHMaEeeoYuc64YE22w" behavior="_18R35HMaEeeoYuc64YE22w">
                <argument xmi:id="_18PaknMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_18PajnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pak3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PalHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PalXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_18PZqXMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PalnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pal3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PamHMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_18Paj3MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PamXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PamnMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Pam3MaEeeoYuc64YE22w" name="Tuple@51c975f7" outgoing="_18PakHMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18PanHMaEeeoYuc64YE22w" target="_18PaqHMaEeeoYuc64YE22w" source="_18Pao3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PanXMaEeeoYuc64YE22w" name="Value(&quot;i&quot;)">
                  <result xmi:id="_18PannMaEeeoYuc64YE22w" name="Value(&quot;i&quot;).result" outgoing="_18PajnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pan3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaoHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PaoXMaEeeoYuc64YE22w" value="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PaonMaEeeoYuc64YE22w" name="Value(1)">
                  <result xmi:id="_18Pao3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18PanHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PapHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PapXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18PapnMaEeeoYuc64YE22w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Pap3MaEeeoYuc64YE22w" name="Call(Neg)">
                  <argument xmi:id="_18PaqHMaEeeoYuc64YE22w" name="Call(Neg).argument(x)" incoming="_18PanHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaqXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaqnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18Paq3MaEeeoYuc64YE22w" name="Call(Neg).result(result)" outgoing="_18Paj3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ParHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ParXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Neg"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18ParnMaEeeoYuc64YE22w" name="ExpressionStatement@e23fb18" incoming="_18PZrHMaEeeoYuc64YE22w" outgoing="_18PZrnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Par3MaEeeoYuc64YE22w" target="_18Pas3MaEeeoYuc64YE22w" source="_18PavnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PasHMaEeeoYuc64YE22w" target="_18PauXMaEeeoYuc64YE22w" source="_18Paw3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PasXMaEeeoYuc64YE22w" target="_18PasnMaEeeoYuc64YE22w" source="_18PavHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PasnMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_18PasXMaEeeoYuc64YE22w" behavior="_18R35HMaEeeoYuc64YE22w">
                <argument xmi:id="_18Pas3MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_18Par3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PatHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PatXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PatnMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_18PZq3MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pat3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PauHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PauXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_18PasHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaunMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pau3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PavHMaEeeoYuc64YE22w" name="Tuple@24679fe" outgoing="_18PasXMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PavXMaEeeoYuc64YE22w" name="Value(&quot;j&quot;)">
                  <result xmi:id="_18PavnMaEeeoYuc64YE22w" name="Value(&quot;j&quot;).result" outgoing="_18Par3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pav3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PawHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PawXMaEeeoYuc64YE22w" value="j">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PawnMaEeeoYuc64YE22w" name="Value(2)">
                  <result xmi:id="_18Paw3MaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18PasHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PaxHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaxXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18PaxnMaEeeoYuc64YE22w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Pax3MaEeeoYuc64YE22w" name="ExpressionStatement@499fa8d7" incoming="_18PZrnMaEeeoYuc64YE22w" outgoing="_18PZsHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PayHMaEeeoYuc64YE22w" target="_18PazHMaEeeoYuc64YE22w" source="_18Pa2HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PayXMaEeeoYuc64YE22w" target="_18Pa0nMaEeeoYuc64YE22w" source="_18Pa_HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PaynMaEeeoYuc64YE22w" target="_18Pay3MaEeeoYuc64YE22w" source="_18Pa1XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Pay3MaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_18PaynMaEeeoYuc64YE22w" behavior="_18R35HMaEeeoYuc64YE22w">
                <argument xmi:id="_18PazHMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_18PayHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PazXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PaznMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18Paz3MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_18PZrXMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pa0HMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pa0XMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18Pa0nMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_18PayXMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pa03MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pa1HMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Pa1XMaEeeoYuc64YE22w" name="Tuple@646432bb" outgoing="_18PaynMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pa1nMaEeeoYuc64YE22w" target="_18Pa-3MaEeeoYuc64YE22w" source="_18Pa3XMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Pa13MaEeeoYuc64YE22w" name="Value(&quot;bs&quot;)">
                  <result xmi:id="_18Pa2HMaEeeoYuc64YE22w" name="Value(&quot;bs&quot;).result" outgoing="_18PayHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pa2XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pa2nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18Pa23MaEeeoYuc64YE22w" value="bs">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Pa3HMaEeeoYuc64YE22w" name="Value(56)">
                  <result xmi:id="_18Pa3XMaEeeoYuc64YE22w" name="Value(56).result" outgoing="_18Pa1nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pa3nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pa33MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18Pa4HMaEeeoYuc64YE22w" value="56">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_18Pa4XMaEeeoYuc64YE22w" name="CastExpression@69fb22b4" mode="parallel" outputElement="_18Pa_HMaEeeoYuc64YE22w" inputElement="_18Pa-3MaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pa4nMaEeeoYuc64YE22w" target="_18Pa7HMaEeeoYuc64YE22w" source="_18Pa8nMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pa43MaEeeoYuc64YE22w" target="_18Pa6nMaEeeoYuc64YE22w" source="_18Pa93MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pa5HMaEeeoYuc64YE22w" target="_18Pa-nMaEeeoYuc64YE22w" source="_18Pa8nMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pa5XMaEeeoYuc64YE22w" target="_18Pa-nMaEeeoYuc64YE22w" source="_18Pa73MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pa5nMaEeeoYuc64YE22w" target="_18Pa9HMaEeeoYuc64YE22w" source="_18Pa-nMaEeeoYuc64YE22w">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_18Pa53MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pa6HMaEeeoYuc64YE22w" target="_18Pa8nMaEeeoYuc64YE22w" source="_18Pa-3MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pa6XMaEeeoYuc64YE22w" target="_18Pa_HMaEeeoYuc64YE22w" source="_18Pa6nMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_18Pa6nMaEeeoYuc64YE22w" name="Merge(CastExpression@69fb22b4.operand)" incoming="_18Pa43MaEeeoYuc64YE22w" outgoing="_18Pa6XMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18Pa63MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer)">
                    <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <object xmi:id="_18Pa7HMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer).object" incoming="_18Pa4nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pa7XMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pa7nMaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_18Pa73MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer).result" outgoing="_18Pa5XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pa8HMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pa8XMaEeeoYuc64YE22w" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_18Pa8nMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(Integer).object)" incoming="_18Pa6HMaEeeoYuc64YE22w" outgoing="_18Pa4nMaEeeoYuc64YE22w _18Pa5HMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Pa83MaEeeoYuc64YE22w" name="Call(ToBitString)">
                    <argument xmi:id="_18Pa9HMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18Pa5nMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pa9XMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pa9nMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_18Pa93MaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18Pa43MaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pa-HMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pa-XMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
                  </node>
                  <node xmi:type="uml:DecisionNode" xmi:id="_18Pa-nMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(Integer).result)" incoming="_18Pa5HMaEeeoYuc64YE22w _18Pa5XMaEeeoYuc64YE22w" outgoing="_18Pa5nMaEeeoYuc64YE22w" decisionInputFlow="_18Pa5XMaEeeoYuc64YE22w"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_18Pa-3MaEeeoYuc64YE22w" name="CastExpression@69fb22b4.inputElement" incoming="_18Pa1nMaEeeoYuc64YE22w" outgoing="_18Pa6HMaEeeoYuc64YE22w" regionAsInput="_18Pa4XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_18Pa_HMaEeeoYuc64YE22w" name="CastExpression@69fb22b4.outputElement" incoming="_18Pa6XMaEeeoYuc64YE22w" outgoing="_18PayXMaEeeoYuc64YE22w" regionAsOutput="_18Pa4XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Pa_XMaEeeoYuc64YE22w" name="ExpressionStatement@400b4978" incoming="_18PZsHMaEeeoYuc64YE22w" outgoing="_18PZsnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pa_nMaEeeoYuc64YE22w" target="_18PbAnMaEeeoYuc64YE22w" source="_18PbDXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pa_3MaEeeoYuc64YE22w" target="_18PbCHMaEeeoYuc64YE22w" source="_18PbEnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PbAHMaEeeoYuc64YE22w" target="_18PbAXMaEeeoYuc64YE22w" source="_18PbC3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PbAXMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_18PbAHMaEeeoYuc64YE22w" behavior="_18R35HMaEeeoYuc64YE22w">
                <argument xmi:id="_18PbAnMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_18Pa_nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbA3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbBHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbBXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_18PZr3MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbBnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbB3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbCHMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_18Pa_3MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbCXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbCnMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbC3MaEeeoYuc64YE22w" name="Tuple@1074fef2" outgoing="_18PbAHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PbDHMaEeeoYuc64YE22w" name="Value(&quot;h&quot;)">
                  <result xmi:id="_18PbDXMaEeeoYuc64YE22w" name="Value(&quot;h&quot;).result" outgoing="_18Pa_nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbDnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbD3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PbEHMaEeeoYuc64YE22w" value="h">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PbEXMaEeeoYuc64YE22w" name="Value(56)">
                  <result xmi:id="_18PbEnMaEeeoYuc64YE22w" name="Value(56).result" outgoing="_18Pa_3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbE3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbFHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18PbFXMaEeeoYuc64YE22w" value="56">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbFnMaEeeoYuc64YE22w" name="ExpressionStatement@74d10cc3" incoming="_18PZsnMaEeeoYuc64YE22w" outgoing="_18PZtHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PbF3MaEeeoYuc64YE22w" target="_18PbGnMaEeeoYuc64YE22w" source="_18PbInMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PbGHMaEeeoYuc64YE22w" target="_18PbGXMaEeeoYuc64YE22w" source="_18PbIHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PbGXMaEeeoYuc64YE22w" name="Call(AssertFalse)" incoming="_18PbGHMaEeeoYuc64YE22w" behavior="_18R5_nMaEeeoYuc64YE22w">
                <argument xmi:id="_18PbGnMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(label)" incoming="_18PbF3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbG3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbHHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbHXMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(condition)" incoming="_18PZsXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbHnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbH3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbIHMaEeeoYuc64YE22w" name="Tuple@5ba968cb" outgoing="_18PbGHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PbIXMaEeeoYuc64YE22w" name="Value(&quot;a&quot;)">
                  <result xmi:id="_18PbInMaEeeoYuc64YE22w" name="Value(&quot;a&quot;).result" outgoing="_18PbF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbI3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbJHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PbJXMaEeeoYuc64YE22w" value="a">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbJnMaEeeoYuc64YE22w" name="ExpressionStatement@a538872" incoming="_18PZtHMaEeeoYuc64YE22w" outgoing="_18PZtnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PbJ3MaEeeoYuc64YE22w" target="_18PbKnMaEeeoYuc64YE22w" source="_18PbMnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PbKHMaEeeoYuc64YE22w" target="_18PbKXMaEeeoYuc64YE22w" source="_18PbMHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PbKXMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_18PbKHMaEeeoYuc64YE22w" behavior="_18R6ZnMaEeeoYuc64YE22w">
                <argument xmi:id="_18PbKnMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_18PbJ3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbK3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbLHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbLXMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_18PZs3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbLnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbL3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbMHMaEeeoYuc64YE22w" name="Tuple@245a64c" outgoing="_18PbKHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PbMXMaEeeoYuc64YE22w" name="Value(&quot;b&quot;)">
                  <result xmi:id="_18PbMnMaEeeoYuc64YE22w" name="Value(&quot;b&quot;).result" outgoing="_18PbJ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbM3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbNHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PbNXMaEeeoYuc64YE22w" value="b">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbNnMaEeeoYuc64YE22w" name="ExpressionStatement@4f1a2897" incoming="_18PZtnMaEeeoYuc64YE22w" outgoing="_18PZuHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PbN3MaEeeoYuc64YE22w" target="_18PbOnMaEeeoYuc64YE22w" source="_18PbQnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PbOHMaEeeoYuc64YE22w" target="_18PbOXMaEeeoYuc64YE22w" source="_18PbQHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PbOXMaEeeoYuc64YE22w" name="Call(AssertFalse)" incoming="_18PbOHMaEeeoYuc64YE22w" behavior="_18R5_nMaEeeoYuc64YE22w">
                <argument xmi:id="_18PbOnMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(label)" incoming="_18PbN3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbO3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbPHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbPXMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(condition)" incoming="_18PZtXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbPnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbP3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbQHMaEeeoYuc64YE22w" name="Tuple@41b3441a" outgoing="_18PbOHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PbQXMaEeeoYuc64YE22w" name="Value(&quot;c&quot;)">
                  <result xmi:id="_18PbQnMaEeeoYuc64YE22w" name="Value(&quot;c&quot;).result" outgoing="_18PbN3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbQ3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbRHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PbRXMaEeeoYuc64YE22w" value="c">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbRnMaEeeoYuc64YE22w" name="ExpressionStatement@6497e467" incoming="_18PZuHMaEeeoYuc64YE22w" outgoing="_18PZunMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PbR3MaEeeoYuc64YE22w" target="_18PbSnMaEeeoYuc64YE22w" source="_18PbUnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PbSHMaEeeoYuc64YE22w" target="_18PbSXMaEeeoYuc64YE22w" source="_18PbUHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PbSXMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_18PbSHMaEeeoYuc64YE22w" behavior="_18R6ZnMaEeeoYuc64YE22w">
                <argument xmi:id="_18PbSnMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_18PbR3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbS3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbTHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbTXMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_18PZt3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbTnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbT3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbUHMaEeeoYuc64YE22w" name="Tuple@1d8e44d3" outgoing="_18PbSHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PbUXMaEeeoYuc64YE22w" name="Value(&quot;d&quot;)">
                  <result xmi:id="_18PbUnMaEeeoYuc64YE22w" name="Value(&quot;d&quot;).result" outgoing="_18PbR3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbU3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbVHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PbVXMaEeeoYuc64YE22w" value="d">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbVnMaEeeoYuc64YE22w" name="ExpressionStatement@3d640be4" incoming="_18PZunMaEeeoYuc64YE22w" outgoing="_18PZvHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PbV3MaEeeoYuc64YE22w" target="_18PbWnMaEeeoYuc64YE22w" source="_18PbYnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PbWHMaEeeoYuc64YE22w" target="_18PbWXMaEeeoYuc64YE22w" source="_18PbYHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PbWXMaEeeoYuc64YE22w" name="Call(AssertFalse)" incoming="_18PbWHMaEeeoYuc64YE22w" behavior="_18R5_nMaEeeoYuc64YE22w">
                <argument xmi:id="_18PbWnMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(label)" incoming="_18PbV3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbW3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbXHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbXXMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(condition)" incoming="_18PZuXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbXnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbX3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbYHMaEeeoYuc64YE22w" name="Tuple@3af851d1" outgoing="_18PbWHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PbYXMaEeeoYuc64YE22w" name="Value(&quot;e&quot;)">
                  <result xmi:id="_18PbYnMaEeeoYuc64YE22w" name="Value(&quot;e&quot;).result" outgoing="_18PbV3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbY3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbZHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PbZXMaEeeoYuc64YE22w" value="e">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbZnMaEeeoYuc64YE22w" name="ExpressionStatement@4c3eda5c" incoming="_18PZvHMaEeeoYuc64YE22w" outgoing="_18PZvnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PbZ3MaEeeoYuc64YE22w" target="_18PbanMaEeeoYuc64YE22w" source="_18PbcnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PbaHMaEeeoYuc64YE22w" target="_18PbaXMaEeeoYuc64YE22w" source="_18PbcHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PbaXMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_18PbaHMaEeeoYuc64YE22w" behavior="_18R6ZnMaEeeoYuc64YE22w">
                <argument xmi:id="_18PbanMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_18PbZ3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pba3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbbHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbbXMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_18PZu3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbbnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pbb3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbcHMaEeeoYuc64YE22w" name="Tuple@61c9206b" outgoing="_18PbaHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PbcXMaEeeoYuc64YE22w" name="Value(&quot;e1&quot;)">
                  <result xmi:id="_18PbcnMaEeeoYuc64YE22w" name="Value(&quot;e1&quot;).result" outgoing="_18PbZ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pbc3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbdHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PbdXMaEeeoYuc64YE22w" value="e1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbdnMaEeeoYuc64YE22w" name="ExpressionStatement@742068da" incoming="_18PZvnMaEeeoYuc64YE22w" outgoing="_18PZwHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pbd3MaEeeoYuc64YE22w" target="_18PbenMaEeeoYuc64YE22w" source="_18PbgnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PbeHMaEeeoYuc64YE22w" target="_18PbeXMaEeeoYuc64YE22w" source="_18PbgHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PbeXMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_18PbeHMaEeeoYuc64YE22w" behavior="_18R6ZnMaEeeoYuc64YE22w">
                <argument xmi:id="_18PbenMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_18Pbd3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pbe3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbfHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbfXMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_18PZvXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbfnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pbf3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbgHMaEeeoYuc64YE22w" name="Tuple@108752c8" outgoing="_18PbeHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PbgXMaEeeoYuc64YE22w" name="Value(&quot;e2&quot;)">
                  <result xmi:id="_18PbgnMaEeeoYuc64YE22w" name="Value(&quot;e2&quot;).result" outgoing="_18Pbd3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pbg3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbhHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PbhXMaEeeoYuc64YE22w" value="e2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbhnMaEeeoYuc64YE22w" name="ExpressionStatement@2a1ae60d" incoming="_18PZwHMaEeeoYuc64YE22w" outgoing="_18PZwnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pbh3MaEeeoYuc64YE22w" target="_18PbinMaEeeoYuc64YE22w" source="_18PbknMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PbiHMaEeeoYuc64YE22w" target="_18PbiXMaEeeoYuc64YE22w" source="_18PbkHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PbiXMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_18PbiHMaEeeoYuc64YE22w" behavior="_18R6ZnMaEeeoYuc64YE22w">
                <argument xmi:id="_18PbinMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_18Pbh3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pbi3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbjHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbjXMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_18PZv3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbjnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pbj3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbkHMaEeeoYuc64YE22w" name="Tuple@35551d" outgoing="_18PbiHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PbkXMaEeeoYuc64YE22w" name="Value(&quot;e3&quot;)">
                  <result xmi:id="_18PbknMaEeeoYuc64YE22w" name="Value(&quot;e3&quot;).result" outgoing="_18Pbh3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pbk3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PblHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PblXMaEeeoYuc64YE22w" value="e3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PblnMaEeeoYuc64YE22w" name="ExpressionStatement@5c2ea14d" incoming="_18PZwnMaEeeoYuc64YE22w" outgoing="_18PZxHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pbl3MaEeeoYuc64YE22w" target="_18PbmnMaEeeoYuc64YE22w" source="_18PbonMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PbmHMaEeeoYuc64YE22w" target="_18PbmXMaEeeoYuc64YE22w" source="_18PboHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PbmXMaEeeoYuc64YE22w" name="Call(AssertFalse)" incoming="_18PbmHMaEeeoYuc64YE22w" behavior="_18R5_nMaEeeoYuc64YE22w">
                <argument xmi:id="_18PbmnMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(label)" incoming="_18Pbl3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pbm3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbnHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbnXMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(condition)" incoming="_18PZwXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbnnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pbn3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PboHMaEeeoYuc64YE22w" name="Tuple@10814a9" outgoing="_18PbmHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PboXMaEeeoYuc64YE22w" name="Value(&quot;e4&quot;)">
                  <result xmi:id="_18PbonMaEeeoYuc64YE22w" name="Value(&quot;e4&quot;).result" outgoing="_18Pbl3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pbo3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbpHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PbpXMaEeeoYuc64YE22w" value="e4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbpnMaEeeoYuc64YE22w" name="ExpressionStatement@584cb45f" incoming="_18PZxHMaEeeoYuc64YE22w" outgoing="_18PZxnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pbp3MaEeeoYuc64YE22w" target="_18PbqnMaEeeoYuc64YE22w" source="_18PbsnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PbqHMaEeeoYuc64YE22w" target="_18PbqXMaEeeoYuc64YE22w" source="_18PbsHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PbqXMaEeeoYuc64YE22w" name="Call(AssertFalse)" incoming="_18PbqHMaEeeoYuc64YE22w" behavior="_18R5_nMaEeeoYuc64YE22w">
                <argument xmi:id="_18PbqnMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(label)" incoming="_18Pbp3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pbq3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbrHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbrXMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(condition)" incoming="_18PZw3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbrnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pbr3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbsHMaEeeoYuc64YE22w" name="Tuple@1d37dd10" outgoing="_18PbqHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PbsXMaEeeoYuc64YE22w" name="Value(&quot;e5&quot;)">
                  <result xmi:id="_18PbsnMaEeeoYuc64YE22w" name="Value(&quot;e5&quot;).result" outgoing="_18Pbp3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pbs3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbtHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PbtXMaEeeoYuc64YE22w" value="e5">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbtnMaEeeoYuc64YE22w" name="ExpressionStatement@184ab123" incoming="_18PZxnMaEeeoYuc64YE22w" outgoing="_18PZyHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pbt3MaEeeoYuc64YE22w" target="_18PbunMaEeeoYuc64YE22w" source="_18PbwnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PbuHMaEeeoYuc64YE22w" target="_18PbuXMaEeeoYuc64YE22w" source="_18PbwHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PbuXMaEeeoYuc64YE22w" name="Call(AssertFalse)" incoming="_18PbuHMaEeeoYuc64YE22w" behavior="_18R5_nMaEeeoYuc64YE22w">
                <argument xmi:id="_18PbunMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(label)" incoming="_18Pbt3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pbu3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbvHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbvXMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(condition)" incoming="_18PZxXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbvnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pbv3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbwHMaEeeoYuc64YE22w" name="Tuple@11970eac" outgoing="_18PbuHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PbwXMaEeeoYuc64YE22w" name="Value(&quot;e6&quot;)">
                  <result xmi:id="_18PbwnMaEeeoYuc64YE22w" name="Value(&quot;e6&quot;).result" outgoing="_18Pbt3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pbw3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbxHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PbxXMaEeeoYuc64YE22w" value="e6">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PbxnMaEeeoYuc64YE22w" name="ExpressionStatement@74309cd5" incoming="_18PZyHMaEeeoYuc64YE22w" outgoing="_18PZynMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pbx3MaEeeoYuc64YE22w" target="_18PbynMaEeeoYuc64YE22w" source="_18Pb0nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PbyHMaEeeoYuc64YE22w" target="_18PbyXMaEeeoYuc64YE22w" source="_18Pb0HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PbyXMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_18PbyHMaEeeoYuc64YE22w" behavior="_18R6ZnMaEeeoYuc64YE22w">
                <argument xmi:id="_18PbynMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_18Pbx3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pby3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PbzHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PbzXMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_18PZx3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PbznMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pbz3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Pb0HMaEeeoYuc64YE22w" name="Tuple@eb1ba59" outgoing="_18PbyHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Pb0XMaEeeoYuc64YE22w" name="Value(&quot;e7&quot;)">
                  <result xmi:id="_18Pb0nMaEeeoYuc64YE22w" name="Value(&quot;e7&quot;).result" outgoing="_18Pbx3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pb03MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pb1HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18Pb1XMaEeeoYuc64YE22w" value="e7">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Pb1nMaEeeoYuc64YE22w" name="ExpressionStatement@3a1d7336" incoming="_18PZynMaEeeoYuc64YE22w" outgoing="_18PZzHMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pb13MaEeeoYuc64YE22w" target="_18Pb2nMaEeeoYuc64YE22w" source="_18Pb4nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18Pb2HMaEeeoYuc64YE22w" target="_18Pb2XMaEeeoYuc64YE22w" source="_18Pb4HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Pb2XMaEeeoYuc64YE22w" name="Call(AssertFalse)" incoming="_18Pb2HMaEeeoYuc64YE22w" behavior="_18R5_nMaEeeoYuc64YE22w">
                <argument xmi:id="_18Pb2nMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(label)" incoming="_18Pb13MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pb23MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pb3HMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18Pb3XMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(condition)" incoming="_18PZyXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pb3nMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pb33MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Pb4HMaEeeoYuc64YE22w" name="Tuple@59bf5455" outgoing="_18Pb2HMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Pb4XMaEeeoYuc64YE22w" name="Value(&quot;e8&quot;)">
                  <result xmi:id="_18Pb4nMaEeeoYuc64YE22w" name="Value(&quot;e8&quot;).result" outgoing="_18Pb13MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pb43MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pb5HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18Pb5XMaEeeoYuc64YE22w" value="e8">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Pb5nMaEeeoYuc64YE22w" name="ExpressionStatement@147a481f" incoming="_18PZzHMaEeeoYuc64YE22w" outgoing="_18PZznMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pb53MaEeeoYuc64YE22w" target="_18Pb6nMaEeeoYuc64YE22w" source="_18Pb8nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18Pb6HMaEeeoYuc64YE22w" target="_18Pb6XMaEeeoYuc64YE22w" source="_18Pb8HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Pb6XMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_18Pb6HMaEeeoYuc64YE22w" behavior="_18R6ZnMaEeeoYuc64YE22w">
                <argument xmi:id="_18Pb6nMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_18Pb53MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pb63MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pb7HMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18Pb7XMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_18PZy3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pb7nMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pb73MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Pb8HMaEeeoYuc64YE22w" name="Tuple@3868ff89" outgoing="_18Pb6HMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Pb8XMaEeeoYuc64YE22w" name="Value(&quot;e9&quot;)">
                  <result xmi:id="_18Pb8nMaEeeoYuc64YE22w" name="Value(&quot;e9&quot;).result" outgoing="_18Pb53MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pb83MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pb9HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18Pb9XMaEeeoYuc64YE22w" value="e9">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Pb9nMaEeeoYuc64YE22w" name="ExpressionStatement@2b549eed" incoming="_18PZznMaEeeoYuc64YE22w" outgoing="_18PZ0HMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pb93MaEeeoYuc64YE22w" target="_18Pb-nMaEeeoYuc64YE22w" source="_18PcAnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18Pb-HMaEeeoYuc64YE22w" target="_18Pb-XMaEeeoYuc64YE22w" source="_18PcAHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Pb-XMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_18Pb-HMaEeeoYuc64YE22w" behavior="_18R6ZnMaEeeoYuc64YE22w">
                <argument xmi:id="_18Pb-nMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_18Pb93MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pb-3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pb_HMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18Pb_XMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_18PZzXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pb_nMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pb_3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcAHMaEeeoYuc64YE22w" name="Tuple@3d483fc7" outgoing="_18Pb-HMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PcAXMaEeeoYuc64YE22w" name="Value(&quot;f&quot;)">
                  <result xmi:id="_18PcAnMaEeeoYuc64YE22w" name="Value(&quot;f&quot;).result" outgoing="_18Pb93MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcA3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcBHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PcBXMaEeeoYuc64YE22w" value="f">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcBnMaEeeoYuc64YE22w" name="ExpressionStatement@13efea9b" incoming="_18PZ0HMaEeeoYuc64YE22w" outgoing="_18PZ0nMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PcB3MaEeeoYuc64YE22w" target="_18PcCnMaEeeoYuc64YE22w" source="_18PcEnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PcCHMaEeeoYuc64YE22w" target="_18PcCXMaEeeoYuc64YE22w" source="_18PcEHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PcCXMaEeeoYuc64YE22w" name="Call(AssertFalse)" incoming="_18PcCHMaEeeoYuc64YE22w" behavior="_18R5_nMaEeeoYuc64YE22w">
                <argument xmi:id="_18PcCnMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(label)" incoming="_18PcB3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcC3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcDHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PcDXMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(condition)" incoming="_18PZz3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcDnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcD3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcEHMaEeeoYuc64YE22w" name="Tuple@658aa56" outgoing="_18PcCHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PcEXMaEeeoYuc64YE22w" name="Value(&quot;f1&quot;)">
                  <result xmi:id="_18PcEnMaEeeoYuc64YE22w" name="Value(&quot;f1&quot;).result" outgoing="_18PcB3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcE3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcFHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PcFXMaEeeoYuc64YE22w" value="f1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcFnMaEeeoYuc64YE22w" name="ExpressionStatement@5bea3958" incoming="_18PZ0nMaEeeoYuc64YE22w" outgoing="_18PZ1HMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PcF3MaEeeoYuc64YE22w" target="_18PcGnMaEeeoYuc64YE22w" source="_18PcInMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PcGHMaEeeoYuc64YE22w" target="_18PcGXMaEeeoYuc64YE22w" source="_18PcIHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PcGXMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_18PcGHMaEeeoYuc64YE22w" behavior="_18R6ZnMaEeeoYuc64YE22w">
                <argument xmi:id="_18PcGnMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_18PcF3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcG3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcHHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PcHXMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_18PZ0XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcHnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcH3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcIHMaEeeoYuc64YE22w" name="Tuple@dfd9e43" outgoing="_18PcGHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PcIXMaEeeoYuc64YE22w" name="Value(&quot;f2&quot;)">
                  <result xmi:id="_18PcInMaEeeoYuc64YE22w" name="Value(&quot;f2&quot;).result" outgoing="_18PcF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcI3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcJHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PcJXMaEeeoYuc64YE22w" value="f2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcJnMaEeeoYuc64YE22w" name="ExpressionStatement@5505c92e" incoming="_18PZ1HMaEeeoYuc64YE22w" outgoing="_18PZ1nMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PcJ3MaEeeoYuc64YE22w" target="_18PcK3MaEeeoYuc64YE22w" source="_18PcNnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PcKHMaEeeoYuc64YE22w" target="_18PcMXMaEeeoYuc64YE22w" source="_18PcO3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PcKXMaEeeoYuc64YE22w" target="_18PcKnMaEeeoYuc64YE22w" source="_18PcNHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PcKnMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_18PcKXMaEeeoYuc64YE22w" behavior="_18R35HMaEeeoYuc64YE22w">
                <argument xmi:id="_18PcK3MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_18PcJ3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcLHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcLXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PcLnMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_18PZ03MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcL3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcMHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PcMXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_18PcKHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcMnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcM3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcNHMaEeeoYuc64YE22w" name="Tuple@103f44dd" outgoing="_18PcKXMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PcNXMaEeeoYuc64YE22w" name="Value(&quot;x&quot;)">
                  <result xmi:id="_18PcNnMaEeeoYuc64YE22w" name="Value(&quot;x&quot;).result" outgoing="_18PcJ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcN3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcOHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PcOXMaEeeoYuc64YE22w" value="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PcOnMaEeeoYuc64YE22w" name="Value(2)">
                  <result xmi:id="_18PcO3MaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18PcKHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcPHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcPXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18PcPnMaEeeoYuc64YE22w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcP3MaEeeoYuc64YE22w" name="ExpressionStatement@15c45206" incoming="_18PZ1nMaEeeoYuc64YE22w" outgoing="_18PZ2HMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PcQHMaEeeoYuc64YE22w" target="_18PcRHMaEeeoYuc64YE22w" source="_18PcT3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PcQXMaEeeoYuc64YE22w" target="_18PcSnMaEeeoYuc64YE22w" source="_18PcV3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PcQnMaEeeoYuc64YE22w" target="_18PcQ3MaEeeoYuc64YE22w" source="_18PcTXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PcQ3MaEeeoYuc64YE22w" name="Call(AssertList)" incoming="_18PcQnMaEeeoYuc64YE22w" behavior="_18SdMHMaEeeoYuc64YE22w">
                <argument xmi:id="_18PcRHMaEeeoYuc64YE22w" name="Call(AssertList).argument(label)" incoming="_18PcQHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcRXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcRnMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PcR3MaEeeoYuc64YE22w" name="Call(AssertList).argument(list)" incoming="_18PZ1XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcSHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcSXMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <argument xmi:id="_18PcSnMaEeeoYuc64YE22w" name="Call(AssertList).argument(expected)" incoming="_18PcQXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcS3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcTHMaEeeoYuc64YE22w" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcTXMaEeeoYuc64YE22w" name="Tuple@5334844d" outgoing="_18PcQnMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PcTnMaEeeoYuc64YE22w" name="Value(&quot;y&quot;)">
                  <result xmi:id="_18PcT3MaEeeoYuc64YE22w" name="Value(&quot;y&quot;).result" outgoing="_18PcQHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcUHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcUXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PcUnMaEeeoYuc64YE22w" value="y">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcU3MaEeeoYuc64YE22w" name="SequenceConstructionExpression@5973d4c8">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_18PcVHMaEeeoYuc64YE22w" target="_18PcYHMaEeeoYuc64YE22w" source="_18PcWnMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18PcVXMaEeeoYuc64YE22w" target="_18PcV3MaEeeoYuc64YE22w" source="_18PcXHMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18PcVnMaEeeoYuc64YE22w" target="_18PcV3MaEeeoYuc64YE22w" source="_18PcYnMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_18PcV3MaEeeoYuc64YE22w" name="SequenceConstructionExpression@5973d4c8.output" incoming="_18PcVXMaEeeoYuc64YE22w _18PcVnMaEeeoYuc64YE22w" outgoing="_18PcQXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcWHMaEeeoYuc64YE22w" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcWXMaEeeoYuc64YE22w" value="2"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcWnMaEeeoYuc64YE22w" name="SequenceExpressionList@2c3bbb8d#1" outgoing="_18PcVHMaEeeoYuc64YE22w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PcW3MaEeeoYuc64YE22w" name="Value(1)">
                      <result xmi:id="_18PcXHMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18PcVXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcXXMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcXnMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_18PcX3MaEeeoYuc64YE22w" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcYHMaEeeoYuc64YE22w" name="SequenceExpressionList@2c3bbb8d#2" incoming="_18PcVHMaEeeoYuc64YE22w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PcYXMaEeeoYuc64YE22w" name="Value(2)">
                      <result xmi:id="_18PcYnMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18PcVnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcY3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcZHMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_18PcZXMaEeeoYuc64YE22w" value="2">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcZnMaEeeoYuc64YE22w" name="ExpressionStatement@59bb65b1" incoming="_18PZ2HMaEeeoYuc64YE22w" outgoing="_18PZ2nMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PcZ3MaEeeoYuc64YE22w" target="_18Pca3MaEeeoYuc64YE22w" source="_18PcdnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PcaHMaEeeoYuc64YE22w" target="_18PccXMaEeeoYuc64YE22w" source="_18PcfnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PcaXMaEeeoYuc64YE22w" target="_18PcanMaEeeoYuc64YE22w" source="_18PcdHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PcanMaEeeoYuc64YE22w" name="Call(AssertList)" incoming="_18PcaXMaEeeoYuc64YE22w" behavior="_18SdMHMaEeeoYuc64YE22w">
                <argument xmi:id="_18Pca3MaEeeoYuc64YE22w" name="Call(AssertList).argument(label)" incoming="_18PcZ3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcbHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcbXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PcbnMaEeeoYuc64YE22w" name="Call(AssertList).argument(list)" incoming="_18PZ13MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pcb3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PccHMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <argument xmi:id="_18PccXMaEeeoYuc64YE22w" name="Call(AssertList).argument(expected)" incoming="_18PcaHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PccnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pcc3MaEeeoYuc64YE22w" value="*"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcdHMaEeeoYuc64YE22w" name="Tuple@5adb6f44" outgoing="_18PcaXMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PcdXMaEeeoYuc64YE22w" name="Value(&quot;z&quot;)">
                  <result xmi:id="_18PcdnMaEeeoYuc64YE22w" name="Value(&quot;z&quot;).result" outgoing="_18PcZ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pcd3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PceHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18PceXMaEeeoYuc64YE22w" value="z">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcenMaEeeoYuc64YE22w" name="SequenceConstructionExpression@47bc2cd0">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_18Pce3MaEeeoYuc64YE22w" target="_18Pch3MaEeeoYuc64YE22w" source="_18PcgXMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18PcfHMaEeeoYuc64YE22w" target="_18PcfnMaEeeoYuc64YE22w" source="_18Pcg3MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18PcfXMaEeeoYuc64YE22w" target="_18PcfnMaEeeoYuc64YE22w" source="_18PciXMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_18PcfnMaEeeoYuc64YE22w" name="SequenceConstructionExpression@47bc2cd0.output" incoming="_18PcfHMaEeeoYuc64YE22w _18PcfXMaEeeoYuc64YE22w" outgoing="_18PcaHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pcf3MaEeeoYuc64YE22w" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcgHMaEeeoYuc64YE22w" value="2"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcgXMaEeeoYuc64YE22w" name="SequenceExpressionList@342263d0#1" outgoing="_18Pce3MaEeeoYuc64YE22w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PcgnMaEeeoYuc64YE22w" name="Value(1)">
                      <result xmi:id="_18Pcg3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18PcfHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PchHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PchXMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_18PchnMaEeeoYuc64YE22w" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Pch3MaEeeoYuc64YE22w" name="SequenceExpressionList@342263d0#2" incoming="_18Pce3MaEeeoYuc64YE22w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PciHMaEeeoYuc64YE22w" name="Value(2)">
                      <result xmi:id="_18PciXMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18PcfXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcinMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pci3MaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_18PcjHMaEeeoYuc64YE22w" value="2">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18PcjXMaEeeoYuc64YE22w" name="ExpressionStatement@5ddead43" incoming="_18PZ2nMaEeeoYuc64YE22w" outgoing="_18PZ3HMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18PcjnMaEeeoYuc64YE22w" target="_18PcknMaEeeoYuc64YE22w" source="_18PcnXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Pcj3MaEeeoYuc64YE22w" target="_18PcmHMaEeeoYuc64YE22w" source="_18QAY3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18PckHMaEeeoYuc64YE22w" target="_18PckXMaEeeoYuc64YE22w" source="_18Pcm3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18PckXMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_18PckHMaEeeoYuc64YE22w" behavior="_18R35HMaEeeoYuc64YE22w">
                <argument xmi:id="_18PcknMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_18PcjnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Pck3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PclHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PclXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_18PZ2XMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PclnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Pcl3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18PcmHMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_18Pcj3MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcmXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18PcmnMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Pcm3MaEeeoYuc64YE22w" name="Tuple@61d3ead0" outgoing="_18PckHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18PcnHMaEeeoYuc64YE22w" name="Value(&quot;r&quot;)">
                  <result xmi:id="_18PcnXMaEeeoYuc64YE22w" name="Value(&quot;r&quot;).result" outgoing="_18PcjnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18PcnnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAYHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18QAYXMaEeeoYuc64YE22w" value="r">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QAYnMaEeeoYuc64YE22w" name="Value(2)">
                  <result xmi:id="_18QAY3MaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18Pcj3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAZHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAZXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18QAZnMaEeeoYuc64YE22w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QAZ3MaEeeoYuc64YE22w" name="ExpressionStatement@5ce0a8b" incoming="_18PZ3HMaEeeoYuc64YE22w" outgoing="_18PZ3nMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QAaHMaEeeoYuc64YE22w" target="_18QAbHMaEeeoYuc64YE22w" source="_18QAd3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QAaXMaEeeoYuc64YE22w" target="_18QAcnMaEeeoYuc64YE22w" source="_18QAfHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QAanMaEeeoYuc64YE22w" target="_18QAa3MaEeeoYuc64YE22w" source="_18QAdXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QAa3MaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_18QAanMaEeeoYuc64YE22w" behavior="_18R35HMaEeeoYuc64YE22w">
                <argument xmi:id="_18QAbHMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_18QAaHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAbXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAbnMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18QAb3MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_18PZ23MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAcHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAcXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18QAcnMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_18QAaXMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAc3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAdHMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QAdXMaEeeoYuc64YE22w" name="Tuple@6ba0f7c8" outgoing="_18QAanMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QAdnMaEeeoYuc64YE22w" name="Value(&quot;k1&quot;)">
                  <result xmi:id="_18QAd3MaEeeoYuc64YE22w" name="Value(&quot;k1&quot;).result" outgoing="_18QAaHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAeHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAeXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18QAenMaEeeoYuc64YE22w" value="k1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QAe3MaEeeoYuc64YE22w" name="Value(1)">
                  <result xmi:id="_18QAfHMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18QAaXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAfXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAfnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18QAf3MaEeeoYuc64YE22w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QAgHMaEeeoYuc64YE22w" name="ExpressionStatement@7865dd47" incoming="_18PZ3nMaEeeoYuc64YE22w" outgoing="_18PZ4HMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QAgXMaEeeoYuc64YE22w" target="_18QAhXMaEeeoYuc64YE22w" source="_18QAkHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QAgnMaEeeoYuc64YE22w" target="_18QAi3MaEeeoYuc64YE22w" source="_18QAlXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QAg3MaEeeoYuc64YE22w" target="_18QAhHMaEeeoYuc64YE22w" source="_18QAjnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QAhHMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_18QAg3MaEeeoYuc64YE22w" behavior="_18R35HMaEeeoYuc64YE22w">
                <argument xmi:id="_18QAhXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_18QAgXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAhnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAh3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18QAiHMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_18PZ3XMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAiXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAinMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18QAi3MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_18QAgnMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAjHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAjXMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QAjnMaEeeoYuc64YE22w" name="Tuple@4eaa7133" outgoing="_18QAg3MaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QAj3MaEeeoYuc64YE22w" name="Value(&quot;k2&quot;)">
                  <result xmi:id="_18QAkHMaEeeoYuc64YE22w" name="Value(&quot;k2&quot;).result" outgoing="_18QAgXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAkXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAknMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18QAk3MaEeeoYuc64YE22w" value="k2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QAlHMaEeeoYuc64YE22w" name="Value(1)">
                  <result xmi:id="_18QAlXMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18QAgnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAlnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAl3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18QAmHMaEeeoYuc64YE22w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QAmXMaEeeoYuc64YE22w" name="ExpressionStatement@31fddd46" incoming="_18PZ4HMaEeeoYuc64YE22w" outgoing="_18PZ4nMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QAmnMaEeeoYuc64YE22w" target="_18QAnnMaEeeoYuc64YE22w" source="_18QAqXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QAm3MaEeeoYuc64YE22w" target="_18QApHMaEeeoYuc64YE22w" source="_18QArnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QAnHMaEeeoYuc64YE22w" target="_18QAnXMaEeeoYuc64YE22w" source="_18QAp3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QAnXMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_18QAnHMaEeeoYuc64YE22w" behavior="_18R35HMaEeeoYuc64YE22w">
                <argument xmi:id="_18QAnnMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_18QAmnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAn3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAoHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18QAoXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_18PZ33MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAonMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAo3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18QApHMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_18QAm3MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QApXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QApnMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QAp3MaEeeoYuc64YE22w" name="Tuple@7bac0628" outgoing="_18QAnHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QAqHMaEeeoYuc64YE22w" name="Value(&quot;k3&quot;)">
                  <result xmi:id="_18QAqXMaEeeoYuc64YE22w" name="Value(&quot;k3&quot;).result" outgoing="_18QAmnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAqnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAq3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18QArHMaEeeoYuc64YE22w" value="k3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QArXMaEeeoYuc64YE22w" name="Value(1)">
                  <result xmi:id="_18QArnMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18QAm3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAr3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAsHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18QAsXMaEeeoYuc64YE22w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QAsnMaEeeoYuc64YE22w" name="ExpressionStatement@2fcb157a" incoming="_18PZ4nMaEeeoYuc64YE22w" outgoing="_18PZ5HMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QAs3MaEeeoYuc64YE22w" target="_18QAt3MaEeeoYuc64YE22w" source="_18QAwnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QAtHMaEeeoYuc64YE22w" target="_18QAvXMaEeeoYuc64YE22w" source="_18QAx3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QAtXMaEeeoYuc64YE22w" target="_18QAtnMaEeeoYuc64YE22w" source="_18QAwHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QAtnMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_18QAtXMaEeeoYuc64YE22w" behavior="_18R35HMaEeeoYuc64YE22w">
                <argument xmi:id="_18QAt3MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_18QAs3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAuHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAuXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18QAunMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_18PZ4XMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAu3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAvHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18QAvXMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_18QAtHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAvnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAv3MaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QAwHMaEeeoYuc64YE22w" name="Tuple@7e48339e" outgoing="_18QAtXMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QAwXMaEeeoYuc64YE22w" name="Value(&quot;k4&quot;)">
                  <result xmi:id="_18QAwnMaEeeoYuc64YE22w" name="Value(&quot;k4&quot;).result" outgoing="_18QAs3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAw3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAxHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18QAxXMaEeeoYuc64YE22w" value="k4">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QAxnMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_18QAx3MaEeeoYuc64YE22w" name="Value(null).result" outgoing="_18QAtHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QAyHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QAyXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_18QAynMaEeeoYuc64YE22w"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QAy3MaEeeoYuc64YE22w" name="ExpressionStatement@597edc92" incoming="_18PZ5HMaEeeoYuc64YE22w" outgoing="_18PZ5nMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QAzHMaEeeoYuc64YE22w" target="_18QA0HMaEeeoYuc64YE22w" source="_18QA23MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QAzXMaEeeoYuc64YE22w" target="_18QA1nMaEeeoYuc64YE22w" source="_18QA4HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QAznMaEeeoYuc64YE22w" target="_18QAz3MaEeeoYuc64YE22w" source="_18QA2XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QAz3MaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_18QAznMaEeeoYuc64YE22w" behavior="_18R35HMaEeeoYuc64YE22w">
                <argument xmi:id="_18QA0HMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_18QAzHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QA0XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QA0nMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18QA03MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_18PZ43MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QA1HMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QA1XMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18QA1nMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_18QAzXMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QA13MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QA2HMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QA2XMaEeeoYuc64YE22w" name="Tuple@739d9f97" outgoing="_18QAznMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QA2nMaEeeoYuc64YE22w" name="Value(&quot;u&quot;)">
                  <result xmi:id="_18QA23MaEeeoYuc64YE22w" name="Value(&quot;u&quot;).result" outgoing="_18QAzHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QA3HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QA3XMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18QA3nMaEeeoYuc64YE22w" value="u">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QA33MaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_18QA4HMaEeeoYuc64YE22w" name="Value(null).result" outgoing="_18QAzXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QA4XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QA4nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_18QA43MaEeeoYuc64YE22w"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QA5HMaEeeoYuc64YE22w" name="ExpressionStatement@7ae078a0" incoming="_18PZ5nMaEeeoYuc64YE22w" outgoing="_18PZ53MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QA5XMaEeeoYuc64YE22w" target="_18QA6HMaEeeoYuc64YE22w" source="_18QA8HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QA5nMaEeeoYuc64YE22w" target="_18QA53MaEeeoYuc64YE22w" source="_18QA7nMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QA53MaEeeoYuc64YE22w" name="Call(AssertFalse)" incoming="_18QA5nMaEeeoYuc64YE22w" behavior="_18R5_nMaEeeoYuc64YE22w">
                <argument xmi:id="_18QA6HMaEeeoYuc64YE22w" name="Call(AssertFalse).argument(label)" incoming="_18QA5XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QA6XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QA6nMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18QA63MaEeeoYuc64YE22w" name="Call(AssertFalse).argument(condition)" incoming="_18PZ5XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QA7HMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QA7XMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QA7nMaEeeoYuc64YE22w" name="Tuple@5a1b38c3" outgoing="_18QA5nMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QA73MaEeeoYuc64YE22w" name="Value(&quot;v&quot;)">
                  <result xmi:id="_18QA8HMaEeeoYuc64YE22w" name="Value(&quot;v&quot;).result" outgoing="_18QA5XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QA8XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QA8nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18QA83MaEeeoYuc64YE22w" value="v">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QA9HMaEeeoYuc64YE22w" name="ExpressionStatement@1ee48960" incoming="_18PZ53MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QA9XMaEeeoYuc64YE22w" target="_18QA93MaEeeoYuc64YE22w" source="_18QA-3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_18QA9nMaEeeoYuc64YE22w" name="Call(done)" operation="_18R3UXMaEeeoYuc64YE22w">
                <target xmi:id="_18QA93MaEeeoYuc64YE22w" name="Call(done).target" incoming="_18QA9XMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QA-HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QA-XMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_18QA-nMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_18QA-3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18QA9XMaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QA_HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QA_XMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_18QA_nMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_18QA_3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18PZnHMaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBAHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBAXMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_18QBAnMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18PZnHMaEeeoYuc64YE22w" outgoing="_18PZjnMaEeeoYuc64YE22w _18PZnXMaEeeoYuc64YE22w _18PZoHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QBA3MaEeeoYuc64YE22w" name="Super" incoming="_18PZpnMaEeeoYuc64YE22w" outgoing="_18PZn3MaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QBBHMaEeeoYuc64YE22w" name="ExpressionStatement@641be433">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QBBXMaEeeoYuc64YE22w" name="Node(Call(Test$method$1))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBBnMaEeeoYuc64YE22w" target="_18QBB3MaEeeoYuc64YE22w" source="_18QBDnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QBB3MaEeeoYuc64YE22w" name="Output(Call(Test$method$1).result())" incoming="_18QBBnMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBCHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBCXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QBCnMaEeeoYuc64YE22w" name="Call(Test$method$1)" behavior="_18R2mnMaEeeoYuc64YE22w">
                  <argument xmi:id="_18QBC3MaEeeoYuc64YE22w" name="Call(Test$method$1).argument(tester)" incoming="_18PZj3MaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBDHMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBDXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QBDnMaEeeoYuc64YE22w" name="Call(Test$method$1).result()" outgoing="_18QBBnMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBD3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBEHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_18QBEXMaEeeoYuc64YE22w" name="Call(Expressions_Operator$initialization$1)" incoming="_18PZn3MaEeeoYuc64YE22w" outgoing="_18PZnnMaEeeoYuc64YE22w" operation="_18RQ_nMaEeeoYuc64YE22w">
            <target xmi:id="_18QBEnMaEeeoYuc64YE22w" name="Call(Expressions_Operator$initialization$1).target" incoming="_18PZnXMaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBE3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBFHMaEeeoYuc64YE22w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18QBFXMaEeeoYuc64YE22w" name="Read(Expressions_Operator$initializationFlag$1)" structuralFeature="_18PZWHMaEeeoYuc64YE22w">
            <object xmi:id="_18QBFnMaEeeoYuc64YE22w" name="Read(Expressions_Operator$initializationFlag$1).object" incoming="_18PZoHMaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBF3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBGHMaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_18QBGXMaEeeoYuc64YE22w" name="Read(Expressions_Operator$initializationFlag$1).result" outgoing="_18PZoXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBGnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBG3MaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QBHHMaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_18QBHXMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18PZoXMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBHnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBH3MaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_18QBIHMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18PZonMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBIXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBInMaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QBI3MaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_18QBJHMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18PZo3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBJXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBJnMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_18QBJ3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_18QBKHMaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_18QBKXMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18PZonMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBKnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBK3MaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_18QBLHMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18PZpXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBLXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBLnMaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_18QBL3MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18PZo3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBMHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBMXMaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_18QBMnMaEeeoYuc64YE22w" name="InitialNode" outgoing="_18PZpHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_18QBM3MaEeeoYuc64YE22w" name="Decision(Test(Expressions_Operator$initializationFlag$1))" incoming="_18PZpHMaEeeoYuc64YE22w _18PZpXMaEeeoYuc64YE22w" outgoing="_18PZpnMaEeeoYuc64YE22w" decisionInputFlow="_18PZpXMaEeeoYuc64YE22w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18PZknMaEeeoYuc64YE22w" name="Input(tester)" outgoing="_18PZjXMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" parameter="_18PZh3MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18PZk3MaEeeoYuc64YE22w" name="Return" incoming="_18PZjnMaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" parameter="_18PZinMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:JoinNode" xmi:id="_18PZlHMaEeeoYuc64YE22w" name="Join(Input))" incoming="_18PZkHMaEeeoYuc64YE22w" outgoing="_18PZkXMaEeeoYuc64YE22w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_18QBNHMaEeeoYuc64YE22w" name="test$method$1" specification="_18RRCnMaEeeoYuc64YE22w" node="_18QBsXMaEeeoYuc64YE22w _18QBsnMaEeeoYuc64YE22w _18QBs3MaEeeoYuc64YE22w _18QBtHMaEeeoYuc64YE22w _18QBtXMaEeeoYuc64YE22w _18QBtnMaEeeoYuc64YE22w _18QBt3MaEeeoYuc64YE22w _18QBuHMaEeeoYuc64YE22w _18QBuXMaEeeoYuc64YE22w _18QBunMaEeeoYuc64YE22w _18QBu3MaEeeoYuc64YE22w _18QBvHMaEeeoYuc64YE22w _18QBvXMaEeeoYuc64YE22w _18QBvnMaEeeoYuc64YE22w _18QBv3MaEeeoYuc64YE22w _18QBwHMaEeeoYuc64YE22w _18QBwXMaEeeoYuc64YE22w _18QBwnMaEeeoYuc64YE22w _18QBw3MaEeeoYuc64YE22w _18QBxHMaEeeoYuc64YE22w _18QBxXMaEeeoYuc64YE22w _18QBxnMaEeeoYuc64YE22w _18QBx3MaEeeoYuc64YE22w _18QByHMaEeeoYuc64YE22w _18QByXMaEeeoYuc64YE22w _18QBynMaEeeoYuc64YE22w _18QBy3MaEeeoYuc64YE22w _18QBzHMaEeeoYuc64YE22w _18QBzXMaEeeoYuc64YE22w _18QBznMaEeeoYuc64YE22w _18QBz3MaEeeoYuc64YE22w _18QB0HMaEeeoYuc64YE22w" group="_18QB0HMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_18QBNXMaEeeoYuc64YE22w" name="i" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBNnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBN3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBOHMaEeeoYuc64YE22w" name="j" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBOXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBOnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBO3MaEeeoYuc64YE22w" name="bs" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBPHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBPXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBPnMaEeeoYuc64YE22w" name="h" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBP3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBQHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBQXMaEeeoYuc64YE22w" name="a" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBQnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBQ3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBRHMaEeeoYuc64YE22w" name="b" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBRXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBRnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBR3MaEeeoYuc64YE22w" name="c" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBSHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBSXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBSnMaEeeoYuc64YE22w" name="d" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBS3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBTHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBTXMaEeeoYuc64YE22w" name="e" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBTnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBT3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBUHMaEeeoYuc64YE22w" name="e1" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBUXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBUnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBU3MaEeeoYuc64YE22w" name="e2" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBVHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBVXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBVnMaEeeoYuc64YE22w" name="e3" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBV3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBWHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBWXMaEeeoYuc64YE22w" name="e4" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBWnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBW3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBXHMaEeeoYuc64YE22w" name="e5" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBXXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBXnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBX3MaEeeoYuc64YE22w" name="e6" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBYHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBYXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBYnMaEeeoYuc64YE22w" name="e7" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBY3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBZHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBZXMaEeeoYuc64YE22w" name="e8" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBZnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBZ3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBaHMaEeeoYuc64YE22w" name="e9" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBaXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBanMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBa3MaEeeoYuc64YE22w" name="f" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBbHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBbXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBbnMaEeeoYuc64YE22w" name="f1" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBb3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBcHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBcXMaEeeoYuc64YE22w" name="f2" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBcnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBc3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBdHMaEeeoYuc64YE22w" name="x" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBdXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBdnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBd3MaEeeoYuc64YE22w" name="y" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBeHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBeXMaEeeoYuc64YE22w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBenMaEeeoYuc64YE22w" name="z" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBe3MaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBfHMaEeeoYuc64YE22w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBfXMaEeeoYuc64YE22w" name="r" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBfnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBf3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBgHMaEeeoYuc64YE22w" name="k1" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBgXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBgnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBg3MaEeeoYuc64YE22w" name="k2" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBhHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBhXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBhnMaEeeoYuc64YE22w" name="k3" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBh3MaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBiHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBiXMaEeeoYuc64YE22w" name="k4" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBinMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBi3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBjHMaEeeoYuc64YE22w" name="u" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBjXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBjnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18QBj3MaEeeoYuc64YE22w" name="v" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QBkHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QBkXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBknMaEeeoYuc64YE22w" target="_18QBsXMaEeeoYuc64YE22w" source="_18QCa3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBk3MaEeeoYuc64YE22w" target="_18QBsnMaEeeoYuc64YE22w" source="_18QCbnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBlHMaEeeoYuc64YE22w" target="_18QBs3MaEeeoYuc64YE22w" source="_18QCcXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBlXMaEeeoYuc64YE22w" target="_18QBtHMaEeeoYuc64YE22w" source="_18QCdHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBlnMaEeeoYuc64YE22w" target="_18QBtXMaEeeoYuc64YE22w" source="_18QCd3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBl3MaEeeoYuc64YE22w" target="_18QBtnMaEeeoYuc64YE22w" source="_18QCenMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBmHMaEeeoYuc64YE22w" target="_18QBt3MaEeeoYuc64YE22w" source="_18QCfXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBmXMaEeeoYuc64YE22w" target="_18QBuHMaEeeoYuc64YE22w" source="_18QCgHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBmnMaEeeoYuc64YE22w" target="_18QBuXMaEeeoYuc64YE22w" source="_18QCg3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBm3MaEeeoYuc64YE22w" target="_18QBunMaEeeoYuc64YE22w" source="_18QChnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBnHMaEeeoYuc64YE22w" target="_18QBu3MaEeeoYuc64YE22w" source="_18QCiXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBnXMaEeeoYuc64YE22w" target="_18QBvHMaEeeoYuc64YE22w" source="_18QCjHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBnnMaEeeoYuc64YE22w" target="_18QBvXMaEeeoYuc64YE22w" source="_18QCj3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBn3MaEeeoYuc64YE22w" target="_18QBvnMaEeeoYuc64YE22w" source="_18QCknMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBoHMaEeeoYuc64YE22w" target="_18QBv3MaEeeoYuc64YE22w" source="_18QClXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBoXMaEeeoYuc64YE22w" target="_18QBwHMaEeeoYuc64YE22w" source="_18QCmHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBonMaEeeoYuc64YE22w" target="_18QBwXMaEeeoYuc64YE22w" source="_18QCm3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBo3MaEeeoYuc64YE22w" target="_18QBwnMaEeeoYuc64YE22w" source="_18QCnnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBpHMaEeeoYuc64YE22w" target="_18QBw3MaEeeoYuc64YE22w" source="_18QCoXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBpXMaEeeoYuc64YE22w" target="_18QBxHMaEeeoYuc64YE22w" source="_18QCpHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBpnMaEeeoYuc64YE22w" target="_18QBxXMaEeeoYuc64YE22w" source="_18QCp3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBp3MaEeeoYuc64YE22w" target="_18QBxnMaEeeoYuc64YE22w" source="_18QCqnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBqHMaEeeoYuc64YE22w" target="_18QBx3MaEeeoYuc64YE22w" source="_18QCrXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBqXMaEeeoYuc64YE22w" target="_18QByHMaEeeoYuc64YE22w" source="_18QCsHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBqnMaEeeoYuc64YE22w" target="_18QByXMaEeeoYuc64YE22w" source="_18QCs3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBq3MaEeeoYuc64YE22w" target="_18QBynMaEeeoYuc64YE22w" source="_18QCtnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBrHMaEeeoYuc64YE22w" target="_18QBy3MaEeeoYuc64YE22w" source="_18QCuXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBrXMaEeeoYuc64YE22w" target="_18QBzHMaEeeoYuc64YE22w" source="_18QCvHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBrnMaEeeoYuc64YE22w" target="_18QBzXMaEeeoYuc64YE22w" source="_18QCv3MaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBr3MaEeeoYuc64YE22w" target="_18QBznMaEeeoYuc64YE22w" source="_18QCwnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18QBsHMaEeeoYuc64YE22w" target="_18QBz3MaEeeoYuc64YE22w" source="_18QCxXMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_18QB0HMaEeeoYuc64YE22w" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB0XMaEeeoYuc64YE22w" target="_18QC33MaEeeoYuc64YE22w" source="_18QCyHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB0nMaEeeoYuc64YE22w" target="_18QC9nMaEeeoYuc64YE22w" source="_18QC33MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB03MaEeeoYuc64YE22w" target="_18QC_3MaEeeoYuc64YE22w" source="_18QC9nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB1HMaEeeoYuc64YE22w" target="_18QDInMaEeeoYuc64YE22w" source="_18QDBHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB1XMaEeeoYuc64YE22w" target="_18QDIXMaEeeoYuc64YE22w" source="_18QC_3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB1nMaEeeoYuc64YE22w" target="_18QDKXMaEeeoYuc64YE22w" source="_18QDInMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB13MaEeeoYuc64YE22w" target="_18QDJHMaEeeoYuc64YE22w" source="_18QDIXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB2HMaEeeoYuc64YE22w" target="_18QDOXMaEeeoYuc64YE22w" source="_18QDJnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB2XMaEeeoYuc64YE22w" target="_18QDPHMaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB2nMaEeeoYuc64YE22w" target="_18QDL3MaEeeoYuc64YE22w" source="_18QDJHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB23MaEeeoYuc64YE22w" target="_18QDW3MaEeeoYuc64YE22w" source="_18QDMXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB3HMaEeeoYuc64YE22w" target="_18QDXnMaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB3XMaEeeoYuc64YE22w" target="_18QDQnMaEeeoYuc64YE22w" source="_18QDL3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB3nMaEeeoYuc64YE22w" target="_18QDjXMaEeeoYuc64YE22w" source="_18QDRHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB33MaEeeoYuc64YE22w" target="_18QDkHMaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB4HMaEeeoYuc64YE22w" target="_18QDg3MaEeeoYuc64YE22w" source="_18QDQnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB4XMaEeeoYuc64YE22w" target="_18QDoHMaEeeoYuc64YE22w" source="_18QDhXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB4nMaEeeoYuc64YE22w" target="_18QDo3MaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB43MaEeeoYuc64YE22w" target="_18QDlnMaEeeoYuc64YE22w" source="_18QDg3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB5HMaEeeoYuc64YE22w" target="_18QDs3MaEeeoYuc64YE22w" source="_18QDmHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB5XMaEeeoYuc64YE22w" target="_18QDtnMaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB5nMaEeeoYuc64YE22w" target="_18QDqXMaEeeoYuc64YE22w" source="_18QDlnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB53MaEeeoYuc64YE22w" target="_18QDvHMaEeeoYuc64YE22w" source="_18QDqXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB6HMaEeeoYuc64YE22w" target="_18QD53MaEeeoYuc64YE22w" source="_18QDvnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB6XMaEeeoYuc64YE22w" target="_18QD4nMaEeeoYuc64YE22w" source="_18QDvHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB6nMaEeeoYuc64YE22w" target="_18QEBXMaEeeoYuc64YE22w" source="_18QD5HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB63MaEeeoYuc64YE22w" target="_18QD7XMaEeeoYuc64YE22w" source="_18QD4nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB7HMaEeeoYuc64YE22w" target="_18QEJnMaEeeoYuc64YE22w" source="_18QD73MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB7XMaEeeoYuc64YE22w" target="_18QEDnMaEeeoYuc64YE22w" source="_18QD7XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB7nMaEeeoYuc64YE22w" target="_18QEP3MaEeeoYuc64YE22w" source="_18QEEHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB73MaEeeoYuc64YE22w" target="_18QEL3MaEeeoYuc64YE22w" source="_18QEDnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB8HMaEeeoYuc64YE22w" target="_18QEWHMaEeeoYuc64YE22w" source="_18QEMXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB8XMaEeeoYuc64YE22w" target="_18QESHMaEeeoYuc64YE22w" source="_18QEL3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB8nMaEeeoYuc64YE22w" target="_18QEcXMaEeeoYuc64YE22w" source="_18QESnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB83MaEeeoYuc64YE22w" target="_18QEYXMaEeeoYuc64YE22w" source="_18QESHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB9HMaEeeoYuc64YE22w" target="_18QEknMaEeeoYuc64YE22w" source="_18QEY3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB9XMaEeeoYuc64YE22w" target="_18QEenMaEeeoYuc64YE22w" source="_18QEYXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB9nMaEeeoYuc64YE22w" target="_18QEm3MaEeeoYuc64YE22w" source="_18QEenMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB93MaEeeoYuc64YE22w" target="_18QEq3MaEeeoYuc64YE22w" source="_18QEnXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB-HMaEeeoYuc64YE22w" target="_18QEpHMaEeeoYuc64YE22w" source="_18QEm3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB-XMaEeeoYuc64YE22w" target="_18QE4nMaEeeoYuc64YE22w" source="_18QEpnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB-nMaEeeoYuc64YE22w" target="_18QE1HMaEeeoYuc64YE22w" source="_18QEpHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB-3MaEeeoYuc64YE22w" target="_18Qnp3MaEeeoYuc64YE22w" source="_18QE1nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB_HMaEeeoYuc64YE22w" target="_18QnmXMaEeeoYuc64YE22w" source="_18QE1HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB_XMaEeeoYuc64YE22w" target="_18Qn7HMaEeeoYuc64YE22w" source="_18Qnm3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QB_nMaEeeoYuc64YE22w" target="_18Qn33MaEeeoYuc64YE22w" source="_18QnmXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QB_3MaEeeoYuc64YE22w" target="_18QoKnMaEeeoYuc64YE22w" source="_18Qn4XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCAHMaEeeoYuc64YE22w" target="_18QoHXMaEeeoYuc64YE22w" source="_18Qn33MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCAXMaEeeoYuc64YE22w" target="_18QoaHMaEeeoYuc64YE22w" source="_18QoH3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCAnMaEeeoYuc64YE22w" target="_18QoW3MaEeeoYuc64YE22w" source="_18QoHXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCA3MaEeeoYuc64YE22w" target="_18Qop3MaEeeoYuc64YE22w" source="_18QoXXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCBHMaEeeoYuc64YE22w" target="_18QomXMaEeeoYuc64YE22w" source="_18QoW3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCBXMaEeeoYuc64YE22w" target="_18Qo6XMaEeeoYuc64YE22w" source="_18QDq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCBnMaEeeoYuc64YE22w" target="_18Qo7HMaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCB3MaEeeoYuc64YE22w" target="_18Qo33MaEeeoYuc64YE22w" source="_18QomXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCCHMaEeeoYuc64YE22w" target="_18Qo_HMaEeeoYuc64YE22w" source="_18QDq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCCXMaEeeoYuc64YE22w" target="_18Qo_3MaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCCnMaEeeoYuc64YE22w" target="_18Qo8nMaEeeoYuc64YE22w" source="_18Qo33MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCC3MaEeeoYuc64YE22w" target="_18QpD3MaEeeoYuc64YE22w" source="_18QDq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCDHMaEeeoYuc64YE22w" target="_18QpEnMaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCDXMaEeeoYuc64YE22w" target="_18QpBXMaEeeoYuc64YE22w" source="_18Qo8nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCDnMaEeeoYuc64YE22w" target="_18QpInMaEeeoYuc64YE22w" source="_18QDq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCD3MaEeeoYuc64YE22w" target="_18QpJXMaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCEHMaEeeoYuc64YE22w" target="_18QpGHMaEeeoYuc64YE22w" source="_18QpBXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCEXMaEeeoYuc64YE22w" target="_18QpK3MaEeeoYuc64YE22w" source="_18QpGHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCEnMaEeeoYuc64YE22w" target="_18QpNHMaEeeoYuc64YE22w" source="_18QpK3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCE3MaEeeoYuc64YE22w" target="_18QpR3MaEeeoYuc64YE22w" source="_18QpLXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCFHMaEeeoYuc64YE22w" target="_18QpSnMaEeeoYuc64YE22w" source="_18QpNnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCFXMaEeeoYuc64YE22w" target="_18QpPXMaEeeoYuc64YE22w" source="_18QpNHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCFnMaEeeoYuc64YE22w" target="_18QpWnMaEeeoYuc64YE22w" source="_18QpP3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCF3MaEeeoYuc64YE22w" target="_18QpXXMaEeeoYuc64YE22w" source="_18QpLXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCGHMaEeeoYuc64YE22w" target="_18QpUHMaEeeoYuc64YE22w" source="_18QpPXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCGXMaEeeoYuc64YE22w" target="_18QpaHMaEeeoYuc64YE22w" source="_18QpUnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCGnMaEeeoYuc64YE22w" target="_18QpY3MaEeeoYuc64YE22w" source="_18QpUHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCG3MaEeeoYuc64YE22w" target="_18QpbnMaEeeoYuc64YE22w" source="_18QpY3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCHHMaEeeoYuc64YE22w" target="_18QplXMaEeeoYuc64YE22w" source="_18QpbnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCHXMaEeeoYuc64YE22w" target="_18QqBHMaEeeoYuc64YE22w" source="_18QCynMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCHnMaEeeoYuc64YE22w" target="_18Qp_3MaEeeoYuc64YE22w" source="_18QplXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCH3MaEeeoYuc64YE22w" target="_18QqD3MaEeeoYuc64YE22w" source="_18QDq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCIHMaEeeoYuc64YE22w" target="_18QqCnMaEeeoYuc64YE22w" source="_18Qp_3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCIXMaEeeoYuc64YE22w" target="_18QqIHMaEeeoYuc64YE22w" source="_18QDq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCInMaEeeoYuc64YE22w" target="_18QqFXMaEeeoYuc64YE22w" source="_18QqCnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCI3MaEeeoYuc64YE22w" target="_18QqL3MaEeeoYuc64YE22w" source="_18QC4XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCJHMaEeeoYuc64YE22w" target="_18QqNXMaEeeoYuc64YE22w" source="_18QC4XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCJXMaEeeoYuc64YE22w" target="_18QqKXMaEeeoYuc64YE22w" source="_18QqFXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCJnMaEeeoYuc64YE22w" target="_18QqTnMaEeeoYuc64YE22w" source="_18QCynMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCJ3MaEeeoYuc64YE22w" target="_18QqP3MaEeeoYuc64YE22w" source="_18QqKXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCKHMaEeeoYuc64YE22w" target="_18Qqb3MaEeeoYuc64YE22w" source="_18QCynMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCKXMaEeeoYuc64YE22w" target="_18QqW3MaEeeoYuc64YE22w" source="_18QqP3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCKnMaEeeoYuc64YE22w" target="_18Qqd3MaEeeoYuc64YE22w" source="_18QqW3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCK3MaEeeoYuc64YE22w" target="_18QqmXMaEeeoYuc64YE22w" source="_18QDq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCLHMaEeeoYuc64YE22w" target="_18QqnHMaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCLXMaEeeoYuc64YE22w" target="_18QqqHMaEeeoYuc64YE22w" source="_18QDq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCLnMaEeeoYuc64YE22w" target="_18Qqq3MaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCL3MaEeeoYuc64YE22w" target="_18QqunMaEeeoYuc64YE22w" source="_18QpLXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCMHMaEeeoYuc64YE22w" target="_18QqjHMaEeeoYuc64YE22w" source="_18Qqd3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCMXMaEeeoYuc64YE22w" target="_18Qq53MaEeeoYuc64YE22w" source="_18QDq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCMnMaEeeoYuc64YE22w" target="_18QrBHMaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCM3MaEeeoYuc64YE22w" target="_18Qqz3MaEeeoYuc64YE22w" source="_18QqjHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCNHMaEeeoYuc64YE22w" target="_18QrKnMaEeeoYuc64YE22w" source="_18QDq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCNXMaEeeoYuc64YE22w" target="_18QrUXMaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCNnMaEeeoYuc64YE22w" target="_18QrF3MaEeeoYuc64YE22w" source="_18Qqz3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCN3MaEeeoYuc64YE22w" target="_18QrWnMaEeeoYuc64YE22w" source="_18QrF3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCOHMaEeeoYuc64YE22w" target="_18ROlHMaEeeoYuc64YE22w" source="_18ROknMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCOXMaEeeoYuc64YE22w" target="_18ROk3MaEeeoYuc64YE22w" source="_18QrWnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCOnMaEeeoYuc64YE22w" target="_18RO3nMaEeeoYuc64YE22w" source="_18ROknMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCO3MaEeeoYuc64YE22w" target="_18ROlnMaEeeoYuc64YE22w" source="_18ROk3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCPHMaEeeoYuc64YE22w" target="_18RO6nMaEeeoYuc64YE22w" source="_18RO6HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCPXMaEeeoYuc64YE22w" target="_18RO6XMaEeeoYuc64YE22w" source="_18ROlnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCPnMaEeeoYuc64YE22w" target="_18RO-XMaEeeoYuc64YE22w" source="_18QqjnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCP3MaEeeoYuc64YE22w" target="_18RO7HMaEeeoYuc64YE22w" source="_18RO6XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCQHMaEeeoYuc64YE22w" target="_18RPRHMaEeeoYuc64YE22w" source="_18QqjnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCQXMaEeeoYuc64YE22w" target="_18RPFnMaEeeoYuc64YE22w" source="_18RO7HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCQnMaEeeoYuc64YE22w" target="_18RPRnMaEeeoYuc64YE22w" source="_18RPFnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCQ3MaEeeoYuc64YE22w" target="_18RPwnMaEeeoYuc64YE22w" source="_18RPRnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCRHMaEeeoYuc64YE22w" target="_18RQBnMaEeeoYuc64YE22w" source="_18RQAnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCRXMaEeeoYuc64YE22w" target="_18RQBXMaEeeoYuc64YE22w" source="_18RPwnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCRnMaEeeoYuc64YE22w" target="_18RQCXMaEeeoYuc64YE22w" source="_18RQBHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCR3MaEeeoYuc64YE22w" target="_18RQCHMaEeeoYuc64YE22w" source="_18RQBXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCSHMaEeeoYuc64YE22w" target="_18RQC3MaEeeoYuc64YE22w" source="_18RQCHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCSXMaEeeoYuc64YE22w" target="_18RQLnMaEeeoYuc64YE22w" source="_18RQC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCSnMaEeeoYuc64YE22w" target="_18RQsXMaEeeoYuc64YE22w" source="_18QC4XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18QCS3MaEeeoYuc64YE22w" target="_18RQnHMaEeeoYuc64YE22w" source="_18RQLnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCTHMaEeeoYuc64YE22w" target="_18QCa3MaEeeoYuc64YE22w" source="_18QDq3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCTXMaEeeoYuc64YE22w" target="_18QCbnMaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCTnMaEeeoYuc64YE22w" target="_18QCcXMaEeeoYuc64YE22w" source="_18QEfHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCT3MaEeeoYuc64YE22w" target="_18QCdHMaEeeoYuc64YE22w" source="_18Qom3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCUHMaEeeoYuc64YE22w" target="_18QCd3MaEeeoYuc64YE22w" source="_18Qo4XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCUXMaEeeoYuc64YE22w" target="_18QCenMaEeeoYuc64YE22w" source="_18Qo9HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCUnMaEeeoYuc64YE22w" target="_18QCfXMaEeeoYuc64YE22w" source="_18QpB3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCU3MaEeeoYuc64YE22w" target="_18QCgHMaEeeoYuc64YE22w" source="_18QpGnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCVHMaEeeoYuc64YE22w" target="_18QCg3MaEeeoYuc64YE22w" source="_18QpZXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCVXMaEeeoYuc64YE22w" target="_18QChnMaEeeoYuc64YE22w" source="_18QpcHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCVnMaEeeoYuc64YE22w" target="_18QCiXMaEeeoYuc64YE22w" source="_18Qpl3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCV3MaEeeoYuc64YE22w" target="_18QCjHMaEeeoYuc64YE22w" source="_18QqAXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCWHMaEeeoYuc64YE22w" target="_18QCj3MaEeeoYuc64YE22w" source="_18QqDHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCWXMaEeeoYuc64YE22w" target="_18QCknMaEeeoYuc64YE22w" source="_18QqF3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCWnMaEeeoYuc64YE22w" target="_18QClXMaEeeoYuc64YE22w" source="_18QqK3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCW3MaEeeoYuc64YE22w" target="_18QCmHMaEeeoYuc64YE22w" source="_18QqQXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCXHMaEeeoYuc64YE22w" target="_18QCm3MaEeeoYuc64YE22w" source="_18QqXXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCXXMaEeeoYuc64YE22w" target="_18QCnnMaEeeoYuc64YE22w" source="_18QqeXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCXnMaEeeoYuc64YE22w" target="_18QCoXMaEeeoYuc64YE22w" source="_18QqjnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCX3MaEeeoYuc64YE22w" target="_18QCpHMaEeeoYuc64YE22w" source="_18Qq0XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCYHMaEeeoYuc64YE22w" target="_18QCp3MaEeeoYuc64YE22w" source="_18QrGXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCYXMaEeeoYuc64YE22w" target="_18QCqnMaEeeoYuc64YE22w" source="_18RO7nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCYnMaEeeoYuc64YE22w" target="_18QCrXMaEeeoYuc64YE22w" source="_18RPGHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCY3MaEeeoYuc64YE22w" target="_18QCsHMaEeeoYuc64YE22w" source="_18RPSHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCZHMaEeeoYuc64YE22w" target="_18QCs3MaEeeoYuc64YE22w" source="_18RQnnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCZXMaEeeoYuc64YE22w" target="_18QCtnMaEeeoYuc64YE22w" source="_18ROlHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCZnMaEeeoYuc64YE22w" target="_18QCuXMaEeeoYuc64YE22w" source="_18RO6nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCZ3MaEeeoYuc64YE22w" target="_18QCvHMaEeeoYuc64YE22w" source="_18RQBnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCaHMaEeeoYuc64YE22w" target="_18QCv3MaEeeoYuc64YE22w" source="_18RQCXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCaXMaEeeoYuc64YE22w" target="_18QCwnMaEeeoYuc64YE22w" source="_18RQDXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCanMaEeeoYuc64YE22w" target="_18QCxXMaEeeoYuc64YE22w" source="_18RQMHMaEeeoYuc64YE22w"/>
          <structuredNodeOutput xmi:id="_18QCa3MaEeeoYuc64YE22w" name="Output(i)" incoming="_18QCTHMaEeeoYuc64YE22w" outgoing="_18QBknMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCbHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCbXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCbnMaEeeoYuc64YE22w" name="Output(j)" incoming="_18QCTXMaEeeoYuc64YE22w" outgoing="_18QBk3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCb3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCcHMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCcXMaEeeoYuc64YE22w" name="Output(bs)" incoming="_18QCTnMaEeeoYuc64YE22w" outgoing="_18QBlHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCcnMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCc3MaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCdHMaEeeoYuc64YE22w" name="Output(h)" incoming="_18QCT3MaEeeoYuc64YE22w" outgoing="_18QBlXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCdXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCdnMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCd3MaEeeoYuc64YE22w" name="Output(a)" incoming="_18QCUHMaEeeoYuc64YE22w" outgoing="_18QBlnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCeHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCeXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCenMaEeeoYuc64YE22w" name="Output(b)" incoming="_18QCUXMaEeeoYuc64YE22w" outgoing="_18QBl3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCe3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCfHMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCfXMaEeeoYuc64YE22w" name="Output(c)" incoming="_18QCUnMaEeeoYuc64YE22w" outgoing="_18QBmHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCfnMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCf3MaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCgHMaEeeoYuc64YE22w" name="Output(d)" incoming="_18QCU3MaEeeoYuc64YE22w" outgoing="_18QBmXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCgXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCgnMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCg3MaEeeoYuc64YE22w" name="Output(e)" incoming="_18QCVHMaEeeoYuc64YE22w" outgoing="_18QBmnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QChHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QChXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QChnMaEeeoYuc64YE22w" name="Output(e1)" incoming="_18QCVXMaEeeoYuc64YE22w" outgoing="_18QBm3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCh3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCiHMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCiXMaEeeoYuc64YE22w" name="Output(e2)" incoming="_18QCVnMaEeeoYuc64YE22w" outgoing="_18QBnHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCinMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCi3MaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCjHMaEeeoYuc64YE22w" name="Output(e3)" incoming="_18QCV3MaEeeoYuc64YE22w" outgoing="_18QBnXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCjXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCjnMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCj3MaEeeoYuc64YE22w" name="Output(e4)" incoming="_18QCWHMaEeeoYuc64YE22w" outgoing="_18QBnnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCkHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCkXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCknMaEeeoYuc64YE22w" name="Output(e5)" incoming="_18QCWXMaEeeoYuc64YE22w" outgoing="_18QBn3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCk3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QClHMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QClXMaEeeoYuc64YE22w" name="Output(e6)" incoming="_18QCWnMaEeeoYuc64YE22w" outgoing="_18QBoHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QClnMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCl3MaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCmHMaEeeoYuc64YE22w" name="Output(e7)" incoming="_18QCW3MaEeeoYuc64YE22w" outgoing="_18QBoXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCmXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCmnMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCm3MaEeeoYuc64YE22w" name="Output(e8)" incoming="_18QCXHMaEeeoYuc64YE22w" outgoing="_18QBonMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCnHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCnXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCnnMaEeeoYuc64YE22w" name="Output(e9)" incoming="_18QCXXMaEeeoYuc64YE22w" outgoing="_18QBo3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCn3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCoHMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCoXMaEeeoYuc64YE22w" name="Output(f)" incoming="_18QCXnMaEeeoYuc64YE22w" outgoing="_18QBpHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QConMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCo3MaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCpHMaEeeoYuc64YE22w" name="Output(f1)" incoming="_18QCX3MaEeeoYuc64YE22w" outgoing="_18QBpXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCpXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCpnMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCp3MaEeeoYuc64YE22w" name="Output(f2)" incoming="_18QCYHMaEeeoYuc64YE22w" outgoing="_18QBpnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCqHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCqXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCqnMaEeeoYuc64YE22w" name="Output(x)" incoming="_18QCYXMaEeeoYuc64YE22w" outgoing="_18QBp3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCq3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCrHMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCrXMaEeeoYuc64YE22w" name="Output(y)" incoming="_18QCYnMaEeeoYuc64YE22w" outgoing="_18QBqHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCrnMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCr3MaEeeoYuc64YE22w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCsHMaEeeoYuc64YE22w" name="Output(z)" incoming="_18QCY3MaEeeoYuc64YE22w" outgoing="_18QBqXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCsXMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCsnMaEeeoYuc64YE22w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCs3MaEeeoYuc64YE22w" name="Output(r)" incoming="_18QCZHMaEeeoYuc64YE22w" outgoing="_18QBqnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCtHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCtXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCtnMaEeeoYuc64YE22w" name="Output(k1)" incoming="_18QCZXMaEeeoYuc64YE22w" outgoing="_18QBq3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCt3MaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCuHMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCuXMaEeeoYuc64YE22w" name="Output(k2)" incoming="_18QCZnMaEeeoYuc64YE22w" outgoing="_18QBrHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCunMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCu3MaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCvHMaEeeoYuc64YE22w" name="Output(k3)" incoming="_18QCZ3MaEeeoYuc64YE22w" outgoing="_18QBrXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCvXMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCvnMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCv3MaEeeoYuc64YE22w" name="Output(k4)" incoming="_18QCaHMaEeeoYuc64YE22w" outgoing="_18QBrnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCwHMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCwXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCwnMaEeeoYuc64YE22w" name="Output(u)" incoming="_18QCaXMaEeeoYuc64YE22w" outgoing="_18QBr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCw3MaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCxHMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_18QCxXMaEeeoYuc64YE22w" name="Output(v)" incoming="_18QCanMaEeeoYuc64YE22w" outgoing="_18QBsHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QCxnMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QCx3MaEeeoYuc64YE22w" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QCyHMaEeeoYuc64YE22w" name="ExpressionStatement@3a751dd4" outgoing="_18QB0XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCyXMaEeeoYuc64YE22w" target="_18QCynMaEeeoYuc64YE22w" source="_18QC23MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QCynMaEeeoYuc64YE22w" name="Fork(employee)@b242e8b" incoming="_18QCyXMaEeeoYuc64YE22w" outgoing="_18QCHXMaEeeoYuc64YE22w _18QCJnMaEeeoYuc64YE22w _18QCKHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QCy3MaEeeoYuc64YE22w" name="RightHandSide@3badd5e0">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCzHMaEeeoYuc64YE22w" target="_18QC3nMaEeeoYuc64YE22w" source="_18QC1nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QCzXMaEeeoYuc64YE22w" target="_18QC0nMaEeeoYuc64YE22w" source="_18QC3nMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_18QCznMaEeeoYuc64YE22w" name="Call(Employee)" operation="_18R2WXMaEeeoYuc64YE22w">
                <result xmi:id="_18QCz3MaEeeoYuc64YE22w" name="Call(Employee).result()" type="_18R1yHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QC0HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QC0XMaEeeoYuc64YE22w" value="1"/>
                </result>
                <target xmi:id="_18QC0nMaEeeoYuc64YE22w" name="Call(Employee).target" incoming="_18QCzXMaEeeoYuc64YE22w" type="_18R1yHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QC03MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QC1HMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_18QC1XMaEeeoYuc64YE22w" name="Create(Employee)" classifier="_18R1yHMaEeeoYuc64YE22w">
                <result xmi:id="_18QC1nMaEeeoYuc64YE22w" name="Create(Employee).result" outgoing="_18QCzHMaEeeoYuc64YE22w" type="_18R1yHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QC13MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QC2HMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QC2XMaEeeoYuc64YE22w" name="Node(Call(Employee))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QC2nMaEeeoYuc64YE22w" target="_18QC23MaEeeoYuc64YE22w" source="_18QC3nMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QC23MaEeeoYuc64YE22w" name="Output(Fork(Create(Employee).result))" incoming="_18QC2nMaEeeoYuc64YE22w" outgoing="_18QCyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QC3HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QC3XMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ForkNode" xmi:id="_18QC3nMaEeeoYuc64YE22w" name="Fork(Create(Employee).result)" incoming="_18QCzHMaEeeoYuc64YE22w" outgoing="_18QCzXMaEeeoYuc64YE22w _18QC2nMaEeeoYuc64YE22w"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QC33MaEeeoYuc64YE22w" name="ExpressionStatement@66fc5cc7" incoming="_18QB0XMaEeeoYuc64YE22w" outgoing="_18QB0nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QC4HMaEeeoYuc64YE22w" target="_18QC4XMaEeeoYuc64YE22w" source="_18QC8nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QC4XMaEeeoYuc64YE22w" name="Fork(monitor)@5d732e7e" incoming="_18QC4HMaEeeoYuc64YE22w" outgoing="_18QCI3MaEeeoYuc64YE22w _18QCJHMaEeeoYuc64YE22w _18QCSnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QC4nMaEeeoYuc64YE22w" name="RightHandSide@30c46fa0">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QC43MaEeeoYuc64YE22w" target="_18QC9XMaEeeoYuc64YE22w" source="_18QC7XMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QC5HMaEeeoYuc64YE22w" target="_18QC6XMaEeeoYuc64YE22w" source="_18QC9XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_18QC5XMaEeeoYuc64YE22w" name="Call(Monitor)" operation="_18RSEnMaEeeoYuc64YE22w">
                <result xmi:id="_18QC5nMaEeeoYuc64YE22w" name="Call(Monitor).result()" type="_18RRaXMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QC53MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QC6HMaEeeoYuc64YE22w" value="1"/>
                </result>
                <target xmi:id="_18QC6XMaEeeoYuc64YE22w" name="Call(Monitor).target" incoming="_18QC5HMaEeeoYuc64YE22w" type="_18RRaXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QC6nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QC63MaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_18QC7HMaEeeoYuc64YE22w" name="Create(Monitor)" classifier="_18RRaXMaEeeoYuc64YE22w">
                <result xmi:id="_18QC7XMaEeeoYuc64YE22w" name="Create(Monitor).result" outgoing="_18QC43MaEeeoYuc64YE22w" type="_18RRaXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QC7nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QC73MaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QC8HMaEeeoYuc64YE22w" name="Node(Call(Monitor))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QC8XMaEeeoYuc64YE22w" target="_18QC8nMaEeeoYuc64YE22w" source="_18QC9XMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QC8nMaEeeoYuc64YE22w" name="Output(Fork(Create(Monitor).result))" incoming="_18QC8XMaEeeoYuc64YE22w" outgoing="_18QC4HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QC83MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QC9HMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ForkNode" xmi:id="_18QC9XMaEeeoYuc64YE22w" name="Fork(Create(Monitor).result)" incoming="_18QC43MaEeeoYuc64YE22w" outgoing="_18QC5HMaEeeoYuc64YE22w _18QC8XMaEeeoYuc64YE22w"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QC9nMaEeeoYuc64YE22w" name="ExpressionStatement@70a594e6" incoming="_18QB0nMaEeeoYuc64YE22w" outgoing="_18QB03MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QC93MaEeeoYuc64YE22w" target="_18QC-HMaEeeoYuc64YE22w" source="_18QC-3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QC-HMaEeeoYuc64YE22w" name="Fork(i)@d1487b2" incoming="_18QC93MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QC-XMaEeeoYuc64YE22w" name="RightHandSide@43c5e734">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QC-nMaEeeoYuc64YE22w" name="Value(0)">
                <result xmi:id="_18QC-3MaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18QC93MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QC_HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QC_XMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QC_nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QC_3MaEeeoYuc64YE22w" name="ExpressionStatement@49cf412f" incoming="_18QB03MaEeeoYuc64YE22w" outgoing="_18QB1XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDAHMaEeeoYuc64YE22w" target="_18QDBHMaEeeoYuc64YE22w" source="_18QDB3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDAXMaEeeoYuc64YE22w" target="_18QDC3MaEeeoYuc64YE22w" source="_18QDDnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDAnMaEeeoYuc64YE22w" target="_18QDGHMaEeeoYuc64YE22w" source="_18QDBHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDA3MaEeeoYuc64YE22w" target="_18QDG3MaEeeoYuc64YE22w" source="_18QDC3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QDBHMaEeeoYuc64YE22w" name="Fork(i)@48453feb" incoming="_18QDAHMaEeeoYuc64YE22w" outgoing="_18QDAnMaEeeoYuc64YE22w _18QB1HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDBXMaEeeoYuc64YE22w" name="RightHandSide@68f0f69b">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QDBnMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_18QDB3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18QDAHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDCHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDCXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QDCnMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18QDC3MaEeeoYuc64YE22w" name="Fork(j)@6ac28e58" incoming="_18QDAXMaEeeoYuc64YE22w" outgoing="_18QDA3MaEeeoYuc64YE22w _18QB2XMaEeeoYuc64YE22w _18QB3HMaEeeoYuc64YE22w _18QB33MaEeeoYuc64YE22w _18QB4nMaEeeoYuc64YE22w _18QB5XMaEeeoYuc64YE22w _18QCBnMaEeeoYuc64YE22w _18QCCXMaEeeoYuc64YE22w _18QCDHMaEeeoYuc64YE22w _18QCD3MaEeeoYuc64YE22w _18QCLHMaEeeoYuc64YE22w _18QCLnMaEeeoYuc64YE22w _18QCMnMaEeeoYuc64YE22w _18QCNXMaEeeoYuc64YE22w _18QCTXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDDHMaEeeoYuc64YE22w" name="RightHandSide@2e3948de">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QDDXMaEeeoYuc64YE22w" name="Value(2)">
                <result xmi:id="_18QDDnMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18QDAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDD3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDEHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QDEXMaEeeoYuc64YE22w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDEnMaEeeoYuc64YE22w" name="Node(Call(-))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDE3MaEeeoYuc64YE22w" target="_18QDFHMaEeeoYuc64YE22w" source="_18QDHnMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18QDFHMaEeeoYuc64YE22w" name="Output(Call(-).result(result))" incoming="_18QDE3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDFXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDFnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QDF3MaEeeoYuc64YE22w" name="Call(-)">
                <argument xmi:id="_18QDGHMaEeeoYuc64YE22w" name="Call(-).argument(x)" incoming="_18QDAnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDGXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDGnMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18QDG3MaEeeoYuc64YE22w" name="Call(-).argument(y)" incoming="_18QDA3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDHHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDHXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QDHnMaEeeoYuc64YE22w" name="Call(-).result(result)" outgoing="_18QDE3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDH3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDIHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDIXMaEeeoYuc64YE22w" name="ExpressionStatement@6cc53274" incoming="_18QB1XMaEeeoYuc64YE22w" outgoing="_18QB13MaEeeoYuc64YE22w">
            <node xmi:type="uml:ForkNode" xmi:id="_18QDInMaEeeoYuc64YE22w" name="Fork(i)@518e24d" incoming="_18QB1HMaEeeoYuc64YE22w" outgoing="_18QB1nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDI3MaEeeoYuc64YE22w" name="RightHandSide@1381a7d3"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDJHMaEeeoYuc64YE22w" name="ExpressionStatement@2072e9ca" incoming="_18QB13MaEeeoYuc64YE22w" outgoing="_18QB2nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDJXMaEeeoYuc64YE22w" target="_18QDJnMaEeeoYuc64YE22w" source="_18QDLHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QDJnMaEeeoYuc64YE22w" name="Fork(i)@4f6d9aad" incoming="_18QDJXMaEeeoYuc64YE22w" outgoing="_18QB2HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDJ3MaEeeoYuc64YE22w" name="RightHandSide@1cbd427c">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QDKHMaEeeoYuc64YE22w" name="Call(Neg)">
                <argument xmi:id="_18QDKXMaEeeoYuc64YE22w" name="Call(Neg).argument(x)" incoming="_18QB1nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDKnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDK3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QDLHMaEeeoYuc64YE22w" name="Call(Neg).result(result)" outgoing="_18QDJXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDLXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDLnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Neg"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDL3MaEeeoYuc64YE22w" name="ExpressionStatement@104b3e27" incoming="_18QB2nMaEeeoYuc64YE22w" outgoing="_18QB3XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDMHMaEeeoYuc64YE22w" target="_18QDMXMaEeeoYuc64YE22w" source="_18QDNXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QDMXMaEeeoYuc64YE22w" name="Fork(i)@1e144d08" incoming="_18QDMHMaEeeoYuc64YE22w" outgoing="_18QB23MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDMnMaEeeoYuc64YE22w" name="RightHandSide@7a4c0469">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDM3MaEeeoYuc64YE22w" name="Node(Call(*))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDNHMaEeeoYuc64YE22w" target="_18QDNXMaEeeoYuc64YE22w" source="_18QDP3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QDNXMaEeeoYuc64YE22w" name="Output(Call(*).result(result))" incoming="_18QDNHMaEeeoYuc64YE22w" outgoing="_18QDMHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDNnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDN3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QDOHMaEeeoYuc64YE22w" name="Call(*)">
                  <argument xmi:id="_18QDOXMaEeeoYuc64YE22w" name="Call(*).argument(x)" incoming="_18QB2HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDOnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDO3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QDPHMaEeeoYuc64YE22w" name="Call(*).argument(y)" incoming="_18QB2XMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDPXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDPnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QDP3MaEeeoYuc64YE22w" name="Call(*).result(result)" outgoing="_18QDNHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDQHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDQXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-times"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDQnMaEeeoYuc64YE22w" name="ExpressionStatement@4dbd8d6" incoming="_18QB3XMaEeeoYuc64YE22w" outgoing="_18QB4HMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDQ3MaEeeoYuc64YE22w" target="_18QDRHMaEeeoYuc64YE22w" source="_18QDgnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QDRHMaEeeoYuc64YE22w" name="Fork(i)@7502268d" incoming="_18QDQ3MaEeeoYuc64YE22w" outgoing="_18QB3nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDRXMaEeeoYuc64YE22w" name="RightHandSide@2ea11079">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDRnMaEeeoYuc64YE22w" target="_18QDanMaEeeoYuc64YE22w" source="_18QDU3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QDR3MaEeeoYuc64YE22w" target="_18QDaXMaEeeoYuc64YE22w" source="_18QDUXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDSHMaEeeoYuc64YE22w" target="_18QDdXMaEeeoYuc64YE22w" source="_18QDU3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QDSXMaEeeoYuc64YE22w" target="_18QDgXMaEeeoYuc64YE22w" source="_18QDgHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDSnMaEeeoYuc64YE22w" target="_18QDgXMaEeeoYuc64YE22w" source="_18QDbXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QDS3MaEeeoYuc64YE22w" target="_18QDcHMaEeeoYuc64YE22w" source="_18QDgXMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QDTHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QDTXMaEeeoYuc64YE22w" target="_18QDdnMaEeeoYuc64YE22w" source="_18QDgXMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QDTnMaEeeoYuc64YE22w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDT3MaEeeoYuc64YE22w" target="_18QDgnMaEeeoYuc64YE22w" source="_18QDcnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDUHMaEeeoYuc64YE22w" target="_18QDgnMaEeeoYuc64YE22w" source="_18QDeHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDUXMaEeeoYuc64YE22w" name="Operands(EqualityExpression@155b058c)" outgoing="_18QDR3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDUnMaEeeoYuc64YE22w" target="_18QDU3MaEeeoYuc64YE22w" source="_18QDV3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_18QDU3MaEeeoYuc64YE22w" name="Fork()@101adc14" incoming="_18QDUnMaEeeoYuc64YE22w" outgoing="_18QDRnMaEeeoYuc64YE22w _18QDSHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDVHMaEeeoYuc64YE22w" name="RightHandSide@2b614ab0">
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDVXMaEeeoYuc64YE22w" name="Node(Call(Div))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDVnMaEeeoYuc64YE22w" target="_18QDV3MaEeeoYuc64YE22w" source="_18QDYXMaEeeoYuc64YE22w"/>
                    <structuredNodeOutput xmi:id="_18QDV3MaEeeoYuc64YE22w" name="Output(Call(Div).result(result))" incoming="_18QDVnMaEeeoYuc64YE22w" outgoing="_18QDUnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDWHMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDWXMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QDWnMaEeeoYuc64YE22w" name="Call(Div)">
                      <argument xmi:id="_18QDW3MaEeeoYuc64YE22w" name="Call(Div).argument(x)" incoming="_18QB23MaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDXHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDXXMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <argument xmi:id="_18QDXnMaEeeoYuc64YE22w" name="Call(Div).argument(y)" incoming="_18QB3HMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDX3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDYHMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_18QDYXMaEeeoYuc64YE22w" name="Call(Div).result(result)" outgoing="_18QDVnMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDYnMaEeeoYuc64YE22w"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDY3MaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QDZHMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_18QDZXMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDZnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDZ3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_18QDaHMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QDaXMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_18QDR3MaEeeoYuc64YE22w">
                <argument xmi:id="_18QDanMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_18QDRnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDa3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDbHMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_18QDbXMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_18QDSnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDbnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDb3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDcHMaEeeoYuc64YE22w" name="NullCoalescingExpression@9c1d1ea.operand2" incoming="_18QDS3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDcXMaEeeoYuc64YE22w" target="_18QDcnMaEeeoYuc64YE22w" source="_18QDdXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QDcnMaEeeoYuc64YE22w" name="NullCoalescingExpression@9c1d1ea.operand2.result" incoming="_18QDcXMaEeeoYuc64YE22w" outgoing="_18QDT3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDc3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDdHMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_18QDdXMaEeeoYuc64YE22w" name="Merge(Fork()@101adc14)" incoming="_18QDSHMaEeeoYuc64YE22w" outgoing="_18QDcXMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDdnMaEeeoYuc64YE22w" name="NullCoalescingExpression@9c1d1ea.operand3" incoming="_18QDTXMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDd3MaEeeoYuc64YE22w" target="_18QDeHMaEeeoYuc64YE22w" source="_18QDfHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QDeHMaEeeoYuc64YE22w" name="NullCoalescingExpression@9c1d1ea.operand3.result" incoming="_18QDd3MaEeeoYuc64YE22w" outgoing="_18QDUHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDeXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDenMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QDe3MaEeeoYuc64YE22w" name="Value(0)">
                  <result xmi:id="_18QDfHMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18QDd3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDfXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDfnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18QDf3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_18QDgHMaEeeoYuc64YE22w" name="Initial(NullCoalescingExpression@9c1d1ea)" outgoing="_18QDSXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_18QDgXMaEeeoYuc64YE22w" name="Decision(NullCoalescingExpression@9c1d1ea)" incoming="_18QDSXMaEeeoYuc64YE22w _18QDSnMaEeeoYuc64YE22w" outgoing="_18QDS3MaEeeoYuc64YE22w _18QDTXMaEeeoYuc64YE22w" decisionInputFlow="_18QDSnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_18QDgnMaEeeoYuc64YE22w" name="Merge(NullCoalescingExpression@9c1d1ea.result)" incoming="_18QDT3MaEeeoYuc64YE22w _18QDUHMaEeeoYuc64YE22w" outgoing="_18QDQ3MaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDg3MaEeeoYuc64YE22w" name="ExpressionStatement@19f0b3b6" incoming="_18QB4HMaEeeoYuc64YE22w" outgoing="_18QB43MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDhHMaEeeoYuc64YE22w" target="_18QDhXMaEeeoYuc64YE22w" source="_18QDiXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QDhXMaEeeoYuc64YE22w" name="Fork(i)@5891afe5" incoming="_18QDhHMaEeeoYuc64YE22w" outgoing="_18QB4XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDhnMaEeeoYuc64YE22w" name="RightHandSide@191803e0">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDh3MaEeeoYuc64YE22w" name="Node(Call(Mod))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDiHMaEeeoYuc64YE22w" target="_18QDiXMaEeeoYuc64YE22w" source="_18QDk3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QDiXMaEeeoYuc64YE22w" name="Output(Call(Mod).result(result))" incoming="_18QDiHMaEeeoYuc64YE22w" outgoing="_18QDhHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDinMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDi3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QDjHMaEeeoYuc64YE22w" name="Call(Mod)">
                  <argument xmi:id="_18QDjXMaEeeoYuc64YE22w" name="Call(Mod).argument(x)" incoming="_18QB3nMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDjnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDj3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QDkHMaEeeoYuc64YE22w" name="Call(Mod).argument(y)" incoming="_18QB33MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDkXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDknMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QDk3MaEeeoYuc64YE22w" name="Call(Mod).result(result)" outgoing="_18QDiHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDlHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDlXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDlnMaEeeoYuc64YE22w" name="ExpressionStatement@6b8b7c68" incoming="_18QB43MaEeeoYuc64YE22w" outgoing="_18QB5nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDl3MaEeeoYuc64YE22w" target="_18QDmHMaEeeoYuc64YE22w" source="_18QDnHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QDmHMaEeeoYuc64YE22w" name="Fork(i)@561bb13a" incoming="_18QDl3MaEeeoYuc64YE22w" outgoing="_18QB5HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDmXMaEeeoYuc64YE22w" name="RightHandSide@11252b76">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDmnMaEeeoYuc64YE22w" name="Node(Call(+))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDm3MaEeeoYuc64YE22w" target="_18QDnHMaEeeoYuc64YE22w" source="_18QDpnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QDnHMaEeeoYuc64YE22w" name="Output(Call(+).result(result))" incoming="_18QDm3MaEeeoYuc64YE22w" outgoing="_18QDl3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDnXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDnnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QDn3MaEeeoYuc64YE22w" name="Call(+)">
                  <argument xmi:id="_18QDoHMaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_18QB4XMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDoXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDonMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QDo3MaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_18QB4nMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDpHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDpXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QDpnMaEeeoYuc64YE22w" name="Call(+).result(result)" outgoing="_18QDm3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDp3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDqHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDqXMaEeeoYuc64YE22w" name="ExpressionStatement@47ad16f7" incoming="_18QB5nMaEeeoYuc64YE22w" outgoing="_18QB53MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDqnMaEeeoYuc64YE22w" target="_18QDq3MaEeeoYuc64YE22w" source="_18QDr3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QDq3MaEeeoYuc64YE22w" name="Fork(i)@5f02fcb3" incoming="_18QDqnMaEeeoYuc64YE22w" outgoing="_18QCBXMaEeeoYuc64YE22w _18QCCHMaEeeoYuc64YE22w _18QCC3MaEeeoYuc64YE22w _18QCDnMaEeeoYuc64YE22w _18QCH3MaEeeoYuc64YE22w _18QCIXMaEeeoYuc64YE22w _18QCK3MaEeeoYuc64YE22w _18QCLXMaEeeoYuc64YE22w _18QCMXMaEeeoYuc64YE22w _18QCNHMaEeeoYuc64YE22w _18QCTHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDrHMaEeeoYuc64YE22w" name="RightHandSide@1a5f429f">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDrXMaEeeoYuc64YE22w" name="Node(Call(-))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDrnMaEeeoYuc64YE22w" target="_18QDr3MaEeeoYuc64YE22w" source="_18QDuXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QDr3MaEeeoYuc64YE22w" name="Output(Call(-).result(result))" incoming="_18QDrnMaEeeoYuc64YE22w" outgoing="_18QDqnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDsHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDsXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QDsnMaEeeoYuc64YE22w" name="Call(-)">
                  <argument xmi:id="_18QDs3MaEeeoYuc64YE22w" name="Call(-).argument(x)" incoming="_18QB5HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDtHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDtXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QDtnMaEeeoYuc64YE22w" name="Call(-).argument(y)" incoming="_18QB5XMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDt3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDuHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QDuXMaEeeoYuc64YE22w" name="Call(-).result(result)" outgoing="_18QDrnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDunMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDu3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDvHMaEeeoYuc64YE22w" name="ExpressionStatement@2f8b14b0" incoming="_18QB53MaEeeoYuc64YE22w" outgoing="_18QB6XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDvXMaEeeoYuc64YE22w" target="_18QDvnMaEeeoYuc64YE22w" source="_18QD4XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QDvnMaEeeoYuc64YE22w" name="Fork(bs)@4c3c406a" incoming="_18QDvXMaEeeoYuc64YE22w" outgoing="_18QB6HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QDv3MaEeeoYuc64YE22w" name="RightHandSide@6775815e">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDwHMaEeeoYuc64YE22w" target="_18QD4HMaEeeoYuc64YE22w" source="_18QDwnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QDwXMaEeeoYuc64YE22w" name="Value(171)">
                <result xmi:id="_18QDwnMaEeeoYuc64YE22w" name="Value(171).result" outgoing="_18QDwHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QDw3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QDxHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QDxXMaEeeoYuc64YE22w" value="171">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_18QDxnMaEeeoYuc64YE22w" name="CastExpression@6775815e" mode="parallel" outputElement="_18QD4XMaEeeoYuc64YE22w" inputElement="_18QD4HMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDx3MaEeeoYuc64YE22w" target="_18QD0XMaEeeoYuc64YE22w" source="_18QD13MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDyHMaEeeoYuc64YE22w" target="_18QDz3MaEeeoYuc64YE22w" source="_18QD3HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDyXMaEeeoYuc64YE22w" target="_18QD33MaEeeoYuc64YE22w" source="_18QD13MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDynMaEeeoYuc64YE22w" target="_18QD33MaEeeoYuc64YE22w" source="_18QD1HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDy3MaEeeoYuc64YE22w" target="_18QD2XMaEeeoYuc64YE22w" source="_18QD33MaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QDzHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDzXMaEeeoYuc64YE22w" target="_18QD13MaEeeoYuc64YE22w" source="_18QD4HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QDznMaEeeoYuc64YE22w" target="_18QD4XMaEeeoYuc64YE22w" source="_18QDz3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_18QDz3MaEeeoYuc64YE22w" name="Merge(CastExpression@6775815e.operand)" incoming="_18QDyHMaEeeoYuc64YE22w" outgoing="_18QDznMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18QD0HMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_18QD0XMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer).object" incoming="_18QDx3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QD0nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QD03MaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18QD1HMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer).result" outgoing="_18QDynMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QD1XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QD1nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18QD13MaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(Integer).object)" incoming="_18QDzXMaEeeoYuc64YE22w" outgoing="_18QDx3MaEeeoYuc64YE22w _18QDyXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QD2HMaEeeoYuc64YE22w" name="Call(ToBitString)">
                  <argument xmi:id="_18QD2XMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QDy3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QD2nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QD23MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QD3HMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18QDyHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QD3XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QD3nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_18QD33MaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(Integer).result)" incoming="_18QDyXMaEeeoYuc64YE22w _18QDynMaEeeoYuc64YE22w" outgoing="_18QDy3MaEeeoYuc64YE22w" decisionInputFlow="_18QDynMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18QD4HMaEeeoYuc64YE22w" name="CastExpression@6775815e.inputElement" incoming="_18QDwHMaEeeoYuc64YE22w" outgoing="_18QDzXMaEeeoYuc64YE22w" regionAsInput="_18QDxnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18QD4XMaEeeoYuc64YE22w" name="CastExpression@6775815e.outputElement" incoming="_18QDznMaEeeoYuc64YE22w" outgoing="_18QDvXMaEeeoYuc64YE22w" regionAsOutput="_18QDxnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QD4nMaEeeoYuc64YE22w" name="ExpressionStatement@5526af8f" incoming="_18QB6XMaEeeoYuc64YE22w" outgoing="_18QB63MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QD43MaEeeoYuc64YE22w" target="_18QD5HMaEeeoYuc64YE22w" source="_18QD6nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QD5HMaEeeoYuc64YE22w" name="Fork(bs)@45267035" incoming="_18QD43MaEeeoYuc64YE22w" outgoing="_18QB6nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QD5XMaEeeoYuc64YE22w" name="RightHandSide@5655e036">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QD5nMaEeeoYuc64YE22w" name="Call(~)">
                <argument xmi:id="_18QD53MaEeeoYuc64YE22w" name="Call(~).argument(b)" incoming="_18QB6HMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QD6HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QD6XMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QD6nMaEeeoYuc64YE22w" name="Call(~).result()" outgoing="_18QD43MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QD63MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QD7HMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-tilde"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QD7XMaEeeoYuc64YE22w" name="ExpressionStatement@2b653f71" incoming="_18QB63MaEeeoYuc64YE22w" outgoing="_18QB7XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QD7nMaEeeoYuc64YE22w" target="_18QD73MaEeeoYuc64YE22w" source="_18QEAXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QD73MaEeeoYuc64YE22w" name="Fork(bs)@6b0445d4" incoming="_18QD7nMaEeeoYuc64YE22w" outgoing="_18QB7HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QD8HMaEeeoYuc64YE22w" name="RightHandSide@70aecb8c">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QD8XMaEeeoYuc64YE22w" target="_18QD-XMaEeeoYuc64YE22w" source="_18QD9HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QD8nMaEeeoYuc64YE22w" target="_18QECHMaEeeoYuc64YE22w" source="_18QD_HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QD83MaEeeoYuc64YE22w" name="Value(240)">
                <result xmi:id="_18QD9HMaEeeoYuc64YE22w" name="Value(240).result" outgoing="_18QD8XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QD9XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QD9nMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QD93MaEeeoYuc64YE22w" value="240">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QD-HMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_18QD-XMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QD8XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QD-nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QD-3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QD_HMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18QD8nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QD_XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QD_nMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QD_3MaEeeoYuc64YE22w" name="Node(Call(&amp;))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEAHMaEeeoYuc64YE22w" target="_18QEAXMaEeeoYuc64YE22w" source="_18QEC3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QEAXMaEeeoYuc64YE22w" name="Output(Call(&amp;).result())" incoming="_18QEAHMaEeeoYuc64YE22w" outgoing="_18QD7nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEAnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEA3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QEBHMaEeeoYuc64YE22w" name="Call(&amp;)">
                  <argument xmi:id="_18QEBXMaEeeoYuc64YE22w" name="Call(&amp;).argument(b1)" incoming="_18QB6nMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEBnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEB3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QECHMaEeeoYuc64YE22w" name="Call(&amp;).argument(b2)" incoming="_18QD8nMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QECXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QECnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QEC3MaEeeoYuc64YE22w" name="Call(&amp;).result()" outgoing="_18QEAHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEDHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEDXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-amp"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEDnMaEeeoYuc64YE22w" name="ExpressionStatement@517db93d" incoming="_18QB7XMaEeeoYuc64YE22w" outgoing="_18QB73MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QED3MaEeeoYuc64YE22w" target="_18QEEHMaEeeoYuc64YE22w" source="_18QEInMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QEEHMaEeeoYuc64YE22w" name="Fork(bs)@32484904" incoming="_18QED3MaEeeoYuc64YE22w" outgoing="_18QB7nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEEXMaEeeoYuc64YE22w" name="RightHandSide@779105ad">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEEnMaEeeoYuc64YE22w" target="_18QEGnMaEeeoYuc64YE22w" source="_18QEFXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEE3MaEeeoYuc64YE22w" target="_18QEKXMaEeeoYuc64YE22w" source="_18QEHXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QEFHMaEeeoYuc64YE22w" name="Value(240)">
                <result xmi:id="_18QEFXMaEeeoYuc64YE22w" name="Value(240).result" outgoing="_18QEEnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEFnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEF3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QEGHMaEeeoYuc64YE22w" value="240">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QEGXMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_18QEGnMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QEEnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEG3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEHHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QEHXMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18QEE3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEHnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEH3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEIHMaEeeoYuc64YE22w" name="Node(Call(|))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEIXMaEeeoYuc64YE22w" target="_18QEInMaEeeoYuc64YE22w" source="_18QELHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QEInMaEeeoYuc64YE22w" name="Output(Call(|).result())" incoming="_18QEIXMaEeeoYuc64YE22w" outgoing="_18QED3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEI3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEJHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QEJXMaEeeoYuc64YE22w" name="Call(|)">
                  <argument xmi:id="_18QEJnMaEeeoYuc64YE22w" name="Call(|).argument(b1)" incoming="_18QB7HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEJ3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEKHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QEKXMaEeeoYuc64YE22w" name="Call(|).argument(b2)" incoming="_18QEE3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEKnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEK3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QELHMaEeeoYuc64YE22w" name="Call(|).result()" outgoing="_18QEIXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QELXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QELnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-bar"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEL3MaEeeoYuc64YE22w" name="ExpressionStatement@c2c9bb8" incoming="_18QB73MaEeeoYuc64YE22w" outgoing="_18QB8XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEMHMaEeeoYuc64YE22w" target="_18QEMXMaEeeoYuc64YE22w" source="_18QEO3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QEMXMaEeeoYuc64YE22w" name="Fork(bs)@40016653" incoming="_18QEMHMaEeeoYuc64YE22w" outgoing="_18QB8HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEMnMaEeeoYuc64YE22w" name="RightHandSide@490804cc">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEM3MaEeeoYuc64YE22w" target="_18QEQnMaEeeoYuc64YE22w" source="_18QENXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QENHMaEeeoYuc64YE22w" name="Value(2)">
                <result xmi:id="_18QENXMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18QEM3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QENnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEN3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QEOHMaEeeoYuc64YE22w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEOXMaEeeoYuc64YE22w" name="Node(Call(&lt;&lt;))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEOnMaEeeoYuc64YE22w" target="_18QEO3MaEeeoYuc64YE22w" source="_18QERXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QEO3MaEeeoYuc64YE22w" name="Output(Call(&lt;&lt;).result())" incoming="_18QEOnMaEeeoYuc64YE22w" outgoing="_18QEMHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEPHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEPXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QEPnMaEeeoYuc64YE22w" name="Call(&lt;&lt;)">
                  <argument xmi:id="_18QEP3MaEeeoYuc64YE22w" name="Call(&lt;&lt;).argument(x)" incoming="_18QB7nMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEQHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEQXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QEQnMaEeeoYuc64YE22w" name="Call(&lt;&lt;).argument(n)" incoming="_18QEM3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEQ3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QERHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QERXMaEeeoYuc64YE22w" name="Call(&lt;&lt;).result()" outgoing="_18QEOnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QERnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QER3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ltlt"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QESHMaEeeoYuc64YE22w" name="ExpressionStatement@4ba74b" incoming="_18QB8XMaEeeoYuc64YE22w" outgoing="_18QB83MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QESXMaEeeoYuc64YE22w" target="_18QESnMaEeeoYuc64YE22w" source="_18QEVHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QESnMaEeeoYuc64YE22w" name="Fork(bs)@60381e22" incoming="_18QESXMaEeeoYuc64YE22w" outgoing="_18QB8nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QES3MaEeeoYuc64YE22w" name="RightHandSide@5b712909">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QETHMaEeeoYuc64YE22w" target="_18QEW3MaEeeoYuc64YE22w" source="_18QETnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QETXMaEeeoYuc64YE22w" name="Value(2)">
                <result xmi:id="_18QETnMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18QETHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QET3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEUHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QEUXMaEeeoYuc64YE22w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEUnMaEeeoYuc64YE22w" name="Node(Call(>>))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEU3MaEeeoYuc64YE22w" target="_18QEVHMaEeeoYuc64YE22w" source="_18QEXnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QEVHMaEeeoYuc64YE22w" name="Output(Call(>>).result())" incoming="_18QEU3MaEeeoYuc64YE22w" outgoing="_18QESXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEVXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEVnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QEV3MaEeeoYuc64YE22w" name="Call(>>)">
                  <argument xmi:id="_18QEWHMaEeeoYuc64YE22w" name="Call(>>).argument(x)" incoming="_18QB8HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEWXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEWnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QEW3MaEeeoYuc64YE22w" name="Call(>>).argument(n)" incoming="_18QETHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEXHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEXXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QEXnMaEeeoYuc64YE22w" name="Call(>>).result()" outgoing="_18QEU3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEX3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEYHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgt"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEYXMaEeeoYuc64YE22w" name="ExpressionStatement@652026d9" incoming="_18QB83MaEeeoYuc64YE22w" outgoing="_18QB9XMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEYnMaEeeoYuc64YE22w" target="_18QEY3MaEeeoYuc64YE22w" source="_18QEbXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QEY3MaEeeoYuc64YE22w" name="Fork(bs)@459d199b" incoming="_18QEYnMaEeeoYuc64YE22w" outgoing="_18QB9HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEZHMaEeeoYuc64YE22w" name="RightHandSide@70b9e0c6">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEZXMaEeeoYuc64YE22w" target="_18QEdHMaEeeoYuc64YE22w" source="_18QEZ3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QEZnMaEeeoYuc64YE22w" name="Value(2)">
                <result xmi:id="_18QEZ3MaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18QEZXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEaHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEaXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QEanMaEeeoYuc64YE22w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEa3MaEeeoYuc64YE22w" name="Node(Call(>>>))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEbHMaEeeoYuc64YE22w" target="_18QEbXMaEeeoYuc64YE22w" source="_18QEd3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QEbXMaEeeoYuc64YE22w" name="Output(Call(>>>).result())" incoming="_18QEbHMaEeeoYuc64YE22w" outgoing="_18QEYnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEbnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEb3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QEcHMaEeeoYuc64YE22w" name="Call(>>>)">
                  <argument xmi:id="_18QEcXMaEeeoYuc64YE22w" name="Call(>>>).argument(x)" incoming="_18QB8nMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEcnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEc3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QEdHMaEeeoYuc64YE22w" name="Call(>>>).argument(n)" incoming="_18QEZXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEdXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEdnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QEd3MaEeeoYuc64YE22w" name="Call(>>>).result()" outgoing="_18QEbHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEeHMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEeXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgtgt"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEenMaEeeoYuc64YE22w" name="ExpressionStatement@7d2f0161" incoming="_18QB9XMaEeeoYuc64YE22w" outgoing="_18QB9nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEe3MaEeeoYuc64YE22w" target="_18QEfHMaEeeoYuc64YE22w" source="_18QEjnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QEfHMaEeeoYuc64YE22w" name="Fork(bs)@ac6336c" incoming="_18QEe3MaEeeoYuc64YE22w" outgoing="_18QCTnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEfXMaEeeoYuc64YE22w" name="RightHandSide@7a52b6e6">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEfnMaEeeoYuc64YE22w" target="_18QEhnMaEeeoYuc64YE22w" source="_18QEgXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEf3MaEeeoYuc64YE22w" target="_18QElXMaEeeoYuc64YE22w" source="_18QEiXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QEgHMaEeeoYuc64YE22w" name="Value(4)">
                <result xmi:id="_18QEgXMaEeeoYuc64YE22w" name="Value(4).result" outgoing="_18QEfnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEgnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEg3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QEhHMaEeeoYuc64YE22w" value="4">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QEhXMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_18QEhnMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QEfnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEh3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEiHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QEiXMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18QEf3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEinMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEi3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEjHMaEeeoYuc64YE22w" name="Node(Call(^))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEjXMaEeeoYuc64YE22w" target="_18QEjnMaEeeoYuc64YE22w" source="_18QEmHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QEjnMaEeeoYuc64YE22w" name="Output(Call(^).result())" incoming="_18QEjXMaEeeoYuc64YE22w" outgoing="_18QEe3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEj3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEkHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QEkXMaEeeoYuc64YE22w" name="Call(^)">
                  <argument xmi:id="_18QEknMaEeeoYuc64YE22w" name="Call(^).argument(b1)" incoming="_18QB9HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEk3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QElHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QElXMaEeeoYuc64YE22w" name="Call(^).argument(b2)" incoming="_18QEf3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QElnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEl3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QEmHMaEeeoYuc64YE22w" name="Call(^).result()" outgoing="_18QEjXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEmXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEmnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-caret"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEm3MaEeeoYuc64YE22w" name="ExpressionStatement@5d658719" incoming="_18QB9nMaEeeoYuc64YE22w" outgoing="_18QB-HMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEnHMaEeeoYuc64YE22w" target="_18QEnXMaEeeoYuc64YE22w" source="_18QEoHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QEnXMaEeeoYuc64YE22w" name="Fork(h)@49111a6" incoming="_18QEnHMaEeeoYuc64YE22w" outgoing="_18QB93MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEnnMaEeeoYuc64YE22w" name="RightHandSide@45d400e9">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QEn3MaEeeoYuc64YE22w" name="Value(171)">
                <result xmi:id="_18QEoHMaEeeoYuc64YE22w" name="Value(171).result" outgoing="_18QEnHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEoXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEonMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QEo3MaEeeoYuc64YE22w" value="171">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEpHMaEeeoYuc64YE22w" name="ExpressionStatement@37e6679d" incoming="_18QB-HMaEeeoYuc64YE22w" outgoing="_18QB-nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEpXMaEeeoYuc64YE22w" target="_18QEpnMaEeeoYuc64YE22w" source="_18QE03MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QEpnMaEeeoYuc64YE22w" name="Fork(h)@60a3d31c" incoming="_18QEpXMaEeeoYuc64YE22w" outgoing="_18QB-XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QEp3MaEeeoYuc64YE22w" name="RightHandSide@6ddb9a2e">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEqHMaEeeoYuc64YE22w" target="_18QEsnMaEeeoYuc64YE22w" source="_18QErnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEqXMaEeeoYuc64YE22w" target="_18QE0nMaEeeoYuc64YE22w" source="_18QEtXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QEqnMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_18QEq3MaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QB93MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QErHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QErXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QErnMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18QEqHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEr3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEsHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QEsXMaEeeoYuc64YE22w" name="Call(~)">
                <argument xmi:id="_18QEsnMaEeeoYuc64YE22w" name="Call(~).argument(b)" incoming="_18QEqHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEs3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEtHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QEtXMaEeeoYuc64YE22w" name="Call(~).result()" outgoing="_18QEqXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEtnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEt3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-tilde"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_18QEuHMaEeeoYuc64YE22w" name="CastExpression@6ddb9a2e" mode="parallel" outputElement="_18QE03MaEeeoYuc64YE22w" inputElement="_18QE0nMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEuXMaEeeoYuc64YE22w" target="_18QEw3MaEeeoYuc64YE22w" source="_18QEyXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEunMaEeeoYuc64YE22w" target="_18QEwXMaEeeoYuc64YE22w" source="_18QEznMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEu3MaEeeoYuc64YE22w" target="_18QE0XMaEeeoYuc64YE22w" source="_18QEyXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEvHMaEeeoYuc64YE22w" target="_18QE0XMaEeeoYuc64YE22w" source="_18QExnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEvXMaEeeoYuc64YE22w" target="_18QEy3MaEeeoYuc64YE22w" source="_18QE0XMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QEvnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEv3MaEeeoYuc64YE22w" target="_18QEyXMaEeeoYuc64YE22w" source="_18QE0nMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QEwHMaEeeoYuc64YE22w" target="_18QE03MaEeeoYuc64YE22w" source="_18QEwXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_18QEwXMaEeeoYuc64YE22w" name="Merge(CastExpression@6ddb9a2e.operand)" incoming="_18QEunMaEeeoYuc64YE22w" outgoing="_18QEwHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18QEwnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_18QEw3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).object" incoming="_18QEuXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QExHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QExXMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18QExnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).result" outgoing="_18QEvHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEx3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEyHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18QEyXMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(BitString).object)" incoming="_18QEv3MaEeeoYuc64YE22w" outgoing="_18QEuXMaEeeoYuc64YE22w _18QEu3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QEynMaEeeoYuc64YE22w" name="Call(ToInteger)">
                  <argument xmi:id="_18QEy3MaEeeoYuc64YE22w" name="Call(ToInteger).argument(b)" incoming="_18QEvXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEzHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QEzXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QEznMaEeeoYuc64YE22w" name="Call(ToInteger).result()" outgoing="_18QEunMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QEz3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QE0HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_18QE0XMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(BitString).result)" incoming="_18QEu3MaEeeoYuc64YE22w _18QEvHMaEeeoYuc64YE22w" outgoing="_18QEvXMaEeeoYuc64YE22w" decisionInputFlow="_18QEvHMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18QE0nMaEeeoYuc64YE22w" name="CastExpression@6ddb9a2e.inputElement" incoming="_18QEqXMaEeeoYuc64YE22w" outgoing="_18QEv3MaEeeoYuc64YE22w" regionAsInput="_18QEuHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18QE03MaEeeoYuc64YE22w" name="CastExpression@6ddb9a2e.outputElement" incoming="_18QEwHMaEeeoYuc64YE22w" outgoing="_18QEpXMaEeeoYuc64YE22w" regionAsOutput="_18QEuHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QE1HMaEeeoYuc64YE22w" name="ExpressionStatement@c73734c" incoming="_18QB-nMaEeeoYuc64YE22w" outgoing="_18QB_HMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QE1XMaEeeoYuc64YE22w" target="_18QE1nMaEeeoYuc64YE22w" source="_18QnmHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QE1nMaEeeoYuc64YE22w" name="Fork(h)@19bbfd7" incoming="_18QE1XMaEeeoYuc64YE22w" outgoing="_18QB-3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QE13MaEeeoYuc64YE22w" name="RightHandSide@10a61ded">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QE2HMaEeeoYuc64YE22w" target="_18QE6XMaEeeoYuc64YE22w" source="_18QE3XMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QE2XMaEeeoYuc64YE22w" target="_18QndHMaEeeoYuc64YE22w" source="_18QE5XMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QE2nMaEeeoYuc64YE22w" target="_18Qnd3MaEeeoYuc64YE22w" source="_18QE7HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QE23MaEeeoYuc64YE22w" target="_18Qnl3MaEeeoYuc64YE22w" source="_18QncHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QE3HMaEeeoYuc64YE22w" name="Value(240)">
                <result xmi:id="_18QE3XMaEeeoYuc64YE22w" name="Value(240).result" outgoing="_18QE2HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QE3nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QE33MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QE4HMaEeeoYuc64YE22w" value="240">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QE4XMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_18QE4nMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QB-XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QE43MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QE5HMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QE5XMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18QE2XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QE5nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QE53MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QE6HMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_18QE6XMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QE2HMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QE6nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QE63MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QE7HMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18QE2nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QE7XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QE7nMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QE73MaEeeoYuc64YE22w" name="Node(Call(&amp;))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QE8HMaEeeoYuc64YE22w" target="_18QncHMaEeeoYuc64YE22w" source="_18QnenMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QncHMaEeeoYuc64YE22w" name="Output(Call(&amp;).result())" incoming="_18QE8HMaEeeoYuc64YE22w" outgoing="_18QE23MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QncXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QncnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qnc3MaEeeoYuc64YE22w" name="Call(&amp;)">
                  <argument xmi:id="_18QndHMaEeeoYuc64YE22w" name="Call(&amp;).argument(b1)" incoming="_18QE2XMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QndXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QndnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18Qnd3MaEeeoYuc64YE22w" name="Call(&amp;).argument(b2)" incoming="_18QE2nMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QneHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QneXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QnenMaEeeoYuc64YE22w" name="Call(&amp;).result()" outgoing="_18QE8HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qne3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QnfHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-amp"/>
                </node>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_18QnfXMaEeeoYuc64YE22w" name="CastExpression@10a61ded" mode="parallel" outputElement="_18QnmHMaEeeoYuc64YE22w" inputElement="_18Qnl3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QnfnMaEeeoYuc64YE22w" target="_18QniHMaEeeoYuc64YE22w" source="_18QnjnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qnf3MaEeeoYuc64YE22w" target="_18QnhnMaEeeoYuc64YE22w" source="_18Qnk3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QngHMaEeeoYuc64YE22w" target="_18QnlnMaEeeoYuc64YE22w" source="_18QnjnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QngXMaEeeoYuc64YE22w" target="_18QnlnMaEeeoYuc64YE22w" source="_18Qni3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QngnMaEeeoYuc64YE22w" target="_18QnkHMaEeeoYuc64YE22w" source="_18QnlnMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18Qng3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QnhHMaEeeoYuc64YE22w" target="_18QnjnMaEeeoYuc64YE22w" source="_18Qnl3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QnhXMaEeeoYuc64YE22w" target="_18QnmHMaEeeoYuc64YE22w" source="_18QnhnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_18QnhnMaEeeoYuc64YE22w" name="Merge(CastExpression@10a61ded.operand)" incoming="_18Qnf3MaEeeoYuc64YE22w" outgoing="_18QnhXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18Qnh3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_18QniHMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).object" incoming="_18QnfnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QniXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QninMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18Qni3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).result" outgoing="_18QngXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QnjHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QnjXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18QnjnMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(BitString).object)" incoming="_18QnhHMaEeeoYuc64YE22w" outgoing="_18QnfnMaEeeoYuc64YE22w _18QngHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qnj3MaEeeoYuc64YE22w" name="Call(ToInteger)">
                  <argument xmi:id="_18QnkHMaEeeoYuc64YE22w" name="Call(ToInteger).argument(b)" incoming="_18QngnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QnkXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QnknMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18Qnk3MaEeeoYuc64YE22w" name="Call(ToInteger).result()" outgoing="_18Qnf3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QnlHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QnlXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_18QnlnMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(BitString).result)" incoming="_18QngHMaEeeoYuc64YE22w _18QngXMaEeeoYuc64YE22w" outgoing="_18QngnMaEeeoYuc64YE22w" decisionInputFlow="_18QngXMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18Qnl3MaEeeoYuc64YE22w" name="CastExpression@10a61ded.inputElement" incoming="_18QE23MaEeeoYuc64YE22w" outgoing="_18QnhHMaEeeoYuc64YE22w" regionAsInput="_18QnfXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18QnmHMaEeeoYuc64YE22w" name="CastExpression@10a61ded.outputElement" incoming="_18QnhXMaEeeoYuc64YE22w" outgoing="_18QE1XMaEeeoYuc64YE22w" regionAsOutput="_18QnfXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QnmXMaEeeoYuc64YE22w" name="ExpressionStatement@3d988dc3" incoming="_18QB_HMaEeeoYuc64YE22w" outgoing="_18QB_nMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QnmnMaEeeoYuc64YE22w" target="_18Qnm3MaEeeoYuc64YE22w" source="_18Qn3nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18Qnm3MaEeeoYuc64YE22w" name="Fork(h)@539f02c4" incoming="_18QnmnMaEeeoYuc64YE22w" outgoing="_18QB_XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QnnHMaEeeoYuc64YE22w" name="RightHandSide@437c04f9">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QnnXMaEeeoYuc64YE22w" target="_18QnrnMaEeeoYuc64YE22w" source="_18QnonMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QnnnMaEeeoYuc64YE22w" target="_18QnunMaEeeoYuc64YE22w" source="_18QnqnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qnn3MaEeeoYuc64YE22w" target="_18QnvXMaEeeoYuc64YE22w" source="_18QnsXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QnoHMaEeeoYuc64YE22w" target="_18Qn3XMaEeeoYuc64YE22w" source="_18QntnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QnoXMaEeeoYuc64YE22w" name="Value(240)">
                <result xmi:id="_18QnonMaEeeoYuc64YE22w" name="Value(240).result" outgoing="_18QnnXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qno3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QnpHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QnpXMaEeeoYuc64YE22w" value="240">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QnpnMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_18Qnp3MaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QB-3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QnqHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QnqXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QnqnMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18QnnnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qnq3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QnrHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QnrXMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_18QnrnMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QnnXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qnr3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QnsHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QnsXMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18Qnn3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QnsnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qns3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QntHMaEeeoYuc64YE22w" name="Node(Call(|))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QntXMaEeeoYuc64YE22w" target="_18QntnMaEeeoYuc64YE22w" source="_18QnwHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QntnMaEeeoYuc64YE22w" name="Output(Call(|).result())" incoming="_18QntXMaEeeoYuc64YE22w" outgoing="_18QnoHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qnt3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QnuHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QnuXMaEeeoYuc64YE22w" name="Call(|)">
                  <argument xmi:id="_18QnunMaEeeoYuc64YE22w" name="Call(|).argument(b1)" incoming="_18QnnnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qnu3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QnvHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QnvXMaEeeoYuc64YE22w" name="Call(|).argument(b2)" incoming="_18Qnn3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QnvnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qnv3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QnwHMaEeeoYuc64YE22w" name="Call(|).result()" outgoing="_18QntXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QnwXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QnwnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-bar"/>
                </node>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_18Qnw3MaEeeoYuc64YE22w" name="CastExpression@437c04f9" mode="parallel" outputElement="_18Qn3nMaEeeoYuc64YE22w" inputElement="_18Qn3XMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QnxHMaEeeoYuc64YE22w" target="_18QnznMaEeeoYuc64YE22w" source="_18Qn1HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QnxXMaEeeoYuc64YE22w" target="_18QnzHMaEeeoYuc64YE22w" source="_18Qn2XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QnxnMaEeeoYuc64YE22w" target="_18Qn3HMaEeeoYuc64YE22w" source="_18Qn1HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qnx3MaEeeoYuc64YE22w" target="_18Qn3HMaEeeoYuc64YE22w" source="_18Qn0XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QnyHMaEeeoYuc64YE22w" target="_18Qn1nMaEeeoYuc64YE22w" source="_18Qn3HMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QnyXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QnynMaEeeoYuc64YE22w" target="_18Qn1HMaEeeoYuc64YE22w" source="_18Qn3XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qny3MaEeeoYuc64YE22w" target="_18Qn3nMaEeeoYuc64YE22w" source="_18QnzHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_18QnzHMaEeeoYuc64YE22w" name="Merge(CastExpression@437c04f9.operand)" incoming="_18QnxXMaEeeoYuc64YE22w" outgoing="_18Qny3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18QnzXMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_18QnznMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).object" incoming="_18QnxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qnz3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qn0HMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18Qn0XMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).result" outgoing="_18Qnx3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qn0nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qn03MaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18Qn1HMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(BitString).object)" incoming="_18QnynMaEeeoYuc64YE22w" outgoing="_18QnxHMaEeeoYuc64YE22w _18QnxnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qn1XMaEeeoYuc64YE22w" name="Call(ToInteger)">
                  <argument xmi:id="_18Qn1nMaEeeoYuc64YE22w" name="Call(ToInteger).argument(b)" incoming="_18QnyHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qn13MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qn2HMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18Qn2XMaEeeoYuc64YE22w" name="Call(ToInteger).result()" outgoing="_18QnxXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qn2nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qn23MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_18Qn3HMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(BitString).result)" incoming="_18QnxnMaEeeoYuc64YE22w _18Qnx3MaEeeoYuc64YE22w" outgoing="_18QnyHMaEeeoYuc64YE22w" decisionInputFlow="_18Qnx3MaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18Qn3XMaEeeoYuc64YE22w" name="CastExpression@437c04f9.inputElement" incoming="_18QnoHMaEeeoYuc64YE22w" outgoing="_18QnynMaEeeoYuc64YE22w" regionAsInput="_18Qnw3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18Qn3nMaEeeoYuc64YE22w" name="CastExpression@437c04f9.outputElement" incoming="_18Qny3MaEeeoYuc64YE22w" outgoing="_18QnmnMaEeeoYuc64YE22w" regionAsOutput="_18Qnw3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qn33MaEeeoYuc64YE22w" name="ExpressionStatement@197ac78a" incoming="_18QB_nMaEeeoYuc64YE22w" outgoing="_18QCAHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qn4HMaEeeoYuc64YE22w" target="_18Qn4XMaEeeoYuc64YE22w" source="_18QoHHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18Qn4XMaEeeoYuc64YE22w" name="Fork(h)@7f208e7a" incoming="_18Qn4HMaEeeoYuc64YE22w" outgoing="_18QB_3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qn4nMaEeeoYuc64YE22w" name="RightHandSide@7d05b1ef">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qn43MaEeeoYuc64YE22w" target="_18Qn-HMaEeeoYuc64YE22w" source="_18Qn73MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qn5HMaEeeoYuc64YE22w" target="_18Qn-3MaEeeoYuc64YE22w" source="_18Qn53MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qn5XMaEeeoYuc64YE22w" target="_18QoG3MaEeeoYuc64YE22w" source="_18Qn9HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Qn5nMaEeeoYuc64YE22w" name="Value(2)">
                <result xmi:id="_18Qn53MaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18Qn5HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qn6HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qn6XMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18Qn6nMaEeeoYuc64YE22w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qn63MaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_18Qn7HMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QB_XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qn7XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qn7nMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18Qn73MaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18Qn43MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qn8HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qn8XMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qn8nMaEeeoYuc64YE22w" name="Node(Call(&lt;&lt;))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qn83MaEeeoYuc64YE22w" target="_18Qn9HMaEeeoYuc64YE22w" source="_18Qn_nMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18Qn9HMaEeeoYuc64YE22w" name="Output(Call(&lt;&lt;).result())" incoming="_18Qn83MaEeeoYuc64YE22w" outgoing="_18Qn5XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qn9XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qn9nMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qn93MaEeeoYuc64YE22w" name="Call(&lt;&lt;)">
                  <argument xmi:id="_18Qn-HMaEeeoYuc64YE22w" name="Call(&lt;&lt;).argument(x)" incoming="_18Qn43MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qn-XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qn-nMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18Qn-3MaEeeoYuc64YE22w" name="Call(&lt;&lt;).argument(n)" incoming="_18Qn5HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qn_HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qn_XMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18Qn_nMaEeeoYuc64YE22w" name="Call(&lt;&lt;).result()" outgoing="_18Qn83MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qn_3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoAHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ltlt"/>
                </node>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_18QoAXMaEeeoYuc64YE22w" name="CastExpression@7d05b1ef" mode="parallel" outputElement="_18QoHHMaEeeoYuc64YE22w" inputElement="_18QoG3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoAnMaEeeoYuc64YE22w" target="_18QoDHMaEeeoYuc64YE22w" source="_18QoEnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoA3MaEeeoYuc64YE22w" target="_18QoCnMaEeeoYuc64YE22w" source="_18QoF3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoBHMaEeeoYuc64YE22w" target="_18QoGnMaEeeoYuc64YE22w" source="_18QoEnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoBXMaEeeoYuc64YE22w" target="_18QoGnMaEeeoYuc64YE22w" source="_18QoD3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoBnMaEeeoYuc64YE22w" target="_18QoFHMaEeeoYuc64YE22w" source="_18QoGnMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QoB3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoCHMaEeeoYuc64YE22w" target="_18QoEnMaEeeoYuc64YE22w" source="_18QoG3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoCXMaEeeoYuc64YE22w" target="_18QoHHMaEeeoYuc64YE22w" source="_18QoCnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_18QoCnMaEeeoYuc64YE22w" name="Merge(CastExpression@7d05b1ef.operand)" incoming="_18QoA3MaEeeoYuc64YE22w" outgoing="_18QoCXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18QoC3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_18QoDHMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).object" incoming="_18QoAnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoDXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoDnMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18QoD3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).result" outgoing="_18QoBXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoEHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoEXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18QoEnMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(BitString).object)" incoming="_18QoCHMaEeeoYuc64YE22w" outgoing="_18QoAnMaEeeoYuc64YE22w _18QoBHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QoE3MaEeeoYuc64YE22w" name="Call(ToInteger)">
                  <argument xmi:id="_18QoFHMaEeeoYuc64YE22w" name="Call(ToInteger).argument(b)" incoming="_18QoBnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoFXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoFnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QoF3MaEeeoYuc64YE22w" name="Call(ToInteger).result()" outgoing="_18QoA3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoGHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoGXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_18QoGnMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(BitString).result)" incoming="_18QoBHMaEeeoYuc64YE22w _18QoBXMaEeeoYuc64YE22w" outgoing="_18QoBnMaEeeoYuc64YE22w" decisionInputFlow="_18QoBXMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18QoG3MaEeeoYuc64YE22w" name="CastExpression@7d05b1ef.inputElement" incoming="_18Qn5XMaEeeoYuc64YE22w" outgoing="_18QoCHMaEeeoYuc64YE22w" regionAsInput="_18QoAXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18QoHHMaEeeoYuc64YE22w" name="CastExpression@7d05b1ef.outputElement" incoming="_18QoCXMaEeeoYuc64YE22w" outgoing="_18Qn4HMaEeeoYuc64YE22w" regionAsOutput="_18QoAXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QoHXMaEeeoYuc64YE22w" name="ExpressionStatement@1fab1567" incoming="_18QCAHMaEeeoYuc64YE22w" outgoing="_18QCAnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoHnMaEeeoYuc64YE22w" target="_18QoH3MaEeeoYuc64YE22w" source="_18QoWnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QoH3MaEeeoYuc64YE22w" name="Fork(h)@4e51b8" incoming="_18QoHnMaEeeoYuc64YE22w" outgoing="_18QCAXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QoIHMaEeeoYuc64YE22w" name="RightHandSide@7d8cb476">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoIXMaEeeoYuc64YE22w" target="_18QoNnMaEeeoYuc64YE22w" source="_18QoLXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoInMaEeeoYuc64YE22w" target="_18QoOXMaEeeoYuc64YE22w" source="_18QoJXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoI3MaEeeoYuc64YE22w" target="_18QoWXMaEeeoYuc64YE22w" source="_18QoMnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QoJHMaEeeoYuc64YE22w" name="Value(2)">
                <result xmi:id="_18QoJXMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18QoInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoJnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoJ3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QoKHMaEeeoYuc64YE22w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QoKXMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_18QoKnMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QB_3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoK3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoLHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QoLXMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18QoIXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoLnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoL3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QoMHMaEeeoYuc64YE22w" name="Node(Call(>>))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoMXMaEeeoYuc64YE22w" target="_18QoMnMaEeeoYuc64YE22w" source="_18QoPHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QoMnMaEeeoYuc64YE22w" name="Output(Call(>>).result())" incoming="_18QoMXMaEeeoYuc64YE22w" outgoing="_18QoI3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoM3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoNHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QoNXMaEeeoYuc64YE22w" name="Call(>>)">
                  <argument xmi:id="_18QoNnMaEeeoYuc64YE22w" name="Call(>>).argument(x)" incoming="_18QoIXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoN3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoOHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QoOXMaEeeoYuc64YE22w" name="Call(>>).argument(n)" incoming="_18QoInMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoOnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoO3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QoPHMaEeeoYuc64YE22w" name="Call(>>).result()" outgoing="_18QoMXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoPXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoPnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgt"/>
                </node>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_18QoP3MaEeeoYuc64YE22w" name="CastExpression@7d8cb476" mode="parallel" outputElement="_18QoWnMaEeeoYuc64YE22w" inputElement="_18QoWXMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoQHMaEeeoYuc64YE22w" target="_18QoSnMaEeeoYuc64YE22w" source="_18QoUHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoQXMaEeeoYuc64YE22w" target="_18QoSHMaEeeoYuc64YE22w" source="_18QoVXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoQnMaEeeoYuc64YE22w" target="_18QoWHMaEeeoYuc64YE22w" source="_18QoUHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoQ3MaEeeoYuc64YE22w" target="_18QoWHMaEeeoYuc64YE22w" source="_18QoTXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoRHMaEeeoYuc64YE22w" target="_18QoUnMaEeeoYuc64YE22w" source="_18QoWHMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QoRXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoRnMaEeeoYuc64YE22w" target="_18QoUHMaEeeoYuc64YE22w" source="_18QoWXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoR3MaEeeoYuc64YE22w" target="_18QoWnMaEeeoYuc64YE22w" source="_18QoSHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_18QoSHMaEeeoYuc64YE22w" name="Merge(CastExpression@7d8cb476.operand)" incoming="_18QoQXMaEeeoYuc64YE22w" outgoing="_18QoR3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18QoSXMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_18QoSnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).object" incoming="_18QoQHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoS3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoTHMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18QoTXMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).result" outgoing="_18QoQ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoTnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoT3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18QoUHMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(BitString).object)" incoming="_18QoRnMaEeeoYuc64YE22w" outgoing="_18QoQHMaEeeoYuc64YE22w _18QoQnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QoUXMaEeeoYuc64YE22w" name="Call(ToInteger)">
                  <argument xmi:id="_18QoUnMaEeeoYuc64YE22w" name="Call(ToInteger).argument(b)" incoming="_18QoRHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoU3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoVHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QoVXMaEeeoYuc64YE22w" name="Call(ToInteger).result()" outgoing="_18QoQXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoVnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoV3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_18QoWHMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(BitString).result)" incoming="_18QoQnMaEeeoYuc64YE22w _18QoQ3MaEeeoYuc64YE22w" outgoing="_18QoRHMaEeeoYuc64YE22w" decisionInputFlow="_18QoQ3MaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18QoWXMaEeeoYuc64YE22w" name="CastExpression@7d8cb476.inputElement" incoming="_18QoI3MaEeeoYuc64YE22w" outgoing="_18QoRnMaEeeoYuc64YE22w" regionAsInput="_18QoP3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18QoWnMaEeeoYuc64YE22w" name="CastExpression@7d8cb476.outputElement" incoming="_18QoR3MaEeeoYuc64YE22w" outgoing="_18QoHnMaEeeoYuc64YE22w" regionAsOutput="_18QoP3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QoW3MaEeeoYuc64YE22w" name="ExpressionStatement@ed47f9a" incoming="_18QCAnMaEeeoYuc64YE22w" outgoing="_18QCBHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoXHMaEeeoYuc64YE22w" target="_18QoXXMaEeeoYuc64YE22w" source="_18QomHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QoXXMaEeeoYuc64YE22w" name="Fork(h)@12fdb2de" incoming="_18QoXHMaEeeoYuc64YE22w" outgoing="_18QCA3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QoXnMaEeeoYuc64YE22w" name="RightHandSide@61e83eb1">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoX3MaEeeoYuc64YE22w" target="_18QodHMaEeeoYuc64YE22w" source="_18Qoa3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoYHMaEeeoYuc64YE22w" target="_18Qod3MaEeeoYuc64YE22w" source="_18QoY3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoYXMaEeeoYuc64YE22w" target="_18Qol3MaEeeoYuc64YE22w" source="_18QocHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QoYnMaEeeoYuc64YE22w" name="Value(2)">
                <result xmi:id="_18QoY3MaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18QoYHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoZHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoZXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QoZnMaEeeoYuc64YE22w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QoZ3MaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_18QoaHMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QCAXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoaXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoanMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18Qoa3MaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18QoX3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QobHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QobXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QobnMaEeeoYuc64YE22w" name="Node(Call(>>>))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qob3MaEeeoYuc64YE22w" target="_18QocHMaEeeoYuc64YE22w" source="_18QoenMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QocHMaEeeoYuc64YE22w" name="Output(Call(>>>).result())" incoming="_18Qob3MaEeeoYuc64YE22w" outgoing="_18QoYXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QocXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QocnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qoc3MaEeeoYuc64YE22w" name="Call(>>>)">
                  <argument xmi:id="_18QodHMaEeeoYuc64YE22w" name="Call(>>>).argument(x)" incoming="_18QoX3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QodXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QodnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18Qod3MaEeeoYuc64YE22w" name="Call(>>>).argument(n)" incoming="_18QoYHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoeHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoeXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QoenMaEeeoYuc64YE22w" name="Call(>>>).result()" outgoing="_18Qob3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qoe3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QofHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgtgt"/>
                </node>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_18QofXMaEeeoYuc64YE22w" name="CastExpression@61e83eb1" mode="parallel" outputElement="_18QomHMaEeeoYuc64YE22w" inputElement="_18Qol3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QofnMaEeeoYuc64YE22w" target="_18QoiHMaEeeoYuc64YE22w" source="_18QojnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qof3MaEeeoYuc64YE22w" target="_18QohnMaEeeoYuc64YE22w" source="_18Qok3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QogHMaEeeoYuc64YE22w" target="_18QolnMaEeeoYuc64YE22w" source="_18QojnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QogXMaEeeoYuc64YE22w" target="_18QolnMaEeeoYuc64YE22w" source="_18Qoi3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QognMaEeeoYuc64YE22w" target="_18QokHMaEeeoYuc64YE22w" source="_18QolnMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18Qog3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QohHMaEeeoYuc64YE22w" target="_18QojnMaEeeoYuc64YE22w" source="_18Qol3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QohXMaEeeoYuc64YE22w" target="_18QomHMaEeeoYuc64YE22w" source="_18QohnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_18QohnMaEeeoYuc64YE22w" name="Merge(CastExpression@61e83eb1.operand)" incoming="_18Qof3MaEeeoYuc64YE22w" outgoing="_18QohXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18Qoh3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_18QoiHMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).object" incoming="_18QofnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoiXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoinMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18Qoi3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).result" outgoing="_18QogXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QojHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QojXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18QojnMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(BitString).object)" incoming="_18QohHMaEeeoYuc64YE22w" outgoing="_18QofnMaEeeoYuc64YE22w _18QogHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qoj3MaEeeoYuc64YE22w" name="Call(ToInteger)">
                  <argument xmi:id="_18QokHMaEeeoYuc64YE22w" name="Call(ToInteger).argument(b)" incoming="_18QognMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QokXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoknMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18Qok3MaEeeoYuc64YE22w" name="Call(ToInteger).result()" outgoing="_18Qof3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QolHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QolXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_18QolnMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(BitString).result)" incoming="_18QogHMaEeeoYuc64YE22w _18QogXMaEeeoYuc64YE22w" outgoing="_18QognMaEeeoYuc64YE22w" decisionInputFlow="_18QogXMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18Qol3MaEeeoYuc64YE22w" name="CastExpression@61e83eb1.inputElement" incoming="_18QoYXMaEeeoYuc64YE22w" outgoing="_18QohHMaEeeoYuc64YE22w" regionAsInput="_18QofXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18QomHMaEeeoYuc64YE22w" name="CastExpression@61e83eb1.outputElement" incoming="_18QohXMaEeeoYuc64YE22w" outgoing="_18QoXHMaEeeoYuc64YE22w" regionAsOutput="_18QofXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QomXMaEeeoYuc64YE22w" name="ExpressionStatement@1f1e8fda" incoming="_18QCBHMaEeeoYuc64YE22w" outgoing="_18QCB3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QomnMaEeeoYuc64YE22w" target="_18Qom3MaEeeoYuc64YE22w" source="_18Qo3nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18Qom3MaEeeoYuc64YE22w" name="Fork(h)@52492392" incoming="_18QomnMaEeeoYuc64YE22w" outgoing="_18QCT3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QonHMaEeeoYuc64YE22w" name="RightHandSide@304d3b37">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QonXMaEeeoYuc64YE22w" target="_18QornMaEeeoYuc64YE22w" source="_18QoonMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QonnMaEeeoYuc64YE22w" target="_18QounMaEeeoYuc64YE22w" source="_18QoqnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qon3MaEeeoYuc64YE22w" target="_18QovXMaEeeoYuc64YE22w" source="_18QosXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QooHMaEeeoYuc64YE22w" target="_18Qo3XMaEeeoYuc64YE22w" source="_18QotnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QooXMaEeeoYuc64YE22w" name="Value(4)">
                <result xmi:id="_18QoonMaEeeoYuc64YE22w" name="Value(4).result" outgoing="_18QonXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qoo3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QopHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QopXMaEeeoYuc64YE22w" value="4">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QopnMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_18Qop3MaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QCA3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QoqHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QoqXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QoqnMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18QonnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qoq3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QorHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QorXMaEeeoYuc64YE22w" name="Call(ToBitString)">
                <argument xmi:id="_18QornMaEeeoYuc64YE22w" name="Call(ToBitString).argument(n)" incoming="_18QonXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qor3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QosHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QosXMaEeeoYuc64YE22w" name="Call(ToBitString).result()" outgoing="_18Qon3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QosnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qos3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QotHMaEeeoYuc64YE22w" name="Node(Call(^))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QotXMaEeeoYuc64YE22w" target="_18QotnMaEeeoYuc64YE22w" source="_18QowHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QotnMaEeeoYuc64YE22w" name="Output(Call(^).result())" incoming="_18QotXMaEeeoYuc64YE22w" outgoing="_18QooHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qot3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QouHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QouXMaEeeoYuc64YE22w" name="Call(^)">
                  <argument xmi:id="_18QounMaEeeoYuc64YE22w" name="Call(^).argument(b1)" incoming="_18QonnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qou3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QovHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QovXMaEeeoYuc64YE22w" name="Call(^).argument(b2)" incoming="_18Qon3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QovnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qov3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QowHMaEeeoYuc64YE22w" name="Call(^).result()" outgoing="_18QotXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QowXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QownMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-caret"/>
                </node>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_18Qow3MaEeeoYuc64YE22w" name="CastExpression@304d3b37" mode="parallel" outputElement="_18Qo3nMaEeeoYuc64YE22w" inputElement="_18Qo3XMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoxHMaEeeoYuc64YE22w" target="_18QoznMaEeeoYuc64YE22w" source="_18Qo1HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoxXMaEeeoYuc64YE22w" target="_18QozHMaEeeoYuc64YE22w" source="_18Qo2XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoxnMaEeeoYuc64YE22w" target="_18Qo3HMaEeeoYuc64YE22w" source="_18Qo1HMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qox3MaEeeoYuc64YE22w" target="_18Qo3HMaEeeoYuc64YE22w" source="_18Qo0XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoyHMaEeeoYuc64YE22w" target="_18Qo1nMaEeeoYuc64YE22w" source="_18Qo3HMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QoyXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QoynMaEeeoYuc64YE22w" target="_18Qo1HMaEeeoYuc64YE22w" source="_18Qo3XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qoy3MaEeeoYuc64YE22w" target="_18Qo3nMaEeeoYuc64YE22w" source="_18QozHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_18QozHMaEeeoYuc64YE22w" name="Merge(CastExpression@304d3b37.operand)" incoming="_18QoxXMaEeeoYuc64YE22w" outgoing="_18Qoy3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18QozXMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_18QoznMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).object" incoming="_18QoxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qoz3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qo0HMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18Qo0XMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).result" outgoing="_18Qox3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qo0nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qo03MaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18Qo1HMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(BitString).object)" incoming="_18QoynMaEeeoYuc64YE22w" outgoing="_18QoxHMaEeeoYuc64YE22w _18QoxnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qo1XMaEeeoYuc64YE22w" name="Call(ToInteger)">
                  <argument xmi:id="_18Qo1nMaEeeoYuc64YE22w" name="Call(ToInteger).argument(b)" incoming="_18QoyHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qo13MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qo2HMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18Qo2XMaEeeoYuc64YE22w" name="Call(ToInteger).result()" outgoing="_18QoxXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qo2nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qo23MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_18Qo3HMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(BitString).result)" incoming="_18QoxnMaEeeoYuc64YE22w _18Qox3MaEeeoYuc64YE22w" outgoing="_18QoyHMaEeeoYuc64YE22w" decisionInputFlow="_18Qox3MaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18Qo3XMaEeeoYuc64YE22w" name="CastExpression@304d3b37.inputElement" incoming="_18QooHMaEeeoYuc64YE22w" outgoing="_18QoynMaEeeoYuc64YE22w" regionAsInput="_18Qow3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18Qo3nMaEeeoYuc64YE22w" name="CastExpression@304d3b37.outputElement" incoming="_18Qoy3MaEeeoYuc64YE22w" outgoing="_18QomnMaEeeoYuc64YE22w" regionAsOutput="_18Qow3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qo33MaEeeoYuc64YE22w" name="ExpressionStatement@4b59c41" incoming="_18QCB3MaEeeoYuc64YE22w" outgoing="_18QCCnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qo4HMaEeeoYuc64YE22w" target="_18Qo4XMaEeeoYuc64YE22w" source="_18Qo5XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18Qo4XMaEeeoYuc64YE22w" name="Fork(a)@a1d1704" incoming="_18Qo4HMaEeeoYuc64YE22w" outgoing="_18QCUHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qo4nMaEeeoYuc64YE22w" name="RightHandSide@4039590f">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qo43MaEeeoYuc64YE22w" name="Node(Call(>))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qo5HMaEeeoYuc64YE22w" target="_18Qo5XMaEeeoYuc64YE22w" source="_18Qo73MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18Qo5XMaEeeoYuc64YE22w" name="Output(Call(>).result(result))" incoming="_18Qo5HMaEeeoYuc64YE22w" outgoing="_18Qo4HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qo5nMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qo53MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qo6HMaEeeoYuc64YE22w" name="Call(>)">
                  <argument xmi:id="_18Qo6XMaEeeoYuc64YE22w" name="Call(>).argument(x)" incoming="_18QCBXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qo6nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qo63MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18Qo7HMaEeeoYuc64YE22w" name="Call(>).argument(y)" incoming="_18QCBnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qo7XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qo7nMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18Qo73MaEeeoYuc64YE22w" name="Call(>).result(result)" outgoing="_18Qo5HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qo8HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qo8XMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qo8nMaEeeoYuc64YE22w" name="ExpressionStatement@4acc819c" incoming="_18QCCnMaEeeoYuc64YE22w" outgoing="_18QCDXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qo83MaEeeoYuc64YE22w" target="_18Qo9HMaEeeoYuc64YE22w" source="_18Qo-HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18Qo9HMaEeeoYuc64YE22w" name="Fork(b)@61485a6c" incoming="_18Qo83MaEeeoYuc64YE22w" outgoing="_18QCUXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qo9XMaEeeoYuc64YE22w" name="RightHandSide@7d21e80e">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qo9nMaEeeoYuc64YE22w" name="Node(Call(&lt;))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qo93MaEeeoYuc64YE22w" target="_18Qo-HMaEeeoYuc64YE22w" source="_18QpAnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18Qo-HMaEeeoYuc64YE22w" name="Output(Call(&lt;).result(result))" incoming="_18Qo93MaEeeoYuc64YE22w" outgoing="_18Qo83MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qo-XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qo-nMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qo-3MaEeeoYuc64YE22w" name="Call(&lt;)">
                  <argument xmi:id="_18Qo_HMaEeeoYuc64YE22w" name="Call(&lt;).argument(x)" incoming="_18QCCHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qo_XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qo_nMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18Qo_3MaEeeoYuc64YE22w" name="Call(&lt;).argument(y)" incoming="_18QCCXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpAHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpAXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QpAnMaEeeoYuc64YE22w" name="Call(&lt;).result(result)" outgoing="_18Qo93MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpA3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpBHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-lt"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpBXMaEeeoYuc64YE22w" name="ExpressionStatement@1ad16c03" incoming="_18QCDXMaEeeoYuc64YE22w" outgoing="_18QCEHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpBnMaEeeoYuc64YE22w" target="_18QpB3MaEeeoYuc64YE22w" source="_18QpC3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QpB3MaEeeoYuc64YE22w" name="Fork(c)@1fcad601" incoming="_18QpBnMaEeeoYuc64YE22w" outgoing="_18QCUnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpCHMaEeeoYuc64YE22w" name="RightHandSide@56dfd588">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpCXMaEeeoYuc64YE22w" name="Node(Call(>=))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpCnMaEeeoYuc64YE22w" target="_18QpC3MaEeeoYuc64YE22w" source="_18QpFXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QpC3MaEeeoYuc64YE22w" name="Output(Call(>=).result(result))" incoming="_18QpCnMaEeeoYuc64YE22w" outgoing="_18QpBnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpDHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpDXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QpDnMaEeeoYuc64YE22w" name="Call(>=)">
                  <argument xmi:id="_18QpD3MaEeeoYuc64YE22w" name="Call(>=).argument(x)" incoming="_18QCC3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpEHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpEXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QpEnMaEeeoYuc64YE22w" name="Call(>=).argument(y)" incoming="_18QCDHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpE3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpFHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QpFXMaEeeoYuc64YE22w" name="Call(>=).result(result)" outgoing="_18QpCnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpFnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpF3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ge"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpGHMaEeeoYuc64YE22w" name="ExpressionStatement@60c27905" incoming="_18QCEHMaEeeoYuc64YE22w" outgoing="_18QCEXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpGXMaEeeoYuc64YE22w" target="_18QpGnMaEeeoYuc64YE22w" source="_18QpHnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QpGnMaEeeoYuc64YE22w" name="Fork(d)@3166bd09" incoming="_18QpGXMaEeeoYuc64YE22w" outgoing="_18QCU3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpG3MaEeeoYuc64YE22w" name="RightHandSide@2e5e3877">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpHHMaEeeoYuc64YE22w" name="Node(Call(&lt;=))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpHXMaEeeoYuc64YE22w" target="_18QpHnMaEeeoYuc64YE22w" source="_18QpKHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QpHnMaEeeoYuc64YE22w" name="Output(Call(&lt;=).result(result))" incoming="_18QpHXMaEeeoYuc64YE22w" outgoing="_18QpGXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpH3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpIHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QpIXMaEeeoYuc64YE22w" name="Call(&lt;=)">
                  <argument xmi:id="_18QpInMaEeeoYuc64YE22w" name="Call(&lt;=).argument(x)" incoming="_18QCDnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpI3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpJHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QpJXMaEeeoYuc64YE22w" name="Call(&lt;=).argument(y)" incoming="_18QCD3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpJnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpJ3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QpKHMaEeeoYuc64YE22w" name="Call(&lt;=).result(result)" outgoing="_18QpHXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpKXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpKnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpK3MaEeeoYuc64YE22w" name="ExpressionStatement@3fe73f7" incoming="_18QCEXMaEeeoYuc64YE22w" outgoing="_18QCEnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpLHMaEeeoYuc64YE22w" target="_18QpLXMaEeeoYuc64YE22w" source="_18QpMHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QpLXMaEeeoYuc64YE22w" name="Fork(f)@63c18f25" incoming="_18QpLHMaEeeoYuc64YE22w" outgoing="_18QCE3MaEeeoYuc64YE22w _18QCF3MaEeeoYuc64YE22w _18QCL3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpLnMaEeeoYuc64YE22w" name="RightHandSide@1342a8fc">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QpL3MaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_18QpMHMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18QpLHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpMXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpMnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_18QpM3MaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpNHMaEeeoYuc64YE22w" name="ExpressionStatement@38cd40af" incoming="_18QCEnMaEeeoYuc64YE22w" outgoing="_18QCFXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpNXMaEeeoYuc64YE22w" target="_18QpNnMaEeeoYuc64YE22w" source="_18QpOXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QpNnMaEeeoYuc64YE22w" name="Fork(g)@66119cb9" incoming="_18QpNXMaEeeoYuc64YE22w" outgoing="_18QCFHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpN3MaEeeoYuc64YE22w" name="RightHandSide@718548aa">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QpOHMaEeeoYuc64YE22w" name="Value(false)">
                <result xmi:id="_18QpOXMaEeeoYuc64YE22w" name="Value(false).result" outgoing="_18QpNXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpOnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpO3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_18QpPHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpPXMaEeeoYuc64YE22w" name="ExpressionStatement@35d76fa" incoming="_18QCFXMaEeeoYuc64YE22w" outgoing="_18QCGHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpPnMaEeeoYuc64YE22w" target="_18QpP3MaEeeoYuc64YE22w" source="_18QpQ3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QpP3MaEeeoYuc64YE22w" name="Fork(e)@1fd8c80a" incoming="_18QpPnMaEeeoYuc64YE22w" outgoing="_18QCFnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpQHMaEeeoYuc64YE22w" name="RightHandSide@707a39d9">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpQXMaEeeoYuc64YE22w" name="Node(Call(Or))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpQnMaEeeoYuc64YE22w" target="_18QpQ3MaEeeoYuc64YE22w" source="_18QpTXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QpQ3MaEeeoYuc64YE22w" name="Output(Call(Or).result(result))" incoming="_18QpQnMaEeeoYuc64YE22w" outgoing="_18QpPnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpRHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpRXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QpRnMaEeeoYuc64YE22w" name="Call(Or)">
                  <argument xmi:id="_18QpR3MaEeeoYuc64YE22w" name="Call(Or).argument(x)" incoming="_18QCE3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpSHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpSXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QpSnMaEeeoYuc64YE22w" name="Call(Or).argument(y)" incoming="_18QCFHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpS3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpTHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QpTXMaEeeoYuc64YE22w" name="Call(Or).result(result)" outgoing="_18QpQnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpTnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpT3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpUHMaEeeoYuc64YE22w" name="ExpressionStatement@5e2539ae" incoming="_18QCGHMaEeeoYuc64YE22w" outgoing="_18QCGnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpUXMaEeeoYuc64YE22w" target="_18QpUnMaEeeoYuc64YE22w" source="_18QpVnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QpUnMaEeeoYuc64YE22w" name="Fork(e)@6e3de2ff" incoming="_18QpUXMaEeeoYuc64YE22w" outgoing="_18QCGXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpU3MaEeeoYuc64YE22w" name="RightHandSide@3a50876b">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpVHMaEeeoYuc64YE22w" name="Node(Call(And))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpVXMaEeeoYuc64YE22w" target="_18QpVnMaEeeoYuc64YE22w" source="_18QpYHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QpVnMaEeeoYuc64YE22w" name="Output(Call(And).result(result))" incoming="_18QpVXMaEeeoYuc64YE22w" outgoing="_18QpUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpV3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpWHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QpWXMaEeeoYuc64YE22w" name="Call(And)">
                  <argument xmi:id="_18QpWnMaEeeoYuc64YE22w" name="Call(And).argument(x)" incoming="_18QCFnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpW3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpXHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QpXXMaEeeoYuc64YE22w" name="Call(And).argument(y)" incoming="_18QCF3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpXnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpX3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QpYHMaEeeoYuc64YE22w" name="Call(And).result(result)" outgoing="_18QpVXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpYXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpYnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-And"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpY3MaEeeoYuc64YE22w" name="ExpressionStatement@5545ca27" incoming="_18QCGnMaEeeoYuc64YE22w" outgoing="_18QCG3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpZHMaEeeoYuc64YE22w" target="_18QpZXMaEeeoYuc64YE22w" source="_18Qpa3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QpZXMaEeeoYuc64YE22w" name="Fork(e)@71ec915a" incoming="_18QpZHMaEeeoYuc64YE22w" outgoing="_18QCVHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpZnMaEeeoYuc64YE22w" name="RightHandSide@7cfa98f5">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QpZ3MaEeeoYuc64YE22w" name="Call(Not)">
                <argument xmi:id="_18QpaHMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_18QCGXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpaXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpanMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18Qpa3MaEeeoYuc64YE22w" name="Call(Not).result(result)" outgoing="_18QpZHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpbHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpbXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpbnMaEeeoYuc64YE22w" name="ExpressionStatement@386a2628" incoming="_18QCG3MaEeeoYuc64YE22w" outgoing="_18QCHHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qpb3MaEeeoYuc64YE22w" target="_18QpcHMaEeeoYuc64YE22w" source="_18QpiHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QpcHMaEeeoYuc64YE22w" name="Fork(e1)@1e99898a" incoming="_18Qpb3MaEeeoYuc64YE22w" outgoing="_18QCVXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpcXMaEeeoYuc64YE22w" name="RightHandSide@718158e1">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpcnMaEeeoYuc64YE22w" target="_18Qpe3MaEeeoYuc64YE22w" source="_18QpdnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qpc3MaEeeoYuc64YE22w" target="_18QpjHMaEeeoYuc64YE22w" source="_18QpfnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpdHMaEeeoYuc64YE22w" target="_18Qpj3MaEeeoYuc64YE22w" source="_18QpgnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QpdXMaEeeoYuc64YE22w" name="Value(3)">
                <result xmi:id="_18QpdnMaEeeoYuc64YE22w" name="Value(3).result" outgoing="_18QpcnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qpd3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpeHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QpeXMaEeeoYuc64YE22w" value="3">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QpenMaEeeoYuc64YE22w" name="Call(ToUnlimitedNatural)">
                <argument xmi:id="_18Qpe3MaEeeoYuc64YE22w" name="Call(ToUnlimitedNatural).argument(x)" incoming="_18QpcnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpfHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpfXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QpfnMaEeeoYuc64YE22w" name="Call(ToUnlimitedNatural).result(result)" outgoing="_18Qpc3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qpf3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpgHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QpgXMaEeeoYuc64YE22w" name="Value(*)">
                <result xmi:id="_18QpgnMaEeeoYuc64YE22w" name="Value(*).result" outgoing="_18QpdHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qpg3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QphHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QphXMaEeeoYuc64YE22w" value="*">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QphnMaEeeoYuc64YE22w" name="Node(Call(&lt;))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qph3MaEeeoYuc64YE22w" target="_18QpiHMaEeeoYuc64YE22w" source="_18QpknMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QpiHMaEeeoYuc64YE22w" name="Output(Call(&lt;).result(result))" incoming="_18Qph3MaEeeoYuc64YE22w" outgoing="_18Qpb3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpiXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpinMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qpi3MaEeeoYuc64YE22w" name="Call(&lt;)">
                  <argument xmi:id="_18QpjHMaEeeoYuc64YE22w" name="Call(&lt;).argument(x)" incoming="_18Qpc3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpjXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpjnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18Qpj3MaEeeoYuc64YE22w" name="Call(&lt;).argument(y)" incoming="_18QpdHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpkHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpkXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QpknMaEeeoYuc64YE22w" name="Call(&lt;).result(result)" outgoing="_18Qph3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qpk3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QplHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-UnlimitedNaturalFunctions-lt"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QplXMaEeeoYuc64YE22w" name="ExpressionStatement@4e81691d" incoming="_18QCHHMaEeeoYuc64YE22w" outgoing="_18QCHnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QplnMaEeeoYuc64YE22w" target="_18Qpl3MaEeeoYuc64YE22w" source="_18Qp8nMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18Qpl3MaEeeoYuc64YE22w" name="Fork(e2)@16fbed47" incoming="_18QplnMaEeeoYuc64YE22w" outgoing="_18QCVnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpmHMaEeeoYuc64YE22w" name="RightHandSide@18f3feaf">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpmXMaEeeoYuc64YE22w" target="_18Qp0nMaEeeoYuc64YE22w" source="_18QpqHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QpmnMaEeeoYuc64YE22w" target="_18Qp0XMaEeeoYuc64YE22w" source="_18QppnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qpm3MaEeeoYuc64YE22w" target="_18Qp3XMaEeeoYuc64YE22w" source="_18QpqHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QpnHMaEeeoYuc64YE22w" target="_18Qp6XMaEeeoYuc64YE22w" source="_18Qp6HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpnXMaEeeoYuc64YE22w" target="_18Qp6XMaEeeoYuc64YE22w" source="_18Qp1XMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QpnnMaEeeoYuc64YE22w" target="_18Qp2HMaEeeoYuc64YE22w" source="_18Qp6XMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18Qpn3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QpoHMaEeeoYuc64YE22w" target="_18Qp3nMaEeeoYuc64YE22w" source="_18Qp6XMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QpoXMaEeeoYuc64YE22w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QponMaEeeoYuc64YE22w" target="_18Qp6nMaEeeoYuc64YE22w" source="_18Qp2nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qpo3MaEeeoYuc64YE22w" target="_18Qp6nMaEeeoYuc64YE22w" source="_18Qp4HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QppHMaEeeoYuc64YE22w" target="_18Qp9nMaEeeoYuc64YE22w" source="_18Qp6nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QppXMaEeeoYuc64YE22w" target="_18Qp-XMaEeeoYuc64YE22w" source="_18Qp7HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QppnMaEeeoYuc64YE22w" name="Operands(EqualityExpression@49240dd0)" outgoing="_18QpmnMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qpp3MaEeeoYuc64YE22w" target="_18QpqHMaEeeoYuc64YE22w" source="_18Qpy3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_18QpqHMaEeeoYuc64YE22w" name="Fork()@31d862de" incoming="_18Qpp3MaEeeoYuc64YE22w" outgoing="_18QpmXMaEeeoYuc64YE22w _18Qpm3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QpqXMaEeeoYuc64YE22w" name="RightHandSide@588cb460">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpqnMaEeeoYuc64YE22w" target="_18QpynMaEeeoYuc64YE22w" source="_18QprHMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Qpq3MaEeeoYuc64YE22w" name="Value(3)">
                    <result xmi:id="_18QprHMaEeeoYuc64YE22w" name="Value(3).result" outgoing="_18QpqnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QprXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QprnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_18Qpr3MaEeeoYuc64YE22w" value="3">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_18QpsHMaEeeoYuc64YE22w" name="CastExpression@588cb460" mode="parallel" outputElement="_18Qpy3MaEeeoYuc64YE22w" inputElement="_18QpynMaEeeoYuc64YE22w">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpsXMaEeeoYuc64YE22w" target="_18Qpu3MaEeeoYuc64YE22w" source="_18QpwXMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpsnMaEeeoYuc64YE22w" target="_18QpuXMaEeeoYuc64YE22w" source="_18QpxnMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qps3MaEeeoYuc64YE22w" target="_18QpyXMaEeeoYuc64YE22w" source="_18QpwXMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_18QptHMaEeeoYuc64YE22w" target="_18QpyXMaEeeoYuc64YE22w" source="_18QpvnMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_18QptXMaEeeoYuc64YE22w" target="_18Qpw3MaEeeoYuc64YE22w" source="_18QpyXMaEeeoYuc64YE22w">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QptnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qpt3MaEeeoYuc64YE22w" target="_18QpwXMaEeeoYuc64YE22w" source="_18QpynMaEeeoYuc64YE22w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_18QpuHMaEeeoYuc64YE22w" target="_18Qpy3MaEeeoYuc64YE22w" source="_18QpuXMaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_18QpuXMaEeeoYuc64YE22w" name="Merge(CastExpression@588cb460.operand)" incoming="_18QpsnMaEeeoYuc64YE22w" outgoing="_18QpuHMaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18QpunMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <object xmi:id="_18Qpu3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer).object" incoming="_18QpsXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpvHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpvXMaEeeoYuc64YE22w" value="1"/>
                      </object>
                      <result xmi:id="_18QpvnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer).result" outgoing="_18QptHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qpv3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpwHMaEeeoYuc64YE22w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_18QpwXMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(Integer).object)" incoming="_18Qpt3MaEeeoYuc64YE22w" outgoing="_18QpsXMaEeeoYuc64YE22w _18Qps3MaEeeoYuc64YE22w"/>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QpwnMaEeeoYuc64YE22w" name="Call(ToUnlimitedNatural)">
                      <argument xmi:id="_18Qpw3MaEeeoYuc64YE22w" name="Call(ToUnlimitedNatural).argument(x)" incoming="_18QptXMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpxHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpxXMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_18QpxnMaEeeoYuc64YE22w" name="Call(ToUnlimitedNatural).result(result)" outgoing="_18QpsnMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qpx3MaEeeoYuc64YE22w"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QpyHMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
                    </node>
                    <node xmi:type="uml:DecisionNode" xmi:id="_18QpyXMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(Integer).result)" incoming="_18Qps3MaEeeoYuc64YE22w _18QptHMaEeeoYuc64YE22w" outgoing="_18QptXMaEeeoYuc64YE22w" decisionInputFlow="_18QptHMaEeeoYuc64YE22w"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_18QpynMaEeeoYuc64YE22w" name="CastExpression@588cb460.inputElement" incoming="_18QpqnMaEeeoYuc64YE22w" outgoing="_18Qpt3MaEeeoYuc64YE22w" regionAsInput="_18QpsHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_18Qpy3MaEeeoYuc64YE22w" name="CastExpression@588cb460.outputElement" incoming="_18QpuHMaEeeoYuc64YE22w" outgoing="_18Qpp3MaEeeoYuc64YE22w" regionAsOutput="_18QpsHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QpzHMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_18QpzXMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QpznMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qpz3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_18Qp0HMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qp0XMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_18QpmnMaEeeoYuc64YE22w">
                <argument xmi:id="_18Qp0nMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_18QpmXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qp03MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qp1HMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_18Qp1XMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_18QpnXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qp1nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qp13MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qp2HMaEeeoYuc64YE22w" name="NullCoalescingExpression@1d8d263e.operand2" incoming="_18QpnnMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qp2XMaEeeoYuc64YE22w" target="_18Qp2nMaEeeoYuc64YE22w" source="_18Qp3XMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18Qp2nMaEeeoYuc64YE22w" name="NullCoalescingExpression@1d8d263e.operand2.result" incoming="_18Qp2XMaEeeoYuc64YE22w" outgoing="_18QponMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qp23MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qp3HMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_18Qp3XMaEeeoYuc64YE22w" name="Merge(Fork()@31d862de)" incoming="_18Qpm3MaEeeoYuc64YE22w" outgoing="_18Qp2XMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qp3nMaEeeoYuc64YE22w" name="NullCoalescingExpression@1d8d263e.operand3" incoming="_18QpoHMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qp33MaEeeoYuc64YE22w" target="_18Qp4HMaEeeoYuc64YE22w" source="_18Qp5HMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18Qp4HMaEeeoYuc64YE22w" name="NullCoalescingExpression@1d8d263e.operand3.result" incoming="_18Qp33MaEeeoYuc64YE22w" outgoing="_18Qpo3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qp4XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qp4nMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Qp43MaEeeoYuc64YE22w" name="Value(*)">
                  <result xmi:id="_18Qp5HMaEeeoYuc64YE22w" name="Value(*).result" outgoing="_18Qp33MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qp5XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qp5nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qp53MaEeeoYuc64YE22w" value="*">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_18Qp6HMaEeeoYuc64YE22w" name="Initial(NullCoalescingExpression@1d8d263e)" outgoing="_18QpnHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_18Qp6XMaEeeoYuc64YE22w" name="Decision(NullCoalescingExpression@1d8d263e)" incoming="_18QpnHMaEeeoYuc64YE22w _18QpnXMaEeeoYuc64YE22w" outgoing="_18QpnnMaEeeoYuc64YE22w _18QpoHMaEeeoYuc64YE22w" decisionInputFlow="_18QpnXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_18Qp6nMaEeeoYuc64YE22w" name="Merge(NullCoalescingExpression@1d8d263e.result)" incoming="_18QponMaEeeoYuc64YE22w _18Qpo3MaEeeoYuc64YE22w" outgoing="_18QppHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Qp63MaEeeoYuc64YE22w" name="Value(*)">
                <result xmi:id="_18Qp7HMaEeeoYuc64YE22w" name="Value(*).result" outgoing="_18QppXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qp7XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qp7nMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qp73MaEeeoYuc64YE22w" value="*">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qp8HMaEeeoYuc64YE22w" name="Node(Call(&lt;))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qp8XMaEeeoYuc64YE22w" target="_18Qp8nMaEeeoYuc64YE22w" source="_18Qp_HMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18Qp8nMaEeeoYuc64YE22w" name="Output(Call(&lt;).result(result))" incoming="_18Qp8XMaEeeoYuc64YE22w" outgoing="_18QplnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qp83MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qp9HMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qp9XMaEeeoYuc64YE22w" name="Call(&lt;)">
                  <argument xmi:id="_18Qp9nMaEeeoYuc64YE22w" name="Call(&lt;).argument(x)" incoming="_18QppHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qp93MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qp-HMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18Qp-XMaEeeoYuc64YE22w" name="Call(&lt;).argument(y)" incoming="_18QppXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qp-nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qp-3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18Qp_HMaEeeoYuc64YE22w" name="Call(&lt;).result(result)" outgoing="_18Qp8XMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qp_XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qp_nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-UnlimitedNaturalFunctions-lt"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qp_3MaEeeoYuc64YE22w" name="ExpressionStatement@52538a70" incoming="_18QCHnMaEeeoYuc64YE22w" outgoing="_18QCIHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqAHMaEeeoYuc64YE22w" target="_18QqAXMaEeeoYuc64YE22w" source="_18QqB3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QqAXMaEeeoYuc64YE22w" name="Fork(e3)@29e2c66c" incoming="_18QqAHMaEeeoYuc64YE22w" outgoing="_18QCV3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqAnMaEeeoYuc64YE22w" name="RightHandSide@197789be">
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18QqA3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Person)" classifier="_18RSt3MaEeeoYuc64YE22w">
                <object xmi:id="_18QqBHMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Person).object" incoming="_18QCHXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqBXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqBnMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_18QqB3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Person).result" outgoing="_18QqAHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqCHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqCXMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqCnMaEeeoYuc64YE22w" name="ExpressionStatement@21ef5c94" incoming="_18QCIHMaEeeoYuc64YE22w" outgoing="_18QCInMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqC3MaEeeoYuc64YE22w" target="_18QqDHMaEeeoYuc64YE22w" source="_18QqEnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QqDHMaEeeoYuc64YE22w" name="Fork(e4)@2250d88e" incoming="_18QqC3MaEeeoYuc64YE22w" outgoing="_18QCWHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqDXMaEeeoYuc64YE22w" name="RightHandSide@34b40c6b">
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18QqDnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Employee)" classifier="_18R1yHMaEeeoYuc64YE22w" isDirect="true">
                <object xmi:id="_18QqD3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Employee).object" incoming="_18QCH3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqEHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqEXMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_18QqEnMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Employee).result" outgoing="_18QqC3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqE3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqFHMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqFXMaEeeoYuc64YE22w" name="ExpressionStatement@13dcb0ef" incoming="_18QCInMaEeeoYuc64YE22w" outgoing="_18QCJXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqFnMaEeeoYuc64YE22w" target="_18QqF3MaEeeoYuc64YE22w" source="_18QqI3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QqF3MaEeeoYuc64YE22w" name="Fork(e5)@6e7f420e" incoming="_18QqFnMaEeeoYuc64YE22w" outgoing="_18QCWXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqGHMaEeeoYuc64YE22w" name="RightHandSide@1ab96a2f">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqGXMaEeeoYuc64YE22w" target="_18QqJnMaEeeoYuc64YE22w" source="_18QqG3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QqGnMaEeeoYuc64YE22w" name="Value(0)">
                <result xmi:id="_18QqG3MaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18QqGXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqHHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqHXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QqHnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_18QqH3MaEeeoYuc64YE22w" name="Test(==)">
                <first xmi:id="_18QqIHMaEeeoYuc64YE22w" name="Test(==).first" incoming="_18QCIXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqIXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqInMaEeeoYuc64YE22w" value="1"/>
                </first>
                <result xmi:id="_18QqI3MaEeeoYuc64YE22w" name="Test(==).result" outgoing="_18QqFnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqJHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqJXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <second xmi:id="_18QqJnMaEeeoYuc64YE22w" name="Test(==).second" incoming="_18QqGXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqJ3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqKHMaEeeoYuc64YE22w" value="1"/>
                </second>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqKXMaEeeoYuc64YE22w" name="ExpressionStatement@34d56af7" incoming="_18QCJXMaEeeoYuc64YE22w" outgoing="_18QCJ3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqKnMaEeeoYuc64YE22w" target="_18QqK3MaEeeoYuc64YE22w" source="_18QqPHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QqK3MaEeeoYuc64YE22w" name="Fork(e6)@2a7f3e09" incoming="_18QqKnMaEeeoYuc64YE22w" outgoing="_18QCWnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqLHMaEeeoYuc64YE22w" name="RightHandSide@38e45794">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqLXMaEeeoYuc64YE22w" target="_18QqOXMaEeeoYuc64YE22w" source="_18QqMnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_18QqLnMaEeeoYuc64YE22w" name="Test(==)">
                <first xmi:id="_18QqL3MaEeeoYuc64YE22w" name="Test(==).first" incoming="_18QCI3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqMHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqMXMaEeeoYuc64YE22w" value="1"/>
                </first>
                <result xmi:id="_18QqMnMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_18QqLXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqM3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqNHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <second xmi:id="_18QqNXMaEeeoYuc64YE22w" name="Test(==).second" incoming="_18QCJHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqNnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqN3MaEeeoYuc64YE22w" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QqOHMaEeeoYuc64YE22w" name="Call(Not)">
                <argument xmi:id="_18QqOXMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_18QqLXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqOnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqO3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18QqPHMaEeeoYuc64YE22w" name="Call(Not).result(result)" outgoing="_18QqKnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqPXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqPnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqP3MaEeeoYuc64YE22w" name="ExpressionStatement@27fa6e40" incoming="_18QCJ3MaEeeoYuc64YE22w" outgoing="_18QCKXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqQHMaEeeoYuc64YE22w" target="_18QqQXMaEeeoYuc64YE22w" source="_18QqWHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QqQXMaEeeoYuc64YE22w" name="Fork(e7)@4dc2e9b3" incoming="_18QqQHMaEeeoYuc64YE22w" outgoing="_18QCW3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqQnMaEeeoYuc64YE22w" name="RightHandSide@38e0f707">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqQ3MaEeeoYuc64YE22w" target="_18QqVXMaEeeoYuc64YE22w" source="_18QqS3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QqRHMaEeeoYuc64YE22w" target="_18QqVHMaEeeoYuc64YE22w" source="_18QqRXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqRXMaEeeoYuc64YE22w" name="Operands(EqualityExpression@38e0f707)" outgoing="_18QqRHMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqRnMaEeeoYuc64YE22w" target="_18QqSHMaEeeoYuc64YE22w" source="_18QqTnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18QqR3MaEeeoYuc64YE22w" name="Read(name)" structuralFeature="_18R10HMaEeeoYuc64YE22w">
                  <object xmi:id="_18QqSHMaEeeoYuc64YE22w" name="Read(name).object" incoming="_18QqRnMaEeeoYuc64YE22w" type="_18R1yHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqSXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqSnMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18QqS3MaEeeoYuc64YE22w" name="Read(name).result" outgoing="_18QqQ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqTHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqTXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18QqTnMaEeeoYuc64YE22w" name="Fork(Fork(employee)@b242e8b)" incoming="_18QCJnMaEeeoYuc64YE22w" outgoing="_18QqRnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QqT3MaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_18QqUHMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqUXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqUnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_18QqU3MaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QqVHMaEeeoYuc64YE22w" name="Call(IsEmpty)" incoming="_18QqRHMaEeeoYuc64YE22w">
                <argument xmi:id="_18QqVXMaEeeoYuc64YE22w" name="Call(IsEmpty).argument(seq)" incoming="_18QqQ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqVnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqV3MaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_18QqWHMaEeeoYuc64YE22w" name="Call(IsEmpty).result()" outgoing="_18QqQHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqWXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqWnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqW3MaEeeoYuc64YE22w" name="ExpressionStatement@50f9da17" incoming="_18QCKXMaEeeoYuc64YE22w" outgoing="_18QCKnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqXHMaEeeoYuc64YE22w" target="_18QqXXMaEeeoYuc64YE22w" source="_18QqdHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QqXXMaEeeoYuc64YE22w" name="Fork(e8)@fc30df2" incoming="_18QqXHMaEeeoYuc64YE22w" outgoing="_18QCXHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqXnMaEeeoYuc64YE22w" name="RightHandSide@49f1c668">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqX3MaEeeoYuc64YE22w" target="_18QqcXMaEeeoYuc64YE22w" source="_18QqbHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QqYHMaEeeoYuc64YE22w" target="_18QqcHMaEeeoYuc64YE22w" source="_18QqYXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqYXMaEeeoYuc64YE22w" name="Operands(EqualityExpression@49f1c668)" outgoing="_18QqYHMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqYnMaEeeoYuc64YE22w" target="_18QqaXMaEeeoYuc64YE22w" source="_18Qqb3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QqY3MaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_18QqZHMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqZXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqZnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_18QqZ3MaEeeoYuc64YE22w"/>
                </node>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18QqaHMaEeeoYuc64YE22w" name="Read(name)" structuralFeature="_18R10HMaEeeoYuc64YE22w">
                  <object xmi:id="_18QqaXMaEeeoYuc64YE22w" name="Read(name).object" incoming="_18QqYnMaEeeoYuc64YE22w" type="_18R1yHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqanMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qqa3MaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18QqbHMaEeeoYuc64YE22w" name="Read(name).result" outgoing="_18QqX3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqbXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqbnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18Qqb3MaEeeoYuc64YE22w" name="Fork(Fork(employee)@b242e8b)" incoming="_18QCKHMaEeeoYuc64YE22w" outgoing="_18QqYnMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QqcHMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_18QqYHMaEeeoYuc64YE22w">
                <argument xmi:id="_18QqcXMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_18QqX3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqcnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qqc3MaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_18QqdHMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_18QqXHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqdXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqdnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qqd3MaEeeoYuc64YE22w" name="ExpressionStatement@76c14a81" incoming="_18QCKnMaEeeoYuc64YE22w" outgoing="_18QCMHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqeHMaEeeoYuc64YE22w" target="_18QqeXMaEeeoYuc64YE22w" source="_18QqiHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QqeXMaEeeoYuc64YE22w" name="Fork(e9)@d5c7104" incoming="_18QqeHMaEeeoYuc64YE22w" outgoing="_18QCXXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqenMaEeeoYuc64YE22w" name="RightHandSide@c28234f">
              <edge xmi:type="uml:ControlFlow" xmi:id="_18Qqe3MaEeeoYuc64YE22w" target="_18Qqh3MaEeeoYuc64YE22w" source="_18QqfHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqfHMaEeeoYuc64YE22w" name="Operands(EqualityExpression@c28234f)" outgoing="_18Qqe3MaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QqfXMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_18QqfnMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qqf3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqgHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_18QqgXMaEeeoYuc64YE22w"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QqgnMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_18Qqg3MaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqhHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqhXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_18QqhnMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Qqh3MaEeeoYuc64YE22w" name="Value(true)" incoming="_18Qqe3MaEeeoYuc64YE22w">
                <result xmi:id="_18QqiHMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18QqeHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqiXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqinMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_18Qqi3MaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqjHMaEeeoYuc64YE22w" name="ExpressionStatement@31b2ea1c" incoming="_18QCMHMaEeeoYuc64YE22w" outgoing="_18QCM3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqjXMaEeeoYuc64YE22w" target="_18QqjnMaEeeoYuc64YE22w" source="_18QqwnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QqjnMaEeeoYuc64YE22w" name="Fork(f)@1a6693e3" incoming="_18QqjXMaEeeoYuc64YE22w" outgoing="_18QCPnMaEeeoYuc64YE22w _18QCQHMaEeeoYuc64YE22w _18QCXnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qqj3MaEeeoYuc64YE22w" name="RightHandSide@54fa8e25">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqkHMaEeeoYuc64YE22w" target="_18Qqt3MaEeeoYuc64YE22w" source="_18QqpHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqkXMaEeeoYuc64YE22w" target="_18QqxnMaEeeoYuc64YE22w" source="_18QqlXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqknMaEeeoYuc64YE22w" target="_18QqyXMaEeeoYuc64YE22w" source="_18Qqs3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qqk3MaEeeoYuc64YE22w" name="Node(Call(&lt;))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqlHMaEeeoYuc64YE22w" target="_18QqlXMaEeeoYuc64YE22w" source="_18Qqn3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QqlXMaEeeoYuc64YE22w" name="Output(Call(&lt;).result(result))" incoming="_18QqlHMaEeeoYuc64YE22w" outgoing="_18QqkXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqlnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qql3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QqmHMaEeeoYuc64YE22w" name="Call(&lt;)">
                  <argument xmi:id="_18QqmXMaEeeoYuc64YE22w" name="Call(&lt;).argument(x)" incoming="_18QCK3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqmnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qqm3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QqnHMaEeeoYuc64YE22w" name="Call(&lt;).argument(y)" incoming="_18QCLHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqnXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqnnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18Qqn3MaEeeoYuc64YE22w" name="Call(&lt;).result(result)" outgoing="_18QqlHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqoHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqoXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-lt"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqonMaEeeoYuc64YE22w" name="Node(Call(>))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qqo3MaEeeoYuc64YE22w" target="_18QqpHMaEeeoYuc64YE22w" source="_18QqrnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QqpHMaEeeoYuc64YE22w" name="Output(Call(>).result(result))" incoming="_18Qqo3MaEeeoYuc64YE22w" outgoing="_18QqkHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqpXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqpnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qqp3MaEeeoYuc64YE22w" name="Call(>)">
                  <argument xmi:id="_18QqqHMaEeeoYuc64YE22w" name="Call(>).argument(x)" incoming="_18QCLXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqqXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqqnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18Qqq3MaEeeoYuc64YE22w" name="Call(>).argument(y)" incoming="_18QCLnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqrHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqrXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QqrnMaEeeoYuc64YE22w" name="Call(>).result(result)" outgoing="_18Qqo3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qqr3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqsHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqsXMaEeeoYuc64YE22w" name="Node(Call(Or))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqsnMaEeeoYuc64YE22w" target="_18Qqs3MaEeeoYuc64YE22w" source="_18QqvXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18Qqs3MaEeeoYuc64YE22w" name="Output(Call(Or).result(result))" incoming="_18QqsnMaEeeoYuc64YE22w" outgoing="_18QqknMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqtHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqtXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QqtnMaEeeoYuc64YE22w" name="Call(Or)">
                  <argument xmi:id="_18Qqt3MaEeeoYuc64YE22w" name="Call(Or).argument(x)" incoming="_18QqkHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QquHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QquXMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QqunMaEeeoYuc64YE22w" name="Call(Or).argument(y)" incoming="_18QCL3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qqu3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqvHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QqvXMaEeeoYuc64YE22w" name="Call(Or).result(result)" outgoing="_18QqsnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqvnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qqv3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QqwHMaEeeoYuc64YE22w" name="Node(Call(And))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QqwXMaEeeoYuc64YE22w" target="_18QqwnMaEeeoYuc64YE22w" source="_18QqzHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QqwnMaEeeoYuc64YE22w" name="Output(Call(And).result(result))" incoming="_18QqwXMaEeeoYuc64YE22w" outgoing="_18QqjXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qqw3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqxHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QqxXMaEeeoYuc64YE22w" name="Call(And)">
                  <argument xmi:id="_18QqxnMaEeeoYuc64YE22w" name="Call(And).argument(x)" incoming="_18QqkXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qqx3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqyHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18QqyXMaEeeoYuc64YE22w" name="Call(And).argument(y)" incoming="_18QqknMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqynMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qqy3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18QqzHMaEeeoYuc64YE22w" name="Call(And).result(result)" outgoing="_18QqwXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QqzXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QqznMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-And"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qqz3MaEeeoYuc64YE22w" name="ExpressionStatement@fee4396" incoming="_18QCM3MaEeeoYuc64YE22w" outgoing="_18QCNnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qq0HMaEeeoYuc64YE22w" target="_18Qq0XMaEeeoYuc64YE22w" source="_18QrFnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18Qq0XMaEeeoYuc64YE22w" name="Fork(f1)@4f3686d6" incoming="_18Qq0HMaEeeoYuc64YE22w" outgoing="_18QCX3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qq0nMaEeeoYuc64YE22w" name="RightHandSide@3760ab0">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qq03MaEeeoYuc64YE22w" target="_18Qq6nMaEeeoYuc64YE22w" source="_18Qq3XMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18Qq1HMaEeeoYuc64YE22w" target="_18QrFXMaEeeoYuc64YE22w" source="_18QrFHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qq1XMaEeeoYuc64YE22w" target="_18QrFXMaEeeoYuc64YE22w" source="_18Qq43MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18Qq1nMaEeeoYuc64YE22w" target="_18Qq8HMaEeeoYuc64YE22w" source="_18QrFXMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18Qq13MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18Qq2HMaEeeoYuc64YE22w" target="_18QrCnMaEeeoYuc64YE22w" source="_18QrFXMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18Qq2XMaEeeoYuc64YE22w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qq2nMaEeeoYuc64YE22w" target="_18QrFnMaEeeoYuc64YE22w" source="_18Qq83MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qq23MaEeeoYuc64YE22w" target="_18QrFnMaEeeoYuc64YE22w" source="_18QrDHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Qq3HMaEeeoYuc64YE22w" name="Value(0)">
                <result xmi:id="_18Qq3XMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18Qq03MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qq3nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qq33MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18Qq4HMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qq4XMaEeeoYuc64YE22w" name="Node(Call(>))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qq4nMaEeeoYuc64YE22w" target="_18Qq43MaEeeoYuc64YE22w" source="_18Qq7XMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18Qq43MaEeeoYuc64YE22w" name="Output(Call(>).result(result))" incoming="_18Qq4nMaEeeoYuc64YE22w" outgoing="_18Qq1XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qq5HMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qq5XMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Qq5nMaEeeoYuc64YE22w" name="Call(>)">
                  <argument xmi:id="_18Qq53MaEeeoYuc64YE22w" name="Call(>).argument(x)" incoming="_18QCMXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qq6HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qq6XMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18Qq6nMaEeeoYuc64YE22w" name="Call(>).argument(y)" incoming="_18Qq03MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qq63MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qq7HMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18Qq7XMaEeeoYuc64YE22w" name="Call(>).result(result)" outgoing="_18Qq4nMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qq7nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qq73MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qq8HMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@32b44a5d.operand2" incoming="_18Qq1nMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qq8XMaEeeoYuc64YE22w" target="_18QrAXMaEeeoYuc64YE22w" source="_18Qq93MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qq8nMaEeeoYuc64YE22w" target="_18Qq83MaEeeoYuc64YE22w" source="_18Qq_XMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18Qq83MaEeeoYuc64YE22w" name="ConditionalLogicalExpression@32b44a5d.operand2.result" incoming="_18Qq8nMaEeeoYuc64YE22w" outgoing="_18Qq2nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qq9HMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qq9XMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Qq9nMaEeeoYuc64YE22w" name="Value(2)">
                  <result xmi:id="_18Qq93MaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18Qq8XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qq-HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qq-XMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18Qq-nMaEeeoYuc64YE22w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qq-3MaEeeoYuc64YE22w" name="Node(Call(&lt;))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qq_HMaEeeoYuc64YE22w" target="_18Qq_XMaEeeoYuc64YE22w" source="_18QrB3MaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_18Qq_XMaEeeoYuc64YE22w" name="Output(Call(&lt;).result(result))" incoming="_18Qq_HMaEeeoYuc64YE22w" outgoing="_18Qq8nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qq_nMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qq_3MaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QrAHMaEeeoYuc64YE22w" name="Call(&lt;)">
                    <argument xmi:id="_18QrAXMaEeeoYuc64YE22w" name="Call(&lt;).argument(x)" incoming="_18Qq8XMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrAnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrA3MaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <argument xmi:id="_18QrBHMaEeeoYuc64YE22w" name="Call(&lt;).argument(y)" incoming="_18QCMnMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrBXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrBnMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_18QrB3MaEeeoYuc64YE22w" name="Call(&lt;).result(result)" outgoing="_18Qq_HMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrCHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrCXMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-lt"/>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QrCnMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@32b44a5d.operand3" incoming="_18Qq2HMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrC3MaEeeoYuc64YE22w" target="_18QrDHMaEeeoYuc64YE22w" source="_18QrEHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QrDHMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@32b44a5d.operand3.result" incoming="_18QrC3MaEeeoYuc64YE22w" outgoing="_18Qq23MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrDXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrDnMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QrD3MaEeeoYuc64YE22w" name="Value(false)">
                  <result xmi:id="_18QrEHMaEeeoYuc64YE22w" name="Value(false).result" outgoing="_18QrC3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrEXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrEnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_18QrE3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_18QrFHMaEeeoYuc64YE22w" name="Initial(ConditionalLogicalExpression@32b44a5d)" outgoing="_18Qq1HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_18QrFXMaEeeoYuc64YE22w" name="Decision(ConditionalLogicalExpression@32b44a5d)" incoming="_18Qq1HMaEeeoYuc64YE22w _18Qq1XMaEeeoYuc64YE22w" outgoing="_18Qq1nMaEeeoYuc64YE22w _18Qq2HMaEeeoYuc64YE22w" decisionInputFlow="_18Qq1XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_18QrFnMaEeeoYuc64YE22w" name="Merge(ConditionalLogicalExpression@32b44a5d.result)" incoming="_18Qq2nMaEeeoYuc64YE22w _18Qq23MaEeeoYuc64YE22w" outgoing="_18Qq0HMaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QrF3MaEeeoYuc64YE22w" name="ExpressionStatement@17bd3348" incoming="_18QCNnMaEeeoYuc64YE22w" outgoing="_18QCN3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrGHMaEeeoYuc64YE22w" target="_18QrGXMaEeeoYuc64YE22w" source="_18QrWXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18QrGXMaEeeoYuc64YE22w" name="Fork(f2)@3048f547" incoming="_18QrGHMaEeeoYuc64YE22w" outgoing="_18QCYHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QrGnMaEeeoYuc64YE22w" name="RightHandSide@58f73cce">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrG3MaEeeoYuc64YE22w" target="_18QrMHMaEeeoYuc64YE22w" source="_18QrJXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QrHHMaEeeoYuc64YE22w" target="_18QrWHMaEeeoYuc64YE22w" source="_18QrV3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrHXMaEeeoYuc64YE22w" target="_18QrWHMaEeeoYuc64YE22w" source="_18QrLXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QrHnMaEeeoYuc64YE22w" target="_18QrM3MaEeeoYuc64YE22w" source="_18QrWHMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QrH3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18QrIHMaEeeoYuc64YE22w" target="_18QrPXMaEeeoYuc64YE22w" source="_18QrWHMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QrIXMaEeeoYuc64YE22w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrInMaEeeoYuc64YE22w" target="_18QrWXMaEeeoYuc64YE22w" source="_18QrNXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrI3MaEeeoYuc64YE22w" target="_18QrWXMaEeeoYuc64YE22w" source="_18QrQHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QrJHMaEeeoYuc64YE22w" name="Value(0)">
                <result xmi:id="_18QrJXMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18QrG3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrJnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrJ3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18QrKHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_18QrKXMaEeeoYuc64YE22w" name="Test(==)">
                <first xmi:id="_18QrKnMaEeeoYuc64YE22w" name="Test(==).first" incoming="_18QCNHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrK3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrLHMaEeeoYuc64YE22w" value="1"/>
                </first>
                <result xmi:id="_18QrLXMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_18QrHXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrLnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrL3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <second xmi:id="_18QrMHMaEeeoYuc64YE22w" name="Test(==).second" incoming="_18QrG3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrMXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrMnMaEeeoYuc64YE22w" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QrM3MaEeeoYuc64YE22w" name="ConditionalLogicalExpression@4e7f12db.operand2" incoming="_18QrHnMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrNHMaEeeoYuc64YE22w" target="_18QrNXMaEeeoYuc64YE22w" source="_18QrOXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QrNXMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@4e7f12db.operand2.result" incoming="_18QrNHMaEeeoYuc64YE22w" outgoing="_18QrInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrNnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrN3MaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QrOHMaEeeoYuc64YE22w" name="Value(true)">
                  <result xmi:id="_18QrOXMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18QrNHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrOnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrO3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_18QrPHMaEeeoYuc64YE22w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QrPXMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@4e7f12db.operand3" incoming="_18QrIHMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrPnMaEeeoYuc64YE22w" target="_18QrTnMaEeeoYuc64YE22w" source="_18QrRHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrP3MaEeeoYuc64YE22w" target="_18QrQHMaEeeoYuc64YE22w" source="_18QrSnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18QrQHMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@4e7f12db.operand3.result" incoming="_18QrP3MaEeeoYuc64YE22w" outgoing="_18QrI3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrQXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrQnMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QrQ3MaEeeoYuc64YE22w" name="Value(2)">
                  <result xmi:id="_18QrRHMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18QrPnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrRXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrRnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18QrR3MaEeeoYuc64YE22w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QrSHMaEeeoYuc64YE22w" name="Node(Call(>=))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrSXMaEeeoYuc64YE22w" target="_18QrSnMaEeeoYuc64YE22w" source="_18QrVHMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_18QrSnMaEeeoYuc64YE22w" name="Output(Call(>=).result(result))" incoming="_18QrSXMaEeeoYuc64YE22w" outgoing="_18QrP3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrS3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrTHMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_18QrTXMaEeeoYuc64YE22w" name="Call(>=)">
                    <argument xmi:id="_18QrTnMaEeeoYuc64YE22w" name="Call(>=).argument(x)" incoming="_18QrPnMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrT3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrUHMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <argument xmi:id="_18QrUXMaEeeoYuc64YE22w" name="Call(>=).argument(y)" incoming="_18QCNXMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrUnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrU3MaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_18QrVHMaEeeoYuc64YE22w" name="Call(>=).result(result)" outgoing="_18QrSXMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrVXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrVnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ge"/>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_18QrV3MaEeeoYuc64YE22w" name="Initial(ConditionalLogicalExpression@4e7f12db)" outgoing="_18QrHHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_18QrWHMaEeeoYuc64YE22w" name="Decision(ConditionalLogicalExpression@4e7f12db)" incoming="_18QrHHMaEeeoYuc64YE22w _18QrHXMaEeeoYuc64YE22w" outgoing="_18QrHnMaEeeoYuc64YE22w _18QrIHMaEeeoYuc64YE22w" decisionInputFlow="_18QrHXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_18QrWXMaEeeoYuc64YE22w" name="Merge(ConditionalLogicalExpression@4e7f12db.result)" incoming="_18QrInMaEeeoYuc64YE22w _18QrI3MaEeeoYuc64YE22w" outgoing="_18QrGHMaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QrWnMaEeeoYuc64YE22w" name="ExpressionStatement@6df0a810" incoming="_18QCN3MaEeeoYuc64YE22w" outgoing="_18QCOXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ControlFlow" xmi:id="_18QrW3MaEeeoYuc64YE22w" target="_18ROj3MaEeeoYuc64YE22w" source="_18ROjnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrXHMaEeeoYuc64YE22w" target="_18ROj3MaEeeoYuc64YE22w" source="_18QrZ3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18QrXXMaEeeoYuc64YE22w" target="_18Qra3MaEeeoYuc64YE22w" source="_18ROj3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QrXnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18QrX3MaEeeoYuc64YE22w" target="_18QreHMaEeeoYuc64YE22w" source="_18ROj3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18QrYHMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrYXMaEeeoYuc64YE22w" target="_18ROkHMaEeeoYuc64YE22w" source="_18QrbXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrYnMaEeeoYuc64YE22w" target="_18ROkHMaEeeoYuc64YE22w" source="_18QrfnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrY3MaEeeoYuc64YE22w" target="_18ROkXMaEeeoYuc64YE22w" source="_18QrcHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrZHMaEeeoYuc64YE22w" target="_18ROkXMaEeeoYuc64YE22w" source="_18QrgXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrZXMaEeeoYuc64YE22w" target="_18ROknMaEeeoYuc64YE22w" source="_18ROkXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QrZnMaEeeoYuc64YE22w" name="Value(false)">
              <result xmi:id="_18QrZ3MaEeeoYuc64YE22w" name="Value(false).result" outgoing="_18QrXHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QraHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QraXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_18QranMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Qra3MaEeeoYuc64YE22w" name="ConditionalLogicalExpression@27030189.operand2" incoming="_18QrXXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrbHMaEeeoYuc64YE22w" target="_18QrbXMaEeeoYuc64YE22w" source="_18QrdHMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18QrbXMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@27030189.operand2.result" incoming="_18QrbHMaEeeoYuc64YE22w" outgoing="_18QrYXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrbnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qrb3MaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_18QrcHMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@27030189.operand2.output(k)" outgoing="_18QrY3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrcXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrcnMaEeeoYuc64YE22w"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Qrc3MaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_18QrdHMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18QrbHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrdXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrdnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_18Qrd3MaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QreHMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@27030189.operand3" incoming="_18QrX3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QreXMaEeeoYuc64YE22w" target="_18QrhHMaEeeoYuc64YE22w" source="_18Qrh3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrenMaEeeoYuc64YE22w" target="_18ROhXMaEeeoYuc64YE22w" source="_18QrhHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Qre3MaEeeoYuc64YE22w" target="_18ROiHMaEeeoYuc64YE22w" source="_18QrjHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrfHMaEeeoYuc64YE22w" target="_18QrfnMaEeeoYuc64YE22w" source="_18ROgXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18QrfXMaEeeoYuc64YE22w" target="_18QrgXMaEeeoYuc64YE22w" source="_18QrhHMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18QrfnMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@27030189.operand3.result" incoming="_18QrfHMaEeeoYuc64YE22w" outgoing="_18QrYnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Qrf3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrgHMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_18QrgXMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@27030189.operand3.output(k)" incoming="_18QrfXMaEeeoYuc64YE22w" outgoing="_18QrZHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrgnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Qrg3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ForkNode" xmi:id="_18QrhHMaEeeoYuc64YE22w" name="Fork(k)@1d4738db" incoming="_18QreXMaEeeoYuc64YE22w" outgoing="_18QrenMaEeeoYuc64YE22w _18QrfXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QrhXMaEeeoYuc64YE22w" name="RightHandSide@662e04f3">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18QrhnMaEeeoYuc64YE22w" name="Value(1)">
                  <result xmi:id="_18Qrh3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18QreXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QriHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QriXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18QrinMaEeeoYuc64YE22w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Qri3MaEeeoYuc64YE22w" name="Value(2)">
                <result xmi:id="_18QrjHMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18Qre3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18QrjXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18QrjnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18Qrj3MaEeeoYuc64YE22w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18QrkHMaEeeoYuc64YE22w" name="Node(Call(>))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROgHMaEeeoYuc64YE22w" target="_18ROgXMaEeeoYuc64YE22w" source="_18ROi3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18ROgXMaEeeoYuc64YE22w" name="Output(Call(>).result(result))" incoming="_18ROgHMaEeeoYuc64YE22w" outgoing="_18QrfHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ROgnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ROg3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18ROhHMaEeeoYuc64YE22w" name="Call(>)">
                  <argument xmi:id="_18ROhXMaEeeoYuc64YE22w" name="Call(>).argument(x)" incoming="_18QrenMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ROhnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ROh3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18ROiHMaEeeoYuc64YE22w" name="Call(>).argument(y)" incoming="_18Qre3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ROiXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ROinMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18ROi3MaEeeoYuc64YE22w" name="Call(>).result(result)" outgoing="_18ROgHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ROjHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ROjXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18ROjnMaEeeoYuc64YE22w" name="Initial(ConditionalLogicalExpression@27030189)" outgoing="_18QrW3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18ROj3MaEeeoYuc64YE22w" name="Decision(ConditionalLogicalExpression@27030189)" incoming="_18QrW3MaEeeoYuc64YE22w _18QrXHMaEeeoYuc64YE22w" outgoing="_18QrXXMaEeeoYuc64YE22w _18QrX3MaEeeoYuc64YE22w" decisionInputFlow="_18QrXHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_18ROkHMaEeeoYuc64YE22w" name="Merge(ConditionalLogicalExpression@27030189.result)" incoming="_18QrYXMaEeeoYuc64YE22w _18QrYnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_18ROkXMaEeeoYuc64YE22w" name="Merge(ConditionalLogicalExpression@27030189.k)" incoming="_18QrY3MaEeeoYuc64YE22w _18QrZHMaEeeoYuc64YE22w" outgoing="_18QrZXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18ROknMaEeeoYuc64YE22w" name="Fork(Merge(ConditionalLogicalExpression@27030189.k))" incoming="_18QrZXMaEeeoYuc64YE22w" outgoing="_18QCOHMaEeeoYuc64YE22w _18QCOnMaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18ROk3MaEeeoYuc64YE22w" name="ExpressionStatement@6c199c1d" incoming="_18QCOXMaEeeoYuc64YE22w" outgoing="_18QCO3MaEeeoYuc64YE22w">
            <node xmi:type="uml:ForkNode" xmi:id="_18ROlHMaEeeoYuc64YE22w" name="Fork(k1)@56fa1217" incoming="_18QCOHMaEeeoYuc64YE22w" outgoing="_18QCZXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18ROlXMaEeeoYuc64YE22w" name="RightHandSide@1316fb98"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18ROlnMaEeeoYuc64YE22w" name="ExpressionStatement@2fc19130" incoming="_18QCO3MaEeeoYuc64YE22w" outgoing="_18QCPXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ControlFlow" xmi:id="_18ROl3MaEeeoYuc64YE22w" target="_18RO5XMaEeeoYuc64YE22w" source="_18RO5HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROmHMaEeeoYuc64YE22w" target="_18RO5XMaEeeoYuc64YE22w" source="_18ROo3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18ROmXMaEeeoYuc64YE22w" target="_18ROp3MaEeeoYuc64YE22w" source="_18RO5XMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18ROmnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18ROm3MaEeeoYuc64YE22w" target="_18ROznMaEeeoYuc64YE22w" source="_18RO5XMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18ROnHMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROnXMaEeeoYuc64YE22w" target="_18RO5nMaEeeoYuc64YE22w" source="_18ROrXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROnnMaEeeoYuc64YE22w" target="_18RO5nMaEeeoYuc64YE22w" source="_18RO0XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROn3MaEeeoYuc64YE22w" target="_18RO53MaEeeoYuc64YE22w" source="_18ROsHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROoHMaEeeoYuc64YE22w" target="_18RO53MaEeeoYuc64YE22w" source="_18RO1HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROoXMaEeeoYuc64YE22w" target="_18RO6HMaEeeoYuc64YE22w" source="_18RO53MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18ROonMaEeeoYuc64YE22w" name="Value(false)">
              <result xmi:id="_18ROo3MaEeeoYuc64YE22w" name="Value(false).result" outgoing="_18ROmHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ROpHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ROpXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_18ROpnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18ROp3MaEeeoYuc64YE22w" name="ConditionalLogicalExpression@b2f656b.operand2" incoming="_18ROmXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROqHMaEeeoYuc64YE22w" target="_18ROs3MaEeeoYuc64YE22w" source="_18ROtnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROqXMaEeeoYuc64YE22w" target="_18ROxXMaEeeoYuc64YE22w" source="_18ROs3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROqnMaEeeoYuc64YE22w" target="_18ROyHMaEeeoYuc64YE22w" source="_18ROu3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROq3MaEeeoYuc64YE22w" target="_18ROrXMaEeeoYuc64YE22w" source="_18ROwXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROrHMaEeeoYuc64YE22w" target="_18ROsHMaEeeoYuc64YE22w" source="_18ROs3MaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18ROrXMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@b2f656b.operand2.result" incoming="_18ROq3MaEeeoYuc64YE22w" outgoing="_18ROnXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ROrnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ROr3MaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_18ROsHMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@b2f656b.operand2.output(k)" incoming="_18ROrHMaEeeoYuc64YE22w" outgoing="_18ROn3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ROsXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ROsnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ForkNode" xmi:id="_18ROs3MaEeeoYuc64YE22w" name="Fork(k)@7af6f97c" incoming="_18ROqHMaEeeoYuc64YE22w" outgoing="_18ROqXMaEeeoYuc64YE22w _18ROrHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18ROtHMaEeeoYuc64YE22w" name="RightHandSide@67ce31a5">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18ROtXMaEeeoYuc64YE22w" name="Value(2)">
                  <result xmi:id="_18ROtnMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18ROqHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ROt3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ROuHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18ROuXMaEeeoYuc64YE22w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18ROunMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_18ROu3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18ROqnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ROvHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ROvXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18ROvnMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18ROv3MaEeeoYuc64YE22w" name="Node(Call(>))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROwHMaEeeoYuc64YE22w" target="_18ROwXMaEeeoYuc64YE22w" source="_18ROy3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18ROwXMaEeeoYuc64YE22w" name="Output(Call(>).result(result))" incoming="_18ROwHMaEeeoYuc64YE22w" outgoing="_18ROq3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ROwnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ROw3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18ROxHMaEeeoYuc64YE22w" name="Call(>)">
                  <argument xmi:id="_18ROxXMaEeeoYuc64YE22w" name="Call(>).argument(x)" incoming="_18ROqXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ROxnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ROx3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18ROyHMaEeeoYuc64YE22w" name="Call(>).argument(y)" incoming="_18ROqnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ROyXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ROynMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18ROy3MaEeeoYuc64YE22w" name="Call(>).result(result)" outgoing="_18ROwHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ROzHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ROzXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18ROznMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@b2f656b.operand3" incoming="_18ROm3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18ROz3MaEeeoYuc64YE22w" target="_18RO0XMaEeeoYuc64YE22w" source="_18RO2HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RO0HMaEeeoYuc64YE22w" target="_18RO1HMaEeeoYuc64YE22w" source="_18RO4XMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18RO0XMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@b2f656b.operand3.result" incoming="_18ROz3MaEeeoYuc64YE22w" outgoing="_18ROnnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RO0nMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RO03MaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_18RO1HMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@b2f656b.operand3.output(k)" incoming="_18RO0HMaEeeoYuc64YE22w" outgoing="_18ROoHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RO1XMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RO1nMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RO13MaEeeoYuc64YE22w" name="Value(false)">
                <result xmi:id="_18RO2HMaEeeoYuc64YE22w" name="Value(false).result" outgoing="_18ROz3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RO2XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RO2nMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_18RO23MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RO3HMaEeeoYuc64YE22w" name="Passthru(k)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RO3XMaEeeoYuc64YE22w" target="_18RO4XMaEeeoYuc64YE22w" source="_18RO3nMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_18RO3nMaEeeoYuc64YE22w" name="Passthru(k).input" incoming="_18QCOnMaEeeoYuc64YE22w" outgoing="_18RO3XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RO33MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RO4HMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_18RO4XMaEeeoYuc64YE22w" name="Passthru(k).output" incoming="_18RO3XMaEeeoYuc64YE22w" outgoing="_18RO0HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RO4nMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RO43MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18RO5HMaEeeoYuc64YE22w" name="Initial(ConditionalLogicalExpression@b2f656b)" outgoing="_18ROl3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18RO5XMaEeeoYuc64YE22w" name="Decision(ConditionalLogicalExpression@b2f656b)" incoming="_18ROl3MaEeeoYuc64YE22w _18ROmHMaEeeoYuc64YE22w" outgoing="_18ROmXMaEeeoYuc64YE22w _18ROm3MaEeeoYuc64YE22w" decisionInputFlow="_18ROmHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_18RO5nMaEeeoYuc64YE22w" name="Merge(ConditionalLogicalExpression@b2f656b.result)" incoming="_18ROnXMaEeeoYuc64YE22w _18ROnnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_18RO53MaEeeoYuc64YE22w" name="Merge(ConditionalLogicalExpression@b2f656b.k)" incoming="_18ROn3MaEeeoYuc64YE22w _18ROoHMaEeeoYuc64YE22w" outgoing="_18ROoXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18RO6HMaEeeoYuc64YE22w" name="Fork(Merge(ConditionalLogicalExpression@b2f656b.k))" incoming="_18ROoXMaEeeoYuc64YE22w" outgoing="_18QCPHMaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RO6XMaEeeoYuc64YE22w" name="ExpressionStatement@2fba18e9" incoming="_18QCPXMaEeeoYuc64YE22w" outgoing="_18QCP3MaEeeoYuc64YE22w">
            <node xmi:type="uml:ForkNode" xmi:id="_18RO6nMaEeeoYuc64YE22w" name="Fork(k2)@56c5d5" incoming="_18QCPHMaEeeoYuc64YE22w" outgoing="_18QCZnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RO63MaEeeoYuc64YE22w" name="RightHandSide@7599720e"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RO7HMaEeeoYuc64YE22w" name="ExpressionStatement@715c2266" incoming="_18QCP3MaEeeoYuc64YE22w" outgoing="_18QCQXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RO7XMaEeeoYuc64YE22w" target="_18RO7nMaEeeoYuc64YE22w" source="_18RPFXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18RO7nMaEeeoYuc64YE22w" name="Fork(x)@5958298b" incoming="_18RO7XMaEeeoYuc64YE22w" outgoing="_18QCYXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RO73MaEeeoYuc64YE22w" name="RightHandSide@4f6b2741">
              <edge xmi:type="uml:ControlFlow" xmi:id="_18RO8HMaEeeoYuc64YE22w" target="_18RPFHMaEeeoYuc64YE22w" source="_18RPE3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RO8XMaEeeoYuc64YE22w" target="_18RPFHMaEeeoYuc64YE22w" source="_18RO_HMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18RO8nMaEeeoYuc64YE22w" target="_18RO_3MaEeeoYuc64YE22w" source="_18RPFHMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RO83MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18RO9HMaEeeoYuc64YE22w" target="_18RPCXMaEeeoYuc64YE22w" source="_18RPFHMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RO9XMaEeeoYuc64YE22w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RO9nMaEeeoYuc64YE22w" target="_18RPFXMaEeeoYuc64YE22w" source="_18RPAXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RO93MaEeeoYuc64YE22w" target="_18RPFXMaEeeoYuc64YE22w" source="_18RPC3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RO-HMaEeeoYuc64YE22w" name="Call(Not)">
                <argument xmi:id="_18RO-XMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_18QCPnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RO-nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RO-3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18RO_HMaEeeoYuc64YE22w" name="Call(Not).result(result)" outgoing="_18RO8XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RO_XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RO_nMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RO_3MaEeeoYuc64YE22w" name="ConditionalTestExpression@4f6b2741.operand2" incoming="_18RO8nMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPAHMaEeeoYuc64YE22w" target="_18RPAXMaEeeoYuc64YE22w" source="_18RPBXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18RPAXMaEeeoYuc64YE22w" name="ConditionalTestExpression@4f6b2741.operand2.result" incoming="_18RPAHMaEeeoYuc64YE22w" outgoing="_18RO9nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPAnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPA3MaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RPBHMaEeeoYuc64YE22w" name="Value(1)">
                  <result xmi:id="_18RPBXMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18RPAHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPBnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPB3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18RPCHMaEeeoYuc64YE22w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPCXMaEeeoYuc64YE22w" name="ConditionalTestExpression@4f6b2741.operand3" incoming="_18RO9HMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPCnMaEeeoYuc64YE22w" target="_18RPC3MaEeeoYuc64YE22w" source="_18RPD3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18RPC3MaEeeoYuc64YE22w" name="ConditionalTestExpression@4f6b2741.operand3.result" incoming="_18RPCnMaEeeoYuc64YE22w" outgoing="_18RO93MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPDHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPDXMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RPDnMaEeeoYuc64YE22w" name="Value(2)">
                  <result xmi:id="_18RPD3MaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18RPCnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPEHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPEXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18RPEnMaEeeoYuc64YE22w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_18RPE3MaEeeoYuc64YE22w" name="Initial(ConditionalTestExpression@4f6b2741)" outgoing="_18RO8HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_18RPFHMaEeeoYuc64YE22w" name="Decision(ConditionalTestExpression@4f6b2741)" incoming="_18RO8HMaEeeoYuc64YE22w _18RO8XMaEeeoYuc64YE22w" outgoing="_18RO8nMaEeeoYuc64YE22w _18RO9HMaEeeoYuc64YE22w" decisionInputFlow="_18RO8XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_18RPFXMaEeeoYuc64YE22w" name="Merge(ConditionalTestExpression@4f6b2741.result)" incoming="_18RO9nMaEeeoYuc64YE22w _18RO93MaEeeoYuc64YE22w" outgoing="_18RO7XMaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPFnMaEeeoYuc64YE22w" name="ExpressionStatement@3dcf22df" incoming="_18QCQXMaEeeoYuc64YE22w" outgoing="_18QCQnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPF3MaEeeoYuc64YE22w" target="_18RPGHMaEeeoYuc64YE22w" source="_18RPRXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18RPGHMaEeeoYuc64YE22w" name="Fork(y)@75d2124c" incoming="_18RPF3MaEeeoYuc64YE22w" outgoing="_18QCYnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPGXMaEeeoYuc64YE22w" name="RightHandSide@efe81df">
              <edge xmi:type="uml:ControlFlow" xmi:id="_18RPGnMaEeeoYuc64YE22w" target="_18RPRHMaEeeoYuc64YE22w" source="_18RPQ3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18RPG3MaEeeoYuc64YE22w" target="_18RPIXMaEeeoYuc64YE22w" source="_18RPRHMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RPHHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18RPHXMaEeeoYuc64YE22w" target="_18RPOXMaEeeoYuc64YE22w" source="_18RPRHMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RPHnMaEeeoYuc64YE22w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPH3MaEeeoYuc64YE22w" target="_18RPRXMaEeeoYuc64YE22w" source="_18RPI3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPIHMaEeeoYuc64YE22w" target="_18RPRXMaEeeoYuc64YE22w" source="_18RPO3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPIXMaEeeoYuc64YE22w" name="ConditionalTestExpression@efe81df.operand2" incoming="_18RPG3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPInMaEeeoYuc64YE22w" target="_18RPI3MaEeeoYuc64YE22w" source="_18RPKnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18RPI3MaEeeoYuc64YE22w" name="ConditionalTestExpression@efe81df.operand2.result" incoming="_18RPInMaEeeoYuc64YE22w" outgoing="_18RPH3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPJHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPJXMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPJnMaEeeoYuc64YE22w" name="SequenceConstructionExpression@5d4ff7e7">
                  <edge xmi:type="uml:ControlFlow" xmi:id="_18RPJ3MaEeeoYuc64YE22w" target="_18RPM3MaEeeoYuc64YE22w" source="_18RPLXMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPKHMaEeeoYuc64YE22w" target="_18RPKnMaEeeoYuc64YE22w" source="_18RPL3MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPKXMaEeeoYuc64YE22w" target="_18RPKnMaEeeoYuc64YE22w" source="_18RPNXMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_18RPKnMaEeeoYuc64YE22w" name="SequenceConstructionExpression@5d4ff7e7.output" incoming="_18RPKHMaEeeoYuc64YE22w _18RPKXMaEeeoYuc64YE22w" outgoing="_18RPInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPK3MaEeeoYuc64YE22w" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPLHMaEeeoYuc64YE22w" value="2"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPLXMaEeeoYuc64YE22w" name="SequenceExpressionList@78080c68#1" outgoing="_18RPJ3MaEeeoYuc64YE22w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RPLnMaEeeoYuc64YE22w" name="Value(1)">
                      <result xmi:id="_18RPL3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18RPKHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPMHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPMXMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_18RPMnMaEeeoYuc64YE22w" value="1">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPM3MaEeeoYuc64YE22w" name="SequenceExpressionList@78080c68#2" incoming="_18RPJ3MaEeeoYuc64YE22w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RPNHMaEeeoYuc64YE22w" name="Value(2)">
                      <result xmi:id="_18RPNXMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18RPKXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPNnMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPN3MaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_18RPOHMaEeeoYuc64YE22w" value="2">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPOXMaEeeoYuc64YE22w" name="ConditionalTestExpression@efe81df.operand3" incoming="_18RPHXMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPOnMaEeeoYuc64YE22w" target="_18RPO3MaEeeoYuc64YE22w" source="_18RPP3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18RPO3MaEeeoYuc64YE22w" name="ConditionalTestExpression@efe81df.operand3.result" incoming="_18RPOnMaEeeoYuc64YE22w" outgoing="_18RPIHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPPHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPPXMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RPPnMaEeeoYuc64YE22w" name="Value(0)">
                  <result xmi:id="_18RPP3MaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18RPOnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPQHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPQXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18RPQnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_18RPQ3MaEeeoYuc64YE22w" name="Initial(ConditionalTestExpression@efe81df)" outgoing="_18RPGnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_18RPRHMaEeeoYuc64YE22w" name="Decision(ConditionalTestExpression@efe81df)" incoming="_18RPGnMaEeeoYuc64YE22w _18QCQHMaEeeoYuc64YE22w" outgoing="_18RPG3MaEeeoYuc64YE22w _18RPHXMaEeeoYuc64YE22w" decisionInputFlow="_18QCQHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_18RPRXMaEeeoYuc64YE22w" name="Merge(ConditionalTestExpression@efe81df.result)" incoming="_18RPH3MaEeeoYuc64YE22w _18RPIHMaEeeoYuc64YE22w" outgoing="_18RPF3MaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPRnMaEeeoYuc64YE22w" name="ExpressionStatement@31a888ca" incoming="_18QCQnMaEeeoYuc64YE22w" outgoing="_18QCQ3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPR3MaEeeoYuc64YE22w" target="_18RPSHMaEeeoYuc64YE22w" source="_18RPwXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18RPSHMaEeeoYuc64YE22w" name="Fork(z)@7a1ad674" incoming="_18RPR3MaEeeoYuc64YE22w" outgoing="_18QCY3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPSXMaEeeoYuc64YE22w" name="RightHandSide@30f51a0f">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPSnMaEeeoYuc64YE22w" target="_18RPwHMaEeeoYuc64YE22w" source="_18RPUXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPS3MaEeeoYuc64YE22w" name="SequenceConstructionExpression@322f974b">
                <edge xmi:type="uml:ControlFlow" xmi:id="_18RPTHMaEeeoYuc64YE22w" target="_18RPWnMaEeeoYuc64YE22w" source="_18RPVHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_18RPTXMaEeeoYuc64YE22w" target="_18RPYHMaEeeoYuc64YE22w" source="_18RPWnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPTnMaEeeoYuc64YE22w" target="_18RPUXMaEeeoYuc64YE22w" source="_18RPVnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPT3MaEeeoYuc64YE22w" target="_18RPUXMaEeeoYuc64YE22w" source="_18RPXHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPUHMaEeeoYuc64YE22w" target="_18RPUXMaEeeoYuc64YE22w" source="_18RPYnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18RPUXMaEeeoYuc64YE22w" name="SequenceConstructionExpression@322f974b.output" incoming="_18RPTnMaEeeoYuc64YE22w _18RPT3MaEeeoYuc64YE22w _18RPUHMaEeeoYuc64YE22w" outgoing="_18RPSnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPUnMaEeeoYuc64YE22w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPU3MaEeeoYuc64YE22w" value="3"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPVHMaEeeoYuc64YE22w" name="SequenceExpressionList@311b07f2#1" outgoing="_18RPTHMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RPVXMaEeeoYuc64YE22w" name="Value(1)">
                    <result xmi:id="_18RPVnMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18RPTnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPV3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPWHMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_18RPWXMaEeeoYuc64YE22w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPWnMaEeeoYuc64YE22w" name="SequenceExpressionList@311b07f2#2" incoming="_18RPTHMaEeeoYuc64YE22w" outgoing="_18RPTXMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RPW3MaEeeoYuc64YE22w" name="Value(&quot;banana&quot;)">
                    <result xmi:id="_18RPXHMaEeeoYuc64YE22w" name="Value(&quot;banana&quot;).result" outgoing="_18RPT3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPXXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPXnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_18RPX3MaEeeoYuc64YE22w" value="banana">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPYHMaEeeoYuc64YE22w" name="SequenceExpressionList@311b07f2#3" incoming="_18RPTXMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RPYXMaEeeoYuc64YE22w" name="Value(2)">
                    <result xmi:id="_18RPYnMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18RPUHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPY3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPZHMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_18RPZXMaEeeoYuc64YE22w" value="2">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_18RPZnMaEeeoYuc64YE22w" name="CastExpression@30f51a0f" mode="parallel" outputElement="_18RPwXMaEeeoYuc64YE22w" inputElement="_18RPwHMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPZ3MaEeeoYuc64YE22w" target="_18RPiHMaEeeoYuc64YE22w" source="_18RPjnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPaHMaEeeoYuc64YE22w" target="_18RPhnMaEeeoYuc64YE22w" source="_18RPk3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPaXMaEeeoYuc64YE22w" target="_18RPlnMaEeeoYuc64YE22w" source="_18RPjnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPanMaEeeoYuc64YE22w" target="_18RPlnMaEeeoYuc64YE22w" source="_18RPi3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPa3MaEeeoYuc64YE22w" target="_18RPkHMaEeeoYuc64YE22w" source="_18RPlnMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RPbHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPbXMaEeeoYuc64YE22w" target="_18RPmHMaEeeoYuc64YE22w" source="_18RPnnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPbnMaEeeoYuc64YE22w" target="_18RPhnMaEeeoYuc64YE22w" source="_18RPo3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPb3MaEeeoYuc64YE22w" target="_18RPpnMaEeeoYuc64YE22w" source="_18RPnnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPcHMaEeeoYuc64YE22w" target="_18RPpnMaEeeoYuc64YE22w" source="_18RPm3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPcXMaEeeoYuc64YE22w" target="_18RPoHMaEeeoYuc64YE22w" source="_18RPpnMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RPcnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPc3MaEeeoYuc64YE22w" target="_18RPjnMaEeeoYuc64YE22w" source="_18RPpnMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RPdHMaEeeoYuc64YE22w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPdXMaEeeoYuc64YE22w" target="_18RPqHMaEeeoYuc64YE22w" source="_18RPrnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPdnMaEeeoYuc64YE22w" target="_18RPhnMaEeeoYuc64YE22w" source="_18RPs3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPd3MaEeeoYuc64YE22w" target="_18RPtnMaEeeoYuc64YE22w" source="_18RPrnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPeHMaEeeoYuc64YE22w" target="_18RPtnMaEeeoYuc64YE22w" source="_18RPq3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPeXMaEeeoYuc64YE22w" target="_18RPsHMaEeeoYuc64YE22w" source="_18RPtnMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RPenMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPe3MaEeeoYuc64YE22w" target="_18RPnnMaEeeoYuc64YE22w" source="_18RPtnMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RPfHMaEeeoYuc64YE22w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPfXMaEeeoYuc64YE22w" target="_18RPuHMaEeeoYuc64YE22w" source="_18RPvnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPfnMaEeeoYuc64YE22w" target="_18RPv3MaEeeoYuc64YE22w" source="_18RPvnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPf3MaEeeoYuc64YE22w" target="_18RPv3MaEeeoYuc64YE22w" source="_18RPu3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPgHMaEeeoYuc64YE22w" target="_18RPhnMaEeeoYuc64YE22w" source="_18RPv3MaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RPgXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPgnMaEeeoYuc64YE22w" target="_18RPrnMaEeeoYuc64YE22w" source="_18RPv3MaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RPg3MaEeeoYuc64YE22w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPhHMaEeeoYuc64YE22w" target="_18RPvnMaEeeoYuc64YE22w" source="_18RPwHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPhXMaEeeoYuc64YE22w" target="_18RPwXMaEeeoYuc64YE22w" source="_18RPhnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_18RPhnMaEeeoYuc64YE22w" name="Merge(CastExpression@30f51a0f.operand)" incoming="_18RPaHMaEeeoYuc64YE22w _18RPbnMaEeeoYuc64YE22w _18RPdnMaEeeoYuc64YE22w _18RPgHMaEeeoYuc64YE22w" outgoing="_18RPhXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18RPh3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(UnlimitedNatural)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  <object xmi:id="_18RPiHMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(UnlimitedNatural).object" incoming="_18RPZ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPiXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPinMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18RPi3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(UnlimitedNatural).result" outgoing="_18RPanMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPjHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPjXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18RPjnMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(UnlimitedNatural).object)" incoming="_18RPc3MaEeeoYuc64YE22w" outgoing="_18RPZ3MaEeeoYuc64YE22w _18RPaXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RPj3MaEeeoYuc64YE22w" name="Call(ToInteger)">
                  <argument xmi:id="_18RPkHMaEeeoYuc64YE22w" name="Call(ToInteger).argument(x)" incoming="_18RPa3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPkXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPknMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18RPk3MaEeeoYuc64YE22w" name="Call(ToInteger).result(result)" outgoing="_18RPaHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPlHMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPlXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-UnlimitedNaturalFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_18RPlnMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(UnlimitedNatural).result)" incoming="_18RPaXMaEeeoYuc64YE22w _18RPanMaEeeoYuc64YE22w" outgoing="_18RPa3MaEeeoYuc64YE22w" decisionInputFlow="_18RPanMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18RPl3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_18RPmHMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).object" incoming="_18RPbXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPmXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPmnMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18RPm3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(BitString).result" outgoing="_18RPcHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPnHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPnXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18RPnnMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(BitString).object)" incoming="_18RPe3MaEeeoYuc64YE22w" outgoing="_18RPbXMaEeeoYuc64YE22w _18RPb3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RPn3MaEeeoYuc64YE22w" name="Call(ToInteger)">
                  <argument xmi:id="_18RPoHMaEeeoYuc64YE22w" name="Call(ToInteger).argument(b)" incoming="_18RPcXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPoXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPonMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18RPo3MaEeeoYuc64YE22w" name="Call(ToInteger).result()" outgoing="_18RPbnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPpHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPpXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:OpaqueBehavior" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_18RPpnMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(BitString).result)" incoming="_18RPb3MaEeeoYuc64YE22w _18RPcHMaEeeoYuc64YE22w" outgoing="_18RPcXMaEeeoYuc64YE22w _18RPc3MaEeeoYuc64YE22w" decisionInputFlow="_18RPcHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18RPp3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Real)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
                  <object xmi:id="_18RPqHMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Real).object" incoming="_18RPdXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPqXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPqnMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18RPq3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Real).result" outgoing="_18RPeHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPrHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPrXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18RPrnMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(Real).object)" incoming="_18RPgnMaEeeoYuc64YE22w" outgoing="_18RPdXMaEeeoYuc64YE22w _18RPd3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RPr3MaEeeoYuc64YE22w" name="Call(ToInteger)">
                  <argument xmi:id="_18RPsHMaEeeoYuc64YE22w" name="Call(ToInteger).argument(x)" incoming="_18RPeXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPsXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPsnMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18RPs3MaEeeoYuc64YE22w" name="Call(ToInteger).result(result)" outgoing="_18RPdnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPtHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPtXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-RealFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_18RPtnMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(Real).result)" incoming="_18RPd3MaEeeoYuc64YE22w _18RPeHMaEeeoYuc64YE22w" outgoing="_18RPeXMaEeeoYuc64YE22w _18RPe3MaEeeoYuc64YE22w" decisionInputFlow="_18RPeHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18RPt3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_18RPuHMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer).object" incoming="_18RPfXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPuXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPunMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18RPu3MaEeeoYuc64YE22w" name="ReadIsClassifiedObject(Integer).result" outgoing="_18RPf3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RPvHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RPvXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18RPvnMaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(Integer).object)" incoming="_18RPhHMaEeeoYuc64YE22w" outgoing="_18RPfXMaEeeoYuc64YE22w _18RPfnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_18RPv3MaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(Integer).result)" incoming="_18RPfnMaEeeoYuc64YE22w _18RPf3MaEeeoYuc64YE22w" outgoing="_18RPgHMaEeeoYuc64YE22w _18RPgnMaEeeoYuc64YE22w" decisionInputFlow="_18RPf3MaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18RPwHMaEeeoYuc64YE22w" name="CastExpression@30f51a0f.inputElement" incoming="_18RPSnMaEeeoYuc64YE22w" outgoing="_18RPhHMaEeeoYuc64YE22w" regionAsInput="_18RPZnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18RPwXMaEeeoYuc64YE22w" name="CastExpression@30f51a0f.outputElement" incoming="_18RPhXMaEeeoYuc64YE22w" outgoing="_18RPR3MaEeeoYuc64YE22w" regionAsOutput="_18RPZnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RPwnMaEeeoYuc64YE22w" name="ExpressionStatement@77408e53" incoming="_18QCQ3MaEeeoYuc64YE22w" outgoing="_18QCRXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RPw3MaEeeoYuc64YE22w" target="_18RP_3MaEeeoYuc64YE22w" source="_18RP_nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPxHMaEeeoYuc64YE22w" target="_18RP_3MaEeeoYuc64YE22w" source="_18RP0nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RPxXMaEeeoYuc64YE22w" target="_18RP1nMaEeeoYuc64YE22w" source="_18RP_3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RPxnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RPx3MaEeeoYuc64YE22w" target="_18RP6nMaEeeoYuc64YE22w" source="_18RP_3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RPyHMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPyXMaEeeoYuc64YE22w" target="_18RQAHMaEeeoYuc64YE22w" source="_18RP2nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPynMaEeeoYuc64YE22w" target="_18RQAHMaEeeoYuc64YE22w" source="_18RP7nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPy3MaEeeoYuc64YE22w" target="_18RQAXMaEeeoYuc64YE22w" source="_18RP3XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPzHMaEeeoYuc64YE22w" target="_18RQAXMaEeeoYuc64YE22w" source="_18RP8XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPzXMaEeeoYuc64YE22w" target="_18RQAnMaEeeoYuc64YE22w" source="_18RQAXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPznMaEeeoYuc64YE22w" target="_18RQA3MaEeeoYuc64YE22w" source="_18RP4HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RPz3MaEeeoYuc64YE22w" target="_18RQA3MaEeeoYuc64YE22w" source="_18RP9HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RP0HMaEeeoYuc64YE22w" target="_18RQBHMaEeeoYuc64YE22w" source="_18RQA3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RP0XMaEeeoYuc64YE22w" name="Value(true)">
              <result xmi:id="_18RP0nMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18RPxHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RP03MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RP1HMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_18RP1XMaEeeoYuc64YE22w" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RP1nMaEeeoYuc64YE22w" name="ConditionalTestExpression@2a4b02b6.operand2" incoming="_18RPxXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RP13MaEeeoYuc64YE22w" target="_18RP43MaEeeoYuc64YE22w" source="_18RP5nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RP2HMaEeeoYuc64YE22w" target="_18RP2nMaEeeoYuc64YE22w" source="_18RP43MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RP2XMaEeeoYuc64YE22w" target="_18RP3XMaEeeoYuc64YE22w" source="_18RP43MaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18RP2nMaEeeoYuc64YE22w" name="ConditionalTestExpression@2a4b02b6.operand2.result" incoming="_18RP2HMaEeeoYuc64YE22w" outgoing="_18RPyXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RP23MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RP3HMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_18RP3XMaEeeoYuc64YE22w" name="ConditionalTestExpression@2a4b02b6.operand2.output(l1)" incoming="_18RP2XMaEeeoYuc64YE22w" outgoing="_18RPy3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RP3nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RP33MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_18RP4HMaEeeoYuc64YE22w" name="ConditionalTestExpression@2a4b02b6.operand2.output(l2)" outgoing="_18RPznMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RP4XMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RP4nMaEeeoYuc64YE22w"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ForkNode" xmi:id="_18RP43MaEeeoYuc64YE22w" name="Fork(l1)@144efc0b" incoming="_18RP13MaEeeoYuc64YE22w" outgoing="_18RP2HMaEeeoYuc64YE22w _18RP2XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RP5HMaEeeoYuc64YE22w" name="RightHandSide@19a1392f">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RP5XMaEeeoYuc64YE22w" name="Value(1)">
                  <result xmi:id="_18RP5nMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18RP13MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RP53MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RP6HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18RP6XMaEeeoYuc64YE22w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RP6nMaEeeoYuc64YE22w" name="ConditionalTestExpression@2a4b02b6.operand3" incoming="_18RPx3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RP63MaEeeoYuc64YE22w" target="_18RP93MaEeeoYuc64YE22w" source="_18RP-nMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RP7HMaEeeoYuc64YE22w" target="_18RP7nMaEeeoYuc64YE22w" source="_18RP93MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RP7XMaEeeoYuc64YE22w" target="_18RP9HMaEeeoYuc64YE22w" source="_18RP93MaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18RP7nMaEeeoYuc64YE22w" name="ConditionalTestExpression@2a4b02b6.operand3.result" incoming="_18RP7HMaEeeoYuc64YE22w" outgoing="_18RPynMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RP73MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RP8HMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_18RP8XMaEeeoYuc64YE22w" name="ConditionalTestExpression@2a4b02b6.operand3.output(l1)" outgoing="_18RPzHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RP8nMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RP83MaEeeoYuc64YE22w"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_18RP9HMaEeeoYuc64YE22w" name="ConditionalTestExpression@2a4b02b6.operand3.output(l2)" incoming="_18RP7XMaEeeoYuc64YE22w" outgoing="_18RPz3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RP9XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RP9nMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ForkNode" xmi:id="_18RP93MaEeeoYuc64YE22w" name="Fork(l2)@5707af97" incoming="_18RP63MaEeeoYuc64YE22w" outgoing="_18RP7HMaEeeoYuc64YE22w _18RP7XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RP-HMaEeeoYuc64YE22w" name="RightHandSide@5f5c2d4b">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RP-XMaEeeoYuc64YE22w" name="Value(2)">
                  <result xmi:id="_18RP-nMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18RP63MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RP-3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RP_HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18RP_XMaEeeoYuc64YE22w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18RP_nMaEeeoYuc64YE22w" name="Initial(ConditionalTestExpression@2a4b02b6)" outgoing="_18RPw3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18RP_3MaEeeoYuc64YE22w" name="Decision(ConditionalTestExpression@2a4b02b6)" incoming="_18RPw3MaEeeoYuc64YE22w _18RPxHMaEeeoYuc64YE22w" outgoing="_18RPxXMaEeeoYuc64YE22w _18RPx3MaEeeoYuc64YE22w" decisionInputFlow="_18RPxHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_18RQAHMaEeeoYuc64YE22w" name="Merge(ConditionalTestExpression@2a4b02b6.result)" incoming="_18RPyXMaEeeoYuc64YE22w _18RPynMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_18RQAXMaEeeoYuc64YE22w" name="Merge(ConditionalTestExpression@2a4b02b6.l1)" incoming="_18RPy3MaEeeoYuc64YE22w _18RPzHMaEeeoYuc64YE22w" outgoing="_18RPzXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18RQAnMaEeeoYuc64YE22w" name="Fork(Merge(ConditionalTestExpression@2a4b02b6.l1))" incoming="_18RPzXMaEeeoYuc64YE22w" outgoing="_18QCRHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_18RQA3MaEeeoYuc64YE22w" name="Merge(ConditionalTestExpression@2a4b02b6.l2)" incoming="_18RPznMaEeeoYuc64YE22w _18RPz3MaEeeoYuc64YE22w" outgoing="_18RP0HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18RQBHMaEeeoYuc64YE22w" name="Fork(Merge(ConditionalTestExpression@2a4b02b6.l2))" incoming="_18RP0HMaEeeoYuc64YE22w" outgoing="_18QCRnMaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQBXMaEeeoYuc64YE22w" name="ExpressionStatement@6e6e033e" incoming="_18QCRXMaEeeoYuc64YE22w" outgoing="_18QCR3MaEeeoYuc64YE22w">
            <node xmi:type="uml:ForkNode" xmi:id="_18RQBnMaEeeoYuc64YE22w" name="Fork(k3)@7df729d3" incoming="_18QCRHMaEeeoYuc64YE22w" outgoing="_18QCZ3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQB3MaEeeoYuc64YE22w" name="RightHandSide@2e6c34d0"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQCHMaEeeoYuc64YE22w" name="ExpressionStatement@32d69f13" incoming="_18QCR3MaEeeoYuc64YE22w" outgoing="_18QCSHMaEeeoYuc64YE22w">
            <node xmi:type="uml:ForkNode" xmi:id="_18RQCXMaEeeoYuc64YE22w" name="Fork(k4)@7dd3e72d" incoming="_18QCRnMaEeeoYuc64YE22w" outgoing="_18QCaHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQCnMaEeeoYuc64YE22w" name="RightHandSide@56a217e"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQC3MaEeeoYuc64YE22w" name="ExpressionStatement@4b0632bd" incoming="_18QCSHMaEeeoYuc64YE22w" outgoing="_18QCSXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQDHMaEeeoYuc64YE22w" target="_18RQDXMaEeeoYuc64YE22w" source="_18RQLXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18RQDXMaEeeoYuc64YE22w" name="Fork(u)@28e415d9" incoming="_18RQDHMaEeeoYuc64YE22w" outgoing="_18QCaXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQDnMaEeeoYuc64YE22w" name="RightHandSide@1f338b72">
              <edge xmi:type="uml:ControlFlow" xmi:id="_18RQD3MaEeeoYuc64YE22w" target="_18RQLHMaEeeoYuc64YE22w" source="_18RQK3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQEHMaEeeoYuc64YE22w" target="_18RQLHMaEeeoYuc64YE22w" source="_18RQGHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18RQEXMaEeeoYuc64YE22w" target="_18RQHHMaEeeoYuc64YE22w" source="_18RQLHMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RQEnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18RQE3MaEeeoYuc64YE22w" target="_18RQIXMaEeeoYuc64YE22w" source="_18RQLHMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RQFHMaEeeoYuc64YE22w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQFXMaEeeoYuc64YE22w" target="_18RQLXMaEeeoYuc64YE22w" source="_18RQHXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQFnMaEeeoYuc64YE22w" target="_18RQLXMaEeeoYuc64YE22w" source="_18RQI3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RQF3MaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_18RQGHMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18RQEHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQGXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQGnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_18RQG3MaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQHHMaEeeoYuc64YE22w" name="ConditionalTestExpression@1f338b72.operand2" incoming="_18RQEXMaEeeoYuc64YE22w">
                <structuredNodeOutput xmi:id="_18RQHXMaEeeoYuc64YE22w" name="ConditionalTestExpression@1f338b72.operand2.result" outgoing="_18RQFXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQHnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQH3MaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RQIHMaEeeoYuc64YE22w" name="Call(Nothing)" behavior="_18R2XnMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQIXMaEeeoYuc64YE22w" name="ConditionalTestExpression@1f338b72.operand3" incoming="_18RQE3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQInMaEeeoYuc64YE22w" target="_18RQI3MaEeeoYuc64YE22w" source="_18RQJ3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18RQI3MaEeeoYuc64YE22w" name="ConditionalTestExpression@1f338b72.operand3.result" incoming="_18RQInMaEeeoYuc64YE22w" outgoing="_18RQFnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQJHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQJXMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RQJnMaEeeoYuc64YE22w" name="Value(2)">
                  <result xmi:id="_18RQJ3MaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18RQInMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQKHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQKXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18RQKnMaEeeoYuc64YE22w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_18RQK3MaEeeoYuc64YE22w" name="Initial(ConditionalTestExpression@1f338b72)" outgoing="_18RQD3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_18RQLHMaEeeoYuc64YE22w" name="Decision(ConditionalTestExpression@1f338b72)" incoming="_18RQD3MaEeeoYuc64YE22w _18RQEHMaEeeoYuc64YE22w" outgoing="_18RQEXMaEeeoYuc64YE22w _18RQE3MaEeeoYuc64YE22w" decisionInputFlow="_18RQEHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_18RQLXMaEeeoYuc64YE22w" name="Merge(ConditionalTestExpression@1f338b72.result)" incoming="_18RQFXMaEeeoYuc64YE22w _18RQFnMaEeeoYuc64YE22w" outgoing="_18RQDHMaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQLnMaEeeoYuc64YE22w" name="ExpressionStatement@12fc3519" incoming="_18QCSXMaEeeoYuc64YE22w" outgoing="_18QCS3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQL3MaEeeoYuc64YE22w" target="_18RQMHMaEeeoYuc64YE22w" source="_18RQm3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18RQMHMaEeeoYuc64YE22w" name="Fork(v)@f019fec" incoming="_18RQL3MaEeeoYuc64YE22w" outgoing="_18QCanMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQMXMaEeeoYuc64YE22w" name="RightHandSide@69237aa7">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQMnMaEeeoYuc64YE22w" target="_18RQTHMaEeeoYuc64YE22w" source="_18RQR3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18RQM3MaEeeoYuc64YE22w" target="_18RQS3MaEeeoYuc64YE22w" source="_18RQPXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQNHMaEeeoYuc64YE22w" target="_18RQZXMaEeeoYuc64YE22w" source="_18RQP3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18RQNXMaEeeoYuc64YE22w" target="_18RQmnMaEeeoYuc64YE22w" source="_18RQmXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQNnMaEeeoYuc64YE22w" target="_18RQmnMaEeeoYuc64YE22w" source="_18RQT3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18RQN3MaEeeoYuc64YE22w" target="_18RQUnMaEeeoYuc64YE22w" source="_18RQmnMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RQOHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18RQOXMaEeeoYuc64YE22w" target="_18RQj3MaEeeoYuc64YE22w" source="_18RQmnMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RQOnMaEeeoYuc64YE22w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQO3MaEeeoYuc64YE22w" target="_18RQm3MaEeeoYuc64YE22w" source="_18RQYXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQPHMaEeeoYuc64YE22w" target="_18RQm3MaEeeoYuc64YE22w" source="_18RQkXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQPXMaEeeoYuc64YE22w" name="Operands(EqualityExpression@b6fbdc1)" outgoing="_18RQM3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQPnMaEeeoYuc64YE22w" target="_18RQP3MaEeeoYuc64YE22w" source="_18RQQnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ForkNode" xmi:id="_18RQP3MaEeeoYuc64YE22w" name="Fork(w)@1867306c" incoming="_18RQPnMaEeeoYuc64YE22w" outgoing="_18RQNHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQQHMaEeeoYuc64YE22w" name="RightHandSide@5eb1da70">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RQQXMaEeeoYuc64YE22w" name="Value(null)">
                    <result xmi:id="_18RQQnMaEeeoYuc64YE22w" name="Value(null).result" outgoing="_18RQPnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQQ3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQRHMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_18RQRXMaEeeoYuc64YE22w"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RQRnMaEeeoYuc64YE22w" name="Value(0)">
                  <result xmi:id="_18RQR3MaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18RQMnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQSHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQSXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18RQSnMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RQS3MaEeeoYuc64YE22w" name="Call(IsEmpty)" incoming="_18RQM3MaEeeoYuc64YE22w">
                <argument xmi:id="_18RQTHMaEeeoYuc64YE22w" name="Call(IsEmpty).argument(seq)" incoming="_18RQMnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQTXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQTnMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_18RQT3MaEeeoYuc64YE22w" name="Call(IsEmpty).result()" outgoing="_18RQNnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQUHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQUXMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQUnMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@362f6233.operand2" incoming="_18RQN3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQU3MaEeeoYuc64YE22w" target="_18RQdHMaEeeoYuc64YE22w" source="_18RQcHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_18RQVHMaEeeoYuc64YE22w" target="_18RQZHMaEeeoYuc64YE22w" source="_18RQbnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQVXMaEeeoYuc64YE22w" target="_18RQaHMaEeeoYuc64YE22w" source="_18RQdHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQVnMaEeeoYuc64YE22w" target="_18RQhHMaEeeoYuc64YE22w" source="_18RQa3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQV3MaEeeoYuc64YE22w" target="_18RQe3MaEeeoYuc64YE22w" source="_18RQhHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQWHMaEeeoYuc64YE22w" target="_18RQhnMaEeeoYuc64YE22w" source="_18RQhHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQWXMaEeeoYuc64YE22w" target="_18RQjHMaEeeoYuc64YE22w" source="_18RQiXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQWnMaEeeoYuc64YE22w" target="_18RQjXMaEeeoYuc64YE22w" source="_18RQfnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQW3MaEeeoYuc64YE22w" target="_18RQjnMaEeeoYuc64YE22w" source="_18RQjHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQXHMaEeeoYuc64YE22w" target="_18RQjnMaEeeoYuc64YE22w" source="_18RQjHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQXXMaEeeoYuc64YE22w" target="_18RQjXMaEeeoYuc64YE22w" source="_18RQjnMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RQXnMaEeeoYuc64YE22w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQX3MaEeeoYuc64YE22w" target="_18RQgXMaEeeoYuc64YE22w" source="_18RQdnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQYHMaEeeoYuc64YE22w" target="_18RQYXMaEeeoYuc64YE22w" source="_18RQjXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18RQYXMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@362f6233.operand2.result" incoming="_18RQYHMaEeeoYuc64YE22w" outgoing="_18RQO3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQYnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQY3MaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RQZHMaEeeoYuc64YE22w" name="Call(At)" incoming="_18RQVHMaEeeoYuc64YE22w">
                  <argument xmi:id="_18RQZXMaEeeoYuc64YE22w" name="Call(At).argument(seq)" incoming="_18RQNHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQZnMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQZ3MaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <argument xmi:id="_18RQaHMaEeeoYuc64YE22w" name="Call(At).argument(index)" incoming="_18RQVXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQaXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQanMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18RQa3MaEeeoYuc64YE22w" name="Call(At).result()" outgoing="_18RQVnMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQbHMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQbXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQbnMaEeeoYuc64YE22w" name="Tuple@29058a6e" outgoing="_18RQVHMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RQb3MaEeeoYuc64YE22w" name="Value(1)">
                    <result xmi:id="_18RQcHMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18RQU3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQcXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQcnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_18RQc3MaEeeoYuc64YE22w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18RQdHMaEeeoYuc64YE22w" name="Fork(Call(At).argument(index))" incoming="_18RQU3MaEeeoYuc64YE22w" outgoing="_18RQVXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RQdXMaEeeoYuc64YE22w" name="Value(1)">
                  <result xmi:id="_18RQdnMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18RQX3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQd3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQeHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_18RQeXMaEeeoYuc64YE22w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_18RQenMaEeeoYuc64YE22w" name="Test(==)">
                  <first xmi:id="_18RQe3MaEeeoYuc64YE22w" name="Test(==).first" incoming="_18RQV3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQfHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQfXMaEeeoYuc64YE22w" value="1"/>
                  </first>
                  <result xmi:id="_18RQfnMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_18RQWnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQf3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQgHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <second xmi:id="_18RQgXMaEeeoYuc64YE22w" name="Test(==).second" incoming="_18RQX3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQgnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQg3MaEeeoYuc64YE22w" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18RQhHMaEeeoYuc64YE22w" name="Fork(Call(At).result())" incoming="_18RQVnMaEeeoYuc64YE22w" outgoing="_18RQV3MaEeeoYuc64YE22w _18RQWHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RQhXMaEeeoYuc64YE22w" name="Call(NotEmpty)">
                  <argument xmi:id="_18RQhnMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_18RQWHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQh3MaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQiHMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_18RQiXMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_18RQWXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQinMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQi3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18RQjHMaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_18RQWXMaEeeoYuc64YE22w" outgoing="_18RQW3MaEeeoYuc64YE22w _18RQXHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_18RQjXMaEeeoYuc64YE22w" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_18RQWnMaEeeoYuc64YE22w _18RQXXMaEeeoYuc64YE22w" outgoing="_18RQYHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_18RQjnMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_18RQW3MaEeeoYuc64YE22w _18RQXHMaEeeoYuc64YE22w" outgoing="_18RQXXMaEeeoYuc64YE22w" decisionInputFlow="_18RQXHMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQj3MaEeeoYuc64YE22w" name="ConditionalLogicalExpression@362f6233.operand3" incoming="_18RQOXMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQkHMaEeeoYuc64YE22w" target="_18RQkXMaEeeoYuc64YE22w" source="_18RQlXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18RQkXMaEeeoYuc64YE22w" name="ConditionalLogicalExpression@362f6233.operand3.result" incoming="_18RQkHMaEeeoYuc64YE22w" outgoing="_18RQPHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQknMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQk3MaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RQlHMaEeeoYuc64YE22w" name="Value(false)">
                  <result xmi:id="_18RQlXMaEeeoYuc64YE22w" name="Value(false).result" outgoing="_18RQkHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQlnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQl3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_18RQmHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_18RQmXMaEeeoYuc64YE22w" name="Initial(ConditionalLogicalExpression@362f6233)" outgoing="_18RQNXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_18RQmnMaEeeoYuc64YE22w" name="Decision(ConditionalLogicalExpression@362f6233)" incoming="_18RQNXMaEeeoYuc64YE22w _18RQNnMaEeeoYuc64YE22w" outgoing="_18RQN3MaEeeoYuc64YE22w _18RQOXMaEeeoYuc64YE22w" decisionInputFlow="_18RQNnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_18RQm3MaEeeoYuc64YE22w" name="Merge(ConditionalLogicalExpression@362f6233.result)" incoming="_18RQO3MaEeeoYuc64YE22w _18RQPHMaEeeoYuc64YE22w" outgoing="_18RQL3MaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQnHMaEeeoYuc64YE22w" name="ExpressionStatement@18d36c44" incoming="_18QCS3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQnXMaEeeoYuc64YE22w" target="_18RQnnMaEeeoYuc64YE22w" source="_18RQo3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18RQnnMaEeeoYuc64YE22w" name="Fork(r)@3ac3615d" incoming="_18RQnXMaEeeoYuc64YE22w" outgoing="_18QCZHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQn3MaEeeoYuc64YE22w" name="RightHandSide@5b1f70b8">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQoHMaEeeoYuc64YE22w" name="IsolationExpression@5b1f70b8" mustIsolate="true">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQoXMaEeeoYuc64YE22w" target="_18RQqnMaEeeoYuc64YE22w" source="_18RQrnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQonMaEeeoYuc64YE22w" target="_18RQo3MaEeeoYuc64YE22w" source="_18RQp3MaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18RQo3MaEeeoYuc64YE22w" name="IsolationExpression@5b1f70b8.output" incoming="_18RQonMaEeeoYuc64YE22w" outgoing="_18RQnXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQpHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQpXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_18RQpnMaEeeoYuc64YE22w" name="Call(getReading)" operation="_18RSsnMaEeeoYuc64YE22w">
                  <result xmi:id="_18RQp3MaEeeoYuc64YE22w" name="Call(getReading).result()" outgoing="_18RQonMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQqHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQqXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <target xmi:id="_18RQqnMaEeeoYuc64YE22w" name="Call(getReading).target" incoming="_18RQoXMaEeeoYuc64YE22w" type="_18RSF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQq3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQrHMaEeeoYuc64YE22w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:CallOperationAction" xmi:id="_18RQrXMaEeeoYuc64YE22w" name="Call(getActiveSensor)" operation="_18RSDnMaEeeoYuc64YE22w">
                  <result xmi:id="_18RQrnMaEeeoYuc64YE22w" name="Call(getActiveSensor).result()" outgoing="_18RQoXMaEeeoYuc64YE22w" type="_18RSF3MaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQr3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQsHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <target xmi:id="_18RQsXMaEeeoYuc64YE22w" name="Call(getActiveSensor).target" incoming="_18QCSnMaEeeoYuc64YE22w" type="_18RRaXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQsnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQs3MaEeeoYuc64YE22w" value="1"/>
                  </target>
                </node>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBsXMaEeeoYuc64YE22w" name="Output(i)" incoming="_18QBknMaEeeoYuc64YE22w" parameter="_18QBNXMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBsnMaEeeoYuc64YE22w" name="Output(j)" incoming="_18QBk3MaEeeoYuc64YE22w" parameter="_18QBOHMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBs3MaEeeoYuc64YE22w" name="Output(bs)" incoming="_18QBlHMaEeeoYuc64YE22w" parameter="_18QBO3MaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBtHMaEeeoYuc64YE22w" name="Output(h)" incoming="_18QBlXMaEeeoYuc64YE22w" parameter="_18QBPnMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBtXMaEeeoYuc64YE22w" name="Output(a)" incoming="_18QBlnMaEeeoYuc64YE22w" parameter="_18QBQXMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBtnMaEeeoYuc64YE22w" name="Output(b)" incoming="_18QBl3MaEeeoYuc64YE22w" parameter="_18QBRHMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBt3MaEeeoYuc64YE22w" name="Output(c)" incoming="_18QBmHMaEeeoYuc64YE22w" parameter="_18QBR3MaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBuHMaEeeoYuc64YE22w" name="Output(d)" incoming="_18QBmXMaEeeoYuc64YE22w" parameter="_18QBSnMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBuXMaEeeoYuc64YE22w" name="Output(e)" incoming="_18QBmnMaEeeoYuc64YE22w" parameter="_18QBTXMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBunMaEeeoYuc64YE22w" name="Output(e1)" incoming="_18QBm3MaEeeoYuc64YE22w" parameter="_18QBUHMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBu3MaEeeoYuc64YE22w" name="Output(e2)" incoming="_18QBnHMaEeeoYuc64YE22w" parameter="_18QBU3MaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBvHMaEeeoYuc64YE22w" name="Output(e3)" incoming="_18QBnXMaEeeoYuc64YE22w" parameter="_18QBVnMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBvXMaEeeoYuc64YE22w" name="Output(e4)" incoming="_18QBnnMaEeeoYuc64YE22w" parameter="_18QBWXMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBvnMaEeeoYuc64YE22w" name="Output(e5)" incoming="_18QBn3MaEeeoYuc64YE22w" parameter="_18QBXHMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBv3MaEeeoYuc64YE22w" name="Output(e6)" incoming="_18QBoHMaEeeoYuc64YE22w" parameter="_18QBX3MaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBwHMaEeeoYuc64YE22w" name="Output(e7)" incoming="_18QBoXMaEeeoYuc64YE22w" parameter="_18QBYnMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBwXMaEeeoYuc64YE22w" name="Output(e8)" incoming="_18QBonMaEeeoYuc64YE22w" parameter="_18QBZXMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBwnMaEeeoYuc64YE22w" name="Output(e9)" incoming="_18QBo3MaEeeoYuc64YE22w" parameter="_18QBaHMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBw3MaEeeoYuc64YE22w" name="Output(f)" incoming="_18QBpHMaEeeoYuc64YE22w" parameter="_18QBa3MaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBxHMaEeeoYuc64YE22w" name="Output(f1)" incoming="_18QBpXMaEeeoYuc64YE22w" parameter="_18QBbnMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBxXMaEeeoYuc64YE22w" name="Output(f2)" incoming="_18QBpnMaEeeoYuc64YE22w" parameter="_18QBcXMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBxnMaEeeoYuc64YE22w" name="Output(x)" incoming="_18QBp3MaEeeoYuc64YE22w" parameter="_18QBdHMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBx3MaEeeoYuc64YE22w" name="Output(y)" incoming="_18QBqHMaEeeoYuc64YE22w" parameter="_18QBd3MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QByHMaEeeoYuc64YE22w" name="Output(z)" incoming="_18QBqXMaEeeoYuc64YE22w" parameter="_18QBenMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QByXMaEeeoYuc64YE22w" name="Output(r)" incoming="_18QBqnMaEeeoYuc64YE22w" parameter="_18QBfXMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBynMaEeeoYuc64YE22w" name="Output(k1)" incoming="_18QBq3MaEeeoYuc64YE22w" parameter="_18QBgHMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBy3MaEeeoYuc64YE22w" name="Output(k2)" incoming="_18QBrHMaEeeoYuc64YE22w" parameter="_18QBg3MaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBzHMaEeeoYuc64YE22w" name="Output(k3)" incoming="_18QBrXMaEeeoYuc64YE22w" parameter="_18QBhnMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBzXMaEeeoYuc64YE22w" name="Output(k4)" incoming="_18QBrnMaEeeoYuc64YE22w" parameter="_18QBiXMaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBznMaEeeoYuc64YE22w" name="Output(u)" incoming="_18QBr3MaEeeoYuc64YE22w" parameter="_18QBjHMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18QBz3MaEeeoYuc64YE22w" name="Output(v)" incoming="_18QBsHMaEeeoYuc64YE22w" parameter="_18QBj3MaEeeoYuc64YE22w">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_18RQtHMaEeeoYuc64YE22w" name="destroy$method$1" specification="_18RRaHMaEeeoYuc64YE22w" node="_18RQtXMaEeeoYuc64YE22w" group="_18RQtXMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_18RQtXMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_18RQtnMaEeeoYuc64YE22w" name="Expressions_Operator$initialization$1" specification="_18RQ_nMaEeeoYuc64YE22w" node="_18RQt3MaEeeoYuc64YE22w" group="_18RQt3MaEeeoYuc64YE22w">
        <structuredNode xmi:id="_18RQt3MaEeeoYuc64YE22w" name="Body(Expressions_Operator$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQuHMaEeeoYuc64YE22w" target="_18RQx3MaEeeoYuc64YE22w" source="_18RQxHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQuXMaEeeoYuc64YE22w" target="_18RQy3MaEeeoYuc64YE22w" source="_18RQx3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQunMaEeeoYuc64YE22w" target="_18RQ1nMaEeeoYuc64YE22w" source="_18RQx3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQu3MaEeeoYuc64YE22w" target="_18RQ4HMaEeeoYuc64YE22w" source="_18RQx3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQvHMaEeeoYuc64YE22w" target="_18RQ53MaEeeoYuc64YE22w" source="_18RQ43MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQvXMaEeeoYuc64YE22w" target="_18RQ83MaEeeoYuc64YE22w" source="_18RQ6nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQvnMaEeeoYuc64YE22w" target="_18RQ-XMaEeeoYuc64YE22w" source="_18RQ7nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18RQv3MaEeeoYuc64YE22w" target="_18RQ_XMaEeeoYuc64YE22w" source="_18RQ_HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQwHMaEeeoYuc64YE22w" target="_18RQ_XMaEeeoYuc64YE22w" source="_18RQ9nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18RQwXMaEeeoYuc64YE22w" target="_18RQyHMaEeeoYuc64YE22w" source="_18RQ_XMaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RQwnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_18RQw3MaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_18RQxHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18RQuHMaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQxXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQxnMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_18RQx3MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18RQuHMaEeeoYuc64YE22w" outgoing="_18RQuXMaEeeoYuc64YE22w _18RQunMaEeeoYuc64YE22w _18RQu3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQyHMaEeeoYuc64YE22w" name="Initialization" incoming="_18RQwXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RQyXMaEeeoYuc64YE22w" target="_18RQznMaEeeoYuc64YE22w" source="_18RQynMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_18RQynMaEeeoYuc64YE22w" name="Call(Test$initialization$1)" outgoing="_18RQyXMaEeeoYuc64YE22w" operation="_18R3T3MaEeeoYuc64YE22w">
              <target xmi:id="_18RQy3MaEeeoYuc64YE22w" name="Call(Test$initialization$1).target" incoming="_18RQuXMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQzHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQzXMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RQznMaEeeoYuc64YE22w" name="Set(initializationFlag)" incoming="_18RQyXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RQz3MaEeeoYuc64YE22w" target="_18RQ3HMaEeeoYuc64YE22w" source="_18RQ0XMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RQ0HMaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_18RQ0XMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18RQz3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQ0nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQ03MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_18RQ1HMaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_18RQ1XMaEeeoYuc64YE22w" name="Write(Expressions_Operator$initializationFlag$1)" structuralFeature="_18PZWHMaEeeoYuc64YE22w" isReplaceAll="true">
                <object xmi:id="_18RQ1nMaEeeoYuc64YE22w" name="Write(Expressions_Operator$initializationFlag$1).object" incoming="_18RQunMaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQ13MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQ2HMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_18RQ2XMaEeeoYuc64YE22w" name="Write(Expressions_Operator$initializationFlag$1).result" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQ2nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQ23MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:id="_18RQ3HMaEeeoYuc64YE22w" name="Write(Expressions_Operator$initializationFlag$1).value" incoming="_18RQz3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQ3XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQ3nMaEeeoYuc64YE22w" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18RQ33MaEeeoYuc64YE22w" name="Read(Expressions_Operator$initializationFlag$1)" structuralFeature="_18PZWHMaEeeoYuc64YE22w">
            <object xmi:id="_18RQ4HMaEeeoYuc64YE22w" name="Read(Expressions_Operator$initializationFlag$1).object" incoming="_18RQu3MaEeeoYuc64YE22w" type="_18PZUXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQ4XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQ4nMaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_18RQ43MaEeeoYuc64YE22w" name="Read(Expressions_Operator$initializationFlag$1).result" outgoing="_18RQvHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQ5HMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQ5XMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RQ5nMaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_18RQ53MaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18RQvHMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQ6HMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQ6XMaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_18RQ6nMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18RQvXMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQ63MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQ7HMaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RQ7XMaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_18RQ7nMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18RQvnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQ73MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQ8HMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_18RQ8XMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_18RQ8nMaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_18RQ83MaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18RQvXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQ9HMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQ9XMaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_18RQ9nMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18RQwHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQ93MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQ-HMaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_18RQ-XMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18RQvnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RQ-nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RQ-3MaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_18RQ_HMaEeeoYuc64YE22w" name="InitialNode" outgoing="_18RQv3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_18RQ_XMaEeeoYuc64YE22w" name="Decision(Test(Expressions_Operator$initializationFlag$1))" incoming="_18RQv3MaEeeoYuc64YE22w _18RQwHMaEeeoYuc64YE22w" outgoing="_18RQwXMaEeeoYuc64YE22w" decisionInputFlow="_18RQwHMaEeeoYuc64YE22w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_18RQ_nMaEeeoYuc64YE22w" name="Expressions_Operator$initialization$1" visibility="protected" method="_18RQtnMaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_18RQ_3MaEeeoYuc64YE22w" name="Expressions_Operator" visibility="public" method="_18PZW3MaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_18RRAHMaEeeoYuc64YE22w" name="" visibility="package" type="_18PZUXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRAXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRAnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_18RRA3MaEeeoYuc64YE22w" name="run" visibility="public" method="_18PZhnMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_18RRBHMaEeeoYuc64YE22w" name="tester" visibility="package" type="_18R3WXMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRBXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRBnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRB3MaEeeoYuc64YE22w" name="" visibility="package" type="_18PZUXMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRCHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRCXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_18RRCnMaEeeoYuc64YE22w" name="test" visibility="package" method="_18QBNHMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_18RRC3MaEeeoYuc64YE22w" name="i" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRDHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRDXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRDnMaEeeoYuc64YE22w" name="j" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRD3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RREHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RREXMaEeeoYuc64YE22w" name="bs" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RREnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRE3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRFHMaEeeoYuc64YE22w" name="h" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRFXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRFnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRF3MaEeeoYuc64YE22w" name="a" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRGHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRGXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRGnMaEeeoYuc64YE22w" name="b" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRG3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRHHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRHXMaEeeoYuc64YE22w" name="c" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRHnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRH3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRIHMaEeeoYuc64YE22w" name="d" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRIXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRInMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRI3MaEeeoYuc64YE22w" name="e" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRJHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRJXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRJnMaEeeoYuc64YE22w" name="e1" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRJ3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRKHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRKXMaEeeoYuc64YE22w" name="e2" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRKnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRK3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRLHMaEeeoYuc64YE22w" name="e3" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRLXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRLnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRL3MaEeeoYuc64YE22w" name="e4" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRMHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRMXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRMnMaEeeoYuc64YE22w" name="e5" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRM3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRNHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRNXMaEeeoYuc64YE22w" name="e6" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRNnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRN3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RROHMaEeeoYuc64YE22w" name="e7" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RROXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RROnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRO3MaEeeoYuc64YE22w" name="e8" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRPHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRPXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRPnMaEeeoYuc64YE22w" name="e9" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRP3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRQHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRQXMaEeeoYuc64YE22w" name="f" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRQnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRQ3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRRHMaEeeoYuc64YE22w" name="f1" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRRXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRRnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRR3MaEeeoYuc64YE22w" name="f2" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRSHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRSXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRSnMaEeeoYuc64YE22w" name="x" visibility="package" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRS3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRTHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRTXMaEeeoYuc64YE22w" name="y" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRTnMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRT3MaEeeoYuc64YE22w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRUHMaEeeoYuc64YE22w" name="z" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRUXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRUnMaEeeoYuc64YE22w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRU3MaEeeoYuc64YE22w" name="r" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRVHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRVXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRVnMaEeeoYuc64YE22w" name="k1" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRV3MaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRWHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRWXMaEeeoYuc64YE22w" name="k2" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRWnMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRW3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRXHMaEeeoYuc64YE22w" name="k3" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRXXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRXnMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRX3MaEeeoYuc64YE22w" name="k4" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRYHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRYXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRYnMaEeeoYuc64YE22w" name="u" visibility="package" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRY3MaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRZHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18RRZXMaEeeoYuc64YE22w" name="v" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRZnMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRZ3MaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_18RRaHMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_18RQtHMaEeeoYuc64YE22w" redefinedOperation="_18R3UHMaEeeoYuc64YE22w"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_18RRaXMaEeeoYuc64YE22w" name="Monitor" visibility="package">
        <ownedAttribute xmi:id="_18RRanMaEeeoYuc64YE22w" name="Monitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRa3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRbHMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18RRbXMaEeeoYuc64YE22w" name="getActiveSensor$method$1" specification="_18RSDnMaEeeoYuc64YE22w" node="_18RRc3MaEeeoYuc64YE22w _18RRdHMaEeeoYuc64YE22w _18RRdXMaEeeoYuc64YE22w" group="_18RRdXMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18RRbnMaEeeoYuc64YE22w" name="" type="_18RSF3MaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRb3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRcHMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18RRcXMaEeeoYuc64YE22w" target="_18RRdHMaEeeoYuc64YE22w" source="_18RRdnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRcnMaEeeoYuc64YE22w" target="_18RRc3MaEeeoYuc64YE22w" source="_18RRenMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_18RRdXMaEeeoYuc64YE22w" name="Body(getActiveSensor$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RRdnMaEeeoYuc64YE22w" name="ReturnStatement@716681c4" outgoing="_18RRcXMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRd3MaEeeoYuc64YE22w" target="_18RRjXMaEeeoYuc64YE22w" source="_18RRhXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RReHMaEeeoYuc64YE22w" target="_18RRgXMaEeeoYuc64YE22w" source="_18RRjXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RReXMaEeeoYuc64YE22w" target="_18RRenMaEeeoYuc64YE22w" source="_18RRinMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18RRenMaEeeoYuc64YE22w" name="ReturnStatement@716681c4.output" incoming="_18RReXMaEeeoYuc64YE22w" outgoing="_18RRcnMaEeeoYuc64YE22w" type="_18RSF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRe3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRfHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallOperationAction" xmi:id="_18RRfXMaEeeoYuc64YE22w" name="Call(Sensor)" operation="_18RSrnMaEeeoYuc64YE22w">
                <result xmi:id="_18RRfnMaEeeoYuc64YE22w" name="Call(Sensor).result()" type="_18RSF3MaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRf3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRgHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <target xmi:id="_18RRgXMaEeeoYuc64YE22w" name="Call(Sensor).target" incoming="_18RReHMaEeeoYuc64YE22w" type="_18RSF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRgnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRg3MaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_18RRhHMaEeeoYuc64YE22w" name="Create(Sensor)" classifier="_18RSF3MaEeeoYuc64YE22w">
                <result xmi:id="_18RRhXMaEeeoYuc64YE22w" name="Create(Sensor).result" outgoing="_18RRd3MaEeeoYuc64YE22w" type="_18RSF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRhnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRh3MaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RRiHMaEeeoYuc64YE22w" name="Node(Call(Sensor))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRiXMaEeeoYuc64YE22w" target="_18RRinMaEeeoYuc64YE22w" source="_18RRjXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18RRinMaEeeoYuc64YE22w" name="Output(Fork(Create(Sensor).result))" incoming="_18RRiXMaEeeoYuc64YE22w" outgoing="_18RReXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRi3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRjHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ForkNode" xmi:id="_18RRjXMaEeeoYuc64YE22w" name="Fork(Create(Sensor).result)" incoming="_18RRd3MaEeeoYuc64YE22w" outgoing="_18RReHMaEeeoYuc64YE22w _18RRiXMaEeeoYuc64YE22w"/>
              </node>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_18RRc3MaEeeoYuc64YE22w" name="Return" incoming="_18RRcnMaEeeoYuc64YE22w" type="_18RSF3MaEeeoYuc64YE22w" parameter="_18RRbnMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ActivityFinalNode" xmi:id="_18RRdHMaEeeoYuc64YE22w" name="Final" incoming="_18RRcXMaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18RRjnMaEeeoYuc64YE22w" name="Monitor$method$1" specification="_18RSEnMaEeeoYuc64YE22w" node="_18RRk3MaEeeoYuc64YE22w _18RRlHMaEeeoYuc64YE22w" group="_18RRlHMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18RRj3MaEeeoYuc64YE22w" name="" type="_18RRaXMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRkHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRkXMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRknMaEeeoYuc64YE22w" target="_18RRk3MaEeeoYuc64YE22w" source="_18RRpXMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_18RRlHMaEeeoYuc64YE22w" name="Body(Monitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRlXMaEeeoYuc64YE22w" target="_18RRpXMaEeeoYuc64YE22w" source="_18RRonMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRlnMaEeeoYuc64YE22w" target="_18RRp3MaEeeoYuc64YE22w" source="_18RRpXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RRl3MaEeeoYuc64YE22w" target="_18RRoHMaEeeoYuc64YE22w" source="_18RRpnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRmHMaEeeoYuc64YE22w" target="_18RRq3MaEeeoYuc64YE22w" source="_18RRpXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRmXMaEeeoYuc64YE22w" target="_18RRsnMaEeeoYuc64YE22w" source="_18RRrnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRmnMaEeeoYuc64YE22w" target="_18RRvnMaEeeoYuc64YE22w" source="_18RRtXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRm3MaEeeoYuc64YE22w" target="_18RRxHMaEeeoYuc64YE22w" source="_18RRuXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RRnHMaEeeoYuc64YE22w" target="_18RRyHMaEeeoYuc64YE22w" source="_18RRx3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRnXMaEeeoYuc64YE22w" target="_18RRyHMaEeeoYuc64YE22w" source="_18RRwXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RRnnMaEeeoYuc64YE22w" target="_18RRpnMaEeeoYuc64YE22w" source="_18RRyHMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RRn3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RRoHMaEeeoYuc64YE22w" name="Body" incoming="_18RRl3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_18RRoXMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_18RRonMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18RRlXMaEeeoYuc64YE22w" type="_18RRaXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRo3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRpHMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18RRpXMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18RRlXMaEeeoYuc64YE22w" outgoing="_18RRknMaEeeoYuc64YE22w _18RRlnMaEeeoYuc64YE22w _18RRmHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_18RRpnMaEeeoYuc64YE22w" name="Call(Monitor$initialization$1)" incoming="_18RRnnMaEeeoYuc64YE22w" outgoing="_18RRl3MaEeeoYuc64YE22w" operation="_18RSDXMaEeeoYuc64YE22w">
              <target xmi:id="_18RRp3MaEeeoYuc64YE22w" name="Call(Monitor$initialization$1).target" incoming="_18RRlnMaEeeoYuc64YE22w" type="_18RRaXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRqHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRqXMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18RRqnMaEeeoYuc64YE22w" name="Read(Monitor$initializationFlag$1)" structuralFeature="_18RRanMaEeeoYuc64YE22w">
              <object xmi:id="_18RRq3MaEeeoYuc64YE22w" name="Read(Monitor$initializationFlag$1).object" incoming="_18RRmHMaEeeoYuc64YE22w" type="_18RRaXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRrHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRrXMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_18RRrnMaEeeoYuc64YE22w" name="Read(Monitor$initializationFlag$1).result" outgoing="_18RRmXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRr3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRsHMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RRsXMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_18RRsnMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18RRmXMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRs3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRtHMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18RRtXMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18RRmnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRtnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRt3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RRuHMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_18RRuXMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18RRm3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRunMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRu3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18RRvHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_18RRvXMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_18RRvnMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18RRmnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRv3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRwHMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_18RRwXMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18RRnXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRwnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRw3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_18RRxHMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18RRm3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RRxXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RRxnMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18RRx3MaEeeoYuc64YE22w" name="InitialNode" outgoing="_18RRnHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18RRyHMaEeeoYuc64YE22w" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_18RRnHMaEeeoYuc64YE22w _18RRnXMaEeeoYuc64YE22w" outgoing="_18RRnnMaEeeoYuc64YE22w" decisionInputFlow="_18RRnXMaEeeoYuc64YE22w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_18RRk3MaEeeoYuc64YE22w" name="Return" incoming="_18RRknMaEeeoYuc64YE22w" type="_18RRaXMaEeeoYuc64YE22w" parameter="_18RRj3MaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18RRyXMaEeeoYuc64YE22w" name="destroy$method$1" specification="_18RSFnMaEeeoYuc64YE22w" node="_18RRynMaEeeoYuc64YE22w" group="_18RRynMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_18RRynMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18RRy3MaEeeoYuc64YE22w" name="Monitor$initialization$1" specification="_18RSDXMaEeeoYuc64YE22w" node="_18RRzHMaEeeoYuc64YE22w" group="_18RRzHMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_18RRzHMaEeeoYuc64YE22w" name="Body(Monitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRzXMaEeeoYuc64YE22w" target="_18RR23MaEeeoYuc64YE22w" source="_18RR2HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRznMaEeeoYuc64YE22w" target="_18RR5XMaEeeoYuc64YE22w" source="_18RR23MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RRz3MaEeeoYuc64YE22w" target="_18RR73MaEeeoYuc64YE22w" source="_18RR23MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RR0HMaEeeoYuc64YE22w" target="_18RR9nMaEeeoYuc64YE22w" source="_18RR8nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RR0XMaEeeoYuc64YE22w" target="_18RSAnMaEeeoYuc64YE22w" source="_18RR-XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RR0nMaEeeoYuc64YE22w" target="_18RSCHMaEeeoYuc64YE22w" source="_18RR_XMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RR03MaEeeoYuc64YE22w" target="_18RSDHMaEeeoYuc64YE22w" source="_18RSC3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RR1HMaEeeoYuc64YE22w" target="_18RSDHMaEeeoYuc64YE22w" source="_18RSBXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RR1XMaEeeoYuc64YE22w" target="_18RR3HMaEeeoYuc64YE22w" source="_18RSDHMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RR1nMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_18RR13MaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_18RR2HMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18RRzXMaEeeoYuc64YE22w" type="_18RRaXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RR2XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RR2nMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18RR23MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18RRzXMaEeeoYuc64YE22w" outgoing="_18RRznMaEeeoYuc64YE22w _18RRz3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RR3HMaEeeoYuc64YE22w" name="Initialization" incoming="_18RR1XMaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RR3XMaEeeoYuc64YE22w" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RR3nMaEeeoYuc64YE22w" target="_18RR63MaEeeoYuc64YE22w" source="_18RR4HMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RR33MaEeeoYuc64YE22w" name="Value(true)">
                  <result xmi:id="_18RR4HMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18RR3nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RR4XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RR4nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_18RR43MaEeeoYuc64YE22w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_18RR5HMaEeeoYuc64YE22w" name="Write(Monitor$initializationFlag$1)" structuralFeature="_18RRanMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_18RR5XMaEeeoYuc64YE22w" name="Write(Monitor$initializationFlag$1).object" incoming="_18RRznMaEeeoYuc64YE22w" type="_18RRaXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RR5nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RR53MaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18RR6HMaEeeoYuc64YE22w" name="Write(Monitor$initializationFlag$1).result" type="_18RRaXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RR6XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RR6nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_18RR63MaEeeoYuc64YE22w" name="Write(Monitor$initializationFlag$1).value" incoming="_18RR3nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RR7HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RR7XMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18RR7nMaEeeoYuc64YE22w" name="Read(Monitor$initializationFlag$1)" structuralFeature="_18RRanMaEeeoYuc64YE22w">
              <object xmi:id="_18RR73MaEeeoYuc64YE22w" name="Read(Monitor$initializationFlag$1).object" incoming="_18RRz3MaEeeoYuc64YE22w" type="_18RRaXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RR8HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RR8XMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_18RR8nMaEeeoYuc64YE22w" name="Read(Monitor$initializationFlag$1).result" outgoing="_18RR0HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RR83MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RR9HMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RR9XMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_18RR9nMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18RR0HMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RR93MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RR-HMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18RR-XMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18RR0XMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RR-nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RR-3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RR_HMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_18RR_XMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18RR0nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RR_nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RR_3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18RSAHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_18RSAXMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_18RSAnMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18RR0XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSA3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSBHMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_18RSBXMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18RR1HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSBnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSB3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_18RSCHMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18RR0nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSCXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSCnMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18RSC3MaEeeoYuc64YE22w" name="InitialNode" outgoing="_18RR03MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18RSDHMaEeeoYuc64YE22w" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_18RR03MaEeeoYuc64YE22w _18RR1HMaEeeoYuc64YE22w" outgoing="_18RR1XMaEeeoYuc64YE22w" decisionInputFlow="_18RR1HMaEeeoYuc64YE22w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_18RSDXMaEeeoYuc64YE22w" name="Monitor$initialization$1" visibility="protected" method="_18RRy3MaEeeoYuc64YE22w"/>
        <ownedOperation xmi:id="_18RSDnMaEeeoYuc64YE22w" name="getActiveSensor" visibility="public" method="_18RRbXMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18RSD3MaEeeoYuc64YE22w" name="" visibility="package" type="_18RSF3MaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSEHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSEXMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_18RSEnMaEeeoYuc64YE22w" name="Monitor" visibility="public" method="_18RRjnMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18RSE3MaEeeoYuc64YE22w" name="" visibility="package" type="_18RRaXMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSFHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSFXMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_18RSFnMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_18RRyXMaEeeoYuc64YE22w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_18RSF3MaEeeoYuc64YE22w" name="Sensor" visibility="package">
        <ownedAttribute xmi:id="_18RSGHMaEeeoYuc64YE22w" name="Sensor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSGXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSGnMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18RSG3MaEeeoYuc64YE22w" name="Sensor$method$1" specification="_18RSrnMaEeeoYuc64YE22w" node="_18RSIHMaEeeoYuc64YE22w _18RSIXMaEeeoYuc64YE22w" group="_18RSIXMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18RSHHMaEeeoYuc64YE22w" name="" type="_18RSF3MaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSHXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSHnMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSH3MaEeeoYuc64YE22w" target="_18RSIHMaEeeoYuc64YE22w" source="_18RSMnMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_18RSIXMaEeeoYuc64YE22w" name="Body(Sensor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSInMaEeeoYuc64YE22w" target="_18RSMnMaEeeoYuc64YE22w" source="_18RSL3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSI3MaEeeoYuc64YE22w" target="_18RSNHMaEeeoYuc64YE22w" source="_18RSMnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RSJHMaEeeoYuc64YE22w" target="_18RSLXMaEeeoYuc64YE22w" source="_18RSM3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSJXMaEeeoYuc64YE22w" target="_18RSOHMaEeeoYuc64YE22w" source="_18RSMnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSJnMaEeeoYuc64YE22w" target="_18RSP3MaEeeoYuc64YE22w" source="_18RSO3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSJ3MaEeeoYuc64YE22w" target="_18RSS3MaEeeoYuc64YE22w" source="_18RSQnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSKHMaEeeoYuc64YE22w" target="_18RSUXMaEeeoYuc64YE22w" source="_18RSRnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RSKXMaEeeoYuc64YE22w" target="_18RSVXMaEeeoYuc64YE22w" source="_18RSVHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSKnMaEeeoYuc64YE22w" target="_18RSVXMaEeeoYuc64YE22w" source="_18RSTnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RSK3MaEeeoYuc64YE22w" target="_18RSM3MaEeeoYuc64YE22w" source="_18RSVXMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RSLHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RSLXMaEeeoYuc64YE22w" name="Body" incoming="_18RSJHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_18RSLnMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_18RSL3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18RSInMaEeeoYuc64YE22w" type="_18RSF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSMHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSMXMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18RSMnMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18RSInMaEeeoYuc64YE22w" outgoing="_18RSH3MaEeeoYuc64YE22w _18RSI3MaEeeoYuc64YE22w _18RSJXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_18RSM3MaEeeoYuc64YE22w" name="Call(Sensor$initialization$1)" incoming="_18RSK3MaEeeoYuc64YE22w" outgoing="_18RSJHMaEeeoYuc64YE22w" operation="_18RSrXMaEeeoYuc64YE22w">
              <target xmi:id="_18RSNHMaEeeoYuc64YE22w" name="Call(Sensor$initialization$1).target" incoming="_18RSI3MaEeeoYuc64YE22w" type="_18RSF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSNXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSNnMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18RSN3MaEeeoYuc64YE22w" name="Read(Sensor$initializationFlag$1)" structuralFeature="_18RSGHMaEeeoYuc64YE22w">
              <object xmi:id="_18RSOHMaEeeoYuc64YE22w" name="Read(Sensor$initializationFlag$1).object" incoming="_18RSJXMaEeeoYuc64YE22w" type="_18RSF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSOXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSOnMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_18RSO3MaEeeoYuc64YE22w" name="Read(Sensor$initializationFlag$1).result" outgoing="_18RSJnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSPHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSPXMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RSPnMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_18RSP3MaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18RSJnMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSQHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSQXMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18RSQnMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18RSJ3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSQ3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSRHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RSRXMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_18RSRnMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18RSKHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSR3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSSHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18RSSXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_18RSSnMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_18RSS3MaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18RSJ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSTHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSTXMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_18RSTnMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18RSKnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RST3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSUHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_18RSUXMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18RSKHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSUnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSU3MaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18RSVHMaEeeoYuc64YE22w" name="InitialNode" outgoing="_18RSKXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18RSVXMaEeeoYuc64YE22w" name="Decision(Test(Sensor$initializationFlag$1))" incoming="_18RSKXMaEeeoYuc64YE22w _18RSKnMaEeeoYuc64YE22w" outgoing="_18RSK3MaEeeoYuc64YE22w" decisionInputFlow="_18RSKnMaEeeoYuc64YE22w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_18RSIHMaEeeoYuc64YE22w" name="Return" incoming="_18RSH3MaEeeoYuc64YE22w" type="_18RSF3MaEeeoYuc64YE22w" parameter="_18RSHHMaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18RSVnMaEeeoYuc64YE22w" name="getReading$method$1" specification="_18RSsnMaEeeoYuc64YE22w" node="_18RSXHMaEeeoYuc64YE22w _18RSXXMaEeeoYuc64YE22w _18RSXnMaEeeoYuc64YE22w" group="_18RSXnMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18RSV3MaEeeoYuc64YE22w" name="" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSWHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSWXMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18RSWnMaEeeoYuc64YE22w" target="_18RSXXMaEeeoYuc64YE22w" source="_18RSX3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSW3MaEeeoYuc64YE22w" target="_18RSXHMaEeeoYuc64YE22w" source="_18RSYXMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_18RSXnMaEeeoYuc64YE22w" name="Body(getReading$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RSX3MaEeeoYuc64YE22w" name="ReturnStatement@66784681" outgoing="_18RSWnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSYHMaEeeoYuc64YE22w" target="_18RSYXMaEeeoYuc64YE22w" source="_18RSZXMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18RSYXMaEeeoYuc64YE22w" name="ReturnStatement@66784681.output" incoming="_18RSYHMaEeeoYuc64YE22w" outgoing="_18RSW3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSYnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSY3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RSZHMaEeeoYuc64YE22w" name="Value(2)">
                <result xmi:id="_18RSZXMaEeeoYuc64YE22w" name="Value(2).result" outgoing="_18RSYHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSZnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSZ3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18RSaHMaEeeoYuc64YE22w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_18RSXHMaEeeoYuc64YE22w" name="Return" incoming="_18RSW3MaEeeoYuc64YE22w" parameter="_18RSV3MaEeeoYuc64YE22w">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </node>
          <node xmi:type="uml:ActivityFinalNode" xmi:id="_18RSXXMaEeeoYuc64YE22w" name="Final" incoming="_18RSWnMaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18RSaXMaEeeoYuc64YE22w" name="destroy$method$1" specification="_18RStnMaEeeoYuc64YE22w" node="_18RSanMaEeeoYuc64YE22w" group="_18RSanMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_18RSanMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18RSa3MaEeeoYuc64YE22w" name="Sensor$initialization$1" specification="_18RSrXMaEeeoYuc64YE22w" node="_18RSbHMaEeeoYuc64YE22w" group="_18RSbHMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_18RSbHMaEeeoYuc64YE22w" name="Body(Sensor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSbXMaEeeoYuc64YE22w" target="_18RSe3MaEeeoYuc64YE22w" source="_18RSeHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSbnMaEeeoYuc64YE22w" target="_18RShXMaEeeoYuc64YE22w" source="_18RSe3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSb3MaEeeoYuc64YE22w" target="_18RSj3MaEeeoYuc64YE22w" source="_18RSe3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RScHMaEeeoYuc64YE22w" target="_18RSlnMaEeeoYuc64YE22w" source="_18RSknMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RScXMaEeeoYuc64YE22w" target="_18RSonMaEeeoYuc64YE22w" source="_18RSmXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RScnMaEeeoYuc64YE22w" target="_18RSqHMaEeeoYuc64YE22w" source="_18RSnXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RSc3MaEeeoYuc64YE22w" target="_18RSrHMaEeeoYuc64YE22w" source="_18RSq3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSdHMaEeeoYuc64YE22w" target="_18RSrHMaEeeoYuc64YE22w" source="_18RSpXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RSdXMaEeeoYuc64YE22w" target="_18RSfHMaEeeoYuc64YE22w" source="_18RSrHMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RSdnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_18RSd3MaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_18RSeHMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18RSbXMaEeeoYuc64YE22w" type="_18RSF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSeXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSenMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18RSe3MaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18RSbXMaEeeoYuc64YE22w" outgoing="_18RSbnMaEeeoYuc64YE22w _18RSb3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RSfHMaEeeoYuc64YE22w" name="Initialization" incoming="_18RSdXMaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RSfXMaEeeoYuc64YE22w" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSfnMaEeeoYuc64YE22w" target="_18RSi3MaEeeoYuc64YE22w" source="_18RSgHMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RSf3MaEeeoYuc64YE22w" name="Value(true)">
                  <result xmi:id="_18RSgHMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18RSfnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSgXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSgnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_18RSg3MaEeeoYuc64YE22w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_18RShHMaEeeoYuc64YE22w" name="Write(Sensor$initializationFlag$1)" structuralFeature="_18RSGHMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_18RShXMaEeeoYuc64YE22w" name="Write(Sensor$initializationFlag$1).object" incoming="_18RSbnMaEeeoYuc64YE22w" type="_18RSF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RShnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSh3MaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18RSiHMaEeeoYuc64YE22w" name="Write(Sensor$initializationFlag$1).result" type="_18RSF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSiXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSinMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_18RSi3MaEeeoYuc64YE22w" name="Write(Sensor$initializationFlag$1).value" incoming="_18RSfnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSjHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSjXMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18RSjnMaEeeoYuc64YE22w" name="Read(Sensor$initializationFlag$1)" structuralFeature="_18RSGHMaEeeoYuc64YE22w">
              <object xmi:id="_18RSj3MaEeeoYuc64YE22w" name="Read(Sensor$initializationFlag$1).object" incoming="_18RSb3MaEeeoYuc64YE22w" type="_18RSF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSkHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSkXMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_18RSknMaEeeoYuc64YE22w" name="Read(Sensor$initializationFlag$1).result" outgoing="_18RScHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSk3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSlHMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RSlXMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_18RSlnMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18RScHMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSl3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSmHMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18RSmXMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18RScXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSmnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSm3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RSnHMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_18RSnXMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18RScnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSnnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSn3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18RSoHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_18RSoXMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_18RSonMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18RScXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSo3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSpHMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_18RSpXMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18RSdHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSpnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSp3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_18RSqHMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18RScnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSqXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSqnMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18RSq3MaEeeoYuc64YE22w" name="InitialNode" outgoing="_18RSc3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18RSrHMaEeeoYuc64YE22w" name="Decision(Test(Sensor$initializationFlag$1))" incoming="_18RSc3MaEeeoYuc64YE22w _18RSdHMaEeeoYuc64YE22w" outgoing="_18RSdXMaEeeoYuc64YE22w" decisionInputFlow="_18RSdHMaEeeoYuc64YE22w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_18RSrXMaEeeoYuc64YE22w" name="Sensor$initialization$1" visibility="protected" method="_18RSa3MaEeeoYuc64YE22w"/>
        <ownedOperation xmi:id="_18RSrnMaEeeoYuc64YE22w" name="Sensor" visibility="public" method="_18RSG3MaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18RSr3MaEeeoYuc64YE22w" name="" visibility="package" type="_18RSF3MaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSsHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSsXMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_18RSsnMaEeeoYuc64YE22w" name="getReading" visibility="public" method="_18RSVnMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18RSs3MaEeeoYuc64YE22w" name="" visibility="package" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RStHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RStXMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_18RStnMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_18RSaXMaEeeoYuc64YE22w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_18RSt3MaEeeoYuc64YE22w" name="Person" visibility="package">
        <ownedAttribute xmi:id="_18RSuHMaEeeoYuc64YE22w" name="Person$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSuXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSunMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18RSu3MaEeeoYuc64YE22w" name="Person$method$1" specification="_18R1w3MaEeeoYuc64YE22w" node="_18RSwHMaEeeoYuc64YE22w _18RSwXMaEeeoYuc64YE22w" group="_18RSwXMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18RSvHMaEeeoYuc64YE22w" name="" type="_18RSt3MaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RSvXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RSvnMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSv3MaEeeoYuc64YE22w" target="_18RSwHMaEeeoYuc64YE22w" source="_18RS0nMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_18RSwXMaEeeoYuc64YE22w" name="Body(Person$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSwnMaEeeoYuc64YE22w" target="_18RS0nMaEeeoYuc64YE22w" source="_18RSz3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSw3MaEeeoYuc64YE22w" target="_18RS1HMaEeeoYuc64YE22w" source="_18RS0nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RSxHMaEeeoYuc64YE22w" target="_18RSzXMaEeeoYuc64YE22w" source="_18RS03MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSxXMaEeeoYuc64YE22w" target="_18RS2HMaEeeoYuc64YE22w" source="_18RS0nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSxnMaEeeoYuc64YE22w" target="_18RS33MaEeeoYuc64YE22w" source="_18RS23MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSx3MaEeeoYuc64YE22w" target="_18RS63MaEeeoYuc64YE22w" source="_18RS4nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSyHMaEeeoYuc64YE22w" target="_18RS8XMaEeeoYuc64YE22w" source="_18RS5nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RSyXMaEeeoYuc64YE22w" target="_18RS9XMaEeeoYuc64YE22w" source="_18RS9HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RSynMaEeeoYuc64YE22w" target="_18RS9XMaEeeoYuc64YE22w" source="_18RS7nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RSy3MaEeeoYuc64YE22w" target="_18RS03MaEeeoYuc64YE22w" source="_18RS9XMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RSzHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18RSzXMaEeeoYuc64YE22w" name="Body" incoming="_18RSxHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_18RSznMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_18RSz3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18RSwnMaEeeoYuc64YE22w" type="_18RSt3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RS0HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RS0XMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18RS0nMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18RSwnMaEeeoYuc64YE22w" outgoing="_18RSv3MaEeeoYuc64YE22w _18RSw3MaEeeoYuc64YE22w _18RSxXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_18RS03MaEeeoYuc64YE22w" name="Call(Person$initialization$1)" incoming="_18RSy3MaEeeoYuc64YE22w" outgoing="_18RSxHMaEeeoYuc64YE22w" operation="_18R1wnMaEeeoYuc64YE22w">
              <target xmi:id="_18RS1HMaEeeoYuc64YE22w" name="Call(Person$initialization$1).target" incoming="_18RSw3MaEeeoYuc64YE22w" type="_18RSt3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RS1XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RS1nMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18RS13MaEeeoYuc64YE22w" name="Read(Person$initializationFlag$1)" structuralFeature="_18RSuHMaEeeoYuc64YE22w">
              <object xmi:id="_18RS2HMaEeeoYuc64YE22w" name="Read(Person$initializationFlag$1).object" incoming="_18RSxXMaEeeoYuc64YE22w" type="_18RSt3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RS2XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RS2nMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_18RS23MaEeeoYuc64YE22w" name="Read(Person$initializationFlag$1).result" outgoing="_18RSxnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RS3HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RS3XMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18RS3nMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_18RS33MaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18RSxnMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RS4HMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RS4XMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18RS4nMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18RSx3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RS43MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RS5HMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18RS5XMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_18RS5nMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18RSyHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RS53MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RS6HMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18RS6XMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_18RS6nMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_18RS63MaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18RSx3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RS7HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RS7XMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_18RS7nMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18RSynMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RS73MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RS8HMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_18RS8XMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18RSyHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RS8nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RS83MaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18RS9HMaEeeoYuc64YE22w" name="InitialNode" outgoing="_18RSyXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18RS9XMaEeeoYuc64YE22w" name="Decision(Test(Person$initializationFlag$1))" incoming="_18RSyXMaEeeoYuc64YE22w _18RSynMaEeeoYuc64YE22w" outgoing="_18RSy3MaEeeoYuc64YE22w" decisionInputFlow="_18RSynMaEeeoYuc64YE22w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_18RSwHMaEeeoYuc64YE22w" name="Return" incoming="_18RSv3MaEeeoYuc64YE22w" type="_18RSt3MaEeeoYuc64YE22w" parameter="_18RSvHMaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18RS9nMaEeeoYuc64YE22w" name="destroy$method$1" specification="_18R1x3MaEeeoYuc64YE22w" node="_18RS93MaEeeoYuc64YE22w" group="_18RS93MaEeeoYuc64YE22w">
          <structuredNode xmi:id="_18RS93MaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18RS-HMaEeeoYuc64YE22w" name="Person$initialization$1" specification="_18R1wnMaEeeoYuc64YE22w" node="_18RS-XMaEeeoYuc64YE22w" group="_18RS-XMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_18RS-XMaEeeoYuc64YE22w" name="Body(Person$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RS-nMaEeeoYuc64YE22w" target="_18R1kHMaEeeoYuc64YE22w" source="_18RTBXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RS-3MaEeeoYuc64YE22w" target="_18R1mnMaEeeoYuc64YE22w" source="_18R1kHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RS_HMaEeeoYuc64YE22w" target="_18R1pHMaEeeoYuc64YE22w" source="_18R1kHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RS_XMaEeeoYuc64YE22w" target="_18R1q3MaEeeoYuc64YE22w" source="_18R1p3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RS_nMaEeeoYuc64YE22w" target="_18R1t3MaEeeoYuc64YE22w" source="_18R1rnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RS_3MaEeeoYuc64YE22w" target="_18R1vXMaEeeoYuc64YE22w" source="_18R1snMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RTAHMaEeeoYuc64YE22w" target="_18R1wXMaEeeoYuc64YE22w" source="_18R1wHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18RTAXMaEeeoYuc64YE22w" target="_18R1wXMaEeeoYuc64YE22w" source="_18R1unMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18RTAnMaEeeoYuc64YE22w" target="_18R1kXMaEeeoYuc64YE22w" source="_18R1wXMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18RTA3MaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_18RTBHMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_18RTBXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18RS-nMaEeeoYuc64YE22w" type="_18RSt3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18RTBnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18RTB3MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18R1kHMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18RS-nMaEeeoYuc64YE22w" outgoing="_18RS-3MaEeeoYuc64YE22w _18RS_HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R1kXMaEeeoYuc64YE22w" name="Initialization" incoming="_18RTAnMaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R1knMaEeeoYuc64YE22w" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R1k3MaEeeoYuc64YE22w" target="_18R1oHMaEeeoYuc64YE22w" source="_18R1lXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R1lHMaEeeoYuc64YE22w" name="Value(true)">
                  <result xmi:id="_18R1lXMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18R1k3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1lnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1l3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_18R1mHMaEeeoYuc64YE22w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_18R1mXMaEeeoYuc64YE22w" name="Write(Person$initializationFlag$1)" structuralFeature="_18RSuHMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_18R1mnMaEeeoYuc64YE22w" name="Write(Person$initializationFlag$1).object" incoming="_18RS-3MaEeeoYuc64YE22w" type="_18RSt3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1m3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1nHMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18R1nXMaEeeoYuc64YE22w" name="Write(Person$initializationFlag$1).result" type="_18RSt3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1nnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1n3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_18R1oHMaEeeoYuc64YE22w" name="Write(Person$initializationFlag$1).value" incoming="_18R1k3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1oXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1onMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18R1o3MaEeeoYuc64YE22w" name="Read(Person$initializationFlag$1)" structuralFeature="_18RSuHMaEeeoYuc64YE22w">
              <object xmi:id="_18R1pHMaEeeoYuc64YE22w" name="Read(Person$initializationFlag$1).object" incoming="_18RS_HMaEeeoYuc64YE22w" type="_18RSt3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1pXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1pnMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_18R1p3MaEeeoYuc64YE22w" name="Read(Person$initializationFlag$1).result" outgoing="_18RS_XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1qHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1qXMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R1qnMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_18R1q3MaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18RS_XMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1rHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1rXMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18R1rnMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18RS_nMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1r3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1sHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R1sXMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_18R1snMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18RS_3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1s3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1tHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18R1tXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_18R1tnMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_18R1t3MaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18RS_nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1uHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1uXMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_18R1unMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18RTAXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1u3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1vHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_18R1vXMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18RS_3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1vnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1v3MaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18R1wHMaEeeoYuc64YE22w" name="InitialNode" outgoing="_18RTAHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18R1wXMaEeeoYuc64YE22w" name="Decision(Test(Person$initializationFlag$1))" incoming="_18RTAHMaEeeoYuc64YE22w _18RTAXMaEeeoYuc64YE22w" outgoing="_18RTAnMaEeeoYuc64YE22w" decisionInputFlow="_18RTAXMaEeeoYuc64YE22w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_18R1wnMaEeeoYuc64YE22w" name="Person$initialization$1" visibility="protected" method="_18RS-HMaEeeoYuc64YE22w"/>
        <ownedOperation xmi:id="_18R1w3MaEeeoYuc64YE22w" name="Person" visibility="public" method="_18RSu3MaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18R1xHMaEeeoYuc64YE22w" name="" visibility="package" type="_18RSt3MaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1xXMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1xnMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_18R1x3MaEeeoYuc64YE22w" name="destroy" visibility="public" method="_18RS9nMaEeeoYuc64YE22w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_18R1yHMaEeeoYuc64YE22w" name="Employee" visibility="package">
        <generalization xmi:id="_18R1yXMaEeeoYuc64YE22w" general="_18RSt3MaEeeoYuc64YE22w"/>
        <ownedAttribute xmi:id="_18R1ynMaEeeoYuc64YE22w" name="Employee$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1y3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1zHMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_18R1zXMaEeeoYuc64YE22w" name="id" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1znMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1z3MaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_18R10HMaEeeoYuc64YE22w" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R10XMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R10nMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18R103MaEeeoYuc64YE22w" name="Employee$method$1" specification="_18R2WXMaEeeoYuc64YE22w" node="_18R12HMaEeeoYuc64YE22w _18R12XMaEeeoYuc64YE22w" group="_18R12XMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18R11HMaEeeoYuc64YE22w" name="" type="_18R1yHMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R11XMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R11nMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R113MaEeeoYuc64YE22w" target="_18R12HMaEeeoYuc64YE22w" source="_18R16nMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_18R12XMaEeeoYuc64YE22w" name="Body(Employee$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R12nMaEeeoYuc64YE22w" target="_18R16nMaEeeoYuc64YE22w" source="_18R153MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R123MaEeeoYuc64YE22w" target="_18R17HMaEeeoYuc64YE22w" source="_18R16nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R13HMaEeeoYuc64YE22w" target="_18R15XMaEeeoYuc64YE22w" source="_18R163MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R13XMaEeeoYuc64YE22w" target="_18R18HMaEeeoYuc64YE22w" source="_18R16nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R13nMaEeeoYuc64YE22w" target="_18R193MaEeeoYuc64YE22w" source="_18R183MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R133MaEeeoYuc64YE22w" target="_18R2A3MaEeeoYuc64YE22w" source="_18R1-nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R14HMaEeeoYuc64YE22w" target="_18R2CXMaEeeoYuc64YE22w" source="_18R1_nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R14XMaEeeoYuc64YE22w" target="_18R2DXMaEeeoYuc64YE22w" source="_18R2DHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R14nMaEeeoYuc64YE22w" target="_18R2DXMaEeeoYuc64YE22w" source="_18R2BnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R143MaEeeoYuc64YE22w" target="_18R163MaEeeoYuc64YE22w" source="_18R2DXMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R15HMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R15XMaEeeoYuc64YE22w" name="Body" incoming="_18R13HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_18R15nMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_18R153MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18R12nMaEeeoYuc64YE22w" type="_18R1yHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R16HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R16XMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18R16nMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18R12nMaEeeoYuc64YE22w" outgoing="_18R113MaEeeoYuc64YE22w _18R123MaEeeoYuc64YE22w _18R13XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_18R163MaEeeoYuc64YE22w" name="Call(Employee$initialization$1)" incoming="_18R143MaEeeoYuc64YE22w" outgoing="_18R13HMaEeeoYuc64YE22w" operation="_18R2WHMaEeeoYuc64YE22w">
              <target xmi:id="_18R17HMaEeeoYuc64YE22w" name="Call(Employee$initialization$1).target" incoming="_18R123MaEeeoYuc64YE22w" type="_18R1yHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R17XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R17nMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18R173MaEeeoYuc64YE22w" name="Read(Employee$initializationFlag$1)" structuralFeature="_18R1ynMaEeeoYuc64YE22w">
              <object xmi:id="_18R18HMaEeeoYuc64YE22w" name="Read(Employee$initializationFlag$1).object" incoming="_18R13XMaEeeoYuc64YE22w" type="_18R1yHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R18XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R18nMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_18R183MaEeeoYuc64YE22w" name="Read(Employee$initializationFlag$1).result" outgoing="_18R13nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R19HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R19XMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R19nMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_18R193MaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18R13nMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1-HMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1-XMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18R1-nMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18R133MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1-3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R1_HMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R1_XMaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_18R1_nMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18R14HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R1_3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2AHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18R2AXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_18R2AnMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_18R2A3MaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18R133MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2BHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2BXMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_18R2BnMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18R14nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2B3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2CHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_18R2CXMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18R14HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2CnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2C3MaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18R2DHMaEeeoYuc64YE22w" name="InitialNode" outgoing="_18R14XMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18R2DXMaEeeoYuc64YE22w" name="Decision(Test(Employee$initializationFlag$1))" incoming="_18R14XMaEeeoYuc64YE22w _18R14nMaEeeoYuc64YE22w" outgoing="_18R143MaEeeoYuc64YE22w" decisionInputFlow="_18R14nMaEeeoYuc64YE22w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_18R12HMaEeeoYuc64YE22w" name="Return" incoming="_18R113MaEeeoYuc64YE22w" type="_18R1yHMaEeeoYuc64YE22w" parameter="_18R11HMaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18R2DnMaEeeoYuc64YE22w" name="destroy$method$1" specification="_18R2XXMaEeeoYuc64YE22w" node="_18R2D3MaEeeoYuc64YE22w" group="_18R2D3MaEeeoYuc64YE22w">
          <structuredNode xmi:id="_18R2D3MaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18R2EHMaEeeoYuc64YE22w" name="Employee$initialization$1" specification="_18R2WHMaEeeoYuc64YE22w" node="_18R2EXMaEeeoYuc64YE22w" group="_18R2EXMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_18R2EXMaEeeoYuc64YE22w" name="Body(Employee$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2EnMaEeeoYuc64YE22w" target="_18R2IXMaEeeoYuc64YE22w" source="_18R2HnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2E3MaEeeoYuc64YE22w" target="_18R2JXMaEeeoYuc64YE22w" source="_18R2IXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2FHMaEeeoYuc64YE22w" target="_18R2MHMaEeeoYuc64YE22w" source="_18R2IXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2FXMaEeeoYuc64YE22w" target="_18R2OnMaEeeoYuc64YE22w" source="_18R2IXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2FnMaEeeoYuc64YE22w" target="_18R2QXMaEeeoYuc64YE22w" source="_18R2PXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2F3MaEeeoYuc64YE22w" target="_18R2TXMaEeeoYuc64YE22w" source="_18R2RHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2GHMaEeeoYuc64YE22w" target="_18R2U3MaEeeoYuc64YE22w" source="_18R2SHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R2GXMaEeeoYuc64YE22w" target="_18R2V3MaEeeoYuc64YE22w" source="_18R2VnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2GnMaEeeoYuc64YE22w" target="_18R2V3MaEeeoYuc64YE22w" source="_18R2UHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R2G3MaEeeoYuc64YE22w" target="_18R2InMaEeeoYuc64YE22w" source="_18R2V3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R2HHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_18R2HXMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_18R2HnMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18R2EnMaEeeoYuc64YE22w" type="_18R1yHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2H3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2IHMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18R2IXMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18R2EnMaEeeoYuc64YE22w" outgoing="_18R2E3MaEeeoYuc64YE22w _18R2FHMaEeeoYuc64YE22w _18R2FXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R2InMaEeeoYuc64YE22w" name="Initialization" incoming="_18R2G3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ControlFlow" xmi:id="_18R2I3MaEeeoYuc64YE22w" target="_18R2KHMaEeeoYuc64YE22w" source="_18R2JHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_18R2JHMaEeeoYuc64YE22w" name="Call(Person$initialization$1)" outgoing="_18R2I3MaEeeoYuc64YE22w" operation="_18R1wnMaEeeoYuc64YE22w">
                <target xmi:id="_18R2JXMaEeeoYuc64YE22w" name="Call(Person$initialization$1).target" incoming="_18R2E3MaEeeoYuc64YE22w" type="_18RSt3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2JnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2J3MaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R2KHMaEeeoYuc64YE22w" name="Set(initializationFlag)" incoming="_18R2I3MaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2KXMaEeeoYuc64YE22w" target="_18R2NnMaEeeoYuc64YE22w" source="_18R2K3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R2KnMaEeeoYuc64YE22w" name="Value(true)">
                  <result xmi:id="_18R2K3MaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18R2KXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2LHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2LXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_18R2LnMaEeeoYuc64YE22w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_18R2L3MaEeeoYuc64YE22w" name="Write(Employee$initializationFlag$1)" structuralFeature="_18R1ynMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_18R2MHMaEeeoYuc64YE22w" name="Write(Employee$initializationFlag$1).object" incoming="_18R2FHMaEeeoYuc64YE22w" type="_18R1yHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2MXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2MnMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18R2M3MaEeeoYuc64YE22w" name="Write(Employee$initializationFlag$1).result" type="_18R1yHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2NHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2NXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_18R2NnMaEeeoYuc64YE22w" name="Write(Employee$initializationFlag$1).value" incoming="_18R2KXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2N3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2OHMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18R2OXMaEeeoYuc64YE22w" name="Read(Employee$initializationFlag$1)" structuralFeature="_18R1ynMaEeeoYuc64YE22w">
              <object xmi:id="_18R2OnMaEeeoYuc64YE22w" name="Read(Employee$initializationFlag$1).object" incoming="_18R2FXMaEeeoYuc64YE22w" type="_18R1yHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2O3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2PHMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_18R2PXMaEeeoYuc64YE22w" name="Read(Employee$initializationFlag$1).result" outgoing="_18R2FnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2PnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2P3MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R2QHMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_18R2QXMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18R2FnMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2QnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2Q3MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18R2RHMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18R2F3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2RXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2RnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R2R3MaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_18R2SHMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18R2GHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2SXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2SnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18R2S3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_18R2THMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_18R2TXMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18R2F3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2TnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2T3MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_18R2UHMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18R2GnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2UXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2UnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_18R2U3MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18R2GHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2VHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2VXMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18R2VnMaEeeoYuc64YE22w" name="InitialNode" outgoing="_18R2GXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18R2V3MaEeeoYuc64YE22w" name="Decision(Test(Employee$initializationFlag$1))" incoming="_18R2GXMaEeeoYuc64YE22w _18R2GnMaEeeoYuc64YE22w" outgoing="_18R2G3MaEeeoYuc64YE22w" decisionInputFlow="_18R2GnMaEeeoYuc64YE22w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_18R2WHMaEeeoYuc64YE22w" name="Employee$initialization$1" visibility="protected" method="_18R2EHMaEeeoYuc64YE22w"/>
        <ownedOperation xmi:id="_18R2WXMaEeeoYuc64YE22w" name="Employee" visibility="public" method="_18R103MaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18R2WnMaEeeoYuc64YE22w" name="" visibility="package" type="_18R1yHMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2W3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2XHMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_18R2XXMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_18R2DnMaEeeoYuc64YE22w" redefinedOperation="_18R1x3MaEeeoYuc64YE22w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Activity" xmi:id="_18R2XnMaEeeoYuc64YE22w" name="Nothing" visibility="package" node="_18R2X3MaEeeoYuc64YE22w" group="_18R2X3MaEeeoYuc64YE22w">
        <structuredNode xmi:id="_18R2X3MaEeeoYuc64YE22w" name="Body(Nothing)"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_18R2YHMaEeeoYuc64YE22w" name="Test" visibility="public" isAbstract="true">
      <packageImport xmi:id="_18R2YXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_18R2YnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_18R2Y3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_18R2ZHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_18R2ZXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_18R2ZnMaEeeoYuc64YE22w" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2Z3MaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2aHMaEeeoYuc64YE22w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_18R2aXMaEeeoYuc64YE22w" name="tester" visibility="private" type="_18R3WXMaEeeoYuc64YE22w">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2anMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2a3MaEeeoYuc64YE22w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_18R2bHMaEeeoYuc64YE22w" name="destroy$method$1" specification="_18R3UHMaEeeoYuc64YE22w" node="_18R2bXMaEeeoYuc64YE22w" group="_18R2bXMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_18R2bXMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_18R2bnMaEeeoYuc64YE22w" name="done$method$1" specification="_18R3UXMaEeeoYuc64YE22w" node="_18R2b3MaEeeoYuc64YE22w" group="_18R2b3MaEeeoYuc64YE22w">
        <structuredNode xmi:id="_18R2b3MaEeeoYuc64YE22w" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_18R2cHMaEeeoYuc64YE22w" target="_18R2gXMaEeeoYuc64YE22w" source="_18R2cXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R2cXMaEeeoYuc64YE22w" name="ExpressionStatement@7317d0ee" outgoing="_18R2cHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2cnMaEeeoYuc64YE22w" target="_18R2dXMaEeeoYuc64YE22w" source="_18R2fXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R2c3MaEeeoYuc64YE22w" target="_18R2dHMaEeeoYuc64YE22w" source="_18R2e3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R2dHMaEeeoYuc64YE22w" name="Call(WriteLine)" incoming="_18R2c3MaEeeoYuc64YE22w">
              <argument xmi:id="_18R2dXMaEeeoYuc64YE22w" name="Call(WriteLine).argument(value)" incoming="_18R2cnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2dnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2d3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_18R2eHMaEeeoYuc64YE22w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2eXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2enMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R2e3MaEeeoYuc64YE22w" name="Tuple@36776af9" outgoing="_18R2c3MaEeeoYuc64YE22w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R2fHMaEeeoYuc64YE22w" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_18R2fXMaEeeoYuc64YE22w" name="Value(&quot;Done.&quot;).result" outgoing="_18R2cnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2fnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2f3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_18R2gHMaEeeoYuc64YE22w" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R2gXMaEeeoYuc64YE22w" name="ExpressionStatement@319e49d5" incoming="_18R2cHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2gnMaEeeoYuc64YE22w" target="_18R2inMaEeeoYuc64YE22w" source="_18R2lnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R2g3MaEeeoYuc64YE22w" target="_18R2hHMaEeeoYuc64YE22w" source="_18R2i3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_18R2hHMaEeeoYuc64YE22w" name="Collect(SendSignal(Continue))" incoming="_18R2g3MaEeeoYuc64YE22w" mode="parallel" inputElement="_18R2inMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2hXMaEeeoYuc64YE22w" target="_18R2h3MaEeeoYuc64YE22w" source="_18R2inMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_18R2hnMaEeeoYuc64YE22w" name="SendSignal(Continue)" signal="_18R34nMaEeeoYuc64YE22w">
                <target xmi:id="_18R2h3MaEeeoYuc64YE22w" name="SendSignal(Continue).target" incoming="_18R2hXMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2iHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2iXMaEeeoYuc64YE22w" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_18R2inMaEeeoYuc64YE22w" name="Collect(SendSignal(Continue)).inputElement" incoming="_18R2gnMaEeeoYuc64YE22w" outgoing="_18R2hXMaEeeoYuc64YE22w" regionAsInput="_18R2hHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R2i3MaEeeoYuc64YE22w" name="Feature(Read(tester).result)" outgoing="_18R2g3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2jHMaEeeoYuc64YE22w" target="_18R2mXMaEeeoYuc64YE22w" source="_18R2j3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2jXMaEeeoYuc64YE22w" target="_18R2k3MaEeeoYuc64YE22w" source="_18R2mXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_18R2jnMaEeeoYuc64YE22w" name="ReadSelf">
                <result xmi:id="_18R2j3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18R2jHMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2kHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2kXMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18R2knMaEeeoYuc64YE22w" name="Read(tester)" structuralFeature="_18R2aXMaEeeoYuc64YE22w">
                <object xmi:id="_18R2k3MaEeeoYuc64YE22w" name="Read(tester).object" incoming="_18R2jXMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2lHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2lXMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_18R2lnMaEeeoYuc64YE22w" name="Read(tester).result" outgoing="_18R2gnMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2l3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2mHMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_18R2mXMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18R2jHMaEeeoYuc64YE22w" outgoing="_18R2jXMaEeeoYuc64YE22w"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_18R2mnMaEeeoYuc64YE22w" name="Test$method$1" specification="_18R3UnMaEeeoYuc64YE22w" node="_18R2pnMaEeeoYuc64YE22w _18R2qXMaEeeoYuc64YE22w _18R2p3MaEeeoYuc64YE22w _18R2r3MaEeeoYuc64YE22w _18R2qHMaEeeoYuc64YE22w" group="_18R2qXMaEeeoYuc64YE22w _18R2r3MaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_18R2m3MaEeeoYuc64YE22w" name="tester" type="_18R3WXMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2nHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2nXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18R2nnMaEeeoYuc64YE22w" name="" type="_18R2YHMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2n3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2oHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2oXMaEeeoYuc64YE22w" target="_18R2q3MaEeeoYuc64YE22w" source="_18R2pnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2onMaEeeoYuc64YE22w" target="_18R2zXMaEeeoYuc64YE22w" source="_18R2rnMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2o3MaEeeoYuc64YE22w" target="_18R2p3MaEeeoYuc64YE22w" source="_18R26XMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_18R2pHMaEeeoYuc64YE22w" target="_18R2qHMaEeeoYuc64YE22w" source="_18R2qXMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_18R2pXMaEeeoYuc64YE22w" target="_18R2r3MaEeeoYuc64YE22w" source="_18R2qHMaEeeoYuc64YE22w"/>
        <structuredNode xmi:id="_18R2qXMaEeeoYuc64YE22w" name="Node(Input(tester))" outgoing="_18R2pHMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2qnMaEeeoYuc64YE22w" target="_18R2rnMaEeeoYuc64YE22w" source="_18R2q3MaEeeoYuc64YE22w"/>
          <structuredNodeInput xmi:id="_18R2q3MaEeeoYuc64YE22w" name="Input(tester)" incoming="_18R2oXMaEeeoYuc64YE22w" outgoing="_18R2qnMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2rHMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2rXMaEeeoYuc64YE22w" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:ForkNode" xmi:id="_18R2rnMaEeeoYuc64YE22w" name="Fork(tester)" incoming="_18R2qnMaEeeoYuc64YE22w" outgoing="_18R2onMaEeeoYuc64YE22w"/>
        </structuredNode>
        <structuredNode xmi:id="_18R2r3MaEeeoYuc64YE22w" name="Body(Test$method$1)" incoming="_18R2pXMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2sHMaEeeoYuc64YE22w" target="_18R26XMaEeeoYuc64YE22w" source="_18R25nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2sXMaEeeoYuc64YE22w" target="_18R263MaEeeoYuc64YE22w" source="_18R26XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18R2snMaEeeoYuc64YE22w" target="_18R2u3MaEeeoYuc64YE22w" source="_18R26nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2s3MaEeeoYuc64YE22w" target="_18R273MaEeeoYuc64YE22w" source="_18R26XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2tHMaEeeoYuc64YE22w" target="_18R29nMaEeeoYuc64YE22w" source="_18R28nMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2tXMaEeeoYuc64YE22w" target="_18R3AnMaEeeoYuc64YE22w" source="_18R2-XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2tnMaEeeoYuc64YE22w" target="_18R3CHMaEeeoYuc64YE22w" source="_18R2_XMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18R2t3MaEeeoYuc64YE22w" target="_18R3DHMaEeeoYuc64YE22w" source="_18R3C3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2uHMaEeeoYuc64YE22w" target="_18R3DHMaEeeoYuc64YE22w" source="_18R3BXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18R2uXMaEeeoYuc64YE22w" target="_18R26nMaEeeoYuc64YE22w" source="_18R3DHMaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R2unMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R2u3MaEeeoYuc64YE22w" name="Body" incoming="_18R2snMaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R2vHMaEeeoYuc64YE22w" name="ExpressionStatement@4e17ad35">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2vXMaEeeoYuc64YE22w" target="_18R2x3MaEeeoYuc64YE22w" source="_18R2w3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2vnMaEeeoYuc64YE22w" target="_18R20HMaEeeoYuc64YE22w" source="_18R2zXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2v3MaEeeoYuc64YE22w" target="_18R21nMaEeeoYuc64YE22w" source="_18R2ynMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18R2wHMaEeeoYuc64YE22w" target="_18R2wXMaEeeoYuc64YE22w" source="_18R25HMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R2wXMaEeeoYuc64YE22w" name="Expression(LeftHandSide@2f730434)" incoming="_18R2wHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_18R2wnMaEeeoYuc64YE22w" name="ReadSelf">
                  <result xmi:id="_18R2w3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18R2vXMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2xHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2xXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_18R2xnMaEeeoYuc64YE22w" name="Clear(tester)" structuralFeature="_18R2aXMaEeeoYuc64YE22w">
                <object xmi:id="_18R2x3MaEeeoYuc64YE22w" name="Clear(tester).object" incoming="_18R2vXMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2yHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2yXMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_18R2ynMaEeeoYuc64YE22w" name="Clear(tester).result" outgoing="_18R2v3MaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2y3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2zHMaEeeoYuc64YE22w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_18R2zXMaEeeoYuc64YE22w" name="Fork(LeftHandSide@2f730434)" incoming="_18R2onMaEeeoYuc64YE22w" outgoing="_18R2vnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R2znMaEeeoYuc64YE22w" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R2z3MaEeeoYuc64YE22w" target="_18R243MaEeeoYuc64YE22w" source="_18R20HMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_18R20HMaEeeoYuc64YE22w" name="WriteAll(Test::tester).input(Test::tester)" incoming="_18R2vnMaEeeoYuc64YE22w" outgoing="_18R2z3MaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R20XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R20nMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_18R203MaEeeoYuc64YE22w" name="Iterate(Write(tester))" inputElement="_18R243MaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18R21HMaEeeoYuc64YE22w" target="_18R24HMaEeeoYuc64YE22w" source="_18R243MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18R21XMaEeeoYuc64YE22w" target="_18R22nMaEeeoYuc64YE22w" source="_18R21nMaEeeoYuc64YE22w"/>
                  <structuredNodeInput xmi:id="_18R21nMaEeeoYuc64YE22w" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_18R2v3MaEeeoYuc64YE22w" outgoing="_18R21XMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R213MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R22HMaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_18R22XMaEeeoYuc64YE22w" name="Write(tester)" structuralFeature="_18R2aXMaEeeoYuc64YE22w">
                    <object xmi:id="_18R22nMaEeeoYuc64YE22w" name="Write(tester).object" incoming="_18R21XMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R223MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R23HMaEeeoYuc64YE22w" value="1"/>
                    </object>
                    <result xmi:id="_18R23XMaEeeoYuc64YE22w" name="Write(tester).result" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R23nMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R233MaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:id="_18R24HMaEeeoYuc64YE22w" name="Write(tester).value" incoming="_18R21HMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R24XMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R24nMaEeeoYuc64YE22w" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_18R243MaEeeoYuc64YE22w" name="Iterate(Write(tester)).inputElement" incoming="_18R2z3MaEeeoYuc64YE22w" outgoing="_18R21HMaEeeoYuc64YE22w" regionAsInput="_18R203MaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R25HMaEeeoYuc64YE22w" name="RightHandSide@4f87e8f9" outgoing="_18R2wHMaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_18R25XMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_18R25nMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18R2sHMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R253MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R26HMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_18R26XMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18R2sHMaEeeoYuc64YE22w" outgoing="_18R2o3MaEeeoYuc64YE22w _18R2sXMaEeeoYuc64YE22w _18R2s3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_18R26nMaEeeoYuc64YE22w" name="Call(Test$initialization$1)" incoming="_18R2uXMaEeeoYuc64YE22w" outgoing="_18R2snMaEeeoYuc64YE22w" operation="_18R3T3MaEeeoYuc64YE22w">
            <target xmi:id="_18R263MaEeeoYuc64YE22w" name="Call(Test$initialization$1).target" incoming="_18R2sXMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R27HMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R27XMaEeeoYuc64YE22w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18R27nMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1)" structuralFeature="_18R2ZnMaEeeoYuc64YE22w">
            <object xmi:id="_18R273MaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).object" incoming="_18R2s3MaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R28HMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R28XMaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_18R28nMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).result" outgoing="_18R2tHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R283MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R29HMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R29XMaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_18R29nMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18R2tHMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R293MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2-HMaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_18R2-XMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18R2tXMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2-nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2-3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R2_HMaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_18R2_XMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18R2tnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R2_nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R2_3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_18R3AHMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_18R3AXMaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_18R3AnMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18R2tXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3A3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3BHMaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_18R3BXMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18R2uHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3BnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3B3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_18R3CHMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18R2tnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3CXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3CnMaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_18R3C3MaEeeoYuc64YE22w" name="InitialNode" outgoing="_18R2t3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_18R3DHMaEeeoYuc64YE22w" name="Decision(Test(Test$initializationFlag$1))" incoming="_18R2t3MaEeeoYuc64YE22w _18R2uHMaEeeoYuc64YE22w" outgoing="_18R2uXMaEeeoYuc64YE22w" decisionInputFlow="_18R2uHMaEeeoYuc64YE22w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18R2pnMaEeeoYuc64YE22w" name="Input(tester)" outgoing="_18R2oXMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" parameter="_18R2m3MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_18R2p3MaEeeoYuc64YE22w" name="Return" incoming="_18R2o3MaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" parameter="_18R2nnMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:JoinNode" xmi:id="_18R2qHMaEeeoYuc64YE22w" name="Join(Input))" incoming="_18R2pHMaEeeoYuc64YE22w" outgoing="_18R2pXMaEeeoYuc64YE22w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_18R3DXMaEeeoYuc64YE22w" name="Test$initialization$1" specification="_18R3T3MaEeeoYuc64YE22w" node="_18R3DnMaEeeoYuc64YE22w" group="_18R3DnMaEeeoYuc64YE22w">
        <structuredNode xmi:id="_18R3DnMaEeeoYuc64YE22w" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3D3MaEeeoYuc64YE22w" target="_18R3HXMaEeeoYuc64YE22w" source="_18R3GnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3EHMaEeeoYuc64YE22w" target="_18R3J3MaEeeoYuc64YE22w" source="_18R3HXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3EXMaEeeoYuc64YE22w" target="_18R3MXMaEeeoYuc64YE22w" source="_18R3HXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3EnMaEeeoYuc64YE22w" target="_18R3OHMaEeeoYuc64YE22w" source="_18R3NHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3E3MaEeeoYuc64YE22w" target="_18R3RHMaEeeoYuc64YE22w" source="_18R3O3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3FHMaEeeoYuc64YE22w" target="_18R3SnMaEeeoYuc64YE22w" source="_18R3P3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18R3FXMaEeeoYuc64YE22w" target="_18R3TnMaEeeoYuc64YE22w" source="_18R3TXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3FnMaEeeoYuc64YE22w" target="_18R3TnMaEeeoYuc64YE22w" source="_18R3R3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18R3F3MaEeeoYuc64YE22w" target="_18R3HnMaEeeoYuc64YE22w" source="_18R3TnMaEeeoYuc64YE22w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R3GHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_18R3GXMaEeeoYuc64YE22w" name="ReadSelf">
            <result xmi:id="_18R3GnMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18R3D3MaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3G3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3HHMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_18R3HXMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18R3D3MaEeeoYuc64YE22w" outgoing="_18R3EHMaEeeoYuc64YE22w _18R3EXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R3HnMaEeeoYuc64YE22w" name="Initialization" incoming="_18R3F3MaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R3H3MaEeeoYuc64YE22w" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3IHMaEeeoYuc64YE22w" target="_18R3LXMaEeeoYuc64YE22w" source="_18R3InMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R3IXMaEeeoYuc64YE22w" name="Value(true)">
                <result xmi:id="_18R3InMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18R3IHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3I3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3JHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_18R3JXMaEeeoYuc64YE22w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_18R3JnMaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1)" structuralFeature="_18R2ZnMaEeeoYuc64YE22w" isReplaceAll="true">
                <object xmi:id="_18R3J3MaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1).object" incoming="_18R3EHMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3KHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3KXMaEeeoYuc64YE22w" value="1"/>
                </object>
                <result xmi:id="_18R3KnMaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1).result" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3K3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3LHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:id="_18R3LXMaEeeoYuc64YE22w" name="Write(Test$initializationFlag$1).value" incoming="_18R3IHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3LnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3L3MaEeeoYuc64YE22w" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18R3MHMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1)" structuralFeature="_18R2ZnMaEeeoYuc64YE22w">
            <object xmi:id="_18R3MXMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).object" incoming="_18R3EXMaEeeoYuc64YE22w" type="_18R2YHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3MnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3M3MaEeeoYuc64YE22w" value="1"/>
            </object>
            <result xmi:id="_18R3NHMaEeeoYuc64YE22w" name="Read(Test$initializationFlag$1).result" outgoing="_18R3EnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3NXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3NnMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R3N3MaEeeoYuc64YE22w" name="Call(ListSize)">
            <argument xmi:id="_18R3OHMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18R3EnMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3OXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3OnMaEeeoYuc64YE22w" value="*"/>
            </argument>
            <result xmi:id="_18R3O3MaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18R3E3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3PHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3PXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R3PnMaEeeoYuc64YE22w" name="Value(0)">
            <result xmi:id="_18R3P3MaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18R3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3QHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3QXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_18R3QnMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_18R3Q3MaEeeoYuc64YE22w" name="Test(Size==0)">
            <first xmi:id="_18R3RHMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18R3E3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3RXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3RnMaEeeoYuc64YE22w" value="1"/>
            </first>
            <result xmi:id="_18R3R3MaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18R3FnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3SHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3SXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <second xmi:id="_18R3SnMaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18R3FHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3S3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3THMaEeeoYuc64YE22w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_18R3TXMaEeeoYuc64YE22w" name="InitialNode" outgoing="_18R3FXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_18R3TnMaEeeoYuc64YE22w" name="Decision(Test(Test$initializationFlag$1))" incoming="_18R3FXMaEeeoYuc64YE22w _18R3FnMaEeeoYuc64YE22w" outgoing="_18R3F3MaEeeoYuc64YE22w" decisionInputFlow="_18R3FnMaEeeoYuc64YE22w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_18R3T3MaEeeoYuc64YE22w" name="Test$initialization$1" visibility="protected" method="_18R3DXMaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_18R3UHMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_18R2bHMaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_18R3UXMaEeeoYuc64YE22w" name="done" visibility="public" method="_18R2bnMaEeeoYuc64YE22w"/>
      <ownedOperation xmi:id="_18R3UnMaEeeoYuc64YE22w" name="Test" visibility="protected" method="_18R2mnMaEeeoYuc64YE22w">
        <ownedParameter xmi:id="_18R3U3MaEeeoYuc64YE22w" name="tester" visibility="package" type="_18R3WXMaEeeoYuc64YE22w">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3VHMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3VXMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_18R3VnMaEeeoYuc64YE22w" name="" visibility="package" type="_18R2YHMaEeeoYuc64YE22w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3V3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3WHMaEeeoYuc64YE22w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_18R3WXMaEeeoYuc64YE22w" name="Tester" visibility="public" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_18R3WnMaEeeoYuc64YE22w" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3W3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3XHMaEeeoYuc64YE22w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18R3XXMaEeeoYuc64YE22w" name="Tester$method$1" specification="_18R33XMaEeeoYuc64YE22w" node="_18R3YnMaEeeoYuc64YE22w _18R3Y3MaEeeoYuc64YE22w" group="_18R3Y3MaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18R3XnMaEeeoYuc64YE22w" name="" type="_18R3WXMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3X3MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3YHMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3YXMaEeeoYuc64YE22w" target="_18R3YnMaEeeoYuc64YE22w" source="_18R3dHMaEeeoYuc64YE22w"/>
          <structuredNode xmi:id="_18R3Y3MaEeeoYuc64YE22w" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3ZHMaEeeoYuc64YE22w" target="_18R3dHMaEeeoYuc64YE22w" source="_18R3cXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3ZXMaEeeoYuc64YE22w" target="_18R3dnMaEeeoYuc64YE22w" source="_18R3dHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R3ZnMaEeeoYuc64YE22w" target="_18R3b3MaEeeoYuc64YE22w" source="_18R3dXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3Z3MaEeeoYuc64YE22w" target="_18R3enMaEeeoYuc64YE22w" source="_18R3dHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3aHMaEeeoYuc64YE22w" target="_18R3gXMaEeeoYuc64YE22w" source="_18R3fXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3aXMaEeeoYuc64YE22w" target="_18R3jXMaEeeoYuc64YE22w" source="_18R3hHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3anMaEeeoYuc64YE22w" target="_18R3k3MaEeeoYuc64YE22w" source="_18R3iHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R3a3MaEeeoYuc64YE22w" target="_18R3l3MaEeeoYuc64YE22w" source="_18R3lnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3bHMaEeeoYuc64YE22w" target="_18R3l3MaEeeoYuc64YE22w" source="_18R3kHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R3bXMaEeeoYuc64YE22w" target="_18R3dXMaEeeoYuc64YE22w" source="_18R3l3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R3bnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R3b3MaEeeoYuc64YE22w" name="Body" incoming="_18R3ZnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_18R3cHMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_18R3cXMaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18R3ZHMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3cnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3c3MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18R3dHMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18R3ZHMaEeeoYuc64YE22w" outgoing="_18R3YXMaEeeoYuc64YE22w _18R3ZXMaEeeoYuc64YE22w _18R3Z3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_18R3dXMaEeeoYuc64YE22w" name="Call(Tester$initialization$1)" incoming="_18R3bXMaEeeoYuc64YE22w" outgoing="_18R3ZnMaEeeoYuc64YE22w" operation="_18R33HMaEeeoYuc64YE22w">
              <target xmi:id="_18R3dnMaEeeoYuc64YE22w" name="Call(Tester$initialization$1).target" incoming="_18R3ZXMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3d3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3eHMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18R3eXMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1)" structuralFeature="_18R3WnMaEeeoYuc64YE22w">
              <object xmi:id="_18R3enMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).object" incoming="_18R3Z3MaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3e3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3fHMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_18R3fXMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).result" outgoing="_18R3aHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3fnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3f3MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R3gHMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_18R3gXMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18R3aHMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3gnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3g3MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18R3hHMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18R3aXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3hXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3hnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R3h3MaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_18R3iHMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18R3anMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3iXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3inMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18R3i3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_18R3jHMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_18R3jXMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18R3aXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3jnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3j3MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_18R3kHMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18R3bHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3kXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3knMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_18R3k3MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18R3anMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3lHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3lXMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18R3lnMaEeeoYuc64YE22w" name="InitialNode" outgoing="_18R3a3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18R3l3MaEeeoYuc64YE22w" name="Decision(Test(Tester$initializationFlag$1))" incoming="_18R3a3MaEeeoYuc64YE22w _18R3bHMaEeeoYuc64YE22w" outgoing="_18R3bXMaEeeoYuc64YE22w" decisionInputFlow="_18R3bHMaEeeoYuc64YE22w"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_18R3YnMaEeeoYuc64YE22w" name="Return" incoming="_18R3YXMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" parameter="_18R3XnMaEeeoYuc64YE22w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18R3mHMaEeeoYuc64YE22w" name="destroy$method$1" specification="_18R34XMaEeeoYuc64YE22w" node="_18R3mXMaEeeoYuc64YE22w" group="_18R3mXMaEeeoYuc64YE22w">
          <structuredNode xmi:id="_18R3mXMaEeeoYuc64YE22w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_18R3mnMaEeeoYuc64YE22w" name="Tester$initialization$1" specification="_18R33HMaEeeoYuc64YE22w" node="_18R3m3MaEeeoYuc64YE22w" group="_18R3m3MaEeeoYuc64YE22w">
          <structuredNode xmi:id="_18R3m3MaEeeoYuc64YE22w" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3nHMaEeeoYuc64YE22w" target="_18R3qnMaEeeoYuc64YE22w" source="_18R3p3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3nXMaEeeoYuc64YE22w" target="_18R3tHMaEeeoYuc64YE22w" source="_18R3qnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3nnMaEeeoYuc64YE22w" target="_18R3vnMaEeeoYuc64YE22w" source="_18R3qnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3n3MaEeeoYuc64YE22w" target="_18R3xXMaEeeoYuc64YE22w" source="_18R3wXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3oHMaEeeoYuc64YE22w" target="_18R30XMaEeeoYuc64YE22w" source="_18R3yHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3oXMaEeeoYuc64YE22w" target="_18R313MaEeeoYuc64YE22w" source="_18R3zHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R3onMaEeeoYuc64YE22w" target="_18R323MaEeeoYuc64YE22w" source="_18R32nMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3o3MaEeeoYuc64YE22w" target="_18R323MaEeeoYuc64YE22w" source="_18R31HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R3pHMaEeeoYuc64YE22w" target="_18R3q3MaEeeoYuc64YE22w" source="_18R323MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R3pXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_18R3pnMaEeeoYuc64YE22w" name="ReadSelf">
              <result xmi:id="_18R3p3MaEeeoYuc64YE22w" name="ReadSelf.result" outgoing="_18R3nHMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3qHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3qXMaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18R3qnMaEeeoYuc64YE22w" name="Fork(ReadSelf.result)" incoming="_18R3nHMaEeeoYuc64YE22w" outgoing="_18R3nXMaEeeoYuc64YE22w _18R3nnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R3q3MaEeeoYuc64YE22w" name="Initialization" incoming="_18R3pHMaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R3rHMaEeeoYuc64YE22w" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3rXMaEeeoYuc64YE22w" target="_18R3unMaEeeoYuc64YE22w" source="_18R3r3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R3rnMaEeeoYuc64YE22w" name="Value(true)">
                  <result xmi:id="_18R3r3MaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18R3rXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3sHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3sXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_18R3snMaEeeoYuc64YE22w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_18R3s3MaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1)" structuralFeature="_18R3WnMaEeeoYuc64YE22w" isReplaceAll="true">
                  <object xmi:id="_18R3tHMaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1).object" incoming="_18R3nXMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3tXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3tnMaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18R3t3MaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1).result" type="_18R3WXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3uHMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3uXMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:id="_18R3unMaEeeoYuc64YE22w" name="Write(Tester$initializationFlag$1).value" incoming="_18R3rXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3u3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3vHMaEeeoYuc64YE22w" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_18R3vXMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1)" structuralFeature="_18R3WnMaEeeoYuc64YE22w">
              <object xmi:id="_18R3vnMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).object" incoming="_18R3nnMaEeeoYuc64YE22w" type="_18R3WXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3v3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3wHMaEeeoYuc64YE22w" value="1"/>
              </object>
              <result xmi:id="_18R3wXMaEeeoYuc64YE22w" name="Read(Tester$initializationFlag$1).result" outgoing="_18R3n3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3wnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3w3MaEeeoYuc64YE22w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R3xHMaEeeoYuc64YE22w" name="Call(ListSize)">
              <argument xmi:id="_18R3xXMaEeeoYuc64YE22w" name="Call(ListSize).argument(list)" incoming="_18R3n3MaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3xnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3x3MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18R3yHMaEeeoYuc64YE22w" name="Call(ListSize).result(result)" outgoing="_18R3oHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3yXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3ynMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R3y3MaEeeoYuc64YE22w" name="Value(0)">
              <result xmi:id="_18R3zHMaEeeoYuc64YE22w" name="Value(0).result" outgoing="_18R3oXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R3zXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R3znMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18R3z3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_18R30HMaEeeoYuc64YE22w" name="Test(Size==0)">
              <first xmi:id="_18R30XMaEeeoYuc64YE22w" name="Test(Size==0).first" incoming="_18R3oHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R30nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R303MaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_18R31HMaEeeoYuc64YE22w" name="Test(Size==0).result" outgoing="_18R3o3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R31XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R31nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_18R313MaEeeoYuc64YE22w" name="Test(Size==0).second" incoming="_18R3oXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R32HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R32XMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18R32nMaEeeoYuc64YE22w" name="InitialNode" outgoing="_18R3onMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18R323MaEeeoYuc64YE22w" name="Decision(Test(Tester$initializationFlag$1))" incoming="_18R3onMaEeeoYuc64YE22w _18R3o3MaEeeoYuc64YE22w" outgoing="_18R3pHMaEeeoYuc64YE22w" decisionInputFlow="_18R3o3MaEeeoYuc64YE22w"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_18R33HMaEeeoYuc64YE22w" name="Tester$initialization$1" visibility="protected" method="_18R3mnMaEeeoYuc64YE22w"/>
        <ownedOperation xmi:id="_18R33XMaEeeoYuc64YE22w" name="Tester" visibility="public" method="_18R3XXMaEeeoYuc64YE22w">
          <ownedParameter xmi:id="_18R33nMaEeeoYuc64YE22w" name="" visibility="package" type="_18R3WXMaEeeoYuc64YE22w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R333MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R34HMaEeeoYuc64YE22w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_18R34XMaEeeoYuc64YE22w" name="destroy" visibility="public" method="_18R3mHMaEeeoYuc64YE22w"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_18R34nMaEeeoYuc64YE22w" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_18R343MaEeeoYuc64YE22w" name="Continue" signal="_18R34nMaEeeoYuc64YE22w"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_18R35HMaEeeoYuc64YE22w" name="AssertEqual" visibility="public" node="_18R4CHMaEeeoYuc64YE22w _18R4DHMaEeeoYuc64YE22w _18R4CXMaEeeoYuc64YE22w _18R4EnMaEeeoYuc64YE22w _18R4CnMaEeeoYuc64YE22w _18R4GHMaEeeoYuc64YE22w _18R4HnMaEeeoYuc64YE22w _18R4C3MaEeeoYuc64YE22w" group="_18R4DHMaEeeoYuc64YE22w _18R4EnMaEeeoYuc64YE22w _18R4GHMaEeeoYuc64YE22w _18R4HnMaEeeoYuc64YE22w">
      <packageImport xmi:id="_18R35XMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_18R35nMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_18R353MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_18R36HMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_18R36XMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_18R36nMaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R363MaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R37HMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_18R37XMaEeeoYuc64YE22w" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R37nMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R373MaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_18R38HMaEeeoYuc64YE22w" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R38XMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R38nMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R383MaEeeoYuc64YE22w" target="_18R4DnMaEeeoYuc64YE22w" source="_18R4CHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R39HMaEeeoYuc64YE22w" target="_18R4FHMaEeeoYuc64YE22w" source="_18R4CXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R39XMaEeeoYuc64YE22w" target="_18R4GnMaEeeoYuc64YE22w" source="_18R4CnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R39nMaEeeoYuc64YE22w" target="_18R4VXMaEeeoYuc64YE22w" source="_18R4F3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R393MaEeeoYuc64YE22w" target="_18R4XXMaEeeoYuc64YE22w" source="_18R4HXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3-HMaEeeoYuc64YE22w" target="_18R4mXMaEeeoYuc64YE22w" source="_18R4EXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3-XMaEeeoYuc64YE22w" target="_18R4yXMaEeeoYuc64YE22w" source="_18R4HXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3-nMaEeeoYuc64YE22w" target="_18R5EHMaEeeoYuc64YE22w" source="_18R4EXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3-3MaEeeoYuc64YE22w" target="_18R5IHMaEeeoYuc64YE22w" source="_18R4HXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3_HMaEeeoYuc64YE22w" target="_18R5KHMaEeeoYuc64YE22w" source="_18R4F3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3_XMaEeeoYuc64YE22w" target="_18R5R3MaEeeoYuc64YE22w" source="_18R4HXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3_nMaEeeoYuc64YE22w" target="_18R5anMaEeeoYuc64YE22w" source="_18R4EXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R3_3MaEeeoYuc64YE22w" target="_18R5enMaEeeoYuc64YE22w" source="_18R4HXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4AHMaEeeoYuc64YE22w" target="_18R5gnMaEeeoYuc64YE22w" source="_18R4F3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4AXMaEeeoYuc64YE22w" target="_18R50XMaEeeoYuc64YE22w" source="_18R4EXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4AnMaEeeoYuc64YE22w" target="_18R53nMaEeeoYuc64YE22w" source="_18R4HXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4A3MaEeeoYuc64YE22w" target="_18R55nMaEeeoYuc64YE22w" source="_18R4F3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18R4BHMaEeeoYuc64YE22w" target="_18R4C3MaEeeoYuc64YE22w" source="_18R4DHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18R4BXMaEeeoYuc64YE22w" target="_18R4C3MaEeeoYuc64YE22w" source="_18R4EnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18R4BnMaEeeoYuc64YE22w" target="_18R4C3MaEeeoYuc64YE22w" source="_18R4GHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18R4B3MaEeeoYuc64YE22w" target="_18R4HnMaEeeoYuc64YE22w" source="_18R4C3MaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_18R4DHMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_18R4BHMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4DXMaEeeoYuc64YE22w" target="_18R4EXMaEeeoYuc64YE22w" source="_18R4DnMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_18R4DnMaEeeoYuc64YE22w" name="Input(label)" incoming="_18R383MaEeeoYuc64YE22w" outgoing="_18R4DXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4D3MaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4EHMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_18R4EXMaEeeoYuc64YE22w" name="Fork(label)" incoming="_18R4DXMaEeeoYuc64YE22w" outgoing="_18R3-HMaEeeoYuc64YE22w _18R3-nMaEeeoYuc64YE22w _18R3_nMaEeeoYuc64YE22w _18R4AXMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_18R4EnMaEeeoYuc64YE22w" name="Node(Input(value1))" outgoing="_18R4BXMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4E3MaEeeoYuc64YE22w" target="_18R4F3MaEeeoYuc64YE22w" source="_18R4FHMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_18R4FHMaEeeoYuc64YE22w" name="Input(value1)" incoming="_18R39HMaEeeoYuc64YE22w" outgoing="_18R4E3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4FXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4FnMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_18R4F3MaEeeoYuc64YE22w" name="Fork(value1)" incoming="_18R4E3MaEeeoYuc64YE22w" outgoing="_18R39nMaEeeoYuc64YE22w _18R3_HMaEeeoYuc64YE22w _18R4AHMaEeeoYuc64YE22w _18R4A3MaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_18R4GHMaEeeoYuc64YE22w" name="Node(Input(value2))" outgoing="_18R4BnMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4GXMaEeeoYuc64YE22w" target="_18R4HXMaEeeoYuc64YE22w" source="_18R4GnMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_18R4GnMaEeeoYuc64YE22w" name="Input(value2)" incoming="_18R39XMaEeeoYuc64YE22w" outgoing="_18R4GXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4G3MaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4HHMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_18R4HXMaEeeoYuc64YE22w" name="Fork(value2)" incoming="_18R4GXMaEeeoYuc64YE22w" outgoing="_18R393MaEeeoYuc64YE22w _18R3-XMaEeeoYuc64YE22w _18R3-3MaEeeoYuc64YE22w _18R3_XMaEeeoYuc64YE22w _18R3_3MaEeeoYuc64YE22w _18R4AnMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_18R4HnMaEeeoYuc64YE22w" name="Body(AssertEqual)" incoming="_18R4B3MaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4H3MaEeeoYuc64YE22w" target="_18R5-nMaEeeoYuc64YE22w" source="_18R57nMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4IHMaEeeoYuc64YE22w" target="_18R5-3MaEeeoYuc64YE22w" source="_18R58XMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4IXMaEeeoYuc64YE22w" target="_18R5_HMaEeeoYuc64YE22w" source="_18R59HMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4InMaEeeoYuc64YE22w" target="_18R5_XMaEeeoYuc64YE22w" source="_18R593MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_18R4I3MaEeeoYuc64YE22w" name="IfStatement@767014a7">
          <edge xmi:type="uml:ControlFlow" xmi:id="_18R4JHMaEeeoYuc64YE22w" target="_18R4s3MaEeeoYuc64YE22w" source="_18R4gHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4JXMaEeeoYuc64YE22w" target="_18R5lnMaEeeoYuc64YE22w" source="_18R5inMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4JnMaEeeoYuc64YE22w" target="_18R5l3MaEeeoYuc64YE22w" source="_18R5jXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4J3MaEeeoYuc64YE22w" target="_18R5mHMaEeeoYuc64YE22w" source="_18R5kHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4KHMaEeeoYuc64YE22w" target="_18R5mXMaEeeoYuc64YE22w" source="_18R5k3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4KXMaEeeoYuc64YE22w" target="_18R41XMaEeeoYuc64YE22w" source="_18R4tXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4KnMaEeeoYuc64YE22w" target="_18R49HMaEeeoYuc64YE22w" source="_18R4tXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4K3MaEeeoYuc64YE22w" target="_18R5GHMaEeeoYuc64YE22w" source="_18R4tXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4LHMaEeeoYuc64YE22w" target="_18R5cnMaEeeoYuc64YE22w" source="_18R4tXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18R4LXMaEeeoYuc64YE22w" target="_18R4y3MaEeeoYuc64YE22w" source="_18R4s3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18R4LnMaEeeoYuc64YE22w" target="_18R5mnMaEeeoYuc64YE22w" source="_18R4y3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4L3MaEeeoYuc64YE22w" target="_18R5rHMaEeeoYuc64YE22w" source="_18R5lnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4MHMaEeeoYuc64YE22w" target="_18R5tHMaEeeoYuc64YE22w" source="_18R5l3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4MXMaEeeoYuc64YE22w" target="_18R5vHMaEeeoYuc64YE22w" source="_18R5mHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4MnMaEeeoYuc64YE22w" target="_18R5xHMaEeeoYuc64YE22w" source="_18R5mXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R4M3MaEeeoYuc64YE22w" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4NHMaEeeoYuc64YE22w" target="_18R4THMaEeeoYuc64YE22w" source="_18R4VXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4NXMaEeeoYuc64YE22w" target="_18R4V3MaEeeoYuc64YE22w" source="_18R4VXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4NnMaEeeoYuc64YE22w" target="_18R4UnMaEeeoYuc64YE22w" source="_18R4XXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4N3MaEeeoYuc64YE22w" target="_18R4X3MaEeeoYuc64YE22w" source="_18R4XXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4OHMaEeeoYuc64YE22w" target="_18R4ZnMaEeeoYuc64YE22w" source="_18R4WnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4OXMaEeeoYuc64YE22w" target="_18R4Z3MaEeeoYuc64YE22w" source="_18R4YnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4OnMaEeeoYuc64YE22w" target="_18R4aXMaEeeoYuc64YE22w" source="_18R4ZnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4O3MaEeeoYuc64YE22w" target="_18R4cHMaEeeoYuc64YE22w" source="_18R4Z3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4PHMaEeeoYuc64YE22w" target="_18R4dnMaEeeoYuc64YE22w" source="_18R4Z3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R4PXMaEeeoYuc64YE22w" target="_18R4S3MaEeeoYuc64YE22w" source="_18R4dnMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R4PnMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R4P3MaEeeoYuc64YE22w" target="_18R4aHMaEeeoYuc64YE22w" source="_18R4dnMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R4QHMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R4QXMaEeeoYuc64YE22w" target="_18R4d3MaEeeoYuc64YE22w" source="_18R4ZXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4QnMaEeeoYuc64YE22w" target="_18R4d3MaEeeoYuc64YE22w" source="_18R4ZnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R4Q3MaEeeoYuc64YE22w" target="_18R4dnMaEeeoYuc64YE22w" source="_18R4d3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R4RHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R4RXMaEeeoYuc64YE22w" target="_18R4b3MaEeeoYuc64YE22w" source="_18R4d3MaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R4RnMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4R3MaEeeoYuc64YE22w" target="_18R4eHMaEeeoYuc64YE22w" source="_18R4T3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4SHMaEeeoYuc64YE22w" target="_18R4eHMaEeeoYuc64YE22w" source="_18R4bHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4SXMaEeeoYuc64YE22w" target="_18R4eHMaEeeoYuc64YE22w" source="_18R4c3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4SnMaEeeoYuc64YE22w" target="_18R4enMaEeeoYuc64YE22w" source="_18R4eHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_18R4S3MaEeeoYuc64YE22w" name="Test(==)" incoming="_18R4PXMaEeeoYuc64YE22w">
              <first xmi:id="_18R4THMaEeeoYuc64YE22w" name="Test(==).first" incoming="_18R4NHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4TXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4TnMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_18R4T3MaEeeoYuc64YE22w" name="Test(==).result" outgoing="_18R4R3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4UHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4UXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_18R4UnMaEeeoYuc64YE22w" name="Test(==).second" incoming="_18R4NnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4U3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4VHMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18R4VXMaEeeoYuc64YE22w" name="Fork(Fork(value1))" incoming="_18R39nMaEeeoYuc64YE22w" outgoing="_18R4NHMaEeeoYuc64YE22w _18R4NXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R4VnMaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_18R4V3MaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_18R4NXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4WHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4WXMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18R4WnMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_18R4OHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4W3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4XHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18R4XXMaEeeoYuc64YE22w" name="Fork(Fork(value2))" incoming="_18R393MaEeeoYuc64YE22w" outgoing="_18R4NnMaEeeoYuc64YE22w _18R4N3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R4XnMaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_18R4X3MaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_18R4N3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4YHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4YXMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18R4YnMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_18R4OXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4Y3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4ZHMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_18R4ZXMaEeeoYuc64YE22w" name="Initial(Test(==))" outgoing="_18R4QXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18R4ZnMaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_18R4OHMaEeeoYuc64YE22w" outgoing="_18R4OnMaEeeoYuc64YE22w _18R4QnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18R4Z3MaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_18R4OXMaEeeoYuc64YE22w" outgoing="_18R4O3MaEeeoYuc64YE22w _18R4PHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R4aHMaEeeoYuc64YE22w" name="Call(Not)" incoming="_18R4P3MaEeeoYuc64YE22w">
              <argument xmi:id="_18R4aXMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_18R4OnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4anMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4a3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_18R4bHMaEeeoYuc64YE22w" name="Call(Not).result(result)" outgoing="_18R4SHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4bXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4bnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R4b3MaEeeoYuc64YE22w" name="Call(Not)" incoming="_18R4RXMaEeeoYuc64YE22w">
              <argument xmi:id="_18R4cHMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_18R4O3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4cXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4cnMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_18R4c3MaEeeoYuc64YE22w" name="Call(Not).result(result)" outgoing="_18R4SXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4dHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4dXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
            <node xmi:type="uml:DecisionNode" xmi:id="_18R4dnMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_18R4PHMaEeeoYuc64YE22w _18R4Q3MaEeeoYuc64YE22w" outgoing="_18R4PXMaEeeoYuc64YE22w _18R4P3MaEeeoYuc64YE22w" decisionInputFlow="_18R4PHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18R4d3MaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_18R4QXMaEeeoYuc64YE22w _18R4QnMaEeeoYuc64YE22w" outgoing="_18R4Q3MaEeeoYuc64YE22w _18R4RXMaEeeoYuc64YE22w" decisionInputFlow="_18R4QnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_18R4eHMaEeeoYuc64YE22w" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_18R4R3MaEeeoYuc64YE22w _18R4SHMaEeeoYuc64YE22w _18R4SXMaEeeoYuc64YE22w" outgoing="_18R4SnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R4eXMaEeeoYuc64YE22w" name="Call(Not)">
              <argument xmi:id="_18R4enMaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_18R4SnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4e3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4fHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_18R4fXMaEeeoYuc64YE22w" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4fnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4f3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R4gHMaEeeoYuc64YE22w" name="ExpressionStatement@3793ac6a" outgoing="_18R4JHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4gXMaEeeoYuc64YE22w" target="_18R4hHMaEeeoYuc64YE22w" source="_18R4pnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R4gnMaEeeoYuc64YE22w" target="_18R4g3MaEeeoYuc64YE22w" source="_18R4h3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R4g3MaEeeoYuc64YE22w" name="Call(Write)" incoming="_18R4gnMaEeeoYuc64YE22w" behavior="_18SfF3MaEeeoYuc64YE22w">
              <argument xmi:id="_18R4hHMaEeeoYuc64YE22w" name="Call(Write).argument(value)" incoming="_18R4gXMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4hXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4hnMaEeeoYuc64YE22w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R4h3MaEeeoYuc64YE22w" name="Tuple@4de042ec" outgoing="_18R4gnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4iHMaEeeoYuc64YE22w" target="_18R4lnMaEeeoYuc64YE22w" source="_18R4jHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4iXMaEeeoYuc64YE22w" target="_18R4qnMaEeeoYuc64YE22w" source="_18R4knMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4inMaEeeoYuc64YE22w" target="_18R4rXMaEeeoYuc64YE22w" source="_18R4oHMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R4i3MaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_18R4jHMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;).result" outgoing="_18R4iHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4jXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4jnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_18R4j3MaEeeoYuc64YE22w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R4kHMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4kXMaEeeoYuc64YE22w" target="_18R4knMaEeeoYuc64YE22w" source="_18R4nHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18R4knMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_18R4kXMaEeeoYuc64YE22w" outgoing="_18R4iXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4k3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4lHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R4lXMaEeeoYuc64YE22w" name="Call(Concat)">
                  <argument xmi:id="_18R4lnMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_18R4iHMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4l3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4mHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18R4mXMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_18R3-HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4mnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4m3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18R4nHMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_18R4kXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4nXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4nnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R4n3MaEeeoYuc64YE22w" name="Value(&quot;==&quot;)">
                <result xmi:id="_18R4oHMaEeeoYuc64YE22w" name="Value(&quot;==&quot;).result" outgoing="_18R4inMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4oXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4onMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_18R4o3MaEeeoYuc64YE22w" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R4pHMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4pXMaEeeoYuc64YE22w" target="_18R4pnMaEeeoYuc64YE22w" source="_18R4sHMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18R4pnMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_18R4pXMaEeeoYuc64YE22w" outgoing="_18R4gXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4p3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4qHMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R4qXMaEeeoYuc64YE22w" name="Call(Concat)">
                  <argument xmi:id="_18R4qnMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_18R4iXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4q3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4rHMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18R4rXMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_18R4inMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4rnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4r3MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18R4sHMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_18R4pXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4sXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4snMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R4s3MaEeeoYuc64YE22w" name="ExpressionStatement@4096f82e" incoming="_18R4JHMaEeeoYuc64YE22w" outgoing="_18R4LXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4tHMaEeeoYuc64YE22w" target="_18R4tXMaEeeoYuc64YE22w" source="_18R4ynMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18R4tXMaEeeoYuc64YE22w" name="Fork(s)@685fa133" incoming="_18R4tHMaEeeoYuc64YE22w" outgoing="_18R4KXMaEeeoYuc64YE22w _18R4KnMaEeeoYuc64YE22w _18R4K3MaEeeoYuc64YE22w _18R4LHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R4tnMaEeeoYuc64YE22w" name="RightHandSide@5b1c30b2">
              <node xmi:type="uml:ExpansionRegion" xmi:id="_18R4t3MaEeeoYuc64YE22w" name="CastExpression@5b1c30b2" mode="parallel" outputElement="_18R4ynMaEeeoYuc64YE22w" inputElement="_18R4yXMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4uHMaEeeoYuc64YE22w" target="_18R4wXMaEeeoYuc64YE22w" source="_18R4x3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4uXMaEeeoYuc64YE22w" target="_18R4yHMaEeeoYuc64YE22w" source="_18R4x3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4unMaEeeoYuc64YE22w" target="_18R4yHMaEeeoYuc64YE22w" source="_18R4xHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4u3MaEeeoYuc64YE22w" target="_18R4v3MaEeeoYuc64YE22w" source="_18R4yHMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R4vHMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4vXMaEeeoYuc64YE22w" target="_18R4x3MaEeeoYuc64YE22w" source="_18R4yXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R4vnMaEeeoYuc64YE22w" target="_18R4ynMaEeeoYuc64YE22w" source="_18R4v3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_18R4v3MaEeeoYuc64YE22w" name="Merge(CastExpression@5b1c30b2.operand)" incoming="_18R4u3MaEeeoYuc64YE22w" outgoing="_18R4vnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_18R4wHMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_18R4wXMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(String).object" incoming="_18R4uHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4wnMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4w3MaEeeoYuc64YE22w" value="1"/>
                  </object>
                  <result xmi:id="_18R4xHMaEeeoYuc64YE22w" name="ReadIsClassifiedObject(String).result" outgoing="_18R4unMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4xXMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4xnMaEeeoYuc64YE22w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_18R4x3MaEeeoYuc64YE22w" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_18R4vXMaEeeoYuc64YE22w" outgoing="_18R4uHMaEeeoYuc64YE22w _18R4uXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_18R4yHMaEeeoYuc64YE22w" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_18R4uXMaEeeoYuc64YE22w _18R4unMaEeeoYuc64YE22w" outgoing="_18R4u3MaEeeoYuc64YE22w" decisionInputFlow="_18R4unMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18R4yXMaEeeoYuc64YE22w" name="CastExpression@5b1c30b2.inputElement" incoming="_18R3-XMaEeeoYuc64YE22w" outgoing="_18R4vXMaEeeoYuc64YE22w" regionAsInput="_18R4t3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_18R4ynMaEeeoYuc64YE22w" name="CastExpression@5b1c30b2.outputElement" incoming="_18R4vnMaEeeoYuc64YE22w" outgoing="_18R4tHMaEeeoYuc64YE22w" regionAsOutput="_18R4t3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_18R4y3MaEeeoYuc64YE22w" name="IfStatement@72fa42c0" incoming="_18R4LXMaEeeoYuc64YE22w" outgoing="_18R4LnMaEeeoYuc64YE22w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R4zHMaEeeoYuc64YE22w" name="Test(Call(NotEmpty).result())">
              <edge xmi:type="uml:ControlFlow" xmi:id="_18R4zXMaEeeoYuc64YE22w" target="_18R41HMaEeeoYuc64YE22w" source="_18R4znMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R4znMaEeeoYuc64YE22w" name="Operands(EqualityExpression@6749d62f)" outgoing="_18R4zXMaEeeoYuc64YE22w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R4z3MaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_18R40HMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R40XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R40nMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_18R403MaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R41HMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_18R4zXMaEeeoYuc64YE22w">
                <argument xmi:id="_18R41XMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_18R4KXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R41nMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R413MaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_18R42HMaEeeoYuc64YE22w" name="Call(NotEmpty).result()">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R42XMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R42nMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R423MaEeeoYuc64YE22w" name="ExpressionStatement@7781bb4c">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R43HMaEeeoYuc64YE22w" target="_18R433MaEeeoYuc64YE22w" source="_18R5AXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18R43XMaEeeoYuc64YE22w" target="_18R43nMaEeeoYuc64YE22w" source="_18R44nMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R43nMaEeeoYuc64YE22w" name="Call(Write)" incoming="_18R43XMaEeeoYuc64YE22w" behavior="_18SfF3MaEeeoYuc64YE22w">
                <argument xmi:id="_18R433MaEeeoYuc64YE22w" name="Call(Write).argument(value)" incoming="_18R43HMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R44HMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R44XMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R44nMaEeeoYuc64YE22w" name="Tuple@6b877761" outgoing="_18R43XMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R443MaEeeoYuc64YE22w" target="_18R48XMaEeeoYuc64YE22w" source="_18R453MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R45HMaEeeoYuc64YE22w" target="_18R5BXMaEeeoYuc64YE22w" source="_18R47XMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R45XMaEeeoYuc64YE22w" target="_18R5CHMaEeeoYuc64YE22w" source="_18R4-3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R45nMaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_18R453MaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;).result" outgoing="_18R443MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R46HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R46XMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18R46nMaEeeoYuc64YE22w" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R463MaEeeoYuc64YE22w" name="Node(Call(Concat))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18R47HMaEeeoYuc64YE22w" target="_18R47XMaEeeoYuc64YE22w" source="_18R493MaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_18R47XMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_18R47HMaEeeoYuc64YE22w" outgoing="_18R45HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R47nMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R473MaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R48HMaEeeoYuc64YE22w" name="Call(Concat)">
                    <argument xmi:id="_18R48XMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_18R443MaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R48nMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R483MaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <argument xmi:id="_18R49HMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_18R4KnMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R49XMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R49nMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_18R493MaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_18R47HMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4-HMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4-XMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R4-nMaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_18R4-3MaEeeoYuc64YE22w" name="Value(&quot;&quot;&quot;).result" outgoing="_18R45XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R4_HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R4_XMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18R4_nMaEeeoYuc64YE22w" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R4_3MaEeeoYuc64YE22w" name="Node(Call(Concat))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5AHMaEeeoYuc64YE22w" target="_18R5AXMaEeeoYuc64YE22w" source="_18R5C3MaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_18R5AXMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_18R5AHMaEeeoYuc64YE22w" outgoing="_18R43HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5AnMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5A3MaEeeoYuc64YE22w" value="1"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R5BHMaEeeoYuc64YE22w" name="Call(Concat)">
                    <argument xmi:id="_18R5BXMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_18R45HMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5BnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5B3MaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <argument xmi:id="_18R5CHMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_18R45XMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5CXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5CnMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_18R5C3MaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_18R5AHMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5DHMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5DXMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5DnMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5D3MaEeeoYuc64YE22w" target="_18R5E3MaEeeoYuc64YE22w" source="_18R5EHMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_18R5EHMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_18R3-nMaEeeoYuc64YE22w" outgoing="_18R5D3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5EXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5EnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_18R5E3MaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_18R5D3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5FHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5FXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5FnMaEeeoYuc64YE22w" name="Passthru(Fork(s)@685fa133)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5F3MaEeeoYuc64YE22w" target="_18R5G3MaEeeoYuc64YE22w" source="_18R5GHMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_18R5GHMaEeeoYuc64YE22w" name="Passthru(Fork(s)@685fa133).input" incoming="_18R4K3MaEeeoYuc64YE22w" outgoing="_18R5F3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5GXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5GnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_18R5G3MaEeeoYuc64YE22w" name="Passthru(Fork(s)@685fa133).output" incoming="_18R5F3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5HHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5HXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5HnMaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5H3MaEeeoYuc64YE22w" target="_18R5I3MaEeeoYuc64YE22w" source="_18R5IHMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_18R5IHMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_18R3-3MaEeeoYuc64YE22w" outgoing="_18R5H3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5IXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5InMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_18R5I3MaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_18R5H3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5JHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5JXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5JnMaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5J3MaEeeoYuc64YE22w" target="_18R5K3MaEeeoYuc64YE22w" source="_18R5KHMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_18R5KHMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_18R3_HMaEeeoYuc64YE22w" outgoing="_18R5J3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5KXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5KnMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_18R5K3MaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_18R5J3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5LHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5LXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R5LnMaEeeoYuc64YE22w" name="Value(true)">
              <result xmi:id="_18R5L3MaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5MHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5MXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_18R5MnMaEeeoYuc64YE22w" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5M3MaEeeoYuc64YE22w" name="ExpressionStatement@74cc941">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5NHMaEeeoYuc64YE22w" target="_18R5N3MaEeeoYuc64YE22w" source="_18R5Z3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18R5NXMaEeeoYuc64YE22w" target="_18R5NnMaEeeoYuc64YE22w" source="_18R5OnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R5NnMaEeeoYuc64YE22w" name="Call(Write)" incoming="_18R5NXMaEeeoYuc64YE22w" behavior="_18SfF3MaEeeoYuc64YE22w">
                <argument xmi:id="_18R5N3MaEeeoYuc64YE22w" name="Call(Write).argument(value)" incoming="_18R5NHMaEeeoYuc64YE22w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5OHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5OXMaEeeoYuc64YE22w" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5OnMaEeeoYuc64YE22w" name="Tuple@4772191a" outgoing="_18R5NXMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5O3MaEeeoYuc64YE22w" target="_18R5T3MaEeeoYuc64YE22w" source="_18R5R3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_18R5PHMaEeeoYuc64YE22w" target="_18R5TnMaEeeoYuc64YE22w" source="_18R5RnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5PXMaEeeoYuc64YE22w" target="_18R5WnMaEeeoYuc64YE22w" source="_18R5R3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_18R5PnMaEeeoYuc64YE22w" target="_18R5ZnMaEeeoYuc64YE22w" source="_18R5ZXMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5P3MaEeeoYuc64YE22w" target="_18R5ZnMaEeeoYuc64YE22w" source="_18R5UnMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_18R5QHMaEeeoYuc64YE22w" target="_18R5VXMaEeeoYuc64YE22w" source="_18R5ZnMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R5QXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_18R5QnMaEeeoYuc64YE22w" target="_18R5W3MaEeeoYuc64YE22w" source="_18R5ZnMaEeeoYuc64YE22w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R5Q3MaEeeoYuc64YE22w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5RHMaEeeoYuc64YE22w" target="_18R5Z3MaEeeoYuc64YE22w" source="_18R5V3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5RXMaEeeoYuc64YE22w" target="_18R5Z3MaEeeoYuc64YE22w" source="_18R5XXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5RnMaEeeoYuc64YE22w" name="Operands(EqualityExpression@38dfbbaa)" outgoing="_18R5PHMaEeeoYuc64YE22w">
                  <node xmi:type="uml:ForkNode" xmi:id="_18R5R3MaEeeoYuc64YE22w" name="Fork()@35304516" incoming="_18R3_XMaEeeoYuc64YE22w" outgoing="_18R5O3MaEeeoYuc64YE22w _18R5PXMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5SHMaEeeoYuc64YE22w" name="RightHandSide@2bb20722"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R5SXMaEeeoYuc64YE22w" name="Value(null)">
                    <result xmi:id="_18R5SnMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5S3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5THMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralNull" xmi:id="_18R5TXMaEeeoYuc64YE22w"/>
                  </node>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R5TnMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_18R5PHMaEeeoYuc64YE22w">
                  <argument xmi:id="_18R5T3MaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_18R5O3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5UHMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5UXMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_18R5UnMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_18R5P3MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5U3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5VHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5VXMaEeeoYuc64YE22w" name="NullCoalescingExpression@582897cd.operand2" incoming="_18R5QHMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5VnMaEeeoYuc64YE22w" target="_18R5V3MaEeeoYuc64YE22w" source="_18R5WnMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_18R5V3MaEeeoYuc64YE22w" name="NullCoalescingExpression@582897cd.operand2.result" incoming="_18R5VnMaEeeoYuc64YE22w" outgoing="_18R5RHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5WHMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5WXMaEeeoYuc64YE22w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_18R5WnMaEeeoYuc64YE22w" name="Merge(Fork()@35304516)" incoming="_18R5PXMaEeeoYuc64YE22w" outgoing="_18R5VnMaEeeoYuc64YE22w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5W3MaEeeoYuc64YE22w" name="NullCoalescingExpression@582897cd.operand3" incoming="_18R5QnMaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5XHMaEeeoYuc64YE22w" target="_18R5XXMaEeeoYuc64YE22w" source="_18R5YXMaEeeoYuc64YE22w"/>
                  <structuredNodeOutput xmi:id="_18R5XXMaEeeoYuc64YE22w" name="NullCoalescingExpression@582897cd.operand3.result" incoming="_18R5XHMaEeeoYuc64YE22w" outgoing="_18R5RXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5XnMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5X3MaEeeoYuc64YE22w" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R5YHMaEeeoYuc64YE22w" name="Value(&quot;null&quot;)">
                    <result xmi:id="_18R5YXMaEeeoYuc64YE22w" name="Value(&quot;null&quot;).result" outgoing="_18R5XHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5YnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5Y3MaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_18R5ZHMaEeeoYuc64YE22w" value="null">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_18R5ZXMaEeeoYuc64YE22w" name="Initial(NullCoalescingExpression@582897cd)" outgoing="_18R5PnMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_18R5ZnMaEeeoYuc64YE22w" name="Decision(NullCoalescingExpression@582897cd)" incoming="_18R5PnMaEeeoYuc64YE22w _18R5P3MaEeeoYuc64YE22w" outgoing="_18R5QHMaEeeoYuc64YE22w _18R5QnMaEeeoYuc64YE22w" decisionInputFlow="_18R5P3MaEeeoYuc64YE22w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_18R5Z3MaEeeoYuc64YE22w" name="Merge(NullCoalescingExpression@582897cd.result)" incoming="_18R5RHMaEeeoYuc64YE22w _18R5RXMaEeeoYuc64YE22w" outgoing="_18R5NHMaEeeoYuc64YE22w"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5aHMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5aXMaEeeoYuc64YE22w" target="_18R5bXMaEeeoYuc64YE22w" source="_18R5anMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_18R5anMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_18R3_nMaEeeoYuc64YE22w" outgoing="_18R5aXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5a3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5bHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_18R5bXMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_18R5aXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5bnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5b3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5cHMaEeeoYuc64YE22w" name="Passthru(Fork(s)@685fa133)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5cXMaEeeoYuc64YE22w" target="_18R5dXMaEeeoYuc64YE22w" source="_18R5cnMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_18R5cnMaEeeoYuc64YE22w" name="Passthru(Fork(s)@685fa133).input" incoming="_18R4LHMaEeeoYuc64YE22w" outgoing="_18R5cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5c3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5dHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_18R5dXMaEeeoYuc64YE22w" name="Passthru(Fork(s)@685fa133).output" incoming="_18R5cXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5dnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5d3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5eHMaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5eXMaEeeoYuc64YE22w" target="_18R5fXMaEeeoYuc64YE22w" source="_18R5enMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_18R5enMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_18R3_3MaEeeoYuc64YE22w" outgoing="_18R5eXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5e3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5fHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_18R5fXMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_18R5eXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5fnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5f3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5gHMaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5gXMaEeeoYuc64YE22w" target="_18R5hXMaEeeoYuc64YE22w" source="_18R5gnMaEeeoYuc64YE22w"/>
              <structuredNodeInput xmi:id="_18R5gnMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_18R4AHMaEeeoYuc64YE22w" outgoing="_18R5gXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5g3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5hHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_18R5hXMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_18R5gXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5hnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5h3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_18R5iHMaEeeoYuc64YE22w" body="_18R423MaEeeoYuc64YE22w _18R5DnMaEeeoYuc64YE22w _18R5FnMaEeeoYuc64YE22w _18R5HnMaEeeoYuc64YE22w _18R5JnMaEeeoYuc64YE22w" bodyOutput="_18R5E3MaEeeoYuc64YE22w _18R5G3MaEeeoYuc64YE22w _18R5I3MaEeeoYuc64YE22w _18R5K3MaEeeoYuc64YE22w" decider="_18R42HMaEeeoYuc64YE22w" successorClause="_18R5iXMaEeeoYuc64YE22w" test="_18R4zHMaEeeoYuc64YE22w"/>
            <clause xmi:id="_18R5iXMaEeeoYuc64YE22w" body="_18R5M3MaEeeoYuc64YE22w _18R5aHMaEeeoYuc64YE22w _18R5cHMaEeeoYuc64YE22w _18R5eHMaEeeoYuc64YE22w _18R5gHMaEeeoYuc64YE22w" bodyOutput="_18R5bXMaEeeoYuc64YE22w _18R5dXMaEeeoYuc64YE22w _18R5fXMaEeeoYuc64YE22w _18R5hXMaEeeoYuc64YE22w" decider="_18R5L3MaEeeoYuc64YE22w" predecessorClause="_18R5iHMaEeeoYuc64YE22w" test="_18R5LnMaEeeoYuc64YE22w"/>
            <result xmi:id="_18R5inMaEeeoYuc64YE22w" name="IfStatement@72fa42c0.result(label)" outgoing="_18R4JXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5i3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5jHMaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_18R5jXMaEeeoYuc64YE22w" name="IfStatement@72fa42c0.result(s)" outgoing="_18R4JnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5jnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5j3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_18R5kHMaEeeoYuc64YE22w" name="IfStatement@72fa42c0.result(value2)" outgoing="_18R4J3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5kXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5knMaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_18R5k3MaEeeoYuc64YE22w" name="IfStatement@72fa42c0.result(value1)" outgoing="_18R4KHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5lHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5lXMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_18R5lnMaEeeoYuc64YE22w" name="Fork(label)" incoming="_18R4JXMaEeeoYuc64YE22w" outgoing="_18R4L3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_18R5l3MaEeeoYuc64YE22w" name="Fork(s)" incoming="_18R4JnMaEeeoYuc64YE22w" outgoing="_18R4MHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_18R5mHMaEeeoYuc64YE22w" name="Fork(value2)" incoming="_18R4J3MaEeeoYuc64YE22w" outgoing="_18R4MXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_18R5mXMaEeeoYuc64YE22w" name="Fork(value1)" incoming="_18R4KHMaEeeoYuc64YE22w" outgoing="_18R4MnMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5mnMaEeeoYuc64YE22w" name="ExpressionStatement@69f35228" incoming="_18R4LnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5m3MaEeeoYuc64YE22w" target="_18R5nnMaEeeoYuc64YE22w" source="_18R5pnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18R5nHMaEeeoYuc64YE22w" target="_18R5nXMaEeeoYuc64YE22w" source="_18R5pHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R5nXMaEeeoYuc64YE22w" name="Call(WriteLine)" incoming="_18R5nHMaEeeoYuc64YE22w">
              <argument xmi:id="_18R5nnMaEeeoYuc64YE22w" name="Call(WriteLine).argument(value)" incoming="_18R5m3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5n3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5oHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_18R5oXMaEeeoYuc64YE22w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5onMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5o3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5pHMaEeeoYuc64YE22w" name="Tuple@28887fee" outgoing="_18R5nHMaEeeoYuc64YE22w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R5pXMaEeeoYuc64YE22w" name="Value(&quot;&quot;)">
                <result xmi:id="_18R5pnMaEeeoYuc64YE22w" name="Value(&quot;&quot;).result" outgoing="_18R5m3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5p3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5qHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_18R5qXMaEeeoYuc64YE22w" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5qnMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5q3MaEeeoYuc64YE22w" target="_18R5r3MaEeeoYuc64YE22w" source="_18R5rHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_18R5rHMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_18R4L3MaEeeoYuc64YE22w" outgoing="_18R5q3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5rXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5rnMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_18R5r3MaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_18R5q3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5sHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5sXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5snMaEeeoYuc64YE22w" name="Passthru(Fork(s))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5s3MaEeeoYuc64YE22w" target="_18R5t3MaEeeoYuc64YE22w" source="_18R5tHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_18R5tHMaEeeoYuc64YE22w" name="Passthru(Fork(s)).input" incoming="_18R4MHMaEeeoYuc64YE22w" outgoing="_18R5s3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5tXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5tnMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_18R5t3MaEeeoYuc64YE22w" name="Passthru(Fork(s)).output" incoming="_18R5s3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5uHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5uXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5unMaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5u3MaEeeoYuc64YE22w" target="_18R5v3MaEeeoYuc64YE22w" source="_18R5vHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_18R5vHMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_18R4MXMaEeeoYuc64YE22w" outgoing="_18R5u3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5vXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5vnMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_18R5v3MaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_18R5u3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5wHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5wXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5wnMaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R5w3MaEeeoYuc64YE22w" target="_18R5x3MaEeeoYuc64YE22w" source="_18R5xHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_18R5xHMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_18R4MnMaEeeoYuc64YE22w" outgoing="_18R5w3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5xXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5xnMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_18R5x3MaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_18R5w3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5yHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5yXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R5ynMaEeeoYuc64YE22w" name="Value(true)">
            <result xmi:id="_18R5y3MaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5zHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5zXMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_18R5znMaEeeoYuc64YE22w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R5z3MaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R50HMaEeeoYuc64YE22w" target="_18R51HMaEeeoYuc64YE22w" source="_18R50XMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_18R50XMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_18R4AXMaEeeoYuc64YE22w" outgoing="_18R50HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R50nMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R503MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_18R51HMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_18R50HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R51XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R51nMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R513MaEeeoYuc64YE22w" name="Value(null)">
            <result xmi:id="_18R52HMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R52XMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R52nMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralNull" xmi:id="_18R523MaEeeoYuc64YE22w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R53HMaEeeoYuc64YE22w" name="Passthru(Fork(value2))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R53XMaEeeoYuc64YE22w" target="_18R54XMaEeeoYuc64YE22w" source="_18R53nMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_18R53nMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).input" incoming="_18R4AnMaEeeoYuc64YE22w" outgoing="_18R53XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R533MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R54HMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_18R54XMaEeeoYuc64YE22w" name="Passthru(Fork(value2)).output" incoming="_18R53XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R54nMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R543MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R55HMaEeeoYuc64YE22w" name="Passthru(Fork(value1))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R55XMaEeeoYuc64YE22w" target="_18R56XMaEeeoYuc64YE22w" source="_18R55nMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_18R55nMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).input" incoming="_18R4A3MaEeeoYuc64YE22w" outgoing="_18R55XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R553MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R56HMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_18R56XMaEeeoYuc64YE22w" name="Passthru(Fork(value1)).output" incoming="_18R55XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R56nMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R563MaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_18R57HMaEeeoYuc64YE22w" body="_18R4gHMaEeeoYuc64YE22w _18R4s3MaEeeoYuc64YE22w _18R4y3MaEeeoYuc64YE22w _18R5mnMaEeeoYuc64YE22w _18R5qnMaEeeoYuc64YE22w _18R5snMaEeeoYuc64YE22w _18R5unMaEeeoYuc64YE22w _18R5wnMaEeeoYuc64YE22w" bodyOutput="_18R5r3MaEeeoYuc64YE22w _18R5t3MaEeeoYuc64YE22w _18R5v3MaEeeoYuc64YE22w _18R5x3MaEeeoYuc64YE22w" decider="_18R4fXMaEeeoYuc64YE22w" successorClause="_18R57XMaEeeoYuc64YE22w" test="_18R4M3MaEeeoYuc64YE22w"/>
          <clause xmi:id="_18R57XMaEeeoYuc64YE22w" body="_18R5z3MaEeeoYuc64YE22w _18R513MaEeeoYuc64YE22w _18R53HMaEeeoYuc64YE22w _18R55HMaEeeoYuc64YE22w" bodyOutput="_18R51HMaEeeoYuc64YE22w _18R52HMaEeeoYuc64YE22w _18R54XMaEeeoYuc64YE22w _18R56XMaEeeoYuc64YE22w" decider="_18R5y3MaEeeoYuc64YE22w" predecessorClause="_18R57HMaEeeoYuc64YE22w" test="_18R5ynMaEeeoYuc64YE22w"/>
          <result xmi:id="_18R57nMaEeeoYuc64YE22w" name="IfStatement@767014a7.result(label)" outgoing="_18R4H3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R573MaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R58HMaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_18R58XMaEeeoYuc64YE22w" name="IfStatement@767014a7.result(s)" outgoing="_18R4IHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R58nMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R583MaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_18R59HMaEeeoYuc64YE22w" name="IfStatement@767014a7.result(value2)" outgoing="_18R4IXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R59XMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R59nMaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_18R593MaEeeoYuc64YE22w" name="IfStatement@767014a7.result(value1)" outgoing="_18R4InMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R5-HMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R5-XMaEeeoYuc64YE22w" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_18R5-nMaEeeoYuc64YE22w" name="Fork(label)" incoming="_18R4H3MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_18R5-3MaEeeoYuc64YE22w" name="Fork(s)" incoming="_18R4IHMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_18R5_HMaEeeoYuc64YE22w" name="Fork(value2)" incoming="_18R4IXMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_18R5_XMaEeeoYuc64YE22w" name="Fork(value1)" incoming="_18R4InMaEeeoYuc64YE22w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_18R4CHMaEeeoYuc64YE22w" name="Input(label)" outgoing="_18R383MaEeeoYuc64YE22w" parameter="_18R36nMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_18R4CXMaEeeoYuc64YE22w" name="Input(value1)" outgoing="_18R39HMaEeeoYuc64YE22w" parameter="_18R37XMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_18R4CnMaEeeoYuc64YE22w" name="Input(value2)" outgoing="_18R39XMaEeeoYuc64YE22w" parameter="_18R38HMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:JoinNode" xmi:id="_18R4C3MaEeeoYuc64YE22w" name="Join(Input))" incoming="_18R4BHMaEeeoYuc64YE22w _18R4BXMaEeeoYuc64YE22w _18R4BnMaEeeoYuc64YE22w" outgoing="_18R4B3MaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_18R5_nMaEeeoYuc64YE22w" name="AssertFalse" visibility="public" node="_18R6EnMaEeeoYuc64YE22w _18R6FXMaEeeoYuc64YE22w _18R6E3MaEeeoYuc64YE22w _18R6G3MaEeeoYuc64YE22w _18R6IXMaEeeoYuc64YE22w _18R6FHMaEeeoYuc64YE22w" group="_18R6FXMaEeeoYuc64YE22w _18R6G3MaEeeoYuc64YE22w _18R6IXMaEeeoYuc64YE22w">
      <elementImport xmi:id="_18R5_3MaEeeoYuc64YE22w" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_18R6AHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_18R6AXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_18R6AnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_18R6A3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_18R6BHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_18R6BXMaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6BnMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6B3MaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_18R6CHMaEeeoYuc64YE22w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6CXMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6CnMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6C3MaEeeoYuc64YE22w" target="_18R6F3MaEeeoYuc64YE22w" source="_18R6EnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6DHMaEeeoYuc64YE22w" target="_18R6HXMaEeeoYuc64YE22w" source="_18R6E3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6DXMaEeeoYuc64YE22w" target="_18R6RnMaEeeoYuc64YE22w" source="_18R6GnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6DnMaEeeoYuc64YE22w" target="_18R6W3MaEeeoYuc64YE22w" source="_18R6IHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18R6D3MaEeeoYuc64YE22w" target="_18R6FHMaEeeoYuc64YE22w" source="_18R6FXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18R6EHMaEeeoYuc64YE22w" target="_18R6FHMaEeeoYuc64YE22w" source="_18R6G3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18R6EXMaEeeoYuc64YE22w" target="_18R6IXMaEeeoYuc64YE22w" source="_18R6FHMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_18R6FXMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_18R6D3MaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6FnMaEeeoYuc64YE22w" target="_18R6GnMaEeeoYuc64YE22w" source="_18R6F3MaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_18R6F3MaEeeoYuc64YE22w" name="Input(label)" incoming="_18R6C3MaEeeoYuc64YE22w" outgoing="_18R6FnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6GHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6GXMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_18R6GnMaEeeoYuc64YE22w" name="Fork(label)" incoming="_18R6FnMaEeeoYuc64YE22w" outgoing="_18R6DXMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_18R6G3MaEeeoYuc64YE22w" name="Node(Input(condition))" outgoing="_18R6EHMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6HHMaEeeoYuc64YE22w" target="_18R6IHMaEeeoYuc64YE22w" source="_18R6HXMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_18R6HXMaEeeoYuc64YE22w" name="Input(condition)" incoming="_18R6DHMaEeeoYuc64YE22w" outgoing="_18R6HHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6HnMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6H3MaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_18R6IHMaEeeoYuc64YE22w" name="Fork(condition)" incoming="_18R6HHMaEeeoYuc64YE22w" outgoing="_18R6DnMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_18R6IXMaEeeoYuc64YE22w" name="Body(AssertFalse)" incoming="_18R6EXMaEeeoYuc64YE22w">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R6InMaEeeoYuc64YE22w" name="ExpressionStatement@106d8e5">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6I3MaEeeoYuc64YE22w" target="_18R6J3MaEeeoYuc64YE22w" source="_18R6P3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6JHMaEeeoYuc64YE22w" target="_18R6KnMaEeeoYuc64YE22w" source="_18R6ZHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18R6JXMaEeeoYuc64YE22w" target="_18R6JnMaEeeoYuc64YE22w" source="_18R6LXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R6JnMaEeeoYuc64YE22w" name="Call(AssertTrue)" incoming="_18R6JXMaEeeoYuc64YE22w" behavior="_18R6ZnMaEeeoYuc64YE22w">
            <argument xmi:id="_18R6J3MaEeeoYuc64YE22w" name="Call(AssertTrue).argument(label)" incoming="_18R6I3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6KHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6KXMaEeeoYuc64YE22w" value="1"/>
            </argument>
            <argument xmi:id="_18R6KnMaEeeoYuc64YE22w" name="Call(AssertTrue).argument(condition)" incoming="_18R6JHMaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6K3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6LHMaEeeoYuc64YE22w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R6LXMaEeeoYuc64YE22w" name="Tuple@4e40f433" outgoing="_18R6JXMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6LnMaEeeoYuc64YE22w" target="_18R6Q3MaEeeoYuc64YE22w" source="_18R6OXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6L3MaEeeoYuc64YE22w" target="_18R6UnMaEeeoYuc64YE22w" source="_18R6W3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6MHMaEeeoYuc64YE22w" target="_18R6XXMaEeeoYuc64YE22w" source="_18R6W3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6MXMaEeeoYuc64YE22w" target="_18R6Y3MaEeeoYuc64YE22w" source="_18R6YHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6MnMaEeeoYuc64YE22w" target="_18R6ZHMaEeeoYuc64YE22w" source="_18R6VXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6M3MaEeeoYuc64YE22w" target="_18R6ZXMaEeeoYuc64YE22w" source="_18R6Y3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6NHMaEeeoYuc64YE22w" target="_18R6ZXMaEeeoYuc64YE22w" source="_18R6Y3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6NXMaEeeoYuc64YE22w" target="_18R6ZHMaEeeoYuc64YE22w" source="_18R6ZXMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18R6NnMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6N3MaEeeoYuc64YE22w" target="_18R6WHMaEeeoYuc64YE22w" source="_18R6TXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R6OHMaEeeoYuc64YE22w" name="Value(&quot;! &quot;)">
              <result xmi:id="_18R6OXMaEeeoYuc64YE22w" name="Value(&quot;! &quot;).result" outgoing="_18R6LnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6OnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6O3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_18R6PHMaEeeoYuc64YE22w" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18R6PXMaEeeoYuc64YE22w" name="Node(Call(Concat))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6PnMaEeeoYuc64YE22w" target="_18R6P3MaEeeoYuc64YE22w" source="_18R6SXMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18R6P3MaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_18R6PnMaEeeoYuc64YE22w" outgoing="_18R6I3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6QHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6QXMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R6QnMaEeeoYuc64YE22w" name="Call(Concat)">
                <argument xmi:id="_18R6Q3MaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_18R6LnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6RHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6RXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18R6RnMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_18R6DXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6R3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6SHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18R6SXMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_18R6PnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6SnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6S3MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18R6THMaEeeoYuc64YE22w" name="Value(false)">
              <result xmi:id="_18R6TXMaEeeoYuc64YE22w" name="Value(false).result" outgoing="_18R6N3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6TnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6T3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_18R6UHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_18R6UXMaEeeoYuc64YE22w" name="Test(==)">
              <first xmi:id="_18R6UnMaEeeoYuc64YE22w" name="Test(==).first" incoming="_18R6L3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6U3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6VHMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_18R6VXMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_18R6MnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6VnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6V3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_18R6WHMaEeeoYuc64YE22w" name="Test(==).second" incoming="_18R6N3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6WXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6WnMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18R6W3MaEeeoYuc64YE22w" name="Fork(Fork(condition))" incoming="_18R6DnMaEeeoYuc64YE22w" outgoing="_18R6L3MaEeeoYuc64YE22w _18R6MHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18R6XHMaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_18R6XXMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_18R6MHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6XnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6X3MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18R6YHMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_18R6MXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6YXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6YnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18R6Y3MaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_18R6MXMaEeeoYuc64YE22w" outgoing="_18R6M3MaEeeoYuc64YE22w _18R6NHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_18R6ZHMaEeeoYuc64YE22w" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_18R6MnMaEeeoYuc64YE22w _18R6NXMaEeeoYuc64YE22w" outgoing="_18R6JHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18R6ZXMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_18R6M3MaEeeoYuc64YE22w _18R6NHMaEeeoYuc64YE22w" outgoing="_18R6NXMaEeeoYuc64YE22w" decisionInputFlow="_18R6NHMaEeeoYuc64YE22w"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_18R6EnMaEeeoYuc64YE22w" name="Input(label)" outgoing="_18R6C3MaEeeoYuc64YE22w" parameter="_18R6BXMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_18R6E3MaEeeoYuc64YE22w" name="Input(condition)" outgoing="_18R6DHMaEeeoYuc64YE22w" parameter="_18R6CHMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_18R6FHMaEeeoYuc64YE22w" name="Join(Input))" incoming="_18R6D3MaEeeoYuc64YE22w _18R6EHMaEeeoYuc64YE22w" outgoing="_18R6EXMaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_18R6ZnMaEeeoYuc64YE22w" name="AssertTrue" visibility="public" node="_18SconMaEeeoYuc64YE22w _18ScpXMaEeeoYuc64YE22w _18Sco3MaEeeoYuc64YE22w _18Scq3MaEeeoYuc64YE22w _18ScsXMaEeeoYuc64YE22w _18ScpHMaEeeoYuc64YE22w" group="_18ScpXMaEeeoYuc64YE22w _18Scq3MaEeeoYuc64YE22w _18ScsXMaEeeoYuc64YE22w">
      <packageImport xmi:id="_18R6Z3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_18R6aHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_18R6aXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_18R6anMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_18R6a3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_18R6bHMaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6bXMaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6bnMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_18R6b3MaEeeoYuc64YE22w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18R6cHMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18R6cXMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6cnMaEeeoYuc64YE22w" target="_18Scp3MaEeeoYuc64YE22w" source="_18SconMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6c3MaEeeoYuc64YE22w" target="_18ScrXMaEeeoYuc64YE22w" source="_18Sco3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6dHMaEeeoYuc64YE22w" target="_18Scz3MaEeeoYuc64YE22w" source="_18ScsHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6dXMaEeeoYuc64YE22w" target="_18Sc-3MaEeeoYuc64YE22w" source="_18ScqnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6dnMaEeeoYuc64YE22w" target="_18SdA3MaEeeoYuc64YE22w" source="_18ScsHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6d3MaEeeoYuc64YE22w" target="_18SdC3MaEeeoYuc64YE22w" source="_18ScqnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6eHMaEeeoYuc64YE22w" target="_18SdGHMaEeeoYuc64YE22w" source="_18ScsHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18R6eXMaEeeoYuc64YE22w" target="_18SdIHMaEeeoYuc64YE22w" source="_18ScqnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18R6enMaEeeoYuc64YE22w" target="_18ScpHMaEeeoYuc64YE22w" source="_18ScpXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18ScoHMaEeeoYuc64YE22w" target="_18ScpHMaEeeoYuc64YE22w" source="_18Scq3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18ScoXMaEeeoYuc64YE22w" target="_18ScsXMaEeeoYuc64YE22w" source="_18ScpHMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_18ScpXMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_18R6enMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18ScpnMaEeeoYuc64YE22w" target="_18ScqnMaEeeoYuc64YE22w" source="_18Scp3MaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_18Scp3MaEeeoYuc64YE22w" name="Input(label)" incoming="_18R6cnMaEeeoYuc64YE22w" outgoing="_18ScpnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ScqHMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ScqXMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_18ScqnMaEeeoYuc64YE22w" name="Fork(label)" incoming="_18ScpnMaEeeoYuc64YE22w" outgoing="_18R6dXMaEeeoYuc64YE22w _18R6d3MaEeeoYuc64YE22w _18R6eXMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_18Scq3MaEeeoYuc64YE22w" name="Node(Input(condition))" outgoing="_18ScoHMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18ScrHMaEeeoYuc64YE22w" target="_18ScsHMaEeeoYuc64YE22w" source="_18ScrXMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_18ScrXMaEeeoYuc64YE22w" name="Input(condition)" incoming="_18R6c3MaEeeoYuc64YE22w" outgoing="_18ScrHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ScrnMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Scr3MaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_18ScsHMaEeeoYuc64YE22w" name="Fork(condition)" incoming="_18ScrHMaEeeoYuc64YE22w" outgoing="_18R6dHMaEeeoYuc64YE22w _18R6dnMaEeeoYuc64YE22w _18R6eHMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_18ScsXMaEeeoYuc64YE22w" name="Body(AssertTrue)" incoming="_18ScoXMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18ScsnMaEeeoYuc64YE22w" target="_18SdLnMaEeeoYuc64YE22w" source="_18SdKHMaEeeoYuc64YE22w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18Scs3MaEeeoYuc64YE22w" target="_18SdL3MaEeeoYuc64YE22w" source="_18SdK3MaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ConditionalNode" xmi:id="_18SctHMaEeeoYuc64YE22w" name="IfStatement@16934565">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SctXMaEeeoYuc64YE22w" name="Test(Call(Not).result(result))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SctnMaEeeoYuc64YE22w" target="_18ScxnMaEeeoYuc64YE22w" source="_18Scz3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sct3MaEeeoYuc64YE22w" target="_18Sc0XMaEeeoYuc64YE22w" source="_18Scz3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18ScuHMaEeeoYuc64YE22w" target="_18Sc13MaEeeoYuc64YE22w" source="_18Sc1HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18ScuXMaEeeoYuc64YE22w" target="_18Sc2HMaEeeoYuc64YE22w" source="_18ScyXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18ScunMaEeeoYuc64YE22w" target="_18Sc2XMaEeeoYuc64YE22w" source="_18Sc13MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Scu3MaEeeoYuc64YE22w" target="_18Sc2XMaEeeoYuc64YE22w" source="_18Sc13MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18ScvHMaEeeoYuc64YE22w" target="_18Sc2HMaEeeoYuc64YE22w" source="_18Sc2XMaEeeoYuc64YE22w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_18ScvXMaEeeoYuc64YE22w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18ScvnMaEeeoYuc64YE22w" target="_18SczHMaEeeoYuc64YE22w" source="_18ScwXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Scv3MaEeeoYuc64YE22w" target="_18Sc23MaEeeoYuc64YE22w" source="_18Sc2HMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18ScwHMaEeeoYuc64YE22w" name="Value(true)">
              <result xmi:id="_18ScwXMaEeeoYuc64YE22w" name="Value(true).result" outgoing="_18ScvnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ScwnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Scw3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_18ScxHMaEeeoYuc64YE22w" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_18ScxXMaEeeoYuc64YE22w" name="Test(==)">
              <first xmi:id="_18ScxnMaEeeoYuc64YE22w" name="Test(==).first" incoming="_18SctnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Scx3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ScyHMaEeeoYuc64YE22w" value="1"/>
              </first>
              <result xmi:id="_18ScyXMaEeeoYuc64YE22w" name="Test(==).result" outgoing="_18ScuXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18ScynMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Scy3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <second xmi:id="_18SczHMaEeeoYuc64YE22w" name="Test(==).second" incoming="_18ScvnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SczXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18ScznMaEeeoYuc64YE22w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18Scz3MaEeeoYuc64YE22w" name="Fork(Fork(condition))" incoming="_18R6dHMaEeeoYuc64YE22w" outgoing="_18SctnMaEeeoYuc64YE22w _18Sct3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Sc0HMaEeeoYuc64YE22w" name="Call(NotEmpty)">
              <argument xmi:id="_18Sc0XMaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_18Sct3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sc0nMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sc03MaEeeoYuc64YE22w" value="*"/>
              </argument>
              <result xmi:id="_18Sc1HMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_18ScuHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sc1XMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sc1nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18Sc13MaEeeoYuc64YE22w" name="Fork(Call(NotEmpty).result())" incoming="_18ScuHMaEeeoYuc64YE22w" outgoing="_18ScunMaEeeoYuc64YE22w _18Scu3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_18Sc2HMaEeeoYuc64YE22w" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_18ScuXMaEeeoYuc64YE22w _18ScvHMaEeeoYuc64YE22w" outgoing="_18Scv3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_18Sc2XMaEeeoYuc64YE22w" name="Decision(Call(NotEmpty).result())" incoming="_18ScunMaEeeoYuc64YE22w _18Scu3MaEeeoYuc64YE22w" outgoing="_18ScvHMaEeeoYuc64YE22w" decisionInputFlow="_18Scu3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Sc2nMaEeeoYuc64YE22w" name="Call(Not)">
              <argument xmi:id="_18Sc23MaEeeoYuc64YE22w" name="Call(Not).argument(x)" incoming="_18Scv3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sc3HMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sc3XMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_18Sc3nMaEeeoYuc64YE22w" name="Call(Not).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sc33MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sc4HMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Sc4XMaEeeoYuc64YE22w" name="ExpressionStatement@654e5bea">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sc4nMaEeeoYuc64YE22w" target="_18Sc5XMaEeeoYuc64YE22w" source="_18Sc9HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18Sc43MaEeeoYuc64YE22w" target="_18Sc5HMaEeeoYuc64YE22w" source="_18Sc63MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Sc5HMaEeeoYuc64YE22w" name="Call(WriteLine)" incoming="_18Sc43MaEeeoYuc64YE22w">
              <argument xmi:id="_18Sc5XMaEeeoYuc64YE22w" name="Call(WriteLine).argument(value)" incoming="_18Sc4nMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sc5nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sc53MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_18Sc6HMaEeeoYuc64YE22w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sc6XMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sc6nMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Sc63MaEeeoYuc64YE22w" name="Tuple@28645b5" outgoing="_18Sc43MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sc7HMaEeeoYuc64YE22w" target="_18Sc-HMaEeeoYuc64YE22w" source="_18Sc7nMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Sc7XMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_18Sc7nMaEeeoYuc64YE22w" name="Value(&quot;FAILED: &quot;).result" outgoing="_18Sc7HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sc73MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sc8HMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_18Sc8XMaEeeoYuc64YE22w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Sc8nMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sc83MaEeeoYuc64YE22w" target="_18Sc9HMaEeeoYuc64YE22w" source="_18Sc_nMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18Sc9HMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_18Sc83MaEeeoYuc64YE22w" outgoing="_18Sc4nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sc9XMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sc9nMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Sc93MaEeeoYuc64YE22w" name="Call(Concat)">
                  <argument xmi:id="_18Sc-HMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_18Sc7HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sc-XMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sc-nMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18Sc-3MaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_18R6dXMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sc_HMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sc_XMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <result xmi:id="_18Sc_nMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_18Sc83MaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sc_3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdAHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SdAXMaEeeoYuc64YE22w" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdAnMaEeeoYuc64YE22w" target="_18SdBnMaEeeoYuc64YE22w" source="_18SdA3MaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_18SdA3MaEeeoYuc64YE22w" name="Passthru(Fork(condition)).input" incoming="_18R6dnMaEeeoYuc64YE22w" outgoing="_18SdAnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdBHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdBXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_18SdBnMaEeeoYuc64YE22w" name="Passthru(Fork(condition)).output" incoming="_18SdAnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdB3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdCHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SdCXMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdCnMaEeeoYuc64YE22w" target="_18SdDnMaEeeoYuc64YE22w" source="_18SdC3MaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_18SdC3MaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_18R6d3MaEeeoYuc64YE22w" outgoing="_18SdCnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdDHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdDXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_18SdDnMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_18SdCnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdD3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdEHMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18SdEXMaEeeoYuc64YE22w" name="Value(true)">
            <result xmi:id="_18SdEnMaEeeoYuc64YE22w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdE3MaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdFHMaEeeoYuc64YE22w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_18SdFXMaEeeoYuc64YE22w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SdFnMaEeeoYuc64YE22w" name="Passthru(Fork(condition))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdF3MaEeeoYuc64YE22w" target="_18SdG3MaEeeoYuc64YE22w" source="_18SdGHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_18SdGHMaEeeoYuc64YE22w" name="Passthru(Fork(condition)).input" incoming="_18R6eHMaEeeoYuc64YE22w" outgoing="_18SdF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdGXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdGnMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_18SdG3MaEeeoYuc64YE22w" name="Passthru(Fork(condition)).output" incoming="_18SdF3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdHHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdHXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SdHnMaEeeoYuc64YE22w" name="Passthru(Fork(label))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdH3MaEeeoYuc64YE22w" target="_18SdI3MaEeeoYuc64YE22w" source="_18SdIHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_18SdIHMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_18R6eXMaEeeoYuc64YE22w" outgoing="_18SdH3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdIXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdInMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_18SdI3MaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_18SdH3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdJHMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdJXMaEeeoYuc64YE22w" value="1"/>
            </structuredNodeOutput>
          </node>
          <clause xmi:id="_18SdJnMaEeeoYuc64YE22w" body="_18Sc4XMaEeeoYuc64YE22w _18SdAXMaEeeoYuc64YE22w _18SdCXMaEeeoYuc64YE22w" bodyOutput="_18SdBnMaEeeoYuc64YE22w _18SdDnMaEeeoYuc64YE22w" decider="_18Sc3nMaEeeoYuc64YE22w" successorClause="_18SdJ3MaEeeoYuc64YE22w" test="_18SctXMaEeeoYuc64YE22w"/>
          <clause xmi:id="_18SdJ3MaEeeoYuc64YE22w" body="_18SdFnMaEeeoYuc64YE22w _18SdHnMaEeeoYuc64YE22w" bodyOutput="_18SdG3MaEeeoYuc64YE22w _18SdI3MaEeeoYuc64YE22w" decider="_18SdEnMaEeeoYuc64YE22w" predecessorClause="_18SdJnMaEeeoYuc64YE22w" test="_18SdEXMaEeeoYuc64YE22w"/>
          <result xmi:id="_18SdKHMaEeeoYuc64YE22w" name="IfStatement@16934565.result(condition)" outgoing="_18ScsnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdKXMaEeeoYuc64YE22w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdKnMaEeeoYuc64YE22w" value="1"/>
          </result>
          <result xmi:id="_18SdK3MaEeeoYuc64YE22w" name="IfStatement@16934565.result(label)" outgoing="_18Scs3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdLHMaEeeoYuc64YE22w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdLXMaEeeoYuc64YE22w" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_18SdLnMaEeeoYuc64YE22w" name="Fork(condition)" incoming="_18ScsnMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:ForkNode" xmi:id="_18SdL3MaEeeoYuc64YE22w" name="Fork(label)" incoming="_18Scs3MaEeeoYuc64YE22w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_18SconMaEeeoYuc64YE22w" name="Input(label)" outgoing="_18R6cnMaEeeoYuc64YE22w" parameter="_18R6bHMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_18Sco3MaEeeoYuc64YE22w" name="Input(condition)" outgoing="_18R6c3MaEeeoYuc64YE22w" parameter="_18R6b3MaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </node>
      <node xmi:type="uml:JoinNode" xmi:id="_18ScpHMaEeeoYuc64YE22w" name="Join(Input))" incoming="_18R6enMaEeeoYuc64YE22w _18ScoHMaEeeoYuc64YE22w" outgoing="_18ScoXMaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_18SdMHMaEeeoYuc64YE22w" name="AssertList" visibility="public" node="_18SdTnMaEeeoYuc64YE22w _18SdUnMaEeeoYuc64YE22w _18SdT3MaEeeoYuc64YE22w _18SdWHMaEeeoYuc64YE22w _18SdUHMaEeeoYuc64YE22w _18SdXnMaEeeoYuc64YE22w _18SdZHMaEeeoYuc64YE22w _18SdUXMaEeeoYuc64YE22w" group="_18SdUnMaEeeoYuc64YE22w _18SdWHMaEeeoYuc64YE22w _18SdXnMaEeeoYuc64YE22w _18SdZHMaEeeoYuc64YE22w">
      <packageImport xmi:id="_18SdMXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_18SdMnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_18SdM3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_18SdNHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_18SdNXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_18SdNnMaEeeoYuc64YE22w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdN3MaEeeoYuc64YE22w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdOHMaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_18SdOXMaEeeoYuc64YE22w" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdOnMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdO3MaEeeoYuc64YE22w" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_18SdPHMaEeeoYuc64YE22w" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdPXMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdPnMaEeeoYuc64YE22w" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdP3MaEeeoYuc64YE22w" target="_18SdVHMaEeeoYuc64YE22w" source="_18SdTnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdQHMaEeeoYuc64YE22w" target="_18SdWnMaEeeoYuc64YE22w" source="_18SdT3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdQXMaEeeoYuc64YE22w" target="_18SdYHMaEeeoYuc64YE22w" source="_18SdUHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdQnMaEeeoYuc64YE22w" target="_18SdgnMaEeeoYuc64YE22w" source="_18SdV3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdQ3MaEeeoYuc64YE22w" target="_18SdkXMaEeeoYuc64YE22w" source="_18SdXXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdRHMaEeeoYuc64YE22w" target="_18SdnXMaEeeoYuc64YE22w" source="_18SdY3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdRXMaEeeoYuc64YE22w" target="_18Sen3MaEeeoYuc64YE22w" source="_18SdV3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdRnMaEeeoYuc64YE22w" target="_18SeonMaEeeoYuc64YE22w" source="_18SdXXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdR3MaEeeoYuc64YE22w" target="_18SepXMaEeeoYuc64YE22w" source="_18SdY3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdSHMaEeeoYuc64YE22w" target="_18Se13MaEeeoYuc64YE22w" source="_18SdXXMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdSXMaEeeoYuc64YE22w" target="_18Se43MaEeeoYuc64YE22w" source="_18SdY3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18SdSnMaEeeoYuc64YE22w" target="_18SdUXMaEeeoYuc64YE22w" source="_18SdUnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18SdS3MaEeeoYuc64YE22w" target="_18SdUXMaEeeoYuc64YE22w" source="_18SdWHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18SdTHMaEeeoYuc64YE22w" target="_18SdUXMaEeeoYuc64YE22w" source="_18SdXnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18SdTXMaEeeoYuc64YE22w" target="_18SdZHMaEeeoYuc64YE22w" source="_18SdUXMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_18SdUnMaEeeoYuc64YE22w" name="Node(Input(label))" outgoing="_18SdSnMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdU3MaEeeoYuc64YE22w" target="_18SdV3MaEeeoYuc64YE22w" source="_18SdVHMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_18SdVHMaEeeoYuc64YE22w" name="Input(label)" incoming="_18SdP3MaEeeoYuc64YE22w" outgoing="_18SdU3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdVXMaEeeoYuc64YE22w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdVnMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_18SdV3MaEeeoYuc64YE22w" name="Fork(label)" incoming="_18SdU3MaEeeoYuc64YE22w" outgoing="_18SdQnMaEeeoYuc64YE22w _18SdRXMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_18SdWHMaEeeoYuc64YE22w" name="Node(Input(list))" outgoing="_18SdS3MaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdWXMaEeeoYuc64YE22w" target="_18SdXXMaEeeoYuc64YE22w" source="_18SdWnMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_18SdWnMaEeeoYuc64YE22w" name="Input(list)" incoming="_18SdQHMaEeeoYuc64YE22w" outgoing="_18SdWXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdW3MaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdXHMaEeeoYuc64YE22w" value="*"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_18SdXXMaEeeoYuc64YE22w" name="Fork(list)" incoming="_18SdWXMaEeeoYuc64YE22w" outgoing="_18SdQ3MaEeeoYuc64YE22w _18SdSHMaEeeoYuc64YE22w _18SdRnMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_18SdXnMaEeeoYuc64YE22w" name="Node(Input(expected))" outgoing="_18SdTHMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdX3MaEeeoYuc64YE22w" target="_18SdY3MaEeeoYuc64YE22w" source="_18SdYHMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_18SdYHMaEeeoYuc64YE22w" name="Input(expected)" incoming="_18SdQXMaEeeoYuc64YE22w" outgoing="_18SdX3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdYXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdYnMaEeeoYuc64YE22w" value="*"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_18SdY3MaEeeoYuc64YE22w" name="Fork(expected)" incoming="_18SdX3MaEeeoYuc64YE22w" outgoing="_18SdRHMaEeeoYuc64YE22w _18SdSXMaEeeoYuc64YE22w _18SdR3MaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_18SdZHMaEeeoYuc64YE22w" name="Body(AssertList)" incoming="_18SdTXMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ControlFlow" xmi:id="_18SdZXMaEeeoYuc64YE22w" target="_18Sdo3MaEeeoYuc64YE22w" source="_18SdZnMaEeeoYuc64YE22w"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SdZnMaEeeoYuc64YE22w" name="ExpressionStatement@642a9c30" outgoing="_18SdZXMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdZ3MaEeeoYuc64YE22w" target="_18SdbHMaEeeoYuc64YE22w" source="_18SdfnMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdaHMaEeeoYuc64YE22w" target="_18Sdb3MaEeeoYuc64YE22w" source="_18SdjXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdaXMaEeeoYuc64YE22w" target="_18SdcnMaEeeoYuc64YE22w" source="_18SdmXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18SdanMaEeeoYuc64YE22w" target="_18Sda3MaEeeoYuc64YE22w" source="_18SddXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Sda3MaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_18SdanMaEeeoYuc64YE22w" behavior="_18R35HMaEeeoYuc64YE22w">
            <argument xmi:id="_18SdbHMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_18SdZ3MaEeeoYuc64YE22w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdbXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdbnMaEeeoYuc64YE22w" value="1"/>
            </argument>
            <argument xmi:id="_18Sdb3MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_18SdaHMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdcHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdcXMaEeeoYuc64YE22w" value="1"/>
            </argument>
            <argument xmi:id="_18SdcnMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_18SdaXMaEeeoYuc64YE22w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sdc3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SddHMaEeeoYuc64YE22w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SddXMaEeeoYuc64YE22w" name="Tuple@70bb06da" outgoing="_18SdanMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SddnMaEeeoYuc64YE22w" target="_18SdhXMaEeeoYuc64YE22w" source="_18SdeHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Sdd3MaEeeoYuc64YE22w" name="Value(&quot;->size()&quot;)">
              <result xmi:id="_18SdeHMaEeeoYuc64YE22w" name="Value(&quot;->size()&quot;).result" outgoing="_18SddnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdeXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdenMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_18Sde3MaEeeoYuc64YE22w" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SdfHMaEeeoYuc64YE22w" name="Node(Call(Concat))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdfXMaEeeoYuc64YE22w" target="_18SdfnMaEeeoYuc64YE22w" source="_18SdiHMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18SdfnMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_18SdfXMaEeeoYuc64YE22w" outgoing="_18SdZ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sdf3MaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdgHMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SdgXMaEeeoYuc64YE22w" name="Call(Concat)">
                <argument xmi:id="_18SdgnMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_18SdQnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sdg3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdhHMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18SdhXMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_18SddnMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdhnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sdh3MaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18SdiHMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_18SdfXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdiXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdinMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Sdi3MaEeeoYuc64YE22w" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdjHMaEeeoYuc64YE22w" target="_18SdjXMaEeeoYuc64YE22w" source="_18SdlHMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18SdjXMaEeeoYuc64YE22w" name="Output(Call(Size).result())" incoming="_18SdjHMaEeeoYuc64YE22w" outgoing="_18SdaHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdjnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sdj3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SdkHMaEeeoYuc64YE22w" name="Call(Size)">
                <argument xmi:id="_18SdkXMaEeeoYuc64YE22w" name="Call(Size).argument(seq)" incoming="_18SdQ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdknMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sdk3MaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_18SdlHMaEeeoYuc64YE22w" name="Call(Size).result()" outgoing="_18SdjHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdlXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdlnMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Sdl3MaEeeoYuc64YE22w" name="Node(Call(Size))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdmHMaEeeoYuc64YE22w" target="_18SdmXMaEeeoYuc64YE22w" source="_18SdoHMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18SdmXMaEeeoYuc64YE22w" name="Output(Call(Size).result())" incoming="_18SdmHMaEeeoYuc64YE22w" outgoing="_18SdaXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdmnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sdm3MaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SdnHMaEeeoYuc64YE22w" name="Call(Size)">
                <argument xmi:id="_18SdnXMaEeeoYuc64YE22w" name="Call(Size).argument(seq)" incoming="_18SdRHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdnnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sdn3MaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_18SdoHMaEeeoYuc64YE22w" name="Call(Size).result()" outgoing="_18SdmHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdoXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdonMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
              </node>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Sdo3MaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a" incoming="_18SdZXMaEeeoYuc64YE22w">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdpHMaEeeoYuc64YE22w" target="_18Se-HMaEeeoYuc64YE22w" source="_18SezHMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdpXMaEeeoYuc64YE22w" target="_18Seq3MaEeeoYuc64YE22w" source="_18SfE3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdpnMaEeeoYuc64YE22w" target="_18SernMaEeeoYuc64YE22w" source="_18SfD3MaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sdp3MaEeeoYuc64YE22w" target="_18SeqHMaEeeoYuc64YE22w" source="_18Se-HMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18SdqHMaEeeoYuc64YE22w" target="_18SdqXMaEeeoYuc64YE22w" source="_18Sew3MaEeeoYuc64YE22w"/>
          <node xmi:type="uml:LoopNode" xmi:id="_18SdqXMaEeeoYuc64YE22w" name="Loop(ForStatement@5c9a4c6a)" incoming="_18SdqHMaEeeoYuc64YE22w" bodyOutput="_18Sd1nMaEeeoYuc64YE22w _18Sd2XMaEeeoYuc64YE22w _18Sd3HMaEeeoYuc64YE22w _18SehXMaEeeoYuc64YE22w _18SebnMaEeeoYuc64YE22w _18See3MaEeeoYuc64YE22w" bodyPart="_18Sd0HMaEeeoYuc64YE22w _18Sd0XMaEeeoYuc64YE22w _18SefnMaEeeoYuc64YE22w _18SeiHMaEeeoYuc64YE22w" decider="_18SdzXMaEeeoYuc64YE22w" isTestedFirst="true" test="_18SdxnMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdqnMaEeeoYuc64YE22w" target="_18SdwHMaEeeoYuc64YE22w" source="_18SejXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sdq3MaEeeoYuc64YE22w" target="_18SdwXMaEeeoYuc64YE22w" source="_18SekHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdrHMaEeeoYuc64YE22w" target="_18SdwnMaEeeoYuc64YE22w" source="_18Sek3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdrXMaEeeoYuc64YE22w" target="_18Sdw3MaEeeoYuc64YE22w" source="_18SelnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdrnMaEeeoYuc64YE22w" target="_18SdxHMaEeeoYuc64YE22w" source="_18SemXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sdr3MaEeeoYuc64YE22w" target="_18SdxXMaEeeoYuc64YE22w" source="_18SenHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdsHMaEeeoYuc64YE22w" target="_18Sdx3MaEeeoYuc64YE22w" source="_18SdxHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdsXMaEeeoYuc64YE22w" target="_18SdynMaEeeoYuc64YE22w" source="_18SdxXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18SdsnMaEeeoYuc64YE22w" target="_18Sd0XMaEeeoYuc64YE22w" source="_18Sd0HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sds3MaEeeoYuc64YE22w" target="_18SeEHMaEeeoYuc64YE22w" source="_18Sdw3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdtHMaEeeoYuc64YE22w" target="_18SeQ3MaEeeoYuc64YE22w" source="_18Sdw3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdtXMaEeeoYuc64YE22w" target="_18SeTnMaEeeoYuc64YE22w" source="_18Sdw3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdtnMaEeeoYuc64YE22w" target="_18Sef3MaEeeoYuc64YE22w" source="_18Sdw3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sdt3MaEeeoYuc64YE22w" target="_18SegnMaEeeoYuc64YE22w" source="_18SeiXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SduHMaEeeoYuc64YE22w" target="_18SeaHMaEeeoYuc64YE22w" source="_18SdxHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SduXMaEeeoYuc64YE22w" target="_18SeeHMaEeeoYuc64YE22w" source="_18SdxXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdunMaEeeoYuc64YE22w" target="_18SeAXMaEeeoYuc64YE22w" source="_18SdwHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sdu3MaEeeoYuc64YE22w" target="_18SeOnMaEeeoYuc64YE22w" source="_18SdwXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdvHMaEeeoYuc64YE22w" target="_18SeRXMaEeeoYuc64YE22w" source="_18SdwnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdvXMaEeeoYuc64YE22w" target="_18SeUXMaEeeoYuc64YE22w" source="_18SdwHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SdvnMaEeeoYuc64YE22w" target="_18SeWXMaEeeoYuc64YE22w" source="_18SdwXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sdv3MaEeeoYuc64YE22w" target="_18SeYXMaEeeoYuc64YE22w" source="_18SdwnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18SdwHMaEeeoYuc64YE22w" name="Fork(ForStatement@5c9a4c6a.loopVariable(label))" incoming="_18SdqnMaEeeoYuc64YE22w" outgoing="_18SdunMaEeeoYuc64YE22w _18SdvXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18SdwXMaEeeoYuc64YE22w" name="Fork(ForStatement@5c9a4c6a.loopVariable(list))" incoming="_18Sdq3MaEeeoYuc64YE22w" outgoing="_18Sdu3MaEeeoYuc64YE22w _18SdvnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18SdwnMaEeeoYuc64YE22w" name="Fork(ForStatement@5c9a4c6a.loopVariable(expected))" incoming="_18SdrHMaEeeoYuc64YE22w" outgoing="_18SdvHMaEeeoYuc64YE22w _18Sdv3MaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18Sdw3MaEeeoYuc64YE22w" name="Fork(ForStatement@5c9a4c6a.loopVariable(i))" incoming="_18SdrXMaEeeoYuc64YE22w" outgoing="_18Sds3MaEeeoYuc64YE22w _18SdtHMaEeeoYuc64YE22w _18SdtXMaEeeoYuc64YE22w _18SdtnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18SdxHMaEeeoYuc64YE22w" name="Fork(ForStatement@5c9a4c6a.loopVariable(counter))" incoming="_18SdrnMaEeeoYuc64YE22w" outgoing="_18SdsHMaEeeoYuc64YE22w _18SduHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_18SdxXMaEeeoYuc64YE22w" name="Fork(ForStatement@5c9a4c6a.loopVariable(upper))" incoming="_18Sdr3MaEeeoYuc64YE22w" outgoing="_18SdsXMaEeeoYuc64YE22w _18SduXMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SdxnMaEeeoYuc64YE22w" name="Call(&lt;=)">
              <argument xmi:id="_18Sdx3MaEeeoYuc64YE22w" name="Call(&lt;=).argument(x)" incoming="_18SdsHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdyHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdyXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_18SdynMaEeeoYuc64YE22w" name="Call(&lt;=).argument(y)" incoming="_18SdsXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sdy3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SdzHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_18SdzXMaEeeoYuc64YE22w" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SdznMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sdz3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Sd0HMaEeeoYuc64YE22w" name="Values(ForStatement@5c9a4c6a)" outgoing="_18SdsnMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Sd0XMaEeeoYuc64YE22w" name="Body(ForStatement@5c9a4c6a)" incoming="_18SdsnMaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd0nMaEeeoYuc64YE22w" target="_18Sd1nMaEeeoYuc64YE22w" source="_18SeVHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd03MaEeeoYuc64YE22w" target="_18Sd2XMaEeeoYuc64YE22w" source="_18SeXHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd1HMaEeeoYuc64YE22w" target="_18Sd3HMaEeeoYuc64YE22w" source="_18SeZHMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd1XMaEeeoYuc64YE22w" target="_18Sea3MaEeeoYuc64YE22w" source="_18SecnMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18Sd1nMaEeeoYuc64YE22w" name="label" incoming="_18Sd0nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sd13MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sd2HMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_18Sd2XMaEeeoYuc64YE22w" name="list" incoming="_18Sd03MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sd2nMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sd23MaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_18Sd3HMaEeeoYuc64YE22w" name="expected" incoming="_18Sd1HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sd3XMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sd3nMaEeeoYuc64YE22w" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Sd33MaEeeoYuc64YE22w" name="ExpressionStatement@3ed0d692">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd4HMaEeeoYuc64YE22w" target="_18Sd5XMaEeeoYuc64YE22w" source="_18SeLHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd4XMaEeeoYuc64YE22w" target="_18Sd6HMaEeeoYuc64YE22w" source="_18SeQHMaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd4nMaEeeoYuc64YE22w" target="_18Sd63MaEeeoYuc64YE22w" source="_18SeS3MaEeeoYuc64YE22w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_18Sd43MaEeeoYuc64YE22w" target="_18Sd5HMaEeeoYuc64YE22w" source="_18Sd7nMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Sd5HMaEeeoYuc64YE22w" name="Call(AssertEqual)" incoming="_18Sd43MaEeeoYuc64YE22w" behavior="_18R35HMaEeeoYuc64YE22w">
                  <argument xmi:id="_18Sd5XMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(label)" incoming="_18Sd4HMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sd5nMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sd53MaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18Sd6HMaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value1)" incoming="_18Sd4XMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sd6XMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sd6nMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                  <argument xmi:id="_18Sd63MaEeeoYuc64YE22w" name="Call(AssertEqual).argument(value2)" incoming="_18Sd4nMaEeeoYuc64YE22w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sd7HMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sd7XMaEeeoYuc64YE22w" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Sd7nMaEeeoYuc64YE22w" name="Tuple@55d67282" outgoing="_18Sd43MaEeeoYuc64YE22w">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd73MaEeeoYuc64YE22w" target="_18SeBHMaEeeoYuc64YE22w" source="_18Sd93MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd8HMaEeeoYuc64YE22w" target="_18SeHHMaEeeoYuc64YE22w" source="_18Sd_XMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd8XMaEeeoYuc64YE22w" target="_18SeH3MaEeeoYuc64YE22w" source="_18SeDHMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd8nMaEeeoYuc64YE22w" target="_18SeMHMaEeeoYuc64YE22w" source="_18SeGHMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd83MaEeeoYuc64YE22w" target="_18SeM3MaEeeoYuc64YE22w" source="_18SeJnMaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd9HMaEeeoYuc64YE22w" target="_18SePXMaEeeoYuc64YE22w" source="_18SeQ3MaEeeoYuc64YE22w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd9XMaEeeoYuc64YE22w" target="_18SeSHMaEeeoYuc64YE22w" source="_18SeTnMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Sd9nMaEeeoYuc64YE22w" name="Value(&quot;[&quot;)">
                    <result xmi:id="_18Sd93MaEeeoYuc64YE22w" name="Value(&quot;[&quot;).result" outgoing="_18Sd73MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sd-HMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sd-XMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_18Sd-nMaEeeoYuc64YE22w" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Sd-3MaEeeoYuc64YE22w" name="Node(Call(Concat))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sd_HMaEeeoYuc64YE22w" target="_18Sd_XMaEeeoYuc64YE22w" source="_18SeB3MaEeeoYuc64YE22w"/>
                    <structuredNodeOutput xmi:id="_18Sd_XMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_18Sd_HMaEeeoYuc64YE22w" outgoing="_18Sd8HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sd_nMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sd_3MaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SeAHMaEeeoYuc64YE22w" name="Call(Concat)">
                      <argument xmi:id="_18SeAXMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_18SdunMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeAnMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeA3MaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <argument xmi:id="_18SeBHMaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_18Sd73MaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeBXMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeBnMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_18SeB3MaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_18Sd_HMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeCHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeCXMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SeCnMaEeeoYuc64YE22w" name="Node(Call(ToString))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_18SeC3MaEeeoYuc64YE22w" target="_18SeDHMaEeeoYuc64YE22w" source="_18SeE3MaEeeoYuc64YE22w"/>
                    <structuredNodeOutput xmi:id="_18SeDHMaEeeoYuc64YE22w" name="Output(Call(ToString).result(result))" incoming="_18SeC3MaEeeoYuc64YE22w" outgoing="_18Sd8XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeDXMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeDnMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SeD3MaEeeoYuc64YE22w" name="Call(ToString)">
                      <argument xmi:id="_18SeEHMaEeeoYuc64YE22w" name="Call(ToString).argument(x)" incoming="_18Sds3MaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeEXMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeEnMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_18SeE3MaEeeoYuc64YE22w" name="Call(ToString).result(result)" outgoing="_18SeC3MaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeFHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeFXMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SeFnMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_18SeF3MaEeeoYuc64YE22w" target="_18SeGHMaEeeoYuc64YE22w" source="_18SeInMaEeeoYuc64YE22w"/>
                    <structuredNodeOutput xmi:id="_18SeGHMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_18SeF3MaEeeoYuc64YE22w" outgoing="_18Sd8nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeGXMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeGnMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SeG3MaEeeoYuc64YE22w" name="Call(Concat)">
                      <argument xmi:id="_18SeHHMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_18Sd8HMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeHXMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeHnMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <argument xmi:id="_18SeH3MaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_18Sd8XMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeIHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeIXMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_18SeInMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_18SeF3MaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeI3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeJHMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18SeJXMaEeeoYuc64YE22w" name="Value(&quot;]&quot;)">
                    <result xmi:id="_18SeJnMaEeeoYuc64YE22w" name="Value(&quot;]&quot;).result" outgoing="_18Sd83MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeJ3MaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeKHMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_18SeKXMaEeeoYuc64YE22w" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SeKnMaEeeoYuc64YE22w" name="Node(Call(Concat))">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_18SeK3MaEeeoYuc64YE22w" target="_18SeLHMaEeeoYuc64YE22w" source="_18SeNnMaEeeoYuc64YE22w"/>
                    <structuredNodeOutput xmi:id="_18SeLHMaEeeoYuc64YE22w" name="Output(Call(Concat).result(result))" incoming="_18SeK3MaEeeoYuc64YE22w" outgoing="_18Sd4HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeLXMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeLnMaEeeoYuc64YE22w" value="1"/>
                    </structuredNodeOutput>
                    <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SeL3MaEeeoYuc64YE22w" name="Call(Concat)">
                      <argument xmi:id="_18SeMHMaEeeoYuc64YE22w" name="Call(Concat).argument(x)" incoming="_18Sd8nMaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeMXMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeMnMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <argument xmi:id="_18SeM3MaEeeoYuc64YE22w" name="Call(Concat).argument(y)" incoming="_18Sd83MaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeNHMaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeNXMaEeeoYuc64YE22w" value="1"/>
                      </argument>
                      <result xmi:id="_18SeNnMaEeeoYuc64YE22w" name="Call(Concat).result(result)" outgoing="_18SeK3MaEeeoYuc64YE22w">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeN3MaEeeoYuc64YE22w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeOHMaEeeoYuc64YE22w" value="1"/>
                      </result>
                      <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                    </node>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SeOXMaEeeoYuc64YE22w" name="Call(At)">
                    <argument xmi:id="_18SeOnMaEeeoYuc64YE22w" name="Call(At).argument(seq)" incoming="_18Sdu3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeO3MaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SePHMaEeeoYuc64YE22w" value="*"/>
                    </argument>
                    <argument xmi:id="_18SePXMaEeeoYuc64YE22w" name="Call(At).argument(index)" incoming="_18Sd9HMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SePnMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeP3MaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_18SeQHMaEeeoYuc64YE22w" name="Call(At).result()" outgoing="_18Sd4XMaEeeoYuc64YE22w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeQXMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeQnMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_18SeQ3MaEeeoYuc64YE22w" name="Fork(Call(At).argument(index))" incoming="_18SdtHMaEeeoYuc64YE22w" outgoing="_18Sd9HMaEeeoYuc64YE22w"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SeRHMaEeeoYuc64YE22w" name="Call(At)">
                    <argument xmi:id="_18SeRXMaEeeoYuc64YE22w" name="Call(At).argument(seq)" incoming="_18SdvHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeRnMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeR3MaEeeoYuc64YE22w" value="*"/>
                    </argument>
                    <argument xmi:id="_18SeSHMaEeeoYuc64YE22w" name="Call(At).argument(index)" incoming="_18Sd9XMaEeeoYuc64YE22w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeSXMaEeeoYuc64YE22w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeSnMaEeeoYuc64YE22w" value="1"/>
                    </argument>
                    <result xmi:id="_18SeS3MaEeeoYuc64YE22w" name="Call(At).result()" outgoing="_18Sd4nMaEeeoYuc64YE22w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeTHMaEeeoYuc64YE22w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeTXMaEeeoYuc64YE22w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_18SeTnMaEeeoYuc64YE22w" name="Fork(Call(At).argument(index))" incoming="_18SdtXMaEeeoYuc64YE22w" outgoing="_18Sd9XMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SeT3MaEeeoYuc64YE22w" name="Passthru(Fork(label))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18SeUHMaEeeoYuc64YE22w" target="_18SeVHMaEeeoYuc64YE22w" source="_18SeUXMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_18SeUXMaEeeoYuc64YE22w" name="Passthru(Fork(label)).input" incoming="_18SdvXMaEeeoYuc64YE22w" outgoing="_18SeUHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeUnMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeU3MaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_18SeVHMaEeeoYuc64YE22w" name="Passthru(Fork(label)).output" incoming="_18SeUHMaEeeoYuc64YE22w" outgoing="_18Sd0nMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeVXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeVnMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SeV3MaEeeoYuc64YE22w" name="Passthru(Fork(list))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18SeWHMaEeeoYuc64YE22w" target="_18SeXHMaEeeoYuc64YE22w" source="_18SeWXMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_18SeWXMaEeeoYuc64YE22w" name="Passthru(Fork(list)).input" incoming="_18SdvnMaEeeoYuc64YE22w" outgoing="_18SeWHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeWnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeW3MaEeeoYuc64YE22w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_18SeXHMaEeeoYuc64YE22w" name="Passthru(Fork(list)).output" incoming="_18SeWHMaEeeoYuc64YE22w" outgoing="_18Sd03MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeXXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeXnMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SeX3MaEeeoYuc64YE22w" name="Passthru(Fork(expected))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18SeYHMaEeeoYuc64YE22w" target="_18SeZHMaEeeoYuc64YE22w" source="_18SeYXMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_18SeYXMaEeeoYuc64YE22w" name="Passthru(Fork(expected)).input" incoming="_18Sdv3MaEeeoYuc64YE22w" outgoing="_18SeYHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeYnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeY3MaEeeoYuc64YE22w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_18SeZHMaEeeoYuc64YE22w" name="Passthru(Fork(expected)).output" incoming="_18SeYHMaEeeoYuc64YE22w" outgoing="_18Sd1HMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeZXMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeZnMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SeZ3MaEeeoYuc64YE22w" name="Call(+)">
                <argument xmi:id="_18SeaHMaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_18SduHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeaXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeanMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18Sea3MaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_18Sd1XMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SebHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SebXMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18SebnMaEeeoYuc64YE22w" name="Call(+).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Seb3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SecHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18SecXMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_18SecnMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18Sd1XMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sec3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SedHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18SedXMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SednMaEeeoYuc64YE22w" name="Passthru(upper)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sed3MaEeeoYuc64YE22w" target="_18See3MaEeeoYuc64YE22w" source="_18SeeHMaEeeoYuc64YE22w"/>
                <structuredNodeInput xmi:id="_18SeeHMaEeeoYuc64YE22w" name="Passthru(upper).input" incoming="_18SduXMaEeeoYuc64YE22w" outgoing="_18Sed3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeeXMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeenMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_18See3MaEeeoYuc64YE22w" name="Passthru(upper).output" incoming="_18Sed3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SefHMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SefXMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SefnMaEeeoYuc64YE22w" name="Call(+)">
              <argument xmi:id="_18Sef3MaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_18SdtnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SegHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SegXMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_18SegnMaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_18Sdt3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Seg3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SehHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_18SehXMaEeeoYuc64YE22w" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SehnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Seh3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18SeiHMaEeeoYuc64YE22w" name="Value(1)">
              <result xmi:id="_18SeiXMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18Sdt3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeinMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sei3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18SejHMaEeeoYuc64YE22w" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <loopVariable xmi:id="_18SejXMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.loopVariable(label)" outgoing="_18SdqnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SejnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sej3MaEeeoYuc64YE22w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_18SekHMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.loopVariable(list)" outgoing="_18Sdq3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SekXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeknMaEeeoYuc64YE22w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_18Sek3MaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.loopVariable(expected)" outgoing="_18SdrHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SelHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SelXMaEeeoYuc64YE22w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_18SelnMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.loopVariable(i)" outgoing="_18SdrXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sel3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SemHMaEeeoYuc64YE22w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_18SemXMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.loopVariable(counter)" outgoing="_18SdrnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SemnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sem3MaEeeoYuc64YE22w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_18SenHMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.loopVariable(upper)" outgoing="_18Sdr3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SenXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SennMaEeeoYuc64YE22w" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_18Sen3MaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.loopVariableInput(label)" incoming="_18SdRXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeoHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeoXMaEeeoYuc64YE22w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_18SeonMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.loopVariableInput(list)" incoming="_18SdRnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Seo3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SepHMaEeeoYuc64YE22w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_18SepXMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.loopVariableInput(expected)" incoming="_18SdR3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SepnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sep3MaEeeoYuc64YE22w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_18SeqHMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.loopVariableInput(i)" incoming="_18Sdp3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeqXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeqnMaEeeoYuc64YE22w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_18Seq3MaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.loopVariableInput(counter)" incoming="_18SdpXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SerHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SerXMaEeeoYuc64YE22w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_18SernMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.loopVariableInput(upper)" incoming="_18SdpnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Ser3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SesHMaEeeoYuc64YE22w" value="1"/>
            </loopVariableInput>
            <result xmi:id="_18SesXMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SesnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Ses3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_18SetHMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SetXMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SetnMaEeeoYuc64YE22w" value="*"/>
            </result>
            <result xmi:id="_18Set3MaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SeuHMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeuXMaEeeoYuc64YE22w" value="*"/>
            </result>
            <result xmi:id="_18SeunMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Seu3MaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SevHMaEeeoYuc64YE22w" value="*"/>
            </result>
            <result xmi:id="_18SevXMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SevnMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sev3MaEeeoYuc64YE22w" value="1"/>
            </result>
            <result xmi:id="_18SewHMaEeeoYuc64YE22w" name="ForStatement@5c9a4c6a.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SewXMaEeeoYuc64YE22w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SewnMaEeeoYuc64YE22w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Sew3MaEeeoYuc64YE22w" name="LoopVariables(ForStatement@5c9a4c6a)" outgoing="_18SdqHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SexHMaEeeoYuc64YE22w" target="_18Se73MaEeeoYuc64YE22w" source="_18Se03MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SexXMaEeeoYuc64YE22w" target="_18Se8nMaEeeoYuc64YE22w" source="_18Se33MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18SexnMaEeeoYuc64YE22w" target="_18Se7nMaEeeoYuc64YE22w" source="_18Se0HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sex3MaEeeoYuc64YE22w" target="_18Se-nMaEeeoYuc64YE22w" source="_18Se63MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SeyHMaEeeoYuc64YE22w" target="_18Se_XMaEeeoYuc64YE22w" source="_18Se-HMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SeyXMaEeeoYuc64YE22w" target="_18SfCXMaEeeoYuc64YE22w" source="_18SfAHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SeynMaEeeoYuc64YE22w" target="_18SfDHMaEeeoYuc64YE22w" source="_18SfBHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18Sey3MaEeeoYuc64YE22w" name="Value(1)">
              <result xmi:id="_18SezHMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18SdpHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SezXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SeznMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18Sez3MaEeeoYuc64YE22w" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Se0HMaEeeoYuc64YE22w" name="Tuple@74c927c" outgoing="_18SexnMaEeeoYuc64YE22w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Se0XMaEeeoYuc64YE22w" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Se0nMaEeeoYuc64YE22w" target="_18Se03MaEeeoYuc64YE22w" source="_18Se2nMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18Se03MaEeeoYuc64YE22w" name="Output(Call(Size).result())" incoming="_18Se0nMaEeeoYuc64YE22w" outgoing="_18SexHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Se1HMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Se1XMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Se1nMaEeeoYuc64YE22w" name="Call(Size)">
                  <argument xmi:id="_18Se13MaEeeoYuc64YE22w" name="Call(Size).argument(seq)" incoming="_18SdSHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Se2HMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Se2XMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_18Se2nMaEeeoYuc64YE22w" name="Call(Size).result()" outgoing="_18Se0nMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Se23MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Se3HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Se3XMaEeeoYuc64YE22w" name="Node(Call(Size))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18Se3nMaEeeoYuc64YE22w" target="_18Se33MaEeeoYuc64YE22w" source="_18Se5nMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18Se33MaEeeoYuc64YE22w" name="Output(Call(Size).result())" incoming="_18Se3nMaEeeoYuc64YE22w" outgoing="_18SexXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Se4HMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Se4XMaEeeoYuc64YE22w" value="1"/>
                </structuredNodeOutput>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Se4nMaEeeoYuc64YE22w" name="Call(Size)">
                  <argument xmi:id="_18Se43MaEeeoYuc64YE22w" name="Call(Size).argument(seq)" incoming="_18SdSXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Se5HMaEeeoYuc64YE22w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Se5XMaEeeoYuc64YE22w" value="*"/>
                  </argument>
                  <result xmi:id="_18Se5nMaEeeoYuc64YE22w" name="Call(Size).result()" outgoing="_18Se3nMaEeeoYuc64YE22w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Se53MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Se6HMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18Se6XMaEeeoYuc64YE22w" name="Node(Call(Min))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18Se6nMaEeeoYuc64YE22w" target="_18Se63MaEeeoYuc64YE22w" source="_18Se9XMaEeeoYuc64YE22w"/>
              <structuredNodeOutput xmi:id="_18Se63MaEeeoYuc64YE22w" name="Output(Call(Min).result(result))" incoming="_18Se6nMaEeeoYuc64YE22w" outgoing="_18Sex3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Se7HMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Se7XMaEeeoYuc64YE22w" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Se7nMaEeeoYuc64YE22w" name="Call(Min)" incoming="_18SexnMaEeeoYuc64YE22w">
                <argument xmi:id="_18Se73MaEeeoYuc64YE22w" name="Call(Min).argument(x)" incoming="_18SexHMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Se8HMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Se8XMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <argument xmi:id="_18Se8nMaEeeoYuc64YE22w" name="Call(Min).argument(y)" incoming="_18SexXMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Se83MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Se9HMaEeeoYuc64YE22w" value="1"/>
                </argument>
                <result xmi:id="_18Se9XMaEeeoYuc64YE22w" name="Call(Min).result(result)" outgoing="_18Se6nMaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Se9nMaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Se93MaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18Se-HMaEeeoYuc64YE22w" name="Fork(Value(1).result)" incoming="_18SdpHMaEeeoYuc64YE22w" outgoing="_18Sdp3MaEeeoYuc64YE22w _18SeyHMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18Se-XMaEeeoYuc64YE22w" name="Call(-)">
              <argument xmi:id="_18Se-nMaEeeoYuc64YE22w" name="Call(-).argument(x)" incoming="_18Sex3MaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Se-3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Se_HMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_18Se_XMaEeeoYuc64YE22w" name="Call(-).argument(y)" incoming="_18SeyHMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Se_nMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Se_3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_18SfAHMaEeeoYuc64YE22w" name="Call(-).result(result)" outgoing="_18SeyXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfAXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfAnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18SfA3MaEeeoYuc64YE22w" name="Value(1)">
              <result xmi:id="_18SfBHMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18SeynMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfBXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfBnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18SfB3MaEeeoYuc64YE22w" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SfCHMaEeeoYuc64YE22w" name="Call(+)">
              <argument xmi:id="_18SfCXMaEeeoYuc64YE22w" name="Call(+).argument(x)" incoming="_18SeyXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfCnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfC3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <argument xmi:id="_18SfDHMaEeeoYuc64YE22w" name="Call(+).argument(y)" incoming="_18SeynMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfDXMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfDnMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_18SfD3MaEeeoYuc64YE22w" name="Call(+).result(result)" outgoing="_18SdpnMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfEHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfEXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://ALF_LIBRARIES/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18SfEnMaEeeoYuc64YE22w" name="Value(1)">
              <result xmi:id="_18SfE3MaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18SdpXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfFHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfFXMaEeeoYuc64YE22w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_18SfFnMaEeeoYuc64YE22w" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_18SdTnMaEeeoYuc64YE22w" name="Input(label)" outgoing="_18SdP3MaEeeoYuc64YE22w" parameter="_18SdNnMaEeeoYuc64YE22w">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_18SdT3MaEeeoYuc64YE22w" name="Input(list)" outgoing="_18SdQHMaEeeoYuc64YE22w" parameter="_18SdOXMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_18SdUHMaEeeoYuc64YE22w" name="Input(expected)" outgoing="_18SdQXMaEeeoYuc64YE22w" parameter="_18SdPHMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:JoinNode" xmi:id="_18SdUXMaEeeoYuc64YE22w" name="Join(Input))" incoming="_18SdSnMaEeeoYuc64YE22w _18SdS3MaEeeoYuc64YE22w _18SdTHMaEeeoYuc64YE22w" outgoing="_18SdTXMaEeeoYuc64YE22w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_18SfF3MaEeeoYuc64YE22w" name="Write" visibility="public" node="_18SfJHMaEeeoYuc64YE22w _18SfJnMaEeeoYuc64YE22w _18SfLHMaEeeoYuc64YE22w _18SfJXMaEeeoYuc64YE22w" group="_18SfJnMaEeeoYuc64YE22w _18SfLHMaEeeoYuc64YE22w">
      <packageImport xmi:id="_18SfGHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_18SfGXMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_18SfGnMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_18SfG3MaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_18SfHHMaEeeoYuc64YE22w" visibility="private">
        <importedPackage href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_18SfHXMaEeeoYuc64YE22w" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfHnMaEeeoYuc64YE22w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfH3MaEeeoYuc64YE22w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfIHMaEeeoYuc64YE22w" target="_18SfKHMaEeeoYuc64YE22w" source="_18SfJHMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfIXMaEeeoYuc64YE22w" target="_18SfNXMaEeeoYuc64YE22w" source="_18SfK3MaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18SfInMaEeeoYuc64YE22w" target="_18SfJXMaEeeoYuc64YE22w" source="_18SfJnMaEeeoYuc64YE22w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_18SfI3MaEeeoYuc64YE22w" target="_18SfLHMaEeeoYuc64YE22w" source="_18SfJXMaEeeoYuc64YE22w"/>
      <structuredNode xmi:id="_18SfJnMaEeeoYuc64YE22w" name="Node(Input(value))" outgoing="_18SfInMaEeeoYuc64YE22w">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfJ3MaEeeoYuc64YE22w" target="_18SfK3MaEeeoYuc64YE22w" source="_18SfKHMaEeeoYuc64YE22w"/>
        <structuredNodeInput xmi:id="_18SfKHMaEeeoYuc64YE22w" name="Input(value)" incoming="_18SfIHMaEeeoYuc64YE22w" outgoing="_18SfJ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfKXMaEeeoYuc64YE22w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfKnMaEeeoYuc64YE22w" value="1"/>
        </structuredNodeInput>
        <node xmi:type="uml:ForkNode" xmi:id="_18SfK3MaEeeoYuc64YE22w" name="Fork(value)" incoming="_18SfJ3MaEeeoYuc64YE22w" outgoing="_18SfIXMaEeeoYuc64YE22w"/>
      </structuredNode>
      <structuredNode xmi:id="_18SfLHMaEeeoYuc64YE22w" name="Body(Write)" incoming="_18SfI3MaEeeoYuc64YE22w">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SfLXMaEeeoYuc64YE22w" name="ExpressionStatement@5fb9f765">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfLnMaEeeoYuc64YE22w" target="_18SfcHMaEeeoYuc64YE22w" source="_18SffXMaEeeoYuc64YE22w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_18SfL3MaEeeoYuc64YE22w" target="_18SfMHMaEeeoYuc64YE22w" source="_18SfcXMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_18SfMHMaEeeoYuc64YE22w" name="Collect(Call(write))" incoming="_18SfL3MaEeeoYuc64YE22w" mode="parallel" inputElement="_18SfcHMaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfMXMaEeeoYuc64YE22w" target="_18SfOXMaEeeoYuc64YE22w" source="_18Sfb3MaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfMnMaEeeoYuc64YE22w" target="_18SfT3MaEeeoYuc64YE22w" source="_18SfNXMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18SfM3MaEeeoYuc64YE22w" target="_18SfOHMaEeeoYuc64YE22w" source="_18SfQnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfNHMaEeeoYuc64YE22w" target="_18SfP3MaEeeoYuc64YE22w" source="_18SfcHMaEeeoYuc64YE22w"/>
            <structuredNodeInput xmi:id="_18SfNXMaEeeoYuc64YE22w" name="Collect(Call(write)).input(Fork(value))" incoming="_18SfIXMaEeeoYuc64YE22w" outgoing="_18SfMnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfNnMaEeeoYuc64YE22w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfN3MaEeeoYuc64YE22w" value="*"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_18SfOHMaEeeoYuc64YE22w" name="Call(write)" incoming="_18SfM3MaEeeoYuc64YE22w">
              <argument xmi:id="_18SfOXMaEeeoYuc64YE22w" name="Call(write).argument(value)" incoming="_18SfMXMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfOnMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfO3MaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_18SfPHMaEeeoYuc64YE22w" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://ALF_LIBRARIES/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfPXMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfPnMaEeeoYuc64YE22w" value="1"/>
              </result>
              <operation href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_18SfP3MaEeeoYuc64YE22w" name="Call(write).target" incoming="_18SfNHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfQHMaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfQXMaEeeoYuc64YE22w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SfQnMaEeeoYuc64YE22w" name="Tuple@6f39a437" outgoing="_18SfM3MaEeeoYuc64YE22w">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfQ3MaEeeoYuc64YE22w" target="_18SfV3MaEeeoYuc64YE22w" source="_18SfT3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18SfRHMaEeeoYuc64YE22w" target="_18SfVnMaEeeoYuc64YE22w" source="_18SfTnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfRXMaEeeoYuc64YE22w" target="_18SfYnMaEeeoYuc64YE22w" source="_18SfT3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18SfRnMaEeeoYuc64YE22w" target="_18SfbnMaEeeoYuc64YE22w" source="_18SfbXMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfR3MaEeeoYuc64YE22w" target="_18SfbnMaEeeoYuc64YE22w" source="_18SfWnMaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18SfSHMaEeeoYuc64YE22w" target="_18SfXXMaEeeoYuc64YE22w" source="_18SfbnMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18SfSXMaEeeoYuc64YE22w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_18SfSnMaEeeoYuc64YE22w" target="_18SfY3MaEeeoYuc64YE22w" source="_18SfbnMaEeeoYuc64YE22w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_18SfS3MaEeeoYuc64YE22w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfTHMaEeeoYuc64YE22w" target="_18Sfb3MaEeeoYuc64YE22w" source="_18SfX3MaEeeoYuc64YE22w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfTXMaEeeoYuc64YE22w" target="_18Sfb3MaEeeoYuc64YE22w" source="_18SfZXMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SfTnMaEeeoYuc64YE22w" name="Operands(EqualityExpression@1e105a54)" outgoing="_18SfRHMaEeeoYuc64YE22w">
                <node xmi:type="uml:ForkNode" xmi:id="_18SfT3MaEeeoYuc64YE22w" name="Fork()@7eb4ad65" incoming="_18SfMnMaEeeoYuc64YE22w" outgoing="_18SfQ3MaEeeoYuc64YE22w _18SfRXMaEeeoYuc64YE22w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SfUHMaEeeoYuc64YE22w" name="RightHandSide@5f392f80"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18SfUXMaEeeoYuc64YE22w" name="Value(null)">
                  <result xmi:id="_18SfUnMaEeeoYuc64YE22w" name="Value(null).result" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfU3MaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfVHMaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_18SfVXMaEeeoYuc64YE22w"/>
                </node>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SfVnMaEeeoYuc64YE22w" name="Call(NotEmpty)" incoming="_18SfRHMaEeeoYuc64YE22w">
                <argument xmi:id="_18SfV3MaEeeoYuc64YE22w" name="Call(NotEmpty).argument(seq)" incoming="_18SfQ3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfWHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfWXMaEeeoYuc64YE22w" value="*"/>
                </argument>
                <result xmi:id="_18SfWnMaEeeoYuc64YE22w" name="Call(NotEmpty).result()" outgoing="_18SfR3MaEeeoYuc64YE22w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfW3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfXHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SfXXMaEeeoYuc64YE22w" name="NullCoalescingExpression@12c9b364.operand2" incoming="_18SfSHMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfXnMaEeeoYuc64YE22w" target="_18SfX3MaEeeoYuc64YE22w" source="_18SfYnMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18SfX3MaEeeoYuc64YE22w" name="NullCoalescingExpression@12c9b364.operand2.result" incoming="_18SfXnMaEeeoYuc64YE22w" outgoing="_18SfTHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfYHMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfYXMaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_18SfYnMaEeeoYuc64YE22w" name="Merge(Fork()@7eb4ad65)" incoming="_18SfRXMaEeeoYuc64YE22w" outgoing="_18SfXnMaEeeoYuc64YE22w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SfY3MaEeeoYuc64YE22w" name="NullCoalescingExpression@12c9b364.operand3" incoming="_18SfSnMaEeeoYuc64YE22w">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfZHMaEeeoYuc64YE22w" target="_18SfZXMaEeeoYuc64YE22w" source="_18SfaXMaEeeoYuc64YE22w"/>
                <structuredNodeOutput xmi:id="_18SfZXMaEeeoYuc64YE22w" name="NullCoalescingExpression@12c9b364.operand3.result" incoming="_18SfZHMaEeeoYuc64YE22w" outgoing="_18SfTXMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfZnMaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfZ3MaEeeoYuc64YE22w" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18SfaHMaEeeoYuc64YE22w" name="Value(&quot;null&quot;)">
                  <result xmi:id="_18SfaXMaEeeoYuc64YE22w" name="Value(&quot;null&quot;).result" outgoing="_18SfZHMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfanMaEeeoYuc64YE22w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sfa3MaEeeoYuc64YE22w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_18SfbHMaEeeoYuc64YE22w" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_18SfbXMaEeeoYuc64YE22w" name="Initial(NullCoalescingExpression@12c9b364)" outgoing="_18SfRnMaEeeoYuc64YE22w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_18SfbnMaEeeoYuc64YE22w" name="Decision(NullCoalescingExpression@12c9b364)" incoming="_18SfRnMaEeeoYuc64YE22w _18SfR3MaEeeoYuc64YE22w" outgoing="_18SfSHMaEeeoYuc64YE22w _18SfSnMaEeeoYuc64YE22w" decisionInputFlow="_18SfR3MaEeeoYuc64YE22w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_18Sfb3MaEeeoYuc64YE22w" name="Merge(NullCoalescingExpression@12c9b364.result)" incoming="_18SfTHMaEeeoYuc64YE22w _18SfTXMaEeeoYuc64YE22w" outgoing="_18SfMXMaEeeoYuc64YE22w"/>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_18SfcHMaEeeoYuc64YE22w" name="Collect(Call(write)).inputElement" incoming="_18SfLnMaEeeoYuc64YE22w" outgoing="_18SfNHMaEeeoYuc64YE22w" regionAsInput="_18SfMHMaEeeoYuc64YE22w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SfcXMaEeeoYuc64YE22w" name="Feature(Call(At).result())" outgoing="_18SfL3MaEeeoYuc64YE22w">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfcnMaEeeoYuc64YE22w" target="_18Sfd3MaEeeoYuc64YE22w" source="_18SfgnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18Sfc3MaEeeoYuc64YE22w" target="_18SfinMaEeeoYuc64YE22w" source="_18SfhnMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_18SfdHMaEeeoYuc64YE22w" target="_18SfdnMaEeeoYuc64YE22w" source="_18SfgHMaEeeoYuc64YE22w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_18SfdXMaEeeoYuc64YE22w" target="_18SfenMaEeeoYuc64YE22w" source="_18SfinMaEeeoYuc64YE22w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_18SfdnMaEeeoYuc64YE22w" name="Call(At)" incoming="_18SfdHMaEeeoYuc64YE22w">
              <argument xmi:id="_18Sfd3MaEeeoYuc64YE22w" name="Call(At).argument(seq)" incoming="_18SfcnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SfeHMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfeXMaEeeoYuc64YE22w" value="*"/>
              </argument>
              <argument xmi:id="_18SfenMaEeeoYuc64YE22w" name="Call(At).argument(index)" incoming="_18SfdXMaEeeoYuc64YE22w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sfe3MaEeeoYuc64YE22w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SffHMaEeeoYuc64YE22w" value="1"/>
              </argument>
              <result xmi:id="_18SffXMaEeeoYuc64YE22w" name="Call(At).result()" outgoing="_18SfLnMaEeeoYuc64YE22w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18SffnMaEeeoYuc64YE22w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18Sff3MaEeeoYuc64YE22w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_18SfgHMaEeeoYuc64YE22w" name="Tuple@5da22540" outgoing="_18SfdHMaEeeoYuc64YE22w">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_18SfgXMaEeeoYuc64YE22w" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_18SfgnMaEeeoYuc64YE22w" name="ReadExtent(StandardOutputChannel).result" outgoing="_18SfcnMaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://ALF_LIBRARIES/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sfg3MaEeeoYuc64YE22w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfhHMaEeeoYuc64YE22w" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_18SfhXMaEeeoYuc64YE22w" name="Value(1)">
                <result xmi:id="_18SfhnMaEeeoYuc64YE22w" name="Value(1).result" outgoing="_18Sfc3MaEeeoYuc64YE22w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_18Sfh3MaEeeoYuc64YE22w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_18SfiHMaEeeoYuc64YE22w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_18SfiXMaEeeoYuc64YE22w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://ALF_LIBRARIES/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_18SfinMaEeeoYuc64YE22w" name="Fork(Call(At).argument(index))" incoming="_18Sfc3MaEeeoYuc64YE22w" outgoing="_18SfdXMaEeeoYuc64YE22w"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_18SfJHMaEeeoYuc64YE22w" name="Input(value)" outgoing="_18SfIHMaEeeoYuc64YE22w" parameter="_18SfHXMaEeeoYuc64YE22w"/>
      <node xmi:type="uml:JoinNode" xmi:id="_18SfJXMaEeeoYuc64YE22w" name="Join(Input))" incoming="_18SfInMaEeeoYuc64YE22w" outgoing="_18SfI3MaEeeoYuc64YE22w"/>
    </packagedElement>
    <profileApplication xmi:id="_18Sfi3MaEeeoYuc64YE22w">
      <eAnnotations xmi:id="_18SfjHMaEeeoYuc64YE22w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_18TDsHMaEeeoYuc64YE22w" base_BehavioralFeature="_18RSFnMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_18TDsXMaEeeoYuc64YE22w" base_BehavioralFeature="_18RRaHMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_18TDsnMaEeeoYuc64YE22w" base_BehavioralFeature="_18R33XMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_18TDs3MaEeeoYuc64YE22w" base_BehavioralFeature="_18RRA3MaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_18TDtHMaEeeoYuc64YE22w" base_BehavioralFeature="_18R3UHMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_18TDtXMaEeeoYuc64YE22w" base_BehavioralFeature="_18R1x3MaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_18TDtnMaEeeoYuc64YE22w" base_BehavioralFeature="_18R2WXMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_18TDt3MaEeeoYuc64YE22w" base_BehavioralFeature="_18RSEnMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_18TDuHMaEeeoYuc64YE22w" base_BehavioralFeature="_18R34XMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_18TDuXMaEeeoYuc64YE22w" base_BehavioralFeature="_18RStnMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_18TDunMaEeeoYuc64YE22w" base_BehavioralFeature="_18R3UnMaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_18TDu3MaEeeoYuc64YE22w" base_BehavioralFeature="_18RQ_3MaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_18TDvHMaEeeoYuc64YE22w" base_BehavioralFeature="_18R1w3MaEeeoYuc64YE22w"/>
  <l2:Create xmi:id="_18TDvXMaEeeoYuc64YE22w" base_BehavioralFeature="_18RSrnMaEeeoYuc64YE22w"/>
  <l2:Destroy xmi:id="_18TDvnMaEeeoYuc64YE22w" base_BehavioralFeature="_18R2XXMaEeeoYuc64YE22w"/>
</xmi:XMI>

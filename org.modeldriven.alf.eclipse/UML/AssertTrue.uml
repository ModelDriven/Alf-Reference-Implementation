<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_RIF_MCcoEeSLVrU2ifxtpw" name="Model" visibility="package">
  <packagedElement xmi:type="uml:Activity" xmi:id="_RIF_MScoEeSLVrU2ifxtpw" name="AssertTrue" node="_RIF_QScoEeSLVrU2ifxtpw _RIF_QicoEeSLVrU2ifxtpw _RIF_QycoEeSLVrU2ifxtpw _RIF_RCcoEeSLVrU2ifxtpw _RIF_RScoEeSLVrU2ifxtpw" group="_RIF_RScoEeSLVrU2ifxtpw">
    <packageImport xmi:id="_RIF_MicoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_RIF_MycoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_RIF_NCcoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_RIF_NScoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_RIF_NicoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_RIF_NycoEeSLVrU2ifxtpw" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_OCcoEeSLVrU2ifxtpw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_OScoEeSLVrU2ifxtpw" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_RIF_OicoEeSLVrU2ifxtpw" name="condition" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_OycoEeSLVrU2ifxtpw"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_PCcoEeSLVrU2ifxtpw" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_PScoEeSLVrU2ifxtpw" target="_RIF_QicoEeSLVrU2ifxtpw" source="_RIF_QScoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_PicoEeSLVrU2ifxtpw" target="_RIF_RCcoEeSLVrU2ifxtpw" source="_RIF_QycoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_PycoEeSLVrU2ifxtpw" target="_RIF_YCcoEeSLVrU2ifxtpw" source="_RIF_RCcoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_QCcoEeSLVrU2ifxtpw" target="_RIF_hycoEeSLVrU2ifxtpw" source="_RIF_QicoEeSLVrU2ifxtpw"/>
    <structuredNode xmi:id="_RIF_RScoEeSLVrU2ifxtpw" name="Body(AssertTrue)">
      <node xmi:type="uml:ConditionalNode" xmi:id="_RIF_RicoEeSLVrU2ifxtpw" name="IfStatement@40c94525">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_RycoEeSLVrU2ifxtpw" target="_RIF_VycoEeSLVrU2ifxtpw" source="_RIF_YCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_SCcoEeSLVrU2ifxtpw" target="_RIF_YicoEeSLVrU2ifxtpw" source="_RIF_YCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_SScoEeSLVrU2ifxtpw" target="_RIF_aCcoEeSLVrU2ifxtpw" source="_RIF_ZScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_SicoEeSLVrU2ifxtpw" target="_RIF_aScoEeSLVrU2ifxtpw" source="_RIF_WicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_SycoEeSLVrU2ifxtpw" target="_RIF_aicoEeSLVrU2ifxtpw" source="_RIF_aCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_TCcoEeSLVrU2ifxtpw" target="_RIF_aicoEeSLVrU2ifxtpw" source="_RIF_aCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_TScoEeSLVrU2ifxtpw" target="_RIF_aScoEeSLVrU2ifxtpw" source="_RIF_aicoEeSLVrU2ifxtpw">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_RIF_TicoEeSLVrU2ifxtpw" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_TycoEeSLVrU2ifxtpw" target="_RIF_XScoEeSLVrU2ifxtpw" source="_RIF_UicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_UCcoEeSLVrU2ifxtpw" target="_RIF_bCcoEeSLVrU2ifxtpw" source="_RIF_aScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RIF_UScoEeSLVrU2ifxtpw" name="Value(true)">
          <result xmi:id="_RIF_UicoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_RIF_TycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_UycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_VCcoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_RIF_VScoEeSLVrU2ifxtpw" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <node xmi:type="uml:TestIdentityAction" xmi:id="_RIF_VicoEeSLVrU2ifxtpw" name="Test(==)">
          <first xmi:id="_RIF_VycoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_RIF_RycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_WCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_WScoEeSLVrU2ifxtpw" value="1"/>
          </first>
          <result xmi:id="_RIF_WicoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_RIF_SicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_WycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_XCcoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <second xmi:id="_RIF_XScoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_RIF_TycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_XicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_XycoEeSLVrU2ifxtpw" value="1"/>
          </second>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_RIF_YCcoEeSLVrU2ifxtpw" name="Fork(Fork(condition))" incoming="_RIF_PycoEeSLVrU2ifxtpw" outgoing="_RIF_RycoEeSLVrU2ifxtpw _RIF_SCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RIF_YScoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
          <argument xmi:id="_RIF_YicoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RIF_SCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_YycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_ZCcoEeSLVrU2ifxtpw" value="*"/>
          </argument>
          <result xmi:id="_RIF_ZScoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RIF_SScoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_ZicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_ZycoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_RIF_aCcoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RIF_SScoEeSLVrU2ifxtpw" outgoing="_RIF_SycoEeSLVrU2ifxtpw _RIF_TCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:MergeNode" xmi:id="_RIF_aScoEeSLVrU2ifxtpw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_RIF_SicoEeSLVrU2ifxtpw _RIF_TScoEeSLVrU2ifxtpw" outgoing="_RIF_UCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_RIF_aicoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RIF_SycoEeSLVrU2ifxtpw _RIF_TCcoEeSLVrU2ifxtpw" outgoing="_RIF_TScoEeSLVrU2ifxtpw" decisionInputFlow="_RIF_TCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RIF_aycoEeSLVrU2ifxtpw" name="Call(Not)">
          <argument xmi:id="_RIF_bCcoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RIF_UCcoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_bScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_bicoEeSLVrU2ifxtpw" value="1"/>
          </argument>
          <result xmi:id="_RIF_bycoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_cCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_cScoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RIF_cicoEeSLVrU2ifxtpw" name="ExpressionStatement@19e3ea1e">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_cycoEeSLVrU2ifxtpw" target="_RIF_dicoEeSLVrU2ifxtpw" source="_RIF_iicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RIF_dCcoEeSLVrU2ifxtpw" target="_RIF_dScoEeSLVrU2ifxtpw" source="_RIF_fCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RIF_dScoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_RIF_dCcoEeSLVrU2ifxtpw">
            <argument xmi:id="_RIF_dicoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_RIF_cycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_dycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_eCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RIF_eScoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_eicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_eycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RIF_fCcoEeSLVrU2ifxtpw" name="Tuple@4aea6626" outgoing="_RIF_dCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RIF_fScoEeSLVrU2ifxtpw" target="_RIF_hCcoEeSLVrU2ifxtpw" source="_RIF_fycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RIF_ficoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
              <result xmi:id="_RIF_fycoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_RIF_fScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_gCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_gScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_RIF_gicoEeSLVrU2ifxtpw" value="FAILED: ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RIF_gycoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_RIF_hCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RIF_fScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_hScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_hicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RIF_hycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RIF_QCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_iCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_iScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RIF_iicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RIF_cycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_iycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_jCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
          </node>
        </node>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RIF_jScoEeSLVrU2ifxtpw" name="Value(true)">
          <result xmi:id="_RIF_jicoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RIF_jycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RIF_kCcoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_RIF_kScoEeSLVrU2ifxtpw" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <clause xmi:id="_RIF_kicoEeSLVrU2ifxtpw" body="_RIF_cicoEeSLVrU2ifxtpw" decider="_RIF_bycoEeSLVrU2ifxtpw" successorClause="_RIF_kycoEeSLVrU2ifxtpw" test="_RIF_UScoEeSLVrU2ifxtpw _RIF_VicoEeSLVrU2ifxtpw _RIF_YScoEeSLVrU2ifxtpw _RIF_aycoEeSLVrU2ifxtpw"/>
        <clause xmi:id="_RIF_kycoEeSLVrU2ifxtpw" decider="_RIF_jicoEeSLVrU2ifxtpw" predecessorClause="_RIF_kicoEeSLVrU2ifxtpw" test="_RIF_jScoEeSLVrU2ifxtpw"/>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RIF_QScoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_RIF_PScoEeSLVrU2ifxtpw" parameter="_RIF_NycoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RIF_QicoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_RIF_PScoEeSLVrU2ifxtpw" outgoing="_RIF_QCcoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RIF_QycoEeSLVrU2ifxtpw" name="Input(condition)" outgoing="_RIF_PicoEeSLVrU2ifxtpw" parameter="_RIF_OicoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RIF_RCcoEeSLVrU2ifxtpw" name="Fork(condition)" incoming="_RIF_PicoEeSLVrU2ifxtpw" outgoing="_RIF_PycoEeSLVrU2ifxtpw"/>
  </packagedElement>
  <profileApplication xmi:id="_RIF_lCcoEeSLVrU2ifxtpw">
    <eAnnotations xmi:id="_RIF_lScoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
    </eAnnotations>
    <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
  </profileApplication>
</uml:Model>

<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ActionLanguage="http://www.omg.org/spec/ALF/20120827/ActionLanguage-Profile" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.omg.org/spec/ALF/20120827/ActionLanguage-Profile platform:/plugin/org.eclipse.papyrus.alf/resources/ActionLanguage-Profile.profile.uml#_sYse0YZLEeKyw49uR6nx3g">
  <uml:Model xmi:id="_zq_x8JSoEeKHX4l0biXuBQ" name="model">
    <packageImport xmi:id="_vQuqcZTGEeK_pbvT8HBaCg">
      <importedPackage xmi:type="uml:Model" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_vQuqcpTGEeK_pbvT8HBaCg" visibility="private">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_vQuqc5TGEeK_pbvT8HBaCg">
      <importedPackage xmi:type="uml:Model" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf"/>
    </packageImport>
    <packagedElement xmi:type="uml:Activity" xmi:id="_vQuqdJTGEeK_pbvT8HBaCg" name="AssertEquals" group="_fyl7hpVVEeKVk61ksFos3g" node="_fyl7gJVVEeKVk61ksFos3g _fyl7gZVVEeKVk61ksFos3g _fyl7gpVVEeKVk61ksFos3g _fyl7g5VVEeKVk61ksFos3g _fyl7hJVVEeKVk61ksFos3g _fyl7hZVVEeKVk61ksFos3g _fyl7hpVVEeKVk61ksFos3g">
      <ownedComment xmi:id="_Gyw5IJUOEeK8_e3021UuYw">
        <body>namespace model ;&#xD;
&#xD;
private import Alf::Library::CollectionFunctions::size ;&#xD;
&#xD;
activity AssertEqual(in label: String, in value1: any, in value2: any) {&#xD;
    Write(label + &quot;==&quot;);&#xD;
    Write(value2 instanceof String? &quot;\&quot;&quot; + (String)value2 + &quot;\&quot;&quot;: value2);&#xD;
    AssertTrue(&quot;&quot;, value1==value2);&#xD;
}&#xD;
</body>
      </ownedComment>
      <ownedParameter xmi:id="_vQuqdpTGEeK_pbvT8HBaCg" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vQuqd5TGEeK_pbvT8HBaCg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQuqeJTGEeK_pbvT8HBaCg" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_vQuqeZTGEeK_pbvT8HBaCg" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vQuqepTGEeK_pbvT8HBaCg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQuqe5TGEeK_pbvT8HBaCg" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_vQuqfJTGEeK_pbvT8HBaCg" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vQuqfZTGEeK_pbvT8HBaCg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQuqfpTGEeK_pbvT8HBaCg" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_fyoXwJVVEeKVk61ksFos3g" source="_fyl7gJVVEeKVk61ksFos3g" target="_fyl7gZVVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_fyoXwZVVEeKVk61ksFos3g" source="_fyl7gpVVEeKVk61ksFos3g" target="_fyl7g5VVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_fyoXwpVVEeKVk61ksFos3g" source="_fyl7hJVVEeKVk61ksFos3g" target="_fyl7hZVVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_fyoXw5VVEeKVk61ksFos3g" source="_fyl7gZVVEeKVk61ksFos3g" target="_fyl7k5VVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_fyoXxJVVEeKVk61ksFos3g" source="_fyl7hZVVEeKVk61ksFos3g" target="_fyl7ppVVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_fyoXxZVVEeKVk61ksFos3g" source="_fyl7hZVVEeKVk61ksFos3g" target="_fymioZVVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_fyoXxpVVEeKVk61ksFos3g" source="_fyl7hZVVEeKVk61ksFos3g" target="_fymixZVVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_fyoXx5VVEeKVk61ksFos3g" source="_fyl7g5VVEeKVk61ksFos3g" target="_fymi5pVVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_fyoXyJVVEeKVk61ksFos3g" source="_fyl7hZVVEeKVk61ksFos3g" target="_fymi7JVVEeKVk61ksFos3g"/>
      <structuredNode xmi:id="_fyl7hpVVEeKVk61ksFos3g" name="Body(AssertEqual)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_fyl7h5VVEeKVk61ksFos3g" name="ExpressionStatement@5b72e7ca" outgoing="_fymi8pVVEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_fyl7iJVVEeKVk61ksFos3g" name="Call(Write)" incoming="_fyl7npVVEeKVk61ksFos3g" behavior="_vQuqqZTGEeK_pbvT8HBaCg">
            <argument xmi:id="_fyl7iZVVEeKVk61ksFos3g" name="Call(Write).argument(value)" incoming="_fyl7nZVVEeKVk61ksFos3g">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fyl7ipVVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fyl7i5VVEeKVk61ksFos3g" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_fyl7jJVVEeKVk61ksFos3g" name="Tuple@34aea6a8" outgoing="_fyl7npVVEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_fyl7jZVVEeKVk61ksFos3g" name="Value(&quot;==&quot;)">
              <result xmi:id="_fyl7jpVVEeKVk61ksFos3g" name="Value(&quot;==&quot;).result" outgoing="_fyl7nJVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fyl7j5VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fyl7kJVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_fyl7kZVVEeKVk61ksFos3g" value="==">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_fyl7kpVVEeKVk61ksFos3g" name="Call(Concat)">
              <argument xmi:id="_fyl7k5VVEeKVk61ksFos3g" name="Call(Concat).argument(x)" incoming="_fyoXw5VVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fyl7lJVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fyl7lZVVEeKVk61ksFos3g" value="1"/>
              </argument>
              <argument xmi:id="_fyl7lpVVEeKVk61ksFos3g" name="Call(Concat).argument(y)" incoming="_fyl7nJVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fyl7l5VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fyl7mJVVEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_fyl7mZVVEeKVk61ksFos3g" name="Call(Concat).result(result)" outgoing="_fyl7nZVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fyl7mpVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fyl7m5VVEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_fyl7nJVVEeKVk61ksFos3g" source="_fyl7jpVVEeKVk61ksFos3g" target="_fyl7lpVVEeKVk61ksFos3g"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fyl7nZVVEeKVk61ksFos3g" source="_fyl7mZVVEeKVk61ksFos3g" target="_fyl7iZVVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_fyl7npVVEeKVk61ksFos3g" source="_fyl7jJVVEeKVk61ksFos3g" target="_fyl7iJVVEeKVk61ksFos3g"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_fyl7n5VVEeKVk61ksFos3g" name="ExpressionStatement@2000a103" outgoing="_fymi85VVEeKVk61ksFos3g" incoming="_fymi8pVVEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_fyl7oJVVEeKVk61ksFos3g" name="Call(Write)" incoming="_fymi1pVVEeKVk61ksFos3g" behavior="_vQuqqZTGEeK_pbvT8HBaCg">
            <argument xmi:id="_fyl7oZVVEeKVk61ksFos3g" name="Call(Write).argument(value)" incoming="_fymi1ZVVEeKVk61ksFos3g">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fyl7opVVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fyl7o5VVEeKVk61ksFos3g" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_fyl7pJVVEeKVk61ksFos3g" name="Tuple@3c6fe9cb" outgoing="_fymi1pVVEeKVk61ksFos3g">
            <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_fyl7pZVVEeKVk61ksFos3g" name="ReadIsClassifiedObject(String)">
              <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <object xmi:id="_fyl7ppVVEeKVk61ksFos3g" name="ReadIsClassifiedObject(String).object" incoming="_fyoXxJVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fyl7p5VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fyl7qJVVEeKVk61ksFos3g" value="1"/>
              </object>
              <result xmi:id="_fyl7qZVVEeKVk61ksFos3g" name="ReadIsClassifiedObject(String).result" outgoing="_fymizpVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fyl7qpVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fyl7q5VVEeKVk61ksFos3g" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_fyl7rJVVEeKVk61ksFos3g" name="ConditionalTestExpression@648bb8a7.operand2" incoming="_fymiz5VVEeKVk61ksFos3g">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_fyl7rZVVEeKVk61ksFos3g" name="Value(&quot;&quot;&quot;)">
                <result xmi:id="_fyl7rpVVEeKVk61ksFos3g" name="Value(&quot;&quot;&quot;).result" outgoing="_fymiv5VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fyl7r5VVEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fyl7sJVVEeKVk61ksFos3g" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_fyl7sZVVEeKVk61ksFos3g" value="&quot;">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_fyl7spVVEeKVk61ksFos3g" name="CastExpression@127e7ea0" mode="parallel" outputElement="_fymiopVVEeKVk61ksFos3g" inputElement="_fymioZVVEeKVk61ksFos3g">
                <node xmi:type="uml:MergeNode" xmi:id="_fymikJVVEeKVk61ksFos3g" name="Merge(CastExpression@127e7ea0.operand)" outgoing="_fymioJVVEeKVk61ksFos3g" incoming="_fyminZVVEeKVk61ksFos3g"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_fymikZVVEeKVk61ksFos3g" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_fymikpVVEeKVk61ksFos3g" name="ReadIsClassifiedObject(String).object" incoming="_fymimpVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymik5VVEeKVk61ksFos3g" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymilJVVEeKVk61ksFos3g" value="1"/>
                  </object>
                  <result xmi:id="_fymilZVVEeKVk61ksFos3g" name="ReadIsClassifiedObject(String).result" outgoing="_fyminJVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymilpVVEeKVk61ksFos3g" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymil5VVEeKVk61ksFos3g" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_fymimJVVEeKVk61ksFos3g" name="Fork(ReadIsClassifiedObject(String).object)" outgoing="_fymimpVVEeKVk61ksFos3g _fymim5VVEeKVk61ksFos3g" incoming="_fymin5VVEeKVk61ksFos3g"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_fymimZVVEeKVk61ksFos3g" name="Decision(ReadIsClassifiedObject(String).result)" outgoing="_fyminZVVEeKVk61ksFos3g" incoming="_fymim5VVEeKVk61ksFos3g _fyminJVVEeKVk61ksFos3g" decisionInputFlow="_fyminJVVEeKVk61ksFos3g"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_fymimpVVEeKVk61ksFos3g" source="_fymimJVVEeKVk61ksFos3g" target="_fymikpVVEeKVk61ksFos3g"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_fymim5VVEeKVk61ksFos3g" source="_fymimJVVEeKVk61ksFos3g" target="_fymimZVVEeKVk61ksFos3g"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_fyminJVVEeKVk61ksFos3g" source="_fymilZVVEeKVk61ksFos3g" target="_fymimZVVEeKVk61ksFos3g"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_fyminZVVEeKVk61ksFos3g" source="_fymimZVVEeKVk61ksFos3g" target="_fymikJVVEeKVk61ksFos3g">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_fyminpVVEeKVk61ksFos3g" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_fymin5VVEeKVk61ksFos3g" source="_fymioZVVEeKVk61ksFos3g" target="_fymimJVVEeKVk61ksFos3g"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_fymioJVVEeKVk61ksFos3g" source="_fymikJVVEeKVk61ksFos3g" target="_fymiopVVEeKVk61ksFos3g"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_fymioZVVEeKVk61ksFos3g" name="CastExpression@127e7ea0.inputElement" outgoing="_fymin5VVEeKVk61ksFos3g" incoming="_fyoXxZVVEeKVk61ksFos3g" regionAsInput="_fyl7spVVEeKVk61ksFos3g"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_fymiopVVEeKVk61ksFos3g" name="CastExpression@127e7ea0.outputElement" outgoing="_fymiwJVVEeKVk61ksFos3g" incoming="_fymioJVVEeKVk61ksFos3g" regionAsOutput="_fyl7spVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_fymio5VVEeKVk61ksFos3g" name="Call(Concat)">
                <argument xmi:id="_fymipJVVEeKVk61ksFos3g" name="Call(Concat).argument(x)" incoming="_fymiv5VVEeKVk61ksFos3g">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymipZVVEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymippVVEeKVk61ksFos3g" value="1"/>
                </argument>
                <argument xmi:id="_fymip5VVEeKVk61ksFos3g" name="Call(Concat).argument(y)" incoming="_fymiwJVVEeKVk61ksFos3g">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymiqJVVEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymiqZVVEeKVk61ksFos3g" value="1"/>
                </argument>
                <result xmi:id="_fymiqpVVEeKVk61ksFos3g" name="Call(Concat).result(result)" outgoing="_fymiwZVVEeKVk61ksFos3g">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymiq5VVEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymirJVVEeKVk61ksFos3g" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_fymirZVVEeKVk61ksFos3g" name="Value(&quot;&quot;&quot;)">
                <result xmi:id="_fymirpVVEeKVk61ksFos3g" name="Value(&quot;&quot;&quot;).result" outgoing="_fymiwpVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymir5VVEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymisJVVEeKVk61ksFos3g" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_fymisZVVEeKVk61ksFos3g" value="&quot;">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_fymispVVEeKVk61ksFos3g" name="Call(Concat)">
                <argument xmi:id="_fymis5VVEeKVk61ksFos3g" name="Call(Concat).argument(x)" incoming="_fymiwZVVEeKVk61ksFos3g">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymitJVVEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymitZVVEeKVk61ksFos3g" value="1"/>
                </argument>
                <argument xmi:id="_fymitpVVEeKVk61ksFos3g" name="Call(Concat).argument(y)" incoming="_fymiwpVVEeKVk61ksFos3g">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymit5VVEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymiuJVVEeKVk61ksFos3g" value="1"/>
                </argument>
                <result xmi:id="_fymiuZVVEeKVk61ksFos3g" name="Call(Concat).result(result)" outgoing="_fymiw5VVEeKVk61ksFos3g">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymiupVVEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymiu5VVEeKVk61ksFos3g" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <structuredNodeOutput xmi:id="_fymivJVVEeKVk61ksFos3g" name="ConditionalTestExpression@648bb8a7.operand2.result" outgoing="_fymi05VVEeKVk61ksFos3g" incoming="_fymiw5VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymivZVVEeKVk61ksFos3g"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymivpVVEeKVk61ksFos3g" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_fymiv5VVEeKVk61ksFos3g" source="_fyl7rpVVEeKVk61ksFos3g" target="_fymipJVVEeKVk61ksFos3g"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_fymiwJVVEeKVk61ksFos3g" source="_fymiopVVEeKVk61ksFos3g" target="_fymip5VVEeKVk61ksFos3g"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_fymiwZVVEeKVk61ksFos3g" source="_fymiqpVVEeKVk61ksFos3g" target="_fymis5VVEeKVk61ksFos3g"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_fymiwpVVEeKVk61ksFos3g" source="_fymirpVVEeKVk61ksFos3g" target="_fymitpVVEeKVk61ksFos3g"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_fymiw5VVEeKVk61ksFos3g" source="_fymiuZVVEeKVk61ksFos3g" target="_fymivJVVEeKVk61ksFos3g"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_fymixJVVEeKVk61ksFos3g" name="ConditionalTestExpression@648bb8a7.operand3" incoming="_fymi0ZVVEeKVk61ksFos3g">
              <node xmi:type="uml:MergeNode" xmi:id="_fymixZVVEeKVk61ksFos3g" name="Merge(Fork(value2))" outgoing="_fymiyZVVEeKVk61ksFos3g" incoming="_fyoXxpVVEeKVk61ksFos3g"/>
              <structuredNodeOutput xmi:id="_fymixpVVEeKVk61ksFos3g" name="ConditionalTestExpression@648bb8a7.operand3.result" outgoing="_fymi1JVVEeKVk61ksFos3g" incoming="_fymiyZVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymix5VVEeKVk61ksFos3g"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymiyJVVEeKVk61ksFos3g" value="*"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_fymiyZVVEeKVk61ksFos3g" source="_fymixZVVEeKVk61ksFos3g" target="_fymixpVVEeKVk61ksFos3g"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_fymiypVVEeKVk61ksFos3g" name="Initial(ConditionalTestExpression@648bb8a7)" outgoing="_fymizZVVEeKVk61ksFos3g"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_fymiy5VVEeKVk61ksFos3g" name="Decision(ConditionalTestExpression@648bb8a7)" outgoing="_fymiz5VVEeKVk61ksFos3g _fymi0ZVVEeKVk61ksFos3g" incoming="_fymizZVVEeKVk61ksFos3g _fymizpVVEeKVk61ksFos3g" decisionInputFlow="_fymizpVVEeKVk61ksFos3g"/>
            <node xmi:type="uml:MergeNode" xmi:id="_fymizJVVEeKVk61ksFos3g" name="Merge(ConditionalTestExpression@648bb8a7.result)" outgoing="_fymi1ZVVEeKVk61ksFos3g" incoming="_fymi05VVEeKVk61ksFos3g _fymi1JVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_fymizZVVEeKVk61ksFos3g" source="_fymiypVVEeKVk61ksFos3g" target="_fymiy5VVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_fymizpVVEeKVk61ksFos3g" source="_fyl7qZVVEeKVk61ksFos3g" target="_fymiy5VVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_fymiz5VVEeKVk61ksFos3g" source="_fymiy5VVEeKVk61ksFos3g" target="_fyl7rJVVEeKVk61ksFos3g">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_fymi0JVVEeKVk61ksFos3g" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_fymi0ZVVEeKVk61ksFos3g" source="_fymiy5VVEeKVk61ksFos3g" target="_fymixJVVEeKVk61ksFos3g">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_fymi0pVVEeKVk61ksFos3g" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_fymi05VVEeKVk61ksFos3g" source="_fymivJVVEeKVk61ksFos3g" target="_fymizJVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_fymi1JVVEeKVk61ksFos3g" source="_fymixpVVEeKVk61ksFos3g" target="_fymizJVVEeKVk61ksFos3g"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fymi1ZVVEeKVk61ksFos3g" source="_fymizJVVEeKVk61ksFos3g" target="_fyl7oZVVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_fymi1pVVEeKVk61ksFos3g" source="_fyl7pJVVEeKVk61ksFos3g" target="_fyl7oJVVEeKVk61ksFos3g"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_fymi15VVEeKVk61ksFos3g" name="ExpressionStatement@6787f3c3" incoming="_fymi85VVEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_fymi2JVVEeKVk61ksFos3g" name="Call(AssertTrue)" incoming="_fymi8ZVVEeKVk61ksFos3g" behavior="_vQuqiJTGEeK_pbvT8HBaCg">
            <argument xmi:id="_fymi2ZVVEeKVk61ksFos3g" name="Call(AssertTrue).argument(label)" incoming="_fymi75VVEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymi2pVVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymi25VVEeKVk61ksFos3g" value="1"/>
            </argument>
            <argument xmi:id="_fymi3JVVEeKVk61ksFos3g" name="Call(AssertTrue).argument(condition)" incoming="_fymi8JVVEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymi3ZVVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymi3pVVEeKVk61ksFos3g" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_fymi35VVEeKVk61ksFos3g" name="Tuple@791fa555" outgoing="_fymi8ZVVEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_fymi4JVVEeKVk61ksFos3g" name="Value(&quot;&quot;)">
              <result xmi:id="_fymi4ZVVEeKVk61ksFos3g" name="Value(&quot;&quot;).result" outgoing="_fymi75VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymi4pVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymi45VVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_fymi5JVVEeKVk61ksFos3g" value="">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_fymi5ZVVEeKVk61ksFos3g" name="Test(==)">
              <first xmi:id="_fymi5pVVEeKVk61ksFos3g" name="Test(==).first" incoming="_fyoXx5VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymi55VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymi6JVVEeKVk61ksFos3g" value="1"/>
              </first>
              <result xmi:id="_fymi6ZVVEeKVk61ksFos3g" name="Test(==).result" outgoing="_fymi8JVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymi6pVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymi65VVEeKVk61ksFos3g" value="1"/>
              </result>
              <second xmi:id="_fymi7JVVEeKVk61ksFos3g" name="Test(==).second" incoming="_fyoXyJVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fymi7ZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fymi7pVVEeKVk61ksFos3g" value="1"/>
              </second>
            </node>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fymi75VVEeKVk61ksFos3g" source="_fymi4ZVVEeKVk61ksFos3g" target="_fymi2ZVVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_fymi8JVVEeKVk61ksFos3g" source="_fymi6ZVVEeKVk61ksFos3g" target="_fymi3JVVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_fymi8ZVVEeKVk61ksFos3g" source="_fymi35VVEeKVk61ksFos3g" target="_fymi2JVVEeKVk61ksFos3g"/>
        </node>
        <edge xmi:type="uml:ControlFlow" xmi:id="_fymi8pVVEeKVk61ksFos3g" source="_fyl7h5VVEeKVk61ksFos3g" target="_fyl7n5VVEeKVk61ksFos3g"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_fymi85VVEeKVk61ksFos3g" source="_fyl7n5VVEeKVk61ksFos3g" target="_fymi15VVEeKVk61ksFos3g"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_fyl7gJVVEeKVk61ksFos3g" name="Input(label)" outgoing="_fyoXwJVVEeKVk61ksFos3g" parameter="_vQuqdpTGEeK_pbvT8HBaCg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_fyl7gZVVEeKVk61ksFos3g" name="Fork(label)" outgoing="_fyoXw5VVEeKVk61ksFos3g" incoming="_fyoXwJVVEeKVk61ksFos3g"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_fyl7gpVVEeKVk61ksFos3g" name="Input(value1)" outgoing="_fyoXwZVVEeKVk61ksFos3g" parameter="_vQuqeZTGEeK_pbvT8HBaCg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_fyl7g5VVEeKVk61ksFos3g" name="Fork(value1)" outgoing="_fyoXx5VVEeKVk61ksFos3g" incoming="_fyoXwZVVEeKVk61ksFos3g"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_fyl7hJVVEeKVk61ksFos3g" name="Input(value2)" outgoing="_fyoXwpVVEeKVk61ksFos3g" parameter="_vQuqfJTGEeK_pbvT8HBaCg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_fyl7hZVVEeKVk61ksFos3g" name="Fork(value2)" outgoing="_fyoXxJVVEeKVk61ksFos3g _fyoXxZVVEeKVk61ksFos3g _fyoXxpVVEeKVk61ksFos3g _fyoXyJVVEeKVk61ksFos3g" incoming="_fyoXwpVVEeKVk61ksFos3g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_vQuqiJTGEeK_pbvT8HBaCg" name="AssertTrue" group="_hm81EJVVEeKVk61ksFos3g" node="_hm8OAJVVEeKVk61ksFos3g _hm8OAZVVEeKVk61ksFos3g _hm8OApVVEeKVk61ksFos3g _hm8OA5VVEeKVk61ksFos3g _hm81EJVVEeKVk61ksFos3g">
      <ownedComment xmi:id="_xyEyIJVQEeKRIaqZz2tVRA">
        <body>namespace model ;&#xD;
&#xD;
private import Alf::Library::PrimitiveBehaviors::BooleanFunctions::ToString;&#xD;
private import Alf::Library::BasicInputOutput::WriteLine ;&#xD;
&#xD;
activity AssertTrue(in label: String, in condition: Boolean) {&#xD;
	WriteLine(label + &quot;: &quot; + ToString(condition));&#xD;
}</body>
      </ownedComment>
      <ownedParameter xmi:id="_vQuqipTGEeK_pbvT8HBaCg" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vQuqi5TGEeK_pbvT8HBaCg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQuqjJTGEeK_pbvT8HBaCg" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_vQuqjZTGEeK_pbvT8HBaCg" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vQuqjpTGEeK_pbvT8HBaCg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQuqj5TGEeK_pbvT8HBaCg" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_hm9cIJVVEeKVk61ksFos3g" source="_hm8OAJVVEeKVk61ksFos3g" target="_hm8OAZVVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_hm9cIZVVEeKVk61ksFos3g" source="_hm8OApVVEeKVk61ksFos3g" target="_hm8OA5VVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_hm9cIpVVEeKVk61ksFos3g" source="_hm8OAZVVEeKVk61ksFos3g" target="_hm81IJVVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_hm9cI5VVEeKVk61ksFos3g" source="_hm8OA5VVEeKVk61ksFos3g" target="_hm81KpVVEeKVk61ksFos3g"/>
      <structuredNode xmi:id="_hm81EJVVEeKVk61ksFos3g" name="Body(AssertTrue)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_hm81EZVVEeKVk61ksFos3g" name="ExpressionStatement@30ad8f8f">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_hm81EpVVEeKVk61ksFos3g" name="Call(WriteLine)" incoming="_hm81PpVVEeKVk61ksFos3g">
            <argument xmi:id="_hm81E5VVEeKVk61ksFos3g" name="Call(WriteLine).argument(value)" incoming="_hm81PZVVEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hm81FJVVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hm81FZVVEeKVk61ksFos3g" value="1"/>
            </argument>
            <result xmi:id="_hm81FpVVEeKVk61ksFos3g" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hm81F5VVEeKVk61ksFos3g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hm81GJVVEeKVk61ksFos3g" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_hm81GZVVEeKVk61ksFos3g" name="Tuple@67b76edc" outgoing="_hm81PpVVEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_hm81GpVVEeKVk61ksFos3g" name="Value(&quot;: &quot;)">
              <result xmi:id="_hm81G5VVEeKVk61ksFos3g" name="Value(&quot;: &quot;).result" outgoing="_hm81OpVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hm81HJVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hm81HZVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_hm81HpVVEeKVk61ksFos3g" value=": ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_hm81H5VVEeKVk61ksFos3g" name="Call(Concat)">
              <argument xmi:id="_hm81IJVVEeKVk61ksFos3g" name="Call(Concat).argument(x)" incoming="_hm9cIpVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hm81IZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hm81IpVVEeKVk61ksFos3g" value="1"/>
              </argument>
              <argument xmi:id="_hm81I5VVEeKVk61ksFos3g" name="Call(Concat).argument(y)" incoming="_hm81OpVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hm81JJVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hm81JZVVEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_hm81JpVVEeKVk61ksFos3g" name="Call(Concat).result(result)" outgoing="_hm81O5VVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hm81J5VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hm81KJVVEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_hm81KZVVEeKVk61ksFos3g" name="Call(ToString)">
              <argument xmi:id="_hm81KpVVEeKVk61ksFos3g" name="Call(ToString).argument(x)" incoming="_hm9cI5VVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hm81K5VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hm81LJVVEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_hm81LZVVEeKVk61ksFos3g" name="Call(ToString).result(result)" outgoing="_hm81PJVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hm81LpVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hm81L5VVEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_hm81MJVVEeKVk61ksFos3g" name="Call(Concat)">
              <argument xmi:id="_hm81MZVVEeKVk61ksFos3g" name="Call(Concat).argument(x)" incoming="_hm81O5VVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hm81MpVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hm81M5VVEeKVk61ksFos3g" value="1"/>
              </argument>
              <argument xmi:id="_hm81NJVVEeKVk61ksFos3g" name="Call(Concat).argument(y)" incoming="_hm81PJVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hm81NZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hm81NpVVEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_hm81N5VVEeKVk61ksFos3g" name="Call(Concat).result(result)" outgoing="_hm81PZVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hm81OJVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hm81OZVVEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_hm81OpVVEeKVk61ksFos3g" source="_hm81G5VVEeKVk61ksFos3g" target="_hm81I5VVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_hm81O5VVEeKVk61ksFos3g" source="_hm81JpVVEeKVk61ksFos3g" target="_hm81MZVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_hm81PJVVEeKVk61ksFos3g" source="_hm81LZVVEeKVk61ksFos3g" target="_hm81NJVVEeKVk61ksFos3g"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_hm81PZVVEeKVk61ksFos3g" source="_hm81N5VVEeKVk61ksFos3g" target="_hm81E5VVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_hm81PpVVEeKVk61ksFos3g" source="_hm81GZVVEeKVk61ksFos3g" target="_hm81EpVVEeKVk61ksFos3g"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_hm8OAJVVEeKVk61ksFos3g" name="Input(label)" outgoing="_hm9cIJVVEeKVk61ksFos3g" parameter="_vQuqipTGEeK_pbvT8HBaCg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_hm8OAZVVEeKVk61ksFos3g" name="Fork(label)" outgoing="_hm9cIpVVEeKVk61ksFos3g" incoming="_hm9cIJVVEeKVk61ksFos3g"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_hm8OApVVEeKVk61ksFos3g" name="Input(condition)" outgoing="_hm9cIZVVEeKVk61ksFos3g" parameter="_vQuqjZTGEeK_pbvT8HBaCg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_hm8OA5VVEeKVk61ksFos3g" name="Fork(condition)" outgoing="_hm9cI5VVEeKVk61ksFos3g" incoming="_hm9cIZVVEeKVk61ksFos3g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_vQuqlJTGEeK_pbvT8HBaCg" name="AssertFalse" group="_jqL4IJVVEeKVk61ksFos3g" node="_jqLREJVVEeKVk61ksFos3g _jqLREZVVEeKVk61ksFos3g _jqLREpVVEeKVk61ksFos3g _jqLRE5VVEeKVk61ksFos3g _jqL4IJVVEeKVk61ksFos3g">
      <ownedComment xmi:id="_0yAG8JVQEeKRIaqZz2tVRA">
        <body>namespace model ;&#xD;
&#xD;
private import Alf::Library::PrimitiveBehaviors::BooleanFunctions::ToString;&#xD;
private import Alf::Library::BasicInputOutput::WriteLine ;&#xD;
&#xD;
activity AssertFalse(in label: String, in condition: Boolean) {&#xD;
    WriteLine(&quot;! &quot; + label + &quot;: &quot; + ToString(!condition));&#xD;
}</body>
      </ownedComment>
      <ownedParameter xmi:id="_vQuqlpTGEeK_pbvT8HBaCg" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vQuql5TGEeK_pbvT8HBaCg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQuqmJTGEeK_pbvT8HBaCg" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_vQuqmZTGEeK_pbvT8HBaCg" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vQuqmpTGEeK_pbvT8HBaCg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQuqm5TGEeK_pbvT8HBaCg" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_jqMfMJVVEeKVk61ksFos3g" source="_jqLREJVVEeKVk61ksFos3g" target="_jqLREZVVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_jqMfMZVVEeKVk61ksFos3g" source="_jqLREpVVEeKVk61ksFos3g" target="_jqLRE5VVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_jqNGQJVVEeKVk61ksFos3g" source="_jqLREZVVEeKVk61ksFos3g" target="_jqL4M5VVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_jqNGQZVVEeKVk61ksFos3g" source="_jqLRE5VVEeKVk61ksFos3g" target="_jqL4UZVVEeKVk61ksFos3g"/>
      <structuredNode xmi:id="_jqL4IJVVEeKVk61ksFos3g" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_jqL4IZVVEeKVk61ksFos3g" name="ExpressionStatement@1b084095">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_jqL4IpVVEeKVk61ksFos3g" name="Call(WriteLine)" incoming="_jqL4aZVVEeKVk61ksFos3g">
            <argument xmi:id="_jqL4I5VVEeKVk61ksFos3g" name="Call(WriteLine).argument(value)" incoming="_jqL4aJVVEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4JJVVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4JZVVEeKVk61ksFos3g" value="1"/>
            </argument>
            <result xmi:id="_jqL4JpVVEeKVk61ksFos3g" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4J5VVEeKVk61ksFos3g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4KJVVEeKVk61ksFos3g" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_jqL4KZVVEeKVk61ksFos3g" name="Tuple@198a14c7" outgoing="_jqL4aZVVEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_jqL4KpVVEeKVk61ksFos3g" name="Value(&quot;! &quot;)">
              <result xmi:id="_jqL4K5VVEeKVk61ksFos3g" name="Value(&quot;! &quot;).result" outgoing="_jqL4YZVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4LJVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4LZVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_jqL4LpVVEeKVk61ksFos3g" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_jqL4L5VVEeKVk61ksFos3g" name="Call(Concat)">
              <argument xmi:id="_jqL4MJVVEeKVk61ksFos3g" name="Call(Concat).argument(x)" incoming="_jqL4YZVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4MZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4MpVVEeKVk61ksFos3g" value="1"/>
              </argument>
              <argument xmi:id="_jqL4M5VVEeKVk61ksFos3g" name="Call(Concat).argument(y)" incoming="_jqNGQJVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4NJVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4NZVVEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_jqL4NpVVEeKVk61ksFos3g" name="Call(Concat).result(result)" outgoing="_jqL4YpVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4N5VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4OJVVEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_jqL4OZVVEeKVk61ksFos3g" name="Value(&quot;: &quot;)">
              <result xmi:id="_jqL4OpVVEeKVk61ksFos3g" name="Value(&quot;: &quot;).result" outgoing="_jqL4Y5VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4O5VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4PJVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_jqL4PZVVEeKVk61ksFos3g" value=": ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_jqL4PpVVEeKVk61ksFos3g" name="Call(Concat)">
              <argument xmi:id="_jqL4P5VVEeKVk61ksFos3g" name="Call(Concat).argument(x)" incoming="_jqL4YpVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4QJVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4QZVVEeKVk61ksFos3g" value="1"/>
              </argument>
              <argument xmi:id="_jqL4QpVVEeKVk61ksFos3g" name="Call(Concat).argument(y)" incoming="_jqL4Y5VVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4Q5VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4RJVVEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_jqL4RZVVEeKVk61ksFos3g" name="Call(Concat).result(result)" outgoing="_jqL4ZpVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4RpVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4R5VVEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_jqL4SJVVEeKVk61ksFos3g" name="Call(ToString)" incoming="_jqL4ZZVVEeKVk61ksFos3g">
              <argument xmi:id="_jqL4SZVVEeKVk61ksFos3g" name="Call(ToString).argument(x)" incoming="_jqL4ZJVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4SpVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4S5VVEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_jqL4TJVVEeKVk61ksFos3g" name="Call(ToString).result(result)" outgoing="_jqL4Z5VVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4TZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4TpVVEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_jqL4T5VVEeKVk61ksFos3g" name="Tuple@60cf96ef" outgoing="_jqL4ZZVVEeKVk61ksFos3g">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_jqL4UJVVEeKVk61ksFos3g" name="Call(Not)">
                <argument xmi:id="_jqL4UZVVEeKVk61ksFos3g" name="Call(Not).argument(x)" incoming="_jqNGQZVVEeKVk61ksFos3g">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4UpVVEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4U5VVEeKVk61ksFos3g" value="1"/>
                </argument>
                <result xmi:id="_jqL4VJVVEeKVk61ksFos3g" name="Call(Not).result(result)" outgoing="_jqL4ZJVVEeKVk61ksFos3g">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4VZVVEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4VpVVEeKVk61ksFos3g" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_jqL4V5VVEeKVk61ksFos3g" name="Call(Concat)">
              <argument xmi:id="_jqL4WJVVEeKVk61ksFos3g" name="Call(Concat).argument(x)" incoming="_jqL4ZpVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4WZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4WpVVEeKVk61ksFos3g" value="1"/>
              </argument>
              <argument xmi:id="_jqL4W5VVEeKVk61ksFos3g" name="Call(Concat).argument(y)" incoming="_jqL4Z5VVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4XJVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4XZVVEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_jqL4XpVVEeKVk61ksFos3g" name="Call(Concat).result(result)" outgoing="_jqL4aJVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jqL4X5VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jqL4YJVVEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_jqL4YZVVEeKVk61ksFos3g" source="_jqL4K5VVEeKVk61ksFos3g" target="_jqL4MJVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_jqL4YpVVEeKVk61ksFos3g" source="_jqL4NpVVEeKVk61ksFos3g" target="_jqL4P5VVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_jqL4Y5VVEeKVk61ksFos3g" source="_jqL4OpVVEeKVk61ksFos3g" target="_jqL4QpVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_jqL4ZJVVEeKVk61ksFos3g" source="_jqL4VJVVEeKVk61ksFos3g" target="_jqL4SZVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_jqL4ZZVVEeKVk61ksFos3g" source="_jqL4T5VVEeKVk61ksFos3g" target="_jqL4SJVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_jqL4ZpVVEeKVk61ksFos3g" source="_jqL4RZVVEeKVk61ksFos3g" target="_jqL4WJVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_jqL4Z5VVEeKVk61ksFos3g" source="_jqL4TJVVEeKVk61ksFos3g" target="_jqL4W5VVEeKVk61ksFos3g"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_jqL4aJVVEeKVk61ksFos3g" source="_jqL4XpVVEeKVk61ksFos3g" target="_jqL4I5VVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_jqL4aZVVEeKVk61ksFos3g" source="_jqL4KZVVEeKVk61ksFos3g" target="_jqL4IpVVEeKVk61ksFos3g"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_jqLREJVVEeKVk61ksFos3g" name="Input(label)" outgoing="_jqMfMJVVEeKVk61ksFos3g" parameter="_vQuqlpTGEeK_pbvT8HBaCg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_jqLREZVVEeKVk61ksFos3g" name="Fork(label)" outgoing="_jqNGQJVVEeKVk61ksFos3g" incoming="_jqMfMJVVEeKVk61ksFos3g"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_jqLREpVVEeKVk61ksFos3g" name="Input(condition)" outgoing="_jqMfMZVVEeKVk61ksFos3g" parameter="_vQuqmZTGEeK_pbvT8HBaCg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_jqLRE5VVEeKVk61ksFos3g" name="Fork(condition)" outgoing="_jqNGQZVVEeKVk61ksFos3g" incoming="_jqMfMZVVEeKVk61ksFos3g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_vQuqoJTGEeK_pbvT8HBaCg" name="AssertList" group="_-LCrNpVWEeKVk61ksFos3g" node="_-LCrMJVWEeKVk61ksFos3g _-LCrMZVWEeKVk61ksFos3g _-LCrMpVWEeKVk61ksFos3g _-LCrM5VWEeKVk61ksFos3g _-LCrNJVWEeKVk61ksFos3g _-LCrNZVWEeKVk61ksFos3g _-LCrNpVWEeKVk61ksFos3g">
      <ownedComment xmi:id="_y-pLkJVTEeKZjeKf5i2XcA">
        <body>namespace model ;&#xD;
&#xD;
private import Alf::Library::CollectionFunctions::* ;&#xD;
private import Alf::Library::PrimitiveBehaviors::* ;&#xD;
&#xD;
activity AssertList(in label: String, in list: any[*] sequence, in expected: any[*] sequence) {&#xD;
	AssertEquals(label + &quot;->size()&quot;, list->size(), expected->size());&#xD;
	for (i in 1..IntegerFunctions::Min(list->size(),expected->size())) {&#xD;
		AssertEquals(label + &quot;[&quot; + IntegerFunctions::ToString(i) + &quot;]&quot;, list[i], expected[i]);&#xD;
	}&#xD;
}</body>
      </ownedComment>
      <ownedParameter xmi:id="_vQuqopTGEeK_pbvT8HBaCg" name="label">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
      <ownedParameter xmi:id="_vQuqo5TGEeK_pbvT8HBaCg" name="list" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vQuqpJTGEeK_pbvT8HBaCg"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQuqpZTGEeK_pbvT8HBaCg" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_vQuqppTGEeK_pbvT8HBaCg" name="expected" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vQuqp5TGEeK_pbvT8HBaCg"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQuqqJTGEeK_pbvT8HBaCg" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LG8oJVWEeKVk61ksFos3g" source="_-LCrMJVWEeKVk61ksFos3g" target="_-LCrMZVWEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LG8oZVWEeKVk61ksFos3g" source="_-LCrMpVWEeKVk61ksFos3g" target="_-LCrM5VWEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LG8opVWEeKVk61ksFos3g" source="_-LCrNJVWEeKVk61ksFos3g" target="_-LCrNZVWEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LG8o5VWEeKVk61ksFos3g" source="_-LCrMZVWEeKVk61ksFos3g" target="_-LCrSZVWEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LG8pJVWEeKVk61ksFos3g" source="_-LCrM5VWEeKVk61ksFos3g" target="_-LCrU5VWEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LG8pZVWEeKVk61ksFos3g" source="_-LCrNZVWEeKVk61ksFos3g" target="_-LCrWpVWEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LG8ppVWEeKVk61ksFos3g" source="_-LCrNZVWEeKVk61ksFos3g" target="_-LDSfpVWEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LG8p5VWEeKVk61ksFos3g" source="_-LCrM5VWEeKVk61ksFos3g" target="_-LDSgZVWEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LG8qJVWEeKVk61ksFos3g" source="_-LCrMZVWEeKVk61ksFos3g" target="_-LDShJVWEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LG8qZVWEeKVk61ksFos3g" source="_-LCrM5VWEeKVk61ksFos3g" target="_-LDSxpVWEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_-LG8qpVWEeKVk61ksFos3g" source="_-LCrNZVWEeKVk61ksFos3g" target="_-LDSzZVWEeKVk61ksFos3g"/>
      <structuredNode xmi:id="_-LCrNpVWEeKVk61ksFos3g" name="Body(AssertList)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LCrN5VWEeKVk61ksFos3g" name="ExpressionStatement@620a4406" outgoing="_-LDS_pVWEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LCrOJVWEeKVk61ksFos3g" name="Call(AssertEquals)" incoming="_-LCrZJVWEeKVk61ksFos3g" behavior="_vQuqdJTGEeK_pbvT8HBaCg">
            <argument xmi:id="_-LCrOZVWEeKVk61ksFos3g" name="Call(AssertEquals).argument(label)" incoming="_-LCrYZVWEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrOpVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrO5VWEeKVk61ksFos3g" value="1"/>
            </argument>
            <argument xmi:id="_-LCrPJVWEeKVk61ksFos3g" name="Call(AssertEquals).argument(value1)" incoming="_-LCrYpVWEeKVk61ksFos3g">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrPZVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrPpVWEeKVk61ksFos3g" value="1"/>
            </argument>
            <argument xmi:id="_-LCrP5VWEeKVk61ksFos3g" name="Call(AssertEquals).argument(value2)" incoming="_-LCrY5VWEeKVk61ksFos3g">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrQJVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrQZVWEeKVk61ksFos3g" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LCrQpVWEeKVk61ksFos3g" name="Tuple@27d27b33" outgoing="_-LCrZJVWEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LCrQ5VWEeKVk61ksFos3g" name="Value(&quot;->size()&quot;)">
              <result xmi:id="_-LCrRJVWEeKVk61ksFos3g" name="Value(&quot;->size()&quot;).result" outgoing="_-LCrYJVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrRZVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrRpVWEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_-LCrR5VWEeKVk61ksFos3g" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LCrSJVWEeKVk61ksFos3g" name="Call(Concat)">
              <argument xmi:id="_-LCrSZVWEeKVk61ksFos3g" name="Call(Concat).argument(x)" incoming="_-LG8o5VWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrSpVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrS5VWEeKVk61ksFos3g" value="1"/>
              </argument>
              <argument xmi:id="_-LCrTJVWEeKVk61ksFos3g" name="Call(Concat).argument(y)" incoming="_-LCrYJVWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrTZVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrTpVWEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_-LCrT5VWEeKVk61ksFos3g" name="Call(Concat).result(result)" outgoing="_-LCrYZVWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrUJVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrUZVWEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LCrUpVWEeKVk61ksFos3g" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_mLWNUJVVEeKVk61ksFos3g">
              <argument xmi:id="_-LCrU5VWEeKVk61ksFos3g" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_-LG8pJVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrVJVWEeKVk61ksFos3g"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrVZVWEeKVk61ksFos3g" value="*"/>
              </argument>
              <result xmi:id="_-LCrVpVWEeKVk61ksFos3g" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_-LCrYpVWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrV5VWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrWJVWEeKVk61ksFos3g" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LCrWZVWEeKVk61ksFos3g" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_mLWNUJVVEeKVk61ksFos3g">
              <argument xmi:id="_-LCrWpVWEeKVk61ksFos3g" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_-LG8pZVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrW5VWEeKVk61ksFos3g"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrXJVWEeKVk61ksFos3g" value="*"/>
              </argument>
              <result xmi:id="_-LCrXZVWEeKVk61ksFos3g" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_-LCrY5VWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrXpVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrX5VWEeKVk61ksFos3g" value="1"/>
              </result>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCrYJVWEeKVk61ksFos3g" source="_-LCrRJVWEeKVk61ksFos3g" target="_-LCrTJVWEeKVk61ksFos3g"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCrYZVWEeKVk61ksFos3g" source="_-LCrT5VWEeKVk61ksFos3g" target="_-LCrOZVWEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCrYpVWEeKVk61ksFos3g" source="_-LCrVpVWEeKVk61ksFos3g" target="_-LCrPJVWEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCrY5VWEeKVk61ksFos3g" source="_-LCrXZVWEeKVk61ksFos3g" target="_-LCrP5VWEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LCrZJVWEeKVk61ksFos3g" source="_-LCrQpVWEeKVk61ksFos3g" target="_-LCrOJVWEeKVk61ksFos3g"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LCrZZVWEeKVk61ksFos3g" name="ForStatement@b208fe5" incoming="_-LDS_pVWEeKVk61ksFos3g">
          <node xmi:type="uml:LoopNode" xmi:id="_-LCrZpVWEeKVk61ksFos3g" name="Loop(ForStatement@b208fe5)" incoming="_-LDS_ZVWEeKVk61ksFos3g" bodyOutput="_-LCr7pVWEeKVk61ksFos3g _-LCr8ZVWEeKVk61ksFos3g _-LCr9JVWEeKVk61ksFos3g _-LDSR5VWEeKVk61ksFos3g _-LDSVpVWEeKVk61ksFos3g _-LDSYpVWEeKVk61ksFos3g" bodyPart="_-LCrd5VWEeKVk61ksFos3g _-LCreZVWEeKVk61ksFos3g _-LDSQJVWEeKVk61ksFos3g _-LDSSpVWEeKVk61ksFos3g _-LDST5VWEeKVk61ksFos3g _-LDSWZVWEeKVk61ksFos3g _-LDSXpVWEeKVk61ksFos3g" decider="_-LCrdJVWEeKVk61ksFos3g" isTestedFirst="true" loopVariable="_-LDSkJVWEeKVk61ksFos3g _-LDSlpVWEeKVk61ksFos3g _-LDSnJVWEeKVk61ksFos3g _-LDSopVWEeKVk61ksFos3g _-LDSqJVWEeKVk61ksFos3g _-LDSrpVWEeKVk61ksFos3g" test="_-LCrbZVWEeKVk61ksFos3g">
            <node xmi:type="uml:ForkNode" xmi:id="_-LCrZ5VWEeKVk61ksFos3g" name="Fork(ForStatement@b208fe5.loopVariable(expected))" outgoing="_-LDSepVWEeKVk61ksFos3g _-LDSe5VWEeKVk61ksFos3g" incoming="_-LDSZpVWEeKVk61ksFos3g"/>
            <node xmi:type="uml:ForkNode" xmi:id="_-LCraJVWEeKVk61ksFos3g" name="Fork(ForStatement@b208fe5.loopVariable(list))" outgoing="_-LDSeZVWEeKVk61ksFos3g _-LDSfJVWEeKVk61ksFos3g" incoming="_-LDSZ5VWEeKVk61ksFos3g"/>
            <node xmi:type="uml:ForkNode" xmi:id="_-LCraZVWEeKVk61ksFos3g" name="Fork(ForStatement@b208fe5.loopVariable(label))" outgoing="_-LDSeJVWEeKVk61ksFos3g _-LDSfZVWEeKVk61ksFos3g" incoming="_-LDSaJVWEeKVk61ksFos3g"/>
            <node xmi:type="uml:ForkNode" xmi:id="_-LCrapVWEeKVk61ksFos3g" name="Fork(ForStatement@b208fe5.loopVariable(i))" outgoing="_-LDSc5VWEeKVk61ksFos3g" incoming="_-LDSaZVWEeKVk61ksFos3g"/>
            <node xmi:type="uml:ForkNode" xmi:id="_-LCra5VWEeKVk61ksFos3g" name="Fork(ForStatement@b208fe5.loopVariable(counter))" outgoing="_-LDSbJVWEeKVk61ksFos3g _-LDSdZVWEeKVk61ksFos3g" incoming="_-LDSapVWEeKVk61ksFos3g"/>
            <node xmi:type="uml:ForkNode" xmi:id="_-LCrbJVWEeKVk61ksFos3g" name="Fork(ForStatement@b208fe5.loopVariable(upper))" outgoing="_-LDSbZVWEeKVk61ksFos3g _-LDSd5VWEeKVk61ksFos3g" incoming="_-LDSa5VWEeKVk61ksFos3g"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LCrbZVWEeKVk61ksFos3g" name="Call(&lt;=)">
              <argument xmi:id="_-LCrbpVWEeKVk61ksFos3g" name="Call(&lt;=).argument(x)" incoming="_-LDSbJVWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrb5VWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrcJVWEeKVk61ksFos3g" value="1"/>
              </argument>
              <argument xmi:id="_-LCrcZVWEeKVk61ksFos3g" name="Call(&lt;=).argument(y)" incoming="_-LDSbZVWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrcpVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrc5VWEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_-LCrdJVWEeKVk61ksFos3g" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrdZVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrdpVWEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LCrd5VWEeKVk61ksFos3g" name="Values(ForStatement@b208fe5)" outgoing="_-LDSb5VWEeKVk61ksFos3g">
              <node xmi:type="uml:ForkNode" xmi:id="_-LCreJVWEeKVk61ksFos3g" name="Fork(i)" outgoing="_-LDScJVWEeKVk61ksFos3g _-LDScZVWEeKVk61ksFos3g _-LDScpVWEeKVk61ksFos3g" incoming="_-LDSbpVWEeKVk61ksFos3g"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LCreZVWEeKVk61ksFos3g" name="Body(ForStatement@b208fe5)" incoming="_-LDSb5VWEeKVk61ksFos3g">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LCrepVWEeKVk61ksFos3g" name="ExpressionStatement@6ed9a9bb">
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LCre5VWEeKVk61ksFos3g" name="Call(AssertEquals)" incoming="_-LCr1ZVWEeKVk61ksFos3g" behavior="_vQuqdJTGEeK_pbvT8HBaCg">
                  <argument xmi:id="_-LCrfJVWEeKVk61ksFos3g" name="Call(AssertEquals).argument(label)" incoming="_-LCr0pVWEeKVk61ksFos3g">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrfZVWEeKVk61ksFos3g" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrfpVWEeKVk61ksFos3g" value="1"/>
                  </argument>
                  <argument xmi:id="_-LCrf5VWEeKVk61ksFos3g" name="Call(AssertEquals).argument(value1)" incoming="_-LCr05VWEeKVk61ksFos3g">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrgJVWEeKVk61ksFos3g" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrgZVWEeKVk61ksFos3g" value="1"/>
                  </argument>
                  <argument xmi:id="_-LCrgpVWEeKVk61ksFos3g" name="Call(AssertEquals).argument(value2)" incoming="_-LCr1JVWEeKVk61ksFos3g">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrg5VWEeKVk61ksFos3g" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrhJVWEeKVk61ksFos3g" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LCrhZVWEeKVk61ksFos3g" name="Tuple@189e361f" outgoing="_-LCr1ZVWEeKVk61ksFos3g">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LCrhpVWEeKVk61ksFos3g" name="Value(&quot;[&quot;)">
                    <result xmi:id="_-LCrh5VWEeKVk61ksFos3g" name="Value(&quot;[&quot;).result" outgoing="_-LCry5VWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCriJVWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCriZVWEeKVk61ksFos3g" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_-LCripVWEeKVk61ksFos3g" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LCri5VWEeKVk61ksFos3g" name="Call(Concat)">
                    <argument xmi:id="_-LCrjJVWEeKVk61ksFos3g" name="Call(Concat).argument(x)" incoming="_-LDSeJVWEeKVk61ksFos3g">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrjZVWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrjpVWEeKVk61ksFos3g" value="1"/>
                    </argument>
                    <argument xmi:id="_-LCrj5VWEeKVk61ksFos3g" name="Call(Concat).argument(y)" incoming="_-LCry5VWEeKVk61ksFos3g">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrkJVWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrkZVWEeKVk61ksFos3g" value="1"/>
                    </argument>
                    <result xmi:id="_-LCrkpVWEeKVk61ksFos3g" name="Call(Concat).result(result)" outgoing="_-LCrzJVWEeKVk61ksFos3g">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrk5VWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrlJVWEeKVk61ksFos3g" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LCrlZVWEeKVk61ksFos3g" name="Call(ToString)">
                    <argument xmi:id="_-LCrlpVWEeKVk61ksFos3g" name="Call(ToString).argument(x)" incoming="_-LDScJVWEeKVk61ksFos3g">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrl5VWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrmJVWEeKVk61ksFos3g" value="1"/>
                    </argument>
                    <result xmi:id="_-LCrmZVWEeKVk61ksFos3g" name="Call(ToString).result(result)" outgoing="_-LCrzZVWEeKVk61ksFos3g">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrmpVWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrm5VWEeKVk61ksFos3g" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LCrnJVWEeKVk61ksFos3g" name="Call(Concat)">
                    <argument xmi:id="_-LCrnZVWEeKVk61ksFos3g" name="Call(Concat).argument(x)" incoming="_-LCrzJVWEeKVk61ksFos3g">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrnpVWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrn5VWEeKVk61ksFos3g" value="1"/>
                    </argument>
                    <argument xmi:id="_-LCroJVWEeKVk61ksFos3g" name="Call(Concat).argument(y)" incoming="_-LCrzZVWEeKVk61ksFos3g">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCroZVWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCropVWEeKVk61ksFos3g" value="1"/>
                    </argument>
                    <result xmi:id="_-LCro5VWEeKVk61ksFos3g" name="Call(Concat).result(result)" outgoing="_-LCrzpVWEeKVk61ksFos3g">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrpJVWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrpZVWEeKVk61ksFos3g" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LCrppVWEeKVk61ksFos3g" name="Value(&quot;]&quot;)">
                    <result xmi:id="_-LCrp5VWEeKVk61ksFos3g" name="Value(&quot;]&quot;).result" outgoing="_-LCrz5VWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrqJVWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrqZVWEeKVk61ksFos3g" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_-LCrqpVWEeKVk61ksFos3g" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LCrq5VWEeKVk61ksFos3g" name="Call(Concat)">
                    <argument xmi:id="_-LCrrJVWEeKVk61ksFos3g" name="Call(Concat).argument(x)" incoming="_-LCrzpVWEeKVk61ksFos3g">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrrZVWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrrpVWEeKVk61ksFos3g" value="1"/>
                    </argument>
                    <argument xmi:id="_-LCrr5VWEeKVk61ksFos3g" name="Call(Concat).argument(y)" incoming="_-LCrz5VWEeKVk61ksFos3g">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrsJVWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrsZVWEeKVk61ksFos3g" value="1"/>
                    </argument>
                    <result xmi:id="_-LCrspVWEeKVk61ksFos3g" name="Call(Concat).result(result)" outgoing="_-LCr0pVWEeKVk61ksFos3g">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrs5VWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrtJVWEeKVk61ksFos3g" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LCrtZVWEeKVk61ksFos3g" name="Call(At)">
                    <argument xmi:id="_-LCrtpVWEeKVk61ksFos3g" name="Call(At).argument(seq)" incoming="_-LDSeZVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrt5VWEeKVk61ksFos3g"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCruJVWEeKVk61ksFos3g" value="*"/>
                    </argument>
                    <argument xmi:id="_-LCruZVWEeKVk61ksFos3g" name="Call(At).argument(index)" incoming="_-LCr0JVWEeKVk61ksFos3g">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrupVWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCru5VWEeKVk61ksFos3g" value="1"/>
                    </argument>
                    <result xmi:id="_-LCrvJVWEeKVk61ksFos3g" name="Call(At).result()" outgoing="_-LCr05VWEeKVk61ksFos3g">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrvZVWEeKVk61ksFos3g"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrvpVWEeKVk61ksFos3g" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_-LCrv5VWEeKVk61ksFos3g" name="Fork(Call(At).argument(index))" outgoing="_-LCr0JVWEeKVk61ksFos3g" incoming="_-LDScZVWEeKVk61ksFos3g"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LCrwJVWEeKVk61ksFos3g" name="Call(At)">
                    <argument xmi:id="_-LCrwZVWEeKVk61ksFos3g" name="Call(At).argument(seq)" incoming="_-LDSepVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrwpVWEeKVk61ksFos3g"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrw5VWEeKVk61ksFos3g" value="*"/>
                    </argument>
                    <argument xmi:id="_-LCrxJVWEeKVk61ksFos3g" name="Call(At).argument(index)" incoming="_-LCr0ZVWEeKVk61ksFos3g">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCrxZVWEeKVk61ksFos3g" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCrxpVWEeKVk61ksFos3g" value="1"/>
                    </argument>
                    <result xmi:id="_-LCrx5VWEeKVk61ksFos3g" name="Call(At).result()" outgoing="_-LCr1JVWEeKVk61ksFos3g">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCryJVWEeKVk61ksFos3g"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCryZVWEeKVk61ksFos3g" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_-LCrypVWEeKVk61ksFos3g" name="Fork(Call(At).argument(index))" outgoing="_-LCr0ZVWEeKVk61ksFos3g" incoming="_-LDScpVWEeKVk61ksFos3g"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCry5VWEeKVk61ksFos3g" source="_-LCrh5VWEeKVk61ksFos3g" target="_-LCrj5VWEeKVk61ksFos3g"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCrzJVWEeKVk61ksFos3g" source="_-LCrkpVWEeKVk61ksFos3g" target="_-LCrnZVWEeKVk61ksFos3g"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCrzZVWEeKVk61ksFos3g" source="_-LCrmZVWEeKVk61ksFos3g" target="_-LCroJVWEeKVk61ksFos3g"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCrzpVWEeKVk61ksFos3g" source="_-LCro5VWEeKVk61ksFos3g" target="_-LCrrJVWEeKVk61ksFos3g"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCrz5VWEeKVk61ksFos3g" source="_-LCrp5VWEeKVk61ksFos3g" target="_-LCrr5VWEeKVk61ksFos3g"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCr0JVWEeKVk61ksFos3g" source="_-LCrv5VWEeKVk61ksFos3g" target="_-LCruZVWEeKVk61ksFos3g"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCr0ZVWEeKVk61ksFos3g" source="_-LCrypVWEeKVk61ksFos3g" target="_-LCrxJVWEeKVk61ksFos3g"/>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCr0pVWEeKVk61ksFos3g" source="_-LCrspVWEeKVk61ksFos3g" target="_-LCrfJVWEeKVk61ksFos3g"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCr05VWEeKVk61ksFos3g" source="_-LCrvJVWEeKVk61ksFos3g" target="_-LCrf5VWEeKVk61ksFos3g"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCr1JVWEeKVk61ksFos3g" source="_-LCrx5VWEeKVk61ksFos3g" target="_-LCrgpVWEeKVk61ksFos3g"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_-LCr1ZVWEeKVk61ksFos3g" source="_-LCrhZVWEeKVk61ksFos3g" target="_-LCre5VWEeKVk61ksFos3g"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LCr1pVWEeKVk61ksFos3g" name="Passthru(Fork(expected))">
                <structuredNodeInput xmi:id="_-LCr15VWEeKVk61ksFos3g" name="Passthru(Fork(expected)).input" outgoing="_-LCr3ZVWEeKVk61ksFos3g" incoming="_-LDSe5VWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCr2JVWEeKVk61ksFos3g"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCr2ZVWEeKVk61ksFos3g" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_-LCr2pVWEeKVk61ksFos3g" name="Passthru(Fork(expected)).output" outgoing="_-LCr95VWEeKVk61ksFos3g" incoming="_-LCr3ZVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCr25VWEeKVk61ksFos3g"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCr3JVWEeKVk61ksFos3g" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCr3ZVWEeKVk61ksFos3g" source="_-LCr15VWEeKVk61ksFos3g" target="_-LCr2pVWEeKVk61ksFos3g"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LCr3pVWEeKVk61ksFos3g" name="Passthru(Fork(list))">
                <structuredNodeInput xmi:id="_-LCr35VWEeKVk61ksFos3g" name="Passthru(Fork(list)).input" outgoing="_-LCr5ZVWEeKVk61ksFos3g" incoming="_-LDSfJVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCr4JVWEeKVk61ksFos3g"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCr4ZVWEeKVk61ksFos3g" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_-LCr4pVWEeKVk61ksFos3g" name="Passthru(Fork(list)).output" outgoing="_-LCr-JVWEeKVk61ksFos3g" incoming="_-LCr5ZVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCr45VWEeKVk61ksFos3g"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCr5JVWEeKVk61ksFos3g" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCr5ZVWEeKVk61ksFos3g" source="_-LCr35VWEeKVk61ksFos3g" target="_-LCr4pVWEeKVk61ksFos3g"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LCr5pVWEeKVk61ksFos3g" name="Passthru(Fork(label))">
                <structuredNodeInput xmi:id="_-LCr55VWEeKVk61ksFos3g" name="Passthru(Fork(label)).input" outgoing="_-LCr7ZVWEeKVk61ksFos3g" incoming="_-LDSfZVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCr6JVWEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCr6ZVWEeKVk61ksFos3g" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_-LCr6pVWEeKVk61ksFos3g" name="Passthru(Fork(label)).output" outgoing="_-LCr-ZVWEeKVk61ksFos3g" incoming="_-LCr7ZVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCr65VWEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCr7JVWEeKVk61ksFos3g" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCr7ZVWEeKVk61ksFos3g" source="_-LCr55VWEeKVk61ksFos3g" target="_-LCr6pVWEeKVk61ksFos3g"/>
              </node>
              <structuredNodeOutput xmi:id="_-LCr7pVWEeKVk61ksFos3g" name="expected" incoming="_-LCr95VWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCr75VWEeKVk61ksFos3g"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCr8JVWEeKVk61ksFos3g" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_-LCr8ZVWEeKVk61ksFos3g" name="list" incoming="_-LCr-JVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCr8pVWEeKVk61ksFos3g"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCr85VWEeKVk61ksFos3g" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_-LCr9JVWEeKVk61ksFos3g" name="label" incoming="_-LCr-ZVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LCr9ZVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LCr9pVWEeKVk61ksFos3g" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCr95VWEeKVk61ksFos3g" source="_-LCr2pVWEeKVk61ksFos3g" target="_-LCr7pVWEeKVk61ksFos3g"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCr-JVWEeKVk61ksFos3g" source="_-LCr4pVWEeKVk61ksFos3g" target="_-LCr8ZVWEeKVk61ksFos3g"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LCr-ZVWEeKVk61ksFos3g" source="_-LCr6pVWEeKVk61ksFos3g" target="_-LCr9JVWEeKVk61ksFos3g"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LDSQJVWEeKVk61ksFos3g" name="Call(+)">
              <argument xmi:id="_-LDSQZVWEeKVk61ksFos3g" name="Call(+).argument(x)" incoming="_-LDSc5VWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSQpVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSQ5VWEeKVk61ksFos3g" value="1"/>
              </argument>
              <argument xmi:id="_-LDSRJVWEeKVk61ksFos3g" name="Call(+).argument(y)" incoming="_-LDSdJVWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSRZVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSRpVWEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_-LDSR5VWEeKVk61ksFos3g" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSSJVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSSZVWEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LDSSpVWEeKVk61ksFos3g" name="Value(1)">
              <result xmi:id="_-LDSS5VWEeKVk61ksFos3g" name="Value(1).result" outgoing="_-LDSdJVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSTJVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSTZVWEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_-LDSTpVWEeKVk61ksFos3g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LDST5VWEeKVk61ksFos3g" name="Call(+)">
              <argument xmi:id="_-LDSUJVWEeKVk61ksFos3g" name="Call(+).argument(x)" incoming="_-LDSdZVWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSUZVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSUpVWEeKVk61ksFos3g" value="1"/>
              </argument>
              <argument xmi:id="_-LDSU5VWEeKVk61ksFos3g" name="Call(+).argument(y)" incoming="_-LDSdpVWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSVJVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSVZVWEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_-LDSVpVWEeKVk61ksFos3g" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSV5VWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSWJVWEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LDSWZVWEeKVk61ksFos3g" name="Value(1)">
              <result xmi:id="_-LDSWpVWEeKVk61ksFos3g" name="Value(1).result" outgoing="_-LDSdpVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSW5VWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSXJVWEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_-LDSXZVWEeKVk61ksFos3g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LDSXpVWEeKVk61ksFos3g" name="Passthru(Passthru(upper))">
              <structuredNodeInput xmi:id="_-LDSX5VWEeKVk61ksFos3g" name="Passthru(Passthru(upper)).input" outgoing="_-LDSZZVWEeKVk61ksFos3g" incoming="_-LDSd5VWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSYJVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSYZVWEeKVk61ksFos3g" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_-LDSYpVWEeKVk61ksFos3g" name="Passthru(Passthru(upper)).output" incoming="_-LDSZZVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSY5VWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSZJVWEeKVk61ksFos3g" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSZZVWEeKVk61ksFos3g" source="_-LDSX5VWEeKVk61ksFos3g" target="_-LDSYpVWEeKVk61ksFos3g"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSZpVWEeKVk61ksFos3g" source="_-LDSkJVWEeKVk61ksFos3g" target="_-LCrZ5VWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSZ5VWEeKVk61ksFos3g" source="_-LDSlpVWEeKVk61ksFos3g" target="_-LCraJVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSaJVWEeKVk61ksFos3g" source="_-LDSnJVWEeKVk61ksFos3g" target="_-LCraZVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSaZVWEeKVk61ksFos3g" source="_-LDSopVWEeKVk61ksFos3g" target="_-LCrapVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSapVWEeKVk61ksFos3g" source="_-LDSqJVWEeKVk61ksFos3g" target="_-LCra5VWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSa5VWEeKVk61ksFos3g" source="_-LDSrpVWEeKVk61ksFos3g" target="_-LCrbJVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSbJVWEeKVk61ksFos3g" source="_-LCra5VWEeKVk61ksFos3g" target="_-LCrbpVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSbZVWEeKVk61ksFos3g" source="_-LCrbJVWEeKVk61ksFos3g" target="_-LCrcZVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSbpVWEeKVk61ksFos3g" source="_-LDSopVWEeKVk61ksFos3g" target="_-LCreJVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LDSb5VWEeKVk61ksFos3g" source="_-LCrd5VWEeKVk61ksFos3g" target="_-LCreZVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDScJVWEeKVk61ksFos3g" source="_-LCreJVWEeKVk61ksFos3g" target="_-LCrlpVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDScZVWEeKVk61ksFos3g" source="_-LCreJVWEeKVk61ksFos3g" target="_-LCrv5VWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDScpVWEeKVk61ksFos3g" source="_-LCreJVWEeKVk61ksFos3g" target="_-LCrypVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSc5VWEeKVk61ksFos3g" source="_-LCrapVWEeKVk61ksFos3g" target="_-LDSQZVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSdJVWEeKVk61ksFos3g" source="_-LDSS5VWEeKVk61ksFos3g" target="_-LDSRJVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSdZVWEeKVk61ksFos3g" source="_-LCra5VWEeKVk61ksFos3g" target="_-LDSUJVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSdpVWEeKVk61ksFos3g" source="_-LDSWpVWEeKVk61ksFos3g" target="_-LDSU5VWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSd5VWEeKVk61ksFos3g" source="_-LCrbJVWEeKVk61ksFos3g" target="_-LDSX5VWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSeJVWEeKVk61ksFos3g" source="_-LCraZVWEeKVk61ksFos3g" target="_-LCrjJVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSeZVWEeKVk61ksFos3g" source="_-LCraJVWEeKVk61ksFos3g" target="_-LCrtpVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSepVWEeKVk61ksFos3g" source="_-LCrZ5VWEeKVk61ksFos3g" target="_-LCrwZVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSe5VWEeKVk61ksFos3g" source="_-LCrZ5VWEeKVk61ksFos3g" target="_-LCr15VWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSfJVWEeKVk61ksFos3g" source="_-LCraJVWEeKVk61ksFos3g" target="_-LCr35VWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDSfZVWEeKVk61ksFos3g" source="_-LCraZVWEeKVk61ksFos3g" target="_-LCr55VWEeKVk61ksFos3g"/>
            <loopVariableInput xmi:id="_-LDSfpVWEeKVk61ksFos3g" name="ForStatement@b208fe5.loopVariableInput(expected)" incoming="_-LG8ppVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSf5VWEeKVk61ksFos3g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSgJVWEeKVk61ksFos3g" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_-LDSgZVWEeKVk61ksFos3g" name="ForStatement@b208fe5.loopVariableInput(list)" incoming="_-LG8p5VWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSgpVWEeKVk61ksFos3g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSg5VWEeKVk61ksFos3g" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_-LDShJVWEeKVk61ksFos3g" name="ForStatement@b208fe5.loopVariableInput(label)" incoming="_-LG8qJVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDShZVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDShpVWEeKVk61ksFos3g" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_-LDSh5VWEeKVk61ksFos3g" name="ForStatement@b208fe5.loopVariableInput(i)" incoming="_-LDS_JVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSiJVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSiZVWEeKVk61ksFos3g" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_-LDSipVWEeKVk61ksFos3g" name="ForStatement@b208fe5.loopVariableInput(counter)" incoming="_-LDS-pVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSi5VWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSjJVWEeKVk61ksFos3g" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_-LDSjZVWEeKVk61ksFos3g" name="ForStatement@b208fe5.loopVariableInput(upper)" incoming="_-LDS-5VWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSjpVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSj5VWEeKVk61ksFos3g" value="1"/>
            </loopVariableInput>
            <result xmi:id="_-LDSkJVWEeKVk61ksFos3g" name="ForStatement@b208fe5.loopVariable(expected)" outgoing="_-LDSZpVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSkZVWEeKVk61ksFos3g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSkpVWEeKVk61ksFos3g" value="*"/>
            </result>
            <result xmi:id="_-LDSk5VWEeKVk61ksFos3g" name="ForStatement@b208fe5.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSlJVWEeKVk61ksFos3g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSlZVWEeKVk61ksFos3g" value="*"/>
            </result>
            <result xmi:id="_-LDSlpVWEeKVk61ksFos3g" name="ForStatement@b208fe5.loopVariable(list)" outgoing="_-LDSZ5VWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSl5VWEeKVk61ksFos3g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSmJVWEeKVk61ksFos3g" value="*"/>
            </result>
            <result xmi:id="_-LDSmZVWEeKVk61ksFos3g" name="ForStatement@b208fe5.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSmpVWEeKVk61ksFos3g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSm5VWEeKVk61ksFos3g" value="*"/>
            </result>
            <result xmi:id="_-LDSnJVWEeKVk61ksFos3g" name="ForStatement@b208fe5.loopVariable(label)" outgoing="_-LDSaJVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSnZVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSnpVWEeKVk61ksFos3g" value="1"/>
            </result>
            <result xmi:id="_-LDSn5VWEeKVk61ksFos3g" name="ForStatement@b208fe5.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSoJVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSoZVWEeKVk61ksFos3g" value="1"/>
            </result>
            <result xmi:id="_-LDSopVWEeKVk61ksFos3g" name="ForStatement@b208fe5.loopVariable(i)" outgoing="_-LDSaZVWEeKVk61ksFos3g _-LDSbpVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSo5VWEeKVk61ksFos3g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSpJVWEeKVk61ksFos3g" value="*"/>
            </result>
            <result xmi:id="_-LDSpZVWEeKVk61ksFos3g" name="ForStatement@b208fe5.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSppVWEeKVk61ksFos3g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSp5VWEeKVk61ksFos3g" value="*"/>
            </result>
            <result xmi:id="_-LDSqJVWEeKVk61ksFos3g" name="ForStatement@b208fe5.loopVariable(counter)" outgoing="_-LDSapVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSqZVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSqpVWEeKVk61ksFos3g" value="1"/>
            </result>
            <result xmi:id="_-LDSq5VWEeKVk61ksFos3g" name="ForStatement@b208fe5.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSrJVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSrZVWEeKVk61ksFos3g" value="1"/>
            </result>
            <result xmi:id="_-LDSrpVWEeKVk61ksFos3g" name="ForStatement@b208fe5.loopVariable(upper)" outgoing="_-LDSa5VWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSr5VWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSsJVWEeKVk61ksFos3g" value="1"/>
            </result>
            <result xmi:id="_-LDSsZVWEeKVk61ksFos3g" name="ForStatement@b208fe5.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSspVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSs5VWEeKVk61ksFos3g" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LDStJVWEeKVk61ksFos3g" name="LoopVariables(ForStatement@b208fe5)" outgoing="_-LDS_ZVWEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LDStZVWEeKVk61ksFos3g" name="Value(1)">
              <result xmi:id="_-LDStpVWEeKVk61ksFos3g" name="Value(1).result" outgoing="_-LDS-ZVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSt5VWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSuJVWEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_-LDSuZVWEeKVk61ksFos3g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LDSupVWEeKVk61ksFos3g" name="Call(Min)" incoming="_-LDS9JVWEeKVk61ksFos3g">
              <argument xmi:id="_-LDSu5VWEeKVk61ksFos3g" name="Call(Min).argument(x)" incoming="_-LDS8pVWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSvJVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSvZVWEeKVk61ksFos3g" value="1"/>
              </argument>
              <argument xmi:id="_-LDSvpVWEeKVk61ksFos3g" name="Call(Min).argument(y)" incoming="_-LDS85VWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSv5VWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSwJVWEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_-LDSwZVWEeKVk61ksFos3g" name="Call(Min).result(result)" outgoing="_-LDS9ZVWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSwpVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSw5VWEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_-LDSxJVWEeKVk61ksFos3g" name="Tuple@632be4a7" outgoing="_-LDS9JVWEeKVk61ksFos3g">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LDSxZVWEeKVk61ksFos3g" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_mLWNUJVVEeKVk61ksFos3g">
                <argument xmi:id="_-LDSxpVWEeKVk61ksFos3g" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_-LG8qZVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSx5VWEeKVk61ksFos3g"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSyJVWEeKVk61ksFos3g" value="*"/>
                </argument>
                <result xmi:id="_-LDSyZVWEeKVk61ksFos3g" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_-LDS8pVWEeKVk61ksFos3g">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSypVWEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSy5VWEeKVk61ksFos3g" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LDSzJVWEeKVk61ksFos3g" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_mLWNUJVVEeKVk61ksFos3g">
                <argument xmi:id="_-LDSzZVWEeKVk61ksFos3g" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_-LG8qpVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDSzpVWEeKVk61ksFos3g"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDSz5VWEeKVk61ksFos3g" value="*"/>
                </argument>
                <result xmi:id="_-LDS0JVWEeKVk61ksFos3g" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_-LDS85VWEeKVk61ksFos3g">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDS0ZVWEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDS0pVWEeKVk61ksFos3g" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_-LDS05VWEeKVk61ksFos3g" name="Fork(Value(1).result)" outgoing="_-LDS_JVWEeKVk61ksFos3g _-LDS9pVWEeKVk61ksFos3g" incoming="_-LDS-ZVWEeKVk61ksFos3g"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LDS1JVWEeKVk61ksFos3g" name="Call(-)">
              <argument xmi:id="_-LDS1ZVWEeKVk61ksFos3g" name="Call(-).argument(x)" incoming="_-LDS9ZVWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDS1pVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDS15VWEeKVk61ksFos3g" value="1"/>
              </argument>
              <argument xmi:id="_-LDS2JVWEeKVk61ksFos3g" name="Call(-).argument(y)" incoming="_-LDS9pVWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDS2ZVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDS2pVWEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_-LDS25VWEeKVk61ksFos3g" name="Call(-).result(result)" outgoing="_-LDS95VWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDS3JVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDS3ZVWEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LDS3pVWEeKVk61ksFos3g" name="Value(1)">
              <result xmi:id="_-LDS35VWEeKVk61ksFos3g" name="Value(1).result" outgoing="_-LDS-JVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDS4JVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDS4ZVWEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_-LDS4pVWEeKVk61ksFos3g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_-LDS45VWEeKVk61ksFos3g" name="Call(+)">
              <argument xmi:id="_-LDS5JVWEeKVk61ksFos3g" name="Call(+).argument(x)" incoming="_-LDS95VWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDS5ZVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDS5pVWEeKVk61ksFos3g" value="1"/>
              </argument>
              <argument xmi:id="_-LDS55VWEeKVk61ksFos3g" name="Call(+).argument(y)" incoming="_-LDS-JVWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDS6JVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDS6ZVWEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_-LDS6pVWEeKVk61ksFos3g" name="Call(+).result(result)" outgoing="_-LDS-5VWEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDS65VWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDS7JVWEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_-LDS7ZVWEeKVk61ksFos3g" name="Value(1)">
              <result xmi:id="_-LDS7pVWEeKVk61ksFos3g" name="Value(1).result" outgoing="_-LDS-pVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-LDS75VWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-LDS8JVWEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_-LDS8ZVWEeKVk61ksFos3g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDS8pVWEeKVk61ksFos3g" source="_-LDSyZVWEeKVk61ksFos3g" target="_-LDSu5VWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDS85VWEeKVk61ksFos3g" source="_-LDS0JVWEeKVk61ksFos3g" target="_-LDSvpVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_-LDS9JVWEeKVk61ksFos3g" source="_-LDSxJVWEeKVk61ksFos3g" target="_-LDSupVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDS9ZVWEeKVk61ksFos3g" source="_-LDSwZVWEeKVk61ksFos3g" target="_-LDS1ZVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDS9pVWEeKVk61ksFos3g" source="_-LDS05VWEeKVk61ksFos3g" target="_-LDS2JVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDS95VWEeKVk61ksFos3g" source="_-LDS25VWEeKVk61ksFos3g" target="_-LDS5JVWEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDS-JVWEeKVk61ksFos3g" source="_-LDS35VWEeKVk61ksFos3g" target="_-LDS55VWEeKVk61ksFos3g"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDS-ZVWEeKVk61ksFos3g" source="_-LDStpVWEeKVk61ksFos3g" target="_-LDS05VWEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDS-pVWEeKVk61ksFos3g" source="_-LDS7pVWEeKVk61ksFos3g" target="_-LDSipVWEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDS-5VWEeKVk61ksFos3g" source="_-LDS6pVWEeKVk61ksFos3g" target="_-LDSjZVWEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_-LDS_JVWEeKVk61ksFos3g" source="_-LDS05VWEeKVk61ksFos3g" target="_-LDSh5VWEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_-LDS_ZVWEeKVk61ksFos3g" source="_-LDStJVWEeKVk61ksFos3g" target="_-LCrZpVWEeKVk61ksFos3g"/>
        </node>
        <edge xmi:type="uml:ControlFlow" xmi:id="_-LDS_pVWEeKVk61ksFos3g" source="_-LCrN5VWEeKVk61ksFos3g" target="_-LCrZZVWEeKVk61ksFos3g"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LCrMJVWEeKVk61ksFos3g" name="Input(label)" outgoing="_-LG8oJVWEeKVk61ksFos3g" parameter="_vQuqopTGEeK_pbvT8HBaCg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_-LCrMZVWEeKVk61ksFos3g" name="Fork(label)" outgoing="_-LG8o5VWEeKVk61ksFos3g _-LG8qJVWEeKVk61ksFos3g" incoming="_-LG8oJVWEeKVk61ksFos3g"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LCrMpVWEeKVk61ksFos3g" name="Input(list)" outgoing="_-LG8oZVWEeKVk61ksFos3g" parameter="_vQuqo5TGEeK_pbvT8HBaCg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_-LCrM5VWEeKVk61ksFos3g" name="Fork(list)" outgoing="_-LG8pJVWEeKVk61ksFos3g _-LG8qZVWEeKVk61ksFos3g _-LG8p5VWEeKVk61ksFos3g" incoming="_-LG8oZVWEeKVk61ksFos3g"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_-LCrNJVWEeKVk61ksFos3g" name="Input(expected)" outgoing="_-LG8opVWEeKVk61ksFos3g" parameter="_vQuqppTGEeK_pbvT8HBaCg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_-LCrNZVWEeKVk61ksFos3g" name="Fork(expected)" outgoing="_-LG8pZVWEeKVk61ksFos3g _-LG8qpVWEeKVk61ksFos3g _-LG8ppVWEeKVk61ksFos3g" incoming="_-LG8opVWEeKVk61ksFos3g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_vQuqqZTGEeK_pbvT8HBaCg" name="Write" group="_pb3i4pVVEeKVk61ksFos3g" node="_pb3i4JVVEeKVk61ksFos3g _pb3i4ZVVEeKVk61ksFos3g _pb3i4pVVEeKVk61ksFos3g">
      <ownedComment xmi:id="_mVD3sJUNEeK8_e3021UuYw">
        <body>&#xD;
namespace model ;&#xD;
&#xD;
private import Alf::Library::BasicInputOutput::StandardOutputChannel ;&#xD;
&#xD;
activity Write(in value: any) {&#xD;
	StandardOutputChannel.allInstances()[1].write(value);&#xD;
}</body>
      </ownedComment>
      <ownedParameter xmi:id="_vQuqq5TGEeK_pbvT8HBaCg" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vQuqrJTGEeK_pbvT8HBaCg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQuqrZTGEeK_pbvT8HBaCg" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_pb4xAJVVEeKVk61ksFos3g" source="_pb3i4JVVEeKVk61ksFos3g" target="_pb3i4ZVVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_pb4xAZVVEeKVk61ksFos3g" source="_pb3i4ZVVEeKVk61ksFos3g" target="_pb4J-pVVEeKVk61ksFos3g"/>
      <structuredNode xmi:id="_pb3i4pVVEeKVk61ksFos3g" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_pb3i45VVEeKVk61ksFos3g" name="ExpressionStatement@79c0e05">
          <node xmi:type="uml:ExpansionRegion" xmi:id="_pb3i5JVVEeKVk61ksFos3g" name="Collect(Call(write))" incoming="_pb4KG5VVEeKVk61ksFos3g" mode="parallel" inputElement="_pb4J_5VVEeKVk61ksFos3g">
            <node xmi:type="uml:CallOperationAction" xmi:id="_pb4J8JVVEeKVk61ksFos3g" name="Call(write)">
              <argument xmi:id="_pb4J8ZVVEeKVk61ksFos3g" name="Call(write).argument(value)" incoming="_pb4J_ZVVEeKVk61ksFos3g">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pb4J8pVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pb4J85VVEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_pb4J9JVVEeKVk61ksFos3g" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pb4J9ZVVEeKVk61ksFos3g"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pb4J9pVVEeKVk61ksFos3g" value="1"/>
              </result>
              <operation href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_pb4J95VVEeKVk61ksFos3g" name="Call(write).target" incoming="_pb4J_pVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pb4J-JVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pb4J-ZVVEeKVk61ksFos3g" value="1"/>
              </target>
            </node>
            <structuredNodeInput xmi:id="_pb4J-pVVEeKVk61ksFos3g" name="Collect(Call(write)).input(Fork(value))" outgoing="_pb4J_ZVVEeKVk61ksFos3g" incoming="_pb4xAZVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pb4J-5VVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pb4J_JVVEeKVk61ksFos3g" value="1"/>
            </structuredNodeInput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_pb4J_ZVVEeKVk61ksFos3g" source="_pb4J-pVVEeKVk61ksFos3g" target="_pb4J8ZVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_pb4J_pVVEeKVk61ksFos3g" source="_pb4J_5VVEeKVk61ksFos3g" target="_pb4J95VVEeKVk61ksFos3g"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_pb4J_5VVEeKVk61ksFos3g" name="Collect(Call(write)).inputElement" outgoing="_pb4J_pVVEeKVk61ksFos3g" incoming="_pb4KGpVVEeKVk61ksFos3g" regionAsInput="_pb3i5JVVEeKVk61ksFos3g"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_pb4KAJVVEeKVk61ksFos3g" name="Feature(Call(At).result())" outgoing="_pb4KG5VVEeKVk61ksFos3g">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_pb4KAZVVEeKVk61ksFos3g" name="Call(At)" incoming="_pb4KGJVVEeKVk61ksFos3g">
              <argument xmi:id="_pb4KApVVEeKVk61ksFos3g" name="Call(At).argument(seq)" incoming="_pb4KFpVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pb4KA5VVEeKVk61ksFos3g"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pb4KBJVVEeKVk61ksFos3g" value="*"/>
              </argument>
              <argument xmi:id="_pb4KBZVVEeKVk61ksFos3g" name="Call(At).argument(index)" incoming="_pb4KGZVVEeKVk61ksFos3g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pb4KBpVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pb4KB5VVEeKVk61ksFos3g" value="1"/>
              </argument>
              <result xmi:id="_pb4KCJVVEeKVk61ksFos3g" name="Call(At).result()" outgoing="_pb4KGpVVEeKVk61ksFos3g">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pb4KCZVVEeKVk61ksFos3g"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pb4KCpVVEeKVk61ksFos3g" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_pb4KC5VVEeKVk61ksFos3g" name="Tuple@d41d6a5" outgoing="_pb4KGJVVEeKVk61ksFos3g">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_pb4KDJVVEeKVk61ksFos3g" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_pb4KDZVVEeKVk61ksFos3g" name="ReadExtent(StandardOutputChannel).result" outgoing="_pb4KFpVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pb4KDpVVEeKVk61ksFos3g"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pb4KD5VVEeKVk61ksFos3g" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_pb4KEJVVEeKVk61ksFos3g" name="Value(1)">
                <result xmi:id="_pb4KEZVVEeKVk61ksFos3g" name="Value(1).result" outgoing="_pb4KF5VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pb4KEpVVEeKVk61ksFos3g" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pb4KE5VVEeKVk61ksFos3g" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_pb4KFJVVEeKVk61ksFos3g" value="1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_pb4KFZVVEeKVk61ksFos3g" name="Fork(Call(At).argument(index))" outgoing="_pb4KGZVVEeKVk61ksFos3g" incoming="_pb4KF5VVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_pb4KFpVVEeKVk61ksFos3g" source="_pb4KDZVVEeKVk61ksFos3g" target="_pb4KApVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_pb4KF5VVEeKVk61ksFos3g" source="_pb4KEZVVEeKVk61ksFos3g" target="_pb4KFZVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_pb4KGJVVEeKVk61ksFos3g" source="_pb4KC5VVEeKVk61ksFos3g" target="_pb4KAZVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_pb4KGZVVEeKVk61ksFos3g" source="_pb4KFZVVEeKVk61ksFos3g" target="_pb4KBZVVEeKVk61ksFos3g"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_pb4KGpVVEeKVk61ksFos3g" source="_pb4KCJVVEeKVk61ksFos3g" target="_pb4J_5VVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_pb4KG5VVEeKVk61ksFos3g" source="_pb4KAJVVEeKVk61ksFos3g" target="_pb3i5JVVEeKVk61ksFos3g"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_pb3i4JVVEeKVk61ksFos3g" name="Input(value)" outgoing="_pb4xAJVVEeKVk61ksFos3g" parameter="_vQuqq5TGEeK_pbvT8HBaCg"/>
      <node xmi:type="uml:ForkNode" xmi:id="_pb3i4ZVVEeKVk61ksFos3g" name="Fork(value)" outgoing="_pb4xAZVVEeKVk61ksFos3g" incoming="_pb4xAJVVEeKVk61ksFos3g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_vQuqsZTGEeK_pbvT8HBaCg" name="TestWrite" group="_3XbCUJVWEeKVk61ksFos3g" node="_3XbCUJVWEeKVk61ksFos3g">
      <ownedComment xmi:id="_vQuqspTGEeK_pbvT8HBaCg">
        <body>/* Generated textual representation of Activity AssertionLibrary::Tests::TestWrite */&#xD;
&#xD;
namespace AssertionLibrary::Tests ;&#xD;
&#xD;
activity TestWrite() { &#xD;
	Write(&quot;Hello!&quot;) ;&#xD;
}</body>
      </ownedComment>
      <ownedComment xmi:id="_iqmYIJUNEeK8_e3021UuYw">
        <body>/* Generated textual representation of Activity model::AssertionLibrary::Tests::TestWrite */

namespace model ;

activity TestWrite() {
	
	Write(&quot;Test String&quot;); WriteLine(&quot;&quot;);
	Write(&quot;Test Integer: &quot;); Write(2); WriteLine(&quot;&quot;);

}</body>
      </ownedComment>
      <structuredNode xmi:id="_3XbCUJVWEeKVk61ksFos3g" name="Body(TestWrite)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_3XbCUZVWEeKVk61ksFos3g" name="ExpressionStatement@34a84c27" outgoing="_3XbCmJVWEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3XbCUpVWEeKVk61ksFos3g" name="Call(Write)" incoming="_3XbCXZVWEeKVk61ksFos3g" behavior="_vQuqqZTGEeK_pbvT8HBaCg">
            <argument xmi:id="_3XbCU5VWEeKVk61ksFos3g" name="Call(Write).argument(value)" incoming="_3XbCXJVWEeKVk61ksFos3g">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3XbCVJVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3XbCVZVWEeKVk61ksFos3g" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3XbCVpVWEeKVk61ksFos3g" name="Tuple@64b3a11" outgoing="_3XbCXZVWEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3XbCV5VWEeKVk61ksFos3g" name="Value(&quot;Test String&quot;)">
              <result xmi:id="_3XbCWJVWEeKVk61ksFos3g" name="Value(&quot;Test String&quot;).result" outgoing="_3XbCXJVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3XbCWZVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3XbCWpVWEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_3XbCW5VWEeKVk61ksFos3g" value="Test String">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3XbCXJVWEeKVk61ksFos3g" source="_3XbCWJVWEeKVk61ksFos3g" target="_3XbCU5VWEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3XbCXZVWEeKVk61ksFos3g" source="_3XbCVpVWEeKVk61ksFos3g" target="_3XbCUpVWEeKVk61ksFos3g"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_3XbCXpVWEeKVk61ksFos3g" name="ExpressionStatement@33fea244" outgoing="_3XbCmZVWEeKVk61ksFos3g" incoming="_3XbCmJVWEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3XbCX5VWEeKVk61ksFos3g" name="Call(WriteLine)" incoming="_3XbCbZVWEeKVk61ksFos3g">
            <argument xmi:id="_3XbCYJVWEeKVk61ksFos3g" name="Call(WriteLine).argument(value)" incoming="_3XbCbJVWEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3XbCYZVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3XbCYpVWEeKVk61ksFos3g" value="1"/>
            </argument>
            <result xmi:id="_3XbCY5VWEeKVk61ksFos3g" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3XbCZJVWEeKVk61ksFos3g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3XbCZZVWEeKVk61ksFos3g" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3XbCZpVWEeKVk61ksFos3g" name="Tuple@1951603e" outgoing="_3XbCbZVWEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3XbCZ5VWEeKVk61ksFos3g" name="Value(&quot;&quot;)">
              <result xmi:id="_3XbCaJVWEeKVk61ksFos3g" name="Value(&quot;&quot;).result" outgoing="_3XbCbJVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3XbCaZVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3XbCapVWEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_3XbCa5VWEeKVk61ksFos3g" value="">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3XbCbJVWEeKVk61ksFos3g" source="_3XbCaJVWEeKVk61ksFos3g" target="_3XbCYJVWEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3XbCbZVWEeKVk61ksFos3g" source="_3XbCZpVWEeKVk61ksFos3g" target="_3XbCX5VWEeKVk61ksFos3g"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_3XbCbpVWEeKVk61ksFos3g" name="ExpressionStatement@22872494" outgoing="_3XbCmpVWEeKVk61ksFos3g" incoming="_3XbCmZVWEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3XbCb5VWEeKVk61ksFos3g" name="Call(Write)" incoming="_3XbCepVWEeKVk61ksFos3g" behavior="_vQuqqZTGEeK_pbvT8HBaCg">
            <argument xmi:id="_3XbCcJVWEeKVk61ksFos3g" name="Call(Write).argument(value)" incoming="_3XbCeZVWEeKVk61ksFos3g">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3XbCcZVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3XbCcpVWEeKVk61ksFos3g" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3XbCc5VWEeKVk61ksFos3g" name="Tuple@a3413e5" outgoing="_3XbCepVWEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3XbCdJVWEeKVk61ksFos3g" name="Value(&quot;Test Integer: &quot;)">
              <result xmi:id="_3XbCdZVWEeKVk61ksFos3g" name="Value(&quot;Test Integer: &quot;).result" outgoing="_3XbCeZVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3XbCdpVWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3XbCd5VWEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_3XbCeJVWEeKVk61ksFos3g" value="Test Integer: ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3XbCeZVWEeKVk61ksFos3g" source="_3XbCdZVWEeKVk61ksFos3g" target="_3XbCcJVWEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3XbCepVWEeKVk61ksFos3g" source="_3XbCc5VWEeKVk61ksFos3g" target="_3XbCb5VWEeKVk61ksFos3g"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_3XbCe5VWEeKVk61ksFos3g" name="ExpressionStatement@573a7d23" outgoing="_3XbCm5VWEeKVk61ksFos3g" incoming="_3XbCmpVWEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3XbCfJVWEeKVk61ksFos3g" name="Call(Write)" incoming="_3XbCh5VWEeKVk61ksFos3g" behavior="_vQuqqZTGEeK_pbvT8HBaCg">
            <argument xmi:id="_3XbCfZVWEeKVk61ksFos3g" name="Call(Write).argument(value)" incoming="_3XbChpVWEeKVk61ksFos3g">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3XbCfpVWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3XbCf5VWEeKVk61ksFos3g" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3XbCgJVWEeKVk61ksFos3g" name="Tuple@7f4c541" outgoing="_3XbCh5VWEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3XbCgZVWEeKVk61ksFos3g" name="Value(2)">
              <result xmi:id="_3XbCgpVWEeKVk61ksFos3g" name="Value(2).result" outgoing="_3XbChpVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3XbCg5VWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3XbChJVWEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_3XbChZVWEeKVk61ksFos3g" value="2">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3XbChpVWEeKVk61ksFos3g" source="_3XbCgpVWEeKVk61ksFos3g" target="_3XbCfZVWEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3XbCh5VWEeKVk61ksFos3g" source="_3XbCgJVWEeKVk61ksFos3g" target="_3XbCfJVWEeKVk61ksFos3g"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_3XbCiJVWEeKVk61ksFos3g" name="ExpressionStatement@64776d00" incoming="_3XbCm5VWEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_3XbCiZVWEeKVk61ksFos3g" name="Call(WriteLine)" incoming="_3XbCl5VWEeKVk61ksFos3g">
            <argument xmi:id="_3XbCipVWEeKVk61ksFos3g" name="Call(WriteLine).argument(value)" incoming="_3XbClpVWEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3XbCi5VWEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3XbCjJVWEeKVk61ksFos3g" value="1"/>
            </argument>
            <result xmi:id="_3XbCjZVWEeKVk61ksFos3g" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3XbCjpVWEeKVk61ksFos3g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3XbCj5VWEeKVk61ksFos3g" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_3XbCkJVWEeKVk61ksFos3g" name="Tuple@14282c06" outgoing="_3XbCl5VWEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_3XbCkZVWEeKVk61ksFos3g" name="Value(&quot;&quot;)">
              <result xmi:id="_3XbCkpVWEeKVk61ksFos3g" name="Value(&quot;&quot;).result" outgoing="_3XbClpVWEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3XbCk5VWEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3XbClJVWEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_3XbClZVWEeKVk61ksFos3g" value="">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_3XbClpVWEeKVk61ksFos3g" source="_3XbCkpVWEeKVk61ksFos3g" target="_3XbCipVWEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_3XbCl5VWEeKVk61ksFos3g" source="_3XbCkJVWEeKVk61ksFos3g" target="_3XbCiZVWEeKVk61ksFos3g"/>
        </node>
        <edge xmi:type="uml:ControlFlow" xmi:id="_3XbCmJVWEeKVk61ksFos3g" source="_3XbCUZVWEeKVk61ksFos3g" target="_3XbCXpVWEeKVk61ksFos3g"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_3XbCmZVWEeKVk61ksFos3g" source="_3XbCXpVWEeKVk61ksFos3g" target="_3XbCbpVWEeKVk61ksFos3g"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_3XbCmpVWEeKVk61ksFos3g" source="_3XbCbpVWEeKVk61ksFos3g" target="_3XbCe5VWEeKVk61ksFos3g"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_3XbCm5VWEeKVk61ksFos3g" source="_3XbCe5VWEeKVk61ksFos3g" target="_3XbCiJVWEeKVk61ksFos3g"/>
      </structuredNode>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_vQuqs5TGEeK_pbvT8HBaCg" name="TestAssertTrue" group="_uyC9YJVVEeKVk61ksFos3g" node="_uyC9YJVVEeKVk61ksFos3g">
      <ownedComment xmi:id="_vQuqtJTGEeK_pbvT8HBaCg">
        <body>/* Generated textual representation of Activity AssertionLibrary::Tests::TestAssertTrue */&#xD;
&#xD;
namespace AssertionLibrary::Tests ;&#xD;
&#xD;
activity TestAssertTrue() { &#xD;
	AssertTrue(&quot;1 == 1&quot;, 1 == 1) ;&#xD;
	AssertTrue(&quot;1 == 2&quot;, 1 == 2) ;&#xD;
}</body>
      </ownedComment>
      <ownedComment xmi:id="_uyDkcJVVEeKVk61ksFos3g">
        <body>/* Generated textual representation of Activity AssertionLibrary::Tests::TestAssertTrue */&#xD;
&#xD;
namespace model ;&#xD;
&#xD;
activity TestAssertTrue() { &#xD;
	AssertTrue(&quot;1 == 1&quot;, 1 == 1) ;&#xD;
	AssertTrue(&quot;1 == 2&quot;, 1 == 2) ;&#xD;
}</body>
      </ownedComment>
      <structuredNode xmi:id="_uyC9YJVVEeKVk61ksFos3g" name="Body(TestAssertTrue)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_uyC9YZVVEeKVk61ksFos3g" name="ExpressionStatement@6e15887c" outgoing="_uyC9r5VVEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_uyC9YpVVEeKVk61ksFos3g" name="Call(AssertTrue)" incoming="_uyC9h5VVEeKVk61ksFos3g" behavior="_vQuqiJTGEeK_pbvT8HBaCg">
            <argument xmi:id="_uyC9Y5VVEeKVk61ksFos3g" name="Call(AssertTrue).argument(label)" incoming="_uyC9hZVVEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9ZJVVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9ZZVVEeKVk61ksFos3g" value="1"/>
            </argument>
            <argument xmi:id="_uyC9ZpVVEeKVk61ksFos3g" name="Call(AssertTrue).argument(condition)" incoming="_uyC9hpVVEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9Z5VVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9aJVVEeKVk61ksFos3g" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_uyC9aZVVEeKVk61ksFos3g" name="Tuple@25649404" outgoing="_uyC9h5VVEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_uyC9apVVEeKVk61ksFos3g" name="Value(&quot;1 == 1&quot;)">
              <result xmi:id="_uyC9a5VVEeKVk61ksFos3g" name="Value(&quot;1 == 1&quot;).result" outgoing="_uyC9hZVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9bJVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9bZVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_uyC9bpVVEeKVk61ksFos3g" value="1 == 1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_uyC9b5VVEeKVk61ksFos3g" name="Value(1)">
              <result xmi:id="_uyC9cJVVEeKVk61ksFos3g" name="Value(1).result" outgoing="_uyC9g5VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9cZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9cpVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_uyC9c5VVEeKVk61ksFos3g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_uyC9dJVVEeKVk61ksFos3g" name="Value(1)">
              <result xmi:id="_uyC9dZVVEeKVk61ksFos3g" name="Value(1).result" outgoing="_uyC9hJVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9dpVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9d5VVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_uyC9eJVVEeKVk61ksFos3g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_uyC9eZVVEeKVk61ksFos3g" name="Test(==)">
              <first xmi:id="_uyC9epVVEeKVk61ksFos3g" name="Test(==).first" incoming="_uyC9g5VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9e5VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9fJVVEeKVk61ksFos3g" value="1"/>
              </first>
              <result xmi:id="_uyC9fZVVEeKVk61ksFos3g" name="Test(==).result" outgoing="_uyC9hpVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9fpVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9f5VVEeKVk61ksFos3g" value="1"/>
              </result>
              <second xmi:id="_uyC9gJVVEeKVk61ksFos3g" name="Test(==).second" incoming="_uyC9hJVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9gZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9gpVVEeKVk61ksFos3g" value="1"/>
              </second>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_uyC9g5VVEeKVk61ksFos3g" source="_uyC9cJVVEeKVk61ksFos3g" target="_uyC9epVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_uyC9hJVVEeKVk61ksFos3g" source="_uyC9dZVVEeKVk61ksFos3g" target="_uyC9gJVVEeKVk61ksFos3g"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_uyC9hZVVEeKVk61ksFos3g" source="_uyC9a5VVEeKVk61ksFos3g" target="_uyC9Y5VVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_uyC9hpVVEeKVk61ksFos3g" source="_uyC9fZVVEeKVk61ksFos3g" target="_uyC9ZpVVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_uyC9h5VVEeKVk61ksFos3g" source="_uyC9aZVVEeKVk61ksFos3g" target="_uyC9YpVVEeKVk61ksFos3g"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_uyC9iJVVEeKVk61ksFos3g" name="ExpressionStatement@4a723cb5" incoming="_uyC9r5VVEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_uyC9iZVVEeKVk61ksFos3g" name="Call(AssertTrue)" incoming="_uyC9rpVVEeKVk61ksFos3g" behavior="_vQuqiJTGEeK_pbvT8HBaCg">
            <argument xmi:id="_uyC9ipVVEeKVk61ksFos3g" name="Call(AssertTrue).argument(label)" incoming="_uyC9rJVVEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9i5VVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9jJVVEeKVk61ksFos3g" value="1"/>
            </argument>
            <argument xmi:id="_uyC9jZVVEeKVk61ksFos3g" name="Call(AssertTrue).argument(condition)" incoming="_uyC9rZVVEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9jpVVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9j5VVEeKVk61ksFos3g" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_uyC9kJVVEeKVk61ksFos3g" name="Tuple@1cf74b39" outgoing="_uyC9rpVVEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_uyC9kZVVEeKVk61ksFos3g" name="Value(&quot;1 == 2&quot;)">
              <result xmi:id="_uyC9kpVVEeKVk61ksFos3g" name="Value(&quot;1 == 2&quot;).result" outgoing="_uyC9rJVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9k5VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9lJVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_uyC9lZVVEeKVk61ksFos3g" value="1 == 2">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_uyC9lpVVEeKVk61ksFos3g" name="Value(1)">
              <result xmi:id="_uyC9l5VVEeKVk61ksFos3g" name="Value(1).result" outgoing="_uyC9qpVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9mJVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9mZVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_uyC9mpVVEeKVk61ksFos3g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_uyC9m5VVEeKVk61ksFos3g" name="Value(2)">
              <result xmi:id="_uyC9nJVVEeKVk61ksFos3g" name="Value(2).result" outgoing="_uyC9q5VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9nZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9npVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_uyC9n5VVEeKVk61ksFos3g" value="2">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_uyC9oJVVEeKVk61ksFos3g" name="Test(==)">
              <first xmi:id="_uyC9oZVVEeKVk61ksFos3g" name="Test(==).first" incoming="_uyC9qpVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9opVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9o5VVEeKVk61ksFos3g" value="1"/>
              </first>
              <result xmi:id="_uyC9pJVVEeKVk61ksFos3g" name="Test(==).result" outgoing="_uyC9rZVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9pZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9ppVVEeKVk61ksFos3g" value="1"/>
              </result>
              <second xmi:id="_uyC9p5VVEeKVk61ksFos3g" name="Test(==).second" incoming="_uyC9q5VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uyC9qJVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyC9qZVVEeKVk61ksFos3g" value="1"/>
              </second>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_uyC9qpVVEeKVk61ksFos3g" source="_uyC9l5VVEeKVk61ksFos3g" target="_uyC9oZVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_uyC9q5VVEeKVk61ksFos3g" source="_uyC9nJVVEeKVk61ksFos3g" target="_uyC9p5VVEeKVk61ksFos3g"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_uyC9rJVVEeKVk61ksFos3g" source="_uyC9kpVVEeKVk61ksFos3g" target="_uyC9ipVVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_uyC9rZVVEeKVk61ksFos3g" source="_uyC9pJVVEeKVk61ksFos3g" target="_uyC9jZVVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_uyC9rpVVEeKVk61ksFos3g" source="_uyC9kJVVEeKVk61ksFos3g" target="_uyC9iZVVEeKVk61ksFos3g"/>
        </node>
        <edge xmi:type="uml:ControlFlow" xmi:id="_uyC9r5VVEeKVk61ksFos3g" source="_uyC9YZVVEeKVk61ksFos3g" target="_uyC9iJVVEeKVk61ksFos3g"/>
      </structuredNode>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_vQuqtZTGEeK_pbvT8HBaCg" name="TestAssertFalse" group="_yl6QkJVVEeKVk61ksFos3g" node="_yl6QkJVVEeKVk61ksFos3g">
      <ownedComment xmi:id="_vQuqtpTGEeK_pbvT8HBaCg">
        <body>/* Generated textual representation of Activity AssertionLibrary::Tests::TestAssertFalse */&#xD;
&#xD;
namespace AssertionLibrary::Tests ;&#xD;
&#xD;
activity TestAssertFalse() { &#xD;
	AssertFalse(&quot;1 == 1&quot;, 1 == 1) ;&#xD;
	AssertFalse(&quot;1 == 2&quot;, 1 == 2) ;&#xD;
}</body>
      </ownedComment>
      <ownedComment xmi:id="_yl7esJVVEeKVk61ksFos3g">
        <body>/* Generated textual representation of Activity AssertionLibrary::Tests::TestAssertFalse */&#xD;
&#xD;
namespace model ;&#xD;
&#xD;
activity TestAssertFalse() { &#xD;
	AssertFalse(&quot;1 == 1&quot;, 1 == 1) ;&#xD;
	AssertFalse(&quot;1 == 2&quot;, 1 == 2) ;&#xD;
}</body>
      </ownedComment>
      <structuredNode xmi:id="_yl6QkJVVEeKVk61ksFos3g" name="Body(TestAssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_yl6QkZVVEeKVk61ksFos3g" name="ExpressionStatement@43b84aa5" outgoing="_yl6Q35VVEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_yl6QkpVVEeKVk61ksFos3g" name="Call(AssertFalse)" incoming="_yl6Qt5VVEeKVk61ksFos3g" behavior="_vQuqlJTGEeK_pbvT8HBaCg">
            <argument xmi:id="_yl6Qk5VVEeKVk61ksFos3g" name="Call(AssertFalse).argument(label)" incoming="_yl6QtZVVEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6QlJVVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6QlZVVEeKVk61ksFos3g" value="1"/>
            </argument>
            <argument xmi:id="_yl6QlpVVEeKVk61ksFos3g" name="Call(AssertFalse).argument(condition)" incoming="_yl6QtpVVEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6Ql5VVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6QmJVVEeKVk61ksFos3g" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_yl6QmZVVEeKVk61ksFos3g" name="Tuple@1e5f4617" outgoing="_yl6Qt5VVEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_yl6QmpVVEeKVk61ksFos3g" name="Value(&quot;1 == 1&quot;)">
              <result xmi:id="_yl6Qm5VVEeKVk61ksFos3g" name="Value(&quot;1 == 1&quot;).result" outgoing="_yl6QtZVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6QnJVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6QnZVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_yl6QnpVVEeKVk61ksFos3g" value="1 == 1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_yl6Qn5VVEeKVk61ksFos3g" name="Value(1)">
              <result xmi:id="_yl6QoJVVEeKVk61ksFos3g" name="Value(1).result" outgoing="_yl6Qs5VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6QoZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6QopVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_yl6Qo5VVEeKVk61ksFos3g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_yl6QpJVVEeKVk61ksFos3g" name="Value(1)">
              <result xmi:id="_yl6QpZVVEeKVk61ksFos3g" name="Value(1).result" outgoing="_yl6QtJVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6QppVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6Qp5VVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_yl6QqJVVEeKVk61ksFos3g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_yl6QqZVVEeKVk61ksFos3g" name="Test(==)">
              <first xmi:id="_yl6QqpVVEeKVk61ksFos3g" name="Test(==).first" incoming="_yl6Qs5VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6Qq5VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6QrJVVEeKVk61ksFos3g" value="1"/>
              </first>
              <result xmi:id="_yl6QrZVVEeKVk61ksFos3g" name="Test(==).result" outgoing="_yl6QtpVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6QrpVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6Qr5VVEeKVk61ksFos3g" value="1"/>
              </result>
              <second xmi:id="_yl6QsJVVEeKVk61ksFos3g" name="Test(==).second" incoming="_yl6QtJVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6QsZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6QspVVEeKVk61ksFos3g" value="1"/>
              </second>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_yl6Qs5VVEeKVk61ksFos3g" source="_yl6QoJVVEeKVk61ksFos3g" target="_yl6QqpVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_yl6QtJVVEeKVk61ksFos3g" source="_yl6QpZVVEeKVk61ksFos3g" target="_yl6QsJVVEeKVk61ksFos3g"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yl6QtZVVEeKVk61ksFos3g" source="_yl6Qm5VVEeKVk61ksFos3g" target="_yl6Qk5VVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yl6QtpVVEeKVk61ksFos3g" source="_yl6QrZVVEeKVk61ksFos3g" target="_yl6QlpVVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_yl6Qt5VVEeKVk61ksFos3g" source="_yl6QmZVVEeKVk61ksFos3g" target="_yl6QkpVVEeKVk61ksFos3g"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_yl6QuJVVEeKVk61ksFos3g" name="ExpressionStatement@5afa4463" incoming="_yl6Q35VVEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_yl6QuZVVEeKVk61ksFos3g" name="Call(AssertFalse)" incoming="_yl6Q3pVVEeKVk61ksFos3g" behavior="_vQuqlJTGEeK_pbvT8HBaCg">
            <argument xmi:id="_yl6QupVVEeKVk61ksFos3g" name="Call(AssertFalse).argument(label)" incoming="_yl6Q3JVVEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6Qu5VVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6QvJVVEeKVk61ksFos3g" value="1"/>
            </argument>
            <argument xmi:id="_yl6QvZVVEeKVk61ksFos3g" name="Call(AssertFalse).argument(condition)" incoming="_yl6Q3ZVVEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6QvpVVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6Qv5VVEeKVk61ksFos3g" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_yl6QwJVVEeKVk61ksFos3g" name="Tuple@56756839" outgoing="_yl6Q3pVVEeKVk61ksFos3g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_yl6QwZVVEeKVk61ksFos3g" name="Value(&quot;1 == 2&quot;)">
              <result xmi:id="_yl6QwpVVEeKVk61ksFos3g" name="Value(&quot;1 == 2&quot;).result" outgoing="_yl6Q3JVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6Qw5VVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6QxJVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_yl6QxZVVEeKVk61ksFos3g" value="1 == 2">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_yl6QxpVVEeKVk61ksFos3g" name="Value(1)">
              <result xmi:id="_yl6Qx5VVEeKVk61ksFos3g" name="Value(1).result" outgoing="_yl6Q2pVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6QyJVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6QyZVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_yl6QypVVEeKVk61ksFos3g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_yl6Qy5VVEeKVk61ksFos3g" name="Value(2)">
              <result xmi:id="_yl6QzJVVEeKVk61ksFos3g" name="Value(2).result" outgoing="_yl6Q25VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6QzZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6QzpVVEeKVk61ksFos3g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_yl6Qz5VVEeKVk61ksFos3g" value="2">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_yl6Q0JVVEeKVk61ksFos3g" name="Test(==)">
              <first xmi:id="_yl6Q0ZVVEeKVk61ksFos3g" name="Test(==).first" incoming="_yl6Q2pVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6Q0pVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6Q05VVEeKVk61ksFos3g" value="1"/>
              </first>
              <result xmi:id="_yl6Q1JVVEeKVk61ksFos3g" name="Test(==).result" outgoing="_yl6Q3ZVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6Q1ZVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6Q1pVVEeKVk61ksFos3g" value="1"/>
              </result>
              <second xmi:id="_yl6Q15VVEeKVk61ksFos3g" name="Test(==).second" incoming="_yl6Q25VVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yl6Q2JVVEeKVk61ksFos3g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yl6Q2ZVVEeKVk61ksFos3g" value="1"/>
              </second>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_yl6Q2pVVEeKVk61ksFos3g" source="_yl6Qx5VVEeKVk61ksFos3g" target="_yl6Q0ZVVEeKVk61ksFos3g"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_yl6Q25VVEeKVk61ksFos3g" source="_yl6QzJVVEeKVk61ksFos3g" target="_yl6Q15VVEeKVk61ksFos3g"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yl6Q3JVVEeKVk61ksFos3g" source="_yl6QwpVVEeKVk61ksFos3g" target="_yl6QupVVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yl6Q3ZVVEeKVk61ksFos3g" source="_yl6Q1JVVEeKVk61ksFos3g" target="_yl6QvZVVEeKVk61ksFos3g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_yl6Q3pVVEeKVk61ksFos3g" source="_yl6QwJVVEeKVk61ksFos3g" target="_yl6QuZVVEeKVk61ksFos3g"/>
        </node>
        <edge xmi:type="uml:ControlFlow" xmi:id="_yl6Q35VVEeKVk61ksFos3g" source="_yl6QkZVVEeKVk61ksFos3g" target="_yl6QuJVVEeKVk61ksFos3g"/>
      </structuredNode>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_vQuqt5TGEeK_pbvT8HBaCg" name="TestAssertEquals" group="_rEiJAJWFEeKFE_JlJl430g" node="_rEiJAJWFEeKFE_JlJl430g">
      <ownedComment xmi:id="_vQuquJTGEeK_pbvT8HBaCg">
        <body>/* Generated textual representation of Activity AssertionLibrary::Tests::TestAssertEquals */&#xD;
&#xD;
namespace AssertionLibrary::Tests ;&#xD;
&#xD;
activity TestAssertEquals() { &#xD;
	AssertEquals(&quot;1 equals 1&quot;, 1, 1) ;&#xD;
	AssertEquals(&quot;1 equals 2&quot;, 1, 2) ;&#xD;
}</body>
      </ownedComment>
      <ownedComment xmi:id="_5QkxwJVVEeKVk61ksFos3g">
        <body>/* Generated textual representation of Activity AssertionLibrary::Tests::TestAssertEquals */&#xD;
&#xD;
namespace model ;&#xD;
&#xD;
activity TestAssertEquals() { &#xD;
	AssertEquals(&quot;1&quot;, 1, 1) ;&#xD;
	AssertEquals(&quot;1&quot;, 1, 2) ;&#xD;
}</body>
      </ownedComment>
      <structuredNode xmi:id="_rEiJAJWFEeKFE_JlJl430g" name="Body(TestAssertEquals)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_rEiJAZWFEeKFE_JlJl430g" name="ExpressionStatement@56db70da" outgoing="_rEiJP5WFEeKFE_JlJl430g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_rEiJApWFEeKFE_JlJl430g" name="Call(AssertEquals)" incoming="_rEiJH5WFEeKFE_JlJl430g" behavior="_vQuqdJTGEeK_pbvT8HBaCg">
            <argument xmi:id="_rEiJA5WFEeKFE_JlJl430g" name="Call(AssertEquals).argument(label)" incoming="_rEiJHJWFEeKFE_JlJl430g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rEiJBJWFEeKFE_JlJl430g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rEiJBZWFEeKFE_JlJl430g" value="1"/>
            </argument>
            <argument xmi:id="_rEiJBpWFEeKFE_JlJl430g" name="Call(AssertEquals).argument(value1)" incoming="_rEiJHZWFEeKFE_JlJl430g">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rEiJB5WFEeKFE_JlJl430g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rEiJCJWFEeKFE_JlJl430g" value="1"/>
            </argument>
            <argument xmi:id="_rEiJCZWFEeKFE_JlJl430g" name="Call(AssertEquals).argument(value2)" incoming="_rEiJHpWFEeKFE_JlJl430g">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rEiJCpWFEeKFE_JlJl430g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rEiJC5WFEeKFE_JlJl430g" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rEiJDJWFEeKFE_JlJl430g" name="Tuple@37bdce24" outgoing="_rEiJH5WFEeKFE_JlJl430g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rEiJDZWFEeKFE_JlJl430g" name="Value(&quot;1&quot;)">
              <result xmi:id="_rEiJDpWFEeKFE_JlJl430g" name="Value(&quot;1&quot;).result" outgoing="_rEiJHJWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rEiJD5WFEeKFE_JlJl430g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rEiJEJWFEeKFE_JlJl430g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_rEiJEZWFEeKFE_JlJl430g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rEiJEpWFEeKFE_JlJl430g" name="Value(1)">
              <result xmi:id="_rEiJE5WFEeKFE_JlJl430g" name="Value(1).result" outgoing="_rEiJHZWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rEiJFJWFEeKFE_JlJl430g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rEiJFZWFEeKFE_JlJl430g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_rEiJFpWFEeKFE_JlJl430g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rEiJF5WFEeKFE_JlJl430g" name="Value(1)">
              <result xmi:id="_rEiJGJWFEeKFE_JlJl430g" name="Value(1).result" outgoing="_rEiJHpWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rEiJGZWFEeKFE_JlJl430g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rEiJGpWFEeKFE_JlJl430g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_rEiJG5WFEeKFE_JlJl430g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rEiJHJWFEeKFE_JlJl430g" source="_rEiJDpWFEeKFE_JlJl430g" target="_rEiJA5WFEeKFE_JlJl430g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rEiJHZWFEeKFE_JlJl430g" source="_rEiJE5WFEeKFE_JlJl430g" target="_rEiJBpWFEeKFE_JlJl430g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rEiJHpWFEeKFE_JlJl430g" source="_rEiJGJWFEeKFE_JlJl430g" target="_rEiJCZWFEeKFE_JlJl430g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rEiJH5WFEeKFE_JlJl430g" source="_rEiJDJWFEeKFE_JlJl430g" target="_rEiJApWFEeKFE_JlJl430g"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_rEiJIJWFEeKFE_JlJl430g" name="ExpressionStatement@3cb9da64" incoming="_rEiJP5WFEeKFE_JlJl430g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_rEiJIZWFEeKFE_JlJl430g" name="Call(AssertEquals)" incoming="_rEiJPpWFEeKFE_JlJl430g" behavior="_vQuqdJTGEeK_pbvT8HBaCg">
            <argument xmi:id="_rEiJIpWFEeKFE_JlJl430g" name="Call(AssertEquals).argument(label)" incoming="_rEiJO5WFEeKFE_JlJl430g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rEiJI5WFEeKFE_JlJl430g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rEiJJJWFEeKFE_JlJl430g" value="1"/>
            </argument>
            <argument xmi:id="_rEiJJZWFEeKFE_JlJl430g" name="Call(AssertEquals).argument(value1)" incoming="_rEiJPJWFEeKFE_JlJl430g">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rEiJJpWFEeKFE_JlJl430g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rEiJJ5WFEeKFE_JlJl430g" value="1"/>
            </argument>
            <argument xmi:id="_rEiJKJWFEeKFE_JlJl430g" name="Call(AssertEquals).argument(value2)" incoming="_rEiJPZWFEeKFE_JlJl430g">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rEiJKZWFEeKFE_JlJl430g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rEiJKpWFEeKFE_JlJl430g" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_rEiJK5WFEeKFE_JlJl430g" name="Tuple@4715fdca" outgoing="_rEiJPpWFEeKFE_JlJl430g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rEiJLJWFEeKFE_JlJl430g" name="Value(&quot;1&quot;)">
              <result xmi:id="_rEiJLZWFEeKFE_JlJl430g" name="Value(&quot;1&quot;).result" outgoing="_rEiJO5WFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rEiJLpWFEeKFE_JlJl430g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rEiJL5WFEeKFE_JlJl430g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_rEiJMJWFEeKFE_JlJl430g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rEiJMZWFEeKFE_JlJl430g" name="Value(1)">
              <result xmi:id="_rEiJMpWFEeKFE_JlJl430g" name="Value(1).result" outgoing="_rEiJPJWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rEiJM5WFEeKFE_JlJl430g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rEiJNJWFEeKFE_JlJl430g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_rEiJNZWFEeKFE_JlJl430g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_rEiJNpWFEeKFE_JlJl430g" name="Value(2)">
              <result xmi:id="_rEiJN5WFEeKFE_JlJl430g" name="Value(2).result" outgoing="_rEiJPZWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rEiJOJWFEeKFE_JlJl430g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rEiJOZWFEeKFE_JlJl430g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_rEiJOpWFEeKFE_JlJl430g" value="2">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rEiJO5WFEeKFE_JlJl430g" source="_rEiJLZWFEeKFE_JlJl430g" target="_rEiJIpWFEeKFE_JlJl430g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rEiJPJWFEeKFE_JlJl430g" source="_rEiJMpWFEeKFE_JlJl430g" target="_rEiJJZWFEeKFE_JlJl430g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_rEiJPZWFEeKFE_JlJl430g" source="_rEiJN5WFEeKFE_JlJl430g" target="_rEiJKJWFEeKFE_JlJl430g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_rEiJPpWFEeKFE_JlJl430g" source="_rEiJK5WFEeKFE_JlJl430g" target="_rEiJIZWFEeKFE_JlJl430g"/>
        </node>
        <edge xmi:type="uml:ControlFlow" xmi:id="_rEiJP5WFEeKFE_JlJl430g" source="_rEiJAZWFEeKFE_JlJl430g" target="_rEiJIJWFEeKFE_JlJl430g"/>
      </structuredNode>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_HqVsoJVWEeKVk61ksFos3g" name="TestAssertList" group="_xt1YQJWFEeKFE_JlJl430g" node="_xt1YQJWFEeKFE_JlJl430g">
      <ownedComment xmi:id="_WUel0JVWEeKVk61ksFos3g">
        <body>/* Generated textual representation of Activity model::TestAssertList */

namespace model ;

activity TestAssertList() { 
	
	AssertList(&quot;Success&quot;, Integer[]{1,2}, Integer[]{1,2});
	AssertList(&quot;Fail&quot;, 1, null);

}</body>
      </ownedComment>
      <structuredNode xmi:id="_xt1YQJWFEeKFE_JlJl430g" name="Body(TestAssertList)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_xt1YQZWFEeKFE_JlJl430g" name="ExpressionStatement@21c35d72" outgoing="_xt1Ym5WFEeKFE_JlJl430g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_xt1YQpWFEeKFE_JlJl430g" name="Call(AssertList)" incoming="_xt1Ye5WFEeKFE_JlJl430g" behavior="_vQuqoJTGEeK_pbvT8HBaCg">
            <argument xmi:id="_xt1YQ5WFEeKFE_JlJl430g" name="Call(AssertList).argument(label)" incoming="_xt1YeJWFEeKFE_JlJl430g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1YRJWFEeKFE_JlJl430g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YRZWFEeKFE_JlJl430g" value="1"/>
            </argument>
            <argument xmi:id="_xt1YRpWFEeKFE_JlJl430g" name="Call(AssertList).argument(list)" incoming="_xt1YeZWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1YR5WFEeKFE_JlJl430g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YSJWFEeKFE_JlJl430g" value="*"/>
            </argument>
            <argument xmi:id="_xt1YSZWFEeKFE_JlJl430g" name="Call(AssertList).argument(expected)" incoming="_xt1YepWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1YSpWFEeKFE_JlJl430g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YS5WFEeKFE_JlJl430g" value="*"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_xt1YTJWFEeKFE_JlJl430g" name="Tuple@51017428" outgoing="_xt1Ye5WFEeKFE_JlJl430g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_xt1YTZWFEeKFE_JlJl430g" name="Value(&quot;Success&quot;)">
              <result xmi:id="_xt1YTpWFEeKFE_JlJl430g" name="Value(&quot;Success&quot;).result" outgoing="_xt1YeJWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1YT5WFEeKFE_JlJl430g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YUJWFEeKFE_JlJl430g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_xt1YUZWFEeKFE_JlJl430g" value="Success">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_xt1YUpWFEeKFE_JlJl430g" name="SequenceConstructionExpression@5265fd6f">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_xt1YU5WFEeKFE_JlJl430g" name="SequenceExpressionList@57a11fbf#1" outgoing="_xt1YYpWFEeKFE_JlJl430g">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_xt1YVJWFEeKFE_JlJl430g" name="Value(1)">
                  <result xmi:id="_xt1YVZWFEeKFE_JlJl430g" name="Value(1).result" outgoing="_xt1YY5WFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1YVpWFEeKFE_JlJl430g" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YV5WFEeKFE_JlJl430g" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_xt1YWJWFEeKFE_JlJl430g" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_xt1YWZWFEeKFE_JlJl430g" name="SequenceExpressionList@57a11fbf#2" incoming="_xt1YYpWFEeKFE_JlJl430g">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_xt1YWpWFEeKFE_JlJl430g" name="Value(2)">
                  <result xmi:id="_xt1YW5WFEeKFE_JlJl430g" name="Value(2).result" outgoing="_xt1YZJWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1YXJWFEeKFE_JlJl430g" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YXZWFEeKFE_JlJl430g" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_xt1YXpWFEeKFE_JlJl430g" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <structuredNodeOutput xmi:id="_xt1YX5WFEeKFE_JlJl430g" name="SequenceConstructionExpression@5265fd6f.output" outgoing="_xt1YeZWFEeKFE_JlJl430g" incoming="_xt1YY5WFEeKFE_JlJl430g _xt1YZJWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1YYJWFEeKFE_JlJl430g" value="2"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YYZWFEeKFE_JlJl430g" value="2"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ControlFlow" xmi:id="_xt1YYpWFEeKFE_JlJl430g" source="_xt1YU5WFEeKFE_JlJl430g" target="_xt1YWZWFEeKFE_JlJl430g"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_xt1YY5WFEeKFE_JlJl430g" source="_xt1YVZWFEeKFE_JlJl430g" target="_xt1YX5WFEeKFE_JlJl430g"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_xt1YZJWFEeKFE_JlJl430g" source="_xt1YW5WFEeKFE_JlJl430g" target="_xt1YX5WFEeKFE_JlJl430g"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_xt1YZZWFEeKFE_JlJl430g" name="SequenceConstructionExpression@25e1acac">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_xt1YZpWFEeKFE_JlJl430g" name="SequenceExpressionList@4c4ea5c8#1" outgoing="_xt1YdZWFEeKFE_JlJl430g">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_xt1YZ5WFEeKFE_JlJl430g" name="Value(1)">
                  <result xmi:id="_xt1YaJWFEeKFE_JlJl430g" name="Value(1).result" outgoing="_xt1YdpWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1YaZWFEeKFE_JlJl430g" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YapWFEeKFE_JlJl430g" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_xt1Ya5WFEeKFE_JlJl430g" value="1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_xt1YbJWFEeKFE_JlJl430g" name="SequenceExpressionList@4c4ea5c8#2" incoming="_xt1YdZWFEeKFE_JlJl430g">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_xt1YbZWFEeKFE_JlJl430g" name="Value(2)">
                  <result xmi:id="_xt1YbpWFEeKFE_JlJl430g" name="Value(2).result" outgoing="_xt1Yd5WFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1Yb5WFEeKFE_JlJl430g" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YcJWFEeKFE_JlJl430g" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_xt1YcZWFEeKFE_JlJl430g" value="2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
              <structuredNodeOutput xmi:id="_xt1YcpWFEeKFE_JlJl430g" name="SequenceConstructionExpression@25e1acac.output" outgoing="_xt1YepWFEeKFE_JlJl430g" incoming="_xt1YdpWFEeKFE_JlJl430g _xt1Yd5WFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1Yc5WFEeKFE_JlJl430g" value="2"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YdJWFEeKFE_JlJl430g" value="2"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ControlFlow" xmi:id="_xt1YdZWFEeKFE_JlJl430g" source="_xt1YZpWFEeKFE_JlJl430g" target="_xt1YbJWFEeKFE_JlJl430g"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_xt1YdpWFEeKFE_JlJl430g" source="_xt1YaJWFEeKFE_JlJl430g" target="_xt1YcpWFEeKFE_JlJl430g"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_xt1Yd5WFEeKFE_JlJl430g" source="_xt1YbpWFEeKFE_JlJl430g" target="_xt1YcpWFEeKFE_JlJl430g"/>
            </node>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_xt1YeJWFEeKFE_JlJl430g" source="_xt1YTpWFEeKFE_JlJl430g" target="_xt1YQ5WFEeKFE_JlJl430g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_xt1YeZWFEeKFE_JlJl430g" source="_xt1YX5WFEeKFE_JlJl430g" target="_xt1YRpWFEeKFE_JlJl430g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_xt1YepWFEeKFE_JlJl430g" source="_xt1YcpWFEeKFE_JlJl430g" target="_xt1YSZWFEeKFE_JlJl430g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_xt1Ye5WFEeKFE_JlJl430g" source="_xt1YTJWFEeKFE_JlJl430g" target="_xt1YQpWFEeKFE_JlJl430g"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_xt1YfJWFEeKFE_JlJl430g" name="ExpressionStatement@7b4c94a7" incoming="_xt1Ym5WFEeKFE_JlJl430g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_xt1YfZWFEeKFE_JlJl430g" name="Call(AssertList)" incoming="_xt1YmpWFEeKFE_JlJl430g" behavior="_vQuqoJTGEeK_pbvT8HBaCg">
            <argument xmi:id="_xt1YfpWFEeKFE_JlJl430g" name="Call(AssertList).argument(label)" incoming="_xt1Yl5WFEeKFE_JlJl430g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1Yf5WFEeKFE_JlJl430g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YgJWFEeKFE_JlJl430g" value="1"/>
            </argument>
            <argument xmi:id="_xt1YgZWFEeKFE_JlJl430g" name="Call(AssertList).argument(list)" incoming="_xt1YmJWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1YgpWFEeKFE_JlJl430g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1Yg5WFEeKFE_JlJl430g" value="*"/>
            </argument>
            <argument xmi:id="_xt1YhJWFEeKFE_JlJl430g" name="Call(AssertList).argument(expected)" incoming="_xt1YmZWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1YhZWFEeKFE_JlJl430g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YhpWFEeKFE_JlJl430g" value="*"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_xt1Yh5WFEeKFE_JlJl430g" name="Tuple@966abd" outgoing="_xt1YmpWFEeKFE_JlJl430g">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_xt1YiJWFEeKFE_JlJl430g" name="Value(&quot;Fail&quot;)">
              <result xmi:id="_xt1YiZWFEeKFE_JlJl430g" name="Value(&quot;Fail&quot;).result" outgoing="_xt1Yl5WFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1YipWFEeKFE_JlJl430g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1Yi5WFEeKFE_JlJl430g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_xt1YjJWFEeKFE_JlJl430g" value="Fail">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_xt1YjZWFEeKFE_JlJl430g" name="Value(1)">
              <result xmi:id="_xt1YjpWFEeKFE_JlJl430g" name="Value(1).result" outgoing="_xt1YmJWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1Yj5WFEeKFE_JlJl430g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YkJWFEeKFE_JlJl430g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_xt1YkZWFEeKFE_JlJl430g" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_xt1YkpWFEeKFE_JlJl430g" name="Value(null)">
              <result xmi:id="_xt1Yk5WFEeKFE_JlJl430g" name="Value(null).result" outgoing="_xt1YmZWFEeKFE_JlJl430g" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xt1YlJWFEeKFE_JlJl430g" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xt1YlZWFEeKFE_JlJl430g" value="1"/>
              </result>
              <value xmi:type="uml:LiteralNull" xmi:id="_xt1YlpWFEeKFE_JlJl430g"/>
            </node>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_xt1Yl5WFEeKFE_JlJl430g" source="_xt1YiZWFEeKFE_JlJl430g" target="_xt1YfpWFEeKFE_JlJl430g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_xt1YmJWFEeKFE_JlJl430g" source="_xt1YjpWFEeKFE_JlJl430g" target="_xt1YgZWFEeKFE_JlJl430g"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_xt1YmZWFEeKFE_JlJl430g" source="_xt1Yk5WFEeKFE_JlJl430g" target="_xt1YhJWFEeKFE_JlJl430g"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_xt1YmpWFEeKFE_JlJl430g" source="_xt1Yh5WFEeKFE_JlJl430g" target="_xt1YfZWFEeKFE_JlJl430g"/>
        </node>
        <edge xmi:type="uml:ControlFlow" xmi:id="_xt1Ym5WFEeKFE_JlJl430g" source="_xt1YQZWFEeKFE_JlJl430g" target="_xt1YfJWFEeKFE_JlJl430g"/>
      </structuredNode>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_mLWNUJVVEeKVk61ksFos3g" clientDependency="_mLYCg5VVEeKVk61ksFos3g" name="$$Alf$Library$CollectionFunctions$size__any__" group="_mLWNYpVVEeKVk61ksFos3g" node="_mLWNXpVVEeKVk61ksFos3g _mLWNX5VVEeKVk61ksFos3g _mLWNYJVVEeKVk61ksFos3g _mLWNYZVVEeKVk61ksFos3g _mLWNYpVVEeKVk61ksFos3g">
      <ownedParameter xmi:id="_mLWNVJVVEeKVk61ksFos3g" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_mLWNVZVVEeKVk61ksFos3g"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mLWNVpVVEeKVk61ksFos3g" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_mLWNV5VVEeKVk61ksFos3g" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_mLWNWJVVEeKVk61ksFos3g" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mLWNWZVVEeKVk61ksFos3g" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_mLWNWpVVEeKVk61ksFos3g" source="_mLWNXpVVEeKVk61ksFos3g" target="_mLWNX5VVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_mLWNW5VVEeKVk61ksFos3g" source="_mLWNY5VVEeKVk61ksFos3g" target="_mLWNYZVVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_mLWNXJVVEeKVk61ksFos3g" source="_mLWNX5VVEeKVk61ksFos3g" target="_mLWNZZVVEeKVk61ksFos3g"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_mLWNXZVVEeKVk61ksFos3g" source="_mLWNa5VVEeKVk61ksFos3g" target="_mLWNYJVVEeKVk61ksFos3g"/>
      <structuredNode xmi:id="_mLWNYpVVEeKVk61ksFos3g" name="Body(size)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_mLWNY5VVEeKVk61ksFos3g" name="ReturnStatement@22536490" outgoing="_mLWNW5VVEeKVk61ksFos3g">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_mLWNZJVVEeKVk61ksFos3g" name="Call(Size)">
            <argument xmi:id="_mLWNZZVVEeKVk61ksFos3g" name="Call(Size).argument(seq)" incoming="_mLWNXJVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_mLWNZpVVEeKVk61ksFos3g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mLWNZ5VVEeKVk61ksFos3g" value="*"/>
            </argument>
            <result xmi:id="_mLWNaJVVEeKVk61ksFos3g" name="Call(Size).result()" outgoing="_mLWNbpVVEeKVk61ksFos3g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_mLWNaZVVEeKVk61ksFos3g" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mLWNapVVEeKVk61ksFos3g" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
          </node>
          <structuredNodeOutput xmi:id="_mLWNa5VVEeKVk61ksFos3g" name="ReturnStatement@22536490.output" outgoing="_mLWNXZVVEeKVk61ksFos3g" incoming="_mLWNbpVVEeKVk61ksFos3g" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_mLWNbJVVEeKVk61ksFos3g" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mLWNbZVVEeKVk61ksFos3g" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_mLWNbpVVEeKVk61ksFos3g" source="_mLWNaJVVEeKVk61ksFos3g" target="_mLWNa5VVEeKVk61ksFos3g"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_mLWNXpVVEeKVk61ksFos3g" name="Input(seq)" outgoing="_mLWNWpVVEeKVk61ksFos3g" parameter="_mLWNVJVVEeKVk61ksFos3g"/>
      <node xmi:type="uml:ForkNode" xmi:id="_mLWNX5VVEeKVk61ksFos3g" name="Fork(seq)" outgoing="_mLWNXJVVEeKVk61ksFos3g" incoming="_mLWNWpVVEeKVk61ksFos3g"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_mLWNYJVVEeKVk61ksFos3g" name="Return" incoming="_mLWNXZVVEeKVk61ksFos3g" parameter="_mLWNV5VVEeKVk61ksFos3g"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_mLWNYZVVEeKVk61ksFos3g" name="Final" incoming="_mLWNW5VVEeKVk61ksFos3g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_mLYCgJVVEeKVk61ksFos3g">
      <templateBinding xmi:id="_mLYCgZVVEeKVk61ksFos3g">
        <parameterSubstitution xmi:id="_mLYCgpVVEeKVk61ksFos3g">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#_JmqbdYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#_JmqbdIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_mLYCg5VVEeKVk61ksFos3g" client="_mLWNUJVVEeKVk61ksFos3g" supplier="_mLYCgJVVEeKVk61ksFos3g"/>
    <profileApplication xmi:id="_6tZKgJVUEeKVk61ksFos3g">
      <eAnnotations xmi:id="_6thGUJVUEeKVk61ksFos3g" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="platform:/plugin/org.eclipse.papyrus.alf/resources/ActionLanguage-Profile.profile.uml#_sYse0YZLEeKyw49uR6nx3g"/>
      </eAnnotations>
      <appliedProfile href="platform:/plugin/org.eclipse.papyrus.alf/resources/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
    </profileApplication>
  </uml:Model>
  <ActionLanguage:TextualRepresentation xmi:id="_itQqkJUNEeK8_e3021UuYw" base_Comment="_iqmYIJUNEeK8_e3021UuYw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_mVEewJUNEeK8_e3021UuYw" base_Comment="_mVD3sJUNEeK8_e3021UuYw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_Gyw5IZUOEeK8_e3021UuYw" base_Comment="_Gyw5IJUOEeK8_e3021UuYw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_xydzsJVQEeKRIaqZz2tVRA" base_Comment="_xyEyIJVQEeKRIaqZz2tVRA"/>
  <ActionLanguage:TextualRepresentation xmi:id="_0yAuAJVQEeKRIaqZz2tVRA" base_Comment="_0yAG8JVQEeKRIaqZz2tVRA"/>
  <ActionLanguage:TextualRepresentation xmi:id="_y-pLkZVTEeKZjeKf5i2XcA" base_Comment="_y-pLkJVTEeKZjeKf5i2XcA"/>
  <ActionLanguage:TextualRepresentation xmi:id="_uyELgJVVEeKVk61ksFos3g" base_Comment="_uyDkcJVVEeKVk61ksFos3g"/>
  <ActionLanguage:TextualRepresentation xmi:id="_yl7esZVVEeKVk61ksFos3g" base_Comment="_yl7esJVVEeKVk61ksFos3g"/>
  <ActionLanguage:TextualRepresentation xmi:id="_5QkxwZVVEeKVk61ksFos3g" base_Comment="_5QkxwJVVEeKVk61ksFos3g"/>
  <ActionLanguage:TextualRepresentation xmi:id="_WUel0ZVWEeKVk61ksFos3g" base_Comment="_WUel0JVWEeKVk61ksFos3g"/>
</xmi:XMI>

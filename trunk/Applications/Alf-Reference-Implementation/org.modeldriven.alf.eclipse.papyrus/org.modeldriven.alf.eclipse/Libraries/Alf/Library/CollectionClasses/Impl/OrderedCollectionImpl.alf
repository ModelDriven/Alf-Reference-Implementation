namespace Alf::Library::CollectionClasses::Impl;
private import Alf::Library::PrimitiveBehaviors::SequenceFunctions::*;
/**
The base concrete implementation for ordered collections.
*/
abstract class OrderedCollectionImpl specializes CollectionImpl {

  @Create protected OrderedCollectionImpl(in seq: any[0..*] sequence) {
    super(seq);
  }

  protected addAllAtImpl (in index: Integer, in seq: any[0..*] sequence): Boolean {
    preSize = this.sizeImpl();
    this.setContent(this.getContent()->IncludeAllAt(index, seq));
    return this.sizeImpl() > preSize;
  }
  
  protected addAtImpl (in index: Integer, in element: any): Boolean {
    return this.addAllAtImpl(index, element);
  }
  
  protected atImpl (in index: Integer): any[0..1] {
    return this.getContent()->At(index);
  }
  
  protected firstImpl (): any[0..1] {
    return this.atImpl(1);
  }
  
  protected indexOfImpl (in element: any) : Integer[0..1] {
    return this.getContent()->IndexOf(element);
  }
  
  protected lastImpl (): any[0..1] {
    return this.atImpl(this.sizeImpl());
  }
  
  protected removeAtImpl (in index: Integer): any[0..1] {
    result = this.atImpl(index);
    this.setContent(this.getContent()->ExcludeAt(index));
    return result;
  }
  
  protected replaceAtImpl (in index: Integer, in element: any): any[0..1] {
    result = this.atImpl(index);
    this.setContent(this.getContent()->ReplacingAt(index, element));
    return result;
  }
}

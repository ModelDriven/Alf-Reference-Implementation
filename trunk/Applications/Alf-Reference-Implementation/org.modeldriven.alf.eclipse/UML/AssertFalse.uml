<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_yjzL8DfSEeW5Lf3fIdTjDQ" name="Model" visibility="package">
  <packagedElement xmi:type="uml:Activity" xmi:id="_yjzL8TfSEeW5Lf3fIdTjDQ" name="AssertFalse" node="_yjzMAjfSEeW5Lf3fIdTjDQ _yjzMAzfSEeW5Lf3fIdTjDQ _yjzMBDfSEeW5Lf3fIdTjDQ _yjzMBTfSEeW5Lf3fIdTjDQ _yjzMBjfSEeW5Lf3fIdTjDQ" group="_yjzMBjfSEeW5Lf3fIdTjDQ">
    <elementImport xmi:id="_yjzL8jfSEeW5Lf3fIdTjDQ" alias="" visibility="private">
      <importedElement xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
    </elementImport>
    <packageImport xmi:id="_yjzL8zfSEeW5Lf3fIdTjDQ" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_yjzL9DfSEeW5Lf3fIdTjDQ" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_yjzL9TfSEeW5Lf3fIdTjDQ" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_yjzL9jfSEeW5Lf3fIdTjDQ" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_yjzL9zfSEeW5Lf3fIdTjDQ" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_yjzL-DfSEeW5Lf3fIdTjDQ" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzL-TfSEeW5Lf3fIdTjDQ" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzL-jfSEeW5Lf3fIdTjDQ" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_yjzL-zfSEeW5Lf3fIdTjDQ" name="condition" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzL_DfSEeW5Lf3fIdTjDQ"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzL_TfSEeW5Lf3fIdTjDQ" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzL_jfSEeW5Lf3fIdTjDQ" target="_yjzMAzfSEeW5Lf3fIdTjDQ" source="_yjzMAjfSEeW5Lf3fIdTjDQ"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzL_zfSEeW5Lf3fIdTjDQ" target="_yjzMBTfSEeW5Lf3fIdTjDQ" source="_yjzMBDfSEeW5Lf3fIdTjDQ"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMADfSEeW5Lf3fIdTjDQ" target="_yjzMJjfSEeW5Lf3fIdTjDQ" source="_yjzMAzfSEeW5Lf3fIdTjDQ"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMATfSEeW5Lf3fIdTjDQ" target="_yjzMOzfSEeW5Lf3fIdTjDQ" source="_yjzMBTfSEeW5Lf3fIdTjDQ"/>
    <structuredNode xmi:id="_yjzMBjfSEeW5Lf3fIdTjDQ" name="Body(AssertFalse)">
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_yjzMBzfSEeW5Lf3fIdTjDQ" name="ExpressionStatement@51330027">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMCDfSEeW5Lf3fIdTjDQ" target="_yjzMDDfSEeW5Lf3fIdTjDQ" source="_yjzMKTfSEeW5Lf3fIdTjDQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMCTfSEeW5Lf3fIdTjDQ" target="_yjzMDzfSEeW5Lf3fIdTjDQ" source="_yjzMRDfSEeW5Lf3fIdTjDQ"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_yjzMCjfSEeW5Lf3fIdTjDQ" target="_yjzMCzfSEeW5Lf3fIdTjDQ" source="_yjzMEjfSEeW5Lf3fIdTjDQ"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_yjzMCzfSEeW5Lf3fIdTjDQ" name="Call(AssertTrue)" incoming="_yjzMCjfSEeW5Lf3fIdTjDQ" behavior="_yjzMRjfSEeW5Lf3fIdTjDQ">
          <argument xmi:id="_yjzMDDfSEeW5Lf3fIdTjDQ" name="Call(AssertTrue).argument(label)" incoming="_yjzMCDfSEeW5Lf3fIdTjDQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMDTfSEeW5Lf3fIdTjDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMDjfSEeW5Lf3fIdTjDQ" value="1"/>
          </argument>
          <argument xmi:id="_yjzMDzfSEeW5Lf3fIdTjDQ" name="Call(AssertTrue).argument(condition)" incoming="_yjzMCTfSEeW5Lf3fIdTjDQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMEDfSEeW5Lf3fIdTjDQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMETfSEeW5Lf3fIdTjDQ" value="1"/>
          </argument>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_yjzMEjfSEeW5Lf3fIdTjDQ" name="Tuple@6f340905" outgoing="_yjzMCjfSEeW5Lf3fIdTjDQ">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMEzfSEeW5Lf3fIdTjDQ" target="_yjzMIzfSEeW5Lf3fIdTjDQ" source="_yjzMHjfSEeW5Lf3fIdTjDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMFDfSEeW5Lf3fIdTjDQ" target="_yjzMMjfSEeW5Lf3fIdTjDQ" source="_yjzMOzfSEeW5Lf3fIdTjDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMFTfSEeW5Lf3fIdTjDQ" target="_yjzMPTfSEeW5Lf3fIdTjDQ" source="_yjzMOzfSEeW5Lf3fIdTjDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMFjfSEeW5Lf3fIdTjDQ" target="_yjzMQzfSEeW5Lf3fIdTjDQ" source="_yjzMQDfSEeW5Lf3fIdTjDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMFzfSEeW5Lf3fIdTjDQ" target="_yjzMRDfSEeW5Lf3fIdTjDQ" source="_yjzMNTfSEeW5Lf3fIdTjDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMGDfSEeW5Lf3fIdTjDQ" target="_yjzMRTfSEeW5Lf3fIdTjDQ" source="_yjzMQzfSEeW5Lf3fIdTjDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMGTfSEeW5Lf3fIdTjDQ" target="_yjzMRTfSEeW5Lf3fIdTjDQ" source="_yjzMQzfSEeW5Lf3fIdTjDQ"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMGjfSEeW5Lf3fIdTjDQ" target="_yjzMRDfSEeW5Lf3fIdTjDQ" source="_yjzMRTfSEeW5Lf3fIdTjDQ">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_yjzMGzfSEeW5Lf3fIdTjDQ" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMHDfSEeW5Lf3fIdTjDQ" target="_yjzMODfSEeW5Lf3fIdTjDQ" source="_yjzMLTfSEeW5Lf3fIdTjDQ"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_yjzMHTfSEeW5Lf3fIdTjDQ" name="Value(&quot;! &quot;)">
            <result xmi:id="_yjzMHjfSEeW5Lf3fIdTjDQ" name="Value(&quot;! &quot;).result" outgoing="_yjzMEzfSEeW5Lf3fIdTjDQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMHzfSEeW5Lf3fIdTjDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMIDfSEeW5Lf3fIdTjDQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralString" xmi:id="_yjzMITfSEeW5Lf3fIdTjDQ" value="! ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </value>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_yjzMIjfSEeW5Lf3fIdTjDQ" name="Call(Concat)">
            <argument xmi:id="_yjzMIzfSEeW5Lf3fIdTjDQ" name="Call(Concat).argument(x)" incoming="_yjzMEzfSEeW5Lf3fIdTjDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMJDfSEeW5Lf3fIdTjDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMJTfSEeW5Lf3fIdTjDQ" value="1"/>
            </argument>
            <argument xmi:id="_yjzMJjfSEeW5Lf3fIdTjDQ" name="Call(Concat).argument(y)" incoming="_yjzMADfSEeW5Lf3fIdTjDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMJzfSEeW5Lf3fIdTjDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMKDfSEeW5Lf3fIdTjDQ" value="1"/>
            </argument>
            <result xmi:id="_yjzMKTfSEeW5Lf3fIdTjDQ" name="Call(Concat).result(result)" outgoing="_yjzMCDfSEeW5Lf3fIdTjDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMKjfSEeW5Lf3fIdTjDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMKzfSEeW5Lf3fIdTjDQ" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_yjzMLDfSEeW5Lf3fIdTjDQ" name="Value(false)">
            <result xmi:id="_yjzMLTfSEeW5Lf3fIdTjDQ" name="Value(false).result" outgoing="_yjzMHDfSEeW5Lf3fIdTjDQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMLjfSEeW5Lf3fIdTjDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMLzfSEeW5Lf3fIdTjDQ" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_yjzMMDfSEeW5Lf3fIdTjDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_yjzMMTfSEeW5Lf3fIdTjDQ" name="Test(==)">
            <first xmi:id="_yjzMMjfSEeW5Lf3fIdTjDQ" name="Test(==).first" incoming="_yjzMFDfSEeW5Lf3fIdTjDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMMzfSEeW5Lf3fIdTjDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMNDfSEeW5Lf3fIdTjDQ" value="1"/>
            </first>
            <result xmi:id="_yjzMNTfSEeW5Lf3fIdTjDQ" name="Test(==).result" outgoing="_yjzMFzfSEeW5Lf3fIdTjDQ" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMNjfSEeW5Lf3fIdTjDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMNzfSEeW5Lf3fIdTjDQ" value="1"/>
            </result>
            <second xmi:id="_yjzMODfSEeW5Lf3fIdTjDQ" name="Test(==).second" incoming="_yjzMHDfSEeW5Lf3fIdTjDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMOTfSEeW5Lf3fIdTjDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMOjfSEeW5Lf3fIdTjDQ" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_yjzMOzfSEeW5Lf3fIdTjDQ" name="Fork(Fork(condition))" incoming="_yjzMATfSEeW5Lf3fIdTjDQ" outgoing="_yjzMFDfSEeW5Lf3fIdTjDQ _yjzMFTfSEeW5Lf3fIdTjDQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_yjzMPDfSEeW5Lf3fIdTjDQ" name="Call(NotEmpty)">
            <argument xmi:id="_yjzMPTfSEeW5Lf3fIdTjDQ" name="Call(NotEmpty).argument(seq)" incoming="_yjzMFTfSEeW5Lf3fIdTjDQ" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMPjfSEeW5Lf3fIdTjDQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMPzfSEeW5Lf3fIdTjDQ" value="*"/>
            </argument>
            <result xmi:id="_yjzMQDfSEeW5Lf3fIdTjDQ" name="Call(NotEmpty).result()" outgoing="_yjzMFjfSEeW5Lf3fIdTjDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMQTfSEeW5Lf3fIdTjDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMQjfSEeW5Lf3fIdTjDQ" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_yjzMQzfSEeW5Lf3fIdTjDQ" name="Fork(Call(NotEmpty).result())" incoming="_yjzMFjfSEeW5Lf3fIdTjDQ" outgoing="_yjzMGDfSEeW5Lf3fIdTjDQ _yjzMGTfSEeW5Lf3fIdTjDQ"/>
          <node xmi:type="uml:MergeNode" xmi:id="_yjzMRDfSEeW5Lf3fIdTjDQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_yjzMFzfSEeW5Lf3fIdTjDQ _yjzMGjfSEeW5Lf3fIdTjDQ" outgoing="_yjzMCTfSEeW5Lf3fIdTjDQ"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_yjzMRTfSEeW5Lf3fIdTjDQ" name="Decision(Call(NotEmpty).result())" incoming="_yjzMGDfSEeW5Lf3fIdTjDQ _yjzMGTfSEeW5Lf3fIdTjDQ" outgoing="_yjzMGjfSEeW5Lf3fIdTjDQ" decisionInputFlow="_yjzMGTfSEeW5Lf3fIdTjDQ"/>
        </node>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_yjzMAjfSEeW5Lf3fIdTjDQ" name="Input(label)" outgoing="_yjzL_jfSEeW5Lf3fIdTjDQ" parameter="_yjzL-DfSEeW5Lf3fIdTjDQ">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_yjzMAzfSEeW5Lf3fIdTjDQ" name="Fork(label)" incoming="_yjzL_jfSEeW5Lf3fIdTjDQ" outgoing="_yjzMADfSEeW5Lf3fIdTjDQ"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_yjzMBDfSEeW5Lf3fIdTjDQ" name="Input(condition)" outgoing="_yjzL_zfSEeW5Lf3fIdTjDQ" parameter="_yjzL-zfSEeW5Lf3fIdTjDQ">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_yjzMBTfSEeW5Lf3fIdTjDQ" name="Fork(condition)" incoming="_yjzL_zfSEeW5Lf3fIdTjDQ" outgoing="_yjzMATfSEeW5Lf3fIdTjDQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Activity" xmi:id="_yjzMRjfSEeW5Lf3fIdTjDQ" name="AssertTrue" node="_yjzMVjfSEeW5Lf3fIdTjDQ _yjzMVzfSEeW5Lf3fIdTjDQ _yjzMWDfSEeW5Lf3fIdTjDQ _yjzMWTfSEeW5Lf3fIdTjDQ _yjzMWjfSEeW5Lf3fIdTjDQ" group="_yjzMWjfSEeW5Lf3fIdTjDQ">
    <packageImport xmi:id="_yjzMRzfSEeW5Lf3fIdTjDQ" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_yjzMSDfSEeW5Lf3fIdTjDQ" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_yjzMSTfSEeW5Lf3fIdTjDQ" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_yjzMSjfSEeW5Lf3fIdTjDQ" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_yjzMSzfSEeW5Lf3fIdTjDQ" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_yjzMTDfSEeW5Lf3fIdTjDQ" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMTTfSEeW5Lf3fIdTjDQ" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMTjfSEeW5Lf3fIdTjDQ" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_yjzMTzfSEeW5Lf3fIdTjDQ" name="condition" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMUDfSEeW5Lf3fIdTjDQ"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMUTfSEeW5Lf3fIdTjDQ" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMUjfSEeW5Lf3fIdTjDQ" target="_yjzMVzfSEeW5Lf3fIdTjDQ" source="_yjzMVjfSEeW5Lf3fIdTjDQ"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMUzfSEeW5Lf3fIdTjDQ" target="_yjzMWTfSEeW5Lf3fIdTjDQ" source="_yjzMWDfSEeW5Lf3fIdTjDQ"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMVDfSEeW5Lf3fIdTjDQ" target="_yjzMdTfSEeW5Lf3fIdTjDQ" source="_yjzMWTfSEeW5Lf3fIdTjDQ"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMVTfSEeW5Lf3fIdTjDQ" target="_yjzMnDfSEeW5Lf3fIdTjDQ" source="_yjzMVzfSEeW5Lf3fIdTjDQ"/>
    <structuredNode xmi:id="_yjzMWjfSEeW5Lf3fIdTjDQ" name="Body(AssertTrue)">
      <node xmi:type="uml:ConditionalNode" xmi:id="_yjzMWzfSEeW5Lf3fIdTjDQ" name="IfStatement@655e5962">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMXDfSEeW5Lf3fIdTjDQ" target="_yjzMbDfSEeW5Lf3fIdTjDQ" source="_yjzMdTfSEeW5Lf3fIdTjDQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMXTfSEeW5Lf3fIdTjDQ" target="_yjzMdzfSEeW5Lf3fIdTjDQ" source="_yjzMdTfSEeW5Lf3fIdTjDQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMXjfSEeW5Lf3fIdTjDQ" target="_yjzMfTfSEeW5Lf3fIdTjDQ" source="_yjzMejfSEeW5Lf3fIdTjDQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMXzfSEeW5Lf3fIdTjDQ" target="_yjzMfjfSEeW5Lf3fIdTjDQ" source="_yjzMbzfSEeW5Lf3fIdTjDQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMYDfSEeW5Lf3fIdTjDQ" target="_yjzMfzfSEeW5Lf3fIdTjDQ" source="_yjzMfTfSEeW5Lf3fIdTjDQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMYTfSEeW5Lf3fIdTjDQ" target="_yjzMfzfSEeW5Lf3fIdTjDQ" source="_yjzMfTfSEeW5Lf3fIdTjDQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMYjfSEeW5Lf3fIdTjDQ" target="_yjzMfjfSEeW5Lf3fIdTjDQ" source="_yjzMfzfSEeW5Lf3fIdTjDQ">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_yjzMYzfSEeW5Lf3fIdTjDQ" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMZDfSEeW5Lf3fIdTjDQ" target="_yjzMcjfSEeW5Lf3fIdTjDQ" source="_yjzMZzfSEeW5Lf3fIdTjDQ"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMZTfSEeW5Lf3fIdTjDQ" target="_yjzMgTfSEeW5Lf3fIdTjDQ" source="_yjzMfjfSEeW5Lf3fIdTjDQ"/>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_yjzMZjfSEeW5Lf3fIdTjDQ" name="Value(true)">
          <result xmi:id="_yjzMZzfSEeW5Lf3fIdTjDQ" name="Value(true).result" outgoing="_yjzMZDfSEeW5Lf3fIdTjDQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMaDfSEeW5Lf3fIdTjDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMaTfSEeW5Lf3fIdTjDQ" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_yjzMajfSEeW5Lf3fIdTjDQ" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <node xmi:type="uml:TestIdentityAction" xmi:id="_yjzMazfSEeW5Lf3fIdTjDQ" name="Test(==)">
          <first xmi:id="_yjzMbDfSEeW5Lf3fIdTjDQ" name="Test(==).first" incoming="_yjzMXDfSEeW5Lf3fIdTjDQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMbTfSEeW5Lf3fIdTjDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMbjfSEeW5Lf3fIdTjDQ" value="1"/>
          </first>
          <result xmi:id="_yjzMbzfSEeW5Lf3fIdTjDQ" name="Test(==).result" outgoing="_yjzMXzfSEeW5Lf3fIdTjDQ" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMcDfSEeW5Lf3fIdTjDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMcTfSEeW5Lf3fIdTjDQ" value="1"/>
          </result>
          <second xmi:id="_yjzMcjfSEeW5Lf3fIdTjDQ" name="Test(==).second" incoming="_yjzMZDfSEeW5Lf3fIdTjDQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMczfSEeW5Lf3fIdTjDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMdDfSEeW5Lf3fIdTjDQ" value="1"/>
          </second>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_yjzMdTfSEeW5Lf3fIdTjDQ" name="Fork(Fork(condition))" incoming="_yjzMVDfSEeW5Lf3fIdTjDQ" outgoing="_yjzMXDfSEeW5Lf3fIdTjDQ _yjzMXTfSEeW5Lf3fIdTjDQ"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_yjzMdjfSEeW5Lf3fIdTjDQ" name="Call(NotEmpty)">
          <argument xmi:id="_yjzMdzfSEeW5Lf3fIdTjDQ" name="Call(NotEmpty).argument(seq)" incoming="_yjzMXTfSEeW5Lf3fIdTjDQ" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMeDfSEeW5Lf3fIdTjDQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMeTfSEeW5Lf3fIdTjDQ" value="*"/>
          </argument>
          <result xmi:id="_yjzMejfSEeW5Lf3fIdTjDQ" name="Call(NotEmpty).result()" outgoing="_yjzMXjfSEeW5Lf3fIdTjDQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMezfSEeW5Lf3fIdTjDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMfDfSEeW5Lf3fIdTjDQ" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_yjzMfTfSEeW5Lf3fIdTjDQ" name="Fork(Call(NotEmpty).result())" incoming="_yjzMXjfSEeW5Lf3fIdTjDQ" outgoing="_yjzMYDfSEeW5Lf3fIdTjDQ _yjzMYTfSEeW5Lf3fIdTjDQ"/>
        <node xmi:type="uml:MergeNode" xmi:id="_yjzMfjfSEeW5Lf3fIdTjDQ" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_yjzMXzfSEeW5Lf3fIdTjDQ _yjzMYjfSEeW5Lf3fIdTjDQ" outgoing="_yjzMZTfSEeW5Lf3fIdTjDQ"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_yjzMfzfSEeW5Lf3fIdTjDQ" name="Decision(Call(NotEmpty).result())" incoming="_yjzMYDfSEeW5Lf3fIdTjDQ _yjzMYTfSEeW5Lf3fIdTjDQ" outgoing="_yjzMYjfSEeW5Lf3fIdTjDQ" decisionInputFlow="_yjzMYTfSEeW5Lf3fIdTjDQ"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_yjzMgDfSEeW5Lf3fIdTjDQ" name="Call(Not)">
          <argument xmi:id="_yjzMgTfSEeW5Lf3fIdTjDQ" name="Call(Not).argument(x)" incoming="_yjzMZTfSEeW5Lf3fIdTjDQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMgjfSEeW5Lf3fIdTjDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMgzfSEeW5Lf3fIdTjDQ" value="1"/>
          </argument>
          <result xmi:id="_yjzMhDfSEeW5Lf3fIdTjDQ" name="Call(Not).result(result)">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMhTfSEeW5Lf3fIdTjDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMhjfSEeW5Lf3fIdTjDQ" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_yjzMhzfSEeW5Lf3fIdTjDQ" name="ExpressionStatement@217f3ed2">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMiDfSEeW5Lf3fIdTjDQ" target="_yjzMizfSEeW5Lf3fIdTjDQ" source="_yjzMnzfSEeW5Lf3fIdTjDQ"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_yjzMiTfSEeW5Lf3fIdTjDQ" target="_yjzMijfSEeW5Lf3fIdTjDQ" source="_yjzMkTfSEeW5Lf3fIdTjDQ"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_yjzMijfSEeW5Lf3fIdTjDQ" name="Call(WriteLine)" incoming="_yjzMiTfSEeW5Lf3fIdTjDQ">
            <argument xmi:id="_yjzMizfSEeW5Lf3fIdTjDQ" name="Call(WriteLine).argument(value)" incoming="_yjzMiDfSEeW5Lf3fIdTjDQ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMjDfSEeW5Lf3fIdTjDQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMjTfSEeW5Lf3fIdTjDQ" value="1"/>
            </argument>
            <result xmi:id="_yjzMjjfSEeW5Lf3fIdTjDQ" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMjzfSEeW5Lf3fIdTjDQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMkDfSEeW5Lf3fIdTjDQ" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_yjzMkTfSEeW5Lf3fIdTjDQ" name="Tuple@3163af2f" outgoing="_yjzMiTfSEeW5Lf3fIdTjDQ">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_yjzMkjfSEeW5Lf3fIdTjDQ" target="_yjzMmTfSEeW5Lf3fIdTjDQ" source="_yjzMlDfSEeW5Lf3fIdTjDQ"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_yjzMkzfSEeW5Lf3fIdTjDQ" name="Value(&quot;FAILED: &quot;)">
              <result xmi:id="_yjzMlDfSEeW5Lf3fIdTjDQ" name="Value(&quot;FAILED: &quot;).result" outgoing="_yjzMkjfSEeW5Lf3fIdTjDQ" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMlTfSEeW5Lf3fIdTjDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMljfSEeW5Lf3fIdTjDQ" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_yjzMlzfSEeW5Lf3fIdTjDQ" value="FAILED: ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_yjzMmDfSEeW5Lf3fIdTjDQ" name="Call(Concat)">
              <argument xmi:id="_yjzMmTfSEeW5Lf3fIdTjDQ" name="Call(Concat).argument(x)" incoming="_yjzMkjfSEeW5Lf3fIdTjDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMmjfSEeW5Lf3fIdTjDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMmzfSEeW5Lf3fIdTjDQ" value="1"/>
              </argument>
              <argument xmi:id="_yjzMnDfSEeW5Lf3fIdTjDQ" name="Call(Concat).argument(y)" incoming="_yjzMVTfSEeW5Lf3fIdTjDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMnTfSEeW5Lf3fIdTjDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMnjfSEeW5Lf3fIdTjDQ" value="1"/>
              </argument>
              <result xmi:id="_yjzMnzfSEeW5Lf3fIdTjDQ" name="Call(Concat).result(result)" outgoing="_yjzMiDfSEeW5Lf3fIdTjDQ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMoDfSEeW5Lf3fIdTjDQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMoTfSEeW5Lf3fIdTjDQ" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
          </node>
        </node>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_yjzMojfSEeW5Lf3fIdTjDQ" name="Value(true)">
          <result xmi:id="_yjzMozfSEeW5Lf3fIdTjDQ" name="Value(true).result" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yjzMpDfSEeW5Lf3fIdTjDQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjzMpTfSEeW5Lf3fIdTjDQ" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_yjzMpjfSEeW5Lf3fIdTjDQ" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <clause xmi:id="_yjzMpzfSEeW5Lf3fIdTjDQ" body="_yjzMhzfSEeW5Lf3fIdTjDQ" decider="_yjzMhDfSEeW5Lf3fIdTjDQ" successorClause="_yjzMqDfSEeW5Lf3fIdTjDQ" test="_yjzMZjfSEeW5Lf3fIdTjDQ _yjzMazfSEeW5Lf3fIdTjDQ _yjzMdjfSEeW5Lf3fIdTjDQ _yjzMgDfSEeW5Lf3fIdTjDQ"/>
        <clause xmi:id="_yjzMqDfSEeW5Lf3fIdTjDQ" decider="_yjzMozfSEeW5Lf3fIdTjDQ" predecessorClause="_yjzMpzfSEeW5Lf3fIdTjDQ" test="_yjzMojfSEeW5Lf3fIdTjDQ"/>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_yjzMVjfSEeW5Lf3fIdTjDQ" name="Input(label)" outgoing="_yjzMUjfSEeW5Lf3fIdTjDQ" parameter="_yjzMTDfSEeW5Lf3fIdTjDQ">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_yjzMVzfSEeW5Lf3fIdTjDQ" name="Fork(label)" incoming="_yjzMUjfSEeW5Lf3fIdTjDQ" outgoing="_yjzMVTfSEeW5Lf3fIdTjDQ"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_yjzMWDfSEeW5Lf3fIdTjDQ" name="Input(condition)" outgoing="_yjzMUzfSEeW5Lf3fIdTjDQ" parameter="_yjzMTzfSEeW5Lf3fIdTjDQ">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_yjzMWTfSEeW5Lf3fIdTjDQ" name="Fork(condition)" incoming="_yjzMUzfSEeW5Lf3fIdTjDQ" outgoing="_yjzMVDfSEeW5Lf3fIdTjDQ"/>
  </packagedElement>
  <profileApplication xmi:id="_yjzMqTfSEeW5Lf3fIdTjDQ">
    <eAnnotations xmi:id="_yjzMqjfSEeW5Lf3fIdTjDQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
    </eAnnotations>
    <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
  </profileApplication>
</uml:Model>

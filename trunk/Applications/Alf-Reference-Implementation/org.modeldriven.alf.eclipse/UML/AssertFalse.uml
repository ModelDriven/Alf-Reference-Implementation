<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_XRm9IDiCEeWlpOnkGDRnCA" name="Model" visibility="package">
  <packagedElement xmi:type="uml:Activity" xmi:id="_XRm9ITiCEeWlpOnkGDRnCA" name="AssertFalse" node="_XRm9MjiCEeWlpOnkGDRnCA _XRm9MziCEeWlpOnkGDRnCA _XRm9NDiCEeWlpOnkGDRnCA _XRm9NTiCEeWlpOnkGDRnCA _XRm9NjiCEeWlpOnkGDRnCA" group="_XRm9NjiCEeWlpOnkGDRnCA">
    <elementImport xmi:id="_XRm9IjiCEeWlpOnkGDRnCA" alias="" visibility="private">
      <importedElement xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
    </elementImport>
    <packageImport xmi:id="_XRm9IziCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_XRm9JDiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_XRm9JTiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_XRm9JjiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_XRm9JziCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_XRm9KDiCEeWlpOnkGDRnCA" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9KTiCEeWlpOnkGDRnCA" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9KjiCEeWlpOnkGDRnCA" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_XRm9KziCEeWlpOnkGDRnCA" name="condition" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9LDiCEeWlpOnkGDRnCA"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9LTiCEeWlpOnkGDRnCA" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9LjiCEeWlpOnkGDRnCA" target="_XRm9MziCEeWlpOnkGDRnCA" source="_XRm9MjiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9LziCEeWlpOnkGDRnCA" target="_XRm9NTiCEeWlpOnkGDRnCA" source="_XRm9NDiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9MDiCEeWlpOnkGDRnCA" target="_XRm9VjiCEeWlpOnkGDRnCA" source="_XRm9MziCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9MTiCEeWlpOnkGDRnCA" target="_XRm9aziCEeWlpOnkGDRnCA" source="_XRm9NTiCEeWlpOnkGDRnCA"/>
    <structuredNode xmi:id="_XRm9NjiCEeWlpOnkGDRnCA" name="Body(AssertFalse)">
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_XRm9NziCEeWlpOnkGDRnCA" name="ExpressionStatement@45de51e2">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9ODiCEeWlpOnkGDRnCA" target="_XRm9PDiCEeWlpOnkGDRnCA" source="_XRm9WTiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9OTiCEeWlpOnkGDRnCA" target="_XRm9PziCEeWlpOnkGDRnCA" source="_XRm9dDiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_XRm9OjiCEeWlpOnkGDRnCA" target="_XRm9OziCEeWlpOnkGDRnCA" source="_XRm9QjiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_XRm9OziCEeWlpOnkGDRnCA" name="Call(AssertTrue)" incoming="_XRm9OjiCEeWlpOnkGDRnCA" behavior="_XRm9djiCEeWlpOnkGDRnCA">
          <argument xmi:id="_XRm9PDiCEeWlpOnkGDRnCA" name="Call(AssertTrue).argument(label)" incoming="_XRm9ODiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9PTiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9PjiCEeWlpOnkGDRnCA" value="1"/>
          </argument>
          <argument xmi:id="_XRm9PziCEeWlpOnkGDRnCA" name="Call(AssertTrue).argument(condition)" incoming="_XRm9OTiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9QDiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9QTiCEeWlpOnkGDRnCA" value="1"/>
          </argument>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_XRm9QjiCEeWlpOnkGDRnCA" name="Tuple@4591f0b2" outgoing="_XRm9OjiCEeWlpOnkGDRnCA">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9QziCEeWlpOnkGDRnCA" target="_XRm9UziCEeWlpOnkGDRnCA" source="_XRm9TjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9RDiCEeWlpOnkGDRnCA" target="_XRm9YjiCEeWlpOnkGDRnCA" source="_XRm9aziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9RTiCEeWlpOnkGDRnCA" target="_XRm9bTiCEeWlpOnkGDRnCA" source="_XRm9aziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9RjiCEeWlpOnkGDRnCA" target="_XRm9cziCEeWlpOnkGDRnCA" source="_XRm9cDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9RziCEeWlpOnkGDRnCA" target="_XRm9dDiCEeWlpOnkGDRnCA" source="_XRm9ZTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9SDiCEeWlpOnkGDRnCA" target="_XRm9dTiCEeWlpOnkGDRnCA" source="_XRm9cziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9STiCEeWlpOnkGDRnCA" target="_XRm9dTiCEeWlpOnkGDRnCA" source="_XRm9cziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9SjiCEeWlpOnkGDRnCA" target="_XRm9dDiCEeWlpOnkGDRnCA" source="_XRm9dTiCEeWlpOnkGDRnCA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_XRm9SziCEeWlpOnkGDRnCA" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9TDiCEeWlpOnkGDRnCA" target="_XRm9aDiCEeWlpOnkGDRnCA" source="_XRm9XTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XRm9TTiCEeWlpOnkGDRnCA" name="Value(&quot;! &quot;)">
            <result xmi:id="_XRm9TjiCEeWlpOnkGDRnCA" name="Value(&quot;! &quot;).result" outgoing="_XRm9QziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9TziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9UDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralString" xmi:id="_XRm9UTiCEeWlpOnkGDRnCA" value="! ">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </value>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XRm9UjiCEeWlpOnkGDRnCA" name="Call(Concat)">
            <argument xmi:id="_XRm9UziCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_XRm9QziCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9VDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9VTiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <argument xmi:id="_XRm9VjiCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_XRm9MDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9VziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9WDiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_XRm9WTiCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_XRm9ODiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9WjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9WziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XRm9XDiCEeWlpOnkGDRnCA" name="Value(false)">
            <result xmi:id="_XRm9XTiCEeWlpOnkGDRnCA" name="Value(false).result" outgoing="_XRm9TDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9XjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9XziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_XRm9YDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_XRm9YTiCEeWlpOnkGDRnCA" name="Test(==)">
            <first xmi:id="_XRm9YjiCEeWlpOnkGDRnCA" name="Test(==).first" incoming="_XRm9RDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9YziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9ZDiCEeWlpOnkGDRnCA" value="1"/>
            </first>
            <result xmi:id="_XRm9ZTiCEeWlpOnkGDRnCA" name="Test(==).result" outgoing="_XRm9RziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9ZjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9ZziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <second xmi:id="_XRm9aDiCEeWlpOnkGDRnCA" name="Test(==).second" incoming="_XRm9TDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9aTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9ajiCEeWlpOnkGDRnCA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_XRm9aziCEeWlpOnkGDRnCA" name="Fork(Fork(condition))" incoming="_XRm9MTiCEeWlpOnkGDRnCA" outgoing="_XRm9RDiCEeWlpOnkGDRnCA _XRm9RTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XRm9bDiCEeWlpOnkGDRnCA" name="Call(NotEmpty)">
            <argument xmi:id="_XRm9bTiCEeWlpOnkGDRnCA" name="Call(NotEmpty).argument(seq)" incoming="_XRm9RTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9bjiCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9bziCEeWlpOnkGDRnCA" value="*"/>
            </argument>
            <result xmi:id="_XRm9cDiCEeWlpOnkGDRnCA" name="Call(NotEmpty).result()" outgoing="_XRm9RjiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9cTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9cjiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_XRm9cziCEeWlpOnkGDRnCA" name="Fork(Call(NotEmpty).result())" incoming="_XRm9RjiCEeWlpOnkGDRnCA" outgoing="_XRm9SDiCEeWlpOnkGDRnCA _XRm9STiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:MergeNode" xmi:id="_XRm9dDiCEeWlpOnkGDRnCA" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_XRm9RziCEeWlpOnkGDRnCA _XRm9SjiCEeWlpOnkGDRnCA" outgoing="_XRm9OTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_XRm9dTiCEeWlpOnkGDRnCA" name="Decision(Call(NotEmpty).result())" incoming="_XRm9SDiCEeWlpOnkGDRnCA _XRm9STiCEeWlpOnkGDRnCA" outgoing="_XRm9SjiCEeWlpOnkGDRnCA" decisionInputFlow="_XRm9STiCEeWlpOnkGDRnCA"/>
        </node>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XRm9MjiCEeWlpOnkGDRnCA" name="Input(label)" outgoing="_XRm9LjiCEeWlpOnkGDRnCA" parameter="_XRm9KDiCEeWlpOnkGDRnCA">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_XRm9MziCEeWlpOnkGDRnCA" name="Fork(label)" incoming="_XRm9LjiCEeWlpOnkGDRnCA" outgoing="_XRm9MDiCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XRm9NDiCEeWlpOnkGDRnCA" name="Input(condition)" outgoing="_XRm9LziCEeWlpOnkGDRnCA" parameter="_XRm9KziCEeWlpOnkGDRnCA">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_XRm9NTiCEeWlpOnkGDRnCA" name="Fork(condition)" incoming="_XRm9LziCEeWlpOnkGDRnCA" outgoing="_XRm9MTiCEeWlpOnkGDRnCA"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Activity" xmi:id="_XRm9djiCEeWlpOnkGDRnCA" name="AssertTrue" node="_XRm9hjiCEeWlpOnkGDRnCA _XRm9hziCEeWlpOnkGDRnCA _XRm9iDiCEeWlpOnkGDRnCA _XRm9iTiCEeWlpOnkGDRnCA _XRm9ijiCEeWlpOnkGDRnCA" group="_XRm9ijiCEeWlpOnkGDRnCA">
    <packageImport xmi:id="_XRm9dziCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_XRm9eDiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_XRm9eTiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_XRm9ejiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_XRm9eziCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_XRm9fDiCEeWlpOnkGDRnCA" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9fTiCEeWlpOnkGDRnCA" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9fjiCEeWlpOnkGDRnCA" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_XRm9fziCEeWlpOnkGDRnCA" name="condition" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9gDiCEeWlpOnkGDRnCA"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9gTiCEeWlpOnkGDRnCA" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9gjiCEeWlpOnkGDRnCA" target="_XRm9hziCEeWlpOnkGDRnCA" source="_XRm9hjiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9gziCEeWlpOnkGDRnCA" target="_XRm9iTiCEeWlpOnkGDRnCA" source="_XRm9iDiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9hDiCEeWlpOnkGDRnCA" target="_XRm9pTiCEeWlpOnkGDRnCA" source="_XRm9iTiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9hTiCEeWlpOnkGDRnCA" target="_XRm9zDiCEeWlpOnkGDRnCA" source="_XRm9hziCEeWlpOnkGDRnCA"/>
    <structuredNode xmi:id="_XRm9ijiCEeWlpOnkGDRnCA" name="Body(AssertTrue)">
      <node xmi:type="uml:ConditionalNode" xmi:id="_XRm9iziCEeWlpOnkGDRnCA" name="IfStatement@3a93009">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9jDiCEeWlpOnkGDRnCA" target="_XRm9nDiCEeWlpOnkGDRnCA" source="_XRm9pTiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9jTiCEeWlpOnkGDRnCA" target="_XRm9pziCEeWlpOnkGDRnCA" source="_XRm9pTiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9jjiCEeWlpOnkGDRnCA" target="_XRm9rTiCEeWlpOnkGDRnCA" source="_XRm9qjiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9jziCEeWlpOnkGDRnCA" target="_XRm9rjiCEeWlpOnkGDRnCA" source="_XRm9nziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9kDiCEeWlpOnkGDRnCA" target="_XRm9rziCEeWlpOnkGDRnCA" source="_XRm9rTiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9kTiCEeWlpOnkGDRnCA" target="_XRm9rziCEeWlpOnkGDRnCA" source="_XRm9rTiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9kjiCEeWlpOnkGDRnCA" target="_XRm9rjiCEeWlpOnkGDRnCA" source="_XRm9rziCEeWlpOnkGDRnCA">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_XRm9kziCEeWlpOnkGDRnCA" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9lDiCEeWlpOnkGDRnCA" target="_XRm9ojiCEeWlpOnkGDRnCA" source="_XRm9lziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9lTiCEeWlpOnkGDRnCA" target="_XRm9sTiCEeWlpOnkGDRnCA" source="_XRm9rjiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XRm9ljiCEeWlpOnkGDRnCA" name="Value(true)">
          <result xmi:id="_XRm9lziCEeWlpOnkGDRnCA" name="Value(true).result" outgoing="_XRm9lDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9mDiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9mTiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_XRm9mjiCEeWlpOnkGDRnCA" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <node xmi:type="uml:TestIdentityAction" xmi:id="_XRm9mziCEeWlpOnkGDRnCA" name="Test(==)">
          <first xmi:id="_XRm9nDiCEeWlpOnkGDRnCA" name="Test(==).first" incoming="_XRm9jDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9nTiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9njiCEeWlpOnkGDRnCA" value="1"/>
          </first>
          <result xmi:id="_XRm9nziCEeWlpOnkGDRnCA" name="Test(==).result" outgoing="_XRm9jziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9oDiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9oTiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <second xmi:id="_XRm9ojiCEeWlpOnkGDRnCA" name="Test(==).second" incoming="_XRm9lDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9oziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9pDiCEeWlpOnkGDRnCA" value="1"/>
          </second>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_XRm9pTiCEeWlpOnkGDRnCA" name="Fork(Fork(condition))" incoming="_XRm9hDiCEeWlpOnkGDRnCA" outgoing="_XRm9jDiCEeWlpOnkGDRnCA _XRm9jTiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_XRm9pjiCEeWlpOnkGDRnCA" name="Call(NotEmpty)">
          <argument xmi:id="_XRm9pziCEeWlpOnkGDRnCA" name="Call(NotEmpty).argument(seq)" incoming="_XRm9jTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9qDiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9qTiCEeWlpOnkGDRnCA" value="*"/>
          </argument>
          <result xmi:id="_XRm9qjiCEeWlpOnkGDRnCA" name="Call(NotEmpty).result()" outgoing="_XRm9jjiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9qziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9rDiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_XRm9rTiCEeWlpOnkGDRnCA" name="Fork(Call(NotEmpty).result())" incoming="_XRm9jjiCEeWlpOnkGDRnCA" outgoing="_XRm9kDiCEeWlpOnkGDRnCA _XRm9kTiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_XRm9rjiCEeWlpOnkGDRnCA" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_XRm9jziCEeWlpOnkGDRnCA _XRm9kjiCEeWlpOnkGDRnCA" outgoing="_XRm9lTiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_XRm9rziCEeWlpOnkGDRnCA" name="Decision(Call(NotEmpty).result())" incoming="_XRm9kDiCEeWlpOnkGDRnCA _XRm9kTiCEeWlpOnkGDRnCA" outgoing="_XRm9kjiCEeWlpOnkGDRnCA" decisionInputFlow="_XRm9kTiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_XRm9sDiCEeWlpOnkGDRnCA" name="Call(Not)">
          <argument xmi:id="_XRm9sTiCEeWlpOnkGDRnCA" name="Call(Not).argument(x)" incoming="_XRm9lTiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9sjiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9sziCEeWlpOnkGDRnCA" value="1"/>
          </argument>
          <result xmi:id="_XRm9tDiCEeWlpOnkGDRnCA" name="Call(Not).result(result)">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9tTiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9tjiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_XRm9tziCEeWlpOnkGDRnCA" name="ExpressionStatement@559384c8">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9uDiCEeWlpOnkGDRnCA" target="_XRm9uziCEeWlpOnkGDRnCA" source="_XRm9zziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_XRm9uTiCEeWlpOnkGDRnCA" target="_XRm9ujiCEeWlpOnkGDRnCA" source="_XRm9wTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XRm9ujiCEeWlpOnkGDRnCA" name="Call(WriteLine)" incoming="_XRm9uTiCEeWlpOnkGDRnCA">
            <argument xmi:id="_XRm9uziCEeWlpOnkGDRnCA" name="Call(WriteLine).argument(value)" incoming="_XRm9uDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9vDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9vTiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_XRm9vjiCEeWlpOnkGDRnCA" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9vziCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9wDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_XRm9wTiCEeWlpOnkGDRnCA" name="Tuple@11ecf29a" outgoing="_XRm9uTiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_XRm9wjiCEeWlpOnkGDRnCA" target="_XRm9yTiCEeWlpOnkGDRnCA" source="_XRm9xDiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XRm9wziCEeWlpOnkGDRnCA" name="Value(&quot;FAILED: &quot;)">
              <result xmi:id="_XRm9xDiCEeWlpOnkGDRnCA" name="Value(&quot;FAILED: &quot;).result" outgoing="_XRm9wjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9xTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9xjiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_XRm9xziCEeWlpOnkGDRnCA" value="FAILED: ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_XRm9yDiCEeWlpOnkGDRnCA" name="Call(Concat)">
              <argument xmi:id="_XRm9yTiCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_XRm9wjiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9yjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9yziCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <argument xmi:id="_XRm9zDiCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_XRm9hTiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm9zTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm9zjiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_XRm9zziCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_XRm9uDiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm90DiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm90TiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
          </node>
        </node>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XRm90jiCEeWlpOnkGDRnCA" name="Value(true)">
          <result xmi:id="_XRm90ziCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XRm91DiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XRm91TiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_XRm91jiCEeWlpOnkGDRnCA" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <clause xmi:id="_XRm91ziCEeWlpOnkGDRnCA" body="_XRm9tziCEeWlpOnkGDRnCA" decider="_XRm9tDiCEeWlpOnkGDRnCA" successorClause="_XRm92DiCEeWlpOnkGDRnCA" test="_XRm9ljiCEeWlpOnkGDRnCA _XRm9mziCEeWlpOnkGDRnCA _XRm9pjiCEeWlpOnkGDRnCA _XRm9sDiCEeWlpOnkGDRnCA"/>
        <clause xmi:id="_XRm92DiCEeWlpOnkGDRnCA" decider="_XRm90ziCEeWlpOnkGDRnCA" predecessorClause="_XRm91ziCEeWlpOnkGDRnCA" test="_XRm90jiCEeWlpOnkGDRnCA"/>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XRm9hjiCEeWlpOnkGDRnCA" name="Input(label)" outgoing="_XRm9gjiCEeWlpOnkGDRnCA" parameter="_XRm9fDiCEeWlpOnkGDRnCA">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_XRm9hziCEeWlpOnkGDRnCA" name="Fork(label)" incoming="_XRm9gjiCEeWlpOnkGDRnCA" outgoing="_XRm9hTiCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XRm9iDiCEeWlpOnkGDRnCA" name="Input(condition)" outgoing="_XRm9gziCEeWlpOnkGDRnCA" parameter="_XRm9fziCEeWlpOnkGDRnCA">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_XRm9iTiCEeWlpOnkGDRnCA" name="Fork(condition)" incoming="_XRm9gziCEeWlpOnkGDRnCA" outgoing="_XRm9hDiCEeWlpOnkGDRnCA"/>
  </packagedElement>
  <profileApplication xmi:id="_XRm92TiCEeWlpOnkGDRnCA">
    <eAnnotations xmi:id="_XRm92jiCEeWlpOnkGDRnCA" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
    </eAnnotations>
    <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
  </profileApplication>
</uml:Model>

<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_XLpBoHdEEeWxUv4wB3sroA" name="Model" visibility="package">
  <packagedElement xmi:type="uml:Activity" xmi:id="_XLpBoXdEEeWxUv4wB3sroA" name="AssertTrue" node="_XLpBtHdEEeWxUv4wB3sroA _XLpBt3dEEeWxUv4wB3sroA _XLpBtXdEEeWxUv4wB3sroA _XLpBvXdEEeWxUv4wB3sroA _XLpBw3dEEeWxUv4wB3sroA _XLpBtndEEeWxUv4wB3sroA" group="_XLpBt3dEEeWxUv4wB3sroA _XLpBvXdEEeWxUv4wB3sroA _XLpBw3dEEeWxUv4wB3sroA">
    <packageImport xmi:id="_XLpBondEEeWxUv4wB3sroA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_XLpBo3dEEeWxUv4wB3sroA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_XLpBpHdEEeWxUv4wB3sroA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_XLpBpXdEEeWxUv4wB3sroA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_XLpBpndEEeWxUv4wB3sroA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_XLpBp3dEEeWxUv4wB3sroA" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpBqHdEEeWxUv4wB3sroA" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpBqXdEEeWxUv4wB3sroA" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_XLpBqndEEeWxUv4wB3sroA" name="condition" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpBq3dEEeWxUv4wB3sroA"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpBrHdEEeWxUv4wB3sroA" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpBrXdEEeWxUv4wB3sroA" target="_XLpBuXdEEeWxUv4wB3sroA" source="_XLpBtHdEEeWxUv4wB3sroA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpBrndEEeWxUv4wB3sroA" target="_XLpBv3dEEeWxUv4wB3sroA" source="_XLpBtXdEEeWxUv4wB3sroA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpBr3dEEeWxUv4wB3sroA" target="_XLpB33dEEeWxUv4wB3sroA" source="_XLpBwndEEeWxUv4wB3sroA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpBsHdEEeWxUv4wB3sroA" target="_XLpCBndEEeWxUv4wB3sroA" source="_XLpBvHdEEeWxUv4wB3sroA"/>
    <edge xmi:type="uml:ControlFlow" xmi:id="_XLpBsXdEEeWxUv4wB3sroA" target="_XLpBtndEEeWxUv4wB3sroA" source="_XLpBt3dEEeWxUv4wB3sroA"/>
    <edge xmi:type="uml:ControlFlow" xmi:id="_XLpBsndEEeWxUv4wB3sroA" target="_XLpBtndEEeWxUv4wB3sroA" source="_XLpBvXdEEeWxUv4wB3sroA"/>
    <edge xmi:type="uml:ControlFlow" xmi:id="_XLpBs3dEEeWxUv4wB3sroA" target="_XLpBw3dEEeWxUv4wB3sroA" source="_XLpBtndEEeWxUv4wB3sroA"/>
    <structuredNode xmi:id="_XLpBt3dEEeWxUv4wB3sroA" name="Node(Input(label))" outgoing="_XLpBsXdEEeWxUv4wB3sroA">
      <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpBuHdEEeWxUv4wB3sroA" target="_XLpBvHdEEeWxUv4wB3sroA" source="_XLpBuXdEEeWxUv4wB3sroA"/>
      <structuredNodeInput xmi:id="_XLpBuXdEEeWxUv4wB3sroA" name="Input(label)" incoming="_XLpBrXdEEeWxUv4wB3sroA" outgoing="_XLpBuHdEEeWxUv4wB3sroA" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpBundEEeWxUv4wB3sroA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpBu3dEEeWxUv4wB3sroA" value="1"/>
      </structuredNodeInput>
      <node xmi:type="uml:ForkNode" xmi:id="_XLpBvHdEEeWxUv4wB3sroA" name="Fork(label)" incoming="_XLpBuHdEEeWxUv4wB3sroA" outgoing="_XLpBsHdEEeWxUv4wB3sroA"/>
    </structuredNode>
    <structuredNode xmi:id="_XLpBvXdEEeWxUv4wB3sroA" name="Node(Input(condition))" outgoing="_XLpBsndEEeWxUv4wB3sroA">
      <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpBvndEEeWxUv4wB3sroA" target="_XLpBwndEEeWxUv4wB3sroA" source="_XLpBv3dEEeWxUv4wB3sroA"/>
      <structuredNodeInput xmi:id="_XLpBv3dEEeWxUv4wB3sroA" name="Input(condition)" incoming="_XLpBrndEEeWxUv4wB3sroA" outgoing="_XLpBvndEEeWxUv4wB3sroA" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpBwHdEEeWxUv4wB3sroA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpBwXdEEeWxUv4wB3sroA" value="1"/>
      </structuredNodeInput>
      <node xmi:type="uml:ForkNode" xmi:id="_XLpBwndEEeWxUv4wB3sroA" name="Fork(condition)" incoming="_XLpBvndEEeWxUv4wB3sroA" outgoing="_XLpBr3dEEeWxUv4wB3sroA"/>
    </structuredNode>
    <structuredNode xmi:id="_XLpBw3dEEeWxUv4wB3sroA" name="Body(AssertTrue)" incoming="_XLpBs3dEEeWxUv4wB3sroA">
      <node xmi:type="uml:ConditionalNode" xmi:id="_XLpBxHdEEeWxUv4wB3sroA" name="IfStatement@728c5129">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_XLpBxXdEEeWxUv4wB3sroA" name="Test(Call(Not).result(result))">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpBxndEEeWxUv4wB3sroA" target="_XLpB1ndEEeWxUv4wB3sroA" source="_XLpB33dEEeWxUv4wB3sroA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpBx3dEEeWxUv4wB3sroA" target="_XLpB4XdEEeWxUv4wB3sroA" source="_XLpB33dEEeWxUv4wB3sroA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpByHdEEeWxUv4wB3sroA" target="_XLpB53dEEeWxUv4wB3sroA" source="_XLpB5HdEEeWxUv4wB3sroA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpByXdEEeWxUv4wB3sroA" target="_XLpB6HdEEeWxUv4wB3sroA" source="_XLpB2XdEEeWxUv4wB3sroA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpByndEEeWxUv4wB3sroA" target="_XLpB6XdEEeWxUv4wB3sroA" source="_XLpB53dEEeWxUv4wB3sroA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpBy3dEEeWxUv4wB3sroA" target="_XLpB6XdEEeWxUv4wB3sroA" source="_XLpB53dEEeWxUv4wB3sroA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpBzHdEEeWxUv4wB3sroA" target="_XLpB6HdEEeWxUv4wB3sroA" source="_XLpB6XdEEeWxUv4wB3sroA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_XLpBzXdEEeWxUv4wB3sroA" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpBzndEEeWxUv4wB3sroA" target="_XLpB3HdEEeWxUv4wB3sroA" source="_XLpB0XdEEeWxUv4wB3sroA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpBz3dEEeWxUv4wB3sroA" target="_XLpB63dEEeWxUv4wB3sroA" source="_XLpB6HdEEeWxUv4wB3sroA"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XLpB0HdEEeWxUv4wB3sroA" name="Value(true)">
            <result xmi:id="_XLpB0XdEEeWxUv4wB3sroA" name="Value(true).result" outgoing="_XLpBzndEEeWxUv4wB3sroA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpB0ndEEeWxUv4wB3sroA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpB03dEEeWxUv4wB3sroA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_XLpB1HdEEeWxUv4wB3sroA" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_XLpB1XdEEeWxUv4wB3sroA" name="Test(==)">
            <first xmi:id="_XLpB1ndEEeWxUv4wB3sroA" name="Test(==).first" incoming="_XLpBxndEEeWxUv4wB3sroA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpB13dEEeWxUv4wB3sroA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpB2HdEEeWxUv4wB3sroA" value="1"/>
            </first>
            <result xmi:id="_XLpB2XdEEeWxUv4wB3sroA" name="Test(==).result" outgoing="_XLpByXdEEeWxUv4wB3sroA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpB2ndEEeWxUv4wB3sroA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpB23dEEeWxUv4wB3sroA" value="1"/>
            </result>
            <second xmi:id="_XLpB3HdEEeWxUv4wB3sroA" name="Test(==).second" incoming="_XLpBzndEEeWxUv4wB3sroA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpB3XdEEeWxUv4wB3sroA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpB3ndEEeWxUv4wB3sroA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_XLpB33dEEeWxUv4wB3sroA" name="Fork(Fork(condition))" incoming="_XLpBr3dEEeWxUv4wB3sroA" outgoing="_XLpBxndEEeWxUv4wB3sroA _XLpBx3dEEeWxUv4wB3sroA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XLpB4HdEEeWxUv4wB3sroA" name="Call(NotEmpty)">
            <argument xmi:id="_XLpB4XdEEeWxUv4wB3sroA" name="Call(NotEmpty).argument(seq)" incoming="_XLpBx3dEEeWxUv4wB3sroA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpB4ndEEeWxUv4wB3sroA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpB43dEEeWxUv4wB3sroA" value="*"/>
            </argument>
            <result xmi:id="_XLpB5HdEEeWxUv4wB3sroA" name="Call(NotEmpty).result()" outgoing="_XLpByHdEEeWxUv4wB3sroA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpB5XdEEeWxUv4wB3sroA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpB5ndEEeWxUv4wB3sroA" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_XLpB53dEEeWxUv4wB3sroA" name="Fork(Call(NotEmpty).result())" incoming="_XLpByHdEEeWxUv4wB3sroA" outgoing="_XLpByndEEeWxUv4wB3sroA _XLpBy3dEEeWxUv4wB3sroA"/>
          <node xmi:type="uml:MergeNode" xmi:id="_XLpB6HdEEeWxUv4wB3sroA" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_XLpByXdEEeWxUv4wB3sroA _XLpBzHdEEeWxUv4wB3sroA" outgoing="_XLpBz3dEEeWxUv4wB3sroA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_XLpB6XdEEeWxUv4wB3sroA" name="Decision(Call(NotEmpty).result())" incoming="_XLpByndEEeWxUv4wB3sroA _XLpBy3dEEeWxUv4wB3sroA" outgoing="_XLpBzHdEEeWxUv4wB3sroA" decisionInputFlow="_XLpBy3dEEeWxUv4wB3sroA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XLpB6ndEEeWxUv4wB3sroA" name="Call(Not)">
            <argument xmi:id="_XLpB63dEEeWxUv4wB3sroA" name="Call(Not).argument(x)" incoming="_XLpBz3dEEeWxUv4wB3sroA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpB7HdEEeWxUv4wB3sroA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpB7XdEEeWxUv4wB3sroA" value="1"/>
            </argument>
            <result xmi:id="_XLpB7ndEEeWxUv4wB3sroA" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpB73dEEeWxUv4wB3sroA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpB8HdEEeWxUv4wB3sroA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_XLpB8XdEEeWxUv4wB3sroA" name="ExpressionStatement@24a4b760">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpB8ndEEeWxUv4wB3sroA" target="_XLpB9XdEEeWxUv4wB3sroA" source="_XLpCCXdEEeWxUv4wB3sroA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_XLpB83dEEeWxUv4wB3sroA" target="_XLpB9HdEEeWxUv4wB3sroA" source="_XLpB-3dEEeWxUv4wB3sroA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XLpB9HdEEeWxUv4wB3sroA" name="Call(WriteLine)" incoming="_XLpB83dEEeWxUv4wB3sroA">
            <argument xmi:id="_XLpB9XdEEeWxUv4wB3sroA" name="Call(WriteLine).argument(value)" incoming="_XLpB8ndEEeWxUv4wB3sroA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpB9ndEEeWxUv4wB3sroA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpB93dEEeWxUv4wB3sroA" value="1"/>
            </argument>
            <result xmi:id="_XLpB-HdEEeWxUv4wB3sroA" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpB-XdEEeWxUv4wB3sroA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpB-ndEEeWxUv4wB3sroA" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_XLpB-3dEEeWxUv4wB3sroA" name="Tuple@380992af" outgoing="_XLpB83dEEeWxUv4wB3sroA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_XLpB_HdEEeWxUv4wB3sroA" target="_XLpCA3dEEeWxUv4wB3sroA" source="_XLpB_ndEEeWxUv4wB3sroA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XLpB_XdEEeWxUv4wB3sroA" name="Value(&quot;FAILED: &quot;)">
              <result xmi:id="_XLpB_ndEEeWxUv4wB3sroA" name="Value(&quot;FAILED: &quot;).result" outgoing="_XLpB_HdEEeWxUv4wB3sroA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpB_3dEEeWxUv4wB3sroA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpCAHdEEeWxUv4wB3sroA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_XLpCAXdEEeWxUv4wB3sroA" value="FAILED: ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_XLpCAndEEeWxUv4wB3sroA" name="Call(Concat)">
              <argument xmi:id="_XLpCA3dEEeWxUv4wB3sroA" name="Call(Concat).argument(x)" incoming="_XLpB_HdEEeWxUv4wB3sroA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpCBHdEEeWxUv4wB3sroA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpCBXdEEeWxUv4wB3sroA" value="1"/>
              </argument>
              <argument xmi:id="_XLpCBndEEeWxUv4wB3sroA" name="Call(Concat).argument(y)" incoming="_XLpBsHdEEeWxUv4wB3sroA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpCB3dEEeWxUv4wB3sroA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpCCHdEEeWxUv4wB3sroA" value="1"/>
              </argument>
              <result xmi:id="_XLpCCXdEEeWxUv4wB3sroA" name="Call(Concat).result(result)" outgoing="_XLpB8ndEEeWxUv4wB3sroA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpCCndEEeWxUv4wB3sroA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpCC3dEEeWxUv4wB3sroA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
          </node>
        </node>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XLpCDHdEEeWxUv4wB3sroA" name="Value(true)">
          <result xmi:id="_XLpCDXdEEeWxUv4wB3sroA" name="Value(true).result" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XLpCDndEEeWxUv4wB3sroA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XLpCD3dEEeWxUv4wB3sroA" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_XLpCEHdEEeWxUv4wB3sroA" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <clause xmi:id="_XLpCEXdEEeWxUv4wB3sroA" body="_XLpB8XdEEeWxUv4wB3sroA" decider="_XLpB7ndEEeWxUv4wB3sroA" successorClause="_XLpCEndEEeWxUv4wB3sroA" test="_XLpBxXdEEeWxUv4wB3sroA"/>
        <clause xmi:id="_XLpCEndEEeWxUv4wB3sroA" decider="_XLpCDXdEEeWxUv4wB3sroA" predecessorClause="_XLpCEXdEEeWxUv4wB3sroA" test="_XLpCDHdEEeWxUv4wB3sroA"/>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XLpBtHdEEeWxUv4wB3sroA" name="Input(label)" outgoing="_XLpBrXdEEeWxUv4wB3sroA" parameter="_XLpBp3dEEeWxUv4wB3sroA">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </node>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XLpBtXdEEeWxUv4wB3sroA" name="Input(condition)" outgoing="_XLpBrndEEeWxUv4wB3sroA" parameter="_XLpBqndEEeWxUv4wB3sroA">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
    </node>
    <node xmi:type="uml:JoinNode" xmi:id="_XLpBtndEEeWxUv4wB3sroA" name="Join(Input))" incoming="_XLpBsXdEEeWxUv4wB3sroA _XLpBsndEEeWxUv4wB3sroA" outgoing="_XLpBs3dEEeWxUv4wB3sroA"/>
  </packagedElement>
  <profileApplication xmi:id="_XLpCE3dEEeWxUv4wB3sroA">
    <eAnnotations xmi:id="_XLpCFHdEEeWxUv4wB3sroA" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
    </eAnnotations>
    <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
  </profileApplication>
</uml:Model>

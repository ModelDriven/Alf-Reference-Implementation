<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_XS2TQDiCEeWlpOnkGDRnCA" name="Model" visibility="package">
  <packagedElement xmi:type="uml:Activity" xmi:id="_XS2TQTiCEeWlpOnkGDRnCA" name="AssertTrue" node="_XS2TUTiCEeWlpOnkGDRnCA _XS2TUjiCEeWlpOnkGDRnCA _XS2TUziCEeWlpOnkGDRnCA _XS2TVDiCEeWlpOnkGDRnCA _XS2TVTiCEeWlpOnkGDRnCA" group="_XS2TVTiCEeWlpOnkGDRnCA">
    <packageImport xmi:id="_XS2TQjiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_XS2TQziCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_XS2TRDiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_XS2TRTiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_XS2TRjiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_XS2TRziCEeWlpOnkGDRnCA" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TSDiCEeWlpOnkGDRnCA" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TSTiCEeWlpOnkGDRnCA" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_XS2TSjiCEeWlpOnkGDRnCA" name="condition" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TSziCEeWlpOnkGDRnCA"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TTDiCEeWlpOnkGDRnCA" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TTTiCEeWlpOnkGDRnCA" target="_XS2TUjiCEeWlpOnkGDRnCA" source="_XS2TUTiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TTjiCEeWlpOnkGDRnCA" target="_XS2TVDiCEeWlpOnkGDRnCA" source="_XS2TUziCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TTziCEeWlpOnkGDRnCA" target="_XS2TcDiCEeWlpOnkGDRnCA" source="_XS2TVDiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TUDiCEeWlpOnkGDRnCA" target="_XS2TlziCEeWlpOnkGDRnCA" source="_XS2TUjiCEeWlpOnkGDRnCA"/>
    <structuredNode xmi:id="_XS2TVTiCEeWlpOnkGDRnCA" name="Body(AssertTrue)">
      <node xmi:type="uml:ConditionalNode" xmi:id="_XS2TVjiCEeWlpOnkGDRnCA" name="IfStatement@6f5bc191">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TVziCEeWlpOnkGDRnCA" target="_XS2TZziCEeWlpOnkGDRnCA" source="_XS2TcDiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TWDiCEeWlpOnkGDRnCA" target="_XS2TcjiCEeWlpOnkGDRnCA" source="_XS2TcDiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TWTiCEeWlpOnkGDRnCA" target="_XS2TeDiCEeWlpOnkGDRnCA" source="_XS2TdTiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TWjiCEeWlpOnkGDRnCA" target="_XS2TeTiCEeWlpOnkGDRnCA" source="_XS2TajiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TWziCEeWlpOnkGDRnCA" target="_XS2TejiCEeWlpOnkGDRnCA" source="_XS2TeDiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TXDiCEeWlpOnkGDRnCA" target="_XS2TejiCEeWlpOnkGDRnCA" source="_XS2TeDiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TXTiCEeWlpOnkGDRnCA" target="_XS2TeTiCEeWlpOnkGDRnCA" source="_XS2TejiCEeWlpOnkGDRnCA">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_XS2TXjiCEeWlpOnkGDRnCA" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TXziCEeWlpOnkGDRnCA" target="_XS2TbTiCEeWlpOnkGDRnCA" source="_XS2TYjiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TYDiCEeWlpOnkGDRnCA" target="_XS2TfDiCEeWlpOnkGDRnCA" source="_XS2TeTiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XS2TYTiCEeWlpOnkGDRnCA" name="Value(true)">
          <result xmi:id="_XS2TYjiCEeWlpOnkGDRnCA" name="Value(true).result" outgoing="_XS2TXziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TYziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TZDiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_XS2TZTiCEeWlpOnkGDRnCA" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <node xmi:type="uml:TestIdentityAction" xmi:id="_XS2TZjiCEeWlpOnkGDRnCA" name="Test(==)">
          <first xmi:id="_XS2TZziCEeWlpOnkGDRnCA" name="Test(==).first" incoming="_XS2TVziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TaDiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TaTiCEeWlpOnkGDRnCA" value="1"/>
          </first>
          <result xmi:id="_XS2TajiCEeWlpOnkGDRnCA" name="Test(==).result" outgoing="_XS2TWjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TaziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TbDiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <second xmi:id="_XS2TbTiCEeWlpOnkGDRnCA" name="Test(==).second" incoming="_XS2TXziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TbjiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TbziCEeWlpOnkGDRnCA" value="1"/>
          </second>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_XS2TcDiCEeWlpOnkGDRnCA" name="Fork(Fork(condition))" incoming="_XS2TTziCEeWlpOnkGDRnCA" outgoing="_XS2TVziCEeWlpOnkGDRnCA _XS2TWDiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_XS2TcTiCEeWlpOnkGDRnCA" name="Call(NotEmpty)">
          <argument xmi:id="_XS2TcjiCEeWlpOnkGDRnCA" name="Call(NotEmpty).argument(seq)" incoming="_XS2TWDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TcziCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TdDiCEeWlpOnkGDRnCA" value="*"/>
          </argument>
          <result xmi:id="_XS2TdTiCEeWlpOnkGDRnCA" name="Call(NotEmpty).result()" outgoing="_XS2TWTiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TdjiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TdziCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_XS2TeDiCEeWlpOnkGDRnCA" name="Fork(Call(NotEmpty).result())" incoming="_XS2TWTiCEeWlpOnkGDRnCA" outgoing="_XS2TWziCEeWlpOnkGDRnCA _XS2TXDiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_XS2TeTiCEeWlpOnkGDRnCA" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_XS2TWjiCEeWlpOnkGDRnCA _XS2TXTiCEeWlpOnkGDRnCA" outgoing="_XS2TYDiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_XS2TejiCEeWlpOnkGDRnCA" name="Decision(Call(NotEmpty).result())" incoming="_XS2TWziCEeWlpOnkGDRnCA _XS2TXDiCEeWlpOnkGDRnCA" outgoing="_XS2TXTiCEeWlpOnkGDRnCA" decisionInputFlow="_XS2TXDiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_XS2TeziCEeWlpOnkGDRnCA" name="Call(Not)">
          <argument xmi:id="_XS2TfDiCEeWlpOnkGDRnCA" name="Call(Not).argument(x)" incoming="_XS2TYDiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TfTiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TfjiCEeWlpOnkGDRnCA" value="1"/>
          </argument>
          <result xmi:id="_XS2TfziCEeWlpOnkGDRnCA" name="Call(Not).result(result)">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TgDiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TgTiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_XS2TgjiCEeWlpOnkGDRnCA" name="ExpressionStatement@9e7f5c">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TgziCEeWlpOnkGDRnCA" target="_XS2ThjiCEeWlpOnkGDRnCA" source="_XS2TmjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_XS2ThDiCEeWlpOnkGDRnCA" target="_XS2ThTiCEeWlpOnkGDRnCA" source="_XS2TjDiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XS2ThTiCEeWlpOnkGDRnCA" name="Call(WriteLine)" incoming="_XS2ThDiCEeWlpOnkGDRnCA">
            <argument xmi:id="_XS2ThjiCEeWlpOnkGDRnCA" name="Call(WriteLine).argument(value)" incoming="_XS2TgziCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2ThziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TiDiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_XS2TiTiCEeWlpOnkGDRnCA" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TijiCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TiziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_XS2TjDiCEeWlpOnkGDRnCA" name="Tuple@6b659e55" outgoing="_XS2ThDiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_XS2TjTiCEeWlpOnkGDRnCA" target="_XS2TlDiCEeWlpOnkGDRnCA" source="_XS2TjziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XS2TjjiCEeWlpOnkGDRnCA" name="Value(&quot;FAILED: &quot;)">
              <result xmi:id="_XS2TjziCEeWlpOnkGDRnCA" name="Value(&quot;FAILED: &quot;).result" outgoing="_XS2TjTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TkDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TkTiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_XS2TkjiCEeWlpOnkGDRnCA" value="FAILED: ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_XS2TkziCEeWlpOnkGDRnCA" name="Call(Concat)">
              <argument xmi:id="_XS2TlDiCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_XS2TjTiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TlTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TljiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <argument xmi:id="_XS2TlziCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_XS2TUDiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TmDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TmTiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_XS2TmjiCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_XS2TgziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TmziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2TnDiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
          </node>
        </node>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XS2TnTiCEeWlpOnkGDRnCA" name="Value(true)">
          <result xmi:id="_XS2TnjiCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XS2TnziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XS2ToDiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_XS2ToTiCEeWlpOnkGDRnCA" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <clause xmi:id="_XS2TojiCEeWlpOnkGDRnCA" body="_XS2TgjiCEeWlpOnkGDRnCA" decider="_XS2TfziCEeWlpOnkGDRnCA" successorClause="_XS2ToziCEeWlpOnkGDRnCA" test="_XS2TYTiCEeWlpOnkGDRnCA _XS2TZjiCEeWlpOnkGDRnCA _XS2TcTiCEeWlpOnkGDRnCA _XS2TeziCEeWlpOnkGDRnCA"/>
        <clause xmi:id="_XS2ToziCEeWlpOnkGDRnCA" decider="_XS2TnjiCEeWlpOnkGDRnCA" predecessorClause="_XS2TojiCEeWlpOnkGDRnCA" test="_XS2TnTiCEeWlpOnkGDRnCA"/>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XS2TUTiCEeWlpOnkGDRnCA" name="Input(label)" outgoing="_XS2TTTiCEeWlpOnkGDRnCA" parameter="_XS2TRziCEeWlpOnkGDRnCA">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_XS2TUjiCEeWlpOnkGDRnCA" name="Fork(label)" incoming="_XS2TTTiCEeWlpOnkGDRnCA" outgoing="_XS2TUDiCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XS2TUziCEeWlpOnkGDRnCA" name="Input(condition)" outgoing="_XS2TTjiCEeWlpOnkGDRnCA" parameter="_XS2TSjiCEeWlpOnkGDRnCA">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_XS2TVDiCEeWlpOnkGDRnCA" name="Fork(condition)" incoming="_XS2TTjiCEeWlpOnkGDRnCA" outgoing="_XS2TTziCEeWlpOnkGDRnCA"/>
  </packagedElement>
  <profileApplication xmi:id="_XS2TpDiCEeWlpOnkGDRnCA">
    <eAnnotations xmi:id="_XS2TpTiCEeWlpOnkGDRnCA" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
    </eAnnotations>
    <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
  </profileApplication>
</uml:Model>

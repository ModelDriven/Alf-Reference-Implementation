<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_k-V98Ik8EeKFM65BLOHaHw" name="Model">
    <packagedElement xmi:type="uml:Class" xmi:id="_k-WlAIk8EeKFM65BLOHaHw" name="Expressions_Assignment" classifierBehavior="_k-WlCYk8EeKFM65BLOHaHw" isActive="true">
      <packageImport xmi:id="_k-WlAYk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_k-WlAok8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_k-WlA4k8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_k-WlBIk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_k-WlBYk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_k-WlBok8EeKFM65BLOHaHw" name="Expressions_Assignment$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-WlB4k8EeKFM65BLOHaHw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-WlCIk8EeKFM65BLOHaHw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_k-WlCYk8EeKFM65BLOHaHw" name="Expressions_Assignment$classifierBehavior$1" visibility="private" isActive="true" group="_k-WlCok8EeKFM65BLOHaHw" node="_k-WlCok8EeKFM65BLOHaHw">
        <structuredNode xmi:id="_k-WlCok8EeKFM65BLOHaHw" name="Body(Expressions_Assignment$classifierBehavior$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-WlC4k8EeKFM65BLOHaHw" name="ExpressionStatement@5c51ee0a" outgoing="_k-XzRIk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallOperationAction" xmi:id="_k-WlDIk8EeKFM65BLOHaHw" name="Call(test)" operation="_k-d524k8EeKFM65BLOHaHw">
              <result xmi:id="_k-WlDYk8EeKFM65BLOHaHw" name="Call(test).result(i)" outgoing="_k-WlKIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-WlDok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-WlD4k8EeKFM65BLOHaHw" value="1"/>
              </result>
              <result xmi:id="_k-WlEIk8EeKFM65BLOHaHw" name="Call(test).result(f)" outgoing="_k-WlKYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-WlEYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-WlEok8EeKFM65BLOHaHw" value="1"/>
              </result>
              <result xmi:id="_k-WlE4k8EeKFM65BLOHaHw" name="Call(test).result(h)" outgoing="_k-WlKok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-WlFIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-WlFYk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <result xmi:id="_k-WlFok8EeKFM65BLOHaHw" name="Call(test).result(filename)" outgoing="_k-WlK4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-WlF4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-WlGIk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <result xmi:id="_k-WlGYk8EeKFM65BLOHaHw" name="Call(test).result(a)" outgoing="_k-WlLIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-WlGok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-WlG4k8EeKFM65BLOHaHw" value="1"/>
              </result>
              <target xmi:id="_k-WlHIk8EeKFM65BLOHaHw" name="Call(test).target" incoming="_k-WlLYk8EeKFM65BLOHaHw" type="_k-WlAIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-WlHYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-WlHok8EeKFM65BLOHaHw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_k-WlH4k8EeKFM65BLOHaHw" name="ReadSelf">
              <result xmi:id="_k-WlIIk8EeKFM65BLOHaHw" name="ReadSelf.result" outgoing="_k-WlLYk8EeKFM65BLOHaHw" type="_k-WlAIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-WlIYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-WlIok8EeKFM65BLOHaHw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-WlI4k8EeKFM65BLOHaHw" name="Fork(i)@352fa163" outgoing="_k-XzQ4k8EeKFM65BLOHaHw" incoming="_k-WlKIk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_k-WlJIk8EeKFM65BLOHaHw" name="Fork(f)@3bc35be0" outgoing="_k-XzRYk8EeKFM65BLOHaHw" incoming="_k-WlKYk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_k-WlJYk8EeKFM65BLOHaHw" name="Fork(h)@16c4edc7" outgoing="_k-XzR4k8EeKFM65BLOHaHw" incoming="_k-WlKok8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_k-WlJok8EeKFM65BLOHaHw" name="Fork(filename)@4724a04f" outgoing="_k-XzSYk8EeKFM65BLOHaHw" incoming="_k-WlK4k8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_k-WlJ4k8EeKFM65BLOHaHw" name="Fork(a)@3598c706" outgoing="_k-XzS4k8EeKFM65BLOHaHw" incoming="_k-WlLIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-WlKIk8EeKFM65BLOHaHw" source="_k-WlDYk8EeKFM65BLOHaHw" target="_k-WlI4k8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-WlKYk8EeKFM65BLOHaHw" source="_k-WlEIk8EeKFM65BLOHaHw" target="_k-WlJIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-WlKok8EeKFM65BLOHaHw" source="_k-WlE4k8EeKFM65BLOHaHw" target="_k-WlJYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-WlK4k8EeKFM65BLOHaHw" source="_k-WlFok8EeKFM65BLOHaHw" target="_k-WlJok8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-WlLIk8EeKFM65BLOHaHw" source="_k-WlGYk8EeKFM65BLOHaHw" target="_k-WlJ4k8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-WlLYk8EeKFM65BLOHaHw" source="_k-WlIIk8EeKFM65BLOHaHw" target="_k-WlHIk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-WlLok8EeKFM65BLOHaHw" name="ExpressionStatement@44d2479d" outgoing="_k-XzRok8EeKFM65BLOHaHw" incoming="_k-XzRIk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-WlL4k8EeKFM65BLOHaHw" name="Call(AssertEqual)" incoming="_k-XMEYk8EeKFM65BLOHaHw" behavior="_k-d58Ik8EeKFM65BLOHaHw">
              <argument xmi:id="_k-WlMIk8EeKFM65BLOHaHw" name="Call(AssertEqual).argument(label)" incoming="_k-WlRIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-WlMYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-WlMok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-WlM4k8EeKFM65BLOHaHw" name="Call(AssertEqual).argument(value1)" incoming="_k-XzQ4k8EeKFM65BLOHaHw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-WlNIk8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-WlNYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-WlNok8EeKFM65BLOHaHw" name="Call(AssertEqual).argument(value2)" incoming="_k-XMEIk8EeKFM65BLOHaHw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-WlN4k8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-WlOIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-WlOYk8EeKFM65BLOHaHw" name="Tuple@79028d24" outgoing="_k-XMEYk8EeKFM65BLOHaHw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-WlOok8EeKFM65BLOHaHw" name="Value(&quot;i&quot;)">
                <result xmi:id="_k-WlO4k8EeKFM65BLOHaHw" name="Value(&quot;i&quot;).result" outgoing="_k-WlRIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-WlPIk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-WlPYk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_k-WlPok8EeKFM65BLOHaHw" value="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-WlP4k8EeKFM65BLOHaHw" name="Value(5)">
                <result xmi:id="_k-WlQIk8EeKFM65BLOHaHw" name="Value(5).result" outgoing="_k-XMEIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-WlQYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-WlQok8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-WlQ4k8EeKFM65BLOHaHw" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-WlRIk8EeKFM65BLOHaHw" source="_k-WlO4k8EeKFM65BLOHaHw" target="_k-WlMIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XMEIk8EeKFM65BLOHaHw" source="_k-WlQIk8EeKFM65BLOHaHw" target="_k-WlNok8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_k-XMEYk8EeKFM65BLOHaHw" source="_k-WlOYk8EeKFM65BLOHaHw" target="_k-WlL4k8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-XMEok8EeKFM65BLOHaHw" name="ExpressionStatement@52d88c8f" outgoing="_k-XzSIk8EeKFM65BLOHaHw" incoming="_k-XzRok8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-XME4k8EeKFM65BLOHaHw" name="Call(AssertFalse)" incoming="_k-XMIYk8EeKFM65BLOHaHw" behavior="_k-gWEok8EeKFM65BLOHaHw">
              <argument xmi:id="_k-XMFIk8EeKFM65BLOHaHw" name="Call(AssertFalse).argument(label)" incoming="_k-XMIIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMFYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMFok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-XMF4k8EeKFM65BLOHaHw" name="Call(AssertFalse).argument(condition)" incoming="_k-XzRYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMGIk8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMGYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-XMGok8EeKFM65BLOHaHw" name="Tuple@5d0957b1" outgoing="_k-XMIYk8EeKFM65BLOHaHw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-XMG4k8EeKFM65BLOHaHw" name="Value(&quot;f&quot;)">
                <result xmi:id="_k-XMHIk8EeKFM65BLOHaHw" name="Value(&quot;f&quot;).result" outgoing="_k-XMIIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMHYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMHok8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_k-XMH4k8EeKFM65BLOHaHw" value="f">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XMIIk8EeKFM65BLOHaHw" source="_k-XMHIk8EeKFM65BLOHaHw" target="_k-XMFIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_k-XMIYk8EeKFM65BLOHaHw" source="_k-XMGok8EeKFM65BLOHaHw" target="_k-XME4k8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-XMIok8EeKFM65BLOHaHw" name="ExpressionStatement@227e42ec" outgoing="_k-XzSok8EeKFM65BLOHaHw" incoming="_k-XzSIk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-XMI4k8EeKFM65BLOHaHw" name="Call(AssertEqual)" incoming="_k-XMOok8EeKFM65BLOHaHw" behavior="_k-d58Ik8EeKFM65BLOHaHw">
              <argument xmi:id="_k-XMJIk8EeKFM65BLOHaHw" name="Call(AssertEqual).argument(label)" incoming="_k-XMOIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMJYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMJok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-XMJ4k8EeKFM65BLOHaHw" name="Call(AssertEqual).argument(value1)" incoming="_k-XzR4k8EeKFM65BLOHaHw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMKIk8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMKYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-XMKok8EeKFM65BLOHaHw" name="Call(AssertEqual).argument(value2)" incoming="_k-XMOYk8EeKFM65BLOHaHw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMK4k8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMLIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-XMLYk8EeKFM65BLOHaHw" name="Tuple@58af2931" outgoing="_k-XMOok8EeKFM65BLOHaHw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-XMLok8EeKFM65BLOHaHw" name="Value(&quot;h&quot;)">
                <result xmi:id="_k-XML4k8EeKFM65BLOHaHw" name="Value(&quot;h&quot;).result" outgoing="_k-XMOIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMMIk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMMYk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_k-XMMok8EeKFM65BLOHaHw" value="h">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-XMM4k8EeKFM65BLOHaHw" name="Value(85)">
                <result xmi:id="_k-XMNIk8EeKFM65BLOHaHw" name="Value(85).result" outgoing="_k-XMOYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMNYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMNok8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-XMN4k8EeKFM65BLOHaHw" value="85">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XMOIk8EeKFM65BLOHaHw" source="_k-XML4k8EeKFM65BLOHaHw" target="_k-XMJIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XMOYk8EeKFM65BLOHaHw" source="_k-XMNIk8EeKFM65BLOHaHw" target="_k-XMKok8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_k-XMOok8EeKFM65BLOHaHw" source="_k-XMLYk8EeKFM65BLOHaHw" target="_k-XMI4k8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-XMO4k8EeKFM65BLOHaHw" name="ExpressionStatement@3146f797" outgoing="_k-XzTIk8EeKFM65BLOHaHw" incoming="_k-XzSok8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-XMPIk8EeKFM65BLOHaHw" name="Call(AssertEqual)" incoming="_k-XMU4k8EeKFM65BLOHaHw" behavior="_k-d58Ik8EeKFM65BLOHaHw">
              <argument xmi:id="_k-XMPYk8EeKFM65BLOHaHw" name="Call(AssertEqual).argument(label)" incoming="_k-XMUYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMPok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMP4k8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-XMQIk8EeKFM65BLOHaHw" name="Call(AssertEqual).argument(value1)" incoming="_k-XzSYk8EeKFM65BLOHaHw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMQYk8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMQok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-XMQ4k8EeKFM65BLOHaHw" name="Call(AssertEqual).argument(value2)" incoming="_k-XMUok8EeKFM65BLOHaHw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMRIk8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMRYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-XMRok8EeKFM65BLOHaHw" name="Tuple@78f082fa" outgoing="_k-XMU4k8EeKFM65BLOHaHw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-XMR4k8EeKFM65BLOHaHw" name="Value(&quot;filename&quot;)">
                <result xmi:id="_k-XMSIk8EeKFM65BLOHaHw" name="Value(&quot;filename&quot;).result" outgoing="_k-XMUYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMSYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMSok8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_k-XMS4k8EeKFM65BLOHaHw" value="filename">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-XMTIk8EeKFM65BLOHaHw" name="Value(&quot;xyz.doc&quot;)">
                <result xmi:id="_k-XMTYk8EeKFM65BLOHaHw" name="Value(&quot;xyz.doc&quot;).result" outgoing="_k-XMUok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMTok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMT4k8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_k-XMUIk8EeKFM65BLOHaHw" value="xyz.doc">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XMUYk8EeKFM65BLOHaHw" source="_k-XMSIk8EeKFM65BLOHaHw" target="_k-XMPYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XMUok8EeKFM65BLOHaHw" source="_k-XMTYk8EeKFM65BLOHaHw" target="_k-XMQ4k8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_k-XMU4k8EeKFM65BLOHaHw" source="_k-XMRok8EeKFM65BLOHaHw" target="_k-XMPIk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-XMVIk8EeKFM65BLOHaHw" name="ExpressionStatement@6af8bdc7" outgoing="_k-XzTYk8EeKFM65BLOHaHw" incoming="_k-XzTIk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-XMVYk8EeKFM65BLOHaHw" name="Call(AssertEqual)" incoming="_k-XzMok8EeKFM65BLOHaHw" behavior="_k-d58Ik8EeKFM65BLOHaHw">
              <argument xmi:id="_k-XMVok8EeKFM65BLOHaHw" name="Call(AssertEqual).argument(label)" incoming="_k-XzMIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XMV4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XMWIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-XMWYk8EeKFM65BLOHaHw" name="Call(AssertEqual).argument(value1)" incoming="_k-XzS4k8EeKFM65BLOHaHw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XzIIk8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XzIYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-XzIok8EeKFM65BLOHaHw" name="Call(AssertEqual).argument(value2)" incoming="_k-XzMYk8EeKFM65BLOHaHw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XzI4k8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XzJIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-XzJYk8EeKFM65BLOHaHw" name="Tuple@136af14d" outgoing="_k-XzMok8EeKFM65BLOHaHw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-XzJok8EeKFM65BLOHaHw" name="Value(&quot;a&quot;)">
                <result xmi:id="_k-XzJ4k8EeKFM65BLOHaHw" name="Value(&quot;a&quot;).result" outgoing="_k-XzMIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XzKIk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XzKYk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_k-XzKok8EeKFM65BLOHaHw" value="a">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-XzK4k8EeKFM65BLOHaHw" name="Value(2)">
                <result xmi:id="_k-XzLIk8EeKFM65BLOHaHw" name="Value(2).result" outgoing="_k-XzMYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XzLYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XzLok8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-XzL4k8EeKFM65BLOHaHw" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XzMIk8EeKFM65BLOHaHw" source="_k-XzJ4k8EeKFM65BLOHaHw" target="_k-XMVok8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XzMYk8EeKFM65BLOHaHw" source="_k-XzLIk8EeKFM65BLOHaHw" target="_k-XzIok8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_k-XzMok8EeKFM65BLOHaHw" source="_k-XzJYk8EeKFM65BLOHaHw" target="_k-XMVYk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-XzM4k8EeKFM65BLOHaHw" name="ExpressionStatement@4ba6b85d" incoming="_k-XzTYk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-XzNIk8EeKFM65BLOHaHw" name="Call(WriteLine)" incoming="_k-XzQok8EeKFM65BLOHaHw">
              <argument xmi:id="_k-XzNYk8EeKFM65BLOHaHw" name="Call(WriteLine).argument(value)" incoming="_k-XzQYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XzNok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XzN4k8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-XzOIk8EeKFM65BLOHaHw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XzOYk8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XzOok8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-XzO4k8EeKFM65BLOHaHw" name="Tuple@2a75dca3" outgoing="_k-XzQok8EeKFM65BLOHaHw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-XzPIk8EeKFM65BLOHaHw" name="Value(&quot;Done&quot;)">
                <result xmi:id="_k-XzPYk8EeKFM65BLOHaHw" name="Value(&quot;Done&quot;).result" outgoing="_k-XzQYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XzPok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XzP4k8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_k-XzQIk8EeKFM65BLOHaHw" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XzQYk8EeKFM65BLOHaHw" source="_k-XzPYk8EeKFM65BLOHaHw" target="_k-XzNYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_k-XzQok8EeKFM65BLOHaHw" source="_k-XzO4k8EeKFM65BLOHaHw" target="_k-XzNIk8EeKFM65BLOHaHw"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XzQ4k8EeKFM65BLOHaHw" source="_k-WlI4k8EeKFM65BLOHaHw" target="_k-WlM4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-XzRIk8EeKFM65BLOHaHw" source="_k-WlC4k8EeKFM65BLOHaHw" target="_k-WlLok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XzRYk8EeKFM65BLOHaHw" source="_k-WlJIk8EeKFM65BLOHaHw" target="_k-XMF4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-XzRok8EeKFM65BLOHaHw" source="_k-WlLok8EeKFM65BLOHaHw" target="_k-XMEok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XzR4k8EeKFM65BLOHaHw" source="_k-WlJYk8EeKFM65BLOHaHw" target="_k-XMJ4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-XzSIk8EeKFM65BLOHaHw" source="_k-XMEok8EeKFM65BLOHaHw" target="_k-XMIok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XzSYk8EeKFM65BLOHaHw" source="_k-WlJok8EeKFM65BLOHaHw" target="_k-XMQIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-XzSok8EeKFM65BLOHaHw" source="_k-XMIok8EeKFM65BLOHaHw" target="_k-XMO4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XzS4k8EeKFM65BLOHaHw" source="_k-WlJ4k8EeKFM65BLOHaHw" target="_k-XMWYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-XzTIk8EeKFM65BLOHaHw" source="_k-XMO4k8EeKFM65BLOHaHw" target="_k-XMVIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-XzTYk8EeKFM65BLOHaHw" source="_k-XMVIk8EeKFM65BLOHaHw" target="_k-XzM4k8EeKFM65BLOHaHw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_k-XzTok8EeKFM65BLOHaHw" name="test$method$1" specification="_k-d524k8EeKFM65BLOHaHw" group="_k-YaMIk8EeKFM65BLOHaHw" node="_k-XzY4k8EeKFM65BLOHaHw _k-XzZIk8EeKFM65BLOHaHw _k-XzZYk8EeKFM65BLOHaHw _k-XzZok8EeKFM65BLOHaHw _k-XzZ4k8EeKFM65BLOHaHw _k-YaMIk8EeKFM65BLOHaHw">
        <ownedParameter xmi:id="_k-XzT4k8EeKFM65BLOHaHw" name="i" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XzUIk8EeKFM65BLOHaHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XzUYk8EeKFM65BLOHaHw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_k-XzUok8EeKFM65BLOHaHw" name="f" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XzU4k8EeKFM65BLOHaHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XzVIk8EeKFM65BLOHaHw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_k-XzVYk8EeKFM65BLOHaHw" name="h" direction="out">
          <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XzVok8EeKFM65BLOHaHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XzV4k8EeKFM65BLOHaHw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_k-XzWIk8EeKFM65BLOHaHw" name="filename" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XzWYk8EeKFM65BLOHaHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XzWok8EeKFM65BLOHaHw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_k-XzW4k8EeKFM65BLOHaHw" name="a" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-XzXIk8EeKFM65BLOHaHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-XzXYk8EeKFM65BLOHaHw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XzXok8EeKFM65BLOHaHw" source="_k-cEw4k8EeKFM65BLOHaHw" target="_k-XzY4k8EeKFM65BLOHaHw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XzX4k8EeKFM65BLOHaHw" source="_k-cExok8EeKFM65BLOHaHw" target="_k-XzZIk8EeKFM65BLOHaHw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XzYIk8EeKFM65BLOHaHw" source="_k-cEyYk8EeKFM65BLOHaHw" target="_k-XzZYk8EeKFM65BLOHaHw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XzYYk8EeKFM65BLOHaHw" source="_k-cEzIk8EeKFM65BLOHaHw" target="_k-XzZok8EeKFM65BLOHaHw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_k-XzYok8EeKFM65BLOHaHw" source="_k-cEz4k8EeKFM65BLOHaHw" target="_k-XzZ4k8EeKFM65BLOHaHw"/>
        <structuredNode xmi:id="_k-YaMIk8EeKFM65BLOHaHw" name="Body(test$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-YaMYk8EeKFM65BLOHaHw" name="ExpressionStatement@22162667" outgoing="_k-cE04k8EeKFM65BLOHaHw">
            <node xmi:type="uml:ForkNode" xmi:id="_k-YaMok8EeKFM65BLOHaHw" name="Fork(i)@34938786" outgoing="_k-cE0ok8EeKFM65BLOHaHw" incoming="_k-YaOYk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-YaM4k8EeKFM65BLOHaHw" name="RightHandSide@2467149d">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-YaNIk8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-YaNYk8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-YaOYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-YaNok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-YaN4k8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-YaOIk8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-YaOYk8EeKFM65BLOHaHw" source="_k-YaNYk8EeKFM65BLOHaHw" target="_k-YaMok8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-YaOok8EeKFM65BLOHaHw" name="ExpressionStatement@451b2519" outgoing="_k-cE1Yk8EeKFM65BLOHaHw" incoming="_k-cE04k8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-YaO4k8EeKFM65BLOHaHw" name="Call(+)">
              <argument xmi:id="_k-YaPIk8EeKFM65BLOHaHw" name="Call(+).argument(x)" incoming="_k-cE0ok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-YaPYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-YaPok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-YaP4k8EeKFM65BLOHaHw" name="Call(+).argument(y)" incoming="_k-YaTIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-YaQIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-YaQYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-YaQok8EeKFM65BLOHaHw" name="Call(+).result(result)" outgoing="_k-YaTYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-YaQ4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-YaRIk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-YaRYk8EeKFM65BLOHaHw" name="Fork(i)@1814786f" outgoing="_k-cE1Ik8EeKFM65BLOHaHw" incoming="_k-YaTYk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-YaRok8EeKFM65BLOHaHw" name="RightHandSide@67eecbc2">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-YaR4k8EeKFM65BLOHaHw" name="Value(4)">
                <result xmi:id="_k-YaSIk8EeKFM65BLOHaHw" name="Value(4).result" outgoing="_k-YaTIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-YaSYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-YaSok8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-YaS4k8EeKFM65BLOHaHw" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-YaTIk8EeKFM65BLOHaHw" source="_k-YaSIk8EeKFM65BLOHaHw" target="_k-YaP4k8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-YaTYk8EeKFM65BLOHaHw" source="_k-YaQok8EeKFM65BLOHaHw" target="_k-YaRYk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-YaTok8EeKFM65BLOHaHw" name="ExpressionStatement@4b4bee22" outgoing="_k-cE14k8EeKFM65BLOHaHw" incoming="_k-cE1Yk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-YaT4k8EeKFM65BLOHaHw" name="Call(+)">
              <argument xmi:id="_k-YaUIk8EeKFM65BLOHaHw" name="Call(+).argument(x)" incoming="_k-cE1Ik8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-YaUYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-YaUok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-YaU4k8EeKFM65BLOHaHw" name="Call(+).argument(y)" incoming="_k-YaYIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-YaVIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-YaVYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-YaVok8EeKFM65BLOHaHw" name="Call(+).result(result)" outgoing="_k-YaYYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-YaV4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-YaWIk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-YaWYk8EeKFM65BLOHaHw" name="Fork(i)@7154d033" outgoing="_k-cE1ok8EeKFM65BLOHaHw" incoming="_k-YaYYk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-YaWok8EeKFM65BLOHaHw" name="RightHandSide@7730fe65">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-YaW4k8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-YaXIk8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-YaYIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-YaXYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-YaXok8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-YaX4k8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-YaYIk8EeKFM65BLOHaHw" source="_k-YaXIk8EeKFM65BLOHaHw" target="_k-YaU4k8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-YaYYk8EeKFM65BLOHaHw" source="_k-YaVok8EeKFM65BLOHaHw" target="_k-YaWYk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-YaYok8EeKFM65BLOHaHw" name="ExpressionStatement@695d7d60" outgoing="_k-cE2Yk8EeKFM65BLOHaHw" incoming="_k-cE14k8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-YaY4k8EeKFM65BLOHaHw" name="Call(-)">
              <argument xmi:id="_k-YaZIk8EeKFM65BLOHaHw" name="Call(-).argument(x)" incoming="_k-cE1ok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-YaZYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-YaZok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-YaZ4k8EeKFM65BLOHaHw" name="Call(-).argument(y)" incoming="_k-YadIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-YaaIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-YaaYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-Yaaok8EeKFM65BLOHaHw" name="Call(-).result(result)" outgoing="_k-YadYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-Yaa4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-YabIk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-YabYk8EeKFM65BLOHaHw" name="Fork(i)@c8d427c" outgoing="_k-cE2Ik8EeKFM65BLOHaHw" incoming="_k-YadYk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-Yabok8EeKFM65BLOHaHw" name="RightHandSide@e07e154">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-Yab4k8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-YacIk8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-YadIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-YacYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-Yacok8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-Yac4k8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-YadIk8EeKFM65BLOHaHw" source="_k-YacIk8EeKFM65BLOHaHw" target="_k-YaZ4k8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-YadYk8EeKFM65BLOHaHw" source="_k-Yaaok8EeKFM65BLOHaHw" target="_k-YabYk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-Yadok8EeKFM65BLOHaHw" name="ExpressionStatement@14efb167" outgoing="_k-croYk8EeKFM65BLOHaHw" incoming="_k-cE2Yk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-Yad4k8EeKFM65BLOHaHw" name="Call(*)">
              <argument xmi:id="_k-YaeIk8EeKFM65BLOHaHw" name="Call(*).argument(x)" incoming="_k-cE2Ik8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBQIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBQYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-ZBQok8EeKFM65BLOHaHw" name="Call(*).argument(y)" incoming="_k-ZBT4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBQ4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBRIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-ZBRYk8EeKFM65BLOHaHw" name="Call(*).result(result)" outgoing="_k-ZBUIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBRok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBR4k8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-times"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-ZBSIk8EeKFM65BLOHaHw" name="Fork(i)@b21e0bc" outgoing="_k-croIk8EeKFM65BLOHaHw" incoming="_k-ZBUIk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-ZBSYk8EeKFM65BLOHaHw" name="RightHandSide@5d295c59">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-ZBSok8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-ZBS4k8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-ZBT4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBTIk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBTYk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-ZBTok8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-ZBT4k8EeKFM65BLOHaHw" source="_k-ZBS4k8EeKFM65BLOHaHw" target="_k-ZBQok8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-ZBUIk8EeKFM65BLOHaHw" source="_k-ZBRYk8EeKFM65BLOHaHw" target="_k-ZBSIk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-ZBUYk8EeKFM65BLOHaHw" name="ExpressionStatement@24243e9f" outgoing="_k-cro4k8EeKFM65BLOHaHw" incoming="_k-croYk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-ZBUok8EeKFM65BLOHaHw" name="Call(Mod)">
              <argument xmi:id="_k-ZBU4k8EeKFM65BLOHaHw" name="Call(Mod).argument(x)" incoming="_k-croIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBVIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBVYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-ZBVok8EeKFM65BLOHaHw" name="Call(Mod).argument(y)" incoming="_k-ZBY4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBV4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBWIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-ZBWYk8EeKFM65BLOHaHw" name="Call(Mod).result(result)" outgoing="_k-ZBZIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBWok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBW4k8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-ZBXIk8EeKFM65BLOHaHw" name="Fork(i)@1cab190c" outgoing="_k-crook8EeKFM65BLOHaHw" incoming="_k-ZBZIk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-ZBXYk8EeKFM65BLOHaHw" name="RightHandSide@24f97188">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-ZBXok8EeKFM65BLOHaHw" name="Value(6)">
                <result xmi:id="_k-ZBX4k8EeKFM65BLOHaHw" name="Value(6).result" outgoing="_k-ZBY4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBYIk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBYYk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-ZBYok8EeKFM65BLOHaHw" value="6">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-ZBY4k8EeKFM65BLOHaHw" source="_k-ZBX4k8EeKFM65BLOHaHw" target="_k-ZBVok8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-ZBZIk8EeKFM65BLOHaHw" source="_k-ZBWYk8EeKFM65BLOHaHw" target="_k-ZBXIk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-ZBZYk8EeKFM65BLOHaHw" name="ExpressionStatement@67622d29" outgoing="_k-crpIk8EeKFM65BLOHaHw" incoming="_k-cro4k8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-ZBZok8EeKFM65BLOHaHw" name="Call(Div)">
              <argument xmi:id="_k-ZBZ4k8EeKFM65BLOHaHw" name="Call(Div).argument(x)" incoming="_k-crook8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBaIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBaYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-ZBaok8EeKFM65BLOHaHw" name="Call(Div).argument(y)" incoming="_k-ZBd4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBa4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBbIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-ZBbYk8EeKFM65BLOHaHw" name="Call(Div).result(result)" outgoing="_k-ZBeIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBbok8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBb4k8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-ZBcIk8EeKFM65BLOHaHw" name="Fork(i)@5f8678e4" outgoing="_k-crwYk8EeKFM65BLOHaHw _k-crxok8EeKFM65BLOHaHw" incoming="_k-ZBeIk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-ZBcYk8EeKFM65BLOHaHw" name="RightHandSide@756af1ba">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-ZBcok8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-ZBc4k8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-ZBd4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBdIk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBdYk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-ZBdok8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-ZBd4k8EeKFM65BLOHaHw" source="_k-ZBc4k8EeKFM65BLOHaHw" target="_k-ZBaok8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-ZBeIk8EeKFM65BLOHaHw" source="_k-ZBbYk8EeKFM65BLOHaHw" target="_k-ZBcIk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-ZBeYk8EeKFM65BLOHaHw" name="ExpressionStatement@7e793d7a" outgoing="_k-crpok8EeKFM65BLOHaHw" incoming="_k-crpIk8EeKFM65BLOHaHw">
            <node xmi:type="uml:ForkNode" xmi:id="_k-ZBeok8EeKFM65BLOHaHw" name="Fork(f)@6779ad95" outgoing="_k-crpYk8EeKFM65BLOHaHw" incoming="_k-ZBgYk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-ZBe4k8EeKFM65BLOHaHw" name="RightHandSide@65734645">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-ZBfIk8EeKFM65BLOHaHw" name="Value(true)">
                <result xmi:id="_k-ZBfYk8EeKFM65BLOHaHw" name="Value(true).result" outgoing="_k-ZBgYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBfok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBf4k8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_k-ZBgIk8EeKFM65BLOHaHw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-ZBgYk8EeKFM65BLOHaHw" source="_k-ZBfYk8EeKFM65BLOHaHw" target="_k-ZBeok8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-ZBgok8EeKFM65BLOHaHw" name="ExpressionStatement@c5c5f3b" outgoing="_k-crqIk8EeKFM65BLOHaHw" incoming="_k-crpok8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-ZBg4k8EeKFM65BLOHaHw" name="Call(And)">
              <argument xmi:id="_k-ZBhIk8EeKFM65BLOHaHw" name="Call(And).argument(x)" incoming="_k-crpYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZBhYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZBhok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-ZoUIk8EeKFM65BLOHaHw" name="Call(And).argument(y)" incoming="_k-ZoXYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZoUYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZoUok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-ZoU4k8EeKFM65BLOHaHw" name="Call(And).result(result)" outgoing="_k-ZoXok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZoVIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZoVYk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-And"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-ZoVok8EeKFM65BLOHaHw" name="Fork(f)@a99e6a" outgoing="_k-crp4k8EeKFM65BLOHaHw" incoming="_k-ZoXok8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-ZoV4k8EeKFM65BLOHaHw" name="RightHandSide@7fdf417c">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-ZoWIk8EeKFM65BLOHaHw" name="Value(true)">
                <result xmi:id="_k-ZoWYk8EeKFM65BLOHaHw" name="Value(true).result" outgoing="_k-ZoXYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZoWok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZoW4k8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_k-ZoXIk8EeKFM65BLOHaHw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-ZoXYk8EeKFM65BLOHaHw" source="_k-ZoWYk8EeKFM65BLOHaHw" target="_k-ZoUIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-ZoXok8EeKFM65BLOHaHw" source="_k-ZoU4k8EeKFM65BLOHaHw" target="_k-ZoVok8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-ZoX4k8EeKFM65BLOHaHw" name="ExpressionStatement@70220d1d" outgoing="_k-crqok8EeKFM65BLOHaHw" incoming="_k-crqIk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-ZoYIk8EeKFM65BLOHaHw" name="Call(Or)">
              <argument xmi:id="_k-ZoYYk8EeKFM65BLOHaHw" name="Call(Or).argument(x)" incoming="_k-crp4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZoYok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZoY4k8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-ZoZIk8EeKFM65BLOHaHw" name="Call(Or).argument(y)" incoming="_k-ZocYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZoZYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZoZok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-ZoZ4k8EeKFM65BLOHaHw" name="Call(Or).result(result)" outgoing="_k-Zocok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZoaIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZoaYk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-Zoaok8EeKFM65BLOHaHw" name="Fork(f)@1f63d05e" outgoing="_k-crqYk8EeKFM65BLOHaHw" incoming="_k-Zocok8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-Zoa4k8EeKFM65BLOHaHw" name="RightHandSide@5204db6b">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-ZobIk8EeKFM65BLOHaHw" name="Value(true)">
                <result xmi:id="_k-ZobYk8EeKFM65BLOHaHw" name="Value(true).result" outgoing="_k-ZocYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-Zobok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-Zob4k8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_k-ZocIk8EeKFM65BLOHaHw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-ZocYk8EeKFM65BLOHaHw" source="_k-ZobYk8EeKFM65BLOHaHw" target="_k-ZoZIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-Zocok8EeKFM65BLOHaHw" source="_k-ZoZ4k8EeKFM65BLOHaHw" target="_k-Zoaok8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-Zoc4k8EeKFM65BLOHaHw" name="ExpressionStatement@34c14649" outgoing="_k-crq4k8EeKFM65BLOHaHw" incoming="_k-crqok8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-ZodIk8EeKFM65BLOHaHw" name="Call(Xor)">
              <argument xmi:id="_k-ZodYk8EeKFM65BLOHaHw" name="Call(Xor).argument(x)" incoming="_k-crqYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-Zodok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-Zod4k8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-ZoeIk8EeKFM65BLOHaHw" name="Call(Xor).argument(y)" incoming="_k-ZohYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZoeYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-Zoeok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-Zoe4k8EeKFM65BLOHaHw" name="Call(Xor).result(result)" outgoing="_k-Zohok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZofIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZofYk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Xor"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-Zofok8EeKFM65BLOHaHw" name="Fork(f)@365f6757" outgoing="_k-crx4k8EeKFM65BLOHaHw" incoming="_k-Zohok8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-Zof4k8EeKFM65BLOHaHw" name="RightHandSide@31799ca4">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-ZogIk8EeKFM65BLOHaHw" name="Value(true)">
                <result xmi:id="_k-ZogYk8EeKFM65BLOHaHw" name="Value(true).result" outgoing="_k-ZohYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-Zogok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-Zog4k8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_k-ZohIk8EeKFM65BLOHaHw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-ZohYk8EeKFM65BLOHaHw" source="_k-ZogYk8EeKFM65BLOHaHw" target="_k-ZoeIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-Zohok8EeKFM65BLOHaHw" source="_k-Zoe4k8EeKFM65BLOHaHw" target="_k-Zofok8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-Zoh4k8EeKFM65BLOHaHw" name="ExpressionStatement@1d06fbae" outgoing="_k-crrIk8EeKFM65BLOHaHw" incoming="_k-crq4k8EeKFM65BLOHaHw">
            <node xmi:type="uml:ForkNode" xmi:id="_k-ZoiIk8EeKFM65BLOHaHw" name="Fork(h)@3d42a38e" incoming="_k-aPdIk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-ZoiYk8EeKFM65BLOHaHw" name="RightHandSide@5d427546">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-Zoiok8EeKFM65BLOHaHw" name="Value(0)">
                <result xmi:id="_k-Zoi4k8EeKFM65BLOHaHw" name="Value(0).result" outgoing="_k-aPc4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ZojIk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZojYk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-Zojok8EeKFM65BLOHaHw">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_k-Zoj4k8EeKFM65BLOHaHw" name="CastExpression@5d427546" mode="parallel" outputElement="_k-aPcok8EeKFM65BLOHaHw" inputElement="_k-aPcYk8EeKFM65BLOHaHw">
                <node xmi:type="uml:MergeNode" xmi:id="_k-ZokIk8EeKFM65BLOHaHw" name="Merge(CastExpression@5d427546.operand)" outgoing="_k-aPcIk8EeKFM65BLOHaHw" incoming="_k-aPaok8EeKFM65BLOHaHw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_k-ZokYk8EeKFM65BLOHaHw" name="ReadIsClassifiedObject(Integer)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_k-Zokok8EeKFM65BLOHaHw" name="ReadIsClassifiedObject(Integer).object" incoming="_k-aPaYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-Zok4k8EeKFM65BLOHaHw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ZolIk8EeKFM65BLOHaHw" value="1"/>
                  </object>
                  <result xmi:id="_k-ZolYk8EeKFM65BLOHaHw" name="ReadIsClassifiedObject(Integer).result" outgoing="_k-aPbIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-Zolok8EeKFM65BLOHaHw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-Zol4k8EeKFM65BLOHaHw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_k-aPYIk8EeKFM65BLOHaHw" name="Fork(ReadIsClassifiedObject(Integer).object)" outgoing="_k-aPaYk8EeKFM65BLOHaHw _k-aPa4k8EeKFM65BLOHaHw" incoming="_k-aPb4k8EeKFM65BLOHaHw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-aPYYk8EeKFM65BLOHaHw" name="Call(ToBitString)">
                  <argument xmi:id="_k-aPYok8EeKFM65BLOHaHw" name="Call(ToBitString).argument(n)" incoming="_k-aPbYk8EeKFM65BLOHaHw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-aPY4k8EeKFM65BLOHaHw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-aPZIk8EeKFM65BLOHaHw" value="1"/>
                  </argument>
                  <result xmi:id="_k-aPZYk8EeKFM65BLOHaHw" name="Call(ToBitString).result(null)" outgoing="_k-aPaok8EeKFM65BLOHaHw">
                    <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-aPZok8EeKFM65BLOHaHw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-aPZ4k8EeKFM65BLOHaHw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_k-aPaIk8EeKFM65BLOHaHw" name="Decision(ReadIsClassifiedObject(Integer).result)" outgoing="_k-aPbYk8EeKFM65BLOHaHw" incoming="_k-aPa4k8EeKFM65BLOHaHw _k-aPbIk8EeKFM65BLOHaHw" decisionInputFlow="_k-aPbIk8EeKFM65BLOHaHw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_k-aPaYk8EeKFM65BLOHaHw" source="_k-aPYIk8EeKFM65BLOHaHw" target="_k-Zokok8EeKFM65BLOHaHw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_k-aPaok8EeKFM65BLOHaHw" source="_k-aPZYk8EeKFM65BLOHaHw" target="_k-ZokIk8EeKFM65BLOHaHw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_k-aPa4k8EeKFM65BLOHaHw" source="_k-aPYIk8EeKFM65BLOHaHw" target="_k-aPaIk8EeKFM65BLOHaHw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_k-aPbIk8EeKFM65BLOHaHw" source="_k-ZolYk8EeKFM65BLOHaHw" target="_k-aPaIk8EeKFM65BLOHaHw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_k-aPbYk8EeKFM65BLOHaHw" source="_k-aPaIk8EeKFM65BLOHaHw" target="_k-aPYok8EeKFM65BLOHaHw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_k-aPbok8EeKFM65BLOHaHw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_k-aPb4k8EeKFM65BLOHaHw" source="_k-aPcYk8EeKFM65BLOHaHw" target="_k-aPYIk8EeKFM65BLOHaHw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_k-aPcIk8EeKFM65BLOHaHw" source="_k-ZokIk8EeKFM65BLOHaHw" target="_k-aPcok8EeKFM65BLOHaHw"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_k-aPcYk8EeKFM65BLOHaHw" name="CastExpression@5d427546.inputElement" outgoing="_k-aPb4k8EeKFM65BLOHaHw" incoming="_k-aPc4k8EeKFM65BLOHaHw" regionAsInput="_k-Zoj4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_k-aPcok8EeKFM65BLOHaHw" name="CastExpression@5d427546.outputElement" outgoing="_k-aPdIk8EeKFM65BLOHaHw" incoming="_k-aPcIk8EeKFM65BLOHaHw" regionAsOutput="_k-Zoj4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_k-aPc4k8EeKFM65BLOHaHw" source="_k-Zoi4k8EeKFM65BLOHaHw" target="_k-aPcYk8EeKFM65BLOHaHw"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-aPdIk8EeKFM65BLOHaHw" source="_k-aPcok8EeKFM65BLOHaHw" target="_k-ZoiIk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-aPdYk8EeKFM65BLOHaHw" name="ExpressionStatement@61df092e" outgoing="_k-crrok8EeKFM65BLOHaHw" incoming="_k-crrIk8EeKFM65BLOHaHw">
            <node xmi:type="uml:ForkNode" xmi:id="_k-aPdok8EeKFM65BLOHaHw" name="Fork(h)@475d6bd6" outgoing="_k-crrYk8EeKFM65BLOHaHw" incoming="_k-aPhYk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-aPd4k8EeKFM65BLOHaHw" name="RightHandSide@4652d334">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-aPeIk8EeKFM65BLOHaHw" name="Value(171)">
                <result xmi:id="_k-aPeYk8EeKFM65BLOHaHw" name="Value(171).result" outgoing="_k-aPhIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-aPeok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-aPe4k8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-aPfIk8EeKFM65BLOHaHw" value="171">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-aPfYk8EeKFM65BLOHaHw" name="Call(ToBitString)">
                <argument xmi:id="_k-aPfok8EeKFM65BLOHaHw" name="Call(ToBitString).argument(n)" incoming="_k-aPhIk8EeKFM65BLOHaHw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-aPf4k8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-aPgIk8EeKFM65BLOHaHw" value="1"/>
                </argument>
                <result xmi:id="_k-aPgYk8EeKFM65BLOHaHw" name="Call(ToBitString).result(null)" outgoing="_k-aPhYk8EeKFM65BLOHaHw">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-aPgok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-aPg4k8EeKFM65BLOHaHw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_k-aPhIk8EeKFM65BLOHaHw" source="_k-aPeYk8EeKFM65BLOHaHw" target="_k-aPfok8EeKFM65BLOHaHw"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-aPhYk8EeKFM65BLOHaHw" source="_k-aPgYk8EeKFM65BLOHaHw" target="_k-aPdok8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-aPhok8EeKFM65BLOHaHw" name="ExpressionStatement@225bfb7d" outgoing="_k-crsIk8EeKFM65BLOHaHw" incoming="_k-crrok8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-aPh4k8EeKFM65BLOHaHw" name="Call(&amp;)">
              <argument xmi:id="_k-aPiIk8EeKFM65BLOHaHw" name="Call(&amp;).argument(b1)" incoming="_k-crrYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-aPiYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-aPiok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-aPi4k8EeKFM65BLOHaHw" name="Call(&amp;).argument(b2)" incoming="_k-aPmIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-aPjIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-aPjYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-aPjok8EeKFM65BLOHaHw" name="Call(&amp;).result(null)" outgoing="_k-aPmYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-aPj4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-aPkIk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-amp"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-aPkYk8EeKFM65BLOHaHw" name="Fork(h)@13440bd8" outgoing="_k-crr4k8EeKFM65BLOHaHw" incoming="_k-aPmYk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-aPkok8EeKFM65BLOHaHw" name="RightHandSide@58659bc9">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-aPk4k8EeKFM65BLOHaHw" name="Value(255)">
                <result xmi:id="_k-aPlIk8EeKFM65BLOHaHw" name="Value(255).result" outgoing="_k-aPmIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-aPlYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-aPlok8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-aPl4k8EeKFM65BLOHaHw" value="255">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-aPmIk8EeKFM65BLOHaHw" source="_k-aPlIk8EeKFM65BLOHaHw" target="_k-aPi4k8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-aPmYk8EeKFM65BLOHaHw" source="_k-aPjok8EeKFM65BLOHaHw" target="_k-aPkYk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-aPmok8EeKFM65BLOHaHw" name="ExpressionStatement@373a8983" outgoing="_k-crsok8EeKFM65BLOHaHw" incoming="_k-crsIk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-aPm4k8EeKFM65BLOHaHw" name="Call(|)">
              <argument xmi:id="_k-aPnIk8EeKFM65BLOHaHw" name="Call(|).argument(b1)" incoming="_k-crr4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-aPnYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-aPnok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-aPn4k8EeKFM65BLOHaHw" name="Call(|).argument(b2)" incoming="_k-a2cok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-aPoIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-aPoYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-aPook8EeKFM65BLOHaHw" name="Call(|).result(null)" outgoing="_k-a2c4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-aPo4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-aPpIk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-bar"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-aPpYk8EeKFM65BLOHaHw" name="Fork(h)@667d4335" outgoing="_k-crsYk8EeKFM65BLOHaHw" incoming="_k-a2c4k8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-aPpok8EeKFM65BLOHaHw" name="RightHandSide@29c78124">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-aPp4k8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-aPqIk8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-a2cok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-aPqYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2cIk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-a2cYk8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-a2cok8EeKFM65BLOHaHw" source="_k-aPqIk8EeKFM65BLOHaHw" target="_k-aPn4k8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-a2c4k8EeKFM65BLOHaHw" source="_k-aPook8EeKFM65BLOHaHw" target="_k-aPpYk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-a2dIk8EeKFM65BLOHaHw" name="ExpressionStatement@5979d35c" outgoing="_k-crtIk8EeKFM65BLOHaHw" incoming="_k-crsok8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-a2dYk8EeKFM65BLOHaHw" name="Call(^)">
              <argument xmi:id="_k-a2dok8EeKFM65BLOHaHw" name="Call(^).argument(b1)" incoming="_k-crsYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2d4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2eIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-a2eYk8EeKFM65BLOHaHw" name="Call(^).argument(b2)" incoming="_k-a2hok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2eok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2e4k8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-a2fIk8EeKFM65BLOHaHw" name="Call(^).result(null)" outgoing="_k-a2h4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2fYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2fok8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-caret"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-a2f4k8EeKFM65BLOHaHw" name="Fork(h)@6f01ba6f" outgoing="_k-crs4k8EeKFM65BLOHaHw" incoming="_k-a2h4k8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-a2gIk8EeKFM65BLOHaHw" name="RightHandSide@5a770658">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-a2gYk8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-a2gok8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-a2hok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2g4k8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2hIk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-a2hYk8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-a2hok8EeKFM65BLOHaHw" source="_k-a2gok8EeKFM65BLOHaHw" target="_k-a2eYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-a2h4k8EeKFM65BLOHaHw" source="_k-a2fIk8EeKFM65BLOHaHw" target="_k-a2f4k8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-a2iIk8EeKFM65BLOHaHw" name="ExpressionStatement@debac27" outgoing="_k-crtok8EeKFM65BLOHaHw" incoming="_k-crtIk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-a2iYk8EeKFM65BLOHaHw" name="Call(&lt;&lt;)">
              <argument xmi:id="_k-a2iok8EeKFM65BLOHaHw" name="Call(&lt;&lt;).argument(b)" incoming="_k-crs4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2i4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2jIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-a2jYk8EeKFM65BLOHaHw" name="Call(&lt;&lt;).argument(n)" incoming="_k-a2mok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2jok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2j4k8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-a2kIk8EeKFM65BLOHaHw" name="Call(&lt;&lt;).result(null)" outgoing="_k-a2m4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2kYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2kok8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ltlt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-a2k4k8EeKFM65BLOHaHw" name="Fork(h)@23428b92" outgoing="_k-crtYk8EeKFM65BLOHaHw" incoming="_k-a2m4k8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-a2lIk8EeKFM65BLOHaHw" name="RightHandSide@65d93053">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-a2lYk8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-a2lok8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-a2mok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2l4k8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2mIk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-a2mYk8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-a2mok8EeKFM65BLOHaHw" source="_k-a2lok8EeKFM65BLOHaHw" target="_k-a2jYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-a2m4k8EeKFM65BLOHaHw" source="_k-a2kIk8EeKFM65BLOHaHw" target="_k-a2k4k8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-a2nIk8EeKFM65BLOHaHw" name="ExpressionStatement@daf4f1e" outgoing="_k-cruIk8EeKFM65BLOHaHw" incoming="_k-crtok8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-a2nYk8EeKFM65BLOHaHw" name="Call(>>)">
              <argument xmi:id="_k-a2nok8EeKFM65BLOHaHw" name="Call(>>).argument(b)" incoming="_k-crtYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2n4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2oIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-a2oYk8EeKFM65BLOHaHw" name="Call(>>).argument(n)" incoming="_k-a2rok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2ook8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2o4k8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-a2pIk8EeKFM65BLOHaHw" name="Call(>>).result(null)" outgoing="_k-a2r4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2pYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2pok8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-a2p4k8EeKFM65BLOHaHw" name="Fork(h)@6693a061" outgoing="_k-crt4k8EeKFM65BLOHaHw" incoming="_k-a2r4k8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-a2qIk8EeKFM65BLOHaHw" name="RightHandSide@660674e3">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-a2qYk8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-a2qok8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-a2rok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2q4k8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2rIk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-a2rYk8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-a2rok8EeKFM65BLOHaHw" source="_k-a2qok8EeKFM65BLOHaHw" target="_k-a2oYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-a2r4k8EeKFM65BLOHaHw" source="_k-a2pIk8EeKFM65BLOHaHw" target="_k-a2p4k8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-a2sIk8EeKFM65BLOHaHw" name="ExpressionStatement@4984451e" outgoing="_k-cruYk8EeKFM65BLOHaHw" incoming="_k-cruIk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-a2sYk8EeKFM65BLOHaHw" name="Call(>>>)">
              <argument xmi:id="_k-a2sok8EeKFM65BLOHaHw" name="Call(>>>).argument(b)" incoming="_k-crt4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2s4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2tIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-a2tYk8EeKFM65BLOHaHw" name="Call(>>>).argument(n)" incoming="_k-bdiYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-a2tok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-a2t4k8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-a2uIk8EeKFM65BLOHaHw" name="Call(>>>).result(null)" outgoing="_k-bdiok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-bdgIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-bdgYk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-bdgok8EeKFM65BLOHaHw" name="Fork(h)@31185689" outgoing="_k-cryIk8EeKFM65BLOHaHw" incoming="_k-bdiok8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-bdg4k8EeKFM65BLOHaHw" name="RightHandSide@34d9558d">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-bdhIk8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-bdhYk8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-bdiYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-bdhok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-bdh4k8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-bdiIk8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-bdiYk8EeKFM65BLOHaHw" source="_k-bdhYk8EeKFM65BLOHaHw" target="_k-a2tYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-bdiok8EeKFM65BLOHaHw" source="_k-a2uIk8EeKFM65BLOHaHw" target="_k-bdgok8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-bdi4k8EeKFM65BLOHaHw" name="ExpressionStatement@2111e072" outgoing="_k-cru4k8EeKFM65BLOHaHw" incoming="_k-cruYk8EeKFM65BLOHaHw">
            <node xmi:type="uml:ForkNode" xmi:id="_k-bdjIk8EeKFM65BLOHaHw" name="Fork(filename)@1ae0f136" outgoing="_k-cruok8EeKFM65BLOHaHw" incoming="_k-bdk4k8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-bdjYk8EeKFM65BLOHaHw" name="RightHandSide@25fc1e03">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-bdjok8EeKFM65BLOHaHw" name="Value(&quot;xyz&quot;)">
                <result xmi:id="_k-bdj4k8EeKFM65BLOHaHw" name="Value(&quot;xyz&quot;).result" outgoing="_k-bdk4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-bdkIk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-bdkYk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_k-bdkok8EeKFM65BLOHaHw" value="xyz">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-bdk4k8EeKFM65BLOHaHw" source="_k-bdj4k8EeKFM65BLOHaHw" target="_k-bdjIk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-bdlIk8EeKFM65BLOHaHw" name="ExpressionStatement@224b1370" outgoing="_k-crvIk8EeKFM65BLOHaHw" incoming="_k-cru4k8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-bdlYk8EeKFM65BLOHaHw" name="Call(Concat)">
              <argument xmi:id="_k-bdlok8EeKFM65BLOHaHw" name="Call(Concat).argument(x)" incoming="_k-cruok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-bdl4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-bdmIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-bdmYk8EeKFM65BLOHaHw" name="Call(Concat).argument(y)" incoming="_k-bdpok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-bdmok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-bdm4k8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-bdnIk8EeKFM65BLOHaHw" name="Call(Concat).result(result)" outgoing="_k-bdp4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-bdnYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-bdnok8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-bdn4k8EeKFM65BLOHaHw" name="Fork(filename)@796f4fac" outgoing="_k-cryYk8EeKFM65BLOHaHw" incoming="_k-bdp4k8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-bdoIk8EeKFM65BLOHaHw" name="RightHandSide@7ad7e37c">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-bdoYk8EeKFM65BLOHaHw" name="Value(&quot;.doc&quot;)">
                <result xmi:id="_k-bdook8EeKFM65BLOHaHw" name="Value(&quot;.doc&quot;).result" outgoing="_k-bdpok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-bdo4k8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-bdpIk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_k-bdpYk8EeKFM65BLOHaHw" value=".doc">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-bdpok8EeKFM65BLOHaHw" source="_k-bdook8EeKFM65BLOHaHw" target="_k-bdmYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-bdp4k8EeKFM65BLOHaHw" source="_k-bdnIk8EeKFM65BLOHaHw" target="_k-bdn4k8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-bdqIk8EeKFM65BLOHaHw" name="ExpressionStatement@458a2ccf" outgoing="_k-crvok8EeKFM65BLOHaHw" incoming="_k-crvIk8EeKFM65BLOHaHw">
            <node xmi:type="uml:ForkNode" xmi:id="_k-bdqYk8EeKFM65BLOHaHw" name="Fork(a)@531daf46" outgoing="_k-crvYk8EeKFM65BLOHaHw" incoming="_k-bdsIk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-bdqok8EeKFM65BLOHaHw" name="RightHandSide@41de474b">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-bdq4k8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-bdrIk8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-bdsIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-bdrYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-bdrok8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-bdr4k8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-bdsIk8EeKFM65BLOHaHw" source="_k-bdrIk8EeKFM65BLOHaHw" target="_k-bdqYk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-bdsYk8EeKFM65BLOHaHw" name="ExpressionStatement@c497c7c" outgoing="_k-crv4k8EeKFM65BLOHaHw" incoming="_k-crvok8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-bdsok8EeKFM65BLOHaHw" name="Call(+)">
              <argument xmi:id="_k-bds4k8EeKFM65BLOHaHw" name="Call(+).argument(x)" incoming="_k-crvYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-bdtIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-bdtYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-bdtok8EeKFM65BLOHaHw" name="Call(+).argument(y)" incoming="_k-bdw4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-bdt4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-bduIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-bduYk8EeKFM65BLOHaHw" name="Call(+).result(result)" outgoing="_k-bdxIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-bduok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-bdu4k8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-bdvIk8EeKFM65BLOHaHw" name="Fork(a)@2b1ab878" incoming="_k-bdxIk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-bdvYk8EeKFM65BLOHaHw" name="RightHandSide@6744e463">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-bdvok8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-bdv4k8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-bdw4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-bdwIk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-bdwYk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-bdwok8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-bdw4k8EeKFM65BLOHaHw" source="_k-bdv4k8EeKFM65BLOHaHw" target="_k-bdtok8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-bdxIk8EeKFM65BLOHaHw" source="_k-bduYk8EeKFM65BLOHaHw" target="_k-bdvIk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-bdxYk8EeKFM65BLOHaHw" name="ExpressionStatement@259a542c" outgoing="_k-crwok8EeKFM65BLOHaHw" incoming="_k-crv4k8EeKFM65BLOHaHw">
            <node xmi:type="uml:ForkNode" xmi:id="_k-cEkIk8EeKFM65BLOHaHw" name="Fork(test::a)@4afeca0c" outgoing="_k-crwIk8EeKFM65BLOHaHw" incoming="_k-cEl4k8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-cEkYk8EeKFM65BLOHaHw" name="RightHandSide@1d83004b">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-cEkok8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-cEk4k8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-cEl4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cElIk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cElYk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-cElok8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-cEl4k8EeKFM65BLOHaHw" source="_k-cEk4k8EeKFM65BLOHaHw" target="_k-cEkIk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-cEmIk8EeKFM65BLOHaHw" name="ExpressionStatement@2bcfd1b3" outgoing="_k-crw4k8EeKFM65BLOHaHw" incoming="_k-crwok8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-cEmYk8EeKFM65BLOHaHw" name="Call(+)">
              <argument xmi:id="_k-cEmok8EeKFM65BLOHaHw" name="Call(+).argument(x)" incoming="_k-crwIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cEm4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cEnIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-cEnYk8EeKFM65BLOHaHw" name="Call(+).argument(y)" incoming="_k-crwYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cEnok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cEn4k8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-cEoIk8EeKFM65BLOHaHw" name="Call(+).result(result)" outgoing="_k-cEpYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cEoYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cEook8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-cEo4k8EeKFM65BLOHaHw" name="Fork(test::a)@21683789" incoming="_k-cEpYk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-cEpIk8EeKFM65BLOHaHw" name="RightHandSide@41161481"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-cEpYk8EeKFM65BLOHaHw" source="_k-cEoIk8EeKFM65BLOHaHw" target="_k-cEo4k8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-cEpok8EeKFM65BLOHaHw" name="ExpressionStatement@293ca32a" outgoing="_k-crxYk8EeKFM65BLOHaHw" incoming="_k-crw4k8EeKFM65BLOHaHw">
            <node xmi:type="uml:ForkNode" xmi:id="_k-cEp4k8EeKFM65BLOHaHw" name="Fork(test::a)@42701c57" outgoing="_k-crxIk8EeKFM65BLOHaHw" incoming="_k-cErok8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-cEqIk8EeKFM65BLOHaHw" name="RightHandSide@4e54b5d4">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-cEqYk8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-cEqok8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-cErok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cEq4k8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cErIk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-cErYk8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-cErok8EeKFM65BLOHaHw" source="_k-cEqok8EeKFM65BLOHaHw" target="_k-cEp4k8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-cEr4k8EeKFM65BLOHaHw" name="ExpressionStatement@1c4e4efb" incoming="_k-crxYk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-cEsIk8EeKFM65BLOHaHw" name="Call(+)">
              <argument xmi:id="_k-cEsYk8EeKFM65BLOHaHw" name="Call(+).argument(x)" incoming="_k-crxIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cEsok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cEs4k8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-cEtIk8EeKFM65BLOHaHw" name="Call(+).argument(y)" incoming="_k-cEwYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cEtYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cEtok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-cEt4k8EeKFM65BLOHaHw" name="Call(+).result(result)" outgoing="_k-cEwok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cEuIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cEuYk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-cEuok8EeKFM65BLOHaHw" name="Fork(test::a)@3990f7c0" outgoing="_k-cryok8EeKFM65BLOHaHw" incoming="_k-cEwok8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-cEu4k8EeKFM65BLOHaHw" name="RightHandSide@5c797bc6">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-cEvIk8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-cEvYk8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-cEwYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cEvok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cEv4k8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-cEwIk8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-cEwYk8EeKFM65BLOHaHw" source="_k-cEvYk8EeKFM65BLOHaHw" target="_k-cEtIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-cEwok8EeKFM65BLOHaHw" source="_k-cEt4k8EeKFM65BLOHaHw" target="_k-cEuok8EeKFM65BLOHaHw"/>
          </node>
          <structuredNodeOutput xmi:id="_k-cEw4k8EeKFM65BLOHaHw" name="Output(i)" outgoing="_k-XzXok8EeKFM65BLOHaHw" incoming="_k-crxok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cExIk8EeKFM65BLOHaHw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cExYk8EeKFM65BLOHaHw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_k-cExok8EeKFM65BLOHaHw" name="Output(f)" outgoing="_k-XzX4k8EeKFM65BLOHaHw" incoming="_k-crx4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cEx4k8EeKFM65BLOHaHw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cEyIk8EeKFM65BLOHaHw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_k-cEyYk8EeKFM65BLOHaHw" name="Output(h)" outgoing="_k-XzYIk8EeKFM65BLOHaHw" incoming="_k-cryIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cEyok8EeKFM65BLOHaHw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cEy4k8EeKFM65BLOHaHw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_k-cEzIk8EeKFM65BLOHaHw" name="Output(filename)" outgoing="_k-XzYYk8EeKFM65BLOHaHw" incoming="_k-cryYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cEzYk8EeKFM65BLOHaHw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cEzok8EeKFM65BLOHaHw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_k-cEz4k8EeKFM65BLOHaHw" name="Output(a)" outgoing="_k-XzYok8EeKFM65BLOHaHw" incoming="_k-cryok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cE0Ik8EeKFM65BLOHaHw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cE0Yk8EeKFM65BLOHaHw" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-cE0ok8EeKFM65BLOHaHw" source="_k-YaMok8EeKFM65BLOHaHw" target="_k-YaPIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-cE04k8EeKFM65BLOHaHw" source="_k-YaMYk8EeKFM65BLOHaHw" target="_k-YaOok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-cE1Ik8EeKFM65BLOHaHw" source="_k-YaRYk8EeKFM65BLOHaHw" target="_k-YaUIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-cE1Yk8EeKFM65BLOHaHw" source="_k-YaOok8EeKFM65BLOHaHw" target="_k-YaTok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-cE1ok8EeKFM65BLOHaHw" source="_k-YaWYk8EeKFM65BLOHaHw" target="_k-YaZIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-cE14k8EeKFM65BLOHaHw" source="_k-YaTok8EeKFM65BLOHaHw" target="_k-YaYok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-cE2Ik8EeKFM65BLOHaHw" source="_k-YabYk8EeKFM65BLOHaHw" target="_k-YaeIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-cE2Yk8EeKFM65BLOHaHw" source="_k-YaYok8EeKFM65BLOHaHw" target="_k-Yadok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-croIk8EeKFM65BLOHaHw" source="_k-ZBSIk8EeKFM65BLOHaHw" target="_k-ZBU4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-croYk8EeKFM65BLOHaHw" source="_k-Yadok8EeKFM65BLOHaHw" target="_k-ZBUYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crook8EeKFM65BLOHaHw" source="_k-ZBXIk8EeKFM65BLOHaHw" target="_k-ZBZ4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-cro4k8EeKFM65BLOHaHw" source="_k-ZBUYk8EeKFM65BLOHaHw" target="_k-ZBZYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crpIk8EeKFM65BLOHaHw" source="_k-ZBZYk8EeKFM65BLOHaHw" target="_k-ZBeYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crpYk8EeKFM65BLOHaHw" source="_k-ZBeok8EeKFM65BLOHaHw" target="_k-ZBhIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crpok8EeKFM65BLOHaHw" source="_k-ZBeYk8EeKFM65BLOHaHw" target="_k-ZBgok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crp4k8EeKFM65BLOHaHw" source="_k-ZoVok8EeKFM65BLOHaHw" target="_k-ZoYYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crqIk8EeKFM65BLOHaHw" source="_k-ZBgok8EeKFM65BLOHaHw" target="_k-ZoX4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crqYk8EeKFM65BLOHaHw" source="_k-Zoaok8EeKFM65BLOHaHw" target="_k-ZodYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crqok8EeKFM65BLOHaHw" source="_k-ZoX4k8EeKFM65BLOHaHw" target="_k-Zoc4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crq4k8EeKFM65BLOHaHw" source="_k-Zoc4k8EeKFM65BLOHaHw" target="_k-Zoh4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crrIk8EeKFM65BLOHaHw" source="_k-Zoh4k8EeKFM65BLOHaHw" target="_k-aPdYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crrYk8EeKFM65BLOHaHw" source="_k-aPdok8EeKFM65BLOHaHw" target="_k-aPiIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crrok8EeKFM65BLOHaHw" source="_k-aPdYk8EeKFM65BLOHaHw" target="_k-aPhok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crr4k8EeKFM65BLOHaHw" source="_k-aPkYk8EeKFM65BLOHaHw" target="_k-aPnIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crsIk8EeKFM65BLOHaHw" source="_k-aPhok8EeKFM65BLOHaHw" target="_k-aPmok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crsYk8EeKFM65BLOHaHw" source="_k-aPpYk8EeKFM65BLOHaHw" target="_k-a2dok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crsok8EeKFM65BLOHaHw" source="_k-aPmok8EeKFM65BLOHaHw" target="_k-a2dIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crs4k8EeKFM65BLOHaHw" source="_k-a2f4k8EeKFM65BLOHaHw" target="_k-a2iok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crtIk8EeKFM65BLOHaHw" source="_k-a2dIk8EeKFM65BLOHaHw" target="_k-a2iIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crtYk8EeKFM65BLOHaHw" source="_k-a2k4k8EeKFM65BLOHaHw" target="_k-a2nok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crtok8EeKFM65BLOHaHw" source="_k-a2iIk8EeKFM65BLOHaHw" target="_k-a2nIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crt4k8EeKFM65BLOHaHw" source="_k-a2p4k8EeKFM65BLOHaHw" target="_k-a2sok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-cruIk8EeKFM65BLOHaHw" source="_k-a2nIk8EeKFM65BLOHaHw" target="_k-a2sIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-cruYk8EeKFM65BLOHaHw" source="_k-a2sIk8EeKFM65BLOHaHw" target="_k-bdi4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-cruok8EeKFM65BLOHaHw" source="_k-bdjIk8EeKFM65BLOHaHw" target="_k-bdlok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-cru4k8EeKFM65BLOHaHw" source="_k-bdi4k8EeKFM65BLOHaHw" target="_k-bdlIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crvIk8EeKFM65BLOHaHw" source="_k-bdlIk8EeKFM65BLOHaHw" target="_k-bdqIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crvYk8EeKFM65BLOHaHw" source="_k-bdqYk8EeKFM65BLOHaHw" target="_k-bds4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crvok8EeKFM65BLOHaHw" source="_k-bdqIk8EeKFM65BLOHaHw" target="_k-bdsYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crv4k8EeKFM65BLOHaHw" source="_k-bdsYk8EeKFM65BLOHaHw" target="_k-bdxYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crwIk8EeKFM65BLOHaHw" source="_k-cEkIk8EeKFM65BLOHaHw" target="_k-cEmok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crwYk8EeKFM65BLOHaHw" source="_k-ZBcIk8EeKFM65BLOHaHw" target="_k-cEnYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crwok8EeKFM65BLOHaHw" source="_k-bdxYk8EeKFM65BLOHaHw" target="_k-cEmIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crw4k8EeKFM65BLOHaHw" source="_k-cEmIk8EeKFM65BLOHaHw" target="_k-cEpok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crxIk8EeKFM65BLOHaHw" source="_k-cEp4k8EeKFM65BLOHaHw" target="_k-cEsYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-crxYk8EeKFM65BLOHaHw" source="_k-cEpok8EeKFM65BLOHaHw" target="_k-cEr4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crxok8EeKFM65BLOHaHw" source="_k-ZBcIk8EeKFM65BLOHaHw" target="_k-cEw4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crx4k8EeKFM65BLOHaHw" source="_k-Zofok8EeKFM65BLOHaHw" target="_k-cExok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-cryIk8EeKFM65BLOHaHw" source="_k-bdgok8EeKFM65BLOHaHw" target="_k-cEyYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-cryYk8EeKFM65BLOHaHw" source="_k-bdn4k8EeKFM65BLOHaHw" target="_k-cEzIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-cryok8EeKFM65BLOHaHw" source="_k-cEuok8EeKFM65BLOHaHw" target="_k-cEz4k8EeKFM65BLOHaHw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-XzY4k8EeKFM65BLOHaHw" name="Output(i)" incoming="_k-XzXok8EeKFM65BLOHaHw" parameter="_k-XzT4k8EeKFM65BLOHaHw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-XzZIk8EeKFM65BLOHaHw" name="Output(f)" incoming="_k-XzX4k8EeKFM65BLOHaHw" parameter="_k-XzUok8EeKFM65BLOHaHw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-XzZYk8EeKFM65BLOHaHw" name="Output(h)" incoming="_k-XzYIk8EeKFM65BLOHaHw" parameter="_k-XzVYk8EeKFM65BLOHaHw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-XzZok8EeKFM65BLOHaHw" name="Output(filename)" incoming="_k-XzYYk8EeKFM65BLOHaHw" parameter="_k-XzWIk8EeKFM65BLOHaHw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-XzZ4k8EeKFM65BLOHaHw" name="Output(a)" incoming="_k-XzYok8EeKFM65BLOHaHw" parameter="_k-XzW4k8EeKFM65BLOHaHw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_k-cry4k8EeKFM65BLOHaHw" name="Expressions_Assignment$method$1" specification="_k-d564k8EeKFM65BLOHaHw" group="_k-cr0Yk8EeKFM65BLOHaHw" node="_k-cr0Ik8EeKFM65BLOHaHw _k-cr0Yk8EeKFM65BLOHaHw">
        <ownedParameter xmi:id="_k-crzIk8EeKFM65BLOHaHw" name="" type="_k-WlAIk8EeKFM65BLOHaHw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-crzYk8EeKFM65BLOHaHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-crzok8EeKFM65BLOHaHw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_k-crz4k8EeKFM65BLOHaHw" source="_k-cr14k8EeKFM65BLOHaHw" target="_k-cr0Ik8EeKFM65BLOHaHw"/>
        <structuredNode xmi:id="_k-cr0Yk8EeKFM65BLOHaHw" name="Body(Expressions_Assignment$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-cr0ok8EeKFM65BLOHaHw" name="Body" incoming="_k-dSxIk8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_k-cr04k8EeKFM65BLOHaHw" name="ReadSelf">
            <result xmi:id="_k-cr1Ik8EeKFM65BLOHaHw" name="ReadSelf.result" outgoing="_k-dSwok8EeKFM65BLOHaHw" type="_k-WlAIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cr1Yk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cr1ok8EeKFM65BLOHaHw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_k-cr14k8EeKFM65BLOHaHw" name="Fork(ReadSelf.result)" outgoing="_k-crz4k8EeKFM65BLOHaHw _k-dSw4k8EeKFM65BLOHaHw _k-dSxYk8EeKFM65BLOHaHw" incoming="_k-dSwok8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_k-cr2Ik8EeKFM65BLOHaHw" name="Call(Expressions_Assignment$initialization$1)" outgoing="_k-dSxIk8EeKFM65BLOHaHw" incoming="_k-dSy4k8EeKFM65BLOHaHw" operation="_k-d52ok8EeKFM65BLOHaHw">
            <target xmi:id="_k-cr2Yk8EeKFM65BLOHaHw" name="Call(Expressions_Assignment$initialization$1).target" incoming="_k-dSw4k8EeKFM65BLOHaHw" type="_k-WlAIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cr2ok8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cr24k8EeKFM65BLOHaHw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_k-cr3Ik8EeKFM65BLOHaHw" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_k-WlBok8EeKFM65BLOHaHw">
            <object xmi:id="_k-cr3Yk8EeKFM65BLOHaHw" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_k-dSxYk8EeKFM65BLOHaHw" type="_k-WlAIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cr3ok8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cr34k8EeKFM65BLOHaHw" value="1"/>
            </object>
            <result xmi:id="_k-cr4Ik8EeKFM65BLOHaHw" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_k-dSxok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cr4Yk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cr4ok8EeKFM65BLOHaHw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-cr44k8EeKFM65BLOHaHw" name="Call(ListSize)">
            <argument xmi:id="_k-cr5Ik8EeKFM65BLOHaHw" name="Call(ListSize).argument(list)" incoming="_k-dSxok8EeKFM65BLOHaHw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cr5Yk8EeKFM65BLOHaHw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-cr5ok8EeKFM65BLOHaHw" value="*"/>
            </argument>
            <result xmi:id="_k-cr54k8EeKFM65BLOHaHw" name="Call(ListSize).result(result)" outgoing="_k-dSx4k8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-cr6Ik8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dSsIk8EeKFM65BLOHaHw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-dSsYk8EeKFM65BLOHaHw" name="Value(0)">
            <result xmi:id="_k-dSsok8EeKFM65BLOHaHw" name="Value(0).result" outgoing="_k-dSyIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-dSs4k8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dStIk8EeKFM65BLOHaHw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_k-dStYk8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_k-dStok8EeKFM65BLOHaHw" name="Test(Size==0)">
            <first xmi:id="_k-dSt4k8EeKFM65BLOHaHw" name="Test(Size==0).first" incoming="_k-dSx4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-dSuIk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dSuYk8EeKFM65BLOHaHw" value="1"/>
            </first>
            <result xmi:id="_k-dSuok8EeKFM65BLOHaHw" name="Test(Size==0).result" outgoing="_k-dSyok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-dSu4k8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dSvIk8EeKFM65BLOHaHw" value="1"/>
            </result>
            <second xmi:id="_k-dSvYk8EeKFM65BLOHaHw" name="Test(Size==0).second" incoming="_k-dSyIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-dSvok8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dSv4k8EeKFM65BLOHaHw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_k-dSwIk8EeKFM65BLOHaHw" name="InitialNode" outgoing="_k-dSyYk8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_k-dSwYk8EeKFM65BLOHaHw" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" outgoing="_k-dSy4k8EeKFM65BLOHaHw" incoming="_k-dSyYk8EeKFM65BLOHaHw _k-dSyok8EeKFM65BLOHaHw" decisionInputFlow="_k-dSyok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-dSwok8EeKFM65BLOHaHw" source="_k-cr1Ik8EeKFM65BLOHaHw" target="_k-cr14k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-dSw4k8EeKFM65BLOHaHw" source="_k-cr14k8EeKFM65BLOHaHw" target="_k-cr2Yk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-dSxIk8EeKFM65BLOHaHw" source="_k-cr2Ik8EeKFM65BLOHaHw" target="_k-cr0ok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-dSxYk8EeKFM65BLOHaHw" source="_k-cr14k8EeKFM65BLOHaHw" target="_k-cr3Yk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-dSxok8EeKFM65BLOHaHw" source="_k-cr4Ik8EeKFM65BLOHaHw" target="_k-cr5Ik8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-dSx4k8EeKFM65BLOHaHw" source="_k-cr54k8EeKFM65BLOHaHw" target="_k-dSt4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-dSyIk8EeKFM65BLOHaHw" source="_k-dSsok8EeKFM65BLOHaHw" target="_k-dSvYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-dSyYk8EeKFM65BLOHaHw" source="_k-dSwIk8EeKFM65BLOHaHw" target="_k-dSwYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-dSyok8EeKFM65BLOHaHw" source="_k-dSuok8EeKFM65BLOHaHw" target="_k-dSwYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-dSy4k8EeKFM65BLOHaHw" source="_k-dSwYk8EeKFM65BLOHaHw" target="_k-cr2Ik8EeKFM65BLOHaHw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_k-dSzIk8EeKFM65BLOHaHw" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-cr0Ik8EeKFM65BLOHaHw" name="Return" incoming="_k-crz4k8EeKFM65BLOHaHw" parameter="_k-crzIk8EeKFM65BLOHaHw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_k-dSzYk8EeKFM65BLOHaHw" name="destroy$method$1" specification="_k-d574k8EeKFM65BLOHaHw" group="_k-dSzok8EeKFM65BLOHaHw" node="_k-dSzok8EeKFM65BLOHaHw">
        <structuredNode xmi:id="_k-dSzok8EeKFM65BLOHaHw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_k-dSz4k8EeKFM65BLOHaHw" name="Expressions_Assignment$initialization$1" specification="_k-d52ok8EeKFM65BLOHaHw" group="_k-dS0Ik8EeKFM65BLOHaHw" node="_k-dS0Ik8EeKFM65BLOHaHw">
        <structuredNode xmi:id="_k-dS0Ik8EeKFM65BLOHaHw" name="Body(Expressions_Assignment$initialization$1)">
          <node xmi:type="uml:ReadSelfAction" xmi:id="_k-dS0Yk8EeKFM65BLOHaHw" name="ReadSelf">
            <result xmi:id="_k-dS0ok8EeKFM65BLOHaHw" name="ReadSelf.result" outgoing="_k-d50Ik8EeKFM65BLOHaHw" type="_k-WlAIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-dS04k8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dS1Ik8EeKFM65BLOHaHw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_k-dS1Yk8EeKFM65BLOHaHw" name="Fork(ReadSelf.result)" outgoing="_k-d50Yk8EeKFM65BLOHaHw _k-d50ok8EeKFM65BLOHaHw" incoming="_k-d50Ik8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-dS1ok8EeKFM65BLOHaHw" name="Initialization" incoming="_k-d52Ik8EeKFM65BLOHaHw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-dS14k8EeKFM65BLOHaHw" name="Set(initializationFlag)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-dS2Ik8EeKFM65BLOHaHw" name="Value(true)">
                <result xmi:id="_k-dS2Yk8EeKFM65BLOHaHw" name="Value(true).result" outgoing="_k-dS54k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-dS2ok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dS24k8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_k-dS3Ik8EeKFM65BLOHaHw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_k-dS3Yk8EeKFM65BLOHaHw" name="Write(Expressions_Assignment$initializationFlag$1)" structuralFeature="_k-WlBok8EeKFM65BLOHaHw" isReplaceAll="true">
                <object xmi:id="_k-dS3ok8EeKFM65BLOHaHw" name="Write(Expressions_Assignment$initializationFlag$1).object" incoming="_k-d50Yk8EeKFM65BLOHaHw" type="_k-WlAIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-dS34k8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dS4Ik8EeKFM65BLOHaHw" value="1"/>
                </object>
                <result xmi:id="_k-dS4Yk8EeKFM65BLOHaHw" name="Write(Expressions_Assignment$initializationFlag$1).result" type="_k-WlAIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-dS4ok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dS44k8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:id="_k-dS5Ik8EeKFM65BLOHaHw" name="Write(Expressions_Assignment$initializationFlag$1).value" incoming="_k-dS54k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-dS5Yk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dS5ok8EeKFM65BLOHaHw" value="1"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_k-dS54k8EeKFM65BLOHaHw" source="_k-dS2Yk8EeKFM65BLOHaHw" target="_k-dS5Ik8EeKFM65BLOHaHw"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_k-dS6Ik8EeKFM65BLOHaHw" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_k-WlBok8EeKFM65BLOHaHw">
            <object xmi:id="_k-dS6Yk8EeKFM65BLOHaHw" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_k-d50ok8EeKFM65BLOHaHw" type="_k-WlAIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-dS6ok8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dS64k8EeKFM65BLOHaHw" value="1"/>
            </object>
            <result xmi:id="_k-dS7Ik8EeKFM65BLOHaHw" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_k-d504k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-dS7Yk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dS7ok8EeKFM65BLOHaHw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-dS74k8EeKFM65BLOHaHw" name="Call(ListSize)">
            <argument xmi:id="_k-dS8Ik8EeKFM65BLOHaHw" name="Call(ListSize).argument(list)" incoming="_k-d504k8EeKFM65BLOHaHw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-dS8Yk8EeKFM65BLOHaHw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dS8ok8EeKFM65BLOHaHw" value="*"/>
            </argument>
            <result xmi:id="_k-dS84k8EeKFM65BLOHaHw" name="Call(ListSize).result(result)" outgoing="_k-d51Ik8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-dS9Ik8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-dS9Yk8EeKFM65BLOHaHw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-dS9ok8EeKFM65BLOHaHw" name="Value(0)">
            <result xmi:id="_k-d5wIk8EeKFM65BLOHaHw" name="Value(0).result" outgoing="_k-d51Yk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-d5wYk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-d5wok8EeKFM65BLOHaHw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_k-d5w4k8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_k-d5xIk8EeKFM65BLOHaHw" name="Test(Size==0)">
            <first xmi:id="_k-d5xYk8EeKFM65BLOHaHw" name="Test(Size==0).first" incoming="_k-d51Ik8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-d5xok8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-d5x4k8EeKFM65BLOHaHw" value="1"/>
            </first>
            <result xmi:id="_k-d5yIk8EeKFM65BLOHaHw" name="Test(Size==0).result" outgoing="_k-d514k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-d5yYk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-d5yok8EeKFM65BLOHaHw" value="1"/>
            </result>
            <second xmi:id="_k-d5y4k8EeKFM65BLOHaHw" name="Test(Size==0).second" incoming="_k-d51Yk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-d5zIk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-d5zYk8EeKFM65BLOHaHw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_k-d5zok8EeKFM65BLOHaHw" name="InitialNode" outgoing="_k-d51ok8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_k-d5z4k8EeKFM65BLOHaHw" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" outgoing="_k-d52Ik8EeKFM65BLOHaHw" incoming="_k-d51ok8EeKFM65BLOHaHw _k-d514k8EeKFM65BLOHaHw" decisionInputFlow="_k-d514k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d50Ik8EeKFM65BLOHaHw" source="_k-dS0ok8EeKFM65BLOHaHw" target="_k-dS1Yk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d50Yk8EeKFM65BLOHaHw" source="_k-dS1Yk8EeKFM65BLOHaHw" target="_k-dS3ok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d50ok8EeKFM65BLOHaHw" source="_k-dS1Yk8EeKFM65BLOHaHw" target="_k-dS6Yk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d504k8EeKFM65BLOHaHw" source="_k-dS7Ik8EeKFM65BLOHaHw" target="_k-dS8Ik8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d51Ik8EeKFM65BLOHaHw" source="_k-dS84k8EeKFM65BLOHaHw" target="_k-d5xYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d51Yk8EeKFM65BLOHaHw" source="_k-d5wIk8EeKFM65BLOHaHw" target="_k-d5y4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-d51ok8EeKFM65BLOHaHw" source="_k-d5zok8EeKFM65BLOHaHw" target="_k-d5z4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d514k8EeKFM65BLOHaHw" source="_k-d5yIk8EeKFM65BLOHaHw" target="_k-d5z4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-d52Ik8EeKFM65BLOHaHw" source="_k-d5z4k8EeKFM65BLOHaHw" target="_k-dS1ok8EeKFM65BLOHaHw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_k-d52Yk8EeKFM65BLOHaHw" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_k-d52ok8EeKFM65BLOHaHw" name="Expressions_Assignment$initialization$1" visibility="protected" method="_k-dSz4k8EeKFM65BLOHaHw"/>
      <ownedOperation xmi:id="_k-d524k8EeKFM65BLOHaHw" name="test" visibility="public" method="_k-XzTok8EeKFM65BLOHaHw">
        <ownedParameter xmi:id="_k-d53Ik8EeKFM65BLOHaHw" name="i" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-d53Yk8EeKFM65BLOHaHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-d53ok8EeKFM65BLOHaHw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_k-d534k8EeKFM65BLOHaHw" name="f" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-d54Ik8EeKFM65BLOHaHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-d54Yk8EeKFM65BLOHaHw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_k-d54ok8EeKFM65BLOHaHw" name="h" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-d544k8EeKFM65BLOHaHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-d55Ik8EeKFM65BLOHaHw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_k-d55Yk8EeKFM65BLOHaHw" name="filename" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-d55ok8EeKFM65BLOHaHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-d554k8EeKFM65BLOHaHw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_k-d56Ik8EeKFM65BLOHaHw" name="a" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-d56Yk8EeKFM65BLOHaHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-d56ok8EeKFM65BLOHaHw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_k-d564k8EeKFM65BLOHaHw" name="Expressions_Assignment" visibility="package" method="_k-cry4k8EeKFM65BLOHaHw">
        <ownedParameter xmi:id="_k-d57Ik8EeKFM65BLOHaHw" name="" visibility="package" type="_k-WlAIk8EeKFM65BLOHaHw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-d57Yk8EeKFM65BLOHaHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-d57ok8EeKFM65BLOHaHw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_k-d574k8EeKFM65BLOHaHw" name="destroy" visibility="package" method="_k-dSzYk8EeKFM65BLOHaHw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_k-d58Ik8EeKFM65BLOHaHw" name="AssertEqual" group="_k-eg2Ik8EeKFM65BLOHaHw" node="_k-eg0ok8EeKFM65BLOHaHw _k-eg04k8EeKFM65BLOHaHw _k-eg1Ik8EeKFM65BLOHaHw _k-eg1Yk8EeKFM65BLOHaHw _k-eg1ok8EeKFM65BLOHaHw _k-eg14k8EeKFM65BLOHaHw _k-eg2Ik8EeKFM65BLOHaHw">
      <packageImport xmi:id="_k-d58Yk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_k-d58ok8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_k-d584k8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_k-d59Ik8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_k-d59Yk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_k-d59ok8EeKFM65BLOHaHw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-d594k8EeKFM65BLOHaHw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-d5-Ik8EeKFM65BLOHaHw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_k-d5-Yk8EeKFM65BLOHaHw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-d5-ok8EeKFM65BLOHaHw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-d5-4k8EeKFM65BLOHaHw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_k-d5_Ik8EeKFM65BLOHaHw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-d5_Yk8EeKFM65BLOHaHw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-d5_ok8EeKFM65BLOHaHw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d5_4k8EeKFM65BLOHaHw" source="_k-eg0ok8EeKFM65BLOHaHw" target="_k-eg04k8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d6AIk8EeKFM65BLOHaHw" source="_k-eg1Ik8EeKFM65BLOHaHw" target="_k-eg1Yk8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d6AYk8EeKFM65BLOHaHw" source="_k-eg1ok8EeKFM65BLOHaHw" target="_k-eg14k8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d6Aok8EeKFM65BLOHaHw" source="_k-eg1Yk8EeKFM65BLOHaHw" target="_k-eg5Ik8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d6A4k8EeKFM65BLOHaHw" source="_k-eg14k8EeKFM65BLOHaHw" target="_k-eg7Ik8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d6BIk8EeKFM65BLOHaHw" source="_k-eg04k8EeKFM65BLOHaHw" target="_k-fH5Ik8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-d6BYk8EeKFM65BLOHaHw" source="_k-eg14k8EeKFM65BLOHaHw" target="_k-fIBYk8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-eg0Ik8EeKFM65BLOHaHw" source="_k-eg14k8EeKFM65BLOHaHw" target="_k-fII4k8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-eg0Yk8EeKFM65BLOHaHw" source="_k-eg14k8EeKFM65BLOHaHw" target="_k-fvDIk8EeKFM65BLOHaHw"/>
      <structuredNode xmi:id="_k-eg2Ik8EeKFM65BLOHaHw" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_k-eg2Yk8EeKFM65BLOHaHw" name="IfStatement@53c8bb96">
          <node xmi:type="uml:TestIdentityAction" xmi:id="_k-eg2ok8EeKFM65BLOHaHw" name="Test(==)" incoming="_k-gWAIk8EeKFM65BLOHaHw">
            <first xmi:id="_k-eg24k8EeKFM65BLOHaHw" name="Test(==).first" incoming="_k-fvM4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-eg3Ik8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-eg3Yk8EeKFM65BLOHaHw" value="1"/>
            </first>
            <result xmi:id="_k-eg3ok8EeKFM65BLOHaHw" name="Test(==).result" outgoing="_k-gWCok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-eg34k8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-eg4Ik8EeKFM65BLOHaHw" value="1"/>
            </result>
            <second xmi:id="_k-eg4Yk8EeKFM65BLOHaHw" name="Test(==).second" incoming="_k-fvNYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-eg4ok8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-eg44k8EeKFM65BLOHaHw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_k-eg5Ik8EeKFM65BLOHaHw" name="Fork(Fork(value1))" outgoing="_k-fvM4k8EeKFM65BLOHaHw _k-fvNIk8EeKFM65BLOHaHw" incoming="_k-d6Aok8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-eg5Yk8EeKFM65BLOHaHw" name="Call(NotEmpty)">
            <argument xmi:id="_k-eg5ok8EeKFM65BLOHaHw" name="Call(NotEmpty).argument(seq)" incoming="_k-fvNIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-eg54k8EeKFM65BLOHaHw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-eg6Ik8EeKFM65BLOHaHw" value="*"/>
            </argument>
            <result xmi:id="_k-eg6Yk8EeKFM65BLOHaHw" name="Call(NotEmpty).result()" outgoing="_k-fvN4k8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-eg6ok8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-eg64k8EeKFM65BLOHaHw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_k-eg7Ik8EeKFM65BLOHaHw" name="Fork(Fork(value2))" outgoing="_k-fvNYk8EeKFM65BLOHaHw _k-fvNok8EeKFM65BLOHaHw" incoming="_k-d6A4k8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-eg7Yk8EeKFM65BLOHaHw" name="Call(NotEmpty)">
            <argument xmi:id="_k-eg7ok8EeKFM65BLOHaHw" name="Call(NotEmpty).argument(seq)" incoming="_k-fvNok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-eg74k8EeKFM65BLOHaHw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-eg8Ik8EeKFM65BLOHaHw" value="*"/>
            </argument>
            <result xmi:id="_k-eg8Yk8EeKFM65BLOHaHw" name="Call(NotEmpty).result()" outgoing="_k-fvOIk8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-eg8ok8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-eg84k8EeKFM65BLOHaHw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_k-eg9Ik8EeKFM65BLOHaHw" name="Initial(Test(==))" outgoing="_k-gWBIk8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_k-eg9Yk8EeKFM65BLOHaHw" name="Fork(Call(NotEmpty).result())" outgoing="_k-fvOYk8EeKFM65BLOHaHw _k-gWBYk8EeKFM65BLOHaHw" incoming="_k-fvN4k8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_k-eg9ok8EeKFM65BLOHaHw" name="Fork(Call(NotEmpty).result())" outgoing="_k-fvOok8EeKFM65BLOHaHw _k-fvO4k8EeKFM65BLOHaHw" incoming="_k-fvOIk8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-eg94k8EeKFM65BLOHaHw" name="Call(Not)" incoming="_k-gWAok8EeKFM65BLOHaHw">
            <argument xmi:id="_k-eg-Ik8EeKFM65BLOHaHw" name="Call(Not).argument(x)" incoming="_k-fvOYk8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-eg-Yk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-eg-ok8EeKFM65BLOHaHw" value="1"/>
            </argument>
            <result xmi:id="_k-eg-4k8EeKFM65BLOHaHw" name="Call(Not).result(result)" outgoing="_k-gWC4k8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-eg_Ik8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-eg_Yk8EeKFM65BLOHaHw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-eg_ok8EeKFM65BLOHaHw" name="Call(Not)" incoming="_k-gWCIk8EeKFM65BLOHaHw">
            <argument xmi:id="_k-eg_4k8EeKFM65BLOHaHw" name="Call(Not).argument(x)" incoming="_k-fvOok8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ehAIk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ehAYk8EeKFM65BLOHaHw" value="1"/>
            </argument>
            <result xmi:id="_k-ehAok8EeKFM65BLOHaHw" name="Call(Not).result(result)" outgoing="_k-gWDIk8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ehA4k8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ehBIk8EeKFM65BLOHaHw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_k-ehBYk8EeKFM65BLOHaHw" name="Decision(Call(NotEmpty).result())" outgoing="_k-gWAIk8EeKFM65BLOHaHw _k-gWAok8EeKFM65BLOHaHw" incoming="_k-fvO4k8EeKFM65BLOHaHw _k-gWBok8EeKFM65BLOHaHw" decisionInputFlow="_k-fvO4k8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_k-ehBok8EeKFM65BLOHaHw" name="Decision(Call(NotEmpty).result())" outgoing="_k-gWBok8EeKFM65BLOHaHw _k-gWCIk8EeKFM65BLOHaHw" incoming="_k-gWBIk8EeKFM65BLOHaHw _k-gWBYk8EeKFM65BLOHaHw" decisionInputFlow="_k-gWBYk8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_k-ehB4k8EeKFM65BLOHaHw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" outgoing="_k-gWDYk8EeKFM65BLOHaHw" incoming="_k-gWCok8EeKFM65BLOHaHw _k-gWC4k8EeKFM65BLOHaHw _k-gWDIk8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-ehCIk8EeKFM65BLOHaHw" name="Call(Not)">
            <argument xmi:id="_k-ehCYk8EeKFM65BLOHaHw" name="Call(Not).argument(x)" incoming="_k-gWDYk8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ehCok8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ehC4k8EeKFM65BLOHaHw" value="1"/>
            </argument>
            <result xmi:id="_k-ehDIk8EeKFM65BLOHaHw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ehDYk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ehDok8EeKFM65BLOHaHw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-ehD4k8EeKFM65BLOHaHw" name="ExpressionStatement@8be912" outgoing="_k-gWDok8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-ehEIk8EeKFM65BLOHaHw" name="Call(Write)" incoming="_k-fH_Yk8EeKFM65BLOHaHw" behavior="_k-g9L4k8EeKFM65BLOHaHw">
              <argument xmi:id="_k-ehEYk8EeKFM65BLOHaHw" name="Call(Write).argument(value)" incoming="_k-fH_Ik8EeKFM65BLOHaHw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ehEok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ehE4k8EeKFM65BLOHaHw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-ehFIk8EeKFM65BLOHaHw" name="Tuple@332437f7" outgoing="_k-fH_Yk8EeKFM65BLOHaHw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-ehFYk8EeKFM65BLOHaHw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_k-ehFok8EeKFM65BLOHaHw" name="Value(&quot;FAILED: &quot;).result" outgoing="_k-fH-Yk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-ehF4k8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-ehGIk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_k-ehGYk8EeKFM65BLOHaHw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-fH4Ik8EeKFM65BLOHaHw" name="Call(Concat)">
                <argument xmi:id="_k-fH4Yk8EeKFM65BLOHaHw" name="Call(Concat).argument(x)" incoming="_k-fH-Yk8EeKFM65BLOHaHw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fH4ok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fH44k8EeKFM65BLOHaHw" value="1"/>
                </argument>
                <argument xmi:id="_k-fH5Ik8EeKFM65BLOHaHw" name="Call(Concat).argument(y)" incoming="_k-d6BIk8EeKFM65BLOHaHw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fH5Yk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fH5ok8EeKFM65BLOHaHw" value="1"/>
                </argument>
                <result xmi:id="_k-fH54k8EeKFM65BLOHaHw" name="Call(Concat).result(result)" outgoing="_k-fH-ok8EeKFM65BLOHaHw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fH6Ik8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fH6Yk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-fH6ok8EeKFM65BLOHaHw" name="Value(&quot;==&quot;)">
                <result xmi:id="_k-fH64k8EeKFM65BLOHaHw" name="Value(&quot;==&quot;).result" outgoing="_k-fH-4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fH7Ik8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fH7Yk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_k-fH7ok8EeKFM65BLOHaHw" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-fH74k8EeKFM65BLOHaHw" name="Call(Concat)">
                <argument xmi:id="_k-fH8Ik8EeKFM65BLOHaHw" name="Call(Concat).argument(x)" incoming="_k-fH-ok8EeKFM65BLOHaHw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fH8Yk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fH8ok8EeKFM65BLOHaHw" value="1"/>
                </argument>
                <argument xmi:id="_k-fH84k8EeKFM65BLOHaHw" name="Call(Concat).argument(y)" incoming="_k-fH-4k8EeKFM65BLOHaHw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fH9Ik8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fH9Yk8EeKFM65BLOHaHw" value="1"/>
                </argument>
                <result xmi:id="_k-fH9ok8EeKFM65BLOHaHw" name="Call(Concat).result(result)" outgoing="_k-fH_Ik8EeKFM65BLOHaHw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fH94k8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fH-Ik8EeKFM65BLOHaHw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fH-Yk8EeKFM65BLOHaHw" source="_k-ehFok8EeKFM65BLOHaHw" target="_k-fH4Yk8EeKFM65BLOHaHw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fH-ok8EeKFM65BLOHaHw" source="_k-fH54k8EeKFM65BLOHaHw" target="_k-fH8Ik8EeKFM65BLOHaHw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fH-4k8EeKFM65BLOHaHw" source="_k-fH64k8EeKFM65BLOHaHw" target="_k-fH84k8EeKFM65BLOHaHw"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fH_Ik8EeKFM65BLOHaHw" source="_k-fH9ok8EeKFM65BLOHaHw" target="_k-ehEYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_k-fH_Yk8EeKFM65BLOHaHw" source="_k-ehFIk8EeKFM65BLOHaHw" target="_k-ehEIk8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-fH_ok8EeKFM65BLOHaHw" name="ExpressionStatement@5c58c90f" outgoing="_k-gWD4k8EeKFM65BLOHaHw" incoming="_k-gWDok8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-fH_4k8EeKFM65BLOHaHw" name="Call(Write)" incoming="_k-fvHYk8EeKFM65BLOHaHw" behavior="_k-g9L4k8EeKFM65BLOHaHw">
              <argument xmi:id="_k-fIAIk8EeKFM65BLOHaHw" name="Call(Write).argument(value)" incoming="_k-fvHIk8EeKFM65BLOHaHw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fIAYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fIAok8EeKFM65BLOHaHw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-fIA4k8EeKFM65BLOHaHw" name="Tuple@5becf473" outgoing="_k-fvHYk8EeKFM65BLOHaHw">
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_k-fIBIk8EeKFM65BLOHaHw" name="ReadIsClassifiedObject(String)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_k-fIBYk8EeKFM65BLOHaHw" name="ReadIsClassifiedObject(String).object" incoming="_k-d6BYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fIBok8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fIB4k8EeKFM65BLOHaHw" value="1"/>
                </object>
                <result xmi:id="_k-fICIk8EeKFM65BLOHaHw" name="ReadIsClassifiedObject(String).result" outgoing="_k-fvFYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fICYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fICok8EeKFM65BLOHaHw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-fIC4k8EeKFM65BLOHaHw" name="ConditionalTestExpression@5e7ed263.operand2" incoming="_k-fvFok8EeKFM65BLOHaHw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-fIDIk8EeKFM65BLOHaHw" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_k-fIDYk8EeKFM65BLOHaHw" name="Value(&quot;&quot;&quot;).result" outgoing="_k-fvBok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fIDok8EeKFM65BLOHaHw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fID4k8EeKFM65BLOHaHw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_k-fIEIk8EeKFM65BLOHaHw" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_k-fIEYk8EeKFM65BLOHaHw" name="CastExpression@22f573e3" mode="parallel" outputElement="_k-fIJIk8EeKFM65BLOHaHw" inputElement="_k-fII4k8EeKFM65BLOHaHw">
                  <node xmi:type="uml:MergeNode" xmi:id="_k-fIEok8EeKFM65BLOHaHw" name="Merge(CastExpression@22f573e3.operand)" outgoing="_k-fIIok8EeKFM65BLOHaHw" incoming="_k-fIH4k8EeKFM65BLOHaHw"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_k-fIE4k8EeKFM65BLOHaHw" name="ReadIsClassifiedObject(String)">
                    <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <object xmi:id="_k-fIFIk8EeKFM65BLOHaHw" name="ReadIsClassifiedObject(String).object" incoming="_k-fIHIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fIFYk8EeKFM65BLOHaHw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fIFok8EeKFM65BLOHaHw" value="1"/>
                    </object>
                    <result xmi:id="_k-fIF4k8EeKFM65BLOHaHw" name="ReadIsClassifiedObject(String).result" outgoing="_k-fIHok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fIGIk8EeKFM65BLOHaHw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fIGYk8EeKFM65BLOHaHw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_k-fIGok8EeKFM65BLOHaHw" name="Fork(ReadIsClassifiedObject(String).object)" outgoing="_k-fIHIk8EeKFM65BLOHaHw _k-fIHYk8EeKFM65BLOHaHw" incoming="_k-fIIYk8EeKFM65BLOHaHw"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_k-fIG4k8EeKFM65BLOHaHw" name="Decision(ReadIsClassifiedObject(String).result)" outgoing="_k-fIH4k8EeKFM65BLOHaHw" incoming="_k-fIHYk8EeKFM65BLOHaHw _k-fIHok8EeKFM65BLOHaHw" decisionInputFlow="_k-fIHok8EeKFM65BLOHaHw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fIHIk8EeKFM65BLOHaHw" source="_k-fIGok8EeKFM65BLOHaHw" target="_k-fIFIk8EeKFM65BLOHaHw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fIHYk8EeKFM65BLOHaHw" source="_k-fIGok8EeKFM65BLOHaHw" target="_k-fIG4k8EeKFM65BLOHaHw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fIHok8EeKFM65BLOHaHw" source="_k-fIF4k8EeKFM65BLOHaHw" target="_k-fIG4k8EeKFM65BLOHaHw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fIH4k8EeKFM65BLOHaHw" source="_k-fIG4k8EeKFM65BLOHaHw" target="_k-fIEok8EeKFM65BLOHaHw">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_k-fIIIk8EeKFM65BLOHaHw" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fIIYk8EeKFM65BLOHaHw" source="_k-fII4k8EeKFM65BLOHaHw" target="_k-fIGok8EeKFM65BLOHaHw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fIIok8EeKFM65BLOHaHw" source="_k-fIEok8EeKFM65BLOHaHw" target="_k-fIJIk8EeKFM65BLOHaHw"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_k-fII4k8EeKFM65BLOHaHw" name="CastExpression@22f573e3.inputElement" outgoing="_k-fIIYk8EeKFM65BLOHaHw" incoming="_k-eg0Ik8EeKFM65BLOHaHw" regionAsInput="_k-fIEYk8EeKFM65BLOHaHw"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_k-fIJIk8EeKFM65BLOHaHw" name="CastExpression@22f573e3.outputElement" outgoing="_k-fvB4k8EeKFM65BLOHaHw" incoming="_k-fIIok8EeKFM65BLOHaHw" regionAsOutput="_k-fIEYk8EeKFM65BLOHaHw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-fIJYk8EeKFM65BLOHaHw" name="Call(Concat)">
                  <argument xmi:id="_k-fIJok8EeKFM65BLOHaHw" name="Call(Concat).argument(x)" incoming="_k-fvBok8EeKFM65BLOHaHw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fIJ4k8EeKFM65BLOHaHw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fIKIk8EeKFM65BLOHaHw" value="1"/>
                  </argument>
                  <argument xmi:id="_k-fIKYk8EeKFM65BLOHaHw" name="Call(Concat).argument(y)" incoming="_k-fvB4k8EeKFM65BLOHaHw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fIKok8EeKFM65BLOHaHw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fu8Ik8EeKFM65BLOHaHw" value="1"/>
                  </argument>
                  <result xmi:id="_k-fu8Yk8EeKFM65BLOHaHw" name="Call(Concat).result(result)" outgoing="_k-fvCIk8EeKFM65BLOHaHw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fu8ok8EeKFM65BLOHaHw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fu84k8EeKFM65BLOHaHw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-fu9Ik8EeKFM65BLOHaHw" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_k-fu9Yk8EeKFM65BLOHaHw" name="Value(&quot;&quot;&quot;).result" outgoing="_k-fvCYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fu9ok8EeKFM65BLOHaHw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fu94k8EeKFM65BLOHaHw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_k-fu-Ik8EeKFM65BLOHaHw" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-fu-Yk8EeKFM65BLOHaHw" name="Call(Concat)">
                  <argument xmi:id="_k-fu-ok8EeKFM65BLOHaHw" name="Call(Concat).argument(x)" incoming="_k-fvCIk8EeKFM65BLOHaHw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fu-4k8EeKFM65BLOHaHw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fu_Ik8EeKFM65BLOHaHw" value="1"/>
                  </argument>
                  <argument xmi:id="_k-fu_Yk8EeKFM65BLOHaHw" name="Call(Concat).argument(y)" incoming="_k-fvCYk8EeKFM65BLOHaHw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fu_ok8EeKFM65BLOHaHw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fu_4k8EeKFM65BLOHaHw" value="1"/>
                  </argument>
                  <result xmi:id="_k-fvAIk8EeKFM65BLOHaHw" name="Call(Concat).result(result)" outgoing="_k-fvCok8EeKFM65BLOHaHw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fvAYk8EeKFM65BLOHaHw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fvAok8EeKFM65BLOHaHw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <structuredNodeOutput xmi:id="_k-fvA4k8EeKFM65BLOHaHw" name="ConditionalTestExpression@5e7ed263.operand2.result" outgoing="_k-fvGok8EeKFM65BLOHaHw" incoming="_k-fvCok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fvBIk8EeKFM65BLOHaHw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fvBYk8EeKFM65BLOHaHw" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvBok8EeKFM65BLOHaHw" source="_k-fIDYk8EeKFM65BLOHaHw" target="_k-fIJok8EeKFM65BLOHaHw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvB4k8EeKFM65BLOHaHw" source="_k-fIJIk8EeKFM65BLOHaHw" target="_k-fIKYk8EeKFM65BLOHaHw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvCIk8EeKFM65BLOHaHw" source="_k-fu8Yk8EeKFM65BLOHaHw" target="_k-fu-ok8EeKFM65BLOHaHw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvCYk8EeKFM65BLOHaHw" source="_k-fu9Yk8EeKFM65BLOHaHw" target="_k-fu_Yk8EeKFM65BLOHaHw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvCok8EeKFM65BLOHaHw" source="_k-fvAIk8EeKFM65BLOHaHw" target="_k-fvA4k8EeKFM65BLOHaHw"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-fvC4k8EeKFM65BLOHaHw" name="ConditionalTestExpression@5e7ed263.operand3" incoming="_k-fvGIk8EeKFM65BLOHaHw">
                <node xmi:type="uml:MergeNode" xmi:id="_k-fvDIk8EeKFM65BLOHaHw" name="Merge(Fork(value2))" outgoing="_k-fvEIk8EeKFM65BLOHaHw" incoming="_k-eg0Yk8EeKFM65BLOHaHw"/>
                <structuredNodeOutput xmi:id="_k-fvDYk8EeKFM65BLOHaHw" name="ConditionalTestExpression@5e7ed263.operand3.result" outgoing="_k-fvG4k8EeKFM65BLOHaHw" incoming="_k-fvEIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fvDok8EeKFM65BLOHaHw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fvD4k8EeKFM65BLOHaHw" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvEIk8EeKFM65BLOHaHw" source="_k-fvDIk8EeKFM65BLOHaHw" target="_k-fvDYk8EeKFM65BLOHaHw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_k-fvEYk8EeKFM65BLOHaHw" name="Initial(ConditionalTestExpression@5e7ed263)" outgoing="_k-fvFIk8EeKFM65BLOHaHw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_k-fvEok8EeKFM65BLOHaHw" name="Decision(ConditionalTestExpression@5e7ed263)" outgoing="_k-fvFok8EeKFM65BLOHaHw _k-fvGIk8EeKFM65BLOHaHw" incoming="_k-fvFIk8EeKFM65BLOHaHw _k-fvFYk8EeKFM65BLOHaHw" decisionInputFlow="_k-fvFYk8EeKFM65BLOHaHw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_k-fvE4k8EeKFM65BLOHaHw" name="Merge(ConditionalTestExpression@5e7ed263.result)" outgoing="_k-fvHIk8EeKFM65BLOHaHw" incoming="_k-fvGok8EeKFM65BLOHaHw _k-fvG4k8EeKFM65BLOHaHw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_k-fvFIk8EeKFM65BLOHaHw" source="_k-fvEYk8EeKFM65BLOHaHw" target="_k-fvEok8EeKFM65BLOHaHw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvFYk8EeKFM65BLOHaHw" source="_k-fICIk8EeKFM65BLOHaHw" target="_k-fvEok8EeKFM65BLOHaHw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_k-fvFok8EeKFM65BLOHaHw" source="_k-fvEok8EeKFM65BLOHaHw" target="_k-fIC4k8EeKFM65BLOHaHw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_k-fvF4k8EeKFM65BLOHaHw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_k-fvGIk8EeKFM65BLOHaHw" source="_k-fvEok8EeKFM65BLOHaHw" target="_k-fvC4k8EeKFM65BLOHaHw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_k-fvGYk8EeKFM65BLOHaHw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvGok8EeKFM65BLOHaHw" source="_k-fvA4k8EeKFM65BLOHaHw" target="_k-fvE4k8EeKFM65BLOHaHw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvG4k8EeKFM65BLOHaHw" source="_k-fvDYk8EeKFM65BLOHaHw" target="_k-fvE4k8EeKFM65BLOHaHw"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvHIk8EeKFM65BLOHaHw" source="_k-fvE4k8EeKFM65BLOHaHw" target="_k-fIAIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_k-fvHYk8EeKFM65BLOHaHw" source="_k-fIA4k8EeKFM65BLOHaHw" target="_k-fH_4k8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-fvHok8EeKFM65BLOHaHw" name="ExpressionStatement@4bffc401" incoming="_k-gWD4k8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-fvH4k8EeKFM65BLOHaHw" name="Call(WriteLine)" incoming="_k-fvLYk8EeKFM65BLOHaHw">
              <argument xmi:id="_k-fvIIk8EeKFM65BLOHaHw" name="Call(WriteLine).argument(value)" incoming="_k-fvLIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fvIYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fvIok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-fvI4k8EeKFM65BLOHaHw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fvJIk8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fvJYk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-fvJok8EeKFM65BLOHaHw" name="Tuple@22784c30" outgoing="_k-fvLYk8EeKFM65BLOHaHw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-fvJ4k8EeKFM65BLOHaHw" name="Value(&quot;&quot;)">
                <result xmi:id="_k-fvKIk8EeKFM65BLOHaHw" name="Value(&quot;&quot;).result" outgoing="_k-fvLIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fvKYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fvKok8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_k-fvK4k8EeKFM65BLOHaHw" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvLIk8EeKFM65BLOHaHw" source="_k-fvKIk8EeKFM65BLOHaHw" target="_k-fvIIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_k-fvLYk8EeKFM65BLOHaHw" source="_k-fvJok8EeKFM65BLOHaHw" target="_k-fvH4k8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-fvLok8EeKFM65BLOHaHw" name="Value(true)">
            <result xmi:id="_k-fvL4k8EeKFM65BLOHaHw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-fvMIk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-fvMYk8EeKFM65BLOHaHw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_k-fvMok8EeKFM65BLOHaHw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvM4k8EeKFM65BLOHaHw" source="_k-eg5Ik8EeKFM65BLOHaHw" target="_k-eg24k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvNIk8EeKFM65BLOHaHw" source="_k-eg5Ik8EeKFM65BLOHaHw" target="_k-eg5ok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvNYk8EeKFM65BLOHaHw" source="_k-eg7Ik8EeKFM65BLOHaHw" target="_k-eg4Yk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvNok8EeKFM65BLOHaHw" source="_k-eg7Ik8EeKFM65BLOHaHw" target="_k-eg7ok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvN4k8EeKFM65BLOHaHw" source="_k-eg6Yk8EeKFM65BLOHaHw" target="_k-eg9Yk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvOIk8EeKFM65BLOHaHw" source="_k-eg8Yk8EeKFM65BLOHaHw" target="_k-eg9ok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvOYk8EeKFM65BLOHaHw" source="_k-eg9Yk8EeKFM65BLOHaHw" target="_k-eg-Ik8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvOok8EeKFM65BLOHaHw" source="_k-eg9ok8EeKFM65BLOHaHw" target="_k-eg_4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-fvO4k8EeKFM65BLOHaHw" source="_k-eg9ok8EeKFM65BLOHaHw" target="_k-ehBYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-gWAIk8EeKFM65BLOHaHw" source="_k-ehBYk8EeKFM65BLOHaHw" target="_k-eg2ok8EeKFM65BLOHaHw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_k-gWAYk8EeKFM65BLOHaHw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-gWAok8EeKFM65BLOHaHw" source="_k-ehBYk8EeKFM65BLOHaHw" target="_k-eg94k8EeKFM65BLOHaHw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_k-gWA4k8EeKFM65BLOHaHw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-gWBIk8EeKFM65BLOHaHw" source="_k-eg9Ik8EeKFM65BLOHaHw" target="_k-ehBok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-gWBYk8EeKFM65BLOHaHw" source="_k-eg9Yk8EeKFM65BLOHaHw" target="_k-ehBok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-gWBok8EeKFM65BLOHaHw" source="_k-ehBok8EeKFM65BLOHaHw" target="_k-ehBYk8EeKFM65BLOHaHw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_k-gWB4k8EeKFM65BLOHaHw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-gWCIk8EeKFM65BLOHaHw" source="_k-ehBok8EeKFM65BLOHaHw" target="_k-eg_ok8EeKFM65BLOHaHw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_k-gWCYk8EeKFM65BLOHaHw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-gWCok8EeKFM65BLOHaHw" source="_k-eg3ok8EeKFM65BLOHaHw" target="_k-ehB4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-gWC4k8EeKFM65BLOHaHw" source="_k-eg-4k8EeKFM65BLOHaHw" target="_k-ehB4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-gWDIk8EeKFM65BLOHaHw" source="_k-ehAok8EeKFM65BLOHaHw" target="_k-ehB4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-gWDYk8EeKFM65BLOHaHw" source="_k-ehB4k8EeKFM65BLOHaHw" target="_k-ehCYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-gWDok8EeKFM65BLOHaHw" source="_k-ehD4k8EeKFM65BLOHaHw" target="_k-fH_ok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-gWD4k8EeKFM65BLOHaHw" source="_k-fH_ok8EeKFM65BLOHaHw" target="_k-fvHok8EeKFM65BLOHaHw"/>
          <clause xmi:id="_k-gWEIk8EeKFM65BLOHaHw" body="_k-ehD4k8EeKFM65BLOHaHw _k-fH_ok8EeKFM65BLOHaHw _k-fvHok8EeKFM65BLOHaHw" decider="_k-ehDIk8EeKFM65BLOHaHw" successorClause="_k-gWEYk8EeKFM65BLOHaHw" test="_k-eg2ok8EeKFM65BLOHaHw _k-eg5Yk8EeKFM65BLOHaHw _k-eg7Yk8EeKFM65BLOHaHw _k-eg94k8EeKFM65BLOHaHw _k-eg_ok8EeKFM65BLOHaHw _k-ehCIk8EeKFM65BLOHaHw"/>
          <clause xmi:id="_k-gWEYk8EeKFM65BLOHaHw" decider="_k-fvL4k8EeKFM65BLOHaHw" predecessorClause="_k-gWEIk8EeKFM65BLOHaHw" test="_k-fvLok8EeKFM65BLOHaHw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-eg0ok8EeKFM65BLOHaHw" name="Input(label)" outgoing="_k-d5_4k8EeKFM65BLOHaHw" parameter="_k-d59ok8EeKFM65BLOHaHw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_k-eg04k8EeKFM65BLOHaHw" name="Fork(label)" outgoing="_k-d6BIk8EeKFM65BLOHaHw" incoming="_k-d5_4k8EeKFM65BLOHaHw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-eg1Ik8EeKFM65BLOHaHw" name="Input(value1)" outgoing="_k-d6AIk8EeKFM65BLOHaHw" parameter="_k-d5-Yk8EeKFM65BLOHaHw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_k-eg1Yk8EeKFM65BLOHaHw" name="Fork(value1)" outgoing="_k-d6Aok8EeKFM65BLOHaHw" incoming="_k-d6AIk8EeKFM65BLOHaHw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-eg1ok8EeKFM65BLOHaHw" name="Input(value2)" outgoing="_k-d6AYk8EeKFM65BLOHaHw" parameter="_k-d5_Ik8EeKFM65BLOHaHw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_k-eg14k8EeKFM65BLOHaHw" name="Fork(value2)" outgoing="_k-d6A4k8EeKFM65BLOHaHw _k-d6BYk8EeKFM65BLOHaHw _k-eg0Ik8EeKFM65BLOHaHw _k-eg0Yk8EeKFM65BLOHaHw" incoming="_k-d6AYk8EeKFM65BLOHaHw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_k-gWEok8EeKFM65BLOHaHw" name="AssertFalse" group="_k-gWJ4k8EeKFM65BLOHaHw" node="_k-gWI4k8EeKFM65BLOHaHw _k-gWJIk8EeKFM65BLOHaHw _k-gWJYk8EeKFM65BLOHaHw _k-gWJok8EeKFM65BLOHaHw _k-gWJ4k8EeKFM65BLOHaHw">
      <elementImport xmi:id="_k-gWE4k8EeKFM65BLOHaHw" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_k-gWFIk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_k-gWFYk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_k-gWFok8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_k-gWF4k8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_k-gWGIk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_k-gWGYk8EeKFM65BLOHaHw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-gWGok8EeKFM65BLOHaHw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-gWG4k8EeKFM65BLOHaHw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_k-gWHIk8EeKFM65BLOHaHw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-gWHYk8EeKFM65BLOHaHw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-gWHok8EeKFM65BLOHaHw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-gWH4k8EeKFM65BLOHaHw" source="_k-gWI4k8EeKFM65BLOHaHw" target="_k-gWJIk8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-gWIIk8EeKFM65BLOHaHw" source="_k-gWJYk8EeKFM65BLOHaHw" target="_k-gWJok8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-gWIYk8EeKFM65BLOHaHw" source="_k-gWJIk8EeKFM65BLOHaHw" target="_k-gWOok8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-gWIok8EeKFM65BLOHaHw" source="_k-gWJok8EeKFM65BLOHaHw" target="_k-g9F4k8EeKFM65BLOHaHw"/>
      <structuredNode xmi:id="_k-gWJ4k8EeKFM65BLOHaHw" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-gWKIk8EeKFM65BLOHaHw" name="ExpressionStatement@5a17a03d">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-gWKYk8EeKFM65BLOHaHw" name="Call(AssertTrue)" incoming="_k-g9Lok8EeKFM65BLOHaHw" behavior="_k-hkMok8EeKFM65BLOHaHw">
            <argument xmi:id="_k-gWKok8EeKFM65BLOHaHw" name="Call(AssertTrue).argument(label)" incoming="_k-g9LIk8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-gWK4k8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-gWLIk8EeKFM65BLOHaHw" value="1"/>
            </argument>
            <argument xmi:id="_k-gWLYk8EeKFM65BLOHaHw" name="Call(AssertTrue).argument(condition)" incoming="_k-g9LYk8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-gWLok8EeKFM65BLOHaHw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-gWL4k8EeKFM65BLOHaHw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-gWMIk8EeKFM65BLOHaHw" name="Tuple@30e72b6c" outgoing="_k-g9Lok8EeKFM65BLOHaHw">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-gWMYk8EeKFM65BLOHaHw" name="Value(&quot;! &quot;)">
              <result xmi:id="_k-gWMok8EeKFM65BLOHaHw" name="Value(&quot;! &quot;).result" outgoing="_k-g9Iok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-gWM4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-gWNIk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_k-gWNYk8EeKFM65BLOHaHw" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-gWNok8EeKFM65BLOHaHw" name="Call(Concat)">
              <argument xmi:id="_k-gWN4k8EeKFM65BLOHaHw" name="Call(Concat).argument(x)" incoming="_k-g9Iok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-gWOIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-gWOYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <argument xmi:id="_k-gWOok8EeKFM65BLOHaHw" name="Call(Concat).argument(y)" incoming="_k-gWIYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-gWO4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-gWPIk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-gWPYk8EeKFM65BLOHaHw" name="Call(Concat).result(result)" outgoing="_k-g9LIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-gWPok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-gWP4k8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-gWQIk8EeKFM65BLOHaHw" name="Value(false)">
              <result xmi:id="_k-gWQYk8EeKFM65BLOHaHw" name="Value(false).result" outgoing="_k-g9K4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-gWQok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-gWQ4k8EeKFM65BLOHaHw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_k-gWRIk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_k-gWRYk8EeKFM65BLOHaHw" name="Test(==)">
              <first xmi:id="_k-gWRok8EeKFM65BLOHaHw" name="Test(==).first" incoming="_k-g9I4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-gWR4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-g9EIk8EeKFM65BLOHaHw" value="1"/>
              </first>
              <result xmi:id="_k-g9EYk8EeKFM65BLOHaHw" name="Test(==).result" outgoing="_k-g9Jok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-g9Eok8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-g9E4k8EeKFM65BLOHaHw" value="1"/>
              </result>
              <second xmi:id="_k-g9FIk8EeKFM65BLOHaHw" name="Test(==).second" incoming="_k-g9K4k8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-g9FYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-g9Fok8EeKFM65BLOHaHw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-g9F4k8EeKFM65BLOHaHw" name="Fork(Fork(condition))" outgoing="_k-g9I4k8EeKFM65BLOHaHw _k-g9JIk8EeKFM65BLOHaHw" incoming="_k-gWIok8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-g9GIk8EeKFM65BLOHaHw" name="Call(NotEmpty)">
              <argument xmi:id="_k-g9GYk8EeKFM65BLOHaHw" name="Call(NotEmpty).argument(seq)" incoming="_k-g9JIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-g9Gok8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-g9G4k8EeKFM65BLOHaHw" value="*"/>
              </argument>
              <result xmi:id="_k-g9HIk8EeKFM65BLOHaHw" name="Call(NotEmpty).result()" outgoing="_k-g9JYk8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-g9HYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-g9Hok8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-g9H4k8EeKFM65BLOHaHw" name="Fork(Call(NotEmpty).result())" outgoing="_k-g9J4k8EeKFM65BLOHaHw _k-g9KIk8EeKFM65BLOHaHw" incoming="_k-g9JYk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_k-g9IIk8EeKFM65BLOHaHw" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_k-g9LYk8EeKFM65BLOHaHw" incoming="_k-g9Jok8EeKFM65BLOHaHw _k-g9KYk8EeKFM65BLOHaHw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_k-g9IYk8EeKFM65BLOHaHw" name="Decision(Call(NotEmpty).result())" outgoing="_k-g9KYk8EeKFM65BLOHaHw" incoming="_k-g9J4k8EeKFM65BLOHaHw _k-g9KIk8EeKFM65BLOHaHw" decisionInputFlow="_k-g9KIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9Iok8EeKFM65BLOHaHw" source="_k-gWMok8EeKFM65BLOHaHw" target="_k-gWN4k8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9I4k8EeKFM65BLOHaHw" source="_k-g9F4k8EeKFM65BLOHaHw" target="_k-gWRok8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9JIk8EeKFM65BLOHaHw" source="_k-g9F4k8EeKFM65BLOHaHw" target="_k-g9GYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9JYk8EeKFM65BLOHaHw" source="_k-g9HIk8EeKFM65BLOHaHw" target="_k-g9H4k8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9Jok8EeKFM65BLOHaHw" source="_k-g9EYk8EeKFM65BLOHaHw" target="_k-g9IIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9J4k8EeKFM65BLOHaHw" source="_k-g9H4k8EeKFM65BLOHaHw" target="_k-g9IYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9KIk8EeKFM65BLOHaHw" source="_k-g9H4k8EeKFM65BLOHaHw" target="_k-g9IYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9KYk8EeKFM65BLOHaHw" source="_k-g9IYk8EeKFM65BLOHaHw" target="_k-g9IIk8EeKFM65BLOHaHw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_k-g9Kok8EeKFM65BLOHaHw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9K4k8EeKFM65BLOHaHw" source="_k-gWQYk8EeKFM65BLOHaHw" target="_k-g9FIk8EeKFM65BLOHaHw"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9LIk8EeKFM65BLOHaHw" source="_k-gWPYk8EeKFM65BLOHaHw" target="_k-gWKok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9LYk8EeKFM65BLOHaHw" source="_k-g9IIk8EeKFM65BLOHaHw" target="_k-gWLYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-g9Lok8EeKFM65BLOHaHw" source="_k-gWMIk8EeKFM65BLOHaHw" target="_k-gWKYk8EeKFM65BLOHaHw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-gWI4k8EeKFM65BLOHaHw" name="Input(label)" outgoing="_k-gWH4k8EeKFM65BLOHaHw" parameter="_k-gWGYk8EeKFM65BLOHaHw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_k-gWJIk8EeKFM65BLOHaHw" name="Fork(label)" outgoing="_k-gWIYk8EeKFM65BLOHaHw" incoming="_k-gWH4k8EeKFM65BLOHaHw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-gWJYk8EeKFM65BLOHaHw" name="Input(condition)" outgoing="_k-gWIIk8EeKFM65BLOHaHw" parameter="_k-gWHIk8EeKFM65BLOHaHw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_k-gWJok8EeKFM65BLOHaHw" name="Fork(condition)" outgoing="_k-gWIok8EeKFM65BLOHaHw" incoming="_k-gWIIk8EeKFM65BLOHaHw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_k-g9L4k8EeKFM65BLOHaHw" name="Write" group="_k-g9PIk8EeKFM65BLOHaHw" node="_k-g9Ook8EeKFM65BLOHaHw _k-g9O4k8EeKFM65BLOHaHw _k-g9PIk8EeKFM65BLOHaHw">
      <packageImport xmi:id="_k-g9MIk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_k-g9MYk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_k-g9Mok8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_k-g9M4k8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_k-g9NIk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_k-g9NYk8EeKFM65BLOHaHw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-g9Nok8EeKFM65BLOHaHw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-g9N4k8EeKFM65BLOHaHw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9OIk8EeKFM65BLOHaHw" source="_k-g9Ook8EeKFM65BLOHaHw" target="_k-g9O4k8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9OYk8EeKFM65BLOHaHw" source="_k-g9O4k8EeKFM65BLOHaHw" target="_k-g9SYk8EeKFM65BLOHaHw"/>
      <structuredNode xmi:id="_k-g9PIk8EeKFM65BLOHaHw" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-g9PYk8EeKFM65BLOHaHw" name="ExpressionStatement@32bf9988">
          <node xmi:type="uml:ExpansionRegion" xmi:id="_k-g9Pok8EeKFM65BLOHaHw" name="Collect(Call(write))" incoming="_k-hkMYk8EeKFM65BLOHaHw" mode="parallel" inputElement="_k-g9Tok8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallOperationAction" xmi:id="_k-g9P4k8EeKFM65BLOHaHw" name="Call(write)">
              <argument xmi:id="_k-g9QIk8EeKFM65BLOHaHw" name="Call(write).argument(value)" incoming="_k-g9TIk8EeKFM65BLOHaHw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-g9QYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-g9Qok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-g9Q4k8EeKFM65BLOHaHw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-g9RIk8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-g9RYk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <operation href="fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_k-g9Rok8EeKFM65BLOHaHw" name="Call(write).target" incoming="_k-g9TYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-g9R4k8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-g9SIk8EeKFM65BLOHaHw" value="1"/>
              </target>
            </node>
            <structuredNodeInput xmi:id="_k-g9SYk8EeKFM65BLOHaHw" name="Collect(Call(write)).input(Fork(value))" outgoing="_k-g9TIk8EeKFM65BLOHaHw" incoming="_k-g9OYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-g9Sok8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-g9S4k8EeKFM65BLOHaHw" value="1"/>
            </structuredNodeInput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9TIk8EeKFM65BLOHaHw" source="_k-g9SYk8EeKFM65BLOHaHw" target="_k-g9QIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-g9TYk8EeKFM65BLOHaHw" source="_k-g9Tok8EeKFM65BLOHaHw" target="_k-g9Rok8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_k-g9Tok8EeKFM65BLOHaHw" name="Collect(Call(write)).inputElement" outgoing="_k-g9TYk8EeKFM65BLOHaHw" incoming="_k-hkMIk8EeKFM65BLOHaHw" regionAsInput="_k-g9Pok8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-g9T4k8EeKFM65BLOHaHw" name="Feature(Call(At).result())" outgoing="_k-hkMYk8EeKFM65BLOHaHw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-g9UIk8EeKFM65BLOHaHw" name="Call(At)" incoming="_k-hkLok8EeKFM65BLOHaHw">
              <argument xmi:id="_k-g9UYk8EeKFM65BLOHaHw" name="Call(At).argument(seq)" incoming="_k-hkLIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-g9Uok8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-g9U4k8EeKFM65BLOHaHw" value="*"/>
              </argument>
              <argument xmi:id="_k-g9VIk8EeKFM65BLOHaHw" name="Call(At).argument(index)" incoming="_k-hkL4k8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-g9VYk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-g9Vok8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-g9V4k8EeKFM65BLOHaHw" name="Call(At).result()" outgoing="_k-hkMIk8EeKFM65BLOHaHw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-g9WIk8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-hkIIk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-hkIYk8EeKFM65BLOHaHw" name="Tuple@1fa817a7" outgoing="_k-hkLok8EeKFM65BLOHaHw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_k-hkIok8EeKFM65BLOHaHw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_k-hkI4k8EeKFM65BLOHaHw" name="ReadExtent(StandardOutputChannel).result" outgoing="_k-hkLIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-hkJIk8EeKFM65BLOHaHw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-hkJYk8EeKFM65BLOHaHw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-hkJok8EeKFM65BLOHaHw" name="Value(1)">
                <result xmi:id="_k-hkJ4k8EeKFM65BLOHaHw" name="Value(1).result" outgoing="_k-hkLYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-hkKIk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-hkKYk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_k-hkKok8EeKFM65BLOHaHw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_k-hkK4k8EeKFM65BLOHaHw" name="Fork(Call(At).argument(index))" outgoing="_k-hkL4k8EeKFM65BLOHaHw" incoming="_k-hkLYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-hkLIk8EeKFM65BLOHaHw" source="_k-hkI4k8EeKFM65BLOHaHw" target="_k-g9UYk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-hkLYk8EeKFM65BLOHaHw" source="_k-hkJ4k8EeKFM65BLOHaHw" target="_k-hkK4k8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_k-hkLok8EeKFM65BLOHaHw" source="_k-hkIYk8EeKFM65BLOHaHw" target="_k-g9UIk8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-hkL4k8EeKFM65BLOHaHw" source="_k-hkK4k8EeKFM65BLOHaHw" target="_k-g9VIk8EeKFM65BLOHaHw"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-hkMIk8EeKFM65BLOHaHw" source="_k-g9V4k8EeKFM65BLOHaHw" target="_k-g9Tok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_k-hkMYk8EeKFM65BLOHaHw" source="_k-g9T4k8EeKFM65BLOHaHw" target="_k-g9Pok8EeKFM65BLOHaHw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-g9Ook8EeKFM65BLOHaHw" name="Input(value)" outgoing="_k-g9OIk8EeKFM65BLOHaHw" parameter="_k-g9NYk8EeKFM65BLOHaHw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_k-g9O4k8EeKFM65BLOHaHw" name="Fork(value)" outgoing="_k-g9OYk8EeKFM65BLOHaHw" incoming="_k-g9OIk8EeKFM65BLOHaHw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_k-hkMok8EeKFM65BLOHaHw" name="AssertTrue" group="_k-hkR4k8EeKFM65BLOHaHw" node="_k-hkQ4k8EeKFM65BLOHaHw _k-hkRIk8EeKFM65BLOHaHw _k-hkRYk8EeKFM65BLOHaHw _k-hkRok8EeKFM65BLOHaHw _k-hkR4k8EeKFM65BLOHaHw">
      <elementImport xmi:id="_k-hkM4k8EeKFM65BLOHaHw" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_k-hkNIk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_k-hkNYk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_k-hkNok8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_k-hkN4k8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_k-hkOIk8EeKFM65BLOHaHw" visibility="private">
        <importedPackage href="Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_k-hkOYk8EeKFM65BLOHaHw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-hkOok8EeKFM65BLOHaHw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-hkO4k8EeKFM65BLOHaHw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_k-hkPIk8EeKFM65BLOHaHw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-hkPYk8EeKFM65BLOHaHw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-hkPok8EeKFM65BLOHaHw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-hkP4k8EeKFM65BLOHaHw" source="_k-hkQ4k8EeKFM65BLOHaHw" target="_k-hkRIk8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-hkQIk8EeKFM65BLOHaHw" source="_k-hkRYk8EeKFM65BLOHaHw" target="_k-hkRok8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-hkQYk8EeKFM65BLOHaHw" source="_k-hkRok8EeKFM65BLOHaHw" target="_k-hkWIk8EeKFM65BLOHaHw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_k-hkQok8EeKFM65BLOHaHw" source="_k-hkRIk8EeKFM65BLOHaHw" target="_k-iLQ4k8EeKFM65BLOHaHw"/>
      <structuredNode xmi:id="_k-hkR4k8EeKFM65BLOHaHw" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_k-hkSIk8EeKFM65BLOHaHw" name="IfStatement@593c7b26">
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-hkSYk8EeKFM65BLOHaHw" name="Value(true)">
            <result xmi:id="_k-hkSok8EeKFM65BLOHaHw" name="Value(true).result" outgoing="_k-iLWYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-hkS4k8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-hkTIk8EeKFM65BLOHaHw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_k-hkTYk8EeKFM65BLOHaHw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_k-hkTok8EeKFM65BLOHaHw" name="Test(==)">
            <first xmi:id="_k-hkT4k8EeKFM65BLOHaHw" name="Test(==).first" incoming="_k-iLUYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-hkUIk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-hkUYk8EeKFM65BLOHaHw" value="1"/>
            </first>
            <result xmi:id="_k-hkUok8EeKFM65BLOHaHw" name="Test(==).result" outgoing="_k-iLVIk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-hkU4k8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-hkVIk8EeKFM65BLOHaHw" value="1"/>
            </result>
            <second xmi:id="_k-hkVYk8EeKFM65BLOHaHw" name="Test(==).second" incoming="_k-iLWYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-hkVok8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-hkV4k8EeKFM65BLOHaHw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_k-hkWIk8EeKFM65BLOHaHw" name="Fork(Fork(condition))" outgoing="_k-iLUYk8EeKFM65BLOHaHw _k-iLUok8EeKFM65BLOHaHw" incoming="_k-hkQYk8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-hkWYk8EeKFM65BLOHaHw" name="Call(NotEmpty)">
            <argument xmi:id="_k-hkWok8EeKFM65BLOHaHw" name="Call(NotEmpty).argument(seq)" incoming="_k-iLUok8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-hkW4k8EeKFM65BLOHaHw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-hkXIk8EeKFM65BLOHaHw" value="*"/>
            </argument>
            <result xmi:id="_k-hkXYk8EeKFM65BLOHaHw" name="Call(NotEmpty).result()" outgoing="_k-iLU4k8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-hkXok8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-hkX4k8EeKFM65BLOHaHw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_k-hkYIk8EeKFM65BLOHaHw" name="Fork(Call(NotEmpty).result())" outgoing="_k-iLVYk8EeKFM65BLOHaHw _k-iLVok8EeKFM65BLOHaHw" incoming="_k-iLU4k8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_k-hkYYk8EeKFM65BLOHaHw" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_k-iLWok8EeKFM65BLOHaHw" incoming="_k-iLVIk8EeKFM65BLOHaHw _k-iLV4k8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_k-hkYok8EeKFM65BLOHaHw" name="Decision(Call(NotEmpty).result())" outgoing="_k-iLV4k8EeKFM65BLOHaHw" incoming="_k-iLVYk8EeKFM65BLOHaHw _k-iLVok8EeKFM65BLOHaHw" decisionInputFlow="_k-iLVok8EeKFM65BLOHaHw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-hkY4k8EeKFM65BLOHaHw" name="Call(Not)">
            <argument xmi:id="_k-hkZIk8EeKFM65BLOHaHw" name="Call(Not).argument(x)" incoming="_k-iLWok8EeKFM65BLOHaHw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-hkZYk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-hkZok8EeKFM65BLOHaHw" value="1"/>
            </argument>
            <result xmi:id="_k-hkZ4k8EeKFM65BLOHaHw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-hkaIk8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-iLMIk8EeKFM65BLOHaHw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-iLMYk8EeKFM65BLOHaHw" name="ExpressionStatement@5801b03c">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-iLMok8EeKFM65BLOHaHw" name="Call(WriteLine)" incoming="_k-iLS4k8EeKFM65BLOHaHw">
              <argument xmi:id="_k-iLM4k8EeKFM65BLOHaHw" name="Call(WriteLine).argument(value)" incoming="_k-iLSok8EeKFM65BLOHaHw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-iLNIk8EeKFM65BLOHaHw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-iLNYk8EeKFM65BLOHaHw" value="1"/>
              </argument>
              <result xmi:id="_k-iLNok8EeKFM65BLOHaHw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-iLN4k8EeKFM65BLOHaHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-iLOIk8EeKFM65BLOHaHw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_k-iLOYk8EeKFM65BLOHaHw" name="Tuple@5e3b76ea" outgoing="_k-iLS4k8EeKFM65BLOHaHw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-iLOok8EeKFM65BLOHaHw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_k-iLO4k8EeKFM65BLOHaHw" name="Value(&quot;FAILED: &quot;).result" outgoing="_k-iLSYk8EeKFM65BLOHaHw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-iLPIk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-iLPYk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_k-iLPok8EeKFM65BLOHaHw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_k-iLP4k8EeKFM65BLOHaHw" name="Call(Concat)">
                <argument xmi:id="_k-iLQIk8EeKFM65BLOHaHw" name="Call(Concat).argument(x)" incoming="_k-iLSYk8EeKFM65BLOHaHw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-iLQYk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-iLQok8EeKFM65BLOHaHw" value="1"/>
                </argument>
                <argument xmi:id="_k-iLQ4k8EeKFM65BLOHaHw" name="Call(Concat).argument(y)" incoming="_k-hkQok8EeKFM65BLOHaHw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-iLRIk8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-iLRYk8EeKFM65BLOHaHw" value="1"/>
                </argument>
                <result xmi:id="_k-iLRok8EeKFM65BLOHaHw" name="Call(Concat).result(result)" outgoing="_k-iLSok8EeKFM65BLOHaHw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-iLR4k8EeKFM65BLOHaHw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-iLSIk8EeKFM65BLOHaHw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_k-iLSYk8EeKFM65BLOHaHw" source="_k-iLO4k8EeKFM65BLOHaHw" target="_k-iLQIk8EeKFM65BLOHaHw"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_k-iLSok8EeKFM65BLOHaHw" source="_k-iLRok8EeKFM65BLOHaHw" target="_k-iLM4k8EeKFM65BLOHaHw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_k-iLS4k8EeKFM65BLOHaHw" source="_k-iLOYk8EeKFM65BLOHaHw" target="_k-iLMok8EeKFM65BLOHaHw"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_k-iLTIk8EeKFM65BLOHaHw" name="Value(true)">
            <result xmi:id="_k-iLTYk8EeKFM65BLOHaHw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k-iLTok8EeKFM65BLOHaHw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k-iLT4k8EeKFM65BLOHaHw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_k-iLUIk8EeKFM65BLOHaHw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-iLUYk8EeKFM65BLOHaHw" source="_k-hkWIk8EeKFM65BLOHaHw" target="_k-hkT4k8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-iLUok8EeKFM65BLOHaHw" source="_k-hkWIk8EeKFM65BLOHaHw" target="_k-hkWok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-iLU4k8EeKFM65BLOHaHw" source="_k-hkXYk8EeKFM65BLOHaHw" target="_k-hkYIk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-iLVIk8EeKFM65BLOHaHw" source="_k-hkUok8EeKFM65BLOHaHw" target="_k-hkYYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-iLVYk8EeKFM65BLOHaHw" source="_k-hkYIk8EeKFM65BLOHaHw" target="_k-hkYok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-iLVok8EeKFM65BLOHaHw" source="_k-hkYIk8EeKFM65BLOHaHw" target="_k-hkYok8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-iLV4k8EeKFM65BLOHaHw" source="_k-hkYok8EeKFM65BLOHaHw" target="_k-hkYYk8EeKFM65BLOHaHw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_k-iLWIk8EeKFM65BLOHaHw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-iLWYk8EeKFM65BLOHaHw" source="_k-hkSok8EeKFM65BLOHaHw" target="_k-hkVYk8EeKFM65BLOHaHw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_k-iLWok8EeKFM65BLOHaHw" source="_k-hkYYk8EeKFM65BLOHaHw" target="_k-hkZIk8EeKFM65BLOHaHw"/>
          <clause xmi:id="_k-iLW4k8EeKFM65BLOHaHw" body="_k-iLMYk8EeKFM65BLOHaHw" decider="_k-hkZ4k8EeKFM65BLOHaHw" successorClause="_k-iLXIk8EeKFM65BLOHaHw" test="_k-hkSYk8EeKFM65BLOHaHw _k-hkTok8EeKFM65BLOHaHw _k-hkWYk8EeKFM65BLOHaHw _k-hkY4k8EeKFM65BLOHaHw"/>
          <clause xmi:id="_k-iLXIk8EeKFM65BLOHaHw" decider="_k-iLTYk8EeKFM65BLOHaHw" predecessorClause="_k-iLW4k8EeKFM65BLOHaHw" test="_k-iLTIk8EeKFM65BLOHaHw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-hkQ4k8EeKFM65BLOHaHw" name="Input(label)" outgoing="_k-hkP4k8EeKFM65BLOHaHw" parameter="_k-hkOYk8EeKFM65BLOHaHw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_k-hkRIk8EeKFM65BLOHaHw" name="Fork(label)" outgoing="_k-hkQok8EeKFM65BLOHaHw" incoming="_k-hkP4k8EeKFM65BLOHaHw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_k-hkRYk8EeKFM65BLOHaHw" name="Input(condition)" outgoing="_k-hkQIk8EeKFM65BLOHaHw" parameter="_k-hkPIk8EeKFM65BLOHaHw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_k-hkRok8EeKFM65BLOHaHw" name="Fork(condition)" outgoing="_k-hkQYk8EeKFM65BLOHaHw" incoming="_k-hkQIk8EeKFM65BLOHaHw"/>
    </packagedElement>
    <profileApplication xmi:id="_k-iLXYk8EeKFM65BLOHaHw">
      <eAnnotations xmi:id="_k-iLXok8EeKFM65BLOHaHw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/StandardL2.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_k-lOgIk8EeKFM65BLOHaHw" base_BehavioralFeature="_k-d574k8EeKFM65BLOHaHw"/>
  <l2:Create xmi:id="_k-nDsIk8EeKFM65BLOHaHw" base_BehavioralFeature="_k-d564k8EeKFM65BLOHaHw"/>
</xmi:XMI>

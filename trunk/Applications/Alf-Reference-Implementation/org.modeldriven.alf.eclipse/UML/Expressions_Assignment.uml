<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_SH5m0K1MEeOdBunZhTRw1w" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_SH5m0a1MEeOdBunZhTRw1w" name="Expressions_Assignment" classifierBehavior="_SH5m2q1MEeOdBunZhTRw1w" isActive="true">
      <packageImport xmi:id="_SH5m0q1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SH5m061MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SH5m1K1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SH5m1a1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SH5m1q1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_SH5m161MEeOdBunZhTRw1w" name="Expressions_Assignment$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5m2K1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5m2a1MEeOdBunZhTRw1w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SH5m2q1MEeOdBunZhTRw1w" name="Expressions_Assignment$classifierBehavior$1" visibility="private" isActive="true" group="_SH5m261MEeOdBunZhTRw1w" node="_SH5m261MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_SH5m261MEeOdBunZhTRw1w" name="Body(Expressions_Assignment$classifierBehavior$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH5m3K1MEeOdBunZhTRw1w" name="ExpressionStatement@390f5a63" outgoing="_SH6N-K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_SH5m3a1MEeOdBunZhTRw1w" name="Call(test)" operation="_SH8qVq1MEeOdBunZhTRw1w">
              <result xmi:id="_SH5m3q1MEeOdBunZhTRw1w" name="Call(test).result(i)" outgoing="_SH5m-a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5m361MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5m4K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SH5m4a1MEeOdBunZhTRw1w" name="Call(test).result(f)" outgoing="_SH5m-q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5m4q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5m461MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SH5m5K1MEeOdBunZhTRw1w" name="Call(test).result(h)" outgoing="_SH5m-61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5m5a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5m5q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SH5m561MEeOdBunZhTRw1w" name="Call(test).result(filename)" outgoing="_SH5m_K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5m6K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5m6a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SH5m6q1MEeOdBunZhTRw1w" name="Call(test).result(a)" outgoing="_SH5m_a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5m661MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5m7K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <target xmi:id="_SH5m7a1MEeOdBunZhTRw1w" name="Call(test).target" incoming="_SH5m_q1MEeOdBunZhTRw1w" type="_SH5m0a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5m7q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5m761MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SH5m8K1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SH5m8a1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SH5m_q1MEeOdBunZhTRw1w" type="_SH5m0a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5m8q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5m861MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH5m9K1MEeOdBunZhTRw1w" name="Fork(i)@5130c3da" outgoing="_SH6N961MEeOdBunZhTRw1w" incoming="_SH5m-a1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SH5m9a1MEeOdBunZhTRw1w" name="Fork(f)@5e31bf9f" outgoing="_SH6N-a1MEeOdBunZhTRw1w" incoming="_SH5m-q1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SH5m9q1MEeOdBunZhTRw1w" name="Fork(h)@141b9009" outgoing="_SH6N-61MEeOdBunZhTRw1w" incoming="_SH5m-61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SH5m961MEeOdBunZhTRw1w" name="Fork(filename)@1d8d492f" outgoing="_SH6N_a1MEeOdBunZhTRw1w" incoming="_SH5m_K1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SH5m-K1MEeOdBunZhTRw1w" name="Fork(a)@26bfbbd1" outgoing="_SH6N_61MEeOdBunZhTRw1w" incoming="_SH5m_a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH5m-a1MEeOdBunZhTRw1w" source="_SH5m3q1MEeOdBunZhTRw1w" target="_SH5m9K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH5m-q1MEeOdBunZhTRw1w" source="_SH5m4a1MEeOdBunZhTRw1w" target="_SH5m9a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH5m-61MEeOdBunZhTRw1w" source="_SH5m5K1MEeOdBunZhTRw1w" target="_SH5m9q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH5m_K1MEeOdBunZhTRw1w" source="_SH5m561MEeOdBunZhTRw1w" target="_SH5m961MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH5m_a1MEeOdBunZhTRw1w" source="_SH5m6q1MEeOdBunZhTRw1w" target="_SH5m-K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH5m_q1MEeOdBunZhTRw1w" source="_SH5m8a1MEeOdBunZhTRw1w" target="_SH5m7a1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH5m_61MEeOdBunZhTRw1w" name="ExpressionStatement@43b7885a" outgoing="_SH6N-q1MEeOdBunZhTRw1w" incoming="_SH6N-K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH5nAK1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SH5nF61MEeOdBunZhTRw1w" behavior="_SH8qa61MEeOdBunZhTRw1w">
              <argument xmi:id="_SH5nAa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SH5nFa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nAq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nA61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH5nBK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SH6N961MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nBa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nBq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH5nB61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SH5nFq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nCK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nCa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH5nCq1MEeOdBunZhTRw1w" name="Tuple@4b153b34" outgoing="_SH5nF61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH5nC61MEeOdBunZhTRw1w" name="Value(&quot;i&quot;)">
                <result xmi:id="_SH5nDK1MEeOdBunZhTRw1w" name="Value(&quot;i&quot;).result" outgoing="_SH5nFa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nDa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nDq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SH5nD61MEeOdBunZhTRw1w" value="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH5nEK1MEeOdBunZhTRw1w" name="Value(5)">
                <result xmi:id="_SH5nEa1MEeOdBunZhTRw1w" name="Value(5).result" outgoing="_SH5nFq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nEq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nE61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH5nFK1MEeOdBunZhTRw1w" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH5nFa1MEeOdBunZhTRw1w" source="_SH5nDK1MEeOdBunZhTRw1w" target="_SH5nAa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH5nFq1MEeOdBunZhTRw1w" source="_SH5nEa1MEeOdBunZhTRw1w" target="_SH5nB61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SH5nF61MEeOdBunZhTRw1w" source="_SH5nCq1MEeOdBunZhTRw1w" target="_SH5nAK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH5nGK1MEeOdBunZhTRw1w" name="ExpressionStatement@5ea22f37" outgoing="_SH6N_K1MEeOdBunZhTRw1w" incoming="_SH6N-q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH5nGa1MEeOdBunZhTRw1w" name="Call(AssertFalse)" incoming="_SH5nJ61MEeOdBunZhTRw1w" behavior="_SH94Xa1MEeOdBunZhTRw1w">
              <argument xmi:id="_SH5nGq1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(label)" incoming="_SH5nJq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nG61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nHK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH5nHa1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(condition)" incoming="_SH6N-a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nHq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nH61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH5nIK1MEeOdBunZhTRw1w" name="Tuple@57ff31b4" outgoing="_SH5nJ61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH5nIa1MEeOdBunZhTRw1w" name="Value(&quot;f&quot;)">
                <result xmi:id="_SH5nIq1MEeOdBunZhTRw1w" name="Value(&quot;f&quot;).result" outgoing="_SH5nJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nI61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nJK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SH5nJa1MEeOdBunZhTRw1w" value="f">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH5nJq1MEeOdBunZhTRw1w" source="_SH5nIq1MEeOdBunZhTRw1w" target="_SH5nGq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SH5nJ61MEeOdBunZhTRw1w" source="_SH5nIK1MEeOdBunZhTRw1w" target="_SH5nGa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH5nKK1MEeOdBunZhTRw1w" name="ExpressionStatement@7d2ea5dd" outgoing="_SH6N_q1MEeOdBunZhTRw1w" incoming="_SH6N_K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH5nKa1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SH5nQK1MEeOdBunZhTRw1w" behavior="_SH8qa61MEeOdBunZhTRw1w">
              <argument xmi:id="_SH5nKq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SH5nPq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nK61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nLK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH5nLa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SH6N-61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nLq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nL61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH5nMK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SH5nP61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nMa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nMq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH5nM61MEeOdBunZhTRw1w" name="Tuple@518e8358" outgoing="_SH5nQK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH5nNK1MEeOdBunZhTRw1w" name="Value(&quot;h&quot;)">
                <result xmi:id="_SH5nNa1MEeOdBunZhTRw1w" name="Value(&quot;h&quot;).result" outgoing="_SH5nPq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nNq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nN61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SH5nOK1MEeOdBunZhTRw1w" value="h">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH5nOa1MEeOdBunZhTRw1w" name="Value(85)">
                <result xmi:id="_SH5nOq1MEeOdBunZhTRw1w" name="Value(85).result" outgoing="_SH5nP61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nO61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nPK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH5nPa1MEeOdBunZhTRw1w" value="85">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH5nPq1MEeOdBunZhTRw1w" source="_SH5nNa1MEeOdBunZhTRw1w" target="_SH5nKq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH5nP61MEeOdBunZhTRw1w" source="_SH5nOq1MEeOdBunZhTRw1w" target="_SH5nMK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SH5nQK1MEeOdBunZhTRw1w" source="_SH5nM61MEeOdBunZhTRw1w" target="_SH5nKa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH5nQa1MEeOdBunZhTRw1w" name="ExpressionStatement@331a18e4" outgoing="_SH6OAK1MEeOdBunZhTRw1w" incoming="_SH6N_q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH5nQq1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SH5nWa1MEeOdBunZhTRw1w" behavior="_SH8qa61MEeOdBunZhTRw1w">
              <argument xmi:id="_SH5nQ61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SH5nV61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nRK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nRa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH5nRq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SH6N_a1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nR61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nSK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH5nSa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SH5nWK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nSq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nS61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH5nTK1MEeOdBunZhTRw1w" name="Tuple@5e2407f" outgoing="_SH5nWa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH5nTa1MEeOdBunZhTRw1w" name="Value(&quot;filename&quot;)">
                <result xmi:id="_SH5nTq1MEeOdBunZhTRw1w" name="Value(&quot;filename&quot;).result" outgoing="_SH5nV61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nT61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nUK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SH5nUa1MEeOdBunZhTRw1w" value="filename">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH5nUq1MEeOdBunZhTRw1w" name="Value(&quot;xyz.doc&quot;)">
                <result xmi:id="_SH5nU61MEeOdBunZhTRw1w" name="Value(&quot;xyz.doc&quot;).result" outgoing="_SH5nWK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nVK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nVa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SH5nVq1MEeOdBunZhTRw1w" value="xyz.doc">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH5nV61MEeOdBunZhTRw1w" source="_SH5nTq1MEeOdBunZhTRw1w" target="_SH5nQ61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH5nWK1MEeOdBunZhTRw1w" source="_SH5nU61MEeOdBunZhTRw1w" target="_SH5nSa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SH5nWa1MEeOdBunZhTRw1w" source="_SH5nTK1MEeOdBunZhTRw1w" target="_SH5nQq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH5nWq1MEeOdBunZhTRw1w" name="ExpressionStatement@2a59ff94" outgoing="_SH6OAa1MEeOdBunZhTRw1w" incoming="_SH6OAK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH5nW61MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SH6N5q1MEeOdBunZhTRw1w" behavior="_SH8qa61MEeOdBunZhTRw1w">
              <argument xmi:id="_SH5nXK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SH6N5K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nXa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nXq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH5nX61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SH6N_61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nYK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nYa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH5nYq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SH6N5a1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5nY61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5nZK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH5nZa1MEeOdBunZhTRw1w" name="Tuple@3fe2038a" outgoing="_SH6N5q1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH5nZq1MEeOdBunZhTRw1w" name="Value(&quot;a&quot;)">
                <result xmi:id="_SH5nZ61MEeOdBunZhTRw1w" name="Value(&quot;a&quot;).result" outgoing="_SH6N5K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH5naK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH5naa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SH5naq1MEeOdBunZhTRw1w" value="a">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH5na61MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_SH6N4K1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_SH6N5a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6N4a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6N4q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH6N461MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6N5K1MEeOdBunZhTRw1w" source="_SH5nZ61MEeOdBunZhTRw1w" target="_SH5nXK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6N5a1MEeOdBunZhTRw1w" source="_SH6N4K1MEeOdBunZhTRw1w" target="_SH5nYq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SH6N5q1MEeOdBunZhTRw1w" source="_SH5nZa1MEeOdBunZhTRw1w" target="_SH5nW61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6N561MEeOdBunZhTRw1w" name="ExpressionStatement@62f86a4" incoming="_SH6OAa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH6N6K1MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_SH6N9q1MEeOdBunZhTRw1w">
              <argument xmi:id="_SH6N6a1MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_SH6N9a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6N6q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6N661MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH6N7K1MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6N7a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6N7q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6N761MEeOdBunZhTRw1w" name="Tuple@5ca09a75" outgoing="_SH6N9q1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH6N8K1MEeOdBunZhTRw1w" name="Value(&quot;Done&quot;)">
                <result xmi:id="_SH6N8a1MEeOdBunZhTRw1w" name="Value(&quot;Done&quot;).result" outgoing="_SH6N9a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6N8q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6N861MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SH6N9K1MEeOdBunZhTRw1w" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6N9a1MEeOdBunZhTRw1w" source="_SH6N8a1MEeOdBunZhTRw1w" target="_SH6N6a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SH6N9q1MEeOdBunZhTRw1w" source="_SH6N761MEeOdBunZhTRw1w" target="_SH6N6K1MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6N961MEeOdBunZhTRw1w" source="_SH5m9K1MEeOdBunZhTRw1w" target="_SH5nBK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH6N-K1MEeOdBunZhTRw1w" source="_SH5m3K1MEeOdBunZhTRw1w" target="_SH5m_61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6N-a1MEeOdBunZhTRw1w" source="_SH5m9a1MEeOdBunZhTRw1w" target="_SH5nHa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH6N-q1MEeOdBunZhTRw1w" source="_SH5m_61MEeOdBunZhTRw1w" target="_SH5nGK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6N-61MEeOdBunZhTRw1w" source="_SH5m9q1MEeOdBunZhTRw1w" target="_SH5nLa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH6N_K1MEeOdBunZhTRw1w" source="_SH5nGK1MEeOdBunZhTRw1w" target="_SH5nKK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6N_a1MEeOdBunZhTRw1w" source="_SH5m961MEeOdBunZhTRw1w" target="_SH5nRq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH6N_q1MEeOdBunZhTRw1w" source="_SH5nKK1MEeOdBunZhTRw1w" target="_SH5nQa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6N_61MEeOdBunZhTRw1w" source="_SH5m-K1MEeOdBunZhTRw1w" target="_SH5nX61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH6OAK1MEeOdBunZhTRw1w" source="_SH5nQa1MEeOdBunZhTRw1w" target="_SH5nWq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH6OAa1MEeOdBunZhTRw1w" source="_SH5nWq1MEeOdBunZhTRw1w" target="_SH6N561MEeOdBunZhTRw1w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SH6OAq1MEeOdBunZhTRw1w" name="test$method$1" specification="_SH8qVq1MEeOdBunZhTRw1w" group="_SH6OHK1MEeOdBunZhTRw1w" node="_SH6OF61MEeOdBunZhTRw1w _SH6OGK1MEeOdBunZhTRw1w _SH6OGa1MEeOdBunZhTRw1w _SH6OGq1MEeOdBunZhTRw1w _SH6OG61MEeOdBunZhTRw1w _SH6OHK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_SH6OA61MEeOdBunZhTRw1w" name="i" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OBK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OBa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SH6OBq1MEeOdBunZhTRw1w" name="f" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OB61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OCK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SH6OCa1MEeOdBunZhTRw1w" name="h" direction="out">
          <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OCq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OC61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SH6ODK1MEeOdBunZhTRw1w" name="filename" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6ODa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6ODq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SH6OD61MEeOdBunZhTRw1w" name="a" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OEK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OEa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OEq1MEeOdBunZhTRw1w" source="_SH8DJK1MEeOdBunZhTRw1w" target="_SH6OF61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OE61MEeOdBunZhTRw1w" source="_SH8DJ61MEeOdBunZhTRw1w" target="_SH6OGK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OFK1MEeOdBunZhTRw1w" source="_SH8DKq1MEeOdBunZhTRw1w" target="_SH6OGa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OFa1MEeOdBunZhTRw1w" source="_SH8DLa1MEeOdBunZhTRw1w" target="_SH6OGq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OFq1MEeOdBunZhTRw1w" source="_SH8DMK1MEeOdBunZhTRw1w" target="_SH6OG61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_SH6OHK1MEeOdBunZhTRw1w" name="Body(test$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6OHa1MEeOdBunZhTRw1w" name="ExpressionStatement@4e64b4c4" outgoing="_SH8DNK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SH6OHq1MEeOdBunZhTRw1w" name="Fork(i)@55952247" outgoing="_SH8DM61MEeOdBunZhTRw1w" incoming="_SH6OJa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6OH61MEeOdBunZhTRw1w" name="RightHandSide@31fd8f36">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH6OIK1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH6OIa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH6OJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OIq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OI61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH6OJK1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OJa1MEeOdBunZhTRw1w" source="_SH6OIa1MEeOdBunZhTRw1w" target="_SH6OHq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6OJq1MEeOdBunZhTRw1w" name="ExpressionStatement@1a723d" outgoing="_SH8DNq1MEeOdBunZhTRw1w" incoming="_SH8DNK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH6OJ61MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_SH6OKK1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_SH8DM61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OKa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OKq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH6OK61MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_SH6OOK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OLK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OLa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH6OLq1MEeOdBunZhTRw1w" name="Call(+).result(result)" outgoing="_SH6OOa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OL61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OMK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH6OMa1MEeOdBunZhTRw1w" name="Fork(i)@5ccff2e9" outgoing="_SH8DNa1MEeOdBunZhTRw1w" incoming="_SH6OOa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6OMq1MEeOdBunZhTRw1w" name="RightHandSide@5854ce99">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH6OM61MEeOdBunZhTRw1w" name="Value(4)">
                <result xmi:id="_SH6ONK1MEeOdBunZhTRw1w" name="Value(4).result" outgoing="_SH6OOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6ONa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6ONq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH6ON61MEeOdBunZhTRw1w" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OOK1MEeOdBunZhTRw1w" source="_SH6ONK1MEeOdBunZhTRw1w" target="_SH6OK61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OOa1MEeOdBunZhTRw1w" source="_SH6OLq1MEeOdBunZhTRw1w" target="_SH6OMa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6OOq1MEeOdBunZhTRw1w" name="ExpressionStatement@6d5bf577" outgoing="_SH8DOK1MEeOdBunZhTRw1w" incoming="_SH8DNq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH6OO61MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_SH6OPK1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_SH8DNa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OPa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OPq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH6OP61MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_SH6OTK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OQK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OQa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH6OQq1MEeOdBunZhTRw1w" name="Call(+).result(result)" outgoing="_SH6OTa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OQ61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6ORK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH6ORa1MEeOdBunZhTRw1w" name="Fork(i)@2427612d" outgoing="_SH8DN61MEeOdBunZhTRw1w" incoming="_SH6OTa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6ORq1MEeOdBunZhTRw1w" name="RightHandSide@155ce3e6">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH6OR61MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH6OSK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH6OTK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OSa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OSq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH6OS61MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OTK1MEeOdBunZhTRw1w" source="_SH6OSK1MEeOdBunZhTRw1w" target="_SH6OP61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OTa1MEeOdBunZhTRw1w" source="_SH6OQq1MEeOdBunZhTRw1w" target="_SH6ORa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6OTq1MEeOdBunZhTRw1w" name="ExpressionStatement@65492636" outgoing="_SH8DOq1MEeOdBunZhTRw1w" incoming="_SH8DOK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH6OT61MEeOdBunZhTRw1w" name="Call(-)">
              <argument xmi:id="_SH6OUK1MEeOdBunZhTRw1w" name="Call(-).argument(x)" incoming="_SH8DN61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OUa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OUq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH6OU61MEeOdBunZhTRw1w" name="Call(-).argument(y)" incoming="_SH6OYK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OVK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OVa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH6OVq1MEeOdBunZhTRw1w" name="Call(-).result(result)" outgoing="_SH6OYa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OV61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OWK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH6OWa1MEeOdBunZhTRw1w" name="Fork(i)@3f63dfdf" outgoing="_SH8DOa1MEeOdBunZhTRw1w" incoming="_SH6OYa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6OWq1MEeOdBunZhTRw1w" name="RightHandSide@35fec9fc">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH6OW61MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH6OXK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH6OYK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OXa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OXq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH6OX61MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OYK1MEeOdBunZhTRw1w" source="_SH6OXK1MEeOdBunZhTRw1w" target="_SH6OU61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OYa1MEeOdBunZhTRw1w" source="_SH6OVq1MEeOdBunZhTRw1w" target="_SH6OWa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6OYq1MEeOdBunZhTRw1w" name="ExpressionStatement@3f7a7e4d" outgoing="_SH8DPK1MEeOdBunZhTRw1w" incoming="_SH8DOq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH6OY61MEeOdBunZhTRw1w" name="Call(*)">
              <argument xmi:id="_SH6OZK1MEeOdBunZhTRw1w" name="Call(*).argument(x)" incoming="_SH8DOa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OZa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OZq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH6OZ61MEeOdBunZhTRw1w" name="Call(*).argument(y)" incoming="_SH6OdK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OaK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6Oaa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH6Oaq1MEeOdBunZhTRw1w" name="Call(*).result(result)" outgoing="_SH6Oda1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6Oa61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6ObK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-times"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH6Oba1MEeOdBunZhTRw1w" name="Fork(i)@52dd2f52" outgoing="_SH8DO61MEeOdBunZhTRw1w" incoming="_SH6Oda1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6Obq1MEeOdBunZhTRw1w" name="RightHandSide@374ddafe">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH6Ob61MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH6OcK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH6OdK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6Oca1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6Ocq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH6Oc61MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OdK1MEeOdBunZhTRw1w" source="_SH6OcK1MEeOdBunZhTRw1w" target="_SH6OZ61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6Oda1MEeOdBunZhTRw1w" source="_SH6Oaq1MEeOdBunZhTRw1w" target="_SH6Oba1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6Odq1MEeOdBunZhTRw1w" name="ExpressionStatement@16b9b756" outgoing="_SH8DPq1MEeOdBunZhTRw1w" incoming="_SH8DPK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH6Od61MEeOdBunZhTRw1w" name="Call(Mod)">
              <argument xmi:id="_SH6OeK1MEeOdBunZhTRw1w" name="Call(Mod).argument(x)" incoming="_SH8DO61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6Oea1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6Oeq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH6Oe61MEeOdBunZhTRw1w" name="Call(Mod).argument(y)" incoming="_SH6OiK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6OfK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6Ofa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH6Ofq1MEeOdBunZhTRw1w" name="Call(Mod).result(result)" outgoing="_SH6Oia1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6Of61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6OgK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH6Oga1MEeOdBunZhTRw1w" name="Fork(i)@20db8d63" outgoing="_SH8DPa1MEeOdBunZhTRw1w" incoming="_SH6Oia1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH6Ogq1MEeOdBunZhTRw1w" name="RightHandSide@2e1f6f6f">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH6Og61MEeOdBunZhTRw1w" name="Value(6)">
                <result xmi:id="_SH6OhK1MEeOdBunZhTRw1w" name="Value(6).result" outgoing="_SH6OiK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH6Oha1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH6Ohq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH6Oh61MEeOdBunZhTRw1w" value="6">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6OiK1MEeOdBunZhTRw1w" source="_SH6OhK1MEeOdBunZhTRw1w" target="_SH6Oe61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH6Oia1MEeOdBunZhTRw1w" source="_SH6Ofq1MEeOdBunZhTRw1w" target="_SH6Oga1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH608K1MEeOdBunZhTRw1w" name="ExpressionStatement@23ac1194" outgoing="_SH8DP61MEeOdBunZhTRw1w" incoming="_SH8DPq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH608a1MEeOdBunZhTRw1w" name="Call(Div)">
              <argument xmi:id="_SH608q1MEeOdBunZhTRw1w" name="Call(Div).argument(x)" incoming="_SH8DPa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH60861MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH609K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH609a1MEeOdBunZhTRw1w" name="Call(Div).argument(y)" incoming="_SH61Aq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH609q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH60961MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH60-K1MEeOdBunZhTRw1w" name="Call(Div).result(result)" outgoing="_SH61A61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH60-a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH60-q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH60-61MEeOdBunZhTRw1w" name="Fork(i)@6c9cd7aa" outgoing="_SH8DXK1MEeOdBunZhTRw1w _SH8DYa1MEeOdBunZhTRw1w" incoming="_SH61A61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH60_K1MEeOdBunZhTRw1w" name="RightHandSide@2d13119b">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH60_a1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH60_q1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH61Aq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH60_61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61AK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH61Aa1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61Aq1MEeOdBunZhTRw1w" source="_SH60_q1MEeOdBunZhTRw1w" target="_SH609a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61A61MEeOdBunZhTRw1w" source="_SH60-K1MEeOdBunZhTRw1w" target="_SH60-61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61BK1MEeOdBunZhTRw1w" name="ExpressionStatement@1800aea7" outgoing="_SH8DQa1MEeOdBunZhTRw1w" incoming="_SH8DP61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SH61Ba1MEeOdBunZhTRw1w" name="Fork(f)@3f2c143" outgoing="_SH8DQK1MEeOdBunZhTRw1w" incoming="_SH61DK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61Bq1MEeOdBunZhTRw1w" name="RightHandSide@366e17bb">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH61B61MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_SH61CK1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SH61DK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61Ca1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61Cq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SH61C61MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61DK1MEeOdBunZhTRw1w" source="_SH61CK1MEeOdBunZhTRw1w" target="_SH61Ba1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61Da1MEeOdBunZhTRw1w" name="ExpressionStatement@2aa95abf" outgoing="_SH8DQ61MEeOdBunZhTRw1w" incoming="_SH8DQa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH61Dq1MEeOdBunZhTRw1w" name="Call(And)">
              <argument xmi:id="_SH61D61MEeOdBunZhTRw1w" name="Call(And).argument(x)" incoming="_SH8DQK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61EK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61Ea1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH61Eq1MEeOdBunZhTRw1w" name="Call(And).argument(y)" incoming="_SH61H61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61E61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61FK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH61Fa1MEeOdBunZhTRw1w" name="Call(And).result(result)" outgoing="_SH61IK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61Fq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61F61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-And"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH61GK1MEeOdBunZhTRw1w" name="Fork(f)@503114a1" outgoing="_SH8DQq1MEeOdBunZhTRw1w" incoming="_SH61IK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61Ga1MEeOdBunZhTRw1w" name="RightHandSide@46417f28">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH61Gq1MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_SH61G61MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SH61H61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61HK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61Ha1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SH61Hq1MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61H61MEeOdBunZhTRw1w" source="_SH61G61MEeOdBunZhTRw1w" target="_SH61Eq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61IK1MEeOdBunZhTRw1w" source="_SH61Fa1MEeOdBunZhTRw1w" target="_SH61GK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61Ia1MEeOdBunZhTRw1w" name="ExpressionStatement@ae198ac" outgoing="_SH8DRa1MEeOdBunZhTRw1w" incoming="_SH8DQ61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH61Iq1MEeOdBunZhTRw1w" name="Call(Or)">
              <argument xmi:id="_SH61I61MEeOdBunZhTRw1w" name="Call(Or).argument(x)" incoming="_SH8DQq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61JK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61Ja1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH61Jq1MEeOdBunZhTRw1w" name="Call(Or).argument(y)" incoming="_SH61M61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61J61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61KK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH61Ka1MEeOdBunZhTRw1w" name="Call(Or).result(result)" outgoing="_SH61NK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61Kq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61K61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH61LK1MEeOdBunZhTRw1w" name="Fork(f)@31b439a7" outgoing="_SH8DRK1MEeOdBunZhTRw1w" incoming="_SH61NK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61La1MEeOdBunZhTRw1w" name="RightHandSide@2f351c6f">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH61Lq1MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_SH61L61MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SH61M61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61MK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61Ma1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SH61Mq1MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61M61MEeOdBunZhTRw1w" source="_SH61L61MEeOdBunZhTRw1w" target="_SH61Jq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61NK1MEeOdBunZhTRw1w" source="_SH61Ka1MEeOdBunZhTRw1w" target="_SH61LK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61Na1MEeOdBunZhTRw1w" name="ExpressionStatement@74f919be" outgoing="_SH8DRq1MEeOdBunZhTRw1w" incoming="_SH8DRa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH61Nq1MEeOdBunZhTRw1w" name="Call(Xor)">
              <argument xmi:id="_SH61N61MEeOdBunZhTRw1w" name="Call(Xor).argument(x)" incoming="_SH8DRK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61OK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61Oa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH61Oq1MEeOdBunZhTRw1w" name="Call(Xor).argument(y)" incoming="_SH61R61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61O61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61PK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH61Pa1MEeOdBunZhTRw1w" name="Call(Xor).result(result)" outgoing="_SH61SK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61Pq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61P61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Xor"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH61QK1MEeOdBunZhTRw1w" name="Fork(f)@352187a8" outgoing="_SH8DYq1MEeOdBunZhTRw1w" incoming="_SH61SK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61Qa1MEeOdBunZhTRw1w" name="RightHandSide@2c5141d8">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH61Qq1MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_SH61Q61MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SH61R61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61RK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61Ra1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SH61Rq1MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61R61MEeOdBunZhTRw1w" source="_SH61Q61MEeOdBunZhTRw1w" target="_SH61Oq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61SK1MEeOdBunZhTRw1w" source="_SH61Pa1MEeOdBunZhTRw1w" target="_SH61QK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61Sa1MEeOdBunZhTRw1w" name="ExpressionStatement@526319f7" outgoing="_SH8DR61MEeOdBunZhTRw1w" incoming="_SH8DRq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SH61Sq1MEeOdBunZhTRw1w" name="Fork(h)@27b1abe0" incoming="_SH61bq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61S61MEeOdBunZhTRw1w" name="RightHandSide@6e0e6646">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH61TK1MEeOdBunZhTRw1w" name="Value(0)">
                <result xmi:id="_SH61Ta1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SH61ba1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61Tq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61T61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH61UK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SH61Ua1MEeOdBunZhTRw1w" name="CastExpression@6e0e6646" mode="parallel" outputElement="_SH61bK1MEeOdBunZhTRw1w" inputElement="_SH61a61MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_SH61Uq1MEeOdBunZhTRw1w" name="Merge(CastExpression@6e0e6646.operand)" outgoing="_SH61aq1MEeOdBunZhTRw1w" incoming="_SH61ZK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SH61U61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_SH61VK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer).object" incoming="_SH61Y61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61Va1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61Vq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SH61V61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer).result" outgoing="_SH61Zq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61WK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61Wa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SH61Wq1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(Integer).object)" outgoing="_SH61Y61MEeOdBunZhTRw1w _SH61Za1MEeOdBunZhTRw1w" incoming="_SH61aa1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH61W61MEeOdBunZhTRw1w" name="Call(ToBitString)">
                  <argument xmi:id="_SH61XK1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_SH61Z61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61Xa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61Xq1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_SH61X61MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_SH61ZK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61YK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61Ya1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_SH61Yq1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(Integer).result)" outgoing="_SH61Z61MEeOdBunZhTRw1w" incoming="_SH61Za1MEeOdBunZhTRw1w _SH61Zq1MEeOdBunZhTRw1w" decisionInputFlow="_SH61Zq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61Y61MEeOdBunZhTRw1w" source="_SH61Wq1MEeOdBunZhTRw1w" target="_SH61VK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61ZK1MEeOdBunZhTRw1w" source="_SH61X61MEeOdBunZhTRw1w" target="_SH61Uq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61Za1MEeOdBunZhTRw1w" source="_SH61Wq1MEeOdBunZhTRw1w" target="_SH61Yq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61Zq1MEeOdBunZhTRw1w" source="_SH61V61MEeOdBunZhTRw1w" target="_SH61Yq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61Z61MEeOdBunZhTRw1w" source="_SH61Yq1MEeOdBunZhTRw1w" target="_SH61XK1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH61aK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61aa1MEeOdBunZhTRw1w" source="_SH61a61MEeOdBunZhTRw1w" target="_SH61Wq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61aq1MEeOdBunZhTRw1w" source="_SH61Uq1MEeOdBunZhTRw1w" target="_SH61bK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SH61a61MEeOdBunZhTRw1w" name="CastExpression@6e0e6646.inputElement" outgoing="_SH61aa1MEeOdBunZhTRw1w" incoming="_SH61ba1MEeOdBunZhTRw1w" regionAsInput="_SH61Ua1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SH61bK1MEeOdBunZhTRw1w" name="CastExpression@6e0e6646.outputElement" outgoing="_SH61bq1MEeOdBunZhTRw1w" incoming="_SH61aq1MEeOdBunZhTRw1w" regionAsOutput="_SH61Ua1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61ba1MEeOdBunZhTRw1w" source="_SH61Ta1MEeOdBunZhTRw1w" target="_SH61a61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61bq1MEeOdBunZhTRw1w" source="_SH61bK1MEeOdBunZhTRw1w" target="_SH61Sq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61b61MEeOdBunZhTRw1w" name="ExpressionStatement@2a4e50f" outgoing="_SH8DSa1MEeOdBunZhTRw1w" incoming="_SH8DR61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SH61cK1MEeOdBunZhTRw1w" name="Fork(h)@9368016" outgoing="_SH8DSK1MEeOdBunZhTRw1w" incoming="_SH61f61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61ca1MEeOdBunZhTRw1w" name="RightHandSide@59132913">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH61cq1MEeOdBunZhTRw1w" name="Value(171)">
                <result xmi:id="_SH61c61MEeOdBunZhTRw1w" name="Value(171).result" outgoing="_SH61fq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61dK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61da1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH61dq1MEeOdBunZhTRw1w" value="171">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH61d61MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_SH61eK1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_SH61fq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61ea1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61eq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SH61e61MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_SH61f61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61fK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61fa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61fq1MEeOdBunZhTRw1w" source="_SH61c61MEeOdBunZhTRw1w" target="_SH61eK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61f61MEeOdBunZhTRw1w" source="_SH61e61MEeOdBunZhTRw1w" target="_SH61cK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61gK1MEeOdBunZhTRw1w" name="ExpressionStatement@c82f61c" outgoing="_SH8DS61MEeOdBunZhTRw1w" incoming="_SH8DSa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH61ga1MEeOdBunZhTRw1w" name="Call(&amp;)">
              <argument xmi:id="_SH61gq1MEeOdBunZhTRw1w" name="Call(&amp;).argument(b1)" incoming="_SH8DSK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61g61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61hK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH61ha1MEeOdBunZhTRw1w" name="Call(&amp;).argument(b2)" incoming="_SH61kq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61hq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61h61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH61iK1MEeOdBunZhTRw1w" name="Call(&amp;).result(null)" outgoing="_SH61k61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61ia1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61iq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-amp"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH61i61MEeOdBunZhTRw1w" name="Fork(h)@5865f466" outgoing="_SH8DSq1MEeOdBunZhTRw1w" incoming="_SH61k61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61jK1MEeOdBunZhTRw1w" name="RightHandSide@d9081e1">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH61ja1MEeOdBunZhTRw1w" name="Value(255)">
                <result xmi:id="_SH61jq1MEeOdBunZhTRw1w" name="Value(255).result" outgoing="_SH61kq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61j61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61kK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH61ka1MEeOdBunZhTRw1w" value="255">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61kq1MEeOdBunZhTRw1w" source="_SH61jq1MEeOdBunZhTRw1w" target="_SH61ha1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH61k61MEeOdBunZhTRw1w" source="_SH61iK1MEeOdBunZhTRw1w" target="_SH61i61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH61lK1MEeOdBunZhTRw1w" name="ExpressionStatement@6a00c0b6" outgoing="_SH8DTa1MEeOdBunZhTRw1w" incoming="_SH8DS61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH61la1MEeOdBunZhTRw1w" name="Call(|)">
              <argument xmi:id="_SH61lq1MEeOdBunZhTRw1w" name="Call(|).argument(b1)" incoming="_SH8DSq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61l61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61mK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH61ma1MEeOdBunZhTRw1w" name="Call(|).argument(b2)" incoming="_SH7cBq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61mq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61m61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH61nK1MEeOdBunZhTRw1w" name="Call(|).result(null)" outgoing="_SH7cB61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH61na1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH61nq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-bar"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH61n61MEeOdBunZhTRw1w" name="Fork(h)@61f7ff6c" outgoing="_SH8DTK1MEeOdBunZhTRw1w" incoming="_SH7cB61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cAK1MEeOdBunZhTRw1w" name="RightHandSide@60a23db3">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH7cAa1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH7cAq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH7cBq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cA61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cBK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH7cBa1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cBq1MEeOdBunZhTRw1w" source="_SH7cAq1MEeOdBunZhTRw1w" target="_SH61ma1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cB61MEeOdBunZhTRw1w" source="_SH61nK1MEeOdBunZhTRw1w" target="_SH61n61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cCK1MEeOdBunZhTRw1w" name="ExpressionStatement@72282619" outgoing="_SH8DT61MEeOdBunZhTRw1w" incoming="_SH8DTa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH7cCa1MEeOdBunZhTRw1w" name="Call(^)">
              <argument xmi:id="_SH7cCq1MEeOdBunZhTRw1w" name="Call(^).argument(b1)" incoming="_SH8DTK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cC61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cDK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH7cDa1MEeOdBunZhTRw1w" name="Call(^).argument(b2)" incoming="_SH7cGq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cDq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cD61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH7cEK1MEeOdBunZhTRw1w" name="Call(^).result(null)" outgoing="_SH7cG61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cEa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cEq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-caret"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH7cE61MEeOdBunZhTRw1w" name="Fork(h)@33d028af" outgoing="_SH8DTq1MEeOdBunZhTRw1w" incoming="_SH7cG61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cFK1MEeOdBunZhTRw1w" name="RightHandSide@271f13bc">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH7cFa1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH7cFq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH7cGq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cF61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cGK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH7cGa1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cGq1MEeOdBunZhTRw1w" source="_SH7cFq1MEeOdBunZhTRw1w" target="_SH7cDa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cG61MEeOdBunZhTRw1w" source="_SH7cEK1MEeOdBunZhTRw1w" target="_SH7cE61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cHK1MEeOdBunZhTRw1w" name="ExpressionStatement@bae166c" outgoing="_SH8DUa1MEeOdBunZhTRw1w" incoming="_SH8DT61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH7cHa1MEeOdBunZhTRw1w" name="Call(&lt;&lt;)">
              <argument xmi:id="_SH7cHq1MEeOdBunZhTRw1w" name="Call(&lt;&lt;).argument(b)" incoming="_SH8DTq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cH61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cIK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH7cIa1MEeOdBunZhTRw1w" name="Call(&lt;&lt;).argument(n)" incoming="_SH7cLq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cIq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cI61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH7cJK1MEeOdBunZhTRw1w" name="Call(&lt;&lt;).result(null)" outgoing="_SH7cL61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cJa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cJq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ltlt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH7cJ61MEeOdBunZhTRw1w" name="Fork(h)@1c8b86ef" outgoing="_SH8DUK1MEeOdBunZhTRw1w" incoming="_SH7cL61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cKK1MEeOdBunZhTRw1w" name="RightHandSide@1b588fd1">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH7cKa1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH7cKq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH7cLq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cK61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cLK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH7cLa1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cLq1MEeOdBunZhTRw1w" source="_SH7cKq1MEeOdBunZhTRw1w" target="_SH7cIa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cL61MEeOdBunZhTRw1w" source="_SH7cJK1MEeOdBunZhTRw1w" target="_SH7cJ61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cMK1MEeOdBunZhTRw1w" name="ExpressionStatement@10403289" outgoing="_SH8DU61MEeOdBunZhTRw1w" incoming="_SH8DUa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH7cMa1MEeOdBunZhTRw1w" name="Call(>>)">
              <argument xmi:id="_SH7cMq1MEeOdBunZhTRw1w" name="Call(>>).argument(b)" incoming="_SH8DUK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cM61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cNK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH7cNa1MEeOdBunZhTRw1w" name="Call(>>).argument(n)" incoming="_SH7cQq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cNq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cN61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH7cOK1MEeOdBunZhTRw1w" name="Call(>>).result(null)" outgoing="_SH7cQ61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cOa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cOq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH7cO61MEeOdBunZhTRw1w" name="Fork(h)@3a43a39b" outgoing="_SH8DUq1MEeOdBunZhTRw1w" incoming="_SH7cQ61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cPK1MEeOdBunZhTRw1w" name="RightHandSide@2eaa32ff">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH7cPa1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH7cPq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH7cQq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cP61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cQK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH7cQa1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cQq1MEeOdBunZhTRw1w" source="_SH7cPq1MEeOdBunZhTRw1w" target="_SH7cNa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cQ61MEeOdBunZhTRw1w" source="_SH7cOK1MEeOdBunZhTRw1w" target="_SH7cO61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cRK1MEeOdBunZhTRw1w" name="ExpressionStatement@43117a45" outgoing="_SH8DVK1MEeOdBunZhTRw1w" incoming="_SH8DU61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH7cRa1MEeOdBunZhTRw1w" name="Call(>>>)">
              <argument xmi:id="_SH7cRq1MEeOdBunZhTRw1w" name="Call(>>>).argument(b)" incoming="_SH8DUq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cR61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cSK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH7cSa1MEeOdBunZhTRw1w" name="Call(>>>).argument(n)" incoming="_SH7cVq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cSq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cS61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH7cTK1MEeOdBunZhTRw1w" name="Call(>>>).result(null)" outgoing="_SH7cV61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cTa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cTq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH7cT61MEeOdBunZhTRw1w" name="Fork(h)@54748db1" outgoing="_SH8DY61MEeOdBunZhTRw1w" incoming="_SH7cV61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cUK1MEeOdBunZhTRw1w" name="RightHandSide@30028ac8">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH7cUa1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH7cUq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH7cVq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cU61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cVK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH7cVa1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cVq1MEeOdBunZhTRw1w" source="_SH7cUq1MEeOdBunZhTRw1w" target="_SH7cSa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cV61MEeOdBunZhTRw1w" source="_SH7cTK1MEeOdBunZhTRw1w" target="_SH7cT61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cWK1MEeOdBunZhTRw1w" name="ExpressionStatement@534a3cee" outgoing="_SH8DVq1MEeOdBunZhTRw1w" incoming="_SH8DVK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SH7cWa1MEeOdBunZhTRw1w" name="Fork(filename)@6b2edd0e" outgoing="_SH8DVa1MEeOdBunZhTRw1w" incoming="_SH7cYK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cWq1MEeOdBunZhTRw1w" name="RightHandSide@51b2f91b">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH7cW61MEeOdBunZhTRw1w" name="Value(&quot;xyz&quot;)">
                <result xmi:id="_SH7cXK1MEeOdBunZhTRw1w" name="Value(&quot;xyz&quot;).result" outgoing="_SH7cYK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cXa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cXq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SH7cX61MEeOdBunZhTRw1w" value="xyz">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cYK1MEeOdBunZhTRw1w" source="_SH7cXK1MEeOdBunZhTRw1w" target="_SH7cWa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cYa1MEeOdBunZhTRw1w" name="ExpressionStatement@72a69cb0" outgoing="_SH8DV61MEeOdBunZhTRw1w" incoming="_SH8DVq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH7cYq1MEeOdBunZhTRw1w" name="Call(Concat)">
              <argument xmi:id="_SH7cY61MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SH8DVa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cZK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cZa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH7cZq1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SH7cc61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cZ61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7caK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH7caa1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SH7cdK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7caq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7ca61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH7cbK1MEeOdBunZhTRw1w" name="Fork(filename)@1d5799cd" outgoing="_SH8DZK1MEeOdBunZhTRw1w" incoming="_SH7cdK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cba1MEeOdBunZhTRw1w" name="RightHandSide@623270c7">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH7cbq1MEeOdBunZhTRw1w" name="Value(&quot;.doc&quot;)">
                <result xmi:id="_SH7cb61MEeOdBunZhTRw1w" name="Value(&quot;.doc&quot;).result" outgoing="_SH7cc61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7ccK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cca1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SH7ccq1MEeOdBunZhTRw1w" value=".doc">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cc61MEeOdBunZhTRw1w" source="_SH7cb61MEeOdBunZhTRw1w" target="_SH7cZq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cdK1MEeOdBunZhTRw1w" source="_SH7caa1MEeOdBunZhTRw1w" target="_SH7cbK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cda1MEeOdBunZhTRw1w" name="ExpressionStatement@379f2abf" outgoing="_SH8DWa1MEeOdBunZhTRw1w" incoming="_SH8DV61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SH7cdq1MEeOdBunZhTRw1w" name="Fork(a)@e936760" outgoing="_SH8DWK1MEeOdBunZhTRw1w" incoming="_SH7cfa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cd61MEeOdBunZhTRw1w" name="RightHandSide@6f67d719">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH7ceK1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH7cea1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH7cfa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7ceq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7ce61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH7cfK1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cfa1MEeOdBunZhTRw1w" source="_SH7cea1MEeOdBunZhTRw1w" target="_SH7cdq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cfq1MEeOdBunZhTRw1w" name="ExpressionStatement@58a1896f" outgoing="_SH8DWq1MEeOdBunZhTRw1w" incoming="_SH8DWa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH7cf61MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_SH7cgK1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_SH8DWK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cga1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cgq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH7cg61MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_SH7ckK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7chK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cha1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH7chq1MEeOdBunZhTRw1w" name="Call(+).result(result)" outgoing="_SH7cka1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7ch61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7ciK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH7cia1MEeOdBunZhTRw1w" name="Fork(a)@2911b5d6" incoming="_SH7cka1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7ciq1MEeOdBunZhTRw1w" name="RightHandSide@49b909aa">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH7ci61MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH7cjK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH7ckK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cja1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cjq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH7cj61MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7ckK1MEeOdBunZhTRw1w" source="_SH7cjK1MEeOdBunZhTRw1w" target="_SH7cg61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cka1MEeOdBunZhTRw1w" source="_SH7chq1MEeOdBunZhTRw1w" target="_SH7cia1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7ckq1MEeOdBunZhTRw1w" name="ExpressionStatement@7465364" outgoing="_SH8DXa1MEeOdBunZhTRw1w" incoming="_SH8DWq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SH7ck61MEeOdBunZhTRw1w" name="Fork(test::a)@157046f" outgoing="_SH8DW61MEeOdBunZhTRw1w" incoming="_SH7cmq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7clK1MEeOdBunZhTRw1w" name="RightHandSide@77e41418">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH7cla1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH7clq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH7cmq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cl61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cmK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH7cma1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cmq1MEeOdBunZhTRw1w" source="_SH7clq1MEeOdBunZhTRw1w" target="_SH7ck61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cm61MEeOdBunZhTRw1w" name="ExpressionStatement@64a7180e" outgoing="_SH8DXq1MEeOdBunZhTRw1w" incoming="_SH8DXa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH7cnK1MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_SH7cna1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_SH8DW61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cnq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cn61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH7coK1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_SH8DXK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7coa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7coq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH7co61MEeOdBunZhTRw1w" name="Call(+).result(result)" outgoing="_SH7cqK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7cpK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cpa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH7cpq1MEeOdBunZhTRw1w" name="Fork(test::a)@2baec60c" incoming="_SH7cqK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cp61MEeOdBunZhTRw1w" name="RightHandSide@5f4c543b"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7cqK1MEeOdBunZhTRw1w" source="_SH7co61MEeOdBunZhTRw1w" target="_SH7cpq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cqa1MEeOdBunZhTRw1w" name="ExpressionStatement@7309838d" outgoing="_SH8DYK1MEeOdBunZhTRw1w" incoming="_SH8DXq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SH7cqq1MEeOdBunZhTRw1w" name="Fork(test::a)@1725550e" outgoing="_SH8DX61MEeOdBunZhTRw1w" incoming="_SH7csa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH7cq61MEeOdBunZhTRw1w" name="RightHandSide@13f31601">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH7crK1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH7cra1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH7csa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH7crq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH7cr61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH7csK1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH7csa1MEeOdBunZhTRw1w" source="_SH7cra1MEeOdBunZhTRw1w" target="_SH7cqq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH8DEK1MEeOdBunZhTRw1w" name="ExpressionStatement@6afdc6da" incoming="_SH8DYK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH8DEa1MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_SH8DEq1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_SH8DX61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DE61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8DFK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH8DFa1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_SH8DIq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DFq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8DF61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH8DGK1MEeOdBunZhTRw1w" name="Call(+).result(result)" outgoing="_SH8DI61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DGa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8DGq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH8DG61MEeOdBunZhTRw1w" name="Fork(test::a)@5cd0f695" outgoing="_SH8DZa1MEeOdBunZhTRw1w" incoming="_SH8DI61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH8DHK1MEeOdBunZhTRw1w" name="RightHandSide@1aecdfce">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH8DHa1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH8DHq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH8DIq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DH61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8DIK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH8DIa1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DIq1MEeOdBunZhTRw1w" source="_SH8DHq1MEeOdBunZhTRw1w" target="_SH8DFa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DI61MEeOdBunZhTRw1w" source="_SH8DGK1MEeOdBunZhTRw1w" target="_SH8DG61MEeOdBunZhTRw1w"/>
          </node>
          <structuredNodeOutput xmi:id="_SH8DJK1MEeOdBunZhTRw1w" name="Output(i)" outgoing="_SH6OEq1MEeOdBunZhTRw1w" incoming="_SH8DYa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DJa1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8DJq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SH8DJ61MEeOdBunZhTRw1w" name="Output(f)" outgoing="_SH6OE61MEeOdBunZhTRw1w" incoming="_SH8DYq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DKK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8DKa1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SH8DKq1MEeOdBunZhTRw1w" name="Output(h)" outgoing="_SH6OFK1MEeOdBunZhTRw1w" incoming="_SH8DY61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DK61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8DLK1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SH8DLa1MEeOdBunZhTRw1w" name="Output(filename)" outgoing="_SH6OFa1MEeOdBunZhTRw1w" incoming="_SH8DZK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DLq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8DL61MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SH8DMK1MEeOdBunZhTRw1w" name="Output(a)" outgoing="_SH6OFq1MEeOdBunZhTRw1w" incoming="_SH8DZa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DMa1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8DMq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DM61MEeOdBunZhTRw1w" source="_SH6OHq1MEeOdBunZhTRw1w" target="_SH6OKK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DNK1MEeOdBunZhTRw1w" source="_SH6OHa1MEeOdBunZhTRw1w" target="_SH6OJq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DNa1MEeOdBunZhTRw1w" source="_SH6OMa1MEeOdBunZhTRw1w" target="_SH6OPK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DNq1MEeOdBunZhTRw1w" source="_SH6OJq1MEeOdBunZhTRw1w" target="_SH6OOq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DN61MEeOdBunZhTRw1w" source="_SH6ORa1MEeOdBunZhTRw1w" target="_SH6OUK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DOK1MEeOdBunZhTRw1w" source="_SH6OOq1MEeOdBunZhTRw1w" target="_SH6OTq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DOa1MEeOdBunZhTRw1w" source="_SH6OWa1MEeOdBunZhTRw1w" target="_SH6OZK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DOq1MEeOdBunZhTRw1w" source="_SH6OTq1MEeOdBunZhTRw1w" target="_SH6OYq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DO61MEeOdBunZhTRw1w" source="_SH6Oba1MEeOdBunZhTRw1w" target="_SH6OeK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DPK1MEeOdBunZhTRw1w" source="_SH6OYq1MEeOdBunZhTRw1w" target="_SH6Odq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DPa1MEeOdBunZhTRw1w" source="_SH6Oga1MEeOdBunZhTRw1w" target="_SH608q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DPq1MEeOdBunZhTRw1w" source="_SH6Odq1MEeOdBunZhTRw1w" target="_SH608K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DP61MEeOdBunZhTRw1w" source="_SH608K1MEeOdBunZhTRw1w" target="_SH61BK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DQK1MEeOdBunZhTRw1w" source="_SH61Ba1MEeOdBunZhTRw1w" target="_SH61D61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DQa1MEeOdBunZhTRw1w" source="_SH61BK1MEeOdBunZhTRw1w" target="_SH61Da1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DQq1MEeOdBunZhTRw1w" source="_SH61GK1MEeOdBunZhTRw1w" target="_SH61I61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DQ61MEeOdBunZhTRw1w" source="_SH61Da1MEeOdBunZhTRw1w" target="_SH61Ia1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DRK1MEeOdBunZhTRw1w" source="_SH61LK1MEeOdBunZhTRw1w" target="_SH61N61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DRa1MEeOdBunZhTRw1w" source="_SH61Ia1MEeOdBunZhTRw1w" target="_SH61Na1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DRq1MEeOdBunZhTRw1w" source="_SH61Na1MEeOdBunZhTRw1w" target="_SH61Sa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DR61MEeOdBunZhTRw1w" source="_SH61Sa1MEeOdBunZhTRw1w" target="_SH61b61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DSK1MEeOdBunZhTRw1w" source="_SH61cK1MEeOdBunZhTRw1w" target="_SH61gq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DSa1MEeOdBunZhTRw1w" source="_SH61b61MEeOdBunZhTRw1w" target="_SH61gK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DSq1MEeOdBunZhTRw1w" source="_SH61i61MEeOdBunZhTRw1w" target="_SH61lq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DS61MEeOdBunZhTRw1w" source="_SH61gK1MEeOdBunZhTRw1w" target="_SH61lK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DTK1MEeOdBunZhTRw1w" source="_SH61n61MEeOdBunZhTRw1w" target="_SH7cCq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DTa1MEeOdBunZhTRw1w" source="_SH61lK1MEeOdBunZhTRw1w" target="_SH7cCK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DTq1MEeOdBunZhTRw1w" source="_SH7cE61MEeOdBunZhTRw1w" target="_SH7cHq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DT61MEeOdBunZhTRw1w" source="_SH7cCK1MEeOdBunZhTRw1w" target="_SH7cHK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DUK1MEeOdBunZhTRw1w" source="_SH7cJ61MEeOdBunZhTRw1w" target="_SH7cMq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DUa1MEeOdBunZhTRw1w" source="_SH7cHK1MEeOdBunZhTRw1w" target="_SH7cMK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DUq1MEeOdBunZhTRw1w" source="_SH7cO61MEeOdBunZhTRw1w" target="_SH7cRq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DU61MEeOdBunZhTRw1w" source="_SH7cMK1MEeOdBunZhTRw1w" target="_SH7cRK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DVK1MEeOdBunZhTRw1w" source="_SH7cRK1MEeOdBunZhTRw1w" target="_SH7cWK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DVa1MEeOdBunZhTRw1w" source="_SH7cWa1MEeOdBunZhTRw1w" target="_SH7cY61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DVq1MEeOdBunZhTRw1w" source="_SH7cWK1MEeOdBunZhTRw1w" target="_SH7cYa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DV61MEeOdBunZhTRw1w" source="_SH7cYa1MEeOdBunZhTRw1w" target="_SH7cda1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DWK1MEeOdBunZhTRw1w" source="_SH7cdq1MEeOdBunZhTRw1w" target="_SH7cgK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DWa1MEeOdBunZhTRw1w" source="_SH7cda1MEeOdBunZhTRw1w" target="_SH7cfq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DWq1MEeOdBunZhTRw1w" source="_SH7cfq1MEeOdBunZhTRw1w" target="_SH7ckq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DW61MEeOdBunZhTRw1w" source="_SH7ck61MEeOdBunZhTRw1w" target="_SH7cna1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DXK1MEeOdBunZhTRw1w" source="_SH60-61MEeOdBunZhTRw1w" target="_SH7coK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DXa1MEeOdBunZhTRw1w" source="_SH7ckq1MEeOdBunZhTRw1w" target="_SH7cm61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DXq1MEeOdBunZhTRw1w" source="_SH7cm61MEeOdBunZhTRw1w" target="_SH7cqa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DX61MEeOdBunZhTRw1w" source="_SH7cqq1MEeOdBunZhTRw1w" target="_SH8DEq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DYK1MEeOdBunZhTRw1w" source="_SH7cqa1MEeOdBunZhTRw1w" target="_SH8DEK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DYa1MEeOdBunZhTRw1w" source="_SH60-61MEeOdBunZhTRw1w" target="_SH8DJK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DYq1MEeOdBunZhTRw1w" source="_SH61QK1MEeOdBunZhTRw1w" target="_SH8DJ61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DY61MEeOdBunZhTRw1w" source="_SH7cT61MEeOdBunZhTRw1w" target="_SH8DKq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DZK1MEeOdBunZhTRw1w" source="_SH7cbK1MEeOdBunZhTRw1w" target="_SH8DLa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DZa1MEeOdBunZhTRw1w" source="_SH8DG61MEeOdBunZhTRw1w" target="_SH8DMK1MEeOdBunZhTRw1w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH6OF61MEeOdBunZhTRw1w" name="Output(i)" incoming="_SH6OEq1MEeOdBunZhTRw1w" parameter="_SH6OA61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH6OGK1MEeOdBunZhTRw1w" name="Output(f)" incoming="_SH6OE61MEeOdBunZhTRw1w" parameter="_SH6OBq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH6OGa1MEeOdBunZhTRw1w" name="Output(h)" incoming="_SH6OFK1MEeOdBunZhTRw1w" parameter="_SH6OCa1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH6OGq1MEeOdBunZhTRw1w" name="Output(filename)" incoming="_SH6OFa1MEeOdBunZhTRw1w" parameter="_SH6ODK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH6OG61MEeOdBunZhTRw1w" name="Output(a)" incoming="_SH6OFq1MEeOdBunZhTRw1w" parameter="_SH6OD61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SH8DZq1MEeOdBunZhTRw1w" name="Expressions_Assignment$method$1" specification="_SH8qZq1MEeOdBunZhTRw1w" group="_SH8DbK1MEeOdBunZhTRw1w" node="_SH8Da61MEeOdBunZhTRw1w _SH8DbK1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_SH8DZ61MEeOdBunZhTRw1w" name="" type="_SH5m0a1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DaK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8Daa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8Daq1MEeOdBunZhTRw1w" source="_SH8Dcq1MEeOdBunZhTRw1w" target="_SH8Da61MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_SH8DbK1MEeOdBunZhTRw1w" name="Body(Expressions_Assignment$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH8Dba1MEeOdBunZhTRw1w" name="Body" incoming="_SH8DmK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SH8Dbq1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_SH8Db61MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SH8Dlq1MEeOdBunZhTRw1w" type="_SH5m0a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DcK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8Dca1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SH8Dcq1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SH8Daq1MEeOdBunZhTRw1w _SH8Dl61MEeOdBunZhTRw1w _SH8Dma1MEeOdBunZhTRw1w" incoming="_SH8Dlq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SH8Dc61MEeOdBunZhTRw1w" name="Call(Expressions_Assignment$initialization$1)" outgoing="_SH8DmK1MEeOdBunZhTRw1w" incoming="_SH8Dn61MEeOdBunZhTRw1w" operation="_SH8qVa1MEeOdBunZhTRw1w">
            <target xmi:id="_SH8DdK1MEeOdBunZhTRw1w" name="Call(Expressions_Assignment$initialization$1).target" incoming="_SH8Dl61MEeOdBunZhTRw1w" type="_SH5m0a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8Dda1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8Ddq1MEeOdBunZhTRw1w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SH8Dd61MEeOdBunZhTRw1w" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_SH5m161MEeOdBunZhTRw1w">
            <object xmi:id="_SH8DeK1MEeOdBunZhTRw1w" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_SH8Dma1MEeOdBunZhTRw1w" type="_SH5m0a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8Dea1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8Deq1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_SH8De61MEeOdBunZhTRw1w" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_SH8Dmq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DfK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8Dfa1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH8Dfq1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_SH8Df61MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SH8Dmq1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DgK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8Dga1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SH8Dgq1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SH8Dm61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8Dg61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8DhK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH8Dha1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_SH8Dhq1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SH8DnK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8Dh61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8DiK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SH8Dia1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SH8Diq1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_SH8Di61MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SH8Dm61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8DjK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8Dja1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_SH8Djq1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SH8Dnq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8Dj61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8DkK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_SH8Dka1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SH8DnK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8Dkq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8Dk61MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SH8DlK1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SH8Dna1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SH8Dla1MEeOdBunZhTRw1w" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" outgoing="_SH8Dn61MEeOdBunZhTRw1w" incoming="_SH8Dna1MEeOdBunZhTRw1w _SH8Dnq1MEeOdBunZhTRw1w" decisionInputFlow="_SH8Dnq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8Dlq1MEeOdBunZhTRw1w" source="_SH8Db61MEeOdBunZhTRw1w" target="_SH8Dcq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8Dl61MEeOdBunZhTRw1w" source="_SH8Dcq1MEeOdBunZhTRw1w" target="_SH8DdK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8DmK1MEeOdBunZhTRw1w" source="_SH8Dc61MEeOdBunZhTRw1w" target="_SH8Dba1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8Dma1MEeOdBunZhTRw1w" source="_SH8Dcq1MEeOdBunZhTRw1w" target="_SH8DeK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8Dmq1MEeOdBunZhTRw1w" source="_SH8De61MEeOdBunZhTRw1w" target="_SH8Df61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8Dm61MEeOdBunZhTRw1w" source="_SH8Dgq1MEeOdBunZhTRw1w" target="_SH8Di61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8DnK1MEeOdBunZhTRw1w" source="_SH8Dhq1MEeOdBunZhTRw1w" target="_SH8Dka1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8Dna1MEeOdBunZhTRw1w" source="_SH8DlK1MEeOdBunZhTRw1w" target="_SH8Dla1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8Dnq1MEeOdBunZhTRw1w" source="_SH8Djq1MEeOdBunZhTRw1w" target="_SH8Dla1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8Dn61MEeOdBunZhTRw1w" source="_SH8Dla1MEeOdBunZhTRw1w" target="_SH8Dc61MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH8DoK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH8Da61MEeOdBunZhTRw1w" name="Return" incoming="_SH8Daq1MEeOdBunZhTRw1w" parameter="_SH8DZ61MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SH8Doa1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_SH8qaq1MEeOdBunZhTRw1w" group="_SH8Doq1MEeOdBunZhTRw1w" node="_SH8Doq1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_SH8Doq1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SH8Do61MEeOdBunZhTRw1w" name="Expressions_Assignment$initialization$1" specification="_SH8qVa1MEeOdBunZhTRw1w" group="_SH8DpK1MEeOdBunZhTRw1w" node="_SH8DpK1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_SH8DpK1MEeOdBunZhTRw1w" name="Body(Expressions_Assignment$initialization$1)">
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SH8Dpa1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_SH8Dpq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SH8qS61MEeOdBunZhTRw1w" type="_SH5m0a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8Dp61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8DqK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SH8Dqa1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SH8qTK1MEeOdBunZhTRw1w _SH8qTa1MEeOdBunZhTRw1w" incoming="_SH8qS61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH8Dqq1MEeOdBunZhTRw1w" name="Initialization" incoming="_SH8qU61MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH8Dq61MEeOdBunZhTRw1w" name="Set(initializationFlag)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH8DrK1MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_SH8Dra1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SH8qK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8Drq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8Dr61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SH8qIK1MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SH8qIa1MEeOdBunZhTRw1w" name="Write(Expressions_Assignment$initializationFlag$1)" structuralFeature="_SH5m161MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_SH8qIq1MEeOdBunZhTRw1w" name="Write(Expressions_Assignment$initializationFlag$1).object" incoming="_SH8qTK1MEeOdBunZhTRw1w" type="_SH5m0a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qI61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qJK1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SH8qJa1MEeOdBunZhTRw1w" name="Write(Expressions_Assignment$initializationFlag$1).result" type="_SH5m0a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qJq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qJ61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_SH8qKK1MEeOdBunZhTRw1w" name="Write(Expressions_Assignment$initializationFlag$1).value" incoming="_SH8qK61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qKa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qKq1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qK61MEeOdBunZhTRw1w" source="_SH8Dra1MEeOdBunZhTRw1w" target="_SH8qKK1MEeOdBunZhTRw1w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SH8qLK1MEeOdBunZhTRw1w" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_SH5m161MEeOdBunZhTRw1w">
            <object xmi:id="_SH8qLa1MEeOdBunZhTRw1w" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_SH8qTa1MEeOdBunZhTRw1w" type="_SH5m0a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qLq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qL61MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_SH8qMK1MEeOdBunZhTRw1w" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_SH8qTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qMa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qMq1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH8qM61MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_SH8qNK1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SH8qTq1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qNa1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qNq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SH8qN61MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SH8qT61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qOK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qOa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH8qOq1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_SH8qO61MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SH8qUK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qPK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qPa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SH8qPq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SH8qP61MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_SH8qQK1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SH8qT61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qQa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qQq1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_SH8qQ61MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SH8qUq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qRK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qRa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_SH8qRq1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SH8qUK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qR61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qSK1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SH8qSa1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SH8qUa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SH8qSq1MEeOdBunZhTRw1w" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" outgoing="_SH8qU61MEeOdBunZhTRw1w" incoming="_SH8qUa1MEeOdBunZhTRw1w _SH8qUq1MEeOdBunZhTRw1w" decisionInputFlow="_SH8qUq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qS61MEeOdBunZhTRw1w" source="_SH8Dpq1MEeOdBunZhTRw1w" target="_SH8Dqa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qTK1MEeOdBunZhTRw1w" source="_SH8Dqa1MEeOdBunZhTRw1w" target="_SH8qIq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qTa1MEeOdBunZhTRw1w" source="_SH8Dqa1MEeOdBunZhTRw1w" target="_SH8qLa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qTq1MEeOdBunZhTRw1w" source="_SH8qMK1MEeOdBunZhTRw1w" target="_SH8qNK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qT61MEeOdBunZhTRw1w" source="_SH8qN61MEeOdBunZhTRw1w" target="_SH8qQK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qUK1MEeOdBunZhTRw1w" source="_SH8qO61MEeOdBunZhTRw1w" target="_SH8qRq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8qUa1MEeOdBunZhTRw1w" source="_SH8qSa1MEeOdBunZhTRw1w" target="_SH8qSq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qUq1MEeOdBunZhTRw1w" source="_SH8qQ61MEeOdBunZhTRw1w" target="_SH8qSq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH8qU61MEeOdBunZhTRw1w" source="_SH8qSq1MEeOdBunZhTRw1w" target="_SH8Dqq1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH8qVK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_SH8qVa1MEeOdBunZhTRw1w" name="Expressions_Assignment$initialization$1" visibility="protected" method="_SH8Do61MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_SH8qVq1MEeOdBunZhTRw1w" name="test" visibility="public" method="_SH6OAq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_SH8qV61MEeOdBunZhTRw1w" name="i" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qWK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qWa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SH8qWq1MEeOdBunZhTRw1w" name="f" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qW61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qXK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SH8qXa1MEeOdBunZhTRw1w" name="h" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qXq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qX61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SH8qYK1MEeOdBunZhTRw1w" name="filename" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qYa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qYq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SH8qY61MEeOdBunZhTRw1w" name="a" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qZK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qZa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SH8qZq1MEeOdBunZhTRw1w" name="Expressions_Assignment" visibility="package" method="_SH8DZq1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_SH8qZ61MEeOdBunZhTRw1w" name="" visibility="package" type="_SH5m0a1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qaK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qaa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SH8qaq1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_SH8Doa1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SH8qa61MEeOdBunZhTRw1w" name="AssertEqual" group="_SH8qiq1MEeOdBunZhTRw1w" node="_SH8qhK1MEeOdBunZhTRw1w _SH8qha1MEeOdBunZhTRw1w _SH8qhq1MEeOdBunZhTRw1w _SH8qh61MEeOdBunZhTRw1w _SH8qiK1MEeOdBunZhTRw1w _SH8qia1MEeOdBunZhTRw1w _SH8qiq1MEeOdBunZhTRw1w">
      <packageImport xmi:id="_SH8qbK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SH8qba1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SH8qbq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SH8qb61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SH8qcK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SH8qca1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qcq1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qc61MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SH8qdK1MEeOdBunZhTRw1w" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qda1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qdq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SH8qd61MEeOdBunZhTRw1w" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qeK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qea1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qeq1MEeOdBunZhTRw1w" source="_SH8qhK1MEeOdBunZhTRw1w" target="_SH8qha1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qe61MEeOdBunZhTRw1w" source="_SH8qhq1MEeOdBunZhTRw1w" target="_SH8qh61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qfK1MEeOdBunZhTRw1w" source="_SH8qiK1MEeOdBunZhTRw1w" target="_SH8qia1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qfa1MEeOdBunZhTRw1w" source="_SH8qh61MEeOdBunZhTRw1w" target="_SH8qlq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qfq1MEeOdBunZhTRw1w" source="_SH8qia1MEeOdBunZhTRw1w" target="_SH8qnq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qf61MEeOdBunZhTRw1w" source="_SH8qha1MEeOdBunZhTRw1w" target="_SH9RPK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qgK1MEeOdBunZhTRw1w" source="_SH8qia1MEeOdBunZhTRw1w" target="_SH9RXa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qga1MEeOdBunZhTRw1w" source="_SH8qia1MEeOdBunZhTRw1w" target="_SH9Rb61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qgq1MEeOdBunZhTRw1w" source="_SH8qia1MEeOdBunZhTRw1w" target="_SH9Rja1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH8qg61MEeOdBunZhTRw1w" source="_SH8qia1MEeOdBunZhTRw1w" target="_SH9Rsa1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_SH8qiq1MEeOdBunZhTRw1w" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_SH8qi61MEeOdBunZhTRw1w" name="IfStatement@298f130a">
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SH8qjK1MEeOdBunZhTRw1w" name="Test(==)" incoming="_SH94S61MEeOdBunZhTRw1w">
            <first xmi:id="_SH8qja1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_SH94Qq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qjq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qj61MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_SH8qkK1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_SH94Va1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qka1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qkq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_SH8qk61MEeOdBunZhTRw1w" name="Test(==).second" incoming="_SH94RK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qlK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qla1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SH8qlq1MEeOdBunZhTRw1w" name="Fork(Fork(value1))" outgoing="_SH94Qq1MEeOdBunZhTRw1w _SH94Q61MEeOdBunZhTRw1w" incoming="_SH8qfa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH8ql61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_SH8qmK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SH94Q61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qma1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qmq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SH8qm61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_SH94Rq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qnK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qna1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SH8qnq1MEeOdBunZhTRw1w" name="Fork(Fork(value2))" outgoing="_SH94RK1MEeOdBunZhTRw1w _SH94Ra1MEeOdBunZhTRw1w" incoming="_SH8qfq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH8qn61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_SH8qoK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SH94Ra1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qoa1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qoq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SH8qo61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_SH94R61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qpK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qpa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SH8qpq1MEeOdBunZhTRw1w" name="Initial(Test(==))" outgoing="_SH94T61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SH8qp61MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_SH94SK1MEeOdBunZhTRw1w _SH94UK1MEeOdBunZhTRw1w" incoming="_SH94Rq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SH8qqK1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_SH94Sa1MEeOdBunZhTRw1w _SH94Sq1MEeOdBunZhTRw1w" incoming="_SH94R61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH8qqa1MEeOdBunZhTRw1w" name="Call(Not)" incoming="_SH94Ta1MEeOdBunZhTRw1w">
            <argument xmi:id="_SH8qqq1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SH94SK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qq61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qrK1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_SH8qra1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_SH94Vq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qrq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qr61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH8qsK1MEeOdBunZhTRw1w" name="Call(Not)" incoming="_SH94U61MEeOdBunZhTRw1w">
            <argument xmi:id="_SH8qsa1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SH94Sa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qsq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qs61MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_SH8qtK1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_SH94V61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qta1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qtq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_SH8qt61MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_SH94S61MEeOdBunZhTRw1w _SH94Ta1MEeOdBunZhTRw1w" incoming="_SH94Sq1MEeOdBunZhTRw1w _SH94Ua1MEeOdBunZhTRw1w" decisionInputFlow="_SH94Sq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SH8quK1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_SH94Ua1MEeOdBunZhTRw1w _SH94U61MEeOdBunZhTRw1w" incoming="_SH94T61MEeOdBunZhTRw1w _SH94UK1MEeOdBunZhTRw1w" decisionInputFlow="_SH94UK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:MergeNode" xmi:id="_SH8qua1MEeOdBunZhTRw1w" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" outgoing="_SH94WK1MEeOdBunZhTRw1w" incoming="_SH94Va1MEeOdBunZhTRw1w _SH94Vq1MEeOdBunZhTRw1w _SH94V61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH8quq1MEeOdBunZhTRw1w" name="Call(Not)">
            <argument xmi:id="_SH8qu61MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SH94WK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qvK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qva1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_SH8qvq1MEeOdBunZhTRw1w" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH8qv61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH8qwK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH8qwa1MEeOdBunZhTRw1w" name="ExpressionStatement@6fe43847" outgoing="_SH94Wa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH8qwq1MEeOdBunZhTRw1w" name="Call(Write)" incoming="_SH9RVa1MEeOdBunZhTRw1w" behavior="_SH94sq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SH8qw61MEeOdBunZhTRw1w" name="Call(Write).argument(value)" incoming="_SH9RVK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RMK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RMa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH9RMq1MEeOdBunZhTRw1w" name="Tuple@5cda42a3" outgoing="_SH9RVa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH9RM61MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_SH9RNK1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;).result" outgoing="_SH9RUa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RNa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RNq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SH9RN61MEeOdBunZhTRw1w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH9ROK1MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_SH9ROa1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SH9RUa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9ROq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RO61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SH9RPK1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SH8qf61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RPa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RPq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SH9RP61MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SH9RUq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RQK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RQa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH9RQq1MEeOdBunZhTRw1w" name="Value(&quot;==&quot;)">
                <result xmi:id="_SH9RQ61MEeOdBunZhTRw1w" name="Value(&quot;==&quot;).result" outgoing="_SH9RU61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RRK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RRa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SH9RRq1MEeOdBunZhTRw1w" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH9RR61MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_SH9RSK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SH9RUq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RSa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RSq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SH9RS61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SH9RU61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RTK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RTa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SH9RTq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SH9RVK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RT61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RUK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9RUa1MEeOdBunZhTRw1w" source="_SH9RNK1MEeOdBunZhTRw1w" target="_SH9ROa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9RUq1MEeOdBunZhTRw1w" source="_SH9RP61MEeOdBunZhTRw1w" target="_SH9RSK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9RU61MEeOdBunZhTRw1w" source="_SH9RQ61MEeOdBunZhTRw1w" target="_SH9RS61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9RVK1MEeOdBunZhTRw1w" source="_SH9RTq1MEeOdBunZhTRw1w" target="_SH8qw61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SH9RVa1MEeOdBunZhTRw1w" source="_SH9RMq1MEeOdBunZhTRw1w" target="_SH8qwq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH9RVq1MEeOdBunZhTRw1w" name="ExpressionStatement@7944fdaf" outgoing="_SH94Wq1MEeOdBunZhTRw1w" incoming="_SH94Wa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH9RV61MEeOdBunZhTRw1w" name="Call(Write)" incoming="_SH9R0a1MEeOdBunZhTRw1w" behavior="_SH94sq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SH9RWK1MEeOdBunZhTRw1w" name="Call(Write).argument(value)" incoming="_SH9R0K1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RWa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RWq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH9RW61MEeOdBunZhTRw1w" name="Tuple@71c5ee17" outgoing="_SH9R0a1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH9RXK1MEeOdBunZhTRw1w" name="Call(IsEmpty)">
                <argument xmi:id="_SH9RXa1MEeOdBunZhTRw1w" name="Call(IsEmpty).argument(seq)" incoming="_SH8qgK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RXq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RX61MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_SH9RYK1MEeOdBunZhTRw1w" name="Call(IsEmpty).result()" outgoing="_SH9Rya1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RYa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RYq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH9RY61MEeOdBunZhTRw1w" name="ConditionalTestExpression@52030b7a.operand2" incoming="_SH9Ryq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH9RZK1MEeOdBunZhTRw1w" name="Value(&quot;null&quot;)">
                  <result xmi:id="_SH9RZa1MEeOdBunZhTRw1w" name="Value(&quot;null&quot;).result" outgoing="_SH9RbK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RZq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RZ61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SH9RaK1MEeOdBunZhTRw1w" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <structuredNodeOutput xmi:id="_SH9Raa1MEeOdBunZhTRw1w" name="ConditionalTestExpression@52030b7a.operand2.result" outgoing="_SH9Rzq1MEeOdBunZhTRw1w" incoming="_SH9RbK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9Raq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9Ra61MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9RbK1MEeOdBunZhTRw1w" source="_SH9RZa1MEeOdBunZhTRw1w" target="_SH9Raa1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH9Rba1MEeOdBunZhTRw1w" name="ConditionalTestExpression@52030b7a.operand3" incoming="_SH9RzK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SH9Rbq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_SH9Rb61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).object" incoming="_SH8qga1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RcK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9Rca1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SH9Rcq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).result" outgoing="_SH9Rva1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9Rc61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RdK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH9Rda1MEeOdBunZhTRw1w" name="ConditionalTestExpression@2e274249.operand2" incoming="_SH9Rvq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH9Rdq1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SH9Rd61MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;).result" outgoing="_SH9Rq61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9ReK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9Rea1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SH9Req1MEeOdBunZhTRw1w" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_SH9Re61MEeOdBunZhTRw1w" name="CastExpression@73a3e07c" mode="parallel" outputElement="_SH9Rjq1MEeOdBunZhTRw1w" inputElement="_SH9Rja1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:MergeNode" xmi:id="_SH9RfK1MEeOdBunZhTRw1w" name="Merge(CastExpression@73a3e07c.operand)" outgoing="_SH9RjK1MEeOdBunZhTRw1w" incoming="_SH9Ria1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SH9Rfa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_SH9Rfq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).object" incoming="_SH9Rhq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9Rf61MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RgK1MEeOdBunZhTRw1w" value="1"/>
                      </object>
                      <result xmi:id="_SH9Rga1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).result" outgoing="_SH9RiK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9Rgq1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9Rg61MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SH9RhK1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(String).object)" outgoing="_SH9Rhq1MEeOdBunZhTRw1w _SH9Rh61MEeOdBunZhTRw1w" incoming="_SH9Ri61MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_SH9Rha1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(String).result)" outgoing="_SH9Ria1MEeOdBunZhTRw1w" incoming="_SH9Rh61MEeOdBunZhTRw1w _SH9RiK1MEeOdBunZhTRw1w" decisionInputFlow="_SH9RiK1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Rhq1MEeOdBunZhTRw1w" source="_SH9RhK1MEeOdBunZhTRw1w" target="_SH9Rfq1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Rh61MEeOdBunZhTRw1w" source="_SH9RhK1MEeOdBunZhTRw1w" target="_SH9Rha1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9RiK1MEeOdBunZhTRw1w" source="_SH9Rga1MEeOdBunZhTRw1w" target="_SH9Rha1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Ria1MEeOdBunZhTRw1w" source="_SH9Rha1MEeOdBunZhTRw1w" target="_SH9RfK1MEeOdBunZhTRw1w">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH9Riq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Ri61MEeOdBunZhTRw1w" source="_SH9Rja1MEeOdBunZhTRw1w" target="_SH9RhK1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9RjK1MEeOdBunZhTRw1w" source="_SH9RfK1MEeOdBunZhTRw1w" target="_SH9Rjq1MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SH9Rja1MEeOdBunZhTRw1w" name="CastExpression@73a3e07c.inputElement" outgoing="_SH9Ri61MEeOdBunZhTRw1w" incoming="_SH8qgq1MEeOdBunZhTRw1w" regionAsInput="_SH9Re61MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SH9Rjq1MEeOdBunZhTRw1w" name="CastExpression@73a3e07c.outputElement" outgoing="_SH9RrK1MEeOdBunZhTRw1w" incoming="_SH9RjK1MEeOdBunZhTRw1w" regionAsOutput="_SH9Re61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH9Rj61MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_SH9RkK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SH9Rq61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9Rka1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9Rkq1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_SH9Rk61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SH9RrK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RlK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9Rla1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SH9Rlq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SH9Rra1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9Rl61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RmK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH9Rma1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SH9Rmq1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;).result" outgoing="_SH9Rrq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9Rm61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RnK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SH9Rna1MEeOdBunZhTRw1w" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH9Rnq1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_SH9Rn61MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SH9Rra1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9RoK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9Roa1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_SH9Roq1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SH9Rrq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9Ro61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RpK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SH9Rpa1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SH9Rr61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9Rpq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9Rp61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <structuredNodeOutput xmi:id="_SH9RqK1MEeOdBunZhTRw1w" name="ConditionalTestExpression@2e274249.operand2.result" outgoing="_SH9Rwq1MEeOdBunZhTRw1w" incoming="_SH9Rr61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9Rqa1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9Rqq1MEeOdBunZhTRw1w" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Rq61MEeOdBunZhTRw1w" source="_SH9Rd61MEeOdBunZhTRw1w" target="_SH9RkK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9RrK1MEeOdBunZhTRw1w" source="_SH9Rjq1MEeOdBunZhTRw1w" target="_SH9Rk61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Rra1MEeOdBunZhTRw1w" source="_SH9Rlq1MEeOdBunZhTRw1w" target="_SH9Rn61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Rrq1MEeOdBunZhTRw1w" source="_SH9Rmq1MEeOdBunZhTRw1w" target="_SH9Roq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Rr61MEeOdBunZhTRw1w" source="_SH9Rpa1MEeOdBunZhTRw1w" target="_SH9RqK1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH9RsK1MEeOdBunZhTRw1w" name="ConditionalTestExpression@2e274249.operand3" incoming="_SH9RwK1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:MergeNode" xmi:id="_SH9Rsa1MEeOdBunZhTRw1w" name="Merge(Fork(value2))" outgoing="_SH9Rta1MEeOdBunZhTRw1w" incoming="_SH8qg61MEeOdBunZhTRw1w"/>
                  <structuredNodeOutput xmi:id="_SH9Rsq1MEeOdBunZhTRw1w" name="ConditionalTestExpression@2e274249.operand3.result" outgoing="_SH9Rw61MEeOdBunZhTRw1w" incoming="_SH9Rta1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9Rs61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9RtK1MEeOdBunZhTRw1w" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Rta1MEeOdBunZhTRw1w" source="_SH9Rsa1MEeOdBunZhTRw1w" target="_SH9Rsq1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_SH9Rtq1MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@2e274249)" outgoing="_SH9RvK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SH9Rt61MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@2e274249)" outgoing="_SH9Rvq1MEeOdBunZhTRw1w _SH9RwK1MEeOdBunZhTRw1w" incoming="_SH9RvK1MEeOdBunZhTRw1w _SH9Rva1MEeOdBunZhTRw1w" decisionInputFlow="_SH9Rva1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_SH9RuK1MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@2e274249.result)" outgoing="_SH9RxK1MEeOdBunZhTRw1w" incoming="_SH9Rwq1MEeOdBunZhTRw1w _SH9Rw61MEeOdBunZhTRw1w"/>
                <structuredNodeOutput xmi:id="_SH9Rua1MEeOdBunZhTRw1w" name="ConditionalTestExpression@52030b7a.operand3.result" outgoing="_SH9Rz61MEeOdBunZhTRw1w" incoming="_SH9RxK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9Ruq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9Ru61MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SH9RvK1MEeOdBunZhTRw1w" source="_SH9Rtq1MEeOdBunZhTRw1w" target="_SH9Rt61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Rva1MEeOdBunZhTRw1w" source="_SH9Rcq1MEeOdBunZhTRw1w" target="_SH9Rt61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SH9Rvq1MEeOdBunZhTRw1w" source="_SH9Rt61MEeOdBunZhTRw1w" target="_SH9Rda1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH9Rv61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SH9RwK1MEeOdBunZhTRw1w" source="_SH9Rt61MEeOdBunZhTRw1w" target="_SH9RsK1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH9Rwa1MEeOdBunZhTRw1w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Rwq1MEeOdBunZhTRw1w" source="_SH9RqK1MEeOdBunZhTRw1w" target="_SH9RuK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Rw61MEeOdBunZhTRw1w" source="_SH9Rsq1MEeOdBunZhTRw1w" target="_SH9RuK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9RxK1MEeOdBunZhTRw1w" source="_SH9RuK1MEeOdBunZhTRw1w" target="_SH9Rua1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SH9Rxa1MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@52030b7a)" outgoing="_SH9RyK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SH9Rxq1MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@52030b7a)" outgoing="_SH9Ryq1MEeOdBunZhTRw1w _SH9RzK1MEeOdBunZhTRw1w" incoming="_SH9RyK1MEeOdBunZhTRw1w _SH9Rya1MEeOdBunZhTRw1w" decisionInputFlow="_SH9Rya1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SH9Rx61MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@52030b7a.result)" outgoing="_SH9R0K1MEeOdBunZhTRw1w" incoming="_SH9Rzq1MEeOdBunZhTRw1w _SH9Rz61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SH9RyK1MEeOdBunZhTRw1w" source="_SH9Rxa1MEeOdBunZhTRw1w" target="_SH9Rxq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Rya1MEeOdBunZhTRw1w" source="_SH9RYK1MEeOdBunZhTRw1w" target="_SH9Rxq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SH9Ryq1MEeOdBunZhTRw1w" source="_SH9Rxq1MEeOdBunZhTRw1w" target="_SH9RY61MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH9Ry61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SH9RzK1MEeOdBunZhTRw1w" source="_SH9Rxq1MEeOdBunZhTRw1w" target="_SH9Rba1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH9Rza1MEeOdBunZhTRw1w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Rzq1MEeOdBunZhTRw1w" source="_SH9Raa1MEeOdBunZhTRw1w" target="_SH9Rx61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9Rz61MEeOdBunZhTRw1w" source="_SH9Rua1MEeOdBunZhTRw1w" target="_SH9Rx61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9R0K1MEeOdBunZhTRw1w" source="_SH9Rx61MEeOdBunZhTRw1w" target="_SH9RWK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SH9R0a1MEeOdBunZhTRw1w" source="_SH9RW61MEeOdBunZhTRw1w" target="_SH9RV61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH9R0q1MEeOdBunZhTRw1w" name="ExpressionStatement@150ccf31" incoming="_SH94Wq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH9R061MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_SH9R4a1MEeOdBunZhTRw1w">
              <argument xmi:id="_SH9R1K1MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_SH9R4K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9R1a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9R1q1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH9R161MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9R2K1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9R2a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH9R2q1MEeOdBunZhTRw1w" name="Tuple@51e8bbb4" outgoing="_SH9R4a1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH9R261MEeOdBunZhTRw1w" name="Value(&quot;&quot;)">
                <result xmi:id="_SH9R3K1MEeOdBunZhTRw1w" name="Value(&quot;&quot;).result" outgoing="_SH9R4K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9R3a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH9R3q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SH9R361MEeOdBunZhTRw1w" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH9R4K1MEeOdBunZhTRw1w" source="_SH9R3K1MEeOdBunZhTRw1w" target="_SH9R1K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SH9R4a1MEeOdBunZhTRw1w" source="_SH9R2q1MEeOdBunZhTRw1w" target="_SH9R061MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH9R4q1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_SH9R461MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH9R5K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94QK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SH94Qa1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94Qq1MEeOdBunZhTRw1w" source="_SH8qlq1MEeOdBunZhTRw1w" target="_SH8qja1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94Q61MEeOdBunZhTRw1w" source="_SH8qlq1MEeOdBunZhTRw1w" target="_SH8qmK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94RK1MEeOdBunZhTRw1w" source="_SH8qnq1MEeOdBunZhTRw1w" target="_SH8qk61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94Ra1MEeOdBunZhTRw1w" source="_SH8qnq1MEeOdBunZhTRw1w" target="_SH8qoK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94Rq1MEeOdBunZhTRw1w" source="_SH8qm61MEeOdBunZhTRw1w" target="_SH8qp61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94R61MEeOdBunZhTRw1w" source="_SH8qo61MEeOdBunZhTRw1w" target="_SH8qqK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94SK1MEeOdBunZhTRw1w" source="_SH8qp61MEeOdBunZhTRw1w" target="_SH8qqq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94Sa1MEeOdBunZhTRw1w" source="_SH8qqK1MEeOdBunZhTRw1w" target="_SH8qsa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94Sq1MEeOdBunZhTRw1w" source="_SH8qqK1MEeOdBunZhTRw1w" target="_SH8qt61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH94S61MEeOdBunZhTRw1w" source="_SH8qt61MEeOdBunZhTRw1w" target="_SH8qjK1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH94TK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH94Ta1MEeOdBunZhTRw1w" source="_SH8qt61MEeOdBunZhTRw1w" target="_SH8qqa1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH94Tq1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH94T61MEeOdBunZhTRw1w" source="_SH8qpq1MEeOdBunZhTRw1w" target="_SH8quK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94UK1MEeOdBunZhTRw1w" source="_SH8qp61MEeOdBunZhTRw1w" target="_SH8quK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH94Ua1MEeOdBunZhTRw1w" source="_SH8quK1MEeOdBunZhTRw1w" target="_SH8qt61MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH94Uq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH94U61MEeOdBunZhTRw1w" source="_SH8quK1MEeOdBunZhTRw1w" target="_SH8qsK1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH94VK1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94Va1MEeOdBunZhTRw1w" source="_SH8qkK1MEeOdBunZhTRw1w" target="_SH8qua1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94Vq1MEeOdBunZhTRw1w" source="_SH8qra1MEeOdBunZhTRw1w" target="_SH8qua1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94V61MEeOdBunZhTRw1w" source="_SH8qtK1MEeOdBunZhTRw1w" target="_SH8qua1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94WK1MEeOdBunZhTRw1w" source="_SH8qua1MEeOdBunZhTRw1w" target="_SH8qu61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH94Wa1MEeOdBunZhTRw1w" source="_SH8qwa1MEeOdBunZhTRw1w" target="_SH9RVq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH94Wq1MEeOdBunZhTRw1w" source="_SH9RVq1MEeOdBunZhTRw1w" target="_SH9R0q1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_SH94W61MEeOdBunZhTRw1w" body="_SH8qwa1MEeOdBunZhTRw1w _SH9RVq1MEeOdBunZhTRw1w _SH9R0q1MEeOdBunZhTRw1w" decider="_SH8qvq1MEeOdBunZhTRw1w" successorClause="_SH94XK1MEeOdBunZhTRw1w" test="_SH8qjK1MEeOdBunZhTRw1w _SH8ql61MEeOdBunZhTRw1w _SH8qn61MEeOdBunZhTRw1w _SH8qqa1MEeOdBunZhTRw1w _SH8qsK1MEeOdBunZhTRw1w _SH8quq1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_SH94XK1MEeOdBunZhTRw1w" decider="_SH9R461MEeOdBunZhTRw1w" predecessorClause="_SH94W61MEeOdBunZhTRw1w" test="_SH9R4q1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH8qhK1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_SH8qeq1MEeOdBunZhTRw1w" parameter="_SH8qca1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SH8qha1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_SH8qf61MEeOdBunZhTRw1w" incoming="_SH8qeq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH8qhq1MEeOdBunZhTRw1w" name="Input(value1)" outgoing="_SH8qe61MEeOdBunZhTRw1w" parameter="_SH8qdK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SH8qh61MEeOdBunZhTRw1w" name="Fork(value1)" outgoing="_SH8qfa1MEeOdBunZhTRw1w" incoming="_SH8qe61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH8qiK1MEeOdBunZhTRw1w" name="Input(value2)" outgoing="_SH8qfK1MEeOdBunZhTRw1w" parameter="_SH8qd61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SH8qia1MEeOdBunZhTRw1w" name="Fork(value2)" outgoing="_SH8qfq1MEeOdBunZhTRw1w _SH8qgK1MEeOdBunZhTRw1w _SH8qga1MEeOdBunZhTRw1w _SH8qgq1MEeOdBunZhTRw1w _SH8qg61MEeOdBunZhTRw1w" incoming="_SH8qfK1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SH94Xa1MEeOdBunZhTRw1w" name="AssertFalse" group="_SH94cq1MEeOdBunZhTRw1w" node="_SH94bq1MEeOdBunZhTRw1w _SH94b61MEeOdBunZhTRw1w _SH94cK1MEeOdBunZhTRw1w _SH94ca1MEeOdBunZhTRw1w _SH94cq1MEeOdBunZhTRw1w">
      <elementImport xmi:id="_SH94Xq1MEeOdBunZhTRw1w" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_SH94X61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SH94YK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SH94Ya1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SH94Yq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SH94Y61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SH94ZK1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94Za1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94Zq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SH94Z61MEeOdBunZhTRw1w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94aK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94aa1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94aq1MEeOdBunZhTRw1w" source="_SH94bq1MEeOdBunZhTRw1w" target="_SH94b61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94a61MEeOdBunZhTRw1w" source="_SH94cK1MEeOdBunZhTRw1w" target="_SH94ca1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94bK1MEeOdBunZhTRw1w" source="_SH94b61MEeOdBunZhTRw1w" target="_SH94ha1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94ba1MEeOdBunZhTRw1w" source="_SH94ca1MEeOdBunZhTRw1w" target="_SH94mq1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_SH94cq1MEeOdBunZhTRw1w" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH94c61MEeOdBunZhTRw1w" name="ExpressionStatement@67ac69a6">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH94dK1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_SH94sa1MEeOdBunZhTRw1w" behavior="_SH-fZq1MEeOdBunZhTRw1w">
            <argument xmi:id="_SH94da1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_SH94r61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94dq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94d61MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <argument xmi:id="_SH94eK1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_SH94sK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94ea1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94eq1MEeOdBunZhTRw1w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH94e61MEeOdBunZhTRw1w" name="Tuple@6764882d" outgoing="_SH94sa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH94fK1MEeOdBunZhTRw1w" name="Value(&quot;! &quot;)">
              <result xmi:id="_SH94fa1MEeOdBunZhTRw1w" name="Value(&quot;! &quot;).result" outgoing="_SH94pa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94fq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94f61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_SH94gK1MEeOdBunZhTRw1w" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH94ga1MEeOdBunZhTRw1w" name="Call(Concat)">
              <argument xmi:id="_SH94gq1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SH94pa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94g61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94hK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SH94ha1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SH94bK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94hq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94h61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH94iK1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SH94r61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94ia1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94iq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH94i61MEeOdBunZhTRw1w" name="Value(false)">
              <result xmi:id="_SH94jK1MEeOdBunZhTRw1w" name="Value(false).result" outgoing="_SH94rq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94ja1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94jq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_SH94j61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SH94kK1MEeOdBunZhTRw1w" name="Test(==)">
              <first xmi:id="_SH94ka1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_SH94pq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94kq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94k61MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SH94lK1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_SH94qa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94la1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94lq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SH94l61MEeOdBunZhTRw1w" name="Test(==).second" incoming="_SH94rq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94mK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94ma1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH94mq1MEeOdBunZhTRw1w" name="Fork(Fork(condition))" outgoing="_SH94pq1MEeOdBunZhTRw1w _SH94p61MEeOdBunZhTRw1w" incoming="_SH94ba1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH94m61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
              <argument xmi:id="_SH94nK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SH94p61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94na1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94nq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SH94n61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_SH94qK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94oK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94oa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH94oq1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_SH94qq1MEeOdBunZhTRw1w _SH94q61MEeOdBunZhTRw1w" incoming="_SH94qK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_SH94o61MEeOdBunZhTRw1w" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_SH94sK1MEeOdBunZhTRw1w" incoming="_SH94qa1MEeOdBunZhTRw1w _SH94rK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SH94pK1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_SH94rK1MEeOdBunZhTRw1w" incoming="_SH94qq1MEeOdBunZhTRw1w _SH94q61MEeOdBunZhTRw1w" decisionInputFlow="_SH94q61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94pa1MEeOdBunZhTRw1w" source="_SH94fa1MEeOdBunZhTRw1w" target="_SH94gq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94pq1MEeOdBunZhTRw1w" source="_SH94mq1MEeOdBunZhTRw1w" target="_SH94ka1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94p61MEeOdBunZhTRw1w" source="_SH94mq1MEeOdBunZhTRw1w" target="_SH94nK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94qK1MEeOdBunZhTRw1w" source="_SH94n61MEeOdBunZhTRw1w" target="_SH94oq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94qa1MEeOdBunZhTRw1w" source="_SH94lK1MEeOdBunZhTRw1w" target="_SH94o61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94qq1MEeOdBunZhTRw1w" source="_SH94oq1MEeOdBunZhTRw1w" target="_SH94pK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94q61MEeOdBunZhTRw1w" source="_SH94oq1MEeOdBunZhTRw1w" target="_SH94pK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94rK1MEeOdBunZhTRw1w" source="_SH94pK1MEeOdBunZhTRw1w" target="_SH94o61MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH94ra1MEeOdBunZhTRw1w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94rq1MEeOdBunZhTRw1w" source="_SH94jK1MEeOdBunZhTRw1w" target="_SH94l61MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94r61MEeOdBunZhTRw1w" source="_SH94iK1MEeOdBunZhTRw1w" target="_SH94da1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94sK1MEeOdBunZhTRw1w" source="_SH94o61MEeOdBunZhTRw1w" target="_SH94eK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH94sa1MEeOdBunZhTRw1w" source="_SH94e61MEeOdBunZhTRw1w" target="_SH94dK1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH94bq1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_SH94aq1MEeOdBunZhTRw1w" parameter="_SH94ZK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SH94b61MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_SH94bK1MEeOdBunZhTRw1w" incoming="_SH94aq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH94cK1MEeOdBunZhTRw1w" name="Input(condition)" outgoing="_SH94a61MEeOdBunZhTRw1w" parameter="_SH94Z61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SH94ca1MEeOdBunZhTRw1w" name="Fork(condition)" outgoing="_SH94ba1MEeOdBunZhTRw1w" incoming="_SH94a61MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SH94sq1MEeOdBunZhTRw1w" name="Write" group="_SH94v61MEeOdBunZhTRw1w" node="_SH94va1MEeOdBunZhTRw1w _SH94vq1MEeOdBunZhTRw1w _SH94v61MEeOdBunZhTRw1w">
      <packageImport xmi:id="_SH94s61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SH94tK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SH94ta1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SH94tq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SH94t61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SH94uK1MEeOdBunZhTRw1w" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94ua1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94uq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94u61MEeOdBunZhTRw1w" source="_SH94va1MEeOdBunZhTRw1w" target="_SH94vq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94vK1MEeOdBunZhTRw1w" source="_SH94vq1MEeOdBunZhTRw1w" target="_SH94zK1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_SH94v61MEeOdBunZhTRw1w" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH94wK1MEeOdBunZhTRw1w" name="ExpressionStatement@22c6c4c6">
          <node xmi:type="uml:ExpansionRegion" xmi:id="_SH94wa1MEeOdBunZhTRw1w" name="Collect(Call(write))" incoming="_SH-fZa1MEeOdBunZhTRw1w" mode="parallel" inputElement="_SH940a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_SH94wq1MEeOdBunZhTRw1w" name="Call(write)">
              <argument xmi:id="_SH94w61MEeOdBunZhTRw1w" name="Call(write).argument(value)" incoming="_SH94z61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94xK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94xa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH94xq1MEeOdBunZhTRw1w" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94x61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94yK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_SH94ya1MEeOdBunZhTRw1w" name="Call(write).target" incoming="_SH940K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94yq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94y61MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <structuredNodeInput xmi:id="_SH94zK1MEeOdBunZhTRw1w" name="Collect(Call(write)).input(Fork(value))" outgoing="_SH94z61MEeOdBunZhTRw1w" incoming="_SH94vK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH94za1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH94zq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeInput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH94z61MEeOdBunZhTRw1w" source="_SH94zK1MEeOdBunZhTRw1w" target="_SH94w61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH940K1MEeOdBunZhTRw1w" source="_SH940a1MEeOdBunZhTRw1w" target="_SH94ya1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SH940a1MEeOdBunZhTRw1w" name="Collect(Call(write)).inputElement" outgoing="_SH940K1MEeOdBunZhTRw1w" incoming="_SH-fZK1MEeOdBunZhTRw1w" regionAsInput="_SH94wa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH940q1MEeOdBunZhTRw1w" name="Feature(Call(At).result())" outgoing="_SH-fZa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH94061MEeOdBunZhTRw1w" name="Call(At)" incoming="_SH-fYq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SH941K1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_SH-fYK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH941a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH941q1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_SH94161MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_SH-fY61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fUK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fUa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH-fUq1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_SH-fZK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fU61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fVK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH-fVa1MEeOdBunZhTRw1w" name="Tuple@58421ef8" outgoing="_SH-fYq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_SH-fVq1MEeOdBunZhTRw1w" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_SH-fV61MEeOdBunZhTRw1w" name="ReadExtent(StandardOutputChannel).result" outgoing="_SH-fYK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fWK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fWa1MEeOdBunZhTRw1w" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH-fWq1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SH-fW61MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SH-fYa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fXK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fXa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SH-fXq1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SH-fX61MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_SH-fY61MEeOdBunZhTRw1w" incoming="_SH-fYa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fYK1MEeOdBunZhTRw1w" source="_SH-fV61MEeOdBunZhTRw1w" target="_SH941K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fYa1MEeOdBunZhTRw1w" source="_SH-fW61MEeOdBunZhTRw1w" target="_SH-fX61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SH-fYq1MEeOdBunZhTRw1w" source="_SH-fVa1MEeOdBunZhTRw1w" target="_SH94061MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fY61MEeOdBunZhTRw1w" source="_SH-fX61MEeOdBunZhTRw1w" target="_SH94161MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fZK1MEeOdBunZhTRw1w" source="_SH-fUq1MEeOdBunZhTRw1w" target="_SH940a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SH-fZa1MEeOdBunZhTRw1w" source="_SH940q1MEeOdBunZhTRw1w" target="_SH94wa1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH94va1MEeOdBunZhTRw1w" name="Input(value)" outgoing="_SH94u61MEeOdBunZhTRw1w" parameter="_SH94uK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SH94vq1MEeOdBunZhTRw1w" name="Fork(value)" outgoing="_SH94vK1MEeOdBunZhTRw1w" incoming="_SH94u61MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SH-fZq1MEeOdBunZhTRw1w" name="AssertTrue" group="_SH-feq1MEeOdBunZhTRw1w" node="_SH-fdq1MEeOdBunZhTRw1w _SH-fd61MEeOdBunZhTRw1w _SH-feK1MEeOdBunZhTRw1w _SH-fea1MEeOdBunZhTRw1w _SH-feq1MEeOdBunZhTRw1w">
      <packageImport xmi:id="_SH-fZ61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SH-faK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SH-faa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SH-faq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SH-fa61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SH-fbK1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fba1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fbq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SH-fb61MEeOdBunZhTRw1w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fcK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fca1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fcq1MEeOdBunZhTRw1w" source="_SH-fdq1MEeOdBunZhTRw1w" target="_SH-fd61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fc61MEeOdBunZhTRw1w" source="_SH-feK1MEeOdBunZhTRw1w" target="_SH-fea1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fdK1MEeOdBunZhTRw1w" source="_SH-fea1MEeOdBunZhTRw1w" target="_SH-fi61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fda1MEeOdBunZhTRw1w" source="_SH-fd61MEeOdBunZhTRw1w" target="_SH-fr61MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_SH-feq1MEeOdBunZhTRw1w" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_SH-fe61MEeOdBunZhTRw1w" name="IfStatement@17a82a6e">
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH-ffK1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_SH-ffa1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SH-fxa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-ffq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-ff61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SH-fgK1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SH-fga1MEeOdBunZhTRw1w" name="Test(==)">
            <first xmi:id="_SH-fgq1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_SH-fva1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fg61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fhK1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_SH-fha1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_SH-fwK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fhq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fh61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_SH-fiK1MEeOdBunZhTRw1w" name="Test(==).second" incoming="_SH-fxa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fia1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fiq1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SH-fi61MEeOdBunZhTRw1w" name="Fork(Fork(condition))" outgoing="_SH-fva1MEeOdBunZhTRw1w _SH-fvq1MEeOdBunZhTRw1w" incoming="_SH-fdK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH-fjK1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_SH-fja1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SH-fvq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fjq1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fj61MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SH-fkK1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_SH-fv61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fka1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fkq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SH-fk61MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_SH-fwa1MEeOdBunZhTRw1w _SH-fwq1MEeOdBunZhTRw1w" incoming="_SH-fv61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:MergeNode" xmi:id="_SH-flK1MEeOdBunZhTRw1w" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_SH-fxq1MEeOdBunZhTRw1w" incoming="_SH-fwK1MEeOdBunZhTRw1w _SH-fw61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SH-fla1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_SH-fw61MEeOdBunZhTRw1w" incoming="_SH-fwa1MEeOdBunZhTRw1w _SH-fwq1MEeOdBunZhTRw1w" decisionInputFlow="_SH-fwq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH-flq1MEeOdBunZhTRw1w" name="Call(Not)">
            <argument xmi:id="_SH-fl61MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SH-fxq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fmK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fma1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_SH-fmq1MEeOdBunZhTRw1w" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fm61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fnK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH-fna1MEeOdBunZhTRw1w" name="ExpressionStatement@4cfb2bce">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH-fnq1MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_SH-ft61MEeOdBunZhTRw1w">
              <argument xmi:id="_SH-fn61MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_SH-ftq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-foK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-foa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SH-foq1MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fo61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fpK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SH-fpa1MEeOdBunZhTRw1w" name="Tuple@23516313" outgoing="_SH-ft61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH-fpq1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_SH-fp61MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;).result" outgoing="_SH-fta1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fqK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fqa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SH-fqq1MEeOdBunZhTRw1w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SH-fq61MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_SH-frK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SH-fta1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fra1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-frq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SH-fr61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SH-fda1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fsK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fsa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SH-fsq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SH-ftq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fs61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-ftK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fta1MEeOdBunZhTRw1w" source="_SH-fp61MEeOdBunZhTRw1w" target="_SH-frK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-ftq1MEeOdBunZhTRw1w" source="_SH-fsq1MEeOdBunZhTRw1w" target="_SH-fn61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SH-ft61MEeOdBunZhTRw1w" source="_SH-fpa1MEeOdBunZhTRw1w" target="_SH-fnq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SH-fuK1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_SH-fua1MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH-fuq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH-fu61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SH-fvK1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fva1MEeOdBunZhTRw1w" source="_SH-fi61MEeOdBunZhTRw1w" target="_SH-fgq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fvq1MEeOdBunZhTRw1w" source="_SH-fi61MEeOdBunZhTRw1w" target="_SH-fja1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fv61MEeOdBunZhTRw1w" source="_SH-fkK1MEeOdBunZhTRw1w" target="_SH-fk61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fwK1MEeOdBunZhTRw1w" source="_SH-fha1MEeOdBunZhTRw1w" target="_SH-flK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fwa1MEeOdBunZhTRw1w" source="_SH-fk61MEeOdBunZhTRw1w" target="_SH-fla1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fwq1MEeOdBunZhTRw1w" source="_SH-fk61MEeOdBunZhTRw1w" target="_SH-fla1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fw61MEeOdBunZhTRw1w" source="_SH-fla1MEeOdBunZhTRw1w" target="_SH-flK1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SH-fxK1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fxa1MEeOdBunZhTRw1w" source="_SH-ffa1MEeOdBunZhTRw1w" target="_SH-fiK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SH-fxq1MEeOdBunZhTRw1w" source="_SH-flK1MEeOdBunZhTRw1w" target="_SH-fl61MEeOdBunZhTRw1w"/>
          <clause xmi:id="_SH-fx61MEeOdBunZhTRw1w" body="_SH-fna1MEeOdBunZhTRw1w" decider="_SH-fmq1MEeOdBunZhTRw1w" successorClause="_SH-fyK1MEeOdBunZhTRw1w" test="_SH-ffK1MEeOdBunZhTRw1w _SH-fga1MEeOdBunZhTRw1w _SH-fjK1MEeOdBunZhTRw1w _SH-flq1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_SH-fyK1MEeOdBunZhTRw1w" decider="_SH-fua1MEeOdBunZhTRw1w" predecessorClause="_SH-fx61MEeOdBunZhTRw1w" test="_SH-fuK1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH-fdq1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_SH-fcq1MEeOdBunZhTRw1w" parameter="_SH-fbK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SH-fd61MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_SH-fda1MEeOdBunZhTRw1w" incoming="_SH-fcq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SH-feK1MEeOdBunZhTRw1w" name="Input(condition)" outgoing="_SH-fc61MEeOdBunZhTRw1w" parameter="_SH-fb61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SH-fea1MEeOdBunZhTRw1w" name="Fork(condition)" outgoing="_SH-fdK1MEeOdBunZhTRw1w" incoming="_SH-fc61MEeOdBunZhTRw1w"/>
    </packagedElement>
    <profileApplication xmi:id="_SH-fya1MEeOdBunZhTRw1w">
      <eAnnotations xmi:id="_SH-fyq1MEeOdBunZhTRw1w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/StandardL2.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_SIA7kK1MEeOdBunZhTRw1w" base_BehavioralFeature="_SH8qZq1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_SICwwK1MEeOdBunZhTRw1w" base_BehavioralFeature="_SH8qaq1MEeOdBunZhTRw1w"/>
</xmi:XMI>

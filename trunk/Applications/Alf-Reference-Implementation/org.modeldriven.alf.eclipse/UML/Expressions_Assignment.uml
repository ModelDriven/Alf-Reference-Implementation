<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_RL6IMCcoEeSLVrU2ifxtpw" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_RL6IMScoEeSLVrU2ifxtpw" name="Expressions_Assignment" classifierBehavior="_RL6IOicoEeSLVrU2ifxtpw" isActive="true">
      <packageImport xmi:id="_RL6IMicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RL6IMycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RL6INCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RL6INScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RL6INicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_RL6INycoEeSLVrU2ifxtpw" name="Expressions_Assignment$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6IOCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6IOScoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RL6IOicoEeSLVrU2ifxtpw" name="Expressions_Assignment$classifierBehavior$1" visibility="private" isActive="true" node="_RL6IOycoEeSLVrU2ifxtpw" group="_RL6IOycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_RL6IOycoEeSLVrU2ifxtpw" name="Body(Expressions_Assignment$classifierBehavior$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6IPCcoEeSLVrU2ifxtpw" target="_RL6vVycoEeSLVrU2ifxtpw" source="_RL6vSicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL6IPScoEeSLVrU2ifxtpw" target="_RL6vTycoEeSLVrU2ifxtpw" source="_RL6IRycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6IPicoEeSLVrU2ifxtpw" target="_RL6vbycoEeSLVrU2ifxtpw" source="_RL6vSycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL6IPycoEeSLVrU2ifxtpw" target="_RL6vaCcoEeSLVrU2ifxtpw" source="_RL6vTycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6IQCcoEeSLVrU2ifxtpw" target="_RL6vgCcoEeSLVrU2ifxtpw" source="_RL6vTCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL6IQScoEeSLVrU2ifxtpw" target="_RL6veCcoEeSLVrU2ifxtpw" source="_RL6vaCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6IQicoEeSLVrU2ifxtpw" target="_RL6vmScoEeSLVrU2ifxtpw" source="_RL6vTScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL6IQycoEeSLVrU2ifxtpw" target="_RL6vkScoEeSLVrU2ifxtpw" source="_RL6veCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6IRCcoEeSLVrU2ifxtpw" target="_RL6vsicoEeSLVrU2ifxtpw" source="_RL6vTicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL6IRScoEeSLVrU2ifxtpw" target="_RL6vqicoEeSLVrU2ifxtpw" source="_RL6vkScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL6IRicoEeSLVrU2ifxtpw" target="_RL6vwycoEeSLVrU2ifxtpw" source="_RL6vqicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL6IRycoEeSLVrU2ifxtpw" name="ExpressionStatement@240c8343" outgoing="_RL6IPScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6ISCcoEeSLVrU2ifxtpw" target="_RL6vSicoEeSLVrU2ifxtpw" source="_RL6ITycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6ISScoEeSLVrU2ifxtpw" target="_RL6vSycoEeSLVrU2ifxtpw" source="_RL6IUicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6ISicoEeSLVrU2ifxtpw" target="_RL6vTCcoEeSLVrU2ifxtpw" source="_RL6IVScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6ISycoEeSLVrU2ifxtpw" target="_RL6vTScoEeSLVrU2ifxtpw" source="_RL6IWCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6ITCcoEeSLVrU2ifxtpw" target="_RL6vTicoEeSLVrU2ifxtpw" source="_RL6vQCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6ITScoEeSLVrU2ifxtpw" target="_RL6vQycoEeSLVrU2ifxtpw" source="_RL6vRycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RL6ITicoEeSLVrU2ifxtpw" name="Call(test)" operation="_RL9L3CcoEeSLVrU2ifxtpw">
              <result xmi:id="_RL6ITycoEeSLVrU2ifxtpw" name="Call(test).result(i)" outgoing="_RL6ISCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6IUCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6IUScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RL6IUicoEeSLVrU2ifxtpw" name="Call(test).result(f)" outgoing="_RL6ISScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6IUycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6IVCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RL6IVScoEeSLVrU2ifxtpw" name="Call(test).result(h)" outgoing="_RL6ISicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6IVicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6IVycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RL6IWCcoEeSLVrU2ifxtpw" name="Call(test).result(filename)" outgoing="_RL6ISycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6IWScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6IWicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_RL6vQCcoEeSLVrU2ifxtpw" name="Call(test).result(a)" outgoing="_RL6ITCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vQScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vQicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <target xmi:id="_RL6vQycoEeSLVrU2ifxtpw" name="Call(test).target" incoming="_RL6ITScoEeSLVrU2ifxtpw" type="_RL6IMScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vRCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vRScoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_RL6vRicoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_RL6vRycoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RL6ITScoEeSLVrU2ifxtpw" type="_RL6IMScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vSCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vSScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL6vSicoEeSLVrU2ifxtpw" name="Fork(i)@e3553f9" incoming="_RL6ISCcoEeSLVrU2ifxtpw" outgoing="_RL6IPCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RL6vSycoEeSLVrU2ifxtpw" name="Fork(f)@393ee99b" incoming="_RL6ISScoEeSLVrU2ifxtpw" outgoing="_RL6IPicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RL6vTCcoEeSLVrU2ifxtpw" name="Fork(h)@515adc79" incoming="_RL6ISicoEeSLVrU2ifxtpw" outgoing="_RL6IQCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RL6vTScoEeSLVrU2ifxtpw" name="Fork(filename)@2440b5a9" incoming="_RL6ISycoEeSLVrU2ifxtpw" outgoing="_RL6IQicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RL6vTicoEeSLVrU2ifxtpw" name="Fork(a)@14567cd7" incoming="_RL6ITCcoEeSLVrU2ifxtpw" outgoing="_RL6IRCcoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL6vTycoEeSLVrU2ifxtpw" name="ExpressionStatement@177dd5b4" incoming="_RL6IPScoEeSLVrU2ifxtpw" outgoing="_RL6IPycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6vUCcoEeSLVrU2ifxtpw" target="_RL6vVCcoEeSLVrU2ifxtpw" source="_RL6vXycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6vUScoEeSLVrU2ifxtpw" target="_RL6vWicoEeSLVrU2ifxtpw" source="_RL6vZCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RL6vUicoEeSLVrU2ifxtpw" target="_RL6vUycoEeSLVrU2ifxtpw" source="_RL6vXScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL6vUycoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RL6vUicoEeSLVrU2ifxtpw" behavior="_RL9L8ScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RL6vVCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RL6vUCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vVScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vVicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL6vVycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RL6IPCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vWCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vWScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL6vWicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RL6vUScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vWycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vXCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL6vXScoEeSLVrU2ifxtpw" name="Tuple@dbb3ae4" outgoing="_RL6vUicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL6vXicoEeSLVrU2ifxtpw" name="Value(&quot;i&quot;)">
                <result xmi:id="_RL6vXycoEeSLVrU2ifxtpw" name="Value(&quot;i&quot;).result" outgoing="_RL6vUCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vYCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vYScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RL6vYicoEeSLVrU2ifxtpw" value="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL6vYycoEeSLVrU2ifxtpw" name="Value(5)">
                <result xmi:id="_RL6vZCcoEeSLVrU2ifxtpw" name="Value(5).result" outgoing="_RL6vUScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vZScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vZicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL6vZycoEeSLVrU2ifxtpw" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL6vaCcoEeSLVrU2ifxtpw" name="ExpressionStatement@41ccfd3" incoming="_RL6IPycoEeSLVrU2ifxtpw" outgoing="_RL6IQScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6vaScoEeSLVrU2ifxtpw" target="_RL6vbCcoEeSLVrU2ifxtpw" source="_RL6vdCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RL6vaicoEeSLVrU2ifxtpw" target="_RL6vaycoEeSLVrU2ifxtpw" source="_RL6vcicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL6vaycoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_RL6vaicoEeSLVrU2ifxtpw" behavior="_RL-ZuicoEeSLVrU2ifxtpw">
              <argument xmi:id="_RL6vbCcoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_RL6vaScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vbScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vbicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL6vbycoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_RL6IPicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vcCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vcScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL6vcicoEeSLVrU2ifxtpw" name="Tuple@4604e89" outgoing="_RL6vaicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL6vcycoEeSLVrU2ifxtpw" name="Value(&quot;f&quot;)">
                <result xmi:id="_RL6vdCcoEeSLVrU2ifxtpw" name="Value(&quot;f&quot;).result" outgoing="_RL6vaScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vdScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vdicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RL6vdycoEeSLVrU2ifxtpw" value="f">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL6veCcoEeSLVrU2ifxtpw" name="ExpressionStatement@42495234" incoming="_RL6IQScoEeSLVrU2ifxtpw" outgoing="_RL6IQycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6veScoEeSLVrU2ifxtpw" target="_RL6vfScoEeSLVrU2ifxtpw" source="_RL6viCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6veicoEeSLVrU2ifxtpw" target="_RL6vgycoEeSLVrU2ifxtpw" source="_RL6vjScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RL6veycoEeSLVrU2ifxtpw" target="_RL6vfCcoEeSLVrU2ifxtpw" source="_RL6vhicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL6vfCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RL6veycoEeSLVrU2ifxtpw" behavior="_RL9L8ScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RL6vfScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RL6veScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vficoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vfycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL6vgCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RL6IQCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vgScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vgicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL6vgycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RL6veicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vhCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vhScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL6vhicoEeSLVrU2ifxtpw" name="Tuple@65c61183" outgoing="_RL6veycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL6vhycoEeSLVrU2ifxtpw" name="Value(&quot;h&quot;)">
                <result xmi:id="_RL6viCcoEeSLVrU2ifxtpw" name="Value(&quot;h&quot;).result" outgoing="_RL6veScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6viScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6viicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RL6viycoEeSLVrU2ifxtpw" value="h">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL6vjCcoEeSLVrU2ifxtpw" name="Value(85)">
                <result xmi:id="_RL6vjScoEeSLVrU2ifxtpw" name="Value(85).result" outgoing="_RL6veicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vjicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vjycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL6vkCcoEeSLVrU2ifxtpw" value="85">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL6vkScoEeSLVrU2ifxtpw" name="ExpressionStatement@62692b0b" incoming="_RL6IQycoEeSLVrU2ifxtpw" outgoing="_RL6IRScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6vkicoEeSLVrU2ifxtpw" target="_RL6vlicoEeSLVrU2ifxtpw" source="_RL6voScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6vkycoEeSLVrU2ifxtpw" target="_RL6vnCcoEeSLVrU2ifxtpw" source="_RL6vpicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RL6vlCcoEeSLVrU2ifxtpw" target="_RL6vlScoEeSLVrU2ifxtpw" source="_RL6vnycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL6vlScoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RL6vlCcoEeSLVrU2ifxtpw" behavior="_RL9L8ScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RL6vlicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RL6vkicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vlycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vmCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL6vmScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RL6IQicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vmicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vmycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL6vnCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RL6vkycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vnScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vnicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL6vnycoEeSLVrU2ifxtpw" name="Tuple@1c7f97ce" outgoing="_RL6vlCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL6voCcoEeSLVrU2ifxtpw" name="Value(&quot;filename&quot;)">
                <result xmi:id="_RL6voScoEeSLVrU2ifxtpw" name="Value(&quot;filename&quot;).result" outgoing="_RL6vkicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6voicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6voycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RL6vpCcoEeSLVrU2ifxtpw" value="filename">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL6vpScoEeSLVrU2ifxtpw" name="Value(&quot;xyz.doc&quot;)">
                <result xmi:id="_RL6vpicoEeSLVrU2ifxtpw" name="Value(&quot;xyz.doc&quot;).result" outgoing="_RL6vkycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vpycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vqCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RL6vqScoEeSLVrU2ifxtpw" value="xyz.doc">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL6vqicoEeSLVrU2ifxtpw" name="ExpressionStatement@558d94e1" incoming="_RL6IRScoEeSLVrU2ifxtpw" outgoing="_RL6IRicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6vqycoEeSLVrU2ifxtpw" target="_RL6vrycoEeSLVrU2ifxtpw" source="_RL6vuicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6vrCcoEeSLVrU2ifxtpw" target="_RL6vtScoEeSLVrU2ifxtpw" source="_RL6vvycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RL6vrScoEeSLVrU2ifxtpw" target="_RL6vricoEeSLVrU2ifxtpw" source="_RL6vuCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL6vricoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RL6vrScoEeSLVrU2ifxtpw" behavior="_RL9L8ScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RL6vrycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RL6vqycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vsCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vsScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL6vsicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RL6IRCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vsycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vtCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL6vtScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RL6vrCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vticoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vtycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL6vuCcoEeSLVrU2ifxtpw" name="Tuple@2f589e2b" outgoing="_RL6vrScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL6vuScoEeSLVrU2ifxtpw" name="Value(&quot;a&quot;)">
                <result xmi:id="_RL6vuicoEeSLVrU2ifxtpw" name="Value(&quot;a&quot;).result" outgoing="_RL6vqycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vuycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vvCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RL6vvScoEeSLVrU2ifxtpw" value="a">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL6vvicoEeSLVrU2ifxtpw" name="Value(2)">
                <result xmi:id="_RL6vvycoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_RL6vrCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vwCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vwScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL6vwicoEeSLVrU2ifxtpw" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL6vwycoEeSLVrU2ifxtpw" name="ExpressionStatement@2617b42c" incoming="_RL6IRicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6vxCcoEeSLVrU2ifxtpw" target="_RL6vxycoEeSLVrU2ifxtpw" source="_RL6vzycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RL6vxScoEeSLVrU2ifxtpw" target="_RL6vxicoEeSLVrU2ifxtpw" source="_RL6vzScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL6vxicoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_RL6vxScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RL6vxycoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_RL6vxCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vyCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vyScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL6vyicoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6vyycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6vzCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL6vzScoEeSLVrU2ifxtpw" name="Tuple@2770e695" outgoing="_RL6vxScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL6vzicoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;)">
                <result xmi:id="_RL6vzycoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;).result" outgoing="_RL6vxCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6v0CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6v0ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RL6v0icoEeSLVrU2ifxtpw" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RL6v0ycoEeSLVrU2ifxtpw" name="test$method$1" specification="_RL9L3CcoEeSLVrU2ifxtpw" node="_RL6v6CcoEeSLVrU2ifxtpw _RL6v6ScoEeSLVrU2ifxtpw _RL6v6icoEeSLVrU2ifxtpw _RL6v6ycoEeSLVrU2ifxtpw _RL6v7CcoEeSLVrU2ifxtpw _RL6v7ScoEeSLVrU2ifxtpw" group="_RL6v7ScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_RL6v1CcoEeSLVrU2ifxtpw" name="i" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6v1ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6v1icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RL6v1ycoEeSLVrU2ifxtpw" name="f" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6v2CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6v2ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RL6v2icoEeSLVrU2ifxtpw" name="h" direction="out">
          <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6v2ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6v3CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RL6v3ScoEeSLVrU2ifxtpw" name="filename" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6v3icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6v3ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RL6v4CcoEeSLVrU2ifxtpw" name="a" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL6v4ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL6v4icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6v4ycoEeSLVrU2ifxtpw" target="_RL6v6CcoEeSLVrU2ifxtpw" source="_RL7WdicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6v5CcoEeSLVrU2ifxtpw" target="_RL6v6ScoEeSLVrU2ifxtpw" source="_RL7WeScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6v5ScoEeSLVrU2ifxtpw" target="_RL6v6icoEeSLVrU2ifxtpw" source="_RL7WfCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6v5icoEeSLVrU2ifxtpw" target="_RL6v6ycoEeSLVrU2ifxtpw" source="_RL7WfycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6v5ycoEeSLVrU2ifxtpw" target="_RL6v7CcoEeSLVrU2ifxtpw" source="_RL7WgicoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_RL6v7ScoEeSLVrU2ifxtpw" name="Body(test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6v7icoEeSLVrU2ifxtpw" target="_RL7WkicoEeSLVrU2ifxtpw" source="_RL7WhycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL6v7ycoEeSLVrU2ifxtpw" target="_RL7WjicoEeSLVrU2ifxtpw" source="_RL7WhScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6v8CcoEeSLVrU2ifxtpw" target="_RL7WpicoEeSLVrU2ifxtpw" source="_RL7WmycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL6v8ScoEeSLVrU2ifxtpw" target="_RL7WoicoEeSLVrU2ifxtpw" source="_RL7WjicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6v8icoEeSLVrU2ifxtpw" target="_RL7WuicoEeSLVrU2ifxtpw" source="_RL7WrycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL6v8ycoEeSLVrU2ifxtpw" target="_RL7WticoEeSLVrU2ifxtpw" source="_RL7WoicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6v9CcoEeSLVrU2ifxtpw" target="_RL7WzicoEeSLVrU2ifxtpw" source="_RL7WwycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL6v9ScoEeSLVrU2ifxtpw" target="_RL7WyicoEeSLVrU2ifxtpw" source="_RL7WticoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6v9icoEeSLVrU2ifxtpw" target="_RL7W4icoEeSLVrU2ifxtpw" source="_RL7W1ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL6v9ycoEeSLVrU2ifxtpw" target="_RL7W3icoEeSLVrU2ifxtpw" source="_RL7WyicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL6v-CcoEeSLVrU2ifxtpw" target="_RL7W9icoEeSLVrU2ifxtpw" source="_RL7W6ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL6v-ScoEeSLVrU2ifxtpw" target="_RL7W8icoEeSLVrU2ifxtpw" source="_RL7W3icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL6v-icoEeSLVrU2ifxtpw" target="_RL7XBicoEeSLVrU2ifxtpw" source="_RL7W8icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WUCcoEeSLVrU2ifxtpw" target="_RL79YScoEeSLVrU2ifxtpw" source="_RL7XCCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WUScoEeSLVrU2ifxtpw" target="_RL7XDycoEeSLVrU2ifxtpw" source="_RL7XBicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WUicoEeSLVrU2ifxtpw" target="_RL79dScoEeSLVrU2ifxtpw" source="_RL79aicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WUycoEeSLVrU2ifxtpw" target="_RL79cScoEeSLVrU2ifxtpw" source="_RL7XDycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WVCcoEeSLVrU2ifxtpw" target="_RL79iScoEeSLVrU2ifxtpw" source="_RL79ficoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WVScoEeSLVrU2ifxtpw" target="_RL79hScoEeSLVrU2ifxtpw" source="_RL79cScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WVicoEeSLVrU2ifxtpw" target="_RL79mScoEeSLVrU2ifxtpw" source="_RL79hScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WVycoEeSLVrU2ifxtpw" target="_RL79vycoEeSLVrU2ifxtpw" source="_RL79mScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WWCcoEeSLVrU2ifxtpw" target="_RL791CcoEeSLVrU2ifxtpw" source="_RL79wScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WWScoEeSLVrU2ifxtpw" target="_RL790CcoEeSLVrU2ifxtpw" source="_RL79vycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WWicoEeSLVrU2ifxtpw" target="_RL796CcoEeSLVrU2ifxtpw" source="_RL793ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WWycoEeSLVrU2ifxtpw" target="_RL795CcoEeSLVrU2ifxtpw" source="_RL790CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WXCcoEeSLVrU2ifxtpw" target="_RL79_CcoEeSLVrU2ifxtpw" source="_RL798ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WXScoEeSLVrU2ifxtpw" target="_RL79-CcoEeSLVrU2ifxtpw" source="_RL795CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WXicoEeSLVrU2ifxtpw" target="_RL7-ECcoEeSLVrU2ifxtpw" source="_RL7-BScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WXycoEeSLVrU2ifxtpw" target="_RL7-DCcoEeSLVrU2ifxtpw" source="_RL79-CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WYCcoEeSLVrU2ifxtpw" target="_RL8kcicoEeSLVrU2ifxtpw" source="_RL7-GScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WYScoEeSLVrU2ifxtpw" target="_RL7-ICcoEeSLVrU2ifxtpw" source="_RL7-DCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WYicoEeSLVrU2ifxtpw" target="_RL8khicoEeSLVrU2ifxtpw" source="_RL8keycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WYycoEeSLVrU2ifxtpw" target="_RL8kgicoEeSLVrU2ifxtpw" source="_RL7-ICcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WZCcoEeSLVrU2ifxtpw" target="_RL8klicoEeSLVrU2ifxtpw" source="_RL8kgicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WZScoEeSLVrU2ifxtpw" target="_RL8koycoEeSLVrU2ifxtpw" source="_RL8kmCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WZicoEeSLVrU2ifxtpw" target="_RL8knycoEeSLVrU2ifxtpw" source="_RL8klicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WZycoEeSLVrU2ifxtpw" target="_RL8ksycoEeSLVrU2ifxtpw" source="_RL8knycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WaCcoEeSLVrU2ifxtpw" target="_RL8kwCcoEeSLVrU2ifxtpw" source="_RL8ktScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WaScoEeSLVrU2ifxtpw" target="_RL8kvCcoEeSLVrU2ifxtpw" source="_RL8ksycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WaicoEeSLVrU2ifxtpw" target="_RL8k0CcoEeSLVrU2ifxtpw" source="_RL8kvCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WaycoEeSLVrU2ifxtpw" target="_RL8k3CcoEeSLVrU2ifxtpw" source="_RL8k0icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WbCcoEeSLVrU2ifxtpw" target="_RL8k3ycoEeSLVrU2ifxtpw" source="_RL7W_ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WbScoEeSLVrU2ifxtpw" target="_RL8k2ScoEeSLVrU2ifxtpw" source="_RL8k0CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WbicoEeSLVrU2ifxtpw" target="_RL8k5ycoEeSLVrU2ifxtpw" source="_RL8k2ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WbycoEeSLVrU2ifxtpw" target="_RL8k9CcoEeSLVrU2ifxtpw" source="_RL8k6ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL7WcCcoEeSLVrU2ifxtpw" target="_RL8k8CcoEeSLVrU2ifxtpw" source="_RL8k5ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WcScoEeSLVrU2ifxtpw" target="_RL7WdicoEeSLVrU2ifxtpw" source="_RL7W_ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WcicoEeSLVrU2ifxtpw" target="_RL7WeScoEeSLVrU2ifxtpw" source="_RL79kicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WcycoEeSLVrU2ifxtpw" target="_RL7WfCcoEeSLVrU2ifxtpw" source="_RL8kjycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WdCcoEeSLVrU2ifxtpw" target="_RL7WfycoEeSLVrU2ifxtpw" source="_RL8krCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WdScoEeSLVrU2ifxtpw" target="_RL7WgicoEeSLVrU2ifxtpw" source="_RL8k_ScoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_RL7WdicoEeSLVrU2ifxtpw" name="Output(i)" incoming="_RL7WcScoEeSLVrU2ifxtpw" outgoing="_RL6v4ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WdycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WeCcoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RL7WeScoEeSLVrU2ifxtpw" name="Output(f)" incoming="_RL7WcicoEeSLVrU2ifxtpw" outgoing="_RL6v5CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WeicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WeycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RL7WfCcoEeSLVrU2ifxtpw" name="Output(h)" incoming="_RL7WcycoEeSLVrU2ifxtpw" outgoing="_RL6v5ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WfScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WficoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RL7WfycoEeSLVrU2ifxtpw" name="Output(filename)" incoming="_RL7WdCcoEeSLVrU2ifxtpw" outgoing="_RL6v5icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WgCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WgScoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_RL7WgicoEeSLVrU2ifxtpw" name="Output(a)" incoming="_RL7WdScoEeSLVrU2ifxtpw" outgoing="_RL6v5ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WgycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WhCcoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7WhScoEeSLVrU2ifxtpw" name="ExpressionStatement@19519a59" outgoing="_RL6v7ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WhicoEeSLVrU2ifxtpw" target="_RL7WhycoEeSLVrU2ifxtpw" source="_RL7WiicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RL7WhycoEeSLVrU2ifxtpw" name="Fork(i)@264a438" incoming="_RL7WhicoEeSLVrU2ifxtpw" outgoing="_RL6v7icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7WiCcoEeSLVrU2ifxtpw" name="RightHandSide@1d5959c2">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL7WiScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL7WiicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL7WhicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WiycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WjCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL7WjScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7WjicoEeSLVrU2ifxtpw" name="ExpressionStatement@c4e207b" incoming="_RL6v7ycoEeSLVrU2ifxtpw" outgoing="_RL6v8ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WjycoEeSLVrU2ifxtpw" target="_RL7WlScoEeSLVrU2ifxtpw" source="_RL7WnicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WkCcoEeSLVrU2ifxtpw" target="_RL7WmycoEeSLVrU2ifxtpw" source="_RL7WmCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL7WkScoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_RL7WkicoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RL6v7icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WkycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WlCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL7WlScoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RL7WjycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WlicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WlycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL7WmCcoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_RL7WkCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WmScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WmicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL7WmycoEeSLVrU2ifxtpw" name="Fork(i)@5312cda8" incoming="_RL7WkCcoEeSLVrU2ifxtpw" outgoing="_RL6v8CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7WnCcoEeSLVrU2ifxtpw" name="RightHandSide@777bfb33">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL7WnScoEeSLVrU2ifxtpw" name="Value(4)">
                <result xmi:id="_RL7WnicoEeSLVrU2ifxtpw" name="Value(4).result" outgoing="_RL7WjycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WnycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WoCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL7WoScoEeSLVrU2ifxtpw" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7WoicoEeSLVrU2ifxtpw" name="ExpressionStatement@6d24699c" incoming="_RL6v8ScoEeSLVrU2ifxtpw" outgoing="_RL6v8ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WoycoEeSLVrU2ifxtpw" target="_RL7WqScoEeSLVrU2ifxtpw" source="_RL7WsicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WpCcoEeSLVrU2ifxtpw" target="_RL7WrycoEeSLVrU2ifxtpw" source="_RL7WrCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL7WpScoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_RL7WpicoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RL6v8CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WpycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WqCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL7WqScoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RL7WoycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WqicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WqycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL7WrCcoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_RL7WpCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WrScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WricoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL7WrycoEeSLVrU2ifxtpw" name="Fork(i)@213a53b" incoming="_RL7WpCcoEeSLVrU2ifxtpw" outgoing="_RL6v8icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7WsCcoEeSLVrU2ifxtpw" name="RightHandSide@57c4c58d">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL7WsScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL7WsicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL7WoycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WsycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WtCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL7WtScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7WticoEeSLVrU2ifxtpw" name="ExpressionStatement@617ceddc" incoming="_RL6v8ycoEeSLVrU2ifxtpw" outgoing="_RL6v9ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WtycoEeSLVrU2ifxtpw" target="_RL7WvScoEeSLVrU2ifxtpw" source="_RL7WxicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WuCcoEeSLVrU2ifxtpw" target="_RL7WwycoEeSLVrU2ifxtpw" source="_RL7WwCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL7WuScoEeSLVrU2ifxtpw" name="Call(-)">
              <argument xmi:id="_RL7WuicoEeSLVrU2ifxtpw" name="Call(-).argument(x)" incoming="_RL6v8icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WuycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WvCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL7WvScoEeSLVrU2ifxtpw" name="Call(-).argument(y)" incoming="_RL7WtycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WvicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WvycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL7WwCcoEeSLVrU2ifxtpw" name="Call(-).result(result)" outgoing="_RL7WuCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WwScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WwicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL7WwycoEeSLVrU2ifxtpw" name="Fork(i)@218fecb4" incoming="_RL7WuCcoEeSLVrU2ifxtpw" outgoing="_RL6v9CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7WxCcoEeSLVrU2ifxtpw" name="RightHandSide@6ffd2ea2">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL7WxScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL7WxicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL7WtycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WxycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7WyCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL7WyScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7WyicoEeSLVrU2ifxtpw" name="ExpressionStatement@27ebefbd" incoming="_RL6v9ScoEeSLVrU2ifxtpw" outgoing="_RL6v9ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WyycoEeSLVrU2ifxtpw" target="_RL7W0ScoEeSLVrU2ifxtpw" source="_RL7W2icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7WzCcoEeSLVrU2ifxtpw" target="_RL7W1ycoEeSLVrU2ifxtpw" source="_RL7W1CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL7WzScoEeSLVrU2ifxtpw" name="Call(*)">
              <argument xmi:id="_RL7WzicoEeSLVrU2ifxtpw" name="Call(*).argument(x)" incoming="_RL6v9CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7WzycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7W0CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL7W0ScoEeSLVrU2ifxtpw" name="Call(*).argument(y)" incoming="_RL7WyycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7W0icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7W0ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL7W1CcoEeSLVrU2ifxtpw" name="Call(*).result(result)" outgoing="_RL7WzCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7W1ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7W1icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-times"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL7W1ycoEeSLVrU2ifxtpw" name="Fork(i)@2d7da6fe" incoming="_RL7WzCcoEeSLVrU2ifxtpw" outgoing="_RL6v9icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7W2CcoEeSLVrU2ifxtpw" name="RightHandSide@145e8507">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL7W2ScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL7W2icoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL7WyycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7W2ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7W3CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL7W3ScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7W3icoEeSLVrU2ifxtpw" name="ExpressionStatement@61a27090" incoming="_RL6v9ycoEeSLVrU2ifxtpw" outgoing="_RL6v-ScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7W3ycoEeSLVrU2ifxtpw" target="_RL7W5ScoEeSLVrU2ifxtpw" source="_RL7W7icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7W4CcoEeSLVrU2ifxtpw" target="_RL7W6ycoEeSLVrU2ifxtpw" source="_RL7W6CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL7W4ScoEeSLVrU2ifxtpw" name="Call(Mod)">
              <argument xmi:id="_RL7W4icoEeSLVrU2ifxtpw" name="Call(Mod).argument(x)" incoming="_RL6v9icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7W4ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7W5CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL7W5ScoEeSLVrU2ifxtpw" name="Call(Mod).argument(y)" incoming="_RL7W3ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7W5icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7W5ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL7W6CcoEeSLVrU2ifxtpw" name="Call(Mod).result(result)" outgoing="_RL7W4CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7W6ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7W6icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL7W6ycoEeSLVrU2ifxtpw" name="Fork(i)@67d2ab6b" incoming="_RL7W4CcoEeSLVrU2ifxtpw" outgoing="_RL6v-CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7W7CcoEeSLVrU2ifxtpw" name="RightHandSide@37f4330d">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL7W7ScoEeSLVrU2ifxtpw" name="Value(6)">
                <result xmi:id="_RL7W7icoEeSLVrU2ifxtpw" name="Value(6).result" outgoing="_RL7W3ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7W7ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7W8CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL7W8ScoEeSLVrU2ifxtpw" value="6">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7W8icoEeSLVrU2ifxtpw" name="ExpressionStatement@7a3f2957" incoming="_RL6v-ScoEeSLVrU2ifxtpw" outgoing="_RL6v-icoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7W8ycoEeSLVrU2ifxtpw" target="_RL7W-ScoEeSLVrU2ifxtpw" source="_RL7XAicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7W9CcoEeSLVrU2ifxtpw" target="_RL7W_ycoEeSLVrU2ifxtpw" source="_RL7W_CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL7W9ScoEeSLVrU2ifxtpw" name="Call(Div)">
              <argument xmi:id="_RL7W9icoEeSLVrU2ifxtpw" name="Call(Div).argument(x)" incoming="_RL6v-CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7W9ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7W-CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL7W-ScoEeSLVrU2ifxtpw" name="Call(Div).argument(y)" incoming="_RL7W8ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7W-icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7W-ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL7W_CcoEeSLVrU2ifxtpw" name="Call(Div).result(result)" outgoing="_RL7W9CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7W_ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7W_icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL7W_ycoEeSLVrU2ifxtpw" name="Fork(i)@450ddc63" incoming="_RL7W9CcoEeSLVrU2ifxtpw" outgoing="_RL7WbCcoEeSLVrU2ifxtpw _RL7WcScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7XACcoEeSLVrU2ifxtpw" name="RightHandSide@11000b00">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL7XAScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL7XAicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL7W8ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7XAycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7XBCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL7XBScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7XBicoEeSLVrU2ifxtpw" name="ExpressionStatement@15f0057d" incoming="_RL6v-icoEeSLVrU2ifxtpw" outgoing="_RL7WUScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7XBycoEeSLVrU2ifxtpw" target="_RL7XCCcoEeSLVrU2ifxtpw" source="_RL7XCycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RL7XCCcoEeSLVrU2ifxtpw" name="Fork(f)@46c2cba" incoming="_RL7XBycoEeSLVrU2ifxtpw" outgoing="_RL7WUCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7XCScoEeSLVrU2ifxtpw" name="RightHandSide@59ec699a">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL7XCicoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_RL7XCycoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_RL7XBycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7XDCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7XDScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RL7XDicoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7XDycoEeSLVrU2ifxtpw" name="ExpressionStatement@77ed3bb9" incoming="_RL7WUScoEeSLVrU2ifxtpw" outgoing="_RL7WUycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7XECcoEeSLVrU2ifxtpw" target="_RL79ZCcoEeSLVrU2ifxtpw" source="_RL79bScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7XEScoEeSLVrU2ifxtpw" target="_RL79aicoEeSLVrU2ifxtpw" source="_RL79ZycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL79YCcoEeSLVrU2ifxtpw" name="Call(And)">
              <argument xmi:id="_RL79YScoEeSLVrU2ifxtpw" name="Call(And).argument(x)" incoming="_RL7WUCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79YicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79YycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL79ZCcoEeSLVrU2ifxtpw" name="Call(And).argument(y)" incoming="_RL7XECcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79ZScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79ZicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL79ZycoEeSLVrU2ifxtpw" name="Call(And).result(result)" outgoing="_RL7XEScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79aCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79aScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-And"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL79aicoEeSLVrU2ifxtpw" name="Fork(f)@6bb7645d" incoming="_RL7XEScoEeSLVrU2ifxtpw" outgoing="_RL7WUicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL79aycoEeSLVrU2ifxtpw" name="RightHandSide@551e4cea">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL79bCcoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_RL79bScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_RL7XECcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79bicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79bycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RL79cCcoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL79cScoEeSLVrU2ifxtpw" name="ExpressionStatement@20cdcf37" incoming="_RL7WUycoEeSLVrU2ifxtpw" outgoing="_RL7WVScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79cicoEeSLVrU2ifxtpw" target="_RL79eCcoEeSLVrU2ifxtpw" source="_RL79gScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79cycoEeSLVrU2ifxtpw" target="_RL79ficoEeSLVrU2ifxtpw" source="_RL79eycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL79dCcoEeSLVrU2ifxtpw" name="Call(Or)">
              <argument xmi:id="_RL79dScoEeSLVrU2ifxtpw" name="Call(Or).argument(x)" incoming="_RL7WUicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79dicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79dycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL79eCcoEeSLVrU2ifxtpw" name="Call(Or).argument(y)" incoming="_RL79cicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79eScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79eicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL79eycoEeSLVrU2ifxtpw" name="Call(Or).result(result)" outgoing="_RL79cycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79fCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79fScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL79ficoEeSLVrU2ifxtpw" name="Fork(f)@4e4b5008" incoming="_RL79cycoEeSLVrU2ifxtpw" outgoing="_RL7WVCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL79fycoEeSLVrU2ifxtpw" name="RightHandSide@32736560">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL79gCcoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_RL79gScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_RL79cicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79gicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79gycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RL79hCcoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL79hScoEeSLVrU2ifxtpw" name="ExpressionStatement@50d8628f" incoming="_RL7WVScoEeSLVrU2ifxtpw" outgoing="_RL7WVicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79hicoEeSLVrU2ifxtpw" target="_RL79jCcoEeSLVrU2ifxtpw" source="_RL79lScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79hycoEeSLVrU2ifxtpw" target="_RL79kicoEeSLVrU2ifxtpw" source="_RL79jycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL79iCcoEeSLVrU2ifxtpw" name="Call(Xor)">
              <argument xmi:id="_RL79iScoEeSLVrU2ifxtpw" name="Call(Xor).argument(x)" incoming="_RL7WVCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79iicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79iycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL79jCcoEeSLVrU2ifxtpw" name="Call(Xor).argument(y)" incoming="_RL79hicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79jScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79jicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL79jycoEeSLVrU2ifxtpw" name="Call(Xor).result(result)" outgoing="_RL79hycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79kCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79kScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Xor"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL79kicoEeSLVrU2ifxtpw" name="Fork(f)@4e76dbc6" incoming="_RL79hycoEeSLVrU2ifxtpw" outgoing="_RL7WcicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL79kycoEeSLVrU2ifxtpw" name="RightHandSide@5d56cc68">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL79lCcoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_RL79lScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_RL79hicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79licoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79lycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RL79mCcoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL79mScoEeSLVrU2ifxtpw" name="ExpressionStatement@590a46e2" incoming="_RL7WVicoEeSLVrU2ifxtpw" outgoing="_RL7WVycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79micoEeSLVrU2ifxtpw" target="_RL79mycoEeSLVrU2ifxtpw" source="_RL79vicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RL79mycoEeSLVrU2ifxtpw" name="Fork(h)@474cbff7" incoming="_RL79micoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL79nCcoEeSLVrU2ifxtpw" name="RightHandSide@58959802">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79nScoEeSLVrU2ifxtpw" target="_RL79vScoEeSLVrU2ifxtpw" source="_RL79nycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL79nicoEeSLVrU2ifxtpw" name="Value(0)">
                <result xmi:id="_RL79nycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_RL79nScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79oCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79oScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL79oicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_RL79oycoEeSLVrU2ifxtpw" name="CastExpression@58959802" mode="parallel" outputElement="_RL79vicoEeSLVrU2ifxtpw" inputElement="_RL79vScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79pCcoEeSLVrU2ifxtpw" target="_RL79ricoEeSLVrU2ifxtpw" source="_RL79tCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79pScoEeSLVrU2ifxtpw" target="_RL79rCcoEeSLVrU2ifxtpw" source="_RL79uScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79picoEeSLVrU2ifxtpw" target="_RL79vCcoEeSLVrU2ifxtpw" source="_RL79tCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79pycoEeSLVrU2ifxtpw" target="_RL79vCcoEeSLVrU2ifxtpw" source="_RL79sScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79qCcoEeSLVrU2ifxtpw" target="_RL79ticoEeSLVrU2ifxtpw" source="_RL79vCcoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL79qScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79qicoEeSLVrU2ifxtpw" target="_RL79tCcoEeSLVrU2ifxtpw" source="_RL79vScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79qycoEeSLVrU2ifxtpw" target="_RL79vicoEeSLVrU2ifxtpw" source="_RL79rCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_RL79rCcoEeSLVrU2ifxtpw" name="Merge(CastExpression@58959802.operand)" incoming="_RL79pScoEeSLVrU2ifxtpw" outgoing="_RL79qycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RL79rScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Integer)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_RL79ricoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Integer).object" incoming="_RL79pCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79rycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79sCcoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_RL79sScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(Integer).result" outgoing="_RL79pycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79sicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79sycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RL79tCcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(Integer).object)" incoming="_RL79qicoEeSLVrU2ifxtpw" outgoing="_RL79pCcoEeSLVrU2ifxtpw _RL79picoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL79tScoEeSLVrU2ifxtpw" name="Call(ToBitString)">
                  <argument xmi:id="_RL79ticoEeSLVrU2ifxtpw" name="Call(ToBitString).argument(n)" incoming="_RL79qCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79tycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79uCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_RL79uScoEeSLVrU2ifxtpw" name="Call(ToBitString).result(null)" outgoing="_RL79pScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79uicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79uycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_RL79vCcoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(Integer).result)" incoming="_RL79picoEeSLVrU2ifxtpw _RL79pycoEeSLVrU2ifxtpw" outgoing="_RL79qCcoEeSLVrU2ifxtpw" decisionInputFlow="_RL79pycoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_RL79vScoEeSLVrU2ifxtpw" name="CastExpression@58959802.inputElement" incoming="_RL79nScoEeSLVrU2ifxtpw" outgoing="_RL79qicoEeSLVrU2ifxtpw" regionAsInput="_RL79oycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_RL79vicoEeSLVrU2ifxtpw" name="CastExpression@58959802.outputElement" incoming="_RL79qycoEeSLVrU2ifxtpw" outgoing="_RL79micoEeSLVrU2ifxtpw" regionAsOutput="_RL79oycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL79vycoEeSLVrU2ifxtpw" name="ExpressionStatement@22389da7" incoming="_RL7WVycoEeSLVrU2ifxtpw" outgoing="_RL7WWScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79wCcoEeSLVrU2ifxtpw" target="_RL79wScoEeSLVrU2ifxtpw" source="_RL79zScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RL79wScoEeSLVrU2ifxtpw" name="Fork(h)@7fb27a08" incoming="_RL79wCcoEeSLVrU2ifxtpw" outgoing="_RL7WWCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL79wicoEeSLVrU2ifxtpw" name="RightHandSide@1e69e4b7">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79wycoEeSLVrU2ifxtpw" target="_RL79yicoEeSLVrU2ifxtpw" source="_RL79xScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL79xCcoEeSLVrU2ifxtpw" name="Value(171)">
                <result xmi:id="_RL79xScoEeSLVrU2ifxtpw" name="Value(171).result" outgoing="_RL79wycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79xicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79xycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL79yCcoEeSLVrU2ifxtpw" value="171">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL79yScoEeSLVrU2ifxtpw" name="Call(ToBitString)">
                <argument xmi:id="_RL79yicoEeSLVrU2ifxtpw" name="Call(ToBitString).argument(n)" incoming="_RL79wycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79yycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79zCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RL79zScoEeSLVrU2ifxtpw" name="Call(ToBitString).result(null)" outgoing="_RL79wCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79zicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79zycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL790CcoEeSLVrU2ifxtpw" name="ExpressionStatement@2937c534" incoming="_RL7WWScoEeSLVrU2ifxtpw" outgoing="_RL7WWycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL790ScoEeSLVrU2ifxtpw" target="_RL791ycoEeSLVrU2ifxtpw" source="_RL794CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL790icoEeSLVrU2ifxtpw" target="_RL793ScoEeSLVrU2ifxtpw" source="_RL792icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL790ycoEeSLVrU2ifxtpw" name="Call(&amp;)">
              <argument xmi:id="_RL791CcoEeSLVrU2ifxtpw" name="Call(&amp;).argument(b1)" incoming="_RL7WWCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL791ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL791icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL791ycoEeSLVrU2ifxtpw" name="Call(&amp;).argument(b2)" incoming="_RL790ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL792CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL792ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL792icoEeSLVrU2ifxtpw" name="Call(&amp;).result(null)" outgoing="_RL790icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL792ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL793CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-amp"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL793ScoEeSLVrU2ifxtpw" name="Fork(h)@1c4c5fee" incoming="_RL790icoEeSLVrU2ifxtpw" outgoing="_RL7WWicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL793icoEeSLVrU2ifxtpw" name="RightHandSide@5a2e10c5">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL793ycoEeSLVrU2ifxtpw" name="Value(255)">
                <result xmi:id="_RL794CcoEeSLVrU2ifxtpw" name="Value(255).result" outgoing="_RL790ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL794ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL794icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL794ycoEeSLVrU2ifxtpw" value="255">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL795CcoEeSLVrU2ifxtpw" name="ExpressionStatement@1a427f71" incoming="_RL7WWycoEeSLVrU2ifxtpw" outgoing="_RL7WXScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL795ScoEeSLVrU2ifxtpw" target="_RL796ycoEeSLVrU2ifxtpw" source="_RL799CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL795icoEeSLVrU2ifxtpw" target="_RL798ScoEeSLVrU2ifxtpw" source="_RL797icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL795ycoEeSLVrU2ifxtpw" name="Call(|)">
              <argument xmi:id="_RL796CcoEeSLVrU2ifxtpw" name="Call(|).argument(b1)" incoming="_RL7WWicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL796ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL796icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL796ycoEeSLVrU2ifxtpw" name="Call(|).argument(b2)" incoming="_RL795ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL797CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL797ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL797icoEeSLVrU2ifxtpw" name="Call(|).result(null)" outgoing="_RL795icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL797ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL798CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-bar"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL798ScoEeSLVrU2ifxtpw" name="Fork(h)@1a4e95f5" incoming="_RL795icoEeSLVrU2ifxtpw" outgoing="_RL7WXCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL798icoEeSLVrU2ifxtpw" name="RightHandSide@1d571551">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL798ycoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL799CcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL795ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL799ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL799icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL799ycoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL79-CcoEeSLVrU2ifxtpw" name="ExpressionStatement@6143457c" incoming="_RL7WXScoEeSLVrU2ifxtpw" outgoing="_RL7WXycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79-ScoEeSLVrU2ifxtpw" target="_RL79_ycoEeSLVrU2ifxtpw" source="_RL7-CCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL79-icoEeSLVrU2ifxtpw" target="_RL7-BScoEeSLVrU2ifxtpw" source="_RL7-AicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL79-ycoEeSLVrU2ifxtpw" name="Call(^)">
              <argument xmi:id="_RL79_CcoEeSLVrU2ifxtpw" name="Call(^).argument(b1)" incoming="_RL7WXCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL79_ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL79_icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL79_ycoEeSLVrU2ifxtpw" name="Call(^).argument(b2)" incoming="_RL79-ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7-ACcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7-AScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL7-AicoEeSLVrU2ifxtpw" name="Call(^).result(null)" outgoing="_RL79-icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7-AycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7-BCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-caret"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL7-BScoEeSLVrU2ifxtpw" name="Fork(h)@2cb1227e" incoming="_RL79-icoEeSLVrU2ifxtpw" outgoing="_RL7WXicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7-BicoEeSLVrU2ifxtpw" name="RightHandSide@214f951e">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL7-BycoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL7-CCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL79-ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7-CScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7-CicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL7-CycoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7-DCcoEeSLVrU2ifxtpw" name="ExpressionStatement@5f03a295" incoming="_RL7WXycoEeSLVrU2ifxtpw" outgoing="_RL7WYScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7-DScoEeSLVrU2ifxtpw" target="_RL7-EycoEeSLVrU2ifxtpw" source="_RL7-HCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7-DicoEeSLVrU2ifxtpw" target="_RL7-GScoEeSLVrU2ifxtpw" source="_RL7-FicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL7-DycoEeSLVrU2ifxtpw" name="Call(&lt;&lt;)">
              <argument xmi:id="_RL7-ECcoEeSLVrU2ifxtpw" name="Call(&lt;&lt;).argument(b)" incoming="_RL7WXicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7-EScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7-EicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL7-EycoEeSLVrU2ifxtpw" name="Call(&lt;&lt;).argument(n)" incoming="_RL7-DScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7-FCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7-FScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL7-FicoEeSLVrU2ifxtpw" name="Call(&lt;&lt;).result(null)" outgoing="_RL7-DicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7-FycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7-GCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ltlt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL7-GScoEeSLVrU2ifxtpw" name="Fork(h)@4955648" incoming="_RL7-DicoEeSLVrU2ifxtpw" outgoing="_RL7WYCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7-GicoEeSLVrU2ifxtpw" name="RightHandSide@68539351">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL7-GycoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL7-HCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL7-DScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL7-HScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL7-HicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL7-HycoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL7-ICcoEeSLVrU2ifxtpw" name="ExpressionStatement@2db8acf0" incoming="_RL7WYScoEeSLVrU2ifxtpw" outgoing="_RL7WYycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL7-IScoEeSLVrU2ifxtpw" target="_RL8kdScoEeSLVrU2ifxtpw" source="_RL8kficoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8kcCcoEeSLVrU2ifxtpw" target="_RL8keycoEeSLVrU2ifxtpw" source="_RL8keCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL8kcScoEeSLVrU2ifxtpw" name="Call(>>)">
              <argument xmi:id="_RL8kcicoEeSLVrU2ifxtpw" name="Call(>>).argument(b)" incoming="_RL7WYCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kcycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kdCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL8kdScoEeSLVrU2ifxtpw" name="Call(>>).argument(n)" incoming="_RL7-IScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kdicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kdycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL8keCcoEeSLVrU2ifxtpw" name="Call(>>).result(null)" outgoing="_RL8kcCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8keScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8keicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL8keycoEeSLVrU2ifxtpw" name="Fork(h)@fcea3a4" incoming="_RL8kcCcoEeSLVrU2ifxtpw" outgoing="_RL7WYicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8kfCcoEeSLVrU2ifxtpw" name="RightHandSide@47596c17">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL8kfScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL8kficoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL7-IScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kfycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kgCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL8kgScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8kgicoEeSLVrU2ifxtpw" name="ExpressionStatement@77363f96" incoming="_RL7WYycoEeSLVrU2ifxtpw" outgoing="_RL7WZCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8kgycoEeSLVrU2ifxtpw" target="_RL8kiScoEeSLVrU2ifxtpw" source="_RL8kkicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8khCcoEeSLVrU2ifxtpw" target="_RL8kjycoEeSLVrU2ifxtpw" source="_RL8kjCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL8khScoEeSLVrU2ifxtpw" name="Call(>>>)">
              <argument xmi:id="_RL8khicoEeSLVrU2ifxtpw" name="Call(>>>).argument(b)" incoming="_RL7WYicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8khycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kiCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL8kiScoEeSLVrU2ifxtpw" name="Call(>>>).argument(n)" incoming="_RL8kgycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kiicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kiycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL8kjCcoEeSLVrU2ifxtpw" name="Call(>>>).result(null)" outgoing="_RL8khCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kjScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kjicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgtgt"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL8kjycoEeSLVrU2ifxtpw" name="Fork(h)@55b088f7" incoming="_RL8khCcoEeSLVrU2ifxtpw" outgoing="_RL7WcycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8kkCcoEeSLVrU2ifxtpw" name="RightHandSide@38f03c14">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL8kkScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL8kkicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL8kgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kkycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8klCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL8klScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8klicoEeSLVrU2ifxtpw" name="ExpressionStatement@7317849d" incoming="_RL7WZCcoEeSLVrU2ifxtpw" outgoing="_RL7WZicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8klycoEeSLVrU2ifxtpw" target="_RL8kmCcoEeSLVrU2ifxtpw" source="_RL8kmycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RL8kmCcoEeSLVrU2ifxtpw" name="Fork(filename)@151bc52f" incoming="_RL8klycoEeSLVrU2ifxtpw" outgoing="_RL7WZScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8kmScoEeSLVrU2ifxtpw" name="RightHandSide@522e9b7c">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL8kmicoEeSLVrU2ifxtpw" name="Value(&quot;xyz&quot;)">
                <result xmi:id="_RL8kmycoEeSLVrU2ifxtpw" name="Value(&quot;xyz&quot;).result" outgoing="_RL8klycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8knCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8knScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RL8knicoEeSLVrU2ifxtpw" value="xyz">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8knycoEeSLVrU2ifxtpw" name="ExpressionStatement@6b55473b" incoming="_RL7WZicoEeSLVrU2ifxtpw" outgoing="_RL7WZycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8koCcoEeSLVrU2ifxtpw" target="_RL8kpicoEeSLVrU2ifxtpw" source="_RL8krycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8koScoEeSLVrU2ifxtpw" target="_RL8krCcoEeSLVrU2ifxtpw" source="_RL8kqScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL8koicoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_RL8koycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RL7WZScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kpCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kpScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL8kpicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RL8koCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kpycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kqCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL8kqScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RL8koScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kqicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kqycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL8krCcoEeSLVrU2ifxtpw" name="Fork(filename)@31d24da5" incoming="_RL8koScoEeSLVrU2ifxtpw" outgoing="_RL7WdCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8krScoEeSLVrU2ifxtpw" name="RightHandSide@65e7a530">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL8kricoEeSLVrU2ifxtpw" name="Value(&quot;.doc&quot;)">
                <result xmi:id="_RL8krycoEeSLVrU2ifxtpw" name="Value(&quot;.doc&quot;).result" outgoing="_RL8koCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8ksCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8ksScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RL8ksicoEeSLVrU2ifxtpw" value=".doc">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8ksycoEeSLVrU2ifxtpw" name="ExpressionStatement@57cf4903" incoming="_RL7WZycoEeSLVrU2ifxtpw" outgoing="_RL7WaScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8ktCcoEeSLVrU2ifxtpw" target="_RL8ktScoEeSLVrU2ifxtpw" source="_RL8kuCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RL8ktScoEeSLVrU2ifxtpw" name="Fork(a)@38cf728d" incoming="_RL8ktCcoEeSLVrU2ifxtpw" outgoing="_RL7WaCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8kticoEeSLVrU2ifxtpw" name="RightHandSide@3b69a41e">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL8ktycoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL8kuCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL8ktCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kuScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kuicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL8kuycoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8kvCcoEeSLVrU2ifxtpw" name="ExpressionStatement@315bfc0a" incoming="_RL7WaScoEeSLVrU2ifxtpw" outgoing="_RL7WaicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8kvScoEeSLVrU2ifxtpw" target="_RL8kwycoEeSLVrU2ifxtpw" source="_RL8kzCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8kvicoEeSLVrU2ifxtpw" target="_RL8kyScoEeSLVrU2ifxtpw" source="_RL8kxicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL8kvycoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_RL8kwCcoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RL7WaCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kwScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kwicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL8kwycoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RL8kvScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kxCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kxScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL8kxicoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_RL8kvicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kxycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kyCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL8kyScoEeSLVrU2ifxtpw" name="Fork(a)@41bde91b" incoming="_RL8kvicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8kyicoEeSLVrU2ifxtpw" name="RightHandSide@1b130d55">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL8kyycoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL8kzCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL8kvScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8kzScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8kzicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL8kzycoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8k0CcoEeSLVrU2ifxtpw" name="ExpressionStatement@2b67774d" incoming="_RL7WaicoEeSLVrU2ifxtpw" outgoing="_RL7WbScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8k0ScoEeSLVrU2ifxtpw" target="_RL8k0icoEeSLVrU2ifxtpw" source="_RL8k1ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RL8k0icoEeSLVrU2ifxtpw" name="Fork(test::a)@61af7350" incoming="_RL8k0ScoEeSLVrU2ifxtpw" outgoing="_RL7WaycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8k0ycoEeSLVrU2ifxtpw" name="RightHandSide@45bbbb4a">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL8k1CcoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL8k1ScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL8k0ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8k1icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8k1ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL8k2CcoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8k2ScoEeSLVrU2ifxtpw" name="ExpressionStatement@4287d2ea" incoming="_RL7WbScoEeSLVrU2ifxtpw" outgoing="_RL7WbicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8k2icoEeSLVrU2ifxtpw" target="_RL8k5ScoEeSLVrU2ifxtpw" source="_RL8k4icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL8k2ycoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_RL8k3CcoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RL7WaycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8k3ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8k3icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL8k3ycoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RL7WbCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8k4CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8k4ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL8k4icoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_RL8k2icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8k4ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8k5CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL8k5ScoEeSLVrU2ifxtpw" name="Fork(test::a)@443d9eba" incoming="_RL8k2icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8k5icoEeSLVrU2ifxtpw" name="RightHandSide@297fe856"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8k5ycoEeSLVrU2ifxtpw" name="ExpressionStatement@689b878f" incoming="_RL7WbicoEeSLVrU2ifxtpw" outgoing="_RL7WcCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8k6CcoEeSLVrU2ifxtpw" target="_RL8k6ScoEeSLVrU2ifxtpw" source="_RL8k7CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_RL8k6ScoEeSLVrU2ifxtpw" name="Fork(test::a)@72fc5124" incoming="_RL8k6CcoEeSLVrU2ifxtpw" outgoing="_RL7WbycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8k6icoEeSLVrU2ifxtpw" name="RightHandSide@13334d76">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL8k6ycoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL8k7CcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL8k6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8k7ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8k7icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL8k7ycoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8k8CcoEeSLVrU2ifxtpw" name="ExpressionStatement@223d663d" incoming="_RL7WcCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8k8ScoEeSLVrU2ifxtpw" target="_RL8k9ycoEeSLVrU2ifxtpw" source="_RL8lACcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8k8icoEeSLVrU2ifxtpw" target="_RL8k_ScoEeSLVrU2ifxtpw" source="_RL8k-icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL8k8ycoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_RL8k9CcoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RL7WbycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8k9ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8k9icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL8k9ycoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RL8k8ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8k-CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8k-ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL8k-icoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_RL8k8icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8k-ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8k_CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL8k_ScoEeSLVrU2ifxtpw" name="Fork(test::a)@57957aab" incoming="_RL8k8icoEeSLVrU2ifxtpw" outgoing="_RL7WdScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8k_icoEeSLVrU2ifxtpw" name="RightHandSide@16a89d79">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL8k_ycoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL8lACcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL8k8ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8lAScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8lAicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL8lAycoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL6v6CcoEeSLVrU2ifxtpw" name="Output(i)" incoming="_RL6v4ycoEeSLVrU2ifxtpw" parameter="_RL6v1CcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL6v6ScoEeSLVrU2ifxtpw" name="Output(f)" incoming="_RL6v5CcoEeSLVrU2ifxtpw" parameter="_RL6v1ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL6v6icoEeSLVrU2ifxtpw" name="Output(h)" incoming="_RL6v5ScoEeSLVrU2ifxtpw" parameter="_RL6v2icoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL6v6ycoEeSLVrU2ifxtpw" name="Output(filename)" incoming="_RL6v5icoEeSLVrU2ifxtpw" parameter="_RL6v3ScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL6v7CcoEeSLVrU2ifxtpw" name="Output(a)" incoming="_RL6v5ycoEeSLVrU2ifxtpw" parameter="_RL6v4CcoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RL8lBCcoEeSLVrU2ifxtpw" name="Expressions_Assignment$method$1" specification="_RL9L7CcoEeSLVrU2ifxtpw" node="_RL8lCScoEeSLVrU2ifxtpw _RL8lCicoEeSLVrU2ifxtpw" group="_RL8lCicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_RL8lBScoEeSLVrU2ifxtpw" name="" type="_RL6IMScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8lBicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8lBycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8lCCcoEeSLVrU2ifxtpw" target="_RL8lCScoEeSLVrU2ifxtpw" source="_RL8lGycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_RL8lCicoEeSLVrU2ifxtpw" name="Body(Expressions_Assignment$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8lCycoEeSLVrU2ifxtpw" target="_RL8lGycoEeSLVrU2ifxtpw" source="_RL8lGCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8lDCcoEeSLVrU2ifxtpw" target="_RL8lHScoEeSLVrU2ifxtpw" source="_RL8lGycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL8lDScoEeSLVrU2ifxtpw" target="_RL8lFicoEeSLVrU2ifxtpw" source="_RL8lHCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8lDicoEeSLVrU2ifxtpw" target="_RL8lIScoEeSLVrU2ifxtpw" source="_RL8lGycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8lDycoEeSLVrU2ifxtpw" target="_RL9LgCcoEeSLVrU2ifxtpw" source="_RL8lJCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8lECcoEeSLVrU2ifxtpw" target="_RL9LjCcoEeSLVrU2ifxtpw" source="_RL9LgycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8lEScoEeSLVrU2ifxtpw" target="_RL9LkicoEeSLVrU2ifxtpw" source="_RL9LhycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL8lEicoEeSLVrU2ifxtpw" target="_RL9LlicoEeSLVrU2ifxtpw" source="_RL9LlScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL8lEycoEeSLVrU2ifxtpw" target="_RL9LlicoEeSLVrU2ifxtpw" source="_RL9LjycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL8lFCcoEeSLVrU2ifxtpw" target="_RL8lHCcoEeSLVrU2ifxtpw" source="_RL9LlicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL8lFScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL8lFicoEeSLVrU2ifxtpw" name="Body" incoming="_RL8lDScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RL8lFycoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_RL8lGCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RL8lCycoEeSLVrU2ifxtpw" type="_RL6IMScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8lGScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8lGicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RL8lGycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RL8lCycoEeSLVrU2ifxtpw" outgoing="_RL8lCCcoEeSLVrU2ifxtpw _RL8lDCcoEeSLVrU2ifxtpw _RL8lDicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_RL8lHCcoEeSLVrU2ifxtpw" name="Call(Expressions_Assignment$initialization$1)" incoming="_RL8lFCcoEeSLVrU2ifxtpw" outgoing="_RL8lDScoEeSLVrU2ifxtpw" operation="_RL9L2ycoEeSLVrU2ifxtpw">
            <target xmi:id="_RL8lHScoEeSLVrU2ifxtpw" name="Call(Expressions_Assignment$initialization$1).target" incoming="_RL8lDCcoEeSLVrU2ifxtpw" type="_RL6IMScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8lHicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8lHycoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RL8lICcoEeSLVrU2ifxtpw" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_RL6INycoEeSLVrU2ifxtpw">
            <object xmi:id="_RL8lIScoEeSLVrU2ifxtpw" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_RL8lDicoEeSLVrU2ifxtpw" type="_RL6IMScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8lIicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8lIycoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_RL8lJCcoEeSLVrU2ifxtpw" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_RL8lDycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL8lJScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL8lJicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL8lJycoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_RL9LgCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_RL8lDycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LgScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LgicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RL9LgycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_RL8lECcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LhCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LhScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL9LhicoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_RL9LhycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_RL8lEScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LiCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LiScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RL9LiicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RL9LiycoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_RL9LjCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_RL8lECcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LjScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LjicoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_RL9LjycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_RL8lEycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LkCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LkScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_RL9LkicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_RL8lEScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LkycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LlCcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RL9LlScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_RL8lEicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RL9LlicoEeSLVrU2ifxtpw" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" incoming="_RL8lEicoEeSLVrU2ifxtpw _RL8lEycoEeSLVrU2ifxtpw" outgoing="_RL8lFCcoEeSLVrU2ifxtpw" decisionInputFlow="_RL8lEycoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL8lCScoEeSLVrU2ifxtpw" name="Return" incoming="_RL8lCCcoEeSLVrU2ifxtpw" parameter="_RL8lBScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RL9LlycoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_RL9L8CcoEeSLVrU2ifxtpw" node="_RL9LmCcoEeSLVrU2ifxtpw" group="_RL9LmCcoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_RL9LmCcoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_RL9LmScoEeSLVrU2ifxtpw" name="Expressions_Assignment$initialization$1" specification="_RL9L2ycoEeSLVrU2ifxtpw" node="_RL9LmicoEeSLVrU2ifxtpw" group="_RL9LmicoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_RL9LmicoEeSLVrU2ifxtpw" name="Body(Expressions_Assignment$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9LmycoEeSLVrU2ifxtpw" target="_RL9LqScoEeSLVrU2ifxtpw" source="_RL9LpicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9LnCcoEeSLVrU2ifxtpw" target="_RL9LsycoEeSLVrU2ifxtpw" source="_RL9LqScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9LnScoEeSLVrU2ifxtpw" target="_RL9LvScoEeSLVrU2ifxtpw" source="_RL9LqScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9LnicoEeSLVrU2ifxtpw" target="_RL9LxCcoEeSLVrU2ifxtpw" source="_RL9LwCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9LnycoEeSLVrU2ifxtpw" target="_RL9L0CcoEeSLVrU2ifxtpw" source="_RL9LxycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9LoCcoEeSLVrU2ifxtpw" target="_RL9L1icoEeSLVrU2ifxtpw" source="_RL9LyycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL9LoScoEeSLVrU2ifxtpw" target="_RL9L2icoEeSLVrU2ifxtpw" source="_RL9L2ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9LoicoEeSLVrU2ifxtpw" target="_RL9L2icoEeSLVrU2ifxtpw" source="_RL9L0ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL9LoycoEeSLVrU2ifxtpw" target="_RL9LqicoEeSLVrU2ifxtpw" source="_RL9L2icoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL9LpCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_RL9LpScoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_RL9LpicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_RL9LmycoEeSLVrU2ifxtpw" type="_RL6IMScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LpycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LqCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RL9LqScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_RL9LmycoEeSLVrU2ifxtpw" outgoing="_RL9LnCcoEeSLVrU2ifxtpw _RL9LnScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL9LqicoEeSLVrU2ifxtpw" name="Initialization" incoming="_RL9LoycoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL9LqycoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9LrCcoEeSLVrU2ifxtpw" target="_RL9LuScoEeSLVrU2ifxtpw" source="_RL9LricoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL9LrScoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_RL9LricoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_RL9LrCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LrycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LsCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_RL9LsScoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_RL9LsicoEeSLVrU2ifxtpw" name="Write(Expressions_Assignment$initializationFlag$1)" structuralFeature="_RL6INycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_RL9LsycoEeSLVrU2ifxtpw" name="Write(Expressions_Assignment$initializationFlag$1).object" incoming="_RL9LnCcoEeSLVrU2ifxtpw" type="_RL6IMScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LtCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LtScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RL9LticoEeSLVrU2ifxtpw" name="Write(Expressions_Assignment$initializationFlag$1).result" type="_RL6IMScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LtycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LuCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_RL9LuScoEeSLVrU2ifxtpw" name="Write(Expressions_Assignment$initializationFlag$1).value" incoming="_RL9LrCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LuicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LuycoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_RL9LvCcoEeSLVrU2ifxtpw" name="Read(Expressions_Assignment$initializationFlag$1)" structuralFeature="_RL6INycoEeSLVrU2ifxtpw">
            <object xmi:id="_RL9LvScoEeSLVrU2ifxtpw" name="Read(Expressions_Assignment$initializationFlag$1).object" incoming="_RL9LnScoEeSLVrU2ifxtpw" type="_RL6IMScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LvicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LvycoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_RL9LwCcoEeSLVrU2ifxtpw" name="Read(Expressions_Assignment$initializationFlag$1).result" outgoing="_RL9LnicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LwScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LwicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL9LwycoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_RL9LxCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_RL9LnicoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LxScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LxicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RL9LxycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_RL9LnycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LyCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LyScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL9LyicoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_RL9LyycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_RL9LoCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9LzCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9LzScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RL9LzicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RL9LzycoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_RL9L0CcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_RL9LnycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9L0ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9L0icoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_RL9L0ycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_RL9LoicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9L1CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9L1ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_RL9L1icoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_RL9LoCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9L1ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9L2CcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RL9L2ScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_RL9LoScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RL9L2icoEeSLVrU2ifxtpw" name="Decision(Test(Expressions_Assignment$initializationFlag$1))" incoming="_RL9LoScoEeSLVrU2ifxtpw _RL9LoicoEeSLVrU2ifxtpw" outgoing="_RL9LoycoEeSLVrU2ifxtpw" decisionInputFlow="_RL9LoicoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_RL9L2ycoEeSLVrU2ifxtpw" name="Expressions_Assignment$initialization$1" visibility="protected" method="_RL9LmScoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_RL9L3CcoEeSLVrU2ifxtpw" name="test" visibility="public" method="_RL6v0ycoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_RL9L3ScoEeSLVrU2ifxtpw" name="i" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9L3icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9L3ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RL9L4CcoEeSLVrU2ifxtpw" name="f" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9L4ScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9L4icoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RL9L4ycoEeSLVrU2ifxtpw" name="h" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9L5CcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9L5ScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RL9L5icoEeSLVrU2ifxtpw" name="filename" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9L5ycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9L6CcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RL9L6ScoEeSLVrU2ifxtpw" name="a" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9L6icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9L6ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_RL9L7CcoEeSLVrU2ifxtpw" name="Expressions_Assignment" visibility="package" method="_RL8lBCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_RL9L7ScoEeSLVrU2ifxtpw" name="" visibility="package" type="_RL6IMScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9L7icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9L7ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_RL9L8CcoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_RL9LlycoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RL9L8ScoEeSLVrU2ifxtpw" name="AssertEqual" node="_RL9MCicoEeSLVrU2ifxtpw _RL9MCycoEeSLVrU2ifxtpw _RL9MDCcoEeSLVrU2ifxtpw _RL9MDScoEeSLVrU2ifxtpw _RL9MDicoEeSLVrU2ifxtpw _RL9MDycoEeSLVrU2ifxtpw _RL9MECcoEeSLVrU2ifxtpw" group="_RL9MECcoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_RL9L8icoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RL9L8ycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RL9L9CcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RL9L9ScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RL9L9icoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RL9L9ycoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9L-CcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9L-ScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RL9L-icoEeSLVrU2ifxtpw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9L-ycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9L_CcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RL9L_ScoEeSLVrU2ifxtpw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9L_icoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9L_ycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MACcoEeSLVrU2ifxtpw" target="_RL9MCycoEeSLVrU2ifxtpw" source="_RL9MCicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MAScoEeSLVrU2ifxtpw" target="_RL9MDScoEeSLVrU2ifxtpw" source="_RL9MDCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MAicoEeSLVrU2ifxtpw" target="_RL9MDycoEeSLVrU2ifxtpw" source="_RL9MDicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MAycoEeSLVrU2ifxtpw" target="_RL9MNScoEeSLVrU2ifxtpw" source="_RL9MDScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MBCcoEeSLVrU2ifxtpw" target="_RL9ykicoEeSLVrU2ifxtpw" source="_RL9MDycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MBScoEeSLVrU2ifxtpw" target="_RL9yyScoEeSLVrU2ifxtpw" source="_RL9MCycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MBicoEeSLVrU2ifxtpw" target="_RL9y7ycoEeSLVrU2ifxtpw" source="_RL9MDycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MBycoEeSLVrU2ifxtpw" target="_RL9zDScoEeSLVrU2ifxtpw" source="_RL9MDycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MCCcoEeSLVrU2ifxtpw" target="_RL9zMycoEeSLVrU2ifxtpw" source="_RL9MDycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MCScoEeSLVrU2ifxtpw" target="_RL9zUycoEeSLVrU2ifxtpw" source="_RL9MDycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_RL9MECcoEeSLVrU2ifxtpw" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_RL9MEScoEeSLVrU2ifxtpw" name="IfStatement@79e15262">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MEicoEeSLVrU2ifxtpw" target="_RL9MLCcoEeSLVrU2ifxtpw" source="_RL9MNScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MEycoEeSLVrU2ifxtpw" target="_RL9MNycoEeSLVrU2ifxtpw" source="_RL9MNScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MFCcoEeSLVrU2ifxtpw" target="_RL9MMicoEeSLVrU2ifxtpw" source="_RL9ykicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MFScoEeSLVrU2ifxtpw" target="_RL9ylCcoEeSLVrU2ifxtpw" source="_RL9ykicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MFicoEeSLVrU2ifxtpw" target="_RL9ymycoEeSLVrU2ifxtpw" source="_RL9MOicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MFycoEeSLVrU2ifxtpw" target="_RL9ynCcoEeSLVrU2ifxtpw" source="_RL9ylycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MGCcoEeSLVrU2ifxtpw" target="_RL9ynicoEeSLVrU2ifxtpw" source="_RL9ymycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MGScoEeSLVrU2ifxtpw" target="_RL9ypScoEeSLVrU2ifxtpw" source="_RL9ynCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MGicoEeSLVrU2ifxtpw" target="_RL9yqycoEeSLVrU2ifxtpw" source="_RL9ynCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL9MGycoEeSLVrU2ifxtpw" target="_RL9MKycoEeSLVrU2ifxtpw" source="_RL9yqycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL9MHCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL9MHScoEeSLVrU2ifxtpw" target="_RL9ynScoEeSLVrU2ifxtpw" source="_RL9yqycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL9MHicoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL9MHycoEeSLVrU2ifxtpw" target="_RL9yrCcoEeSLVrU2ifxtpw" source="_RL9ymicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MICcoEeSLVrU2ifxtpw" target="_RL9yrCcoEeSLVrU2ifxtpw" source="_RL9ymycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL9MIScoEeSLVrU2ifxtpw" target="_RL9yqycoEeSLVrU2ifxtpw" source="_RL9yrCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL9MIicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL9MIycoEeSLVrU2ifxtpw" target="_RL9ypCcoEeSLVrU2ifxtpw" source="_RL9yrCcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL9MJCcoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MJScoEeSLVrU2ifxtpw" target="_RL9yrScoEeSLVrU2ifxtpw" source="_RL9MLycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MJicoEeSLVrU2ifxtpw" target="_RL9yrScoEeSLVrU2ifxtpw" source="_RL9yoScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MJycoEeSLVrU2ifxtpw" target="_RL9yrScoEeSLVrU2ifxtpw" source="_RL9yqCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9MKCcoEeSLVrU2ifxtpw" target="_RL9yrycoEeSLVrU2ifxtpw" source="_RL9yrScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL9MKScoEeSLVrU2ifxtpw" target="_RL9y3icoEeSLVrU2ifxtpw" source="_RL9ytScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL9MKicoEeSLVrU2ifxtpw" target="_RL-ZoycoEeSLVrU2ifxtpw" source="_RL9y3icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RL9MKycoEeSLVrU2ifxtpw" name="Test(==)" incoming="_RL9MGycoEeSLVrU2ifxtpw">
            <first xmi:id="_RL9MLCcoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_RL9MEicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9MLScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9MLicoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_RL9MLycoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_RL9MJScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9MMCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9MMScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_RL9MMicoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_RL9MFCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9MMycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9MNCcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RL9MNScoEeSLVrU2ifxtpw" name="Fork(Fork(value1))" incoming="_RL9MAycoEeSLVrU2ifxtpw" outgoing="_RL9MEicoEeSLVrU2ifxtpw _RL9MEycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL9MNicoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_RL9MNycoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RL9MEycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9MOCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9MOScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RL9MOicoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RL9MFicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9ykCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9ykScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RL9ykicoEeSLVrU2ifxtpw" name="Fork(Fork(value2))" incoming="_RL9MBCcoEeSLVrU2ifxtpw" outgoing="_RL9MFCcoEeSLVrU2ifxtpw _RL9MFScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL9ykycoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_RL9ylCcoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RL9MFScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9ylScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9ylicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RL9ylycoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RL9MFycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9ymCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9ymScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_RL9ymicoEeSLVrU2ifxtpw" name="Initial(Test(==))" outgoing="_RL9MHycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_RL9ymycoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RL9MFicoEeSLVrU2ifxtpw" outgoing="_RL9MGCcoEeSLVrU2ifxtpw _RL9MICcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_RL9ynCcoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RL9MFycoEeSLVrU2ifxtpw" outgoing="_RL9MGScoEeSLVrU2ifxtpw _RL9MGicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL9ynScoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_RL9MHScoEeSLVrU2ifxtpw">
            <argument xmi:id="_RL9ynicoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RL9MGCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9ynycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9yoCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RL9yoScoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_RL9MJicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9yoicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9yoycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL9ypCcoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_RL9MIycoEeSLVrU2ifxtpw">
            <argument xmi:id="_RL9ypScoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RL9MGScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9ypicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9ypycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RL9yqCcoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_RL9MJycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9yqScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9yqicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_RL9yqycoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RL9MGicoEeSLVrU2ifxtpw _RL9MIScoEeSLVrU2ifxtpw" outgoing="_RL9MGycoEeSLVrU2ifxtpw _RL9MHScoEeSLVrU2ifxtpw" decisionInputFlow="_RL9MGicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RL9yrCcoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RL9MHycoEeSLVrU2ifxtpw _RL9MICcoEeSLVrU2ifxtpw" outgoing="_RL9MIScoEeSLVrU2ifxtpw _RL9MIycoEeSLVrU2ifxtpw" decisionInputFlow="_RL9MICcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_RL9yrScoEeSLVrU2ifxtpw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_RL9MJScoEeSLVrU2ifxtpw _RL9MJicoEeSLVrU2ifxtpw _RL9MJycoEeSLVrU2ifxtpw" outgoing="_RL9MKCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL9yricoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_RL9yrycoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RL9MKCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9ysCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9ysScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RL9ysicoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9ysycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9ytCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL9ytScoEeSLVrU2ifxtpw" name="ExpressionStatement@551b8669" outgoing="_RL9MKScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9yticoEeSLVrU2ifxtpw" target="_RL9yuScoEeSLVrU2ifxtpw" source="_RL9y2ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RL9ytycoEeSLVrU2ifxtpw" target="_RL9yuCcoEeSLVrU2ifxtpw" source="_RL9yvCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL9yuCcoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_RL9ytycoEeSLVrU2ifxtpw" behavior="_RL-aDycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RL9yuScoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_RL9yticoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9yuicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9yuycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL9yvCcoEeSLVrU2ifxtpw" name="Tuple@1dd8224b" outgoing="_RL9ytycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9yvScoEeSLVrU2ifxtpw" target="_RL9yxicoEeSLVrU2ifxtpw" source="_RL9ywScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9yvicoEeSLVrU2ifxtpw" target="_RL9y1ScoEeSLVrU2ifxtpw" source="_RL9yzCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9yvycoEeSLVrU2ifxtpw" target="_RL9y2CcoEeSLVrU2ifxtpw" source="_RL9y0CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL9ywCcoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_RL9ywScoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_RL9yvScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9ywicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9ywycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RL9yxCcoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL9yxScoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_RL9yxicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RL9yvScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9yxycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9yyCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RL9yyScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RL9MBScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9yyicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9yyycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RL9yzCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RL9yvicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9yzScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9yzicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL9yzycoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;)">
                <result xmi:id="_RL9y0CcoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;).result" outgoing="_RL9yvycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9y0ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9y0icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RL9y0ycoEeSLVrU2ifxtpw" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL9y1CcoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_RL9y1ScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RL9yvicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9y1icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9y1ycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RL9y2CcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RL9yvycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9y2ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9y2icoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RL9y2ycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RL9yticoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9y3CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9y3ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL9y3icoEeSLVrU2ifxtpw" name="ExpressionStatement@12a16008" incoming="_RL9MKScoEeSLVrU2ifxtpw" outgoing="_RL9MKicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9y3ycoEeSLVrU2ifxtpw" target="_RL9y4icoEeSLVrU2ifxtpw" source="_RL-ZoicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RL9y4CcoEeSLVrU2ifxtpw" target="_RL9y4ScoEeSLVrU2ifxtpw" source="_RL9y5ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL9y4ScoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_RL9y4CcoEeSLVrU2ifxtpw" behavior="_RL-aDycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RL9y4icoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_RL9y3ycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9y4ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9y5CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL9y5ScoEeSLVrU2ifxtpw" name="Tuple@5108c21a" outgoing="_RL9y4CcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RL9y5icoEeSLVrU2ifxtpw" target="_RL-ZoScoEeSLVrU2ifxtpw" source="_RL-ZoCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9y5ycoEeSLVrU2ifxtpw" target="_RL-ZoScoEeSLVrU2ifxtpw" source="_RL9y8icoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RL9y6CcoEeSLVrU2ifxtpw" target="_RL9y9ScoEeSLVrU2ifxtpw" source="_RL-ZoScoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL9y6ScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RL9y6icoEeSLVrU2ifxtpw" target="_RL9y_ycoEeSLVrU2ifxtpw" source="_RL-ZoScoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL9y6ycoEeSLVrU2ifxtpw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9y7CcoEeSLVrU2ifxtpw" target="_RL-ZoicoEeSLVrU2ifxtpw" source="_RL9y9ycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9y7ScoEeSLVrU2ifxtpw" target="_RL-ZoicoEeSLVrU2ifxtpw" source="_RL9zCScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL9y7icoEeSLVrU2ifxtpw" name="Call(IsEmpty)">
                <argument xmi:id="_RL9y7ycoEeSLVrU2ifxtpw" name="Call(IsEmpty).argument(seq)" incoming="_RL9MBicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9y8CcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9y8ScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_RL9y8icoEeSLVrU2ifxtpw" name="Call(IsEmpty).result()" outgoing="_RL9y5ycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9y8ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9y9CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL9y9ScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@257fd086.operand2" incoming="_RL9y6CcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9y9icoEeSLVrU2ifxtpw" target="_RL9y9ycoEeSLVrU2ifxtpw" source="_RL9y-ycoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_RL9y9ycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@257fd086.operand2.result" incoming="_RL9y9icoEeSLVrU2ifxtpw" outgoing="_RL9y7CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9y-CcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9y-ScoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL9y-icoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;)">
                  <result xmi:id="_RL9y-ycoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;).result" outgoing="_RL9y9icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9y_CcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9y_ScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RL9y_icoEeSLVrU2ifxtpw" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL9y_ycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@257fd086.operand3" incoming="_RL9y6icoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_RL9zACcoEeSLVrU2ifxtpw" target="_RL9zVScoEeSLVrU2ifxtpw" source="_RL9zVCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zAScoEeSLVrU2ifxtpw" target="_RL9zVScoEeSLVrU2ifxtpw" source="_RL9zECcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RL9zAicoEeSLVrU2ifxtpw" target="_RL9zEycoEeSLVrU2ifxtpw" source="_RL9zVScoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL9zAycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_RL9zBCcoEeSLVrU2ifxtpw" target="_RL9zTicoEeSLVrU2ifxtpw" source="_RL9zVScoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL9zBScoEeSLVrU2ifxtpw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zBicoEeSLVrU2ifxtpw" target="_RL9zVicoEeSLVrU2ifxtpw" source="_RL9zGScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zBycoEeSLVrU2ifxtpw" target="_RL9zVicoEeSLVrU2ifxtpw" source="_RL9zUCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zCCcoEeSLVrU2ifxtpw" target="_RL9zCScoEeSLVrU2ifxtpw" source="_RL9zVicoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_RL9zCScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@257fd086.operand3.result" incoming="_RL9zCCcoEeSLVrU2ifxtpw" outgoing="_RL9y7ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zCicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zCycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RL9zDCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_RL9zDScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_RL9MBycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zDicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zDycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_RL9zECcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_RL9zAScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zEScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zEicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL9zEycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@27049653.operand2" incoming="_RL9zAicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zFCcoEeSLVrU2ifxtpw" target="_RL9zNicoEeSLVrU2ifxtpw" source="_RL9zHScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zFScoEeSLVrU2ifxtpw" target="_RL9zOScoEeSLVrU2ifxtpw" source="_RL9zNCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zFicoEeSLVrU2ifxtpw" target="_RL9zRScoEeSLVrU2ifxtpw" source="_RL9zPCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zFycoEeSLVrU2ifxtpw" target="_RL9zSCcoEeSLVrU2ifxtpw" source="_RL9zQCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zGCcoEeSLVrU2ifxtpw" target="_RL9zGScoEeSLVrU2ifxtpw" source="_RL9zSycoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_RL9zGScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@27049653.operand2.result" incoming="_RL9zGCcoEeSLVrU2ifxtpw" outgoing="_RL9zBicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zGicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zGycoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL9zHCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_RL9zHScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_RL9zFCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zHicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zHycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RL9zICcoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_RL9zIScoEeSLVrU2ifxtpw" name="CastExpression@41132e21" mode="parallel" outputElement="_RL9zNCcoEeSLVrU2ifxtpw" inputElement="_RL9zMycoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zIicoEeSLVrU2ifxtpw" target="_RL9zKycoEeSLVrU2ifxtpw" source="_RL9zMScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zIycoEeSLVrU2ifxtpw" target="_RL9zMicoEeSLVrU2ifxtpw" source="_RL9zMScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zJCcoEeSLVrU2ifxtpw" target="_RL9zMicoEeSLVrU2ifxtpw" source="_RL9zLicoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zJScoEeSLVrU2ifxtpw" target="_RL9zKScoEeSLVrU2ifxtpw" source="_RL9zMicoEeSLVrU2ifxtpw">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL9zJicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zJycoEeSLVrU2ifxtpw" target="_RL9zMScoEeSLVrU2ifxtpw" source="_RL9zMycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zKCcoEeSLVrU2ifxtpw" target="_RL9zNCcoEeSLVrU2ifxtpw" source="_RL9zKScoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_RL9zKScoEeSLVrU2ifxtpw" name="Merge(CastExpression@41132e21.operand)" incoming="_RL9zJScoEeSLVrU2ifxtpw" outgoing="_RL9zKCcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RL9zKicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_RL9zKycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_RL9zIicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zLCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zLScoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_RL9zLicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_RL9zJCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zLycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zMCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_RL9zMScoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_RL9zJycoEeSLVrU2ifxtpw" outgoing="_RL9zIicoEeSLVrU2ifxtpw _RL9zIycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_RL9zMicoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_RL9zIycoEeSLVrU2ifxtpw _RL9zJCcoEeSLVrU2ifxtpw" outgoing="_RL9zJScoEeSLVrU2ifxtpw" decisionInputFlow="_RL9zJCcoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_RL9zMycoEeSLVrU2ifxtpw" name="CastExpression@41132e21.inputElement" incoming="_RL9MCCcoEeSLVrU2ifxtpw" outgoing="_RL9zJycoEeSLVrU2ifxtpw" regionAsInput="_RL9zIScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_RL9zNCcoEeSLVrU2ifxtpw" name="CastExpression@41132e21.outputElement" incoming="_RL9zKCcoEeSLVrU2ifxtpw" outgoing="_RL9zFScoEeSLVrU2ifxtpw" regionAsOutput="_RL9zIScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL9zNScoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_RL9zNicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RL9zFCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zNycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zOCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_RL9zOScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RL9zFScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zOicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zOycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RL9zPCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RL9zFicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zPScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zPicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL9zPycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_RL9zQCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_RL9zFycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zQScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zQicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_RL9zQycoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL9zRCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_RL9zRScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RL9zFicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zRicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zRycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_RL9zSCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RL9zFycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zSScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zSicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_RL9zSycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RL9zGCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zTCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zTScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL9zTicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@27049653.operand3" incoming="_RL9zBCcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RL9zTycoEeSLVrU2ifxtpw" target="_RL9zUCcoEeSLVrU2ifxtpw" source="_RL9zUycoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_RL9zUCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@27049653.operand3.result" incoming="_RL9zTycoEeSLVrU2ifxtpw" outgoing="_RL9zBycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL9zUScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL9zUicoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_RL9zUycoEeSLVrU2ifxtpw" name="Merge(Fork(value2))" incoming="_RL9MCScoEeSLVrU2ifxtpw" outgoing="_RL9zTycoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_RL9zVCcoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@27049653)" outgoing="_RL9zACcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_RL9zVScoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@27049653)" incoming="_RL9zACcoEeSLVrU2ifxtpw _RL9zAScoEeSLVrU2ifxtpw" outgoing="_RL9zAicoEeSLVrU2ifxtpw _RL9zBCcoEeSLVrU2ifxtpw" decisionInputFlow="_RL9zAScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_RL9zVicoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@27049653.result)" incoming="_RL9zBicoEeSLVrU2ifxtpw _RL9zBycoEeSLVrU2ifxtpw" outgoing="_RL9zCCcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RL-ZoCcoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@257fd086)" outgoing="_RL9y5icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_RL-ZoScoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@257fd086)" incoming="_RL9y5icoEeSLVrU2ifxtpw _RL9y5ycoEeSLVrU2ifxtpw" outgoing="_RL9y6CcoEeSLVrU2ifxtpw _RL9y6icoEeSLVrU2ifxtpw" decisionInputFlow="_RL9y5ycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_RL-ZoicoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@257fd086.result)" incoming="_RL9y7CcoEeSLVrU2ifxtpw _RL9y7ScoEeSLVrU2ifxtpw" outgoing="_RL9y3ycoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL-ZoycoEeSLVrU2ifxtpw" name="ExpressionStatement@558cc99c" incoming="_RL9MKicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-ZpCcoEeSLVrU2ifxtpw" target="_RL-ZpycoEeSLVrU2ifxtpw" source="_RL-ZrycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RL-ZpScoEeSLVrU2ifxtpw" target="_RL-ZpicoEeSLVrU2ifxtpw" source="_RL-ZrScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL-ZpicoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_RL-ZpScoEeSLVrU2ifxtpw">
              <argument xmi:id="_RL-ZpycoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_RL-ZpCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-ZqCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-ZqScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL-ZqicoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-ZqycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-ZrCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL-ZrScoEeSLVrU2ifxtpw" name="Tuple@63c29805" outgoing="_RL-ZpScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL-ZricoEeSLVrU2ifxtpw" name="Value(&quot;&quot;)">
                <result xmi:id="_RL-ZrycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;).result" outgoing="_RL-ZpCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-ZsCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-ZsScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RL-ZsicoEeSLVrU2ifxtpw" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL-ZsycoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_RL-ZtCcoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-ZtScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-ZticoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_RL-ZtycoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_RL-ZuCcoEeSLVrU2ifxtpw" body="_RL9ytScoEeSLVrU2ifxtpw _RL9y3icoEeSLVrU2ifxtpw _RL-ZoycoEeSLVrU2ifxtpw" decider="_RL9ysicoEeSLVrU2ifxtpw" successorClause="_RL-ZuScoEeSLVrU2ifxtpw" test="_RL9MKycoEeSLVrU2ifxtpw _RL9MNicoEeSLVrU2ifxtpw _RL9ykycoEeSLVrU2ifxtpw _RL9ynScoEeSLVrU2ifxtpw _RL9ypCcoEeSLVrU2ifxtpw _RL9yricoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_RL-ZuScoEeSLVrU2ifxtpw" decider="_RL-ZtCcoEeSLVrU2ifxtpw" predecessorClause="_RL-ZuCcoEeSLVrU2ifxtpw" test="_RL-ZsycoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL9MCicoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_RL9MACcoEeSLVrU2ifxtpw" parameter="_RL9L9ycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RL9MCycoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_RL9MACcoEeSLVrU2ifxtpw" outgoing="_RL9MBScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL9MDCcoEeSLVrU2ifxtpw" name="Input(value1)" outgoing="_RL9MAScoEeSLVrU2ifxtpw" parameter="_RL9L-icoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RL9MDScoEeSLVrU2ifxtpw" name="Fork(value1)" incoming="_RL9MAScoEeSLVrU2ifxtpw" outgoing="_RL9MAycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL9MDicoEeSLVrU2ifxtpw" name="Input(value2)" outgoing="_RL9MAicoEeSLVrU2ifxtpw" parameter="_RL9L_ScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RL9MDycoEeSLVrU2ifxtpw" name="Fork(value2)" incoming="_RL9MAicoEeSLVrU2ifxtpw" outgoing="_RL9MBCcoEeSLVrU2ifxtpw _RL9MBicoEeSLVrU2ifxtpw _RL9MBycoEeSLVrU2ifxtpw _RL9MCCcoEeSLVrU2ifxtpw _RL9MCScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RL-ZuicoEeSLVrU2ifxtpw" name="AssertFalse" node="_RL-ZyycoEeSLVrU2ifxtpw _RL-ZzCcoEeSLVrU2ifxtpw _RL-ZzScoEeSLVrU2ifxtpw _RL-ZzicoEeSLVrU2ifxtpw _RL-ZzycoEeSLVrU2ifxtpw" group="_RL-ZzycoEeSLVrU2ifxtpw">
      <elementImport xmi:id="_RL-ZuycoEeSLVrU2ifxtpw" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_RL-ZvCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RL-ZvScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RL-ZvicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RL-ZvycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RL-ZwCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RL-ZwScoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-ZwicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-ZwycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RL-ZxCcoEeSLVrU2ifxtpw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-ZxScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-ZxicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-ZxycoEeSLVrU2ifxtpw" target="_RL-ZzCcoEeSLVrU2ifxtpw" source="_RL-ZyycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-ZyCcoEeSLVrU2ifxtpw" target="_RL-ZzicoEeSLVrU2ifxtpw" source="_RL-ZzScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-ZyScoEeSLVrU2ifxtpw" target="_RL-Z7ycoEeSLVrU2ifxtpw" source="_RL-ZzCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-ZyicoEeSLVrU2ifxtpw" target="_RL-aBCcoEeSLVrU2ifxtpw" source="_RL-ZzicoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_RL-ZzycoEeSLVrU2ifxtpw" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL-Z0CcoEeSLVrU2ifxtpw" name="ExpressionStatement@556fc29d">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-Z0ScoEeSLVrU2ifxtpw" target="_RL-Z1ScoEeSLVrU2ifxtpw" source="_RL-Z8icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-Z0icoEeSLVrU2ifxtpw" target="_RL-Z2CcoEeSLVrU2ifxtpw" source="_RL-aDScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL-Z0ycoEeSLVrU2ifxtpw" target="_RL-Z1CcoEeSLVrU2ifxtpw" source="_RL-Z2ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL-Z1CcoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_RL-Z0ycoEeSLVrU2ifxtpw" behavior="_RL_AtCcoEeSLVrU2ifxtpw">
            <argument xmi:id="_RL-Z1ScoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_RL-Z0ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-Z1icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-Z1ycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_RL-Z2CcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_RL-Z0icoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-Z2ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-Z2icoEeSLVrU2ifxtpw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL-Z2ycoEeSLVrU2ifxtpw" name="Tuple@2e027d21" outgoing="_RL-Z0ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-Z3CcoEeSLVrU2ifxtpw" target="_RL-Z7CcoEeSLVrU2ifxtpw" source="_RL-Z5ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-Z3ScoEeSLVrU2ifxtpw" target="_RL-Z-ycoEeSLVrU2ifxtpw" source="_RL-aBCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-Z3icoEeSLVrU2ifxtpw" target="_RL-aBicoEeSLVrU2ifxtpw" source="_RL-aBCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-Z3ycoEeSLVrU2ifxtpw" target="_RL-aDCcoEeSLVrU2ifxtpw" source="_RL-aCScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-Z4CcoEeSLVrU2ifxtpw" target="_RL-aDScoEeSLVrU2ifxtpw" source="_RL-Z_icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-Z4ScoEeSLVrU2ifxtpw" target="_RL-aDicoEeSLVrU2ifxtpw" source="_RL-aDCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-Z4icoEeSLVrU2ifxtpw" target="_RL-aDicoEeSLVrU2ifxtpw" source="_RL-aDCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-Z4ycoEeSLVrU2ifxtpw" target="_RL-aDScoEeSLVrU2ifxtpw" source="_RL-aDicoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL-Z5CcoEeSLVrU2ifxtpw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-Z5ScoEeSLVrU2ifxtpw" target="_RL-aAScoEeSLVrU2ifxtpw" source="_RL-Z9icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL-Z5icoEeSLVrU2ifxtpw" name="Value(&quot;! &quot;)">
              <result xmi:id="_RL-Z5ycoEeSLVrU2ifxtpw" name="Value(&quot;! &quot;).result" outgoing="_RL-Z3CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-Z6CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-Z6ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_RL-Z6icoEeSLVrU2ifxtpw" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL-Z6ycoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_RL-Z7CcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RL-Z3CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-Z7ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-Z7icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RL-Z7ycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RL-ZyScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-Z8CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-Z8ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL-Z8icoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RL-Z0ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-Z8ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-Z9CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL-Z9ScoEeSLVrU2ifxtpw" name="Value(false)">
              <result xmi:id="_RL-Z9icoEeSLVrU2ifxtpw" name="Value(false).result" outgoing="_RL-Z5ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-Z9ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-Z-CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_RL-Z-ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_RL-Z-icoEeSLVrU2ifxtpw" name="Test(==)">
              <first xmi:id="_RL-Z-ycoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_RL-Z3ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-Z_CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-Z_ScoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_RL-Z_icoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_RL-Z4CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-Z_ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-aACcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_RL-aAScoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_RL-Z5ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-aAicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-aAycoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL-aBCcoEeSLVrU2ifxtpw" name="Fork(Fork(condition))" incoming="_RL-ZyicoEeSLVrU2ifxtpw" outgoing="_RL-Z3ScoEeSLVrU2ifxtpw _RL-Z3icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL-aBScoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
              <argument xmi:id="_RL-aBicoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RL-Z3icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-aBycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-aCCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_RL-aCScoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RL-Z3ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-aCicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-aCycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL-aDCcoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RL-Z3ycoEeSLVrU2ifxtpw" outgoing="_RL-Z4ScoEeSLVrU2ifxtpw _RL-Z4icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_RL-aDScoEeSLVrU2ifxtpw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_RL-Z4CcoEeSLVrU2ifxtpw _RL-Z4ycoEeSLVrU2ifxtpw" outgoing="_RL-Z0icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RL-aDicoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RL-Z4ScoEeSLVrU2ifxtpw _RL-Z4icoEeSLVrU2ifxtpw" outgoing="_RL-Z4ycoEeSLVrU2ifxtpw" decisionInputFlow="_RL-Z4icoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL-ZyycoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_RL-ZxycoEeSLVrU2ifxtpw" parameter="_RL-ZwScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RL-ZzCcoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_RL-ZxycoEeSLVrU2ifxtpw" outgoing="_RL-ZyScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL-ZzScoEeSLVrU2ifxtpw" name="Input(condition)" outgoing="_RL-ZyCcoEeSLVrU2ifxtpw" parameter="_RL-ZxCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RL-ZzicoEeSLVrU2ifxtpw" name="Fork(condition)" incoming="_RL-ZyCcoEeSLVrU2ifxtpw" outgoing="_RL-ZyicoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RL-aDycoEeSLVrU2ifxtpw" name="Write" node="_RL-aGicoEeSLVrU2ifxtpw _RL-aGycoEeSLVrU2ifxtpw _RL-aHCcoEeSLVrU2ifxtpw" group="_RL-aHCcoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_RL-aECcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RL-aEScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RL-aEicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RL-aEycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RL-aFCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RL-aFScoEeSLVrU2ifxtpw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-aFicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-aFycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-aGCcoEeSLVrU2ifxtpw" target="_RL-aGycoEeSLVrU2ifxtpw" source="_RL-aGicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-aGScoEeSLVrU2ifxtpw" target="_RL-aIycoEeSLVrU2ifxtpw" source="_RL-aGycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_RL-aHCcoEeSLVrU2ifxtpw" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL-aHScoEeSLVrU2ifxtpw" name="ExpressionStatement@35b822e5">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-aHicoEeSLVrU2ifxtpw" target="_RL-aMCcoEeSLVrU2ifxtpw" source="_RL-aPScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RL-aHycoEeSLVrU2ifxtpw" target="_RL-aICcoEeSLVrU2ifxtpw" source="_RL-aMScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_RL-aICcoEeSLVrU2ifxtpw" name="Collect(Call(write))" incoming="_RL-aHycoEeSLVrU2ifxtpw" mode="parallel" inputElement="_RL-aMCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-aIScoEeSLVrU2ifxtpw" target="_RL-aJycoEeSLVrU2ifxtpw" source="_RL-aIycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-aIicoEeSLVrU2ifxtpw" target="_RL-aLScoEeSLVrU2ifxtpw" source="_RL-aMCcoEeSLVrU2ifxtpw"/>
            <structuredNodeInput xmi:id="_RL-aIycoEeSLVrU2ifxtpw" name="Collect(Call(write)).input(Fork(value))" incoming="_RL-aGScoEeSLVrU2ifxtpw" outgoing="_RL-aIScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-aJCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-aJScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_RL-aJicoEeSLVrU2ifxtpw" name="Call(write)">
              <argument xmi:id="_RL-aJycoEeSLVrU2ifxtpw" name="Call(write).argument(value)" incoming="_RL-aIScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-aKCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-aKScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL-aKicoEeSLVrU2ifxtpw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-aKycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-aLCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_RL-aLScoEeSLVrU2ifxtpw" name="Call(write).target" incoming="_RL-aIicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-aLicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-aLycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_RL-aMCcoEeSLVrU2ifxtpw" name="Collect(Call(write)).inputElement" incoming="_RL-aHicoEeSLVrU2ifxtpw" outgoing="_RL-aIicoEeSLVrU2ifxtpw" regionAsInput="_RL-aICcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL-aMScoEeSLVrU2ifxtpw" name="Feature(Call(At).result())" outgoing="_RL-aHycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-aMicoEeSLVrU2ifxtpw" target="_RL-aNycoEeSLVrU2ifxtpw" source="_RL-aQicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-aMycoEeSLVrU2ifxtpw" target="_RL_AsycoEeSLVrU2ifxtpw" source="_RL-aRicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RL-aNCcoEeSLVrU2ifxtpw" target="_RL-aNicoEeSLVrU2ifxtpw" source="_RL-aQCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL-aNScoEeSLVrU2ifxtpw" target="_RL-aOicoEeSLVrU2ifxtpw" source="_RL_AsycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL-aNicoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RL-aNCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_RL-aNycoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RL-aMicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-aOCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-aOScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_RL-aOicoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RL-aNScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-aOycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-aPCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL-aPScoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RL-aHicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-aPicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-aPycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL-aQCcoEeSLVrU2ifxtpw" name="Tuple@37bedde6" outgoing="_RL-aNCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_RL-aQScoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_RL-aQicoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel).result" outgoing="_RL-aMicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL-aQycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL-aRCcoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL-aRScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_RL-aRicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RL-aMycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_AsCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_AsScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_RL_AsicoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_RL_AsycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RL-aMycoEeSLVrU2ifxtpw" outgoing="_RL-aNScoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL-aGicoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_RL-aGCcoEeSLVrU2ifxtpw" parameter="_RL-aFScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RL-aGycoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_RL-aGCcoEeSLVrU2ifxtpw" outgoing="_RL-aGScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_RL_AtCcoEeSLVrU2ifxtpw" name="AssertTrue" node="_RL_AxCcoEeSLVrU2ifxtpw _RL_AxScoEeSLVrU2ifxtpw _RL_AxicoEeSLVrU2ifxtpw _RL_AxycoEeSLVrU2ifxtpw _RL_AyCcoEeSLVrU2ifxtpw" group="_RL_AyCcoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_RL_AtScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_RL_AticoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_RL_AtycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_RL_AuCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_RL_AuScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_RL_AuicoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_AuycoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_AvCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RL_AvScoEeSLVrU2ifxtpw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_AvicoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_AvycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_AwCcoEeSLVrU2ifxtpw" target="_RL_AxScoEeSLVrU2ifxtpw" source="_RL_AxCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_AwScoEeSLVrU2ifxtpw" target="_RL_AxycoEeSLVrU2ifxtpw" source="_RL_AxicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_AwicoEeSLVrU2ifxtpw" target="_RL_A4ycoEeSLVrU2ifxtpw" source="_RL_AxycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_AwycoEeSLVrU2ifxtpw" target="_RL_BCicoEeSLVrU2ifxtpw" source="_RL_AxScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_RL_AyCcoEeSLVrU2ifxtpw" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_RL_AyScoEeSLVrU2ifxtpw" name="IfStatement@7558fa79">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_AyicoEeSLVrU2ifxtpw" target="_RL_A2icoEeSLVrU2ifxtpw" source="_RL_A4ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_AyycoEeSLVrU2ifxtpw" target="_RL_A5ScoEeSLVrU2ifxtpw" source="_RL_A4ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_AzCcoEeSLVrU2ifxtpw" target="_RL_A6ycoEeSLVrU2ifxtpw" source="_RL_A6CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_AzScoEeSLVrU2ifxtpw" target="_RL_A7CcoEeSLVrU2ifxtpw" source="_RL_A3ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_AzicoEeSLVrU2ifxtpw" target="_RL_A7ScoEeSLVrU2ifxtpw" source="_RL_A6ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_AzycoEeSLVrU2ifxtpw" target="_RL_A7ScoEeSLVrU2ifxtpw" source="_RL_A6ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_A0CcoEeSLVrU2ifxtpw" target="_RL_A7CcoEeSLVrU2ifxtpw" source="_RL_A7ScoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_RL_A0ScoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_A0icoEeSLVrU2ifxtpw" target="_RL_A4CcoEeSLVrU2ifxtpw" source="_RL_A1ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_A0ycoEeSLVrU2ifxtpw" target="_RL_A7ycoEeSLVrU2ifxtpw" source="_RL_A7CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL_A1CcoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_RL_A1ScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_RL_A0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_A1icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_A1ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_RL_A2CcoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_RL_A2ScoEeSLVrU2ifxtpw" name="Test(==)">
            <first xmi:id="_RL_A2icoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_RL_AyicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_A2ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_A3CcoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_RL_A3ScoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_RL_AzScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_A3icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_A3ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_RL_A4CcoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_RL_A0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_A4ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_A4icoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RL_A4ycoEeSLVrU2ifxtpw" name="Fork(Fork(condition))" incoming="_RL_AwicoEeSLVrU2ifxtpw" outgoing="_RL_AyicoEeSLVrU2ifxtpw _RL_AyycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL_A5CcoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_RL_A5ScoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RL_AyycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_A5icoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_A5ycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RL_A6CcoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RL_AzCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_A6ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_A6icoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RL_A6ycoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RL_AzCcoEeSLVrU2ifxtpw" outgoing="_RL_AzicoEeSLVrU2ifxtpw _RL_AzycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_RL_A7CcoEeSLVrU2ifxtpw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_RL_AzScoEeSLVrU2ifxtpw _RL_A0CcoEeSLVrU2ifxtpw" outgoing="_RL_A0ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_RL_A7ScoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RL_AzicoEeSLVrU2ifxtpw _RL_AzycoEeSLVrU2ifxtpw" outgoing="_RL_A0CcoEeSLVrU2ifxtpw" decisionInputFlow="_RL_AzycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL_A7icoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_RL_A7ycoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RL_A0ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_A8CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_A8ScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RL_A8icoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_A8ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_A9CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL_A9ScoEeSLVrU2ifxtpw" name="ExpressionStatement@5454f3b2">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_A9icoEeSLVrU2ifxtpw" target="_RL_A-ScoEeSLVrU2ifxtpw" source="_RL_BDScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RL_A9ycoEeSLVrU2ifxtpw" target="_RL_A-CcoEeSLVrU2ifxtpw" source="_RL_A_ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL_A-CcoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_RL_A9ycoEeSLVrU2ifxtpw">
              <argument xmi:id="_RL_A-ScoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_RL_A9icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_A-icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_A-ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RL_A_CcoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_A_ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_A_icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RL_A_ycoEeSLVrU2ifxtpw" name="Tuple@27bcc631" outgoing="_RL_A9ycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RL_BACcoEeSLVrU2ifxtpw" target="_RL_BBycoEeSLVrU2ifxtpw" source="_RL_BAicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL_BAScoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_RL_BAicoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_RL_BACcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_BAycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_BBCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RL_BBScoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RL_BBicoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_RL_BBycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RL_BACcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_BCCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_BCScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RL_BCicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RL_AwycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_BCycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_BDCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_RL_BDScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RL_A9icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_BDicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_BDycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RL_BECcoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_RL_BEScoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RL_BEicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RL_BEycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_RL_BFCcoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_RL_BFScoEeSLVrU2ifxtpw" body="_RL_A9ScoEeSLVrU2ifxtpw" decider="_RL_A8icoEeSLVrU2ifxtpw" successorClause="_RL_BFicoEeSLVrU2ifxtpw" test="_RL_A1CcoEeSLVrU2ifxtpw _RL_A2ScoEeSLVrU2ifxtpw _RL_A5CcoEeSLVrU2ifxtpw _RL_A7icoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_RL_BFicoEeSLVrU2ifxtpw" decider="_RL_BEScoEeSLVrU2ifxtpw" predecessorClause="_RL_BFScoEeSLVrU2ifxtpw" test="_RL_BECcoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL_AxCcoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_RL_AwCcoEeSLVrU2ifxtpw" parameter="_RL_AuicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RL_AxScoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_RL_AwCcoEeSLVrU2ifxtpw" outgoing="_RL_AwycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_RL_AxicoEeSLVrU2ifxtpw" name="Input(condition)" outgoing="_RL_AwScoEeSLVrU2ifxtpw" parameter="_RL_AvScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_RL_AxycoEeSLVrU2ifxtpw" name="Fork(condition)" incoming="_RL_AwScoEeSLVrU2ifxtpw" outgoing="_RL_AwicoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <profileApplication xmi:id="_RL_BFycoEeSLVrU2ifxtpw">
      <eAnnotations xmi:id="_RL_BGCcoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_RMBc8CcoEeSLVrU2ifxtpw" base_BehavioralFeature="_RL9L7CcoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_RMD5MCcoEeSLVrU2ifxtpw" base_BehavioralFeature="_RL9L8CcoEeSLVrU2ifxtpw"/>
</xmi:XMI>

<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_RHbQ0CcoEeSLVrU2ifxtpw" name="Model" visibility="package">
  <packagedElement xmi:type="uml:Activity" xmi:id="_RHbQ0ScoEeSLVrU2ifxtpw" name="AssertList" node="_RHbQ6ycoEeSLVrU2ifxtpw _RHbQ7CcoEeSLVrU2ifxtpw _RHbQ7ScoEeSLVrU2ifxtpw _RHbQ7icoEeSLVrU2ifxtpw _RHbQ7ycoEeSLVrU2ifxtpw _RHbQ8CcoEeSLVrU2ifxtpw _RHbQ8ScoEeSLVrU2ifxtpw" group="_RHbQ8ScoEeSLVrU2ifxtpw">
    <packageImport xmi:id="_RHbQ0icoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_RHbQ0ycoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_RHbQ1CcoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_RHbQ1ScoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_RHbQ1icoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_RHbQ1ycoEeSLVrU2ifxtpw" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbQ2CcoEeSLVrU2ifxtpw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbQ2ScoEeSLVrU2ifxtpw" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_RHbQ2icoEeSLVrU2ifxtpw" name="list" visibility="package" isOrdered="true" isUnique="false">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbQ2ycoEeSLVrU2ifxtpw"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbQ3CcoEeSLVrU2ifxtpw" value="*"/>
    </ownedParameter>
    <ownedParameter xmi:id="_RHbQ3ScoEeSLVrU2ifxtpw" name="expected" visibility="package" isOrdered="true" isUnique="false">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbQ3icoEeSLVrU2ifxtpw"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbQ3ycoEeSLVrU2ifxtpw" value="*"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ4CcoEeSLVrU2ifxtpw" target="_RHbQ7CcoEeSLVrU2ifxtpw" source="_RHbQ6ycoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ4ScoEeSLVrU2ifxtpw" target="_RHbQ7icoEeSLVrU2ifxtpw" source="_RHbQ7ScoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ4icoEeSLVrU2ifxtpw" target="_RHbQ8CcoEeSLVrU2ifxtpw" source="_RHbQ7ycoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ4ycoEeSLVrU2ifxtpw" target="_RHbRCicoEeSLVrU2ifxtpw" source="_RHbQ7CcoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ5CcoEeSLVrU2ifxtpw" target="_RHbRFCcoEeSLVrU2ifxtpw" source="_RHbQ7icoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ5ScoEeSLVrU2ifxtpw" target="_RHbRGycoEeSLVrU2ifxtpw" source="_RHbQ8CcoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ5icoEeSLVrU2ifxtpw" target="_RHcfQCcoEeSLVrU2ifxtpw" source="_RHbQ8CcoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ5ycoEeSLVrU2ifxtpw" target="_RHcfQycoEeSLVrU2ifxtpw" source="_RHbQ7icoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ6CcoEeSLVrU2ifxtpw" target="_RHcfRicoEeSLVrU2ifxtpw" source="_RHbQ7CcoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ6ScoEeSLVrU2ifxtpw" target="_RHcffScoEeSLVrU2ifxtpw" source="_RHbQ7icoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ6icoEeSLVrU2ifxtpw" target="_RHdGAycoEeSLVrU2ifxtpw" source="_RHbQ8CcoEeSLVrU2ifxtpw"/>
    <structuredNode xmi:id="_RHbQ8ScoEeSLVrU2ifxtpw" name="Body(AssertList)">
      <edge xmi:type="uml:ControlFlow" xmi:id="_RHbQ8icoEeSLVrU2ifxtpw" target="_RHbRIScoEeSLVrU2ifxtpw" source="_RHbQ8ycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHbQ8ycoEeSLVrU2ifxtpw" name="ExpressionStatement@5deae1b7" outgoing="_RHbQ8icoEeSLVrU2ifxtpw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ9CcoEeSLVrU2ifxtpw" target="_RHbQ-ScoEeSLVrU2ifxtpw" source="_RHbRECcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ9ScoEeSLVrU2ifxtpw" target="_RHbQ_CcoEeSLVrU2ifxtpw" source="_RHbRFycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbQ9icoEeSLVrU2ifxtpw" target="_RHbQ_ycoEeSLVrU2ifxtpw" source="_RHbRHicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RHbQ9ycoEeSLVrU2ifxtpw" target="_RHbQ-CcoEeSLVrU2ifxtpw" source="_RHbRAicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHbQ-CcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RHbQ9ycoEeSLVrU2ifxtpw" behavior="_RHdGKCcoEeSLVrU2ifxtpw">
          <argument xmi:id="_RHbQ-ScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RHbQ9CcoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbQ-icoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbQ-ycoEeSLVrU2ifxtpw" value="1"/>
          </argument>
          <argument xmi:id="_RHbQ_CcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RHbQ9ScoEeSLVrU2ifxtpw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbQ_ScoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbQ_icoEeSLVrU2ifxtpw" value="1"/>
          </argument>
          <argument xmi:id="_RHbQ_ycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RHbQ9icoEeSLVrU2ifxtpw">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbRACcoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbRAScoEeSLVrU2ifxtpw" value="1"/>
          </argument>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHbRAicoEeSLVrU2ifxtpw" name="Tuple@4f70ce32" outgoing="_RHbQ9ycoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbRAycoEeSLVrU2ifxtpw" target="_RHbRDScoEeSLVrU2ifxtpw" source="_RHbRBScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHbRBCcoEeSLVrU2ifxtpw" name="Value(&quot;->size()&quot;)">
            <result xmi:id="_RHbRBScoEeSLVrU2ifxtpw" name="Value(&quot;->size()&quot;).result" outgoing="_RHbRAycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbRBicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbRBycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralString" xmi:id="_RHbRCCcoEeSLVrU2ifxtpw" value="->size()">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </value>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHbRCScoEeSLVrU2ifxtpw" name="Call(Concat)">
            <argument xmi:id="_RHbRCicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RHbQ4ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbRCycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbRDCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_RHbRDScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RHbRAycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbRDicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbRDycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RHbRECcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RHbQ9CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbREScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbREicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHbREycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_RHeUVicoEeSLVrU2ifxtpw">
            <argument xmi:id="_RHbRFCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_RHbQ5CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbRFScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbRFicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RHbRFycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_RHbQ9ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbRGCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbRGScoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHbRGicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_RHeUVicoEeSLVrU2ifxtpw">
            <argument xmi:id="_RHbRGycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_RHbQ5ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbRHCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbRHScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_RHbRHicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_RHbQ9icoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHbRHycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHbRICcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
        </node>
      </node>
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHbRIScoEeSLVrU2ifxtpw" name="ForStatement@148d298e" incoming="_RHbQ8icoEeSLVrU2ifxtpw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbRIicoEeSLVrU2ifxtpw" target="_RHdGCScoEeSLVrU2ifxtpw" source="_RHcfbScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbRIycoEeSLVrU2ifxtpw" target="_RHcfTCcoEeSLVrU2ifxtpw" source="_RHdGJCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbRJCcoEeSLVrU2ifxtpw" target="_RHcfTycoEeSLVrU2ifxtpw" source="_RHdGICcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbRJScoEeSLVrU2ifxtpw" target="_RHcfSScoEeSLVrU2ifxtpw" source="_RHdGCScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RHbRJicoEeSLVrU2ifxtpw" target="_RHbRJycoEeSLVrU2ifxtpw" source="_RHcfZCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:LoopNode" xmi:id="_RHbRJycoEeSLVrU2ifxtpw" name="Loop(ForStatement@148d298e)" incoming="_RHbRJicoEeSLVrU2ifxtpw" bodyOutput="_RHb4DCcoEeSLVrU2ifxtpw _RHb4DycoEeSLVrU2ifxtpw _RHb4EicoEeSLVrU2ifxtpw _RHcfDycoEeSLVrU2ifxtpw _RHcfHicoEeSLVrU2ifxtpw _RHcfKycoEeSLVrU2ifxtpw" bodyPart="_RHb4BicoEeSLVrU2ifxtpw _RHb4CCcoEeSLVrU2ifxtpw _RHcfCCcoEeSLVrU2ifxtpw _RHcfEicoEeSLVrU2ifxtpw _RHcfFycoEeSLVrU2ifxtpw _RHcfIScoEeSLVrU2ifxtpw _RHcfJicoEeSLVrU2ifxtpw" decider="_RHb4AycoEeSLVrU2ifxtpw" isTestedFirst="true" test="_RHb3_CcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbRKCcoEeSLVrU2ifxtpw" target="_RHb39icoEeSLVrU2ifxtpw" source="_RHcfLicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHbRKScoEeSLVrU2ifxtpw" target="_RHb39ycoEeSLVrU2ifxtpw" source="_RHcfMScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb34CcoEeSLVrU2ifxtpw" target="_RHb3-CcoEeSLVrU2ifxtpw" source="_RHcfNCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb34ScoEeSLVrU2ifxtpw" target="_RHb3-ScoEeSLVrU2ifxtpw" source="_RHcfNycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb34icoEeSLVrU2ifxtpw" target="_RHb3-icoEeSLVrU2ifxtpw" source="_RHcfOicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb34ycoEeSLVrU2ifxtpw" target="_RHb3-ycoEeSLVrU2ifxtpw" source="_RHcfPScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb35CcoEeSLVrU2ifxtpw" target="_RHb3_ScoEeSLVrU2ifxtpw" source="_RHb3-icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb35ScoEeSLVrU2ifxtpw" target="_RHb4ACcoEeSLVrU2ifxtpw" source="_RHb3-ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb35icoEeSLVrU2ifxtpw" target="_RHb4BycoEeSLVrU2ifxtpw" source="_RHcfNycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RHb35ycoEeSLVrU2ifxtpw" target="_RHb4CCcoEeSLVrU2ifxtpw" source="_RHb4BicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb36CcoEeSLVrU2ifxtpw" target="_RHb4PCcoEeSLVrU2ifxtpw" source="_RHb4BycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb36ScoEeSLVrU2ifxtpw" target="_RHb4ZScoEeSLVrU2ifxtpw" source="_RHb4BycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb36icoEeSLVrU2ifxtpw" target="_RHb4cCcoEeSLVrU2ifxtpw" source="_RHb4BycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb36ycoEeSLVrU2ifxtpw" target="_RHcfCScoEeSLVrU2ifxtpw" source="_RHb3-ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb37CcoEeSLVrU2ifxtpw" target="_RHcfDCcoEeSLVrU2ifxtpw" source="_RHcfEycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb37ScoEeSLVrU2ifxtpw" target="_RHcfGCcoEeSLVrU2ifxtpw" source="_RHb3-icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb37icoEeSLVrU2ifxtpw" target="_RHcfGycoEeSLVrU2ifxtpw" source="_RHcfIicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb37ycoEeSLVrU2ifxtpw" target="_RHcfKCcoEeSLVrU2ifxtpw" source="_RHb3-ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb38CcoEeSLVrU2ifxtpw" target="_RHb4MicoEeSLVrU2ifxtpw" source="_RHb3-CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb38ScoEeSLVrU2ifxtpw" target="_RHb4XCcoEeSLVrU2ifxtpw" source="_RHb39ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb38icoEeSLVrU2ifxtpw" target="_RHb4ZycoEeSLVrU2ifxtpw" source="_RHb39icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb38ycoEeSLVrU2ifxtpw" target="_RHce8icoEeSLVrU2ifxtpw" source="_RHb39icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb39CcoEeSLVrU2ifxtpw" target="_RHce-icoEeSLVrU2ifxtpw" source="_RHb39ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb39ScoEeSLVrU2ifxtpw" target="_RHcfAicoEeSLVrU2ifxtpw" source="_RHb3-CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_RHb39icoEeSLVrU2ifxtpw" name="Fork(ForStatement@148d298e.loopVariable(expected))" incoming="_RHbRKCcoEeSLVrU2ifxtpw" outgoing="_RHb38icoEeSLVrU2ifxtpw _RHb38ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_RHb39ycoEeSLVrU2ifxtpw" name="Fork(ForStatement@148d298e.loopVariable(list))" incoming="_RHbRKScoEeSLVrU2ifxtpw" outgoing="_RHb38ScoEeSLVrU2ifxtpw _RHb39CcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_RHb3-CcoEeSLVrU2ifxtpw" name="Fork(ForStatement@148d298e.loopVariable(label))" incoming="_RHb34CcoEeSLVrU2ifxtpw" outgoing="_RHb38CcoEeSLVrU2ifxtpw _RHb39ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_RHb3-ScoEeSLVrU2ifxtpw" name="Fork(ForStatement@148d298e.loopVariable(i))" incoming="_RHb34ScoEeSLVrU2ifxtpw" outgoing="_RHb36ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_RHb3-icoEeSLVrU2ifxtpw" name="Fork(ForStatement@148d298e.loopVariable(counter))" incoming="_RHb34icoEeSLVrU2ifxtpw" outgoing="_RHb35CcoEeSLVrU2ifxtpw _RHb37ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_RHb3-ycoEeSLVrU2ifxtpw" name="Fork(ForStatement@148d298e.loopVariable(upper))" incoming="_RHb34ycoEeSLVrU2ifxtpw" outgoing="_RHb35ScoEeSLVrU2ifxtpw _RHb37ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHb3_CcoEeSLVrU2ifxtpw" name="Call(&lt;=)">
            <argument xmi:id="_RHb3_ScoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(x)" incoming="_RHb35CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb3_icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb3_ycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_RHb4ACcoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(y)" incoming="_RHb35ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4AScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4AicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RHb4AycoEeSLVrU2ifxtpw" name="Call(&lt;=).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4BCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4BScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHb4BicoEeSLVrU2ifxtpw" name="Values(ForStatement@148d298e)" outgoing="_RHb35ycoEeSLVrU2ifxtpw">
            <node xmi:type="uml:ForkNode" xmi:id="_RHb4BycoEeSLVrU2ifxtpw" name="Fork(i)" incoming="_RHb35icoEeSLVrU2ifxtpw" outgoing="_RHb36CcoEeSLVrU2ifxtpw _RHb36ScoEeSLVrU2ifxtpw _RHb36icoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHb4CCcoEeSLVrU2ifxtpw" name="Body(ForStatement@148d298e)" incoming="_RHb35ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb4CScoEeSLVrU2ifxtpw" target="_RHb4DCcoEeSLVrU2ifxtpw" source="_RHce9ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb4CicoEeSLVrU2ifxtpw" target="_RHb4DycoEeSLVrU2ifxtpw" source="_RHce_ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb4CycoEeSLVrU2ifxtpw" target="_RHb4EicoEeSLVrU2ifxtpw" source="_RHcfBScoEeSLVrU2ifxtpw"/>
            <structuredNodeOutput xmi:id="_RHb4DCcoEeSLVrU2ifxtpw" name="expected" incoming="_RHb4CScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4DScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4DicoEeSLVrU2ifxtpw" value="*"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_RHb4DycoEeSLVrU2ifxtpw" name="list" incoming="_RHb4CicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4ECcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4EScoEeSLVrU2ifxtpw" value="*"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_RHb4EicoEeSLVrU2ifxtpw" name="label" incoming="_RHb4CycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4EycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4FCcoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHb4FScoEeSLVrU2ifxtpw" name="ExpressionStatement@7a0d63a1">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb4FicoEeSLVrU2ifxtpw" target="_RHb4GycoEeSLVrU2ifxtpw" source="_RHb4WCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb4FycoEeSLVrU2ifxtpw" target="_RHb4HicoEeSLVrU2ifxtpw" source="_RHb4YicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb4GCcoEeSLVrU2ifxtpw" target="_RHb4IScoEeSLVrU2ifxtpw" source="_RHb4bScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RHb4GScoEeSLVrU2ifxtpw" target="_RHb4GicoEeSLVrU2ifxtpw" source="_RHb4JCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHb4GicoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_RHb4GScoEeSLVrU2ifxtpw" behavior="_RHdGKCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_RHb4GycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_RHb4FicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4HCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4HScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RHb4HicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_RHb4FycoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4HycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4ICcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_RHb4IScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_RHb4GCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4IicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4IycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHb4JCcoEeSLVrU2ifxtpw" name="Tuple@7f55fbc5" outgoing="_RHb4GScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb4JScoEeSLVrU2ifxtpw" target="_RHb4NScoEeSLVrU2ifxtpw" source="_RHb4LScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb4JicoEeSLVrU2ifxtpw" target="_RHb4QycoEeSLVrU2ifxtpw" source="_RHb4OCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb4JycoEeSLVrU2ifxtpw" target="_RHb4RicoEeSLVrU2ifxtpw" source="_RHb4PycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb4KCcoEeSLVrU2ifxtpw" target="_RHb4UicoEeSLVrU2ifxtpw" source="_RHb4SScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb4KScoEeSLVrU2ifxtpw" target="_RHb4VScoEeSLVrU2ifxtpw" source="_RHb4TScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb4KicoEeSLVrU2ifxtpw" target="_RHb4XycoEeSLVrU2ifxtpw" source="_RHb4ZScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RHb4KycoEeSLVrU2ifxtpw" target="_RHb4aicoEeSLVrU2ifxtpw" source="_RHb4cCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHb4LCcoEeSLVrU2ifxtpw" name="Value(&quot;[&quot;)">
                  <result xmi:id="_RHb4LScoEeSLVrU2ifxtpw" name="Value(&quot;[&quot;).result" outgoing="_RHb4JScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4LicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4LycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RHb4MCcoEeSLVrU2ifxtpw" value="[">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHb4MScoEeSLVrU2ifxtpw" name="Call(Concat)">
                  <argument xmi:id="_RHb4MicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RHb38CcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4MycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4NCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_RHb4NScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RHb4JScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4NicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4NycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_RHb4OCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RHb4JicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4OScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4OicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHb4OycoEeSLVrU2ifxtpw" name="Call(ToString)">
                  <argument xmi:id="_RHb4PCcoEeSLVrU2ifxtpw" name="Call(ToString).argument(x)" incoming="_RHb36CcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4PScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4PicoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_RHb4PycoEeSLVrU2ifxtpw" name="Call(ToString).result(result)" outgoing="_RHb4JycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4QCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4QScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHb4QicoEeSLVrU2ifxtpw" name="Call(Concat)">
                  <argument xmi:id="_RHb4QycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RHb4JicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4RCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4RScoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_RHb4RicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RHb4JycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4RycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4SCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_RHb4SScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RHb4KCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4SicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4SycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHb4TCcoEeSLVrU2ifxtpw" name="Value(&quot;]&quot;)">
                  <result xmi:id="_RHb4TScoEeSLVrU2ifxtpw" name="Value(&quot;]&quot;).result" outgoing="_RHb4KScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4TicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4TycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RHb4UCcoEeSLVrU2ifxtpw" value="]">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHb4UScoEeSLVrU2ifxtpw" name="Call(Concat)">
                  <argument xmi:id="_RHb4UicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RHb4KCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4UycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4VCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_RHb4VScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RHb4KScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4VicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4VycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_RHb4WCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RHb4FicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4WScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4WicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHb4WycoEeSLVrU2ifxtpw" name="Call(At)">
                  <argument xmi:id="_RHb4XCcoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RHb38ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4XScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4XicoEeSLVrU2ifxtpw" value="*"/>
                  </argument>
                  <argument xmi:id="_RHb4XycoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RHb4KicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4YCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4YScoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_RHb4YicoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RHb4FycoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4YycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4ZCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RHb4ZScoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RHb36ScoEeSLVrU2ifxtpw" outgoing="_RHb4KicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHb4ZicoEeSLVrU2ifxtpw" name="Call(At)">
                  <argument xmi:id="_RHb4ZycoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RHb38icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4aCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4aScoEeSLVrU2ifxtpw" value="*"/>
                  </argument>
                  <argument xmi:id="_RHb4aicoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RHb4KycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4aycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4bCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_RHb4bScoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RHb4GCcoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHb4bicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHb4bycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_RHb4cCcoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RHb36icoEeSLVrU2ifxtpw" outgoing="_RHb4KycoEeSLVrU2ifxtpw"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHce8CcoEeSLVrU2ifxtpw" name="Passthru(Fork(expected))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RHce8ScoEeSLVrU2ifxtpw" target="_RHce9ScoEeSLVrU2ifxtpw" source="_RHce8icoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_RHce8icoEeSLVrU2ifxtpw" name="Passthru(Fork(expected)).input" incoming="_RHb38ycoEeSLVrU2ifxtpw" outgoing="_RHce8ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHce8ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHce9CcoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RHce9ScoEeSLVrU2ifxtpw" name="Passthru(Fork(expected)).output" incoming="_RHce8ScoEeSLVrU2ifxtpw" outgoing="_RHb4CScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHce9icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHce9ycoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHce-CcoEeSLVrU2ifxtpw" name="Passthru(Fork(list))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RHce-ScoEeSLVrU2ifxtpw" target="_RHce_ScoEeSLVrU2ifxtpw" source="_RHce-icoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_RHce-icoEeSLVrU2ifxtpw" name="Passthru(Fork(list)).input" incoming="_RHb39CcoEeSLVrU2ifxtpw" outgoing="_RHce-ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHce-ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHce_CcoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RHce_ScoEeSLVrU2ifxtpw" name="Passthru(Fork(list)).output" incoming="_RHce-ScoEeSLVrU2ifxtpw" outgoing="_RHb4CicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHce_icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHce_ycoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHcfACcoEeSLVrU2ifxtpw" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RHcfAScoEeSLVrU2ifxtpw" target="_RHcfBScoEeSLVrU2ifxtpw" source="_RHcfAicoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_RHcfAicoEeSLVrU2ifxtpw" name="Passthru(Fork(label)).input" incoming="_RHb39ScoEeSLVrU2ifxtpw" outgoing="_RHcfAScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfAycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfBCcoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_RHcfBScoEeSLVrU2ifxtpw" name="Passthru(Fork(label)).output" incoming="_RHcfAScoEeSLVrU2ifxtpw" outgoing="_RHb4CycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfBicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfBycoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHcfCCcoEeSLVrU2ifxtpw" name="Call(+)">
            <argument xmi:id="_RHcfCScoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RHb36ycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfCicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfCycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_RHcfDCcoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RHb37CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfDScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfDicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RHcfDycoEeSLVrU2ifxtpw" name="Call(+).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfECcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfEScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHcfEicoEeSLVrU2ifxtpw" name="Value(1)">
            <result xmi:id="_RHcfEycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RHb37CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfFCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfFScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RHcfFicoEeSLVrU2ifxtpw" value="1">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            </value>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHcfFycoEeSLVrU2ifxtpw" name="Call(+)">
            <argument xmi:id="_RHcfGCcoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RHb37ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfGScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfGicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_RHcfGycoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RHb37icoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfHCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfHScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RHcfHicoEeSLVrU2ifxtpw" name="Call(+).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfHycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfICcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHcfIScoEeSLVrU2ifxtpw" name="Value(1)">
            <result xmi:id="_RHcfIicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RHb37icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfIycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfJCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RHcfJScoEeSLVrU2ifxtpw" value="1">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHcfJicoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RHcfJycoEeSLVrU2ifxtpw" target="_RHcfKycoEeSLVrU2ifxtpw" source="_RHcfKCcoEeSLVrU2ifxtpw"/>
            <structuredNodeInput xmi:id="_RHcfKCcoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).input" incoming="_RHb37ycoEeSLVrU2ifxtpw" outgoing="_RHcfJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfKScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfKicoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_RHcfKycoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).output" incoming="_RHcfJycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfLCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfLScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeOutput>
          </node>
          <loopVariable xmi:id="_RHcfLicoEeSLVrU2ifxtpw" name="ForStatement@148d298e.loopVariable(expected)" outgoing="_RHbRKCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfLycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfMCcoEeSLVrU2ifxtpw" value="*"/>
          </loopVariable>
          <loopVariable xmi:id="_RHcfMScoEeSLVrU2ifxtpw" name="ForStatement@148d298e.loopVariable(list)" outgoing="_RHbRKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfMicoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfMycoEeSLVrU2ifxtpw" value="*"/>
          </loopVariable>
          <loopVariable xmi:id="_RHcfNCcoEeSLVrU2ifxtpw" name="ForStatement@148d298e.loopVariable(label)" outgoing="_RHb34CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfNScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfNicoEeSLVrU2ifxtpw" value="1"/>
          </loopVariable>
          <loopVariable xmi:id="_RHcfNycoEeSLVrU2ifxtpw" name="ForStatement@148d298e.loopVariable(i)" outgoing="_RHb34ScoEeSLVrU2ifxtpw _RHb35icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfOCcoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfOScoEeSLVrU2ifxtpw" value="*"/>
          </loopVariable>
          <loopVariable xmi:id="_RHcfOicoEeSLVrU2ifxtpw" name="ForStatement@148d298e.loopVariable(counter)" outgoing="_RHb34icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfOycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfPCcoEeSLVrU2ifxtpw" value="1"/>
          </loopVariable>
          <loopVariable xmi:id="_RHcfPScoEeSLVrU2ifxtpw" name="ForStatement@148d298e.loopVariable(upper)" outgoing="_RHb34ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfPicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfPycoEeSLVrU2ifxtpw" value="1"/>
          </loopVariable>
          <loopVariableInput xmi:id="_RHcfQCcoEeSLVrU2ifxtpw" name="ForStatement@148d298e.loopVariableInput(expected)" incoming="_RHbQ5icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfQScoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfQicoEeSLVrU2ifxtpw" value="*"/>
          </loopVariableInput>
          <loopVariableInput xmi:id="_RHcfQycoEeSLVrU2ifxtpw" name="ForStatement@148d298e.loopVariableInput(list)" incoming="_RHbQ5ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfRCcoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfRScoEeSLVrU2ifxtpw" value="*"/>
          </loopVariableInput>
          <loopVariableInput xmi:id="_RHcfRicoEeSLVrU2ifxtpw" name="ForStatement@148d298e.loopVariableInput(label)" incoming="_RHbQ6CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfRycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfSCcoEeSLVrU2ifxtpw" value="1"/>
          </loopVariableInput>
          <loopVariableInput xmi:id="_RHcfSScoEeSLVrU2ifxtpw" name="ForStatement@148d298e.loopVariableInput(i)" incoming="_RHbRJScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfSicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfSycoEeSLVrU2ifxtpw" value="1"/>
          </loopVariableInput>
          <loopVariableInput xmi:id="_RHcfTCcoEeSLVrU2ifxtpw" name="ForStatement@148d298e.loopVariableInput(counter)" incoming="_RHbRIycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfTScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfTicoEeSLVrU2ifxtpw" value="1"/>
          </loopVariableInput>
          <loopVariableInput xmi:id="_RHcfTycoEeSLVrU2ifxtpw" name="ForStatement@148d298e.loopVariableInput(upper)" incoming="_RHbRJCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfUCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfUScoEeSLVrU2ifxtpw" value="1"/>
          </loopVariableInput>
          <result xmi:id="_RHcfUicoEeSLVrU2ifxtpw" name="ForStatement@148d298e.result(expected)" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfUycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfVCcoEeSLVrU2ifxtpw" value="*"/>
          </result>
          <result xmi:id="_RHcfVScoEeSLVrU2ifxtpw" name="ForStatement@148d298e.result(list)" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfVicoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfVycoEeSLVrU2ifxtpw" value="*"/>
          </result>
          <result xmi:id="_RHcfWCcoEeSLVrU2ifxtpw" name="ForStatement@148d298e.result(label)" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfWScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfWicoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <result xmi:id="_RHcfWycoEeSLVrU2ifxtpw" name="ForStatement@148d298e.result(i)" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfXCcoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfXScoEeSLVrU2ifxtpw" value="*"/>
          </result>
          <result xmi:id="_RHcfXicoEeSLVrU2ifxtpw" name="ForStatement@148d298e.result(counter)" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfXycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfYCcoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <result xmi:id="_RHcfYScoEeSLVrU2ifxtpw" name="ForStatement@148d298e.result(upper)" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfYicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfYycoEeSLVrU2ifxtpw" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHcfZCcoEeSLVrU2ifxtpw" name="LoopVariables(ForStatement@148d298e)" outgoing="_RHbRJicoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHcfZScoEeSLVrU2ifxtpw" target="_RHcfcicoEeSLVrU2ifxtpw" source="_RHcfgCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHcfZicoEeSLVrU2ifxtpw" target="_RHcfdScoEeSLVrU2ifxtpw" source="_RHdGBicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RHcfZycoEeSLVrU2ifxtpw" target="_RHcfcScoEeSLVrU2ifxtpw" source="_RHcfeycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHcfaCcoEeSLVrU2ifxtpw" target="_RHdGCycoEeSLVrU2ifxtpw" source="_RHcfeCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHcfaScoEeSLVrU2ifxtpw" target="_RHdGDicoEeSLVrU2ifxtpw" source="_RHdGCScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHcfaicoEeSLVrU2ifxtpw" target="_RHdGGicoEeSLVrU2ifxtpw" source="_RHdGEScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHcfaycoEeSLVrU2ifxtpw" target="_RHdGHScoEeSLVrU2ifxtpw" source="_RHdGFScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHcfbCcoEeSLVrU2ifxtpw" name="Value(1)">
            <result xmi:id="_RHcfbScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RHbRIicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfbicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfbycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RHcfcCcoEeSLVrU2ifxtpw" value="1">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            </value>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHcfcScoEeSLVrU2ifxtpw" name="Call(Min)" incoming="_RHcfZycoEeSLVrU2ifxtpw">
            <argument xmi:id="_RHcfcicoEeSLVrU2ifxtpw" name="Call(Min).argument(x)" incoming="_RHcfZScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfcycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfdCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_RHcfdScoEeSLVrU2ifxtpw" name="Call(Min).argument(y)" incoming="_RHcfZicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfdicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfdycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RHcfeCcoEeSLVrU2ifxtpw" name="Call(Min).result(result)" outgoing="_RHcfaCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfeScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcfeicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHcfeycoEeSLVrU2ifxtpw" name="Tuple@72501d2c" outgoing="_RHcfZycoEeSLVrU2ifxtpw">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHcffCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_RHeUVicoEeSLVrU2ifxtpw">
              <argument xmi:id="_RHcffScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_RHbQ6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHcfficoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHcffycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_RHcfgCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_RHcfZScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGACcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGAScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdGAicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_RHeUVicoEeSLVrU2ifxtpw">
              <argument xmi:id="_RHdGAycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_RHbQ6icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGBCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGBScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_RHdGBicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_RHcfZicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGBycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGCCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RHdGCScoEeSLVrU2ifxtpw" name="Fork(Value(1).result)" incoming="_RHbRIicoEeSLVrU2ifxtpw" outgoing="_RHbRJScoEeSLVrU2ifxtpw _RHcfaScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdGCicoEeSLVrU2ifxtpw" name="Call(-)">
            <argument xmi:id="_RHdGCycoEeSLVrU2ifxtpw" name="Call(-).argument(x)" incoming="_RHcfaCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGDCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGDScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_RHdGDicoEeSLVrU2ifxtpw" name="Call(-).argument(y)" incoming="_RHcfaScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGDycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGECcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RHdGEScoEeSLVrU2ifxtpw" name="Call(-).result(result)" outgoing="_RHcfaicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGEicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGEycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHdGFCcoEeSLVrU2ifxtpw" name="Value(1)">
            <result xmi:id="_RHdGFScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RHcfaycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGFicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGFycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RHdGGCcoEeSLVrU2ifxtpw" value="1">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            </value>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdGGScoEeSLVrU2ifxtpw" name="Call(+)">
            <argument xmi:id="_RHdGGicoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_RHcfaicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGGycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGHCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_RHdGHScoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_RHcfaycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGHicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGHycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RHdGICcoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_RHbRJCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGIScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGIicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHdGIycoEeSLVrU2ifxtpw" name="Value(1)">
            <result xmi:id="_RHdGJCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RHbRIycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGJScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGJicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_RHdGJycoEeSLVrU2ifxtpw" value="1">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            </value>
          </node>
        </node>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RHbQ6ycoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_RHbQ4CcoEeSLVrU2ifxtpw" parameter="_RHbQ1ycoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RHbQ7CcoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_RHbQ4CcoEeSLVrU2ifxtpw" outgoing="_RHbQ4ycoEeSLVrU2ifxtpw _RHbQ6CcoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RHbQ7ScoEeSLVrU2ifxtpw" name="Input(list)" outgoing="_RHbQ4ScoEeSLVrU2ifxtpw" parameter="_RHbQ2icoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RHbQ7icoEeSLVrU2ifxtpw" name="Fork(list)" incoming="_RHbQ4ScoEeSLVrU2ifxtpw" outgoing="_RHbQ5CcoEeSLVrU2ifxtpw _RHbQ6ScoEeSLVrU2ifxtpw _RHbQ5ycoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RHbQ7ycoEeSLVrU2ifxtpw" name="Input(expected)" outgoing="_RHbQ4icoEeSLVrU2ifxtpw" parameter="_RHbQ3ScoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RHbQ8CcoEeSLVrU2ifxtpw" name="Fork(expected)" incoming="_RHbQ4icoEeSLVrU2ifxtpw" outgoing="_RHbQ5ScoEeSLVrU2ifxtpw _RHbQ6icoEeSLVrU2ifxtpw _RHbQ5icoEeSLVrU2ifxtpw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Activity" xmi:id="_RHdGKCcoEeSLVrU2ifxtpw" name="AssertEqual" node="_RHdGQScoEeSLVrU2ifxtpw _RHdGQicoEeSLVrU2ifxtpw _RHdGQycoEeSLVrU2ifxtpw _RHdGRCcoEeSLVrU2ifxtpw _RHdGRScoEeSLVrU2ifxtpw _RHdGRicoEeSLVrU2ifxtpw _RHdGRycoEeSLVrU2ifxtpw" group="_RHdGRycoEeSLVrU2ifxtpw">
    <packageImport xmi:id="_RHdGKScoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_RHdGKicoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_RHdGKycoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_RHdGLCcoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_RHdGLScoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_RHdGLicoEeSLVrU2ifxtpw" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGLycoEeSLVrU2ifxtpw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGMCcoEeSLVrU2ifxtpw" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_RHdGMScoEeSLVrU2ifxtpw" name="value1" visibility="package">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGMicoEeSLVrU2ifxtpw"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGMycoEeSLVrU2ifxtpw" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_RHdGNCcoEeSLVrU2ifxtpw" name="value2" visibility="package">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGNScoEeSLVrU2ifxtpw"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGNicoEeSLVrU2ifxtpw" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGNycoEeSLVrU2ifxtpw" target="_RHdGQicoEeSLVrU2ifxtpw" source="_RHdGQScoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGOCcoEeSLVrU2ifxtpw" target="_RHdGRCcoEeSLVrU2ifxtpw" source="_RHdGQycoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGOScoEeSLVrU2ifxtpw" target="_RHdGRicoEeSLVrU2ifxtpw" source="_RHdGRScoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGOicoEeSLVrU2ifxtpw" target="_RHdGbCcoEeSLVrU2ifxtpw" source="_RHdGRCcoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGOycoEeSLVrU2ifxtpw" target="_RHdGdCcoEeSLVrU2ifxtpw" source="_RHdGRicoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGPCcoEeSLVrU2ifxtpw" target="_RHdtKicoEeSLVrU2ifxtpw" source="_RHdGQicoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGPScoEeSLVrU2ifxtpw" target="_RHdtUCcoEeSLVrU2ifxtpw" source="_RHdGRicoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGPicoEeSLVrU2ifxtpw" target="_RHdtbicoEeSLVrU2ifxtpw" source="_RHdGRicoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGPycoEeSLVrU2ifxtpw" target="_RHdtlCcoEeSLVrU2ifxtpw" source="_RHdGRicoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGQCcoEeSLVrU2ifxtpw" target="_RHeUOCcoEeSLVrU2ifxtpw" source="_RHdGRicoEeSLVrU2ifxtpw"/>
    <structuredNode xmi:id="_RHdGRycoEeSLVrU2ifxtpw" name="Body(AssertEqual)">
      <node xmi:type="uml:ConditionalNode" xmi:id="_RHdGSCcoEeSLVrU2ifxtpw" name="IfStatement@3cdbd3ed">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGSScoEeSLVrU2ifxtpw" target="_RHdGYycoEeSLVrU2ifxtpw" source="_RHdGbCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGSicoEeSLVrU2ifxtpw" target="_RHdGbicoEeSLVrU2ifxtpw" source="_RHdGbCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGSycoEeSLVrU2ifxtpw" target="_RHdGaScoEeSLVrU2ifxtpw" source="_RHdGdCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGTCcoEeSLVrU2ifxtpw" target="_RHdGdicoEeSLVrU2ifxtpw" source="_RHdGdCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGTScoEeSLVrU2ifxtpw" target="_RHdGfScoEeSLVrU2ifxtpw" source="_RHdGcScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGTicoEeSLVrU2ifxtpw" target="_RHdGficoEeSLVrU2ifxtpw" source="_RHdGeScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGTycoEeSLVrU2ifxtpw" target="_RHdGgCcoEeSLVrU2ifxtpw" source="_RHdGfScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGUCcoEeSLVrU2ifxtpw" target="_RHdGhycoEeSLVrU2ifxtpw" source="_RHdGficoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGUScoEeSLVrU2ifxtpw" target="_RHdGjScoEeSLVrU2ifxtpw" source="_RHdGficoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RHdGUicoEeSLVrU2ifxtpw" target="_RHdGYicoEeSLVrU2ifxtpw" source="_RHdGjScoEeSLVrU2ifxtpw">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_RHdGUycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RHdGVCcoEeSLVrU2ifxtpw" target="_RHdGfycoEeSLVrU2ifxtpw" source="_RHdGjScoEeSLVrU2ifxtpw">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_RHdGVScoEeSLVrU2ifxtpw" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RHdGVicoEeSLVrU2ifxtpw" target="_RHdGjicoEeSLVrU2ifxtpw" source="_RHdGfCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGVycoEeSLVrU2ifxtpw" target="_RHdGjicoEeSLVrU2ifxtpw" source="_RHdGfScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RHdGWCcoEeSLVrU2ifxtpw" target="_RHdGjScoEeSLVrU2ifxtpw" source="_RHdGjicoEeSLVrU2ifxtpw">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_RHdGWScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RHdGWicoEeSLVrU2ifxtpw" target="_RHdGhicoEeSLVrU2ifxtpw" source="_RHdGjicoEeSLVrU2ifxtpw">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_RHdGWycoEeSLVrU2ifxtpw" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGXCcoEeSLVrU2ifxtpw" target="_RHdGjycoEeSLVrU2ifxtpw" source="_RHdGZicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGXScoEeSLVrU2ifxtpw" target="_RHdGjycoEeSLVrU2ifxtpw" source="_RHdGgycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGXicoEeSLVrU2ifxtpw" target="_RHdGjycoEeSLVrU2ifxtpw" source="_RHdGiicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdGXycoEeSLVrU2ifxtpw" target="_RHdtECcoEeSLVrU2ifxtpw" source="_RHdGjycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RHdGYCcoEeSLVrU2ifxtpw" target="_RHdtPycoEeSLVrU2ifxtpw" source="_RHdtFicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RHdGYScoEeSLVrU2ifxtpw" target="_RHeUPycoEeSLVrU2ifxtpw" source="_RHdtPycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:TestIdentityAction" xmi:id="_RHdGYicoEeSLVrU2ifxtpw" name="Test(==)" incoming="_RHdGUicoEeSLVrU2ifxtpw">
          <first xmi:id="_RHdGYycoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_RHdGSScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGZCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGZScoEeSLVrU2ifxtpw" value="1"/>
          </first>
          <result xmi:id="_RHdGZicoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_RHdGXCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGZycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGaCcoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <second xmi:id="_RHdGaScoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_RHdGSycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGaicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGaycoEeSLVrU2ifxtpw" value="1"/>
          </second>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_RHdGbCcoEeSLVrU2ifxtpw" name="Fork(Fork(value1))" incoming="_RHdGOicoEeSLVrU2ifxtpw" outgoing="_RHdGSScoEeSLVrU2ifxtpw _RHdGSicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdGbScoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
          <argument xmi:id="_RHdGbicoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RHdGSicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGbycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGcCcoEeSLVrU2ifxtpw" value="*"/>
          </argument>
          <result xmi:id="_RHdGcScoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RHdGTScoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGcicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGcycoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_RHdGdCcoEeSLVrU2ifxtpw" name="Fork(Fork(value2))" incoming="_RHdGOycoEeSLVrU2ifxtpw" outgoing="_RHdGSycoEeSLVrU2ifxtpw _RHdGTCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdGdScoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
          <argument xmi:id="_RHdGdicoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_RHdGTCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGdycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGeCcoEeSLVrU2ifxtpw" value="*"/>
          </argument>
          <result xmi:id="_RHdGeScoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_RHdGTicoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGeicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGeycoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_RHdGfCcoEeSLVrU2ifxtpw" name="Initial(Test(==))" outgoing="_RHdGVicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_RHdGfScoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RHdGTScoEeSLVrU2ifxtpw" outgoing="_RHdGTycoEeSLVrU2ifxtpw _RHdGVycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ForkNode" xmi:id="_RHdGficoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_RHdGTicoEeSLVrU2ifxtpw" outgoing="_RHdGUCcoEeSLVrU2ifxtpw _RHdGUScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdGfycoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_RHdGVCcoEeSLVrU2ifxtpw">
          <argument xmi:id="_RHdGgCcoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RHdGTycoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGgScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGgicoEeSLVrU2ifxtpw" value="1"/>
          </argument>
          <result xmi:id="_RHdGgycoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_RHdGXScoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGhCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGhScoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdGhicoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_RHdGWicoEeSLVrU2ifxtpw">
          <argument xmi:id="_RHdGhycoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RHdGUCcoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGiCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGiScoEeSLVrU2ifxtpw" value="1"/>
          </argument>
          <result xmi:id="_RHdGiicoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_RHdGXicoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdGiycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdGjCcoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_RHdGjScoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RHdGUScoEeSLVrU2ifxtpw _RHdGWCcoEeSLVrU2ifxtpw" outgoing="_RHdGUicoEeSLVrU2ifxtpw _RHdGVCcoEeSLVrU2ifxtpw" decisionInputFlow="_RHdGUScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_RHdGjicoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_RHdGVicoEeSLVrU2ifxtpw _RHdGVycoEeSLVrU2ifxtpw" outgoing="_RHdGWCcoEeSLVrU2ifxtpw _RHdGWicoEeSLVrU2ifxtpw" decisionInputFlow="_RHdGVycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:MergeNode" xmi:id="_RHdGjycoEeSLVrU2ifxtpw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_RHdGXCcoEeSLVrU2ifxtpw _RHdGXScoEeSLVrU2ifxtpw _RHdGXicoEeSLVrU2ifxtpw" outgoing="_RHdGXycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdGkCcoEeSLVrU2ifxtpw" name="Call(Not)">
          <argument xmi:id="_RHdtECcoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_RHdGXycoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtEScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtEicoEeSLVrU2ifxtpw" value="1"/>
          </argument>
          <result xmi:id="_RHdtEycoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtFCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtFScoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHdtFicoEeSLVrU2ifxtpw" name="ExpressionStatement@3071d21" outgoing="_RHdGYCcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtFycoEeSLVrU2ifxtpw" target="_RHdtGicoEeSLVrU2ifxtpw" source="_RHdtPCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RHdtGCcoEeSLVrU2ifxtpw" target="_RHdtGScoEeSLVrU2ifxtpw" source="_RHdtHScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdtGScoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_RHdtGCcoEeSLVrU2ifxtpw" behavior="_RHeUdicoEeSLVrU2ifxtpw">
            <argument xmi:id="_RHdtGicoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_RHdtFycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtGycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtHCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHdtHScoEeSLVrU2ifxtpw" name="Tuple@45ee898a" outgoing="_RHdtGCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtHicoEeSLVrU2ifxtpw" target="_RHdtJycoEeSLVrU2ifxtpw" source="_RHdtIicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtHycoEeSLVrU2ifxtpw" target="_RHdtNicoEeSLVrU2ifxtpw" source="_RHdtLScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtICcoEeSLVrU2ifxtpw" target="_RHdtOScoEeSLVrU2ifxtpw" source="_RHdtMScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHdtIScoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
              <result xmi:id="_RHdtIicoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_RHdtHicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtIycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtJCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_RHdtJScoEeSLVrU2ifxtpw" value="FAILED: ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdtJicoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_RHdtJycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RHdtHicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtKCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtKScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RHdtKicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RHdGPCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtKycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtLCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RHdtLScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RHdtHycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtLicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtLycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHdtMCcoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;)">
              <result xmi:id="_RHdtMScoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;).result" outgoing="_RHdtICcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtMicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtMycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_RHdtNCcoEeSLVrU2ifxtpw" value="==">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdtNScoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_RHdtNicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RHdtHycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtNycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtOCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_RHdtOScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RHdtICcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtOicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtOycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_RHdtPCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RHdtFycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtPScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtPicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHdtPycoEeSLVrU2ifxtpw" name="ExpressionStatement@779ae1c8" incoming="_RHdGYCcoEeSLVrU2ifxtpw" outgoing="_RHdGYScoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtQCcoEeSLVrU2ifxtpw" target="_RHdtQycoEeSLVrU2ifxtpw" source="_RHeUPicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RHdtQScoEeSLVrU2ifxtpw" target="_RHdtQicoEeSLVrU2ifxtpw" source="_RHdtRicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdtQicoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_RHdtQScoEeSLVrU2ifxtpw" behavior="_RHeUdicoEeSLVrU2ifxtpw">
            <argument xmi:id="_RHdtQycoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_RHdtQCcoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtRCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtRScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHdtRicoEeSLVrU2ifxtpw" name="Tuple@19349cc1" outgoing="_RHdtQScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ControlFlow" xmi:id="_RHdtRycoEeSLVrU2ifxtpw" target="_RHeUPScoEeSLVrU2ifxtpw" source="_RHeUPCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtSCcoEeSLVrU2ifxtpw" target="_RHeUPScoEeSLVrU2ifxtpw" source="_RHdtUycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RHdtSScoEeSLVrU2ifxtpw" target="_RHdtVicoEeSLVrU2ifxtpw" source="_RHeUPScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RHdtSicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_RHdtSycoEeSLVrU2ifxtpw" target="_RHdtYCcoEeSLVrU2ifxtpw" source="_RHeUPScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_RHdtTCcoEeSLVrU2ifxtpw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtTScoEeSLVrU2ifxtpw" target="_RHeUPicoEeSLVrU2ifxtpw" source="_RHdtWCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtTicoEeSLVrU2ifxtpw" target="_RHeUPicoEeSLVrU2ifxtpw" source="_RHdtaicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdtTycoEeSLVrU2ifxtpw" name="Call(IsEmpty)">
              <argument xmi:id="_RHdtUCcoEeSLVrU2ifxtpw" name="Call(IsEmpty).argument(seq)" incoming="_RHdGPScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtUScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtUicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_RHdtUycoEeSLVrU2ifxtpw" name="Call(IsEmpty).result()" outgoing="_RHdtSCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtVCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtVScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHdtVicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@78d89cc7.operand2" incoming="_RHdtSScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtVycoEeSLVrU2ifxtpw" target="_RHdtWCcoEeSLVrU2ifxtpw" source="_RHdtXCcoEeSLVrU2ifxtpw"/>
              <structuredNodeOutput xmi:id="_RHdtWCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@78d89cc7.operand2.result" incoming="_RHdtVycoEeSLVrU2ifxtpw" outgoing="_RHdtTScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtWScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtWicoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHdtWycoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;)">
                <result xmi:id="_RHdtXCcoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;).result" outgoing="_RHdtVycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtXScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtXicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_RHdtXycoEeSLVrU2ifxtpw" value="null">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHdtYCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@78d89cc7.operand3" incoming="_RHdtSycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_RHdtYScoEeSLVrU2ifxtpw" target="_RHeUOicoEeSLVrU2ifxtpw" source="_RHeUOScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtYicoEeSLVrU2ifxtpw" target="_RHeUOicoEeSLVrU2ifxtpw" source="_RHdtcScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RHdtYycoEeSLVrU2ifxtpw" target="_RHdtdCcoEeSLVrU2ifxtpw" source="_RHeUOicoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RHdtZCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_RHdtZScoEeSLVrU2ifxtpw" target="_RHeUMycoEeSLVrU2ifxtpw" source="_RHeUOicoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_RHdtZicoEeSLVrU2ifxtpw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtZycoEeSLVrU2ifxtpw" target="_RHeUOycoEeSLVrU2ifxtpw" source="_RHdteicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtaCcoEeSLVrU2ifxtpw" target="_RHeUOycoEeSLVrU2ifxtpw" source="_RHeUNScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtaScoEeSLVrU2ifxtpw" target="_RHdtaicoEeSLVrU2ifxtpw" source="_RHeUOycoEeSLVrU2ifxtpw"/>
              <structuredNodeOutput xmi:id="_RHdtaicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@78d89cc7.operand3.result" incoming="_RHdtaScoEeSLVrU2ifxtpw" outgoing="_RHdtTicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtaycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtbCcoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RHdtbScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_RHdtbicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_RHdGPicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtbycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtcCcoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_RHdtcScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_RHdtYicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtcicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtcycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHdtdCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@6e22c013.operand2" incoming="_RHdtYycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtdScoEeSLVrU2ifxtpw" target="_RHdtlycoEeSLVrU2ifxtpw" source="_RHdtficoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtdicoEeSLVrU2ifxtpw" target="_RHdtmicoEeSLVrU2ifxtpw" source="_RHdtlScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtdycoEeSLVrU2ifxtpw" target="_RHeUKicoEeSLVrU2ifxtpw" source="_RHeUIScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdteCcoEeSLVrU2ifxtpw" target="_RHeULScoEeSLVrU2ifxtpw" source="_RHeUJScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdteScoEeSLVrU2ifxtpw" target="_RHdteicoEeSLVrU2ifxtpw" source="_RHeUMCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_RHdteicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@6e22c013.operand2.result" incoming="_RHdteScoEeSLVrU2ifxtpw" outgoing="_RHdtZycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdteycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtfCcoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHdtfScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_RHdtficoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_RHdtdScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtfycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtgCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RHdtgScoEeSLVrU2ifxtpw" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_RHdtgicoEeSLVrU2ifxtpw" name="CastExpression@558c1214" mode="parallel" outputElement="_RHdtlScoEeSLVrU2ifxtpw" inputElement="_RHdtlCcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtgycoEeSLVrU2ifxtpw" target="_RHdtjCcoEeSLVrU2ifxtpw" source="_RHdtkicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdthCcoEeSLVrU2ifxtpw" target="_RHdtkycoEeSLVrU2ifxtpw" source="_RHdtkicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdthScoEeSLVrU2ifxtpw" target="_RHdtkycoEeSLVrU2ifxtpw" source="_RHdtjycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdthicoEeSLVrU2ifxtpw" target="_RHdtiicoEeSLVrU2ifxtpw" source="_RHdtkycoEeSLVrU2ifxtpw">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_RHdthycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtiCcoEeSLVrU2ifxtpw" target="_RHdtkicoEeSLVrU2ifxtpw" source="_RHdtlCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_RHdtiScoEeSLVrU2ifxtpw" target="_RHdtlScoEeSLVrU2ifxtpw" source="_RHdtiicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_RHdtiicoEeSLVrU2ifxtpw" name="Merge(CastExpression@558c1214.operand)" incoming="_RHdthicoEeSLVrU2ifxtpw" outgoing="_RHdtiScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_RHdtiycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                    <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <object xmi:id="_RHdtjCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_RHdtgycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtjScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtjicoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_RHdtjycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_RHdthScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtkCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtkScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_RHdtkicoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_RHdtiCcoEeSLVrU2ifxtpw" outgoing="_RHdtgycoEeSLVrU2ifxtpw _RHdthCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_RHdtkycoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_RHdthCcoEeSLVrU2ifxtpw _RHdthScoEeSLVrU2ifxtpw" outgoing="_RHdthicoEeSLVrU2ifxtpw" decisionInputFlow="_RHdthScoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_RHdtlCcoEeSLVrU2ifxtpw" name="CastExpression@558c1214.inputElement" incoming="_RHdGPycoEeSLVrU2ifxtpw" outgoing="_RHdtiCcoEeSLVrU2ifxtpw" regionAsInput="_RHdtgicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_RHdtlScoEeSLVrU2ifxtpw" name="CastExpression@558c1214.outputElement" incoming="_RHdtiScoEeSLVrU2ifxtpw" outgoing="_RHdtdicoEeSLVrU2ifxtpw" regionAsOutput="_RHdtgicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHdtlicoEeSLVrU2ifxtpw" name="Call(Concat)">
                  <argument xmi:id="_RHdtlycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RHdtdScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtmCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHdtmScoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_RHdtmicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RHdtdicoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHdtmycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUICcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_RHeUIScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RHdtdycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUIicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUIycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHeUJCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_RHeUJScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_RHdteCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUJicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUJycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_RHeUKCcoEeSLVrU2ifxtpw" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHeUKScoEeSLVrU2ifxtpw" name="Call(Concat)">
                  <argument xmi:id="_RHeUKicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_RHdtdycoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUKycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeULCcoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_RHeULScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_RHdteCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeULicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeULycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <result xmi:id="_RHeUMCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_RHdteScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUMScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUMicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHeUMycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@6e22c013.operand3" incoming="_RHdtZScoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUNCcoEeSLVrU2ifxtpw" target="_RHeUNScoEeSLVrU2ifxtpw" source="_RHeUOCcoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_RHeUNScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@6e22c013.operand3.result" incoming="_RHeUNCcoEeSLVrU2ifxtpw" outgoing="_RHdtaCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUNicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUNycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_RHeUOCcoEeSLVrU2ifxtpw" name="Merge(Fork(value2))" incoming="_RHdGQCcoEeSLVrU2ifxtpw" outgoing="_RHeUNCcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_RHeUOScoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@6e22c013)" outgoing="_RHdtYScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_RHeUOicoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@6e22c013)" incoming="_RHdtYScoEeSLVrU2ifxtpw _RHdtYicoEeSLVrU2ifxtpw" outgoing="_RHdtYycoEeSLVrU2ifxtpw _RHdtZScoEeSLVrU2ifxtpw" decisionInputFlow="_RHdtYicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_RHeUOycoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@6e22c013.result)" incoming="_RHdtZycoEeSLVrU2ifxtpw _RHdtaCcoEeSLVrU2ifxtpw" outgoing="_RHdtaScoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_RHeUPCcoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@78d89cc7)" outgoing="_RHdtRycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_RHeUPScoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@78d89cc7)" incoming="_RHdtRycoEeSLVrU2ifxtpw _RHdtSCcoEeSLVrU2ifxtpw" outgoing="_RHdtSScoEeSLVrU2ifxtpw _RHdtSycoEeSLVrU2ifxtpw" decisionInputFlow="_RHdtSCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_RHeUPicoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@78d89cc7.result)" incoming="_RHdtTScoEeSLVrU2ifxtpw _RHdtTicoEeSLVrU2ifxtpw" outgoing="_RHdtQCcoEeSLVrU2ifxtpw"/>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHeUPycoEeSLVrU2ifxtpw" name="ExpressionStatement@68d691f8" incoming="_RHdGYScoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUQCcoEeSLVrU2ifxtpw" target="_RHeUQycoEeSLVrU2ifxtpw" source="_RHeUSycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RHeUQScoEeSLVrU2ifxtpw" target="_RHeUQicoEeSLVrU2ifxtpw" source="_RHeUSScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHeUQicoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_RHeUQScoEeSLVrU2ifxtpw">
            <argument xmi:id="_RHeUQycoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_RHeUQCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeURCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeURScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RHeURicoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeURycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUSCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHeUSScoEeSLVrU2ifxtpw" name="Tuple@79d12f98" outgoing="_RHeUQScoEeSLVrU2ifxtpw">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHeUSicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;)">
              <result xmi:id="_RHeUSycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;).result" outgoing="_RHeUQCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUTCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUTScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_RHeUTicoEeSLVrU2ifxtpw" value="">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
          </node>
        </node>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHeUTycoEeSLVrU2ifxtpw" name="Value(true)">
          <result xmi:id="_RHeUUCcoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUUScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUUicoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_RHeUUycoEeSLVrU2ifxtpw" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <clause xmi:id="_RHeUVCcoEeSLVrU2ifxtpw" body="_RHdtFicoEeSLVrU2ifxtpw _RHdtPycoEeSLVrU2ifxtpw _RHeUPycoEeSLVrU2ifxtpw" decider="_RHdtEycoEeSLVrU2ifxtpw" successorClause="_RHeUVScoEeSLVrU2ifxtpw" test="_RHdGYicoEeSLVrU2ifxtpw _RHdGbScoEeSLVrU2ifxtpw _RHdGdScoEeSLVrU2ifxtpw _RHdGfycoEeSLVrU2ifxtpw _RHdGhicoEeSLVrU2ifxtpw _RHdGkCcoEeSLVrU2ifxtpw"/>
        <clause xmi:id="_RHeUVScoEeSLVrU2ifxtpw" decider="_RHeUUCcoEeSLVrU2ifxtpw" predecessorClause="_RHeUVCcoEeSLVrU2ifxtpw" test="_RHeUTycoEeSLVrU2ifxtpw"/>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RHdGQScoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_RHdGNycoEeSLVrU2ifxtpw" parameter="_RHdGLicoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RHdGQicoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_RHdGNycoEeSLVrU2ifxtpw" outgoing="_RHdGPCcoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RHdGQycoEeSLVrU2ifxtpw" name="Input(value1)" outgoing="_RHdGOCcoEeSLVrU2ifxtpw" parameter="_RHdGMScoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RHdGRCcoEeSLVrU2ifxtpw" name="Fork(value1)" incoming="_RHdGOCcoEeSLVrU2ifxtpw" outgoing="_RHdGOicoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RHdGRScoEeSLVrU2ifxtpw" name="Input(value2)" outgoing="_RHdGOScoEeSLVrU2ifxtpw" parameter="_RHdGNCcoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RHdGRicoEeSLVrU2ifxtpw" name="Fork(value2)" incoming="_RHdGOScoEeSLVrU2ifxtpw" outgoing="_RHdGOycoEeSLVrU2ifxtpw _RHdGPScoEeSLVrU2ifxtpw _RHdGPicoEeSLVrU2ifxtpw _RHdGPycoEeSLVrU2ifxtpw _RHdGQCcoEeSLVrU2ifxtpw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Activity" xmi:id="_RHeUVicoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$size__any__" node="_RHeUYScoEeSLVrU2ifxtpw _RHeUYicoEeSLVrU2ifxtpw _RHeUYycoEeSLVrU2ifxtpw _RHeUZCcoEeSLVrU2ifxtpw _RHeUZScoEeSLVrU2ifxtpw" group="_RHeUZScoEeSLVrU2ifxtpw">
    <ownedParameter xmi:id="_RHeUVycoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUWCcoEeSLVrU2ifxtpw"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUWScoEeSLVrU2ifxtpw" value="*"/>
    </ownedParameter>
    <ownedParameter xmi:id="_RHeUWicoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUWycoEeSLVrU2ifxtpw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUXCcoEeSLVrU2ifxtpw" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUXScoEeSLVrU2ifxtpw" target="_RHeUYicoEeSLVrU2ifxtpw" source="_RHeUYScoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ControlFlow" xmi:id="_RHeUXicoEeSLVrU2ifxtpw" target="_RHeUZCcoEeSLVrU2ifxtpw" source="_RHeUZicoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUXycoEeSLVrU2ifxtpw" target="_RHeUbCcoEeSLVrU2ifxtpw" source="_RHeUYicoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUYCcoEeSLVrU2ifxtpw" target="_RHeUYycoEeSLVrU2ifxtpw" source="_RHeUaCcoEeSLVrU2ifxtpw"/>
    <structuredNode xmi:id="_RHeUZScoEeSLVrU2ifxtpw" name="Body(size)">
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHeUZicoEeSLVrU2ifxtpw" name="ReturnStatement@22536490" outgoing="_RHeUXicoEeSLVrU2ifxtpw">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUZycoEeSLVrU2ifxtpw" target="_RHeUaCcoEeSLVrU2ifxtpw" source="_RHeUbycoEeSLVrU2ifxtpw"/>
        <structuredNodeOutput xmi:id="_RHeUaCcoEeSLVrU2ifxtpw" name="ReturnStatement@22536490.output" incoming="_RHeUZycoEeSLVrU2ifxtpw" outgoing="_RHeUYCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUaScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUaicoEeSLVrU2ifxtpw" value="1"/>
        </structuredNodeOutput>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHeUaycoEeSLVrU2ifxtpw" name="Call(Size)">
          <argument xmi:id="_RHeUbCcoEeSLVrU2ifxtpw" name="Call(Size).argument(seq)" incoming="_RHeUXycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUbScoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUbicoEeSLVrU2ifxtpw" value="*"/>
          </argument>
          <result xmi:id="_RHeUbycoEeSLVrU2ifxtpw" name="Call(Size).result()" outgoing="_RHeUZycoEeSLVrU2ifxtpw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUcCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUcScoEeSLVrU2ifxtpw" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
        </node>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RHeUYScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_RHeUXScoEeSLVrU2ifxtpw" parameter="_RHeUVycoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RHeUYicoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_RHeUXScoEeSLVrU2ifxtpw" outgoing="_RHeUXycoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RHeUYycoEeSLVrU2ifxtpw" name="Return" incoming="_RHeUYCcoEeSLVrU2ifxtpw" parameter="_RHeUWicoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ActivityFinalNode" xmi:id="_RHeUZCcoEeSLVrU2ifxtpw" name="Final" incoming="_RHeUXicoEeSLVrU2ifxtpw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Activity" xmi:id="_RHeUcicoEeSLVrU2ifxtpw">
    <templateBinding xmi:id="_RHeUcycoEeSLVrU2ifxtpw">
      <parameterSubstitution xmi:id="_RHeUdCcoEeSLVrU2ifxtpw">
        <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmqbdYVoEeKRrIQMgiVHcQ"/>
      </parameterSubstitution>
      <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmqbdIVoEeKRrIQMgiVHcQ"/>
    </templateBinding>
  </packagedElement>
  <packagedElement xmi:type="uml:Realization" xmi:id="_RHeUdScoEeSLVrU2ifxtpw" client="_RHeUVicoEeSLVrU2ifxtpw" supplier="_RHeUcicoEeSLVrU2ifxtpw"/>
  <packagedElement xmi:type="uml:Activity" xmi:id="_RHeUdicoEeSLVrU2ifxtpw" name="Write" node="_RHeUgScoEeSLVrU2ifxtpw _RHeUgicoEeSLVrU2ifxtpw _RHeUgycoEeSLVrU2ifxtpw" group="_RHeUgycoEeSLVrU2ifxtpw">
    <packageImport xmi:id="_RHeUdycoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_RHeUeCcoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_RHeUeScoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_RHeUeicoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_RHeUeycoEeSLVrU2ifxtpw" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_RHeUfCcoEeSLVrU2ifxtpw" name="value" visibility="package">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUfScoEeSLVrU2ifxtpw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUficoEeSLVrU2ifxtpw" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUfycoEeSLVrU2ifxtpw" target="_RHeUgicoEeSLVrU2ifxtpw" source="_RHeUgScoEeSLVrU2ifxtpw"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUgCcoEeSLVrU2ifxtpw" target="_RHeUiicoEeSLVrU2ifxtpw" source="_RHeUgicoEeSLVrU2ifxtpw"/>
    <structuredNode xmi:id="_RHeUgycoEeSLVrU2ifxtpw" name="Body(Write)">
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHeUhCcoEeSLVrU2ifxtpw" name="ExpressionStatement@31af8bde">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUhScoEeSLVrU2ifxtpw" target="_RHeUlycoEeSLVrU2ifxtpw" source="_RHe7MycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_RHeUhicoEeSLVrU2ifxtpw" target="_RHeUhycoEeSLVrU2ifxtpw" source="_RHeUmCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ExpansionRegion" xmi:id="_RHeUhycoEeSLVrU2ifxtpw" name="Collect(Call(write))" incoming="_RHeUhicoEeSLVrU2ifxtpw" mode="parallel" inputElement="_RHeUlycoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUiCcoEeSLVrU2ifxtpw" target="_RHeUjicoEeSLVrU2ifxtpw" source="_RHeUiicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUiScoEeSLVrU2ifxtpw" target="_RHeUlCcoEeSLVrU2ifxtpw" source="_RHeUlycoEeSLVrU2ifxtpw"/>
          <structuredNodeInput xmi:id="_RHeUiicoEeSLVrU2ifxtpw" name="Collect(Call(write)).input(Fork(value))" incoming="_RHeUgCcoEeSLVrU2ifxtpw" outgoing="_RHeUiCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUiycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUjCcoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:CallOperationAction" xmi:id="_RHeUjScoEeSLVrU2ifxtpw" name="Call(write)">
            <argument xmi:id="_RHeUjicoEeSLVrU2ifxtpw" name="Call(write).argument(value)" incoming="_RHeUiCcoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUjycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUkCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RHeUkScoEeSLVrU2ifxtpw" name="Call(write).result(errorStatus)">
              <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUkicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUkycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
            <target xmi:id="_RHeUlCcoEeSLVrU2ifxtpw" name="Call(write).target" incoming="_RHeUiScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUlScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUlicoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
        </node>
        <node xmi:type="uml:ExpansionNode" xmi:id="_RHeUlycoEeSLVrU2ifxtpw" name="Collect(Call(write)).inputElement" incoming="_RHeUhScoEeSLVrU2ifxtpw" outgoing="_RHeUiScoEeSLVrU2ifxtpw" regionAsInput="_RHeUhycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHeUmCcoEeSLVrU2ifxtpw" name="Feature(Call(At).result())" outgoing="_RHeUhicoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUmScoEeSLVrU2ifxtpw" target="_RHeUnicoEeSLVrU2ifxtpw" source="_RHe7OCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUmicoEeSLVrU2ifxtpw" target="_RHe7QCcoEeSLVrU2ifxtpw" source="_RHe7PCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_RHeUmycoEeSLVrU2ifxtpw" target="_RHeUnScoEeSLVrU2ifxtpw" source="_RHe7NicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_RHeUnCcoEeSLVrU2ifxtpw" target="_RHe7MCcoEeSLVrU2ifxtpw" source="_RHe7QCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_RHeUnScoEeSLVrU2ifxtpw" name="Call(At)" incoming="_RHeUmycoEeSLVrU2ifxtpw">
            <argument xmi:id="_RHeUnicoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_RHeUmScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHeUnycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHeUoCcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <argument xmi:id="_RHe7MCcoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_RHeUnCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHe7MScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHe7MicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_RHe7MycoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_RHeUhScoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHe7NCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHe7NScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_RHe7NicoEeSLVrU2ifxtpw" name="Tuple@6a421438" outgoing="_RHeUmycoEeSLVrU2ifxtpw">
            <node xmi:type="uml:ReadExtentAction" xmi:id="_RHe7NycoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel)">
              <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
              <result xmi:id="_RHe7OCcoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel).result" outgoing="_RHeUmScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHe7OScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHe7OicoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_RHe7OycoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_RHe7PCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_RHeUmicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RHe7PScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RHe7PicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_RHe7PycoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_RHe7QCcoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_RHeUmicoEeSLVrU2ifxtpw" outgoing="_RHeUnCcoEeSLVrU2ifxtpw"/>
        </node>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_RHeUgScoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_RHeUfycoEeSLVrU2ifxtpw" parameter="_RHeUfCcoEeSLVrU2ifxtpw"/>
    <node xmi:type="uml:ForkNode" xmi:id="_RHeUgicoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_RHeUfycoEeSLVrU2ifxtpw" outgoing="_RHeUgCcoEeSLVrU2ifxtpw"/>
  </packagedElement>
  <profileApplication xmi:id="_RHe7QScoEeSLVrU2ifxtpw">
    <eAnnotations xmi:id="_RHe7QicoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
    </eAnnotations>
    <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
  </profileApplication>
</uml:Model>

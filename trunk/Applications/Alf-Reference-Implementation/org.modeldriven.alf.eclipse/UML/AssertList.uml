<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_XSg8EDiCEeWlpOnkGDRnCA" name="Model" visibility="package">
  <packagedElement xmi:type="uml:Activity" xmi:id="_XSg8ETiCEeWlpOnkGDRnCA" name="AssertList" node="_XSg8KziCEeWlpOnkGDRnCA _XSg8LDiCEeWlpOnkGDRnCA _XSg8LTiCEeWlpOnkGDRnCA _XSg8LjiCEeWlpOnkGDRnCA _XSg8LziCEeWlpOnkGDRnCA _XSg8MDiCEeWlpOnkGDRnCA _XSg8MTiCEeWlpOnkGDRnCA" group="_XSg8MTiCEeWlpOnkGDRnCA">
    <packageImport xmi:id="_XSg8EjiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_XSg8EziCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_XSg8FDiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_XSg8FTiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_XSg8FjiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_XSg8FziCEeWlpOnkGDRnCA" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8GDiCEeWlpOnkGDRnCA" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8GTiCEeWlpOnkGDRnCA" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_XSg8GjiCEeWlpOnkGDRnCA" name="list" visibility="package" isOrdered="true" isUnique="false">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8GziCEeWlpOnkGDRnCA"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8HDiCEeWlpOnkGDRnCA" value="*"/>
    </ownedParameter>
    <ownedParameter xmi:id="_XSg8HTiCEeWlpOnkGDRnCA" name="expected" visibility="package" isOrdered="true" isUnique="false">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8HjiCEeWlpOnkGDRnCA"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8HziCEeWlpOnkGDRnCA" value="*"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8IDiCEeWlpOnkGDRnCA" target="_XSg8LDiCEeWlpOnkGDRnCA" source="_XSg8KziCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8ITiCEeWlpOnkGDRnCA" target="_XSg8LjiCEeWlpOnkGDRnCA" source="_XSg8LTiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8IjiCEeWlpOnkGDRnCA" target="_XSg8MDiCEeWlpOnkGDRnCA" source="_XSg8LziCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8IziCEeWlpOnkGDRnCA" target="_XSg8SjiCEeWlpOnkGDRnCA" source="_XSg8LDiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8JDiCEeWlpOnkGDRnCA" target="_XSg8VDiCEeWlpOnkGDRnCA" source="_XSg8LjiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8JTiCEeWlpOnkGDRnCA" target="_XSg8WziCEeWlpOnkGDRnCA" source="_XSg8MDiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8JjiCEeWlpOnkGDRnCA" target="_XShjLjiCEeWlpOnkGDRnCA" source="_XSg8MDiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8JziCEeWlpOnkGDRnCA" target="_XShjMTiCEeWlpOnkGDRnCA" source="_XSg8LjiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8KDiCEeWlpOnkGDRnCA" target="_XShjNDiCEeWlpOnkGDRnCA" source="_XSg8LDiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8KTiCEeWlpOnkGDRnCA" target="_XShjaziCEeWlpOnkGDRnCA" source="_XSg8LjiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8KjiCEeWlpOnkGDRnCA" target="_XShjcjiCEeWlpOnkGDRnCA" source="_XSg8MDiCEeWlpOnkGDRnCA"/>
    <structuredNode xmi:id="_XSg8MTiCEeWlpOnkGDRnCA" name="Body(AssertList)">
      <edge xmi:type="uml:ControlFlow" xmi:id="_XSg8MjiCEeWlpOnkGDRnCA" target="_XSg8YTiCEeWlpOnkGDRnCA" source="_XSg8MziCEeWlpOnkGDRnCA"/>
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_XSg8MziCEeWlpOnkGDRnCA" name="ExpressionStatement@36e5ed87" outgoing="_XSg8MjiCEeWlpOnkGDRnCA">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8NDiCEeWlpOnkGDRnCA" target="_XSg8OTiCEeWlpOnkGDRnCA" source="_XSg8UDiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8NTiCEeWlpOnkGDRnCA" target="_XSg8PDiCEeWlpOnkGDRnCA" source="_XSg8VziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8NjiCEeWlpOnkGDRnCA" target="_XSg8PziCEeWlpOnkGDRnCA" source="_XSg8XjiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_XSg8NziCEeWlpOnkGDRnCA" target="_XSg8ODiCEeWlpOnkGDRnCA" source="_XSg8QjiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg8ODiCEeWlpOnkGDRnCA" name="Call(AssertEqual)" incoming="_XSg8NziCEeWlpOnkGDRnCA" behavior="_XShjlziCEeWlpOnkGDRnCA">
          <argument xmi:id="_XSg8OTiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(label)" incoming="_XSg8NDiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8OjiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8OziCEeWlpOnkGDRnCA" value="1"/>
          </argument>
          <argument xmi:id="_XSg8PDiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value1)" incoming="_XSg8NTiCEeWlpOnkGDRnCA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8PTiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8PjiCEeWlpOnkGDRnCA" value="1"/>
          </argument>
          <argument xmi:id="_XSg8PziCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value2)" incoming="_XSg8NjiCEeWlpOnkGDRnCA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8QDiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8QTiCEeWlpOnkGDRnCA" value="1"/>
          </argument>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_XSg8QjiCEeWlpOnkGDRnCA" name="Tuple@275599ae" outgoing="_XSg8NziCEeWlpOnkGDRnCA">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8QziCEeWlpOnkGDRnCA" target="_XSg8TTiCEeWlpOnkGDRnCA" source="_XSg8RTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XSg8RDiCEeWlpOnkGDRnCA" name="Value(&quot;->size()&quot;)">
            <result xmi:id="_XSg8RTiCEeWlpOnkGDRnCA" name="Value(&quot;->size()&quot;).result" outgoing="_XSg8QziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8RjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8RziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralString" xmi:id="_XSg8SDiCEeWlpOnkGDRnCA" value="->size()">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </value>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg8STiCEeWlpOnkGDRnCA" name="Call(Concat)">
            <argument xmi:id="_XSg8SjiCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_XSg8IziCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8SziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8TDiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <argument xmi:id="_XSg8TTiCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_XSg8QziCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8TjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8TziCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_XSg8UDiCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_XSg8NDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8UTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8UjiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg8UziCEeWlpOnkGDRnCA" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_XShkwjiCEeWlpOnkGDRnCA">
            <argument xmi:id="_XSg8VDiCEeWlpOnkGDRnCA" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_XSg8JDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8VTiCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8VjiCEeWlpOnkGDRnCA" value="*"/>
            </argument>
            <result xmi:id="_XSg8VziCEeWlpOnkGDRnCA" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_XSg8NTiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8WDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8WTiCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg8WjiCEeWlpOnkGDRnCA" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_XShkwjiCEeWlpOnkGDRnCA">
            <argument xmi:id="_XSg8WziCEeWlpOnkGDRnCA" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_XSg8JTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8XDiCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8XTiCEeWlpOnkGDRnCA" value="*"/>
            </argument>
            <result xmi:id="_XSg8XjiCEeWlpOnkGDRnCA" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_XSg8NjiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8XziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8YDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
        </node>
      </node>
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_XSg8YTiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35" incoming="_XSg8MjiCEeWlpOnkGDRnCA">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8YjiCEeWlpOnkGDRnCA" target="_XShjeDiCEeWlpOnkGDRnCA" source="_XShjWziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8YziCEeWlpOnkGDRnCA" target="_XShjOjiCEeWlpOnkGDRnCA" source="_XShjkziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8ZDiCEeWlpOnkGDRnCA" target="_XShjPTiCEeWlpOnkGDRnCA" source="_XShjjziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8ZTiCEeWlpOnkGDRnCA" target="_XShjNziCEeWlpOnkGDRnCA" source="_XShjeDiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_XSg8ZjiCEeWlpOnkGDRnCA" target="_XSg8ZziCEeWlpOnkGDRnCA" source="_XShjUjiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:LoopNode" xmi:id="_XSg8ZziCEeWlpOnkGDRnCA" name="Loop(ForStatement@2561ed35)" incoming="_XSg8ZjiCEeWlpOnkGDRnCA" bodyOutput="_XSg8ljiCEeWlpOnkGDRnCA _XSg8mTiCEeWlpOnkGDRnCA _XSg8nDiCEeWlpOnkGDRnCA _XSg9GjiCEeWlpOnkGDRnCA _XSg9KTiCEeWlpOnkGDRnCA _XSg9NjiCEeWlpOnkGDRnCA" bodyPart="_XSg8kDiCEeWlpOnkGDRnCA _XSg8kjiCEeWlpOnkGDRnCA _XSg9EziCEeWlpOnkGDRnCA _XSg9HTiCEeWlpOnkGDRnCA _XSg9IjiCEeWlpOnkGDRnCA _XSg9LDiCEeWlpOnkGDRnCA _XSg9MTiCEeWlpOnkGDRnCA" decider="_XSg8jTiCEeWlpOnkGDRnCA" isTestedFirst="true" test="_XSg8hjiCEeWlpOnkGDRnCA">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8aDiCEeWlpOnkGDRnCA" target="_XSg8gDiCEeWlpOnkGDRnCA" source="_XSg9OTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8aTiCEeWlpOnkGDRnCA" target="_XSg8gTiCEeWlpOnkGDRnCA" source="_XSg9PDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8ajiCEeWlpOnkGDRnCA" target="_XSg8gjiCEeWlpOnkGDRnCA" source="_XShjIjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8aziCEeWlpOnkGDRnCA" target="_XSg8gziCEeWlpOnkGDRnCA" source="_XShjJTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8bDiCEeWlpOnkGDRnCA" target="_XSg8hDiCEeWlpOnkGDRnCA" source="_XShjKDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8bTiCEeWlpOnkGDRnCA" target="_XSg8hTiCEeWlpOnkGDRnCA" source="_XShjKziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8bjiCEeWlpOnkGDRnCA" target="_XSg8hziCEeWlpOnkGDRnCA" source="_XSg8hDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8bziCEeWlpOnkGDRnCA" target="_XSg8ijiCEeWlpOnkGDRnCA" source="_XSg8hTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8cDiCEeWlpOnkGDRnCA" target="_XSg8kTiCEeWlpOnkGDRnCA" source="_XShjJTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_XSg8cTiCEeWlpOnkGDRnCA" target="_XSg8kjiCEeWlpOnkGDRnCA" source="_XSg8kDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8cjiCEeWlpOnkGDRnCA" target="_XSg8xjiCEeWlpOnkGDRnCA" source="_XSg8kTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8cziCEeWlpOnkGDRnCA" target="_XSg87ziCEeWlpOnkGDRnCA" source="_XSg8kTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8dDiCEeWlpOnkGDRnCA" target="_XSg8-jiCEeWlpOnkGDRnCA" source="_XSg8kTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8dTiCEeWlpOnkGDRnCA" target="_XSg9FDiCEeWlpOnkGDRnCA" source="_XSg8gziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8djiCEeWlpOnkGDRnCA" target="_XSg9FziCEeWlpOnkGDRnCA" source="_XSg9HjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8dziCEeWlpOnkGDRnCA" target="_XSg9IziCEeWlpOnkGDRnCA" source="_XSg8hDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8eDiCEeWlpOnkGDRnCA" target="_XSg9JjiCEeWlpOnkGDRnCA" source="_XSg9LTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8eTiCEeWlpOnkGDRnCA" target="_XSg9MziCEeWlpOnkGDRnCA" source="_XSg8hTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8ejiCEeWlpOnkGDRnCA" target="_XSg8vDiCEeWlpOnkGDRnCA" source="_XSg8gjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8eziCEeWlpOnkGDRnCA" target="_XSg85jiCEeWlpOnkGDRnCA" source="_XSg8gTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8fDiCEeWlpOnkGDRnCA" target="_XSg88TiCEeWlpOnkGDRnCA" source="_XSg8gDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8fTiCEeWlpOnkGDRnCA" target="_XSg8_TiCEeWlpOnkGDRnCA" source="_XSg8gDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8fjiCEeWlpOnkGDRnCA" target="_XSg9BTiCEeWlpOnkGDRnCA" source="_XSg8gTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8fziCEeWlpOnkGDRnCA" target="_XSg9DTiCEeWlpOnkGDRnCA" source="_XSg8gjiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_XSg8gDiCEeWlpOnkGDRnCA" name="Fork(ForStatement@2561ed35.loopVariable(expected))" incoming="_XSg8aDiCEeWlpOnkGDRnCA" outgoing="_XSg8fDiCEeWlpOnkGDRnCA _XSg8fTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_XSg8gTiCEeWlpOnkGDRnCA" name="Fork(ForStatement@2561ed35.loopVariable(list))" incoming="_XSg8aTiCEeWlpOnkGDRnCA" outgoing="_XSg8eziCEeWlpOnkGDRnCA _XSg8fjiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_XSg8gjiCEeWlpOnkGDRnCA" name="Fork(ForStatement@2561ed35.loopVariable(label))" incoming="_XSg8ajiCEeWlpOnkGDRnCA" outgoing="_XSg8ejiCEeWlpOnkGDRnCA _XSg8fziCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_XSg8gziCEeWlpOnkGDRnCA" name="Fork(ForStatement@2561ed35.loopVariable(i))" incoming="_XSg8aziCEeWlpOnkGDRnCA" outgoing="_XSg8dTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_XSg8hDiCEeWlpOnkGDRnCA" name="Fork(ForStatement@2561ed35.loopVariable(counter))" incoming="_XSg8bDiCEeWlpOnkGDRnCA" outgoing="_XSg8bjiCEeWlpOnkGDRnCA _XSg8dziCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_XSg8hTiCEeWlpOnkGDRnCA" name="Fork(ForStatement@2561ed35.loopVariable(upper))" incoming="_XSg8bTiCEeWlpOnkGDRnCA" outgoing="_XSg8bziCEeWlpOnkGDRnCA _XSg8eTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg8hjiCEeWlpOnkGDRnCA" name="Call(&lt;=)">
            <argument xmi:id="_XSg8hziCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(x)" incoming="_XSg8bjiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8iDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8iTiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <argument xmi:id="_XSg8ijiCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(y)" incoming="_XSg8bziCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8iziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8jDiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_XSg8jTiCEeWlpOnkGDRnCA" name="Call(&lt;=).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8jjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8jziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_XSg8kDiCEeWlpOnkGDRnCA" name="Values(ForStatement@2561ed35)" outgoing="_XSg8cTiCEeWlpOnkGDRnCA">
            <node xmi:type="uml:ForkNode" xmi:id="_XSg8kTiCEeWlpOnkGDRnCA" name="Fork(i)" incoming="_XSg8cDiCEeWlpOnkGDRnCA" outgoing="_XSg8cjiCEeWlpOnkGDRnCA _XSg8cziCEeWlpOnkGDRnCA _XSg8dDiCEeWlpOnkGDRnCA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_XSg8kjiCEeWlpOnkGDRnCA" name="Body(ForStatement@2561ed35)" incoming="_XSg8cTiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8kziCEeWlpOnkGDRnCA" target="_XSg8ljiCEeWlpOnkGDRnCA" source="_XSg9ADiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8lDiCEeWlpOnkGDRnCA" target="_XSg8mTiCEeWlpOnkGDRnCA" source="_XSg9CDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8lTiCEeWlpOnkGDRnCA" target="_XSg8nDiCEeWlpOnkGDRnCA" source="_XSg9EDiCEeWlpOnkGDRnCA"/>
            <structuredNodeOutput xmi:id="_XSg8ljiCEeWlpOnkGDRnCA" name="expected" incoming="_XSg8kziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8lziCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8mDiCEeWlpOnkGDRnCA" value="*"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_XSg8mTiCEeWlpOnkGDRnCA" name="list" incoming="_XSg8lDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8mjiCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8mziCEeWlpOnkGDRnCA" value="*"/>
            </structuredNodeOutput>
            <structuredNodeOutput xmi:id="_XSg8nDiCEeWlpOnkGDRnCA" name="label" incoming="_XSg8lTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8nTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8njiCEeWlpOnkGDRnCA" value="1"/>
            </structuredNodeOutput>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_XSg8nziCEeWlpOnkGDRnCA" name="ExpressionStatement@fd7146a">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8oDiCEeWlpOnkGDRnCA" target="_XSg8pTiCEeWlpOnkGDRnCA" source="_XSg84jiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8oTiCEeWlpOnkGDRnCA" target="_XSg8qDiCEeWlpOnkGDRnCA" source="_XSg87DiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8ojiCEeWlpOnkGDRnCA" target="_XSg8qziCEeWlpOnkGDRnCA" source="_XSg89ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_XSg8oziCEeWlpOnkGDRnCA" target="_XSg8pDiCEeWlpOnkGDRnCA" source="_XSg8rjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg8pDiCEeWlpOnkGDRnCA" name="Call(AssertEqual)" incoming="_XSg8oziCEeWlpOnkGDRnCA" behavior="_XShjlziCEeWlpOnkGDRnCA">
                <argument xmi:id="_XSg8pTiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(label)" incoming="_XSg8oDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8pjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8pziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_XSg8qDiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value1)" incoming="_XSg8oTiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8qTiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8qjiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_XSg8qziCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value2)" incoming="_XSg8ojiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8rDiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8rTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_XSg8rjiCEeWlpOnkGDRnCA" name="Tuple@3bd906f1" outgoing="_XSg8oziCEeWlpOnkGDRnCA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8rziCEeWlpOnkGDRnCA" target="_XSg8vziCEeWlpOnkGDRnCA" source="_XSg8tziCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8sDiCEeWlpOnkGDRnCA" target="_XSg8zTiCEeWlpOnkGDRnCA" source="_XSg8wjiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8sTiCEeWlpOnkGDRnCA" target="_XSg80DiCEeWlpOnkGDRnCA" source="_XSg8yTiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8sjiCEeWlpOnkGDRnCA" target="_XSg83DiCEeWlpOnkGDRnCA" source="_XSg80ziCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8sziCEeWlpOnkGDRnCA" target="_XSg83ziCEeWlpOnkGDRnCA" source="_XSg81ziCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8tDiCEeWlpOnkGDRnCA" target="_XSg86TiCEeWlpOnkGDRnCA" source="_XSg87ziCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8tTiCEeWlpOnkGDRnCA" target="_XSg89DiCEeWlpOnkGDRnCA" source="_XSg8-jiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XSg8tjiCEeWlpOnkGDRnCA" name="Value(&quot;[&quot;)">
                  <result xmi:id="_XSg8tziCEeWlpOnkGDRnCA" name="Value(&quot;[&quot;).result" outgoing="_XSg8rziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8uDiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8uTiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_XSg8ujiCEeWlpOnkGDRnCA" value="[">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg8uziCEeWlpOnkGDRnCA" name="Call(Concat)">
                  <argument xmi:id="_XSg8vDiCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_XSg8ejiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8vTiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8vjiCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <argument xmi:id="_XSg8vziCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_XSg8rziCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8wDiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8wTiCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <result xmi:id="_XSg8wjiCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_XSg8sDiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8wziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8xDiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg8xTiCEeWlpOnkGDRnCA" name="Call(ToString)">
                  <argument xmi:id="_XSg8xjiCEeWlpOnkGDRnCA" name="Call(ToString).argument(x)" incoming="_XSg8cjiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8xziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8yDiCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <result xmi:id="_XSg8yTiCEeWlpOnkGDRnCA" name="Call(ToString).result(result)" outgoing="_XSg8sTiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8yjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8yziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg8zDiCEeWlpOnkGDRnCA" name="Call(Concat)">
                  <argument xmi:id="_XSg8zTiCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_XSg8sDiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8zjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8zziCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <argument xmi:id="_XSg80DiCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_XSg8sTiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg80TiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg80jiCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <result xmi:id="_XSg80ziCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_XSg8sjiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg81DiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg81TiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XSg81jiCEeWlpOnkGDRnCA" name="Value(&quot;]&quot;)">
                  <result xmi:id="_XSg81ziCEeWlpOnkGDRnCA" name="Value(&quot;]&quot;).result" outgoing="_XSg8sziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg82DiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg82TiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_XSg82jiCEeWlpOnkGDRnCA" value="]">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg82ziCEeWlpOnkGDRnCA" name="Call(Concat)">
                  <argument xmi:id="_XSg83DiCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_XSg8sjiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg83TiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg83jiCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <argument xmi:id="_XSg83ziCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_XSg8sziCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg84DiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg84TiCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <result xmi:id="_XSg84jiCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_XSg8oDiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg84ziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg85DiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg85TiCEeWlpOnkGDRnCA" name="Call(At)">
                  <argument xmi:id="_XSg85jiCEeWlpOnkGDRnCA" name="Call(At).argument(seq)" incoming="_XSg8eziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg85ziCEeWlpOnkGDRnCA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg86DiCEeWlpOnkGDRnCA" value="*"/>
                  </argument>
                  <argument xmi:id="_XSg86TiCEeWlpOnkGDRnCA" name="Call(At).argument(index)" incoming="_XSg8tDiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg86jiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg86ziCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <result xmi:id="_XSg87DiCEeWlpOnkGDRnCA" name="Call(At).result()" outgoing="_XSg8oTiCEeWlpOnkGDRnCA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg87TiCEeWlpOnkGDRnCA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg87jiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_XSg87ziCEeWlpOnkGDRnCA" name="Fork(Call(At).argument(index))" incoming="_XSg8cziCEeWlpOnkGDRnCA" outgoing="_XSg8tDiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg88DiCEeWlpOnkGDRnCA" name="Call(At)">
                  <argument xmi:id="_XSg88TiCEeWlpOnkGDRnCA" name="Call(At).argument(seq)" incoming="_XSg8fDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg88jiCEeWlpOnkGDRnCA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg88ziCEeWlpOnkGDRnCA" value="*"/>
                  </argument>
                  <argument xmi:id="_XSg89DiCEeWlpOnkGDRnCA" name="Call(At).argument(index)" incoming="_XSg8tTiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg89TiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg89jiCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <result xmi:id="_XSg89ziCEeWlpOnkGDRnCA" name="Call(At).result()" outgoing="_XSg8ojiCEeWlpOnkGDRnCA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8-DiCEeWlpOnkGDRnCA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8-TiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_XSg8-jiCEeWlpOnkGDRnCA" name="Fork(Call(At).argument(index))" incoming="_XSg8dDiCEeWlpOnkGDRnCA" outgoing="_XSg8tTiCEeWlpOnkGDRnCA"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_XSg8-ziCEeWlpOnkGDRnCA" name="Passthru(Fork(expected))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg8_DiCEeWlpOnkGDRnCA" target="_XSg9ADiCEeWlpOnkGDRnCA" source="_XSg8_TiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_XSg8_TiCEeWlpOnkGDRnCA" name="Passthru(Fork(expected)).input" incoming="_XSg8fTiCEeWlpOnkGDRnCA" outgoing="_XSg8_DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg8_jiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg8_ziCEeWlpOnkGDRnCA" value="*"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_XSg9ADiCEeWlpOnkGDRnCA" name="Passthru(Fork(expected)).output" incoming="_XSg8_DiCEeWlpOnkGDRnCA" outgoing="_XSg8kziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9ATiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9AjiCEeWlpOnkGDRnCA" value="*"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_XSg9AziCEeWlpOnkGDRnCA" name="Passthru(Fork(list))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg9BDiCEeWlpOnkGDRnCA" target="_XSg9CDiCEeWlpOnkGDRnCA" source="_XSg9BTiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_XSg9BTiCEeWlpOnkGDRnCA" name="Passthru(Fork(list)).input" incoming="_XSg8fjiCEeWlpOnkGDRnCA" outgoing="_XSg9BDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9BjiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9BziCEeWlpOnkGDRnCA" value="*"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_XSg9CDiCEeWlpOnkGDRnCA" name="Passthru(Fork(list)).output" incoming="_XSg9BDiCEeWlpOnkGDRnCA" outgoing="_XSg8lDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9CTiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9CjiCEeWlpOnkGDRnCA" value="*"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_XSg9CziCEeWlpOnkGDRnCA" name="Passthru(Fork(label))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg9DDiCEeWlpOnkGDRnCA" target="_XSg9EDiCEeWlpOnkGDRnCA" source="_XSg9DTiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_XSg9DTiCEeWlpOnkGDRnCA" name="Passthru(Fork(label)).input" incoming="_XSg8fziCEeWlpOnkGDRnCA" outgoing="_XSg9DDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9DjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9DziCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_XSg9EDiCEeWlpOnkGDRnCA" name="Passthru(Fork(label)).output" incoming="_XSg9DDiCEeWlpOnkGDRnCA" outgoing="_XSg8lTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9ETiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9EjiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg9EziCEeWlpOnkGDRnCA" name="Call(+)">
            <argument xmi:id="_XSg9FDiCEeWlpOnkGDRnCA" name="Call(+).argument(x)" incoming="_XSg8dTiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9FTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9FjiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <argument xmi:id="_XSg9FziCEeWlpOnkGDRnCA" name="Call(+).argument(y)" incoming="_XSg8djiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9GDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9GTiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_XSg9GjiCEeWlpOnkGDRnCA" name="Call(+).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9GziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9HDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XSg9HTiCEeWlpOnkGDRnCA" name="Value(1)">
            <result xmi:id="_XSg9HjiCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_XSg8djiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9HziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9IDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_XSg9ITiCEeWlpOnkGDRnCA" value="1">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            </value>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XSg9IjiCEeWlpOnkGDRnCA" name="Call(+)">
            <argument xmi:id="_XSg9IziCEeWlpOnkGDRnCA" name="Call(+).argument(x)" incoming="_XSg8dziCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9JDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9JTiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <argument xmi:id="_XSg9JjiCEeWlpOnkGDRnCA" name="Call(+).argument(y)" incoming="_XSg8eDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9JziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9KDiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_XSg9KTiCEeWlpOnkGDRnCA" name="Call(+).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9KjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9KziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XSg9LDiCEeWlpOnkGDRnCA" name="Value(1)">
            <result xmi:id="_XSg9LTiCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_XSg8eDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9LjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9LziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_XSg9MDiCEeWlpOnkGDRnCA" value="1">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            </value>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_XSg9MTiCEeWlpOnkGDRnCA" name="Passthru(Passthru(upper))">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_XSg9MjiCEeWlpOnkGDRnCA" target="_XSg9NjiCEeWlpOnkGDRnCA" source="_XSg9MziCEeWlpOnkGDRnCA"/>
            <structuredNodeInput xmi:id="_XSg9MziCEeWlpOnkGDRnCA" name="Passthru(Passthru(upper)).input" incoming="_XSg8eTiCEeWlpOnkGDRnCA" outgoing="_XSg9MjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9NDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9NTiCEeWlpOnkGDRnCA" value="1"/>
            </structuredNodeInput>
            <structuredNodeOutput xmi:id="_XSg9NjiCEeWlpOnkGDRnCA" name="Passthru(Passthru(upper)).output" incoming="_XSg9MjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9NziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9ODiCEeWlpOnkGDRnCA" value="1"/>
            </structuredNodeOutput>
          </node>
          <loopVariable xmi:id="_XSg9OTiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.loopVariable(expected)" outgoing="_XSg8aDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XSg9OjiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XSg9OziCEeWlpOnkGDRnCA" value="*"/>
          </loopVariable>
          <loopVariable xmi:id="_XSg9PDiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.loopVariable(list)" outgoing="_XSg8aTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjIDiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjITiCEeWlpOnkGDRnCA" value="*"/>
          </loopVariable>
          <loopVariable xmi:id="_XShjIjiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.loopVariable(label)" outgoing="_XSg8ajiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjIziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjJDiCEeWlpOnkGDRnCA" value="1"/>
          </loopVariable>
          <loopVariable xmi:id="_XShjJTiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.loopVariable(i)" outgoing="_XSg8aziCEeWlpOnkGDRnCA _XSg8cDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjJjiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjJziCEeWlpOnkGDRnCA" value="*"/>
          </loopVariable>
          <loopVariable xmi:id="_XShjKDiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.loopVariable(counter)" outgoing="_XSg8bDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjKTiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjKjiCEeWlpOnkGDRnCA" value="1"/>
          </loopVariable>
          <loopVariable xmi:id="_XShjKziCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.loopVariable(upper)" outgoing="_XSg8bTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjLDiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjLTiCEeWlpOnkGDRnCA" value="1"/>
          </loopVariable>
          <loopVariableInput xmi:id="_XShjLjiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.loopVariableInput(expected)" incoming="_XSg8JjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjLziCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjMDiCEeWlpOnkGDRnCA" value="*"/>
          </loopVariableInput>
          <loopVariableInput xmi:id="_XShjMTiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.loopVariableInput(list)" incoming="_XSg8JziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjMjiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjMziCEeWlpOnkGDRnCA" value="*"/>
          </loopVariableInput>
          <loopVariableInput xmi:id="_XShjNDiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.loopVariableInput(label)" incoming="_XSg8KDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjNTiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjNjiCEeWlpOnkGDRnCA" value="1"/>
          </loopVariableInput>
          <loopVariableInput xmi:id="_XShjNziCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.loopVariableInput(i)" incoming="_XSg8ZTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjODiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjOTiCEeWlpOnkGDRnCA" value="1"/>
          </loopVariableInput>
          <loopVariableInput xmi:id="_XShjOjiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.loopVariableInput(counter)" incoming="_XSg8YziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjOziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjPDiCEeWlpOnkGDRnCA" value="1"/>
          </loopVariableInput>
          <loopVariableInput xmi:id="_XShjPTiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.loopVariableInput(upper)" incoming="_XSg8ZDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjPjiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjPziCEeWlpOnkGDRnCA" value="1"/>
          </loopVariableInput>
          <result xmi:id="_XShjQDiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.result(expected)" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjQTiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjQjiCEeWlpOnkGDRnCA" value="*"/>
          </result>
          <result xmi:id="_XShjQziCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.result(list)" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjRDiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjRTiCEeWlpOnkGDRnCA" value="*"/>
          </result>
          <result xmi:id="_XShjRjiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.result(label)" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjRziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjSDiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <result xmi:id="_XShjSTiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.result(i)" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjSjiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjSziCEeWlpOnkGDRnCA" value="*"/>
          </result>
          <result xmi:id="_XShjTDiCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.result(counter)" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjTTiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjTjiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <result xmi:id="_XShjTziCEeWlpOnkGDRnCA" name="ForStatement@2561ed35.result(upper)" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjUDiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjUTiCEeWlpOnkGDRnCA" value="1"/>
          </result>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShjUjiCEeWlpOnkGDRnCA" name="LoopVariables(ForStatement@2561ed35)" outgoing="_XSg8ZjiCEeWlpOnkGDRnCA">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjUziCEeWlpOnkGDRnCA" target="_XShjYDiCEeWlpOnkGDRnCA" source="_XShjbjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjVDiCEeWlpOnkGDRnCA" target="_XShjYziCEeWlpOnkGDRnCA" source="_XShjdTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_XShjVTiCEeWlpOnkGDRnCA" target="_XShjXziCEeWlpOnkGDRnCA" source="_XShjaTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjVjiCEeWlpOnkGDRnCA" target="_XShjejiCEeWlpOnkGDRnCA" source="_XShjZjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjVziCEeWlpOnkGDRnCA" target="_XShjfTiCEeWlpOnkGDRnCA" source="_XShjeDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjWDiCEeWlpOnkGDRnCA" target="_XShjiTiCEeWlpOnkGDRnCA" source="_XShjgDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjWTiCEeWlpOnkGDRnCA" target="_XShjjDiCEeWlpOnkGDRnCA" source="_XShjhDiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XShjWjiCEeWlpOnkGDRnCA" name="Value(1)">
            <result xmi:id="_XShjWziCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_XSg8YjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjXDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjXTiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_XShjXjiCEeWlpOnkGDRnCA" value="1">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            </value>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShjXziCEeWlpOnkGDRnCA" name="Call(Min)" incoming="_XShjVTiCEeWlpOnkGDRnCA">
            <argument xmi:id="_XShjYDiCEeWlpOnkGDRnCA" name="Call(Min).argument(x)" incoming="_XShjUziCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjYTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjYjiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <argument xmi:id="_XShjYziCEeWlpOnkGDRnCA" name="Call(Min).argument(y)" incoming="_XShjVDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjZDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjZTiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_XShjZjiCEeWlpOnkGDRnCA" name="Call(Min).result(result)" outgoing="_XShjVjiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjZziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjaDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShjaTiCEeWlpOnkGDRnCA" name="Tuple@49e1bc7b" outgoing="_XShjVTiCEeWlpOnkGDRnCA">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShjajiCEeWlpOnkGDRnCA" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_XShkwjiCEeWlpOnkGDRnCA">
              <argument xmi:id="_XShjaziCEeWlpOnkGDRnCA" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_XSg8KTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjbDiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjbTiCEeWlpOnkGDRnCA" value="*"/>
              </argument>
              <result xmi:id="_XShjbjiCEeWlpOnkGDRnCA" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_XShjUziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjbziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjcDiCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShjcTiCEeWlpOnkGDRnCA" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_XShkwjiCEeWlpOnkGDRnCA">
              <argument xmi:id="_XShjcjiCEeWlpOnkGDRnCA" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_XSg8KjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjcziCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjdDiCEeWlpOnkGDRnCA" value="*"/>
              </argument>
              <result xmi:id="_XShjdTiCEeWlpOnkGDRnCA" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_XShjVDiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjdjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjdziCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_XShjeDiCEeWlpOnkGDRnCA" name="Fork(Value(1).result)" incoming="_XSg8YjiCEeWlpOnkGDRnCA" outgoing="_XSg8ZTiCEeWlpOnkGDRnCA _XShjVziCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShjeTiCEeWlpOnkGDRnCA" name="Call(-)">
            <argument xmi:id="_XShjejiCEeWlpOnkGDRnCA" name="Call(-).argument(x)" incoming="_XShjVjiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjeziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjfDiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <argument xmi:id="_XShjfTiCEeWlpOnkGDRnCA" name="Call(-).argument(y)" incoming="_XShjVziCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjfjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjfziCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_XShjgDiCEeWlpOnkGDRnCA" name="Call(-).result(result)" outgoing="_XShjWDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjgTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjgjiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XShjgziCEeWlpOnkGDRnCA" name="Value(1)">
            <result xmi:id="_XShjhDiCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_XShjWTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjhTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjhjiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_XShjhziCEeWlpOnkGDRnCA" value="1">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            </value>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShjiDiCEeWlpOnkGDRnCA" name="Call(+)">
            <argument xmi:id="_XShjiTiCEeWlpOnkGDRnCA" name="Call(+).argument(x)" incoming="_XShjWDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjijiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjiziCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <argument xmi:id="_XShjjDiCEeWlpOnkGDRnCA" name="Call(+).argument(y)" incoming="_XShjWTiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjjTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjjjiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_XShjjziCEeWlpOnkGDRnCA" name="Call(+).result(result)" outgoing="_XSg8ZDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjkDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjkTiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XShjkjiCEeWlpOnkGDRnCA" name="Value(1)">
            <result xmi:id="_XShjkziCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_XSg8YziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjlDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjlTiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_XShjljiCEeWlpOnkGDRnCA" value="1">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
            </value>
          </node>
        </node>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XSg8KziCEeWlpOnkGDRnCA" name="Input(label)" outgoing="_XSg8IDiCEeWlpOnkGDRnCA" parameter="_XSg8FziCEeWlpOnkGDRnCA">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_XSg8LDiCEeWlpOnkGDRnCA" name="Fork(label)" incoming="_XSg8IDiCEeWlpOnkGDRnCA" outgoing="_XSg8IziCEeWlpOnkGDRnCA _XSg8KDiCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XSg8LTiCEeWlpOnkGDRnCA" name="Input(list)" outgoing="_XSg8ITiCEeWlpOnkGDRnCA" parameter="_XSg8GjiCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ForkNode" xmi:id="_XSg8LjiCEeWlpOnkGDRnCA" name="Fork(list)" incoming="_XSg8ITiCEeWlpOnkGDRnCA" outgoing="_XSg8JDiCEeWlpOnkGDRnCA _XSg8KTiCEeWlpOnkGDRnCA _XSg8JziCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XSg8LziCEeWlpOnkGDRnCA" name="Input(expected)" outgoing="_XSg8IjiCEeWlpOnkGDRnCA" parameter="_XSg8HTiCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ForkNode" xmi:id="_XSg8MDiCEeWlpOnkGDRnCA" name="Fork(expected)" incoming="_XSg8IjiCEeWlpOnkGDRnCA" outgoing="_XSg8JTiCEeWlpOnkGDRnCA _XSg8KjiCEeWlpOnkGDRnCA _XSg8JjiCEeWlpOnkGDRnCA"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Activity" xmi:id="_XShjlziCEeWlpOnkGDRnCA" name="AssertEqual" node="_XShjsDiCEeWlpOnkGDRnCA _XShjsTiCEeWlpOnkGDRnCA _XShjsjiCEeWlpOnkGDRnCA _XShjsziCEeWlpOnkGDRnCA _XShjtDiCEeWlpOnkGDRnCA _XShjtTiCEeWlpOnkGDRnCA _XShjtjiCEeWlpOnkGDRnCA" group="_XShjtjiCEeWlpOnkGDRnCA">
    <packageImport xmi:id="_XShjmDiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_XShjmTiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_XShjmjiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_XShjmziCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_XShjnDiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_XShjnTiCEeWlpOnkGDRnCA" name="label" visibility="package">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjnjiCEeWlpOnkGDRnCA" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjnziCEeWlpOnkGDRnCA" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_XShjoDiCEeWlpOnkGDRnCA" name="value1" visibility="package">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjoTiCEeWlpOnkGDRnCA"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjojiCEeWlpOnkGDRnCA" value="1"/>
    </ownedParameter>
    <ownedParameter xmi:id="_XShjoziCEeWlpOnkGDRnCA" name="value2" visibility="package">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShjpDiCEeWlpOnkGDRnCA"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShjpTiCEeWlpOnkGDRnCA" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjpjiCEeWlpOnkGDRnCA" target="_XShjsTiCEeWlpOnkGDRnCA" source="_XShjsDiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjpziCEeWlpOnkGDRnCA" target="_XShjsziCEeWlpOnkGDRnCA" source="_XShjsjiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjqDiCEeWlpOnkGDRnCA" target="_XShjtTiCEeWlpOnkGDRnCA" source="_XShjtDiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjqTiCEeWlpOnkGDRnCA" target="_XShj2ziCEeWlpOnkGDRnCA" source="_XShjsziCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjqjiCEeWlpOnkGDRnCA" target="_XShj4ziCEeWlpOnkGDRnCA" source="_XShjtTiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjqziCEeWlpOnkGDRnCA" target="_XShkGjiCEeWlpOnkGDRnCA" source="_XShjsTiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjrDiCEeWlpOnkGDRnCA" target="_XShkQDiCEeWlpOnkGDRnCA" source="_XShjtTiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjrTiCEeWlpOnkGDRnCA" target="_XShkXjiCEeWlpOnkGDRnCA" source="_XShjtTiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjrjiCEeWlpOnkGDRnCA" target="_XShkhDiCEeWlpOnkGDRnCA" source="_XShjtTiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjrziCEeWlpOnkGDRnCA" target="_XShkpDiCEeWlpOnkGDRnCA" source="_XShjtTiCEeWlpOnkGDRnCA"/>
    <structuredNode xmi:id="_XShjtjiCEeWlpOnkGDRnCA" name="Body(AssertEqual)">
      <node xmi:type="uml:ConditionalNode" xmi:id="_XShjtziCEeWlpOnkGDRnCA" name="IfStatement@2fda2c1">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjuDiCEeWlpOnkGDRnCA" target="_XShj0jiCEeWlpOnkGDRnCA" source="_XShj2ziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjuTiCEeWlpOnkGDRnCA" target="_XShj3TiCEeWlpOnkGDRnCA" source="_XShj2ziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjujiCEeWlpOnkGDRnCA" target="_XShj2DiCEeWlpOnkGDRnCA" source="_XShj4ziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjuziCEeWlpOnkGDRnCA" target="_XShj5TiCEeWlpOnkGDRnCA" source="_XShj4ziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjvDiCEeWlpOnkGDRnCA" target="_XShj7DiCEeWlpOnkGDRnCA" source="_XShj4DiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjvTiCEeWlpOnkGDRnCA" target="_XShj7TiCEeWlpOnkGDRnCA" source="_XShj6DiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjvjiCEeWlpOnkGDRnCA" target="_XShj7ziCEeWlpOnkGDRnCA" source="_XShj7DiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjvziCEeWlpOnkGDRnCA" target="_XShj9jiCEeWlpOnkGDRnCA" source="_XShj7TiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjwDiCEeWlpOnkGDRnCA" target="_XShj_DiCEeWlpOnkGDRnCA" source="_XShj7TiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_XShjwTiCEeWlpOnkGDRnCA" target="_XShj0TiCEeWlpOnkGDRnCA" source="_XShj_DiCEeWlpOnkGDRnCA">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_XShjwjiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_XShjwziCEeWlpOnkGDRnCA" target="_XShj7jiCEeWlpOnkGDRnCA" source="_XShj_DiCEeWlpOnkGDRnCA">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_XShjxDiCEeWlpOnkGDRnCA" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_XShjxTiCEeWlpOnkGDRnCA" target="_XShj_TiCEeWlpOnkGDRnCA" source="_XShj6ziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjxjiCEeWlpOnkGDRnCA" target="_XShj_TiCEeWlpOnkGDRnCA" source="_XShj7DiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_XShjxziCEeWlpOnkGDRnCA" target="_XShj_DiCEeWlpOnkGDRnCA" source="_XShj_TiCEeWlpOnkGDRnCA">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_XShjyDiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
        </edge>
        <edge xmi:type="uml:ControlFlow" xmi:id="_XShjyTiCEeWlpOnkGDRnCA" target="_XShj9TiCEeWlpOnkGDRnCA" source="_XShj_TiCEeWlpOnkGDRnCA">
          <guard xmi:type="uml:LiteralBoolean" xmi:id="_XShjyjiCEeWlpOnkGDRnCA" name="Value(false)"/>
        </edge>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjyziCEeWlpOnkGDRnCA" target="_XShj_jiCEeWlpOnkGDRnCA" source="_XShj1TiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjzDiCEeWlpOnkGDRnCA" target="_XShj_jiCEeWlpOnkGDRnCA" source="_XShj8jiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjzTiCEeWlpOnkGDRnCA" target="_XShj_jiCEeWlpOnkGDRnCA" source="_XShj-TiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShjzjiCEeWlpOnkGDRnCA" target="_XShkADiCEeWlpOnkGDRnCA" source="_XShj_jiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_XShjzziCEeWlpOnkGDRnCA" target="_XShkLziCEeWlpOnkGDRnCA" source="_XShkBjiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_XShj0DiCEeWlpOnkGDRnCA" target="_XShkqziCEeWlpOnkGDRnCA" source="_XShkLziCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:TestIdentityAction" xmi:id="_XShj0TiCEeWlpOnkGDRnCA" name="Test(==)" incoming="_XShjwTiCEeWlpOnkGDRnCA">
          <first xmi:id="_XShj0jiCEeWlpOnkGDRnCA" name="Test(==).first" incoming="_XShjuDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShj0ziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShj1DiCEeWlpOnkGDRnCA" value="1"/>
          </first>
          <result xmi:id="_XShj1TiCEeWlpOnkGDRnCA" name="Test(==).result" outgoing="_XShjyziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShj1jiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShj1ziCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <second xmi:id="_XShj2DiCEeWlpOnkGDRnCA" name="Test(==).second" incoming="_XShjujiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShj2TiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShj2jiCEeWlpOnkGDRnCA" value="1"/>
          </second>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_XShj2ziCEeWlpOnkGDRnCA" name="Fork(Fork(value1))" incoming="_XShjqTiCEeWlpOnkGDRnCA" outgoing="_XShjuDiCEeWlpOnkGDRnCA _XShjuTiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShj3DiCEeWlpOnkGDRnCA" name="Call(NotEmpty)">
          <argument xmi:id="_XShj3TiCEeWlpOnkGDRnCA" name="Call(NotEmpty).argument(seq)" incoming="_XShjuTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShj3jiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShj3ziCEeWlpOnkGDRnCA" value="*"/>
          </argument>
          <result xmi:id="_XShj4DiCEeWlpOnkGDRnCA" name="Call(NotEmpty).result()" outgoing="_XShjvDiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShj4TiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShj4jiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:ForkNode" xmi:id="_XShj4ziCEeWlpOnkGDRnCA" name="Fork(Fork(value2))" incoming="_XShjqjiCEeWlpOnkGDRnCA" outgoing="_XShjujiCEeWlpOnkGDRnCA _XShjuziCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShj5DiCEeWlpOnkGDRnCA" name="Call(NotEmpty)">
          <argument xmi:id="_XShj5TiCEeWlpOnkGDRnCA" name="Call(NotEmpty).argument(seq)" incoming="_XShjuziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShj5jiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShj5ziCEeWlpOnkGDRnCA" value="*"/>
          </argument>
          <result xmi:id="_XShj6DiCEeWlpOnkGDRnCA" name="Call(NotEmpty).result()" outgoing="_XShjvTiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShj6TiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShj6jiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
        </node>
        <node xmi:type="uml:InitialNode" xmi:id="_XShj6ziCEeWlpOnkGDRnCA" name="Initial(Test(==))" outgoing="_XShjxTiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_XShj7DiCEeWlpOnkGDRnCA" name="Fork(Call(NotEmpty).result())" incoming="_XShjvDiCEeWlpOnkGDRnCA" outgoing="_XShjvjiCEeWlpOnkGDRnCA _XShjxjiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_XShj7TiCEeWlpOnkGDRnCA" name="Fork(Call(NotEmpty).result())" incoming="_XShjvTiCEeWlpOnkGDRnCA" outgoing="_XShjvziCEeWlpOnkGDRnCA _XShjwDiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShj7jiCEeWlpOnkGDRnCA" name="Call(Not)" incoming="_XShjwziCEeWlpOnkGDRnCA">
          <argument xmi:id="_XShj7ziCEeWlpOnkGDRnCA" name="Call(Not).argument(x)" incoming="_XShjvjiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShj8DiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShj8TiCEeWlpOnkGDRnCA" value="1"/>
          </argument>
          <result xmi:id="_XShj8jiCEeWlpOnkGDRnCA" name="Call(Not).result(result)" outgoing="_XShjzDiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShj8ziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShj9DiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShj9TiCEeWlpOnkGDRnCA" name="Call(Not)" incoming="_XShjyTiCEeWlpOnkGDRnCA">
          <argument xmi:id="_XShj9jiCEeWlpOnkGDRnCA" name="Call(Not).argument(x)" incoming="_XShjvziCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShj9ziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShj-DiCEeWlpOnkGDRnCA" value="1"/>
          </argument>
          <result xmi:id="_XShj-TiCEeWlpOnkGDRnCA" name="Call(Not).result(result)" outgoing="_XShjzTiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShj-jiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShj-ziCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:DecisionNode" xmi:id="_XShj_DiCEeWlpOnkGDRnCA" name="Decision(Call(NotEmpty).result())" incoming="_XShjwDiCEeWlpOnkGDRnCA _XShjxziCEeWlpOnkGDRnCA" outgoing="_XShjwTiCEeWlpOnkGDRnCA _XShjwziCEeWlpOnkGDRnCA" decisionInputFlow="_XShjwDiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:DecisionNode" xmi:id="_XShj_TiCEeWlpOnkGDRnCA" name="Decision(Call(NotEmpty).result())" incoming="_XShjxTiCEeWlpOnkGDRnCA _XShjxjiCEeWlpOnkGDRnCA" outgoing="_XShjxziCEeWlpOnkGDRnCA _XShjyTiCEeWlpOnkGDRnCA" decisionInputFlow="_XShjxjiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:MergeNode" xmi:id="_XShj_jiCEeWlpOnkGDRnCA" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_XShjyziCEeWlpOnkGDRnCA _XShjzDiCEeWlpOnkGDRnCA _XShjzTiCEeWlpOnkGDRnCA" outgoing="_XShjzjiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShj_ziCEeWlpOnkGDRnCA" name="Call(Not)">
          <argument xmi:id="_XShkADiCEeWlpOnkGDRnCA" name="Call(Not).argument(x)" incoming="_XShjzjiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkATiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkAjiCEeWlpOnkGDRnCA" value="1"/>
          </argument>
          <result xmi:id="_XShkAziCEeWlpOnkGDRnCA" name="Call(Not).result(result)">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkBDiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkBTiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShkBjiCEeWlpOnkGDRnCA" name="ExpressionStatement@d9dd6c3" outgoing="_XShjzziCEeWlpOnkGDRnCA">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkBziCEeWlpOnkGDRnCA" target="_XShkCjiCEeWlpOnkGDRnCA" source="_XShkLDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_XShkCDiCEeWlpOnkGDRnCA" target="_XShkCTiCEeWlpOnkGDRnCA" source="_XShkDTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShkCTiCEeWlpOnkGDRnCA" name="Call(Write)" incoming="_XShkCDiCEeWlpOnkGDRnCA" behavior="_XShk4jiCEeWlpOnkGDRnCA">
            <argument xmi:id="_XShkCjiCEeWlpOnkGDRnCA" name="Call(Write).argument(value)" incoming="_XShkBziCEeWlpOnkGDRnCA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkCziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkDDiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShkDTiCEeWlpOnkGDRnCA" name="Tuple@12d2b31f" outgoing="_XShkCDiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkDjiCEeWlpOnkGDRnCA" target="_XShkFziCEeWlpOnkGDRnCA" source="_XShkEjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkDziCEeWlpOnkGDRnCA" target="_XShkJjiCEeWlpOnkGDRnCA" source="_XShkHTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkEDiCEeWlpOnkGDRnCA" target="_XShkKTiCEeWlpOnkGDRnCA" source="_XShkITiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XShkETiCEeWlpOnkGDRnCA" name="Value(&quot;FAILED: &quot;)">
              <result xmi:id="_XShkEjiCEeWlpOnkGDRnCA" name="Value(&quot;FAILED: &quot;).result" outgoing="_XShkDjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkEziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkFDiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_XShkFTiCEeWlpOnkGDRnCA" value="FAILED: ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShkFjiCEeWlpOnkGDRnCA" name="Call(Concat)">
              <argument xmi:id="_XShkFziCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_XShkDjiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkGDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkGTiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <argument xmi:id="_XShkGjiCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_XShjqziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkGziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkHDiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_XShkHTiCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_XShkDziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkHjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkHziCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XShkIDiCEeWlpOnkGDRnCA" name="Value(&quot;==&quot;)">
              <result xmi:id="_XShkITiCEeWlpOnkGDRnCA" name="Value(&quot;==&quot;).result" outgoing="_XShkEDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkIjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkIziCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_XShkJDiCEeWlpOnkGDRnCA" value="==">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShkJTiCEeWlpOnkGDRnCA" name="Call(Concat)">
              <argument xmi:id="_XShkJjiCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_XShkDziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkJziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkKDiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <argument xmi:id="_XShkKTiCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_XShkEDiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkKjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkKziCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_XShkLDiCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_XShkBziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkLTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkLjiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShkLziCEeWlpOnkGDRnCA" name="ExpressionStatement@6cbba6a3" incoming="_XShjzziCEeWlpOnkGDRnCA" outgoing="_XShj0DiCEeWlpOnkGDRnCA">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkMDiCEeWlpOnkGDRnCA" target="_XShkMziCEeWlpOnkGDRnCA" source="_XShkqjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_XShkMTiCEeWlpOnkGDRnCA" target="_XShkMjiCEeWlpOnkGDRnCA" source="_XShkNjiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShkMjiCEeWlpOnkGDRnCA" name="Call(Write)" incoming="_XShkMTiCEeWlpOnkGDRnCA" behavior="_XShk4jiCEeWlpOnkGDRnCA">
            <argument xmi:id="_XShkMziCEeWlpOnkGDRnCA" name="Call(Write).argument(value)" incoming="_XShkMDiCEeWlpOnkGDRnCA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkNDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkNTiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShkNjiCEeWlpOnkGDRnCA" name="Tuple@38e39f4" outgoing="_XShkMTiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ControlFlow" xmi:id="_XShkNziCEeWlpOnkGDRnCA" target="_XShkqTiCEeWlpOnkGDRnCA" source="_XShkqDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkODiCEeWlpOnkGDRnCA" target="_XShkqTiCEeWlpOnkGDRnCA" source="_XShkQziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_XShkOTiCEeWlpOnkGDRnCA" target="_XShkRjiCEeWlpOnkGDRnCA" source="_XShkqTiCEeWlpOnkGDRnCA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_XShkOjiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_XShkOziCEeWlpOnkGDRnCA" target="_XShkUDiCEeWlpOnkGDRnCA" source="_XShkqTiCEeWlpOnkGDRnCA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_XShkPDiCEeWlpOnkGDRnCA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkPTiCEeWlpOnkGDRnCA" target="_XShkqjiCEeWlpOnkGDRnCA" source="_XShkSDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkPjiCEeWlpOnkGDRnCA" target="_XShkqjiCEeWlpOnkGDRnCA" source="_XShkWjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShkPziCEeWlpOnkGDRnCA" name="Call(IsEmpty)">
              <argument xmi:id="_XShkQDiCEeWlpOnkGDRnCA" name="Call(IsEmpty).argument(seq)" incoming="_XShjrDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkQTiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkQjiCEeWlpOnkGDRnCA" value="*"/>
              </argument>
              <result xmi:id="_XShkQziCEeWlpOnkGDRnCA" name="Call(IsEmpty).result()" outgoing="_XShkODiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkRDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkRTiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShkRjiCEeWlpOnkGDRnCA" name="ConditionalTestExpression@3114c774.operand2" incoming="_XShkOTiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkRziCEeWlpOnkGDRnCA" target="_XShkSDiCEeWlpOnkGDRnCA" source="_XShkTDiCEeWlpOnkGDRnCA"/>
              <structuredNodeOutput xmi:id="_XShkSDiCEeWlpOnkGDRnCA" name="ConditionalTestExpression@3114c774.operand2.result" incoming="_XShkRziCEeWlpOnkGDRnCA" outgoing="_XShkPTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkSTiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkSjiCEeWlpOnkGDRnCA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XShkSziCEeWlpOnkGDRnCA" name="Value(&quot;null&quot;)">
                <result xmi:id="_XShkTDiCEeWlpOnkGDRnCA" name="Value(&quot;null&quot;).result" outgoing="_XShkRziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkTTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkTjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_XShkTziCEeWlpOnkGDRnCA" value="null">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShkUDiCEeWlpOnkGDRnCA" name="ConditionalTestExpression@3114c774.operand3" incoming="_XShkOziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_XShkUTiCEeWlpOnkGDRnCA" target="_XShkpjiCEeWlpOnkGDRnCA" source="_XShkpTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkUjiCEeWlpOnkGDRnCA" target="_XShkpjiCEeWlpOnkGDRnCA" source="_XShkYTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_XShkUziCEeWlpOnkGDRnCA" target="_XShkZDiCEeWlpOnkGDRnCA" source="_XShkpjiCEeWlpOnkGDRnCA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_XShkVDiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_XShkVTiCEeWlpOnkGDRnCA" target="_XShknziCEeWlpOnkGDRnCA" source="_XShkpjiCEeWlpOnkGDRnCA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_XShkVjiCEeWlpOnkGDRnCA" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkVziCEeWlpOnkGDRnCA" target="_XShkpziCEeWlpOnkGDRnCA" source="_XShkajiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkWDiCEeWlpOnkGDRnCA" target="_XShkpziCEeWlpOnkGDRnCA" source="_XShkoTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkWTiCEeWlpOnkGDRnCA" target="_XShkWjiCEeWlpOnkGDRnCA" source="_XShkpziCEeWlpOnkGDRnCA"/>
              <structuredNodeOutput xmi:id="_XShkWjiCEeWlpOnkGDRnCA" name="ConditionalTestExpression@3114c774.operand3.result" incoming="_XShkWTiCEeWlpOnkGDRnCA" outgoing="_XShkPjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkWziCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkXDiCEeWlpOnkGDRnCA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_XShkXTiCEeWlpOnkGDRnCA" name="ReadIsClassifiedObject(String)">
                <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <object xmi:id="_XShkXjiCEeWlpOnkGDRnCA" name="ReadIsClassifiedObject(String).object" incoming="_XShjrTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkXziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkYDiCEeWlpOnkGDRnCA" value="1"/>
                </object>
                <result xmi:id="_XShkYTiCEeWlpOnkGDRnCA" name="ReadIsClassifiedObject(String).result" outgoing="_XShkUjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkYjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkYziCEeWlpOnkGDRnCA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShkZDiCEeWlpOnkGDRnCA" name="ConditionalTestExpression@3dc5c15d.operand2" incoming="_XShkUziCEeWlpOnkGDRnCA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkZTiCEeWlpOnkGDRnCA" target="_XShkhziCEeWlpOnkGDRnCA" source="_XShkbjiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkZjiCEeWlpOnkGDRnCA" target="_XShkijiCEeWlpOnkGDRnCA" source="_XShkhTiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkZziCEeWlpOnkGDRnCA" target="_XShkljiCEeWlpOnkGDRnCA" source="_XShkjTiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkaDiCEeWlpOnkGDRnCA" target="_XShkmTiCEeWlpOnkGDRnCA" source="_XShkkTiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkaTiCEeWlpOnkGDRnCA" target="_XShkajiCEeWlpOnkGDRnCA" source="_XShknDiCEeWlpOnkGDRnCA"/>
                <structuredNodeOutput xmi:id="_XShkajiCEeWlpOnkGDRnCA" name="ConditionalTestExpression@3dc5c15d.operand2.result" incoming="_XShkaTiCEeWlpOnkGDRnCA" outgoing="_XShkVziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkaziCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkbDiCEeWlpOnkGDRnCA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XShkbTiCEeWlpOnkGDRnCA" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_XShkbjiCEeWlpOnkGDRnCA" name="Value(&quot;&quot;&quot;).result" outgoing="_XShkZTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkbziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkcDiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_XShkcTiCEeWlpOnkGDRnCA" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_XShkcjiCEeWlpOnkGDRnCA" name="CastExpression@1ae8a2df" mode="parallel" outputElement="_XShkhTiCEeWlpOnkGDRnCA" inputElement="_XShkhDiCEeWlpOnkGDRnCA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkcziCEeWlpOnkGDRnCA" target="_XShkfDiCEeWlpOnkGDRnCA" source="_XShkgjiCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkdDiCEeWlpOnkGDRnCA" target="_XShkgziCEeWlpOnkGDRnCA" source="_XShkgjiCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkdTiCEeWlpOnkGDRnCA" target="_XShkgziCEeWlpOnkGDRnCA" source="_XShkfziCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkdjiCEeWlpOnkGDRnCA" target="_XShkejiCEeWlpOnkGDRnCA" source="_XShkgziCEeWlpOnkGDRnCA">
                    <guard xmi:type="uml:LiteralBoolean" xmi:id="_XShkdziCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
                  </edge>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkeDiCEeWlpOnkGDRnCA" target="_XShkgjiCEeWlpOnkGDRnCA" source="_XShkhDiCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkeTiCEeWlpOnkGDRnCA" target="_XShkhTiCEeWlpOnkGDRnCA" source="_XShkejiCEeWlpOnkGDRnCA"/>
                  <node xmi:type="uml:MergeNode" xmi:id="_XShkejiCEeWlpOnkGDRnCA" name="Merge(CastExpression@1ae8a2df.operand)" incoming="_XShkdjiCEeWlpOnkGDRnCA" outgoing="_XShkeTiCEeWlpOnkGDRnCA"/>
                  <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_XShkeziCEeWlpOnkGDRnCA" name="ReadIsClassifiedObject(String)">
                    <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <object xmi:id="_XShkfDiCEeWlpOnkGDRnCA" name="ReadIsClassifiedObject(String).object" incoming="_XShkcziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkfTiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkfjiCEeWlpOnkGDRnCA" value="1"/>
                    </object>
                    <result xmi:id="_XShkfziCEeWlpOnkGDRnCA" name="ReadIsClassifiedObject(String).result" outgoing="_XShkdTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkgDiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkgTiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_XShkgjiCEeWlpOnkGDRnCA" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_XShkeDiCEeWlpOnkGDRnCA" outgoing="_XShkcziCEeWlpOnkGDRnCA _XShkdDiCEeWlpOnkGDRnCA"/>
                  <node xmi:type="uml:DecisionNode" xmi:id="_XShkgziCEeWlpOnkGDRnCA" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_XShkdDiCEeWlpOnkGDRnCA _XShkdTiCEeWlpOnkGDRnCA" outgoing="_XShkdjiCEeWlpOnkGDRnCA" decisionInputFlow="_XShkdTiCEeWlpOnkGDRnCA"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_XShkhDiCEeWlpOnkGDRnCA" name="CastExpression@1ae8a2df.inputElement" incoming="_XShjrjiCEeWlpOnkGDRnCA" outgoing="_XShkeDiCEeWlpOnkGDRnCA" regionAsInput="_XShkcjiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_XShkhTiCEeWlpOnkGDRnCA" name="CastExpression@1ae8a2df.outputElement" incoming="_XShkeTiCEeWlpOnkGDRnCA" outgoing="_XShkZjiCEeWlpOnkGDRnCA" regionAsOutput="_XShkcjiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShkhjiCEeWlpOnkGDRnCA" name="Call(Concat)">
                  <argument xmi:id="_XShkhziCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_XShkZTiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkiDiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkiTiCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <argument xmi:id="_XShkijiCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_XShkZjiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkiziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkjDiCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <result xmi:id="_XShkjTiCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_XShkZziCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkjjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkjziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XShkkDiCEeWlpOnkGDRnCA" name="Value(&quot;&quot;&quot;)">
                  <result xmi:id="_XShkkTiCEeWlpOnkGDRnCA" name="Value(&quot;&quot;&quot;).result" outgoing="_XShkaDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkkjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkkziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_XShklDiCEeWlpOnkGDRnCA" value="&quot;">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShklTiCEeWlpOnkGDRnCA" name="Call(Concat)">
                  <argument xmi:id="_XShkljiCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_XShkZziCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShklziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkmDiCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <argument xmi:id="_XShkmTiCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_XShkaDiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkmjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkmziCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <result xmi:id="_XShknDiCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_XShkaTiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShknTiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShknjiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShknziCEeWlpOnkGDRnCA" name="ConditionalTestExpression@3dc5c15d.operand3" incoming="_XShkVTiCEeWlpOnkGDRnCA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkoDiCEeWlpOnkGDRnCA" target="_XShkoTiCEeWlpOnkGDRnCA" source="_XShkpDiCEeWlpOnkGDRnCA"/>
                <structuredNodeOutput xmi:id="_XShkoTiCEeWlpOnkGDRnCA" name="ConditionalTestExpression@3dc5c15d.operand3.result" incoming="_XShkoDiCEeWlpOnkGDRnCA" outgoing="_XShkWDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkojiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkoziCEeWlpOnkGDRnCA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:MergeNode" xmi:id="_XShkpDiCEeWlpOnkGDRnCA" name="Merge(Fork(value2))" incoming="_XShjrziCEeWlpOnkGDRnCA" outgoing="_XShkoDiCEeWlpOnkGDRnCA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_XShkpTiCEeWlpOnkGDRnCA" name="Initial(ConditionalTestExpression@3dc5c15d)" outgoing="_XShkUTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_XShkpjiCEeWlpOnkGDRnCA" name="Decision(ConditionalTestExpression@3dc5c15d)" incoming="_XShkUTiCEeWlpOnkGDRnCA _XShkUjiCEeWlpOnkGDRnCA" outgoing="_XShkUziCEeWlpOnkGDRnCA _XShkVTiCEeWlpOnkGDRnCA" decisionInputFlow="_XShkUjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:MergeNode" xmi:id="_XShkpziCEeWlpOnkGDRnCA" name="Merge(ConditionalTestExpression@3dc5c15d.result)" incoming="_XShkVziCEeWlpOnkGDRnCA _XShkWDiCEeWlpOnkGDRnCA" outgoing="_XShkWTiCEeWlpOnkGDRnCA"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_XShkqDiCEeWlpOnkGDRnCA" name="Initial(ConditionalTestExpression@3114c774)" outgoing="_XShkNziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_XShkqTiCEeWlpOnkGDRnCA" name="Decision(ConditionalTestExpression@3114c774)" incoming="_XShkNziCEeWlpOnkGDRnCA _XShkODiCEeWlpOnkGDRnCA" outgoing="_XShkOTiCEeWlpOnkGDRnCA _XShkOziCEeWlpOnkGDRnCA" decisionInputFlow="_XShkODiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_XShkqjiCEeWlpOnkGDRnCA" name="Merge(ConditionalTestExpression@3114c774.result)" incoming="_XShkPTiCEeWlpOnkGDRnCA _XShkPjiCEeWlpOnkGDRnCA" outgoing="_XShkMDiCEeWlpOnkGDRnCA"/>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShkqziCEeWlpOnkGDRnCA" name="ExpressionStatement@12325d54" incoming="_XShj0DiCEeWlpOnkGDRnCA">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkrDiCEeWlpOnkGDRnCA" target="_XShkrziCEeWlpOnkGDRnCA" source="_XShktziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_XShkrTiCEeWlpOnkGDRnCA" target="_XShkrjiCEeWlpOnkGDRnCA" source="_XShktTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShkrjiCEeWlpOnkGDRnCA" name="Call(WriteLine)" incoming="_XShkrTiCEeWlpOnkGDRnCA">
            <argument xmi:id="_XShkrziCEeWlpOnkGDRnCA" name="Call(WriteLine).argument(value)" incoming="_XShkrDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShksDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShksTiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_XShksjiCEeWlpOnkGDRnCA" name="Call(WriteLine).result(errorStatus)">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShksziCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShktDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShktTiCEeWlpOnkGDRnCA" name="Tuple@5583c7f3" outgoing="_XShkrTiCEeWlpOnkGDRnCA">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XShktjiCEeWlpOnkGDRnCA" name="Value(&quot;&quot;)">
              <result xmi:id="_XShktziCEeWlpOnkGDRnCA" name="Value(&quot;&quot;).result" outgoing="_XShkrDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkuDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkuTiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_XShkujiCEeWlpOnkGDRnCA" value="">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
          </node>
        </node>
        <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XShkuziCEeWlpOnkGDRnCA" name="Value(true)">
          <result xmi:id="_XShkvDiCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkvTiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkvjiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <value xmi:type="uml:LiteralBoolean" xmi:id="_XShkvziCEeWlpOnkGDRnCA" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </value>
        </node>
        <clause xmi:id="_XShkwDiCEeWlpOnkGDRnCA" body="_XShkBjiCEeWlpOnkGDRnCA _XShkLziCEeWlpOnkGDRnCA _XShkqziCEeWlpOnkGDRnCA" decider="_XShkAziCEeWlpOnkGDRnCA" successorClause="_XShkwTiCEeWlpOnkGDRnCA" test="_XShj0TiCEeWlpOnkGDRnCA _XShj3DiCEeWlpOnkGDRnCA _XShj5DiCEeWlpOnkGDRnCA _XShj7jiCEeWlpOnkGDRnCA _XShj9TiCEeWlpOnkGDRnCA _XShj_ziCEeWlpOnkGDRnCA"/>
        <clause xmi:id="_XShkwTiCEeWlpOnkGDRnCA" decider="_XShkvDiCEeWlpOnkGDRnCA" predecessorClause="_XShkwDiCEeWlpOnkGDRnCA" test="_XShkuziCEeWlpOnkGDRnCA"/>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XShjsDiCEeWlpOnkGDRnCA" name="Input(label)" outgoing="_XShjpjiCEeWlpOnkGDRnCA" parameter="_XShjnTiCEeWlpOnkGDRnCA">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </node>
    <node xmi:type="uml:ForkNode" xmi:id="_XShjsTiCEeWlpOnkGDRnCA" name="Fork(label)" incoming="_XShjpjiCEeWlpOnkGDRnCA" outgoing="_XShjqziCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XShjsjiCEeWlpOnkGDRnCA" name="Input(value1)" outgoing="_XShjpziCEeWlpOnkGDRnCA" parameter="_XShjoDiCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ForkNode" xmi:id="_XShjsziCEeWlpOnkGDRnCA" name="Fork(value1)" incoming="_XShjpziCEeWlpOnkGDRnCA" outgoing="_XShjqTiCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XShjtDiCEeWlpOnkGDRnCA" name="Input(value2)" outgoing="_XShjqDiCEeWlpOnkGDRnCA" parameter="_XShjoziCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ForkNode" xmi:id="_XShjtTiCEeWlpOnkGDRnCA" name="Fork(value2)" incoming="_XShjqDiCEeWlpOnkGDRnCA" outgoing="_XShjqjiCEeWlpOnkGDRnCA _XShjrDiCEeWlpOnkGDRnCA _XShjrTiCEeWlpOnkGDRnCA _XShjrjiCEeWlpOnkGDRnCA _XShjrziCEeWlpOnkGDRnCA"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Activity" xmi:id="_XShkwjiCEeWlpOnkGDRnCA" name="$$Alf$Library$CollectionFunctions$size__any__" node="_XShkzTiCEeWlpOnkGDRnCA _XShkzjiCEeWlpOnkGDRnCA _XShkzziCEeWlpOnkGDRnCA _XShk0DiCEeWlpOnkGDRnCA _XShk0TiCEeWlpOnkGDRnCA" group="_XShk0TiCEeWlpOnkGDRnCA">
    <ownedParameter xmi:id="_XShkwziCEeWlpOnkGDRnCA" name="seq" visibility="package" isOrdered="true" isUnique="false">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkxDiCEeWlpOnkGDRnCA"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkxTiCEeWlpOnkGDRnCA" value="*"/>
    </ownedParameter>
    <ownedParameter xmi:id="_XShkxjiCEeWlpOnkGDRnCA" name="" visibility="package" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShkxziCEeWlpOnkGDRnCA" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShkyDiCEeWlpOnkGDRnCA" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkyTiCEeWlpOnkGDRnCA" target="_XShkzjiCEeWlpOnkGDRnCA" source="_XShkzTiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ControlFlow" xmi:id="_XShkyjiCEeWlpOnkGDRnCA" target="_XShk0DiCEeWlpOnkGDRnCA" source="_XShk0jiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkyziCEeWlpOnkGDRnCA" target="_XShk2DiCEeWlpOnkGDRnCA" source="_XShkzjiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShkzDiCEeWlpOnkGDRnCA" target="_XShkzziCEeWlpOnkGDRnCA" source="_XShk1DiCEeWlpOnkGDRnCA"/>
    <structuredNode xmi:id="_XShk0TiCEeWlpOnkGDRnCA" name="Body(size)">
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShk0jiCEeWlpOnkGDRnCA" name="ReturnStatement@22536490" outgoing="_XShkyjiCEeWlpOnkGDRnCA">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShk0ziCEeWlpOnkGDRnCA" target="_XShk1DiCEeWlpOnkGDRnCA" source="_XShk2ziCEeWlpOnkGDRnCA"/>
        <structuredNodeOutput xmi:id="_XShk1DiCEeWlpOnkGDRnCA" name="ReturnStatement@22536490.output" incoming="_XShk0ziCEeWlpOnkGDRnCA" outgoing="_XShkzDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShk1TiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShk1jiCEeWlpOnkGDRnCA" value="1"/>
        </structuredNodeOutput>
        <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShk1ziCEeWlpOnkGDRnCA" name="Call(Size)">
          <argument xmi:id="_XShk2DiCEeWlpOnkGDRnCA" name="Call(Size).argument(seq)" incoming="_XShkyziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShk2TiCEeWlpOnkGDRnCA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShk2jiCEeWlpOnkGDRnCA" value="*"/>
          </argument>
          <result xmi:id="_XShk2ziCEeWlpOnkGDRnCA" name="Call(Size).result()" outgoing="_XShk0ziCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShk3DiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShk3TiCEeWlpOnkGDRnCA" value="1"/>
          </result>
          <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
        </node>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XShkzTiCEeWlpOnkGDRnCA" name="Input(seq)" outgoing="_XShkyTiCEeWlpOnkGDRnCA" parameter="_XShkwziCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ForkNode" xmi:id="_XShkzjiCEeWlpOnkGDRnCA" name="Fork(seq)" incoming="_XShkyTiCEeWlpOnkGDRnCA" outgoing="_XShkyziCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XShkzziCEeWlpOnkGDRnCA" name="Return" incoming="_XShkzDiCEeWlpOnkGDRnCA" parameter="_XShkxjiCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ActivityFinalNode" xmi:id="_XShk0DiCEeWlpOnkGDRnCA" name="Final" incoming="_XShkyjiCEeWlpOnkGDRnCA"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Activity" xmi:id="_XShk3jiCEeWlpOnkGDRnCA">
    <templateBinding xmi:id="_XShk3ziCEeWlpOnkGDRnCA">
      <parameterSubstitution xmi:id="_XShk4DiCEeWlpOnkGDRnCA">
        <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmqbdYVoEeKRrIQMgiVHcQ"/>
      </parameterSubstitution>
      <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmqbdIVoEeKRrIQMgiVHcQ"/>
    </templateBinding>
  </packagedElement>
  <packagedElement xmi:type="uml:Realization" xmi:id="_XShk4TiCEeWlpOnkGDRnCA" client="_XShkwjiCEeWlpOnkGDRnCA" supplier="_XShk3jiCEeWlpOnkGDRnCA"/>
  <packagedElement xmi:type="uml:Activity" xmi:id="_XShk4jiCEeWlpOnkGDRnCA" name="Write" node="_XShk7TiCEeWlpOnkGDRnCA _XShk7jiCEeWlpOnkGDRnCA _XShk7ziCEeWlpOnkGDRnCA" group="_XShk7ziCEeWlpOnkGDRnCA">
    <packageImport xmi:id="_XShk4ziCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
    </packageImport>
    <packageImport xmi:id="_XShk5DiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
    </packageImport>
    <packageImport xmi:id="_XShk5TiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
    </packageImport>
    <packageImport xmi:id="_XShk5jiCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
    </packageImport>
    <packageImport xmi:id="_XShk5ziCEeWlpOnkGDRnCA" visibility="private">
      <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
    </packageImport>
    <ownedParameter xmi:id="_XShk6DiCEeWlpOnkGDRnCA" name="value" visibility="package">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShk6TiCEeWlpOnkGDRnCA" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShk6jiCEeWlpOnkGDRnCA" value="1"/>
    </ownedParameter>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShk6ziCEeWlpOnkGDRnCA" target="_XShk7jiCEeWlpOnkGDRnCA" source="_XShk7TiCEeWlpOnkGDRnCA"/>
    <edge xmi:type="uml:ObjectFlow" xmi:id="_XShk7DiCEeWlpOnkGDRnCA" target="_XShk9jiCEeWlpOnkGDRnCA" source="_XShk7jiCEeWlpOnkGDRnCA"/>
    <structuredNode xmi:id="_XShk7ziCEeWlpOnkGDRnCA" name="Body(Write)">
      <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShk8DiCEeWlpOnkGDRnCA" name="ExpressionStatement@4968b459">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_XShk8TiCEeWlpOnkGDRnCA" target="_XShlAziCEeWlpOnkGDRnCA" source="_XShlEDiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ControlFlow" xmi:id="_XShk8jiCEeWlpOnkGDRnCA" target="_XShk8ziCEeWlpOnkGDRnCA" source="_XShlBDiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:ExpansionRegion" xmi:id="_XShk8ziCEeWlpOnkGDRnCA" name="Collect(Call(write))" incoming="_XShk8jiCEeWlpOnkGDRnCA" mode="parallel" inputElement="_XShlAziCEeWlpOnkGDRnCA">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShk9DiCEeWlpOnkGDRnCA" target="_XShk-jiCEeWlpOnkGDRnCA" source="_XShk9jiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShk9TiCEeWlpOnkGDRnCA" target="_XShlADiCEeWlpOnkGDRnCA" source="_XShlAziCEeWlpOnkGDRnCA"/>
          <structuredNodeInput xmi:id="_XShk9jiCEeWlpOnkGDRnCA" name="Collect(Call(write)).input(Fork(value))" incoming="_XShk7DiCEeWlpOnkGDRnCA" outgoing="_XShk9DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShk9ziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShk-DiCEeWlpOnkGDRnCA" value="1"/>
          </structuredNodeInput>
          <node xmi:type="uml:CallOperationAction" xmi:id="_XShk-TiCEeWlpOnkGDRnCA" name="Call(write)">
            <argument xmi:id="_XShk-jiCEeWlpOnkGDRnCA" name="Call(write).argument(value)" incoming="_XShk9DiCEeWlpOnkGDRnCA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShk-ziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShk_DiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_XShk_TiCEeWlpOnkGDRnCA" name="Call(write).result(errorStatus)">
              <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShk_jiCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShk_ziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
            <target xmi:id="_XShlADiCEeWlpOnkGDRnCA" name="Call(write).target" incoming="_XShk9TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShlATiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShlAjiCEeWlpOnkGDRnCA" value="1"/>
            </target>
          </node>
        </node>
        <node xmi:type="uml:ExpansionNode" xmi:id="_XShlAziCEeWlpOnkGDRnCA" name="Collect(Call(write)).inputElement" incoming="_XShk8TiCEeWlpOnkGDRnCA" outgoing="_XShk9TiCEeWlpOnkGDRnCA" regionAsInput="_XShk8ziCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShlBDiCEeWlpOnkGDRnCA" name="Feature(Call(At).result())" outgoing="_XShk8jiCEeWlpOnkGDRnCA">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShlBTiCEeWlpOnkGDRnCA" target="_XShlCjiCEeWlpOnkGDRnCA" source="_XShlFTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShlBjiCEeWlpOnkGDRnCA" target="_XShlHTiCEeWlpOnkGDRnCA" source="_XShlGTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_XShlBziCEeWlpOnkGDRnCA" target="_XShlCTiCEeWlpOnkGDRnCA" source="_XShlEziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_XShlCDiCEeWlpOnkGDRnCA" target="_XShlDTiCEeWlpOnkGDRnCA" source="_XShlHTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_XShlCTiCEeWlpOnkGDRnCA" name="Call(At)" incoming="_XShlBziCEeWlpOnkGDRnCA">
            <argument xmi:id="_XShlCjiCEeWlpOnkGDRnCA" name="Call(At).argument(seq)" incoming="_XShlBTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShlCziCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShlDDiCEeWlpOnkGDRnCA" value="*"/>
            </argument>
            <argument xmi:id="_XShlDTiCEeWlpOnkGDRnCA" name="Call(At).argument(index)" incoming="_XShlCDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShlDjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShlDziCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_XShlEDiCEeWlpOnkGDRnCA" name="Call(At).result()" outgoing="_XShk8TiCEeWlpOnkGDRnCA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShlETiCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShlEjiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_XShlEziCEeWlpOnkGDRnCA" name="Tuple@18e5ef0b" outgoing="_XShlBziCEeWlpOnkGDRnCA">
            <node xmi:type="uml:ReadExtentAction" xmi:id="_XShlFDiCEeWlpOnkGDRnCA" name="ReadExtent(StandardOutputChannel)">
              <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
              <result xmi:id="_XShlFTiCEeWlpOnkGDRnCA" name="ReadExtent(StandardOutputChannel).result" outgoing="_XShlBTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShlFjiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShlFziCEeWlpOnkGDRnCA" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_XShlGDiCEeWlpOnkGDRnCA" name="Value(1)">
              <result xmi:id="_XShlGTiCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_XShlBjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XShlGjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XShlGziCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_XShlHDiCEeWlpOnkGDRnCA" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_XShlHTiCEeWlpOnkGDRnCA" name="Fork(Call(At).argument(index))" incoming="_XShlBjiCEeWlpOnkGDRnCA" outgoing="_XShlCDiCEeWlpOnkGDRnCA"/>
        </node>
      </node>
    </structuredNode>
    <node xmi:type="uml:ActivityParameterNode" xmi:id="_XShk7TiCEeWlpOnkGDRnCA" name="Input(value)" outgoing="_XShk6ziCEeWlpOnkGDRnCA" parameter="_XShk6DiCEeWlpOnkGDRnCA"/>
    <node xmi:type="uml:ForkNode" xmi:id="_XShk7jiCEeWlpOnkGDRnCA" name="Fork(value)" incoming="_XShk6ziCEeWlpOnkGDRnCA" outgoing="_XShk7DiCEeWlpOnkGDRnCA"/>
  </packagedElement>
  <profileApplication xmi:id="_XShlHjiCEeWlpOnkGDRnCA">
    <eAnnotations xmi:id="_XShlHziCEeWlpOnkGDRnCA" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
    </eAnnotations>
    <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
  </profileApplication>
</uml:Model>

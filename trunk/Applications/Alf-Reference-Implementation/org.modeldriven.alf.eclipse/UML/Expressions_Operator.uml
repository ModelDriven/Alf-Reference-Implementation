<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_SicNwK1MEeOdBunZhTRw1w" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_SicNwa1MEeOdBunZhTRw1w" name="Expressions_Operator" classifierBehavior="_SicNyq1MEeOdBunZhTRw1w" isActive="true">
      <packageImport xmi:id="_SicNwq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SicNw61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SicNxK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SicNxa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SicNxq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_SicNx61MEeOdBunZhTRw1w" name="Expressions_Operator$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicNyK1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicNya1MEeOdBunZhTRw1w" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SicNyq1MEeOdBunZhTRw1w" name="Expressions_Operator$classifierBehavior$1" visibility="private" isActive="true" group="_SicNy61MEeOdBunZhTRw1w" node="_SicNy61MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_SicNy61MEeOdBunZhTRw1w" name="Body(Expressions_Operator$classifierBehavior$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SicNzK1MEeOdBunZhTRw1w" name="ExpressionStatement@31cc954d" outgoing="_Sic2pa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_SicNza1MEeOdBunZhTRw1w" name="Call(test)" operation="_SieDLa1MEeOdBunZhTRw1w">
              <result xmi:id="_SicNzq1MEeOdBunZhTRw1w" name="Call(test).result(i)" outgoing="_SicOOa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicNz61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN0K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN0a1MEeOdBunZhTRw1w" name="Call(test).result(j)" outgoing="_SicOOq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN0q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN061MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN1K1MEeOdBunZhTRw1w" name="Call(test).result(bs)" outgoing="_SicOO61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN1a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN1q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN161MEeOdBunZhTRw1w" name="Call(test).result(h)" outgoing="_SicOPK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN2K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN2a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN2q1MEeOdBunZhTRw1w" name="Call(test).result(a)" outgoing="_SicOPa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN261MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN3K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN3a1MEeOdBunZhTRw1w" name="Call(test).result(b)" outgoing="_SicOPq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN3q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN361MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN4K1MEeOdBunZhTRw1w" name="Call(test).result(c)" outgoing="_SicOP61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN4a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN4q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN461MEeOdBunZhTRw1w" name="Call(test).result(d)" outgoing="_SicOQK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN5K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN5a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN5q1MEeOdBunZhTRw1w" name="Call(test).result(e)" outgoing="_SicOQa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN561MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN6K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN6a1MEeOdBunZhTRw1w" name="Call(test).result(e1)" outgoing="_SicOQq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN6q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN661MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN7K1MEeOdBunZhTRw1w" name="Call(test).result(e2)" outgoing="_SicOQ61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN7a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN7q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN761MEeOdBunZhTRw1w" name="Call(test).result(e3)" outgoing="_SicORK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN8K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN8a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN8q1MEeOdBunZhTRw1w" name="Call(test).result(e4)" outgoing="_SicORa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN861MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN9K1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN9a1MEeOdBunZhTRw1w" name="Call(test).result(e5)" outgoing="_SicORq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN9q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN961MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN-K1MEeOdBunZhTRw1w" name="Call(test).result(e6)" outgoing="_SicOR61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN-a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN-q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN-61MEeOdBunZhTRw1w" name="Call(test).result(e7)" outgoing="_SicOSK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN_K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicN_a1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicN_q1MEeOdBunZhTRw1w" name="Call(test).result(e8)" outgoing="_SicOSa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicN_61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOAK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicOAa1MEeOdBunZhTRw1w" name="Call(test).result(e9)" outgoing="_SicOSq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOAq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOA61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicOBK1MEeOdBunZhTRw1w" name="Call(test).result(f)" outgoing="_SicOS61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOBa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOBq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicOB61MEeOdBunZhTRw1w" name="Call(test).result(f1)" outgoing="_SicOTK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOCK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOCa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicOCq1MEeOdBunZhTRw1w" name="Call(test).result(f2)" outgoing="_SicOTa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOC61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicODK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicODa1MEeOdBunZhTRw1w" name="Call(test).result(x)" outgoing="_SicOTq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicODq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOD61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <result xmi:id="_SicOEK1MEeOdBunZhTRw1w" name="Call(test).result(y)" outgoing="_SicOT61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOEa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOEq1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_SicOE61MEeOdBunZhTRw1w" name="Call(test).result(z)" outgoing="_SicOUK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOFK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOFa1MEeOdBunZhTRw1w" value="*"/>
              </result>
              <result xmi:id="_SicOFq1MEeOdBunZhTRw1w" name="Call(test).result(r)" outgoing="_SicOUa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOF61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOGK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <target xmi:id="_SicOGa1MEeOdBunZhTRw1w" name="Call(test).target" incoming="_SicOUq1MEeOdBunZhTRw1w" type="_SicNwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOGq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOG61MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SicOHK1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SicOHa1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SicOUq1MEeOdBunZhTRw1w" type="_SicNwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOHq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOH61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOIK1MEeOdBunZhTRw1w" name="Fork(i)@724dfbc6" outgoing="_Sic2pK1MEeOdBunZhTRw1w" incoming="_SicOOa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOIa1MEeOdBunZhTRw1w" name="Fork(j)@2d01efe2" outgoing="_Sic2pq1MEeOdBunZhTRw1w" incoming="_SicOOq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOIq1MEeOdBunZhTRw1w" name="Fork(bs)@5a2bf583" outgoing="_Sic2qK1MEeOdBunZhTRw1w" incoming="_SicOO61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOI61MEeOdBunZhTRw1w" name="Fork(h)@7c0399b4" outgoing="_Sic2qq1MEeOdBunZhTRw1w" incoming="_SicOPK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOJK1MEeOdBunZhTRw1w" name="Fork(a)@50603807" outgoing="_Sic2rK1MEeOdBunZhTRw1w" incoming="_SicOPa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOJa1MEeOdBunZhTRw1w" name="Fork(b)@5cfe7cca" outgoing="_Sic2rq1MEeOdBunZhTRw1w" incoming="_SicOPq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOJq1MEeOdBunZhTRw1w" name="Fork(c)@47b2e178" outgoing="_Sic2sK1MEeOdBunZhTRw1w" incoming="_SicOP61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOJ61MEeOdBunZhTRw1w" name="Fork(d)@30f0b20e" outgoing="_Sic2sq1MEeOdBunZhTRw1w" incoming="_SicOQK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOKK1MEeOdBunZhTRw1w" name="Fork(e)@a39ce3c" outgoing="_Sic2tK1MEeOdBunZhTRw1w" incoming="_SicOQa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOKa1MEeOdBunZhTRw1w" name="Fork(e1)@5912ca62" outgoing="_Sic2tq1MEeOdBunZhTRw1w" incoming="_SicOQq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOKq1MEeOdBunZhTRw1w" name="Fork(e2)@60a5159d" outgoing="_Sic2uK1MEeOdBunZhTRw1w" incoming="_SicOQ61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOK61MEeOdBunZhTRw1w" name="Fork(e3)@762e27fc" outgoing="_Sic2uq1MEeOdBunZhTRw1w" incoming="_SicORK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOLK1MEeOdBunZhTRw1w" name="Fork(e4)@50434e01" outgoing="_Sic2vK1MEeOdBunZhTRw1w" incoming="_SicORa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOLa1MEeOdBunZhTRw1w" name="Fork(e5)@72b64cd1" outgoing="_Sic2vq1MEeOdBunZhTRw1w" incoming="_SicORq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOLq1MEeOdBunZhTRw1w" name="Fork(e6)@1e6d682d" outgoing="_Sic2wK1MEeOdBunZhTRw1w" incoming="_SicOR61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOL61MEeOdBunZhTRw1w" name="Fork(e7)@20d271f6" outgoing="_Sic2wq1MEeOdBunZhTRw1w" incoming="_SicOSK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOMK1MEeOdBunZhTRw1w" name="Fork(e8)@5837de4f" outgoing="_Sic2xK1MEeOdBunZhTRw1w" incoming="_SicOSa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOMa1MEeOdBunZhTRw1w" name="Fork(e9)@3be441c8" outgoing="_Sic2xq1MEeOdBunZhTRw1w" incoming="_SicOSq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOMq1MEeOdBunZhTRw1w" name="Fork(f)@69ad030" outgoing="_Sic2yK1MEeOdBunZhTRw1w" incoming="_SicOS61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOM61MEeOdBunZhTRw1w" name="Fork(f1)@1dda02b3" outgoing="_Sic2yq1MEeOdBunZhTRw1w" incoming="_SicOTK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicONK1MEeOdBunZhTRw1w" name="Fork(f2)@53e74514" outgoing="_Sic2zK1MEeOdBunZhTRw1w" incoming="_SicOTa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicONa1MEeOdBunZhTRw1w" name="Fork(x)@74684f14" outgoing="_Sic2zq1MEeOdBunZhTRw1w" incoming="_SicOTq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicONq1MEeOdBunZhTRw1w" name="Fork(y)@6c1fe5c0" outgoing="_Sic20K1MEeOdBunZhTRw1w" incoming="_SicOT61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicON61MEeOdBunZhTRw1w" name="Fork(z)@2224d7b5" outgoing="_Sic20q1MEeOdBunZhTRw1w" incoming="_SicOUK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SicOOK1MEeOdBunZhTRw1w" name="Fork(r)@20cdbd96" outgoing="_Sic21K1MEeOdBunZhTRw1w" incoming="_SicOUa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOOa1MEeOdBunZhTRw1w" source="_SicNzq1MEeOdBunZhTRw1w" target="_SicOIK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOOq1MEeOdBunZhTRw1w" source="_SicN0a1MEeOdBunZhTRw1w" target="_SicOIa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOO61MEeOdBunZhTRw1w" source="_SicN1K1MEeOdBunZhTRw1w" target="_SicOIq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOPK1MEeOdBunZhTRw1w" source="_SicN161MEeOdBunZhTRw1w" target="_SicOI61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOPa1MEeOdBunZhTRw1w" source="_SicN2q1MEeOdBunZhTRw1w" target="_SicOJK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOPq1MEeOdBunZhTRw1w" source="_SicN3a1MEeOdBunZhTRw1w" target="_SicOJa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOP61MEeOdBunZhTRw1w" source="_SicN4K1MEeOdBunZhTRw1w" target="_SicOJq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOQK1MEeOdBunZhTRw1w" source="_SicN461MEeOdBunZhTRw1w" target="_SicOJ61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOQa1MEeOdBunZhTRw1w" source="_SicN5q1MEeOdBunZhTRw1w" target="_SicOKK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOQq1MEeOdBunZhTRw1w" source="_SicN6a1MEeOdBunZhTRw1w" target="_SicOKa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOQ61MEeOdBunZhTRw1w" source="_SicN7K1MEeOdBunZhTRw1w" target="_SicOKq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicORK1MEeOdBunZhTRw1w" source="_SicN761MEeOdBunZhTRw1w" target="_SicOK61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicORa1MEeOdBunZhTRw1w" source="_SicN8q1MEeOdBunZhTRw1w" target="_SicOLK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicORq1MEeOdBunZhTRw1w" source="_SicN9a1MEeOdBunZhTRw1w" target="_SicOLa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOR61MEeOdBunZhTRw1w" source="_SicN-K1MEeOdBunZhTRw1w" target="_SicOLq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOSK1MEeOdBunZhTRw1w" source="_SicN-61MEeOdBunZhTRw1w" target="_SicOL61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOSa1MEeOdBunZhTRw1w" source="_SicN_q1MEeOdBunZhTRw1w" target="_SicOMK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOSq1MEeOdBunZhTRw1w" source="_SicOAa1MEeOdBunZhTRw1w" target="_SicOMa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOS61MEeOdBunZhTRw1w" source="_SicOBK1MEeOdBunZhTRw1w" target="_SicOMq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOTK1MEeOdBunZhTRw1w" source="_SicOB61MEeOdBunZhTRw1w" target="_SicOM61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOTa1MEeOdBunZhTRw1w" source="_SicOCq1MEeOdBunZhTRw1w" target="_SicONK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOTq1MEeOdBunZhTRw1w" source="_SicODa1MEeOdBunZhTRw1w" target="_SicONa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOT61MEeOdBunZhTRw1w" source="_SicOEK1MEeOdBunZhTRw1w" target="_SicONq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOUK1MEeOdBunZhTRw1w" source="_SicOE61MEeOdBunZhTRw1w" target="_SicON61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOUa1MEeOdBunZhTRw1w" source="_SicOFq1MEeOdBunZhTRw1w" target="_SicOOK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOUq1MEeOdBunZhTRw1w" source="_SicOHa1MEeOdBunZhTRw1w" target="_SicOGa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SicOU61MEeOdBunZhTRw1w" name="ExpressionStatement@78713b2" outgoing="_Sic2p61MEeOdBunZhTRw1w" incoming="_Sic2pa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SicOVK1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SicOc61MEeOdBunZhTRw1w" behavior="_SieF5K1MEeOdBunZhTRw1w">
              <argument xmi:id="_SicOVa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SicOca1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOVq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOV61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SicOWK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_Sic2pK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOWa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOWq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SicOW61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SicOcq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOXK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOXa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SicOXq1MEeOdBunZhTRw1w" name="Tuple@26f54537" outgoing="_SicOc61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SicOX61MEeOdBunZhTRw1w" name="Value(&quot;i&quot;)">
                <result xmi:id="_SicOYK1MEeOdBunZhTRw1w" name="Value(&quot;i&quot;).result" outgoing="_SicOca1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOYa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOYq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SicOY61MEeOdBunZhTRw1w" value="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SicOZK1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_SicOZa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SicOcK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOZq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOZ61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SicOaK1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SicOaa1MEeOdBunZhTRw1w" name="Call(Neg)">
                <argument xmi:id="_SicOaq1MEeOdBunZhTRw1w" name="Call(Neg).argument(x)" incoming="_SicOcK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOa61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicObK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SicOba1MEeOdBunZhTRw1w" name="Call(Neg).result(result)" outgoing="_SicOcq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicObq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOb61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Neg"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOcK1MEeOdBunZhTRw1w" source="_SicOZa1MEeOdBunZhTRw1w" target="_SicOaq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOca1MEeOdBunZhTRw1w" source="_SicOYK1MEeOdBunZhTRw1w" target="_SicOVa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOcq1MEeOdBunZhTRw1w" source="_SicOba1MEeOdBunZhTRw1w" target="_SicOW61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SicOc61MEeOdBunZhTRw1w" source="_SicOXq1MEeOdBunZhTRw1w" target="_SicOVK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SicOdK1MEeOdBunZhTRw1w" name="ExpressionStatement@19809f74" outgoing="_Sic2qa1MEeOdBunZhTRw1w" incoming="_Sic2p61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SicOda1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SicOjK1MEeOdBunZhTRw1w" behavior="_SieF5K1MEeOdBunZhTRw1w">
              <argument xmi:id="_SicOdq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SicOiq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOd61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOeK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SicOea1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_Sic2pq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOeq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOe61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SicOfK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SicOi61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOfa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOfq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SicOf61MEeOdBunZhTRw1w" name="Tuple@50694ce4" outgoing="_SicOjK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SicOgK1MEeOdBunZhTRw1w" name="Value(&quot;j&quot;)">
                <result xmi:id="_SicOga1MEeOdBunZhTRw1w" name="Value(&quot;j&quot;).result" outgoing="_SicOiq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOgq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOg61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SicOhK1MEeOdBunZhTRw1w" value="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SicOha1MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_SicOhq1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_SicOi61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOh61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOiK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SicOia1MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOiq1MEeOdBunZhTRw1w" source="_SicOga1MEeOdBunZhTRw1w" target="_SicOdq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SicOi61MEeOdBunZhTRw1w" source="_SicOhq1MEeOdBunZhTRw1w" target="_SicOfK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SicOjK1MEeOdBunZhTRw1w" source="_SicOf61MEeOdBunZhTRw1w" target="_SicOda1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SicOja1MEeOdBunZhTRw1w" name="ExpressionStatement@12b8f08c" outgoing="_Sic2q61MEeOdBunZhTRw1w" incoming="_Sic2qa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SicOjq1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_Sic06q1MEeOdBunZhTRw1w" behavior="_SieF5K1MEeOdBunZhTRw1w">
              <argument xmi:id="_SicOj61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_Sic06K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOkK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOka1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SicOkq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_Sic2qK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOk61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOlK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SicOla1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_Sic06a1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOlq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOl61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SicOmK1MEeOdBunZhTRw1w" name="Tuple@7c76a538" outgoing="_Sic06q1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SicOma1MEeOdBunZhTRw1w" name="Value(&quot;bs&quot;)">
                <result xmi:id="_SicOmq1MEeOdBunZhTRw1w" name="Value(&quot;bs&quot;).result" outgoing="_Sic06K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOm61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOnK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SicOna1MEeOdBunZhTRw1w" value="bs">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SicOnq1MEeOdBunZhTRw1w" name="Value(56)">
                <result xmi:id="_SicOn61MEeOdBunZhTRw1w" name="Value(56).result" outgoing="_Sic0561MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOoK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SicOoa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SicOoq1MEeOdBunZhTRw1w" value="56">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SicOo61MEeOdBunZhTRw1w" name="CastExpression@4adc76f8" mode="parallel" outputElement="_Sic05q1MEeOdBunZhTRw1w" inputElement="_Sic05a1MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_SicOpK1MEeOdBunZhTRw1w" name="Merge(CastExpression@4adc76f8.operand)" outgoing="_Sic05K1MEeOdBunZhTRw1w" incoming="_Sic03q1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SicOpa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_SicOpq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer).object" incoming="_Sic03a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SicOp61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic00K1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_Sic00a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer).result" outgoing="_Sic04K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic00q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic0061MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sic01K1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(Integer).object)" outgoing="_Sic03a1MEeOdBunZhTRw1w _Sic0361MEeOdBunZhTRw1w" incoming="_Sic0461MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic01a1MEeOdBunZhTRw1w" name="Call(ToBitString)">
                  <argument xmi:id="_Sic01q1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sic04a1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic0161MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic02K1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Sic02a1MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_Sic03q1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic02q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic0261MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_Sic03K1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(Integer).result)" outgoing="_Sic04a1MEeOdBunZhTRw1w" incoming="_Sic0361MEeOdBunZhTRw1w _Sic04K1MEeOdBunZhTRw1w" decisionInputFlow="_Sic04K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic03a1MEeOdBunZhTRw1w" source="_Sic01K1MEeOdBunZhTRw1w" target="_SicOpq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic03q1MEeOdBunZhTRw1w" source="_Sic02a1MEeOdBunZhTRw1w" target="_SicOpK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic0361MEeOdBunZhTRw1w" source="_Sic01K1MEeOdBunZhTRw1w" target="_Sic03K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic04K1MEeOdBunZhTRw1w" source="_Sic00a1MEeOdBunZhTRw1w" target="_Sic03K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic04a1MEeOdBunZhTRw1w" source="_Sic03K1MEeOdBunZhTRw1w" target="_Sic01q1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sic04q1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic0461MEeOdBunZhTRw1w" source="_Sic05a1MEeOdBunZhTRw1w" target="_Sic01K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic05K1MEeOdBunZhTRw1w" source="_SicOpK1MEeOdBunZhTRw1w" target="_Sic05q1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sic05a1MEeOdBunZhTRw1w" name="CastExpression@4adc76f8.inputElement" outgoing="_Sic0461MEeOdBunZhTRw1w" incoming="_Sic0561MEeOdBunZhTRw1w" regionAsInput="_SicOo61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sic05q1MEeOdBunZhTRw1w" name="CastExpression@4adc76f8.outputElement" outgoing="_Sic06a1MEeOdBunZhTRw1w" incoming="_Sic05K1MEeOdBunZhTRw1w" regionAsOutput="_SicOo61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic0561MEeOdBunZhTRw1w" source="_SicOn61MEeOdBunZhTRw1w" target="_Sic05a1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic06K1MEeOdBunZhTRw1w" source="_SicOmq1MEeOdBunZhTRw1w" target="_SicOj61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic06a1MEeOdBunZhTRw1w" source="_Sic05q1MEeOdBunZhTRw1w" target="_SicOla1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic06q1MEeOdBunZhTRw1w" source="_SicOmK1MEeOdBunZhTRw1w" target="_SicOjq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic0661MEeOdBunZhTRw1w" name="ExpressionStatement@59e3f663" outgoing="_Sic2ra1MEeOdBunZhTRw1w" incoming="_Sic2q61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic07K1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_Sic1A61MEeOdBunZhTRw1w" behavior="_SieF5K1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic07a1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_Sic1Aa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic07q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic0761MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic08K1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_Sic2qq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic08a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic08q1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic0861MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_Sic1Aq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic09K1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic09a1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic09q1MEeOdBunZhTRw1w" name="Tuple@63d7a611" outgoing="_Sic1A61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic0961MEeOdBunZhTRw1w" name="Value(&quot;h&quot;)">
                <result xmi:id="_Sic0-K1MEeOdBunZhTRw1w" name="Value(&quot;h&quot;).result" outgoing="_Sic1Aa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic0-a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic0-q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic0-61MEeOdBunZhTRw1w" value="h">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic0_K1MEeOdBunZhTRw1w" name="Value(56)">
                <result xmi:id="_Sic0_a1MEeOdBunZhTRw1w" name="Value(56).result" outgoing="_Sic1Aq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic0_q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic0_61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic1AK1MEeOdBunZhTRw1w" value="56">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1Aa1MEeOdBunZhTRw1w" source="_Sic0-K1MEeOdBunZhTRw1w" target="_Sic07a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1Aq1MEeOdBunZhTRw1w" source="_Sic0_a1MEeOdBunZhTRw1w" target="_Sic0861MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1A61MEeOdBunZhTRw1w" source="_Sic09q1MEeOdBunZhTRw1w" target="_Sic07K1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1BK1MEeOdBunZhTRw1w" name="ExpressionStatement@2bc9e90c" outgoing="_Sic2r61MEeOdBunZhTRw1w" incoming="_Sic2ra1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic1Ba1MEeOdBunZhTRw1w" name="Call(AssertFalse)" incoming="_Sic1E61MEeOdBunZhTRw1w" behavior="_SieHD61MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic1Bq1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(label)" incoming="_Sic1Eq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1B61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1CK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1Ca1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(condition)" incoming="_Sic2rK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1Cq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1C61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1DK1MEeOdBunZhTRw1w" name="Tuple@1a2603f4" outgoing="_Sic1E61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1Da1MEeOdBunZhTRw1w" name="Value(&quot;a&quot;)">
                <result xmi:id="_Sic1Dq1MEeOdBunZhTRw1w" name="Value(&quot;a&quot;).result" outgoing="_Sic1Eq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1D61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1EK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic1Ea1MEeOdBunZhTRw1w" value="a">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1Eq1MEeOdBunZhTRw1w" source="_Sic1Dq1MEeOdBunZhTRw1w" target="_Sic1Bq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1E61MEeOdBunZhTRw1w" source="_Sic1DK1MEeOdBunZhTRw1w" target="_Sic1Ba1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1FK1MEeOdBunZhTRw1w" name="ExpressionStatement@1a8295f7" outgoing="_Sic2sa1MEeOdBunZhTRw1w" incoming="_Sic2r61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic1Fa1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Sic1I61MEeOdBunZhTRw1w" behavior="_SieqVK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic1Fq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Sic1Iq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1F61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1GK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1Ga1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Sic2rq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1Gq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1G61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1HK1MEeOdBunZhTRw1w" name="Tuple@5ee5b357" outgoing="_Sic1I61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1Ha1MEeOdBunZhTRw1w" name="Value(&quot;b&quot;)">
                <result xmi:id="_Sic1Hq1MEeOdBunZhTRw1w" name="Value(&quot;b&quot;).result" outgoing="_Sic1Iq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1H61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1IK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic1Ia1MEeOdBunZhTRw1w" value="b">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1Iq1MEeOdBunZhTRw1w" source="_Sic1Hq1MEeOdBunZhTRw1w" target="_Sic1Fq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1I61MEeOdBunZhTRw1w" source="_Sic1HK1MEeOdBunZhTRw1w" target="_Sic1Fa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1JK1MEeOdBunZhTRw1w" name="ExpressionStatement@afd862b" outgoing="_Sic2s61MEeOdBunZhTRw1w" incoming="_Sic2sa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic1Ja1MEeOdBunZhTRw1w" name="Call(AssertFalse)" incoming="_Sic1M61MEeOdBunZhTRw1w" behavior="_SieHD61MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic1Jq1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(label)" incoming="_Sic1Mq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1J61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1KK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1Ka1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(condition)" incoming="_Sic2sK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1Kq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1K61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1LK1MEeOdBunZhTRw1w" name="Tuple@551a2f91" outgoing="_Sic1M61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1La1MEeOdBunZhTRw1w" name="Value(&quot;c&quot;)">
                <result xmi:id="_Sic1Lq1MEeOdBunZhTRw1w" name="Value(&quot;c&quot;).result" outgoing="_Sic1Mq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1L61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1MK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic1Ma1MEeOdBunZhTRw1w" value="c">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1Mq1MEeOdBunZhTRw1w" source="_Sic1Lq1MEeOdBunZhTRw1w" target="_Sic1Jq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1M61MEeOdBunZhTRw1w" source="_Sic1LK1MEeOdBunZhTRw1w" target="_Sic1Ja1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1NK1MEeOdBunZhTRw1w" name="ExpressionStatement@54feec5f" outgoing="_Sic2ta1MEeOdBunZhTRw1w" incoming="_Sic2s61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic1Na1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Sic1Q61MEeOdBunZhTRw1w" behavior="_SieqVK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic1Nq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Sic1Qq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1N61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1OK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1Oa1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Sic2sq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1Oq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1O61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1PK1MEeOdBunZhTRw1w" name="Tuple@73775808" outgoing="_Sic1Q61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1Pa1MEeOdBunZhTRw1w" name="Value(&quot;d&quot;)">
                <result xmi:id="_Sic1Pq1MEeOdBunZhTRw1w" name="Value(&quot;d&quot;).result" outgoing="_Sic1Qq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1P61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1QK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic1Qa1MEeOdBunZhTRw1w" value="d">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1Qq1MEeOdBunZhTRw1w" source="_Sic1Pq1MEeOdBunZhTRw1w" target="_Sic1Nq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1Q61MEeOdBunZhTRw1w" source="_Sic1PK1MEeOdBunZhTRw1w" target="_Sic1Na1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1RK1MEeOdBunZhTRw1w" name="ExpressionStatement@5fabe075" outgoing="_Sic2t61MEeOdBunZhTRw1w" incoming="_Sic2ta1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic1Ra1MEeOdBunZhTRw1w" name="Call(AssertFalse)" incoming="_Sic1U61MEeOdBunZhTRw1w" behavior="_SieHD61MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic1Rq1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(label)" incoming="_Sic1Uq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1R61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1SK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1Sa1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(condition)" incoming="_Sic2tK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1Sq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1S61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1TK1MEeOdBunZhTRw1w" name="Tuple@2f116cfd" outgoing="_Sic1U61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1Ta1MEeOdBunZhTRw1w" name="Value(&quot;e&quot;)">
                <result xmi:id="_Sic1Tq1MEeOdBunZhTRw1w" name="Value(&quot;e&quot;).result" outgoing="_Sic1Uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1T61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1UK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic1Ua1MEeOdBunZhTRw1w" value="e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1Uq1MEeOdBunZhTRw1w" source="_Sic1Tq1MEeOdBunZhTRw1w" target="_Sic1Rq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1U61MEeOdBunZhTRw1w" source="_Sic1TK1MEeOdBunZhTRw1w" target="_Sic1Ra1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1VK1MEeOdBunZhTRw1w" name="ExpressionStatement@60a8ecc3" outgoing="_Sic2ua1MEeOdBunZhTRw1w" incoming="_Sic2t61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic1Va1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Sic1Y61MEeOdBunZhTRw1w" behavior="_SieqVK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic1Vq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Sic1Yq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1V61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1WK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1Wa1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Sic2tq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1Wq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1W61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1XK1MEeOdBunZhTRw1w" name="Tuple@1b416af" outgoing="_Sic1Y61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1Xa1MEeOdBunZhTRw1w" name="Value(&quot;e1&quot;)">
                <result xmi:id="_Sic1Xq1MEeOdBunZhTRw1w" name="Value(&quot;e1&quot;).result" outgoing="_Sic1Yq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1X61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1YK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic1Ya1MEeOdBunZhTRw1w" value="e1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1Yq1MEeOdBunZhTRw1w" source="_Sic1Xq1MEeOdBunZhTRw1w" target="_Sic1Vq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1Y61MEeOdBunZhTRw1w" source="_Sic1XK1MEeOdBunZhTRw1w" target="_Sic1Va1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1ZK1MEeOdBunZhTRw1w" name="ExpressionStatement@5c7c3b08" outgoing="_Sic2u61MEeOdBunZhTRw1w" incoming="_Sic2ua1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic1Za1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Sic1c61MEeOdBunZhTRw1w" behavior="_SieqVK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic1Zq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Sic1cq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1Z61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1aK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1aa1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Sic2uK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1aq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1a61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1bK1MEeOdBunZhTRw1w" name="Tuple@6af7aef4" outgoing="_Sic1c61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1ba1MEeOdBunZhTRw1w" name="Value(&quot;e2&quot;)">
                <result xmi:id="_Sic1bq1MEeOdBunZhTRw1w" name="Value(&quot;e2&quot;).result" outgoing="_Sic1cq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1b61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1cK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic1ca1MEeOdBunZhTRw1w" value="e2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1cq1MEeOdBunZhTRw1w" source="_Sic1bq1MEeOdBunZhTRw1w" target="_Sic1Zq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1c61MEeOdBunZhTRw1w" source="_Sic1bK1MEeOdBunZhTRw1w" target="_Sic1Za1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1dK1MEeOdBunZhTRw1w" name="ExpressionStatement@5da05f56" outgoing="_Sic2va1MEeOdBunZhTRw1w" incoming="_Sic2u61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic1da1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Sic1g61MEeOdBunZhTRw1w" behavior="_SieqVK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic1dq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Sic1gq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1d61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1eK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1ea1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Sic2uq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1eq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1e61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1fK1MEeOdBunZhTRw1w" name="Tuple@1b1f96bd" outgoing="_Sic1g61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1fa1MEeOdBunZhTRw1w" name="Value(&quot;e3&quot;)">
                <result xmi:id="_Sic1fq1MEeOdBunZhTRw1w" name="Value(&quot;e3&quot;).result" outgoing="_Sic1gq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1f61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1gK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic1ga1MEeOdBunZhTRw1w" value="e3">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1gq1MEeOdBunZhTRw1w" source="_Sic1fq1MEeOdBunZhTRw1w" target="_Sic1dq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1g61MEeOdBunZhTRw1w" source="_Sic1fK1MEeOdBunZhTRw1w" target="_Sic1da1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1hK1MEeOdBunZhTRw1w" name="ExpressionStatement@51691278" outgoing="_Sic2v61MEeOdBunZhTRw1w" incoming="_Sic2va1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic1ha1MEeOdBunZhTRw1w" name="Call(AssertFalse)" incoming="_Sic1k61MEeOdBunZhTRw1w" behavior="_SieHD61MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic1hq1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(label)" incoming="_Sic1kq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1h61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1iK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1ia1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(condition)" incoming="_Sic2vK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1iq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1i61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1jK1MEeOdBunZhTRw1w" name="Tuple@66e2cf6e" outgoing="_Sic1k61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1ja1MEeOdBunZhTRw1w" name="Value(&quot;e4&quot;)">
                <result xmi:id="_Sic1jq1MEeOdBunZhTRw1w" name="Value(&quot;e4&quot;).result" outgoing="_Sic1kq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1j61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1kK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic1ka1MEeOdBunZhTRw1w" value="e4">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1kq1MEeOdBunZhTRw1w" source="_Sic1jq1MEeOdBunZhTRw1w" target="_Sic1hq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1k61MEeOdBunZhTRw1w" source="_Sic1jK1MEeOdBunZhTRw1w" target="_Sic1ha1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1lK1MEeOdBunZhTRw1w" name="ExpressionStatement@f0d9cd" outgoing="_Sic2wa1MEeOdBunZhTRw1w" incoming="_Sic2v61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic1la1MEeOdBunZhTRw1w" name="Call(AssertFalse)" incoming="_Sic1o61MEeOdBunZhTRw1w" behavior="_SieHD61MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic1lq1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(label)" incoming="_Sic1oq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1l61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1mK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1ma1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(condition)" incoming="_Sic2vq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1mq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1m61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1nK1MEeOdBunZhTRw1w" name="Tuple@54d679d" outgoing="_Sic1o61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1na1MEeOdBunZhTRw1w" name="Value(&quot;e5&quot;)">
                <result xmi:id="_Sic1nq1MEeOdBunZhTRw1w" name="Value(&quot;e5&quot;).result" outgoing="_Sic1oq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1n61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1oK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic1oa1MEeOdBunZhTRw1w" value="e5">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1oq1MEeOdBunZhTRw1w" source="_Sic1nq1MEeOdBunZhTRw1w" target="_Sic1lq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1o61MEeOdBunZhTRw1w" source="_Sic1nK1MEeOdBunZhTRw1w" target="_Sic1la1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1pK1MEeOdBunZhTRw1w" name="ExpressionStatement@298bdc03" outgoing="_Sic2w61MEeOdBunZhTRw1w" incoming="_Sic2wa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic1pa1MEeOdBunZhTRw1w" name="Call(AssertFalse)" incoming="_Sic1s61MEeOdBunZhTRw1w" behavior="_SieHD61MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic1pq1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(label)" incoming="_Sic1sq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1p61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1qK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1qa1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(condition)" incoming="_Sic2wK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1qq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1q61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1rK1MEeOdBunZhTRw1w" name="Tuple@40dd4992" outgoing="_Sic1s61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1ra1MEeOdBunZhTRw1w" name="Value(&quot;e6&quot;)">
                <result xmi:id="_Sic1rq1MEeOdBunZhTRw1w" name="Value(&quot;e6&quot;).result" outgoing="_Sic1sq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1r61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1sK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic1sa1MEeOdBunZhTRw1w" value="e6">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1sq1MEeOdBunZhTRw1w" source="_Sic1rq1MEeOdBunZhTRw1w" target="_Sic1pq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1s61MEeOdBunZhTRw1w" source="_Sic1rK1MEeOdBunZhTRw1w" target="_Sic1pa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1tK1MEeOdBunZhTRw1w" name="ExpressionStatement@5d27af65" outgoing="_Sic2xa1MEeOdBunZhTRw1w" incoming="_Sic2w61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic1ta1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Sic1w61MEeOdBunZhTRw1w" behavior="_SieqVK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic1tq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Sic1wq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1t61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1uK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1ua1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Sic2wq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1uq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1u61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1vK1MEeOdBunZhTRw1w" name="Tuple@6b1bbefc" outgoing="_Sic1w61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1va1MEeOdBunZhTRw1w" name="Value(&quot;e7&quot;)">
                <result xmi:id="_Sic1vq1MEeOdBunZhTRw1w" name="Value(&quot;e7&quot;).result" outgoing="_Sic1wq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1v61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1wK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic1wa1MEeOdBunZhTRw1w" value="e7">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic1wq1MEeOdBunZhTRw1w" source="_Sic1vq1MEeOdBunZhTRw1w" target="_Sic1tq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1w61MEeOdBunZhTRw1w" source="_Sic1vK1MEeOdBunZhTRw1w" target="_Sic1ta1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1xK1MEeOdBunZhTRw1w" name="ExpressionStatement@6fab9b06" outgoing="_Sic2x61MEeOdBunZhTRw1w" incoming="_Sic2xa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic1xa1MEeOdBunZhTRw1w" name="Call(AssertFalse)" incoming="_Sic1061MEeOdBunZhTRw1w" behavior="_SieHD61MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic1xq1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(label)" incoming="_Sic10q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1x61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1yK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1ya1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(condition)" incoming="_Sic2xK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1yq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1y61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1zK1MEeOdBunZhTRw1w" name="Tuple@55470387" outgoing="_Sic1061MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1za1MEeOdBunZhTRw1w" name="Value(&quot;e8&quot;)">
                <result xmi:id="_Sic1zq1MEeOdBunZhTRw1w" name="Value(&quot;e8&quot;).result" outgoing="_Sic10q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1z61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic10K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic10a1MEeOdBunZhTRw1w" value="e8">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic10q1MEeOdBunZhTRw1w" source="_Sic1zq1MEeOdBunZhTRw1w" target="_Sic1xq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1061MEeOdBunZhTRw1w" source="_Sic1zK1MEeOdBunZhTRw1w" target="_Sic1xa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic11K1MEeOdBunZhTRw1w" name="ExpressionStatement@451d154" outgoing="_Sic2ya1MEeOdBunZhTRw1w" incoming="_Sic2x61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic11a1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Sic1461MEeOdBunZhTRw1w" behavior="_SieqVK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic11q1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Sic14q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1161MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic12K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic12a1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Sic2xq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic12q1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1261MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic13K1MEeOdBunZhTRw1w" name="Tuple@37be3f38" outgoing="_Sic1461MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic13a1MEeOdBunZhTRw1w" name="Value(&quot;e9&quot;)">
                <result xmi:id="_Sic13q1MEeOdBunZhTRw1w" name="Value(&quot;e9&quot;).result" outgoing="_Sic14q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1361MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic14K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic14a1MEeOdBunZhTRw1w" value="e9">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic14q1MEeOdBunZhTRw1w" source="_Sic13q1MEeOdBunZhTRw1w" target="_Sic11q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1461MEeOdBunZhTRw1w" source="_Sic13K1MEeOdBunZhTRw1w" target="_Sic11a1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic15K1MEeOdBunZhTRw1w" name="ExpressionStatement@35fbadc6" outgoing="_Sic2y61MEeOdBunZhTRw1w" incoming="_Sic2ya1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic15a1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Sic1861MEeOdBunZhTRw1w" behavior="_SieqVK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic15q1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Sic18q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1561MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic16K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic16a1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Sic2yK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic16q1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1661MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic17K1MEeOdBunZhTRw1w" name="Tuple@66549db2" outgoing="_Sic1861MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic17a1MEeOdBunZhTRw1w" name="Value(&quot;f&quot;)">
                <result xmi:id="_Sic17q1MEeOdBunZhTRw1w" name="Value(&quot;f&quot;).result" outgoing="_Sic18q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1761MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic18K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic18a1MEeOdBunZhTRw1w" value="f">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic18q1MEeOdBunZhTRw1w" source="_Sic17q1MEeOdBunZhTRw1w" target="_Sic15q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic1861MEeOdBunZhTRw1w" source="_Sic17K1MEeOdBunZhTRw1w" target="_Sic15a1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic19K1MEeOdBunZhTRw1w" name="ExpressionStatement@40f8c46e" outgoing="_Sic2za1MEeOdBunZhTRw1w" incoming="_Sic2y61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic19a1MEeOdBunZhTRw1w" name="Call(AssertFalse)" incoming="_Sic2A61MEeOdBunZhTRw1w" behavior="_SieHD61MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic19q1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(label)" incoming="_Sic2Aq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1961MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1-K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic1-a1MEeOdBunZhTRw1w" name="Call(AssertFalse).argument(condition)" incoming="_Sic2yq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1-q1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic1-61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic1_K1MEeOdBunZhTRw1w" name="Tuple@50b4a4b8" outgoing="_Sic2A61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic1_a1MEeOdBunZhTRw1w" name="Value(&quot;f1&quot;)">
                <result xmi:id="_Sic1_q1MEeOdBunZhTRw1w" name="Value(&quot;f1&quot;).result" outgoing="_Sic2Aq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic1_61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2AK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic2Aa1MEeOdBunZhTRw1w" value="f1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2Aq1MEeOdBunZhTRw1w" source="_Sic1_q1MEeOdBunZhTRw1w" target="_Sic19q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2A61MEeOdBunZhTRw1w" source="_Sic1_K1MEeOdBunZhTRw1w" target="_Sic19a1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2BK1MEeOdBunZhTRw1w" name="ExpressionStatement@6f613631" outgoing="_Sic2z61MEeOdBunZhTRw1w" incoming="_Sic2za1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic2Ba1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_Sic2E61MEeOdBunZhTRw1w" behavior="_SieqVK1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic2Bq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_Sic2Eq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2B61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2CK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic2Ca1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_Sic2zK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2Cq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2C61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2DK1MEeOdBunZhTRw1w" name="Tuple@dd22554" outgoing="_Sic2E61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic2Da1MEeOdBunZhTRw1w" name="Value(&quot;f2&quot;)">
                <result xmi:id="_Sic2Dq1MEeOdBunZhTRw1w" name="Value(&quot;f2&quot;).result" outgoing="_Sic2Eq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2D61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2EK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic2Ea1MEeOdBunZhTRw1w" value="f2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2Eq1MEeOdBunZhTRw1w" source="_Sic2Dq1MEeOdBunZhTRw1w" target="_Sic2Bq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2E61MEeOdBunZhTRw1w" source="_Sic2DK1MEeOdBunZhTRw1w" target="_Sic2Ba1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2FK1MEeOdBunZhTRw1w" name="ExpressionStatement@52f56743" outgoing="_Sic20a1MEeOdBunZhTRw1w" incoming="_Sic2z61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic2Fa1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_Sic2LK1MEeOdBunZhTRw1w" behavior="_SieF5K1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic2Fq1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_Sic2Kq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2F61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2GK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic2Ga1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_Sic2zq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2Gq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2G61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic2HK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_Sic2K61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2Ha1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2Hq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2H61MEeOdBunZhTRw1w" name="Tuple@781b5bc1" outgoing="_Sic2LK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic2IK1MEeOdBunZhTRw1w" name="Value(&quot;x&quot;)">
                <result xmi:id="_Sic2Ia1MEeOdBunZhTRw1w" name="Value(&quot;x&quot;).result" outgoing="_Sic2Kq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2Iq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2I61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic2JK1MEeOdBunZhTRw1w" value="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic2Ja1MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_Sic2Jq1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Sic2K61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2J61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2KK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic2Ka1MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2Kq1MEeOdBunZhTRw1w" source="_Sic2Ia1MEeOdBunZhTRw1w" target="_Sic2Fq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2K61MEeOdBunZhTRw1w" source="_Sic2Jq1MEeOdBunZhTRw1w" target="_Sic2HK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2LK1MEeOdBunZhTRw1w" source="_Sic2H61MEeOdBunZhTRw1w" target="_Sic2Fa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2La1MEeOdBunZhTRw1w" name="ExpressionStatement@5c8d1e76" outgoing="_Sic2061MEeOdBunZhTRw1w" incoming="_Sic20a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic2Lq1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_Sic2U61MEeOdBunZhTRw1w" behavior="_Sieqt61MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic2L61MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_Sic2Ua1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2MK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2Ma1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic2Mq1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_Sic20K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2M61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2NK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_Sic2Na1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_Sic2Uq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2Nq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2N61MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2OK1MEeOdBunZhTRw1w" name="Tuple@a74b5ef" outgoing="_Sic2U61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic2Oa1MEeOdBunZhTRw1w" name="Value(&quot;y&quot;)">
                <result xmi:id="_Sic2Oq1MEeOdBunZhTRw1w" name="Value(&quot;y&quot;).result" outgoing="_Sic2Ua1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2O61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2PK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic2Pa1MEeOdBunZhTRw1w" value="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2Pq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@37e376ce">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2P61MEeOdBunZhTRw1w" name="SequenceExpressionList@5d0bd26b#1" outgoing="_Sic2Tq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic2QK1MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_Sic2Qa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Sic2T61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2Qq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2Q61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Sic2RK1MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2Ra1MEeOdBunZhTRw1w" name="SequenceExpressionList@5d0bd26b#2" incoming="_Sic2Tq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic2Rq1MEeOdBunZhTRw1w" name="Value(2)">
                    <result xmi:id="_Sic2R61MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Sic2UK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2SK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2Sa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Sic2Sq1MEeOdBunZhTRw1w" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_Sic2S61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@37e376ce.output" outgoing="_Sic2Uq1MEeOdBunZhTRw1w" incoming="_Sic2T61MEeOdBunZhTRw1w _Sic2UK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2TK1MEeOdBunZhTRw1w" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2Ta1MEeOdBunZhTRw1w" value="2"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2Tq1MEeOdBunZhTRw1w" source="_Sic2P61MEeOdBunZhTRw1w" target="_Sic2Ra1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2T61MEeOdBunZhTRw1w" source="_Sic2Qa1MEeOdBunZhTRw1w" target="_Sic2S61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2UK1MEeOdBunZhTRw1w" source="_Sic2R61MEeOdBunZhTRw1w" target="_Sic2S61MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2Ua1MEeOdBunZhTRw1w" source="_Sic2Oq1MEeOdBunZhTRw1w" target="_Sic2L61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2Uq1MEeOdBunZhTRw1w" source="_Sic2S61MEeOdBunZhTRw1w" target="_Sic2Na1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2U61MEeOdBunZhTRw1w" source="_Sic2OK1MEeOdBunZhTRw1w" target="_Sic2Lq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2VK1MEeOdBunZhTRw1w" name="ExpressionStatement@378d0069" outgoing="_Sic21a1MEeOdBunZhTRw1w" incoming="_Sic2061MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic2Va1MEeOdBunZhTRw1w" name="Call(AssertList)" incoming="_Sic2eq1MEeOdBunZhTRw1w" behavior="_Sieqt61MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic2Vq1MEeOdBunZhTRw1w" name="Call(AssertList).argument(label)" incoming="_Sic2eK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2V61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2WK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic2Wa1MEeOdBunZhTRw1w" name="Call(AssertList).argument(list)" incoming="_Sic20q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2Wq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2W61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_Sic2XK1MEeOdBunZhTRw1w" name="Call(AssertList).argument(expected)" incoming="_Sic2ea1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2Xa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2Xq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2X61MEeOdBunZhTRw1w" name="Tuple@2ea64c1b" outgoing="_Sic2eq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic2YK1MEeOdBunZhTRw1w" name="Value(&quot;z&quot;)">
                <result xmi:id="_Sic2Ya1MEeOdBunZhTRw1w" name="Value(&quot;z&quot;).result" outgoing="_Sic2eK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2Yq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2Y61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic2ZK1MEeOdBunZhTRw1w" value="z">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2Za1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@b1ee865">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2Zq1MEeOdBunZhTRw1w" name="SequenceExpressionList@654129ce#1" outgoing="_Sic2da1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic2Z61MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_Sic2aK1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Sic2dq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2aa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2aq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Sic2a61MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2bK1MEeOdBunZhTRw1w" name="SequenceExpressionList@654129ce#2" incoming="_Sic2da1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic2ba1MEeOdBunZhTRw1w" name="Value(2)">
                    <result xmi:id="_Sic2bq1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Sic2d61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2b61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2cK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_Sic2ca1MEeOdBunZhTRw1w" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_Sic2cq1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@b1ee865.output" outgoing="_Sic2ea1MEeOdBunZhTRw1w" incoming="_Sic2dq1MEeOdBunZhTRw1w _Sic2d61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2c61MEeOdBunZhTRw1w" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2dK1MEeOdBunZhTRw1w" value="2"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2da1MEeOdBunZhTRw1w" source="_Sic2Zq1MEeOdBunZhTRw1w" target="_Sic2bK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2dq1MEeOdBunZhTRw1w" source="_Sic2aK1MEeOdBunZhTRw1w" target="_Sic2cq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2d61MEeOdBunZhTRw1w" source="_Sic2bq1MEeOdBunZhTRw1w" target="_Sic2cq1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2eK1MEeOdBunZhTRw1w" source="_Sic2Ya1MEeOdBunZhTRw1w" target="_Sic2Vq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2ea1MEeOdBunZhTRw1w" source="_Sic2cq1MEeOdBunZhTRw1w" target="_Sic2XK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2eq1MEeOdBunZhTRw1w" source="_Sic2X61MEeOdBunZhTRw1w" target="_Sic2Va1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2e61MEeOdBunZhTRw1w" name="ExpressionStatement@3b4002e7" outgoing="_Sic21q1MEeOdBunZhTRw1w" incoming="_Sic21a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic2fK1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_Sic2k61MEeOdBunZhTRw1w" behavior="_SieF5K1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic2fa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_Sic2ka1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2fq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2f61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic2gK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_Sic21K1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2ga1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2gq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sic2g61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_Sic2kq1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2hK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2ha1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2hq1MEeOdBunZhTRw1w" name="Tuple@bd59c7b" outgoing="_Sic2k61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic2h61MEeOdBunZhTRw1w" name="Value(&quot;r&quot;)">
                <result xmi:id="_Sic2iK1MEeOdBunZhTRw1w" name="Value(&quot;r&quot;).result" outgoing="_Sic2ka1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2ia1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2iq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic2i61MEeOdBunZhTRw1w" value="r">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic2jK1MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_Sic2ja1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Sic2kq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2jq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2j61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic2kK1MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2ka1MEeOdBunZhTRw1w" source="_Sic2iK1MEeOdBunZhTRw1w" target="_Sic2fa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2kq1MEeOdBunZhTRw1w" source="_Sic2ja1MEeOdBunZhTRw1w" target="_Sic2g61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2k61MEeOdBunZhTRw1w" source="_Sic2hq1MEeOdBunZhTRw1w" target="_Sic2fK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2lK1MEeOdBunZhTRw1w" name="ExpressionStatement@14814743" incoming="_Sic21q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic2la1MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_Sic2o61MEeOdBunZhTRw1w">
              <argument xmi:id="_Sic2lq1MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_Sic2oq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2l61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2mK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_Sic2ma1MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2mq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2m61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic2nK1MEeOdBunZhTRw1w" name="Tuple@69b133b9" outgoing="_Sic2o61MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic2na1MEeOdBunZhTRw1w" name="Value(&quot;Done&quot;)">
                <result xmi:id="_Sic2nq1MEeOdBunZhTRw1w" name="Value(&quot;Done&quot;).result" outgoing="_Sic2oq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2n61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2oK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_Sic2oa1MEeOdBunZhTRw1w" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2oq1MEeOdBunZhTRw1w" source="_Sic2nq1MEeOdBunZhTRw1w" target="_Sic2lq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2o61MEeOdBunZhTRw1w" source="_Sic2nK1MEeOdBunZhTRw1w" target="_Sic2la1MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2pK1MEeOdBunZhTRw1w" source="_SicOIK1MEeOdBunZhTRw1w" target="_SicOWK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2pa1MEeOdBunZhTRw1w" source="_SicNzK1MEeOdBunZhTRw1w" target="_SicOU61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2pq1MEeOdBunZhTRw1w" source="_SicOIa1MEeOdBunZhTRw1w" target="_SicOea1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2p61MEeOdBunZhTRw1w" source="_SicOU61MEeOdBunZhTRw1w" target="_SicOdK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2qK1MEeOdBunZhTRw1w" source="_SicOIq1MEeOdBunZhTRw1w" target="_SicOkq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2qa1MEeOdBunZhTRw1w" source="_SicOdK1MEeOdBunZhTRw1w" target="_SicOja1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2qq1MEeOdBunZhTRw1w" source="_SicOI61MEeOdBunZhTRw1w" target="_Sic08K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2q61MEeOdBunZhTRw1w" source="_SicOja1MEeOdBunZhTRw1w" target="_Sic0661MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2rK1MEeOdBunZhTRw1w" source="_SicOJK1MEeOdBunZhTRw1w" target="_Sic1Ca1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2ra1MEeOdBunZhTRw1w" source="_Sic0661MEeOdBunZhTRw1w" target="_Sic1BK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2rq1MEeOdBunZhTRw1w" source="_SicOJa1MEeOdBunZhTRw1w" target="_Sic1Ga1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2r61MEeOdBunZhTRw1w" source="_Sic1BK1MEeOdBunZhTRw1w" target="_Sic1FK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2sK1MEeOdBunZhTRw1w" source="_SicOJq1MEeOdBunZhTRw1w" target="_Sic1Ka1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2sa1MEeOdBunZhTRw1w" source="_Sic1FK1MEeOdBunZhTRw1w" target="_Sic1JK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2sq1MEeOdBunZhTRw1w" source="_SicOJ61MEeOdBunZhTRw1w" target="_Sic1Oa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2s61MEeOdBunZhTRw1w" source="_Sic1JK1MEeOdBunZhTRw1w" target="_Sic1NK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2tK1MEeOdBunZhTRw1w" source="_SicOKK1MEeOdBunZhTRw1w" target="_Sic1Sa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2ta1MEeOdBunZhTRw1w" source="_Sic1NK1MEeOdBunZhTRw1w" target="_Sic1RK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2tq1MEeOdBunZhTRw1w" source="_SicOKa1MEeOdBunZhTRw1w" target="_Sic1Wa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2t61MEeOdBunZhTRw1w" source="_Sic1RK1MEeOdBunZhTRw1w" target="_Sic1VK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2uK1MEeOdBunZhTRw1w" source="_SicOKq1MEeOdBunZhTRw1w" target="_Sic1aa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2ua1MEeOdBunZhTRw1w" source="_Sic1VK1MEeOdBunZhTRw1w" target="_Sic1ZK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2uq1MEeOdBunZhTRw1w" source="_SicOK61MEeOdBunZhTRw1w" target="_Sic1ea1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2u61MEeOdBunZhTRw1w" source="_Sic1ZK1MEeOdBunZhTRw1w" target="_Sic1dK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2vK1MEeOdBunZhTRw1w" source="_SicOLK1MEeOdBunZhTRw1w" target="_Sic1ia1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2va1MEeOdBunZhTRw1w" source="_Sic1dK1MEeOdBunZhTRw1w" target="_Sic1hK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2vq1MEeOdBunZhTRw1w" source="_SicOLa1MEeOdBunZhTRw1w" target="_Sic1ma1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2v61MEeOdBunZhTRw1w" source="_Sic1hK1MEeOdBunZhTRw1w" target="_Sic1lK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2wK1MEeOdBunZhTRw1w" source="_SicOLq1MEeOdBunZhTRw1w" target="_Sic1qa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2wa1MEeOdBunZhTRw1w" source="_Sic1lK1MEeOdBunZhTRw1w" target="_Sic1pK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2wq1MEeOdBunZhTRw1w" source="_SicOL61MEeOdBunZhTRw1w" target="_Sic1ua1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2w61MEeOdBunZhTRw1w" source="_Sic1pK1MEeOdBunZhTRw1w" target="_Sic1tK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2xK1MEeOdBunZhTRw1w" source="_SicOMK1MEeOdBunZhTRw1w" target="_Sic1ya1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2xa1MEeOdBunZhTRw1w" source="_Sic1tK1MEeOdBunZhTRw1w" target="_Sic1xK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2xq1MEeOdBunZhTRw1w" source="_SicOMa1MEeOdBunZhTRw1w" target="_Sic12a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2x61MEeOdBunZhTRw1w" source="_Sic1xK1MEeOdBunZhTRw1w" target="_Sic11K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2yK1MEeOdBunZhTRw1w" source="_SicOMq1MEeOdBunZhTRw1w" target="_Sic16a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2ya1MEeOdBunZhTRw1w" source="_Sic11K1MEeOdBunZhTRw1w" target="_Sic15K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2yq1MEeOdBunZhTRw1w" source="_SicOM61MEeOdBunZhTRw1w" target="_Sic1-a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2y61MEeOdBunZhTRw1w" source="_Sic15K1MEeOdBunZhTRw1w" target="_Sic19K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2zK1MEeOdBunZhTRw1w" source="_SicONK1MEeOdBunZhTRw1w" target="_Sic2Ca1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2za1MEeOdBunZhTRw1w" source="_Sic19K1MEeOdBunZhTRw1w" target="_Sic2BK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic2zq1MEeOdBunZhTRw1w" source="_SicONa1MEeOdBunZhTRw1w" target="_Sic2Ga1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2z61MEeOdBunZhTRw1w" source="_Sic2BK1MEeOdBunZhTRw1w" target="_Sic2FK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic20K1MEeOdBunZhTRw1w" source="_SicONq1MEeOdBunZhTRw1w" target="_Sic2Mq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic20a1MEeOdBunZhTRw1w" source="_Sic2FK1MEeOdBunZhTRw1w" target="_Sic2La1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic20q1MEeOdBunZhTRw1w" source="_SicON61MEeOdBunZhTRw1w" target="_Sic2Wa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic2061MEeOdBunZhTRw1w" source="_Sic2La1MEeOdBunZhTRw1w" target="_Sic2VK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic21K1MEeOdBunZhTRw1w" source="_SicOOK1MEeOdBunZhTRw1w" target="_Sic2gK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic21a1MEeOdBunZhTRw1w" source="_Sic2VK1MEeOdBunZhTRw1w" target="_Sic2e61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sic21q1MEeOdBunZhTRw1w" source="_Sic2e61MEeOdBunZhTRw1w" target="_Sic2lK1MEeOdBunZhTRw1w"/>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sic2161MEeOdBunZhTRw1w" name="test$method$1" specification="_SieDLa1MEeOdBunZhTRw1w" group="_Sic3Va1MEeOdBunZhTRw1w" node="_Sic3PK1MEeOdBunZhTRw1w _Sic3Pa1MEeOdBunZhTRw1w _Sic3Pq1MEeOdBunZhTRw1w _Sic3P61MEeOdBunZhTRw1w _Sic3QK1MEeOdBunZhTRw1w _Sic3Qa1MEeOdBunZhTRw1w _Sic3Qq1MEeOdBunZhTRw1w _Sic3Q61MEeOdBunZhTRw1w _Sic3RK1MEeOdBunZhTRw1w _Sic3Ra1MEeOdBunZhTRw1w _Sic3Rq1MEeOdBunZhTRw1w _Sic3R61MEeOdBunZhTRw1w _Sic3SK1MEeOdBunZhTRw1w _Sic3Sa1MEeOdBunZhTRw1w _Sic3Sq1MEeOdBunZhTRw1w _Sic3S61MEeOdBunZhTRw1w _Sic3TK1MEeOdBunZhTRw1w _Sic3Ta1MEeOdBunZhTRw1w _Sic3Tq1MEeOdBunZhTRw1w _Sic3T61MEeOdBunZhTRw1w _Sic3UK1MEeOdBunZhTRw1w _Sic3Ua1MEeOdBunZhTRw1w _Sic3Uq1MEeOdBunZhTRw1w _Sic3U61MEeOdBunZhTRw1w _Sic3VK1MEeOdBunZhTRw1w _Sic3Va1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_Sic22K1MEeOdBunZhTRw1w" name="i" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic22a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic22q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic2261MEeOdBunZhTRw1w" name="j" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic23K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic23a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic23q1MEeOdBunZhTRw1w" name="bs" direction="out">
          <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2361MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic24K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic24a1MEeOdBunZhTRw1w" name="h" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic24q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2461MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic25K1MEeOdBunZhTRw1w" name="a" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic25a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic25q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic2561MEeOdBunZhTRw1w" name="b" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic26K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic26a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic26q1MEeOdBunZhTRw1w" name="c" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2661MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic27K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic27a1MEeOdBunZhTRw1w" name="d" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic27q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2761MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic28K1MEeOdBunZhTRw1w" name="e" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic28a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic28q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic2861MEeOdBunZhTRw1w" name="e1" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic29K1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic29a1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic29q1MEeOdBunZhTRw1w" name="e2" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2961MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2-K1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic2-a1MEeOdBunZhTRw1w" name="e3" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2-q1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2-61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic2_K1MEeOdBunZhTRw1w" name="e4" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic2_a1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic2_q1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic2_61MEeOdBunZhTRw1w" name="e5" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3AK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3Aa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic3Aq1MEeOdBunZhTRw1w" name="e6" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3A61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3BK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic3Ba1MEeOdBunZhTRw1w" name="e7" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3Bq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3B61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic3CK1MEeOdBunZhTRw1w" name="e8" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3Ca1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3Cq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic3C61MEeOdBunZhTRw1w" name="e9" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3DK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3Da1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic3Dq1MEeOdBunZhTRw1w" name="f" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3D61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3EK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic3Ea1MEeOdBunZhTRw1w" name="f1" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3Eq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3E61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic3FK1MEeOdBunZhTRw1w" name="f2" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3Fa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3Fq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic3F61MEeOdBunZhTRw1w" name="x" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3GK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3Ga1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic3Gq1MEeOdBunZhTRw1w" name="y" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3G61MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3HK1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic3Ha1MEeOdBunZhTRw1w" name="z" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3Hq1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3H61MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sic3IK1MEeOdBunZhTRw1w" name="r" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3Ia1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3Iq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3I61MEeOdBunZhTRw1w" source="_SidfgK1MEeOdBunZhTRw1w" target="_Sic3PK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3JK1MEeOdBunZhTRw1w" source="_Sidfg61MEeOdBunZhTRw1w" target="_Sic3Pa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3Ja1MEeOdBunZhTRw1w" source="_Sidfhq1MEeOdBunZhTRw1w" target="_Sic3Pq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3Jq1MEeOdBunZhTRw1w" source="_Sidfia1MEeOdBunZhTRw1w" target="_Sic3P61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3J61MEeOdBunZhTRw1w" source="_SidfjK1MEeOdBunZhTRw1w" target="_Sic3QK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3KK1MEeOdBunZhTRw1w" source="_Sidfj61MEeOdBunZhTRw1w" target="_Sic3Qa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3Ka1MEeOdBunZhTRw1w" source="_Sidfkq1MEeOdBunZhTRw1w" target="_Sic3Qq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3Kq1MEeOdBunZhTRw1w" source="_Sidfla1MEeOdBunZhTRw1w" target="_Sic3Q61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3K61MEeOdBunZhTRw1w" source="_SidfmK1MEeOdBunZhTRw1w" target="_Sic3RK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3LK1MEeOdBunZhTRw1w" source="_Sidfm61MEeOdBunZhTRw1w" target="_Sic3Ra1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3La1MEeOdBunZhTRw1w" source="_Sidfnq1MEeOdBunZhTRw1w" target="_Sic3Rq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3Lq1MEeOdBunZhTRw1w" source="_Sidfoa1MEeOdBunZhTRw1w" target="_Sic3R61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3L61MEeOdBunZhTRw1w" source="_SidfpK1MEeOdBunZhTRw1w" target="_Sic3SK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3MK1MEeOdBunZhTRw1w" source="_Sidfp61MEeOdBunZhTRw1w" target="_Sic3Sa1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3Ma1MEeOdBunZhTRw1w" source="_Sidfqq1MEeOdBunZhTRw1w" target="_Sic3Sq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3Mq1MEeOdBunZhTRw1w" source="_Sidfra1MEeOdBunZhTRw1w" target="_Sic3S61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3M61MEeOdBunZhTRw1w" source="_SidfsK1MEeOdBunZhTRw1w" target="_Sic3TK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3NK1MEeOdBunZhTRw1w" source="_Sidfs61MEeOdBunZhTRw1w" target="_Sic3Ta1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3Na1MEeOdBunZhTRw1w" source="_Sidftq1MEeOdBunZhTRw1w" target="_Sic3Tq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3Nq1MEeOdBunZhTRw1w" source="_Sidfua1MEeOdBunZhTRw1w" target="_Sic3T61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3N61MEeOdBunZhTRw1w" source="_SidfvK1MEeOdBunZhTRw1w" target="_Sic3UK1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3OK1MEeOdBunZhTRw1w" source="_Sidfv61MEeOdBunZhTRw1w" target="_Sic3Ua1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3Oa1MEeOdBunZhTRw1w" source="_Sidfwq1MEeOdBunZhTRw1w" target="_Sic3Uq1MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3Oq1MEeOdBunZhTRw1w" source="_Sidfxa1MEeOdBunZhTRw1w" target="_Sic3U61MEeOdBunZhTRw1w"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3O61MEeOdBunZhTRw1w" source="_SidfyK1MEeOdBunZhTRw1w" target="_Sic3VK1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_Sic3Va1MEeOdBunZhTRw1w" name="Body(test$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3Vq1MEeOdBunZhTRw1w" name="ExpressionStatement@5f144e9b" outgoing="_Sidfy61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic3V61MEeOdBunZhTRw1w" name="Fork(employee)@138342f6" outgoing="_SidgF61MEeOdBunZhTRw1w _SidgIK1MEeOdBunZhTRw1w _SidgIq1MEeOdBunZhTRw1w" incoming="_Sic3Za1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3WK1MEeOdBunZhTRw1w" name="RightHandSide@ea12e7c">
              <node xmi:type="uml:CallOperationAction" xmi:id="_Sic3Wa1MEeOdBunZhTRw1w" name="Call(Employee)" operation="_SieF361MEeOdBunZhTRw1w">
                <result xmi:id="_Sic3Wq1MEeOdBunZhTRw1w" name="Call(Employee).result()" outgoing="_Sic3Za1MEeOdBunZhTRw1w" type="_SieFTq1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3W61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3XK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_Sic3Xa1MEeOdBunZhTRw1w" name="Call(Employee).target" incoming="_Sic3ZK1MEeOdBunZhTRw1w" type="_SieFTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3Xq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3X61MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_Sic3YK1MEeOdBunZhTRw1w" name="Create(Employee)" classifier="_SieFTq1MEeOdBunZhTRw1w">
                <result xmi:id="_Sic3Ya1MEeOdBunZhTRw1w" name="Create(Employee).result" outgoing="_Sic3ZK1MEeOdBunZhTRw1w" type="_SieFTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3Yq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3Y61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3ZK1MEeOdBunZhTRw1w" source="_Sic3Ya1MEeOdBunZhTRw1w" target="_Sic3Xa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3Za1MEeOdBunZhTRw1w" source="_Sic3Wq1MEeOdBunZhTRw1w" target="_Sic3V61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3Zq1MEeOdBunZhTRw1w" name="ExpressionStatement@599df39a" outgoing="_SidfzK1MEeOdBunZhTRw1w" incoming="_Sidfy61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic3Z61MEeOdBunZhTRw1w" name="Fork(monitor)@a065cad" outgoing="_SidgHa1MEeOdBunZhTRw1w _SidgHq1MEeOdBunZhTRw1w _SidgNq1MEeOdBunZhTRw1w" incoming="_Sic3da1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3aK1MEeOdBunZhTRw1w" name="RightHandSide@27ae66ff">
              <node xmi:type="uml:CallOperationAction" xmi:id="_Sic3aa1MEeOdBunZhTRw1w" name="Call(Monitor)" operation="_SieEIK1MEeOdBunZhTRw1w">
                <result xmi:id="_Sic3aq1MEeOdBunZhTRw1w" name="Call(Monitor).result()" outgoing="_Sic3da1MEeOdBunZhTRw1w" type="_SieDfq1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3a61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3bK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_Sic3ba1MEeOdBunZhTRw1w" name="Call(Monitor).target" incoming="_Sic3dK1MEeOdBunZhTRw1w" type="_SieDfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3bq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3b61MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_Sic3cK1MEeOdBunZhTRw1w" name="Create(Monitor)" classifier="_SieDfq1MEeOdBunZhTRw1w">
                <result xmi:id="_Sic3ca1MEeOdBunZhTRw1w" name="Create(Monitor).result" outgoing="_Sic3dK1MEeOdBunZhTRw1w" type="_SieDfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3cq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3c61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3dK1MEeOdBunZhTRw1w" source="_Sic3ca1MEeOdBunZhTRw1w" target="_Sic3ba1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3da1MEeOdBunZhTRw1w" source="_Sic3aq1MEeOdBunZhTRw1w" target="_Sic3Z61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3dq1MEeOdBunZhTRw1w" name="ExpressionStatement@5a9fe3bf" outgoing="_Sidfza1MEeOdBunZhTRw1w" incoming="_SidfzK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic3d61MEeOdBunZhTRw1w" name="Fork(i)@54d6541d" outgoing="_Sidfzq1MEeOdBunZhTRw1w" incoming="_Sic3fq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3eK1MEeOdBunZhTRw1w" name="RightHandSide@432c676e">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic3ea1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_Sic3eq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Sic3fq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3e61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3fK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic3fa1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3fq1MEeOdBunZhTRw1w" source="_Sic3eq1MEeOdBunZhTRw1w" target="_Sic3d61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3f61MEeOdBunZhTRw1w" name="ExpressionStatement@253d61c" outgoing="_Sidfz61MEeOdBunZhTRw1w" incoming="_Sidfza1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic3gK1MEeOdBunZhTRw1w" name="Fork(j)@93a2f65" outgoing="_Sidf061MEeOdBunZhTRw1w _Sidf1q1MEeOdBunZhTRw1w _Sidf2a1MEeOdBunZhTRw1w _Sidf3K1MEeOdBunZhTRw1w _Sidf361MEeOdBunZhTRw1w _SidgAK1MEeOdBunZhTRw1w _SidgA61MEeOdBunZhTRw1w _SidgBq1MEeOdBunZhTRw1w _SidgCa1MEeOdBunZhTRw1w _SidgJq1MEeOdBunZhTRw1w _SidgKK1MEeOdBunZhTRw1w _SidgLK1MEeOdBunZhTRw1w _SidgL61MEeOdBunZhTRw1w _SidgOa1MEeOdBunZhTRw1w" incoming="_Sic3h61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3ga1MEeOdBunZhTRw1w" name="RightHandSide@4afd949e">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic3gq1MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_Sic3g61MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Sic3h61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3hK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3ha1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic3hq1MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3h61MEeOdBunZhTRw1w" source="_Sic3g61MEeOdBunZhTRw1w" target="_Sic3gK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3iK1MEeOdBunZhTRw1w" name="ExpressionStatement@6c3441c5" outgoing="_Sidf0a1MEeOdBunZhTRw1w" incoming="_Sidfz61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic3ia1MEeOdBunZhTRw1w" name="Fork(i)@5aca2402" outgoing="_Sidf0K1MEeOdBunZhTRw1w" incoming="_Sidfzq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3iq1MEeOdBunZhTRw1w" name="RightHandSide@d022ddf"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3i61MEeOdBunZhTRw1w" name="ExpressionStatement@71e8031c" outgoing="_Sidf1K1MEeOdBunZhTRw1w" incoming="_Sidf0a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic3jK1MEeOdBunZhTRw1w" name="Fork(i)@a63f9f3" outgoing="_Sidf0q1MEeOdBunZhTRw1w" incoming="_Sic3la1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3ja1MEeOdBunZhTRw1w" name="RightHandSide@29aec5d9">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic3jq1MEeOdBunZhTRw1w" name="Call(Neg)">
                <argument xmi:id="_Sic3j61MEeOdBunZhTRw1w" name="Call(Neg).argument(x)" incoming="_Sidf0K1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3kK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3ka1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic3kq1MEeOdBunZhTRw1w" name="Call(Neg).result(result)" outgoing="_Sic3la1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3k61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3lK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Neg"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3la1MEeOdBunZhTRw1w" source="_Sic3kq1MEeOdBunZhTRw1w" target="_Sic3jK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3lq1MEeOdBunZhTRw1w" name="ExpressionStatement@32eca0f7" outgoing="_Sidf161MEeOdBunZhTRw1w" incoming="_Sidf1K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic3l61MEeOdBunZhTRw1w" name="Fork(i)@228584d5" outgoing="_Sidf1a1MEeOdBunZhTRw1w" incoming="_Sic3o61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3mK1MEeOdBunZhTRw1w" name="RightHandSide@6bd3cda7">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic3ma1MEeOdBunZhTRw1w" name="Call(*)">
                <argument xmi:id="_Sic3mq1MEeOdBunZhTRw1w" name="Call(*).argument(x)" incoming="_Sidf0q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3m61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3nK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic3na1MEeOdBunZhTRw1w" name="Call(*).argument(y)" incoming="_Sidf061MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3nq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3n61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic3oK1MEeOdBunZhTRw1w" name="Call(*).result(result)" outgoing="_Sic3o61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3oa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3oq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-times"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3o61MEeOdBunZhTRw1w" source="_Sic3oK1MEeOdBunZhTRw1w" target="_Sic3l61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3pK1MEeOdBunZhTRw1w" name="ExpressionStatement@1bfa36ba" outgoing="_Sidf2q1MEeOdBunZhTRw1w" incoming="_Sidf161MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic3pa1MEeOdBunZhTRw1w" name="Fork(i)@726bd659" outgoing="_Sidf2K1MEeOdBunZhTRw1w" incoming="_Sic3sa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3pq1MEeOdBunZhTRw1w" name="RightHandSide@5c5a7bf">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic3p61MEeOdBunZhTRw1w" name="Call(Div)">
                <argument xmi:id="_Sic3qK1MEeOdBunZhTRw1w" name="Call(Div).argument(x)" incoming="_Sidf1a1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3qa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3qq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic3q61MEeOdBunZhTRw1w" name="Call(Div).argument(y)" incoming="_Sidf1q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3rK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3ra1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic3rq1MEeOdBunZhTRw1w" name="Call(Div).result(result)" outgoing="_Sic3sa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3r61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3sK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3sa1MEeOdBunZhTRw1w" source="_Sic3rq1MEeOdBunZhTRw1w" target="_Sic3pa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3sq1MEeOdBunZhTRw1w" name="ExpressionStatement@13eaf70c" outgoing="_Sidf3a1MEeOdBunZhTRw1w" incoming="_Sidf2q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic3s61MEeOdBunZhTRw1w" name="Fork(i)@13d67601" outgoing="_Sidf261MEeOdBunZhTRw1w" incoming="_Sic3v61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3tK1MEeOdBunZhTRw1w" name="RightHandSide@64dd45d3">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic3ta1MEeOdBunZhTRw1w" name="Call(Mod)">
                <argument xmi:id="_Sic3tq1MEeOdBunZhTRw1w" name="Call(Mod).argument(x)" incoming="_Sidf2K1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3t61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3uK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic3ua1MEeOdBunZhTRw1w" name="Call(Mod).argument(y)" incoming="_Sidf2a1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3uq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3u61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic3vK1MEeOdBunZhTRw1w" name="Call(Mod).result(result)" outgoing="_Sic3v61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3va1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3vq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3v61MEeOdBunZhTRw1w" source="_Sic3vK1MEeOdBunZhTRw1w" target="_Sic3s61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3wK1MEeOdBunZhTRw1w" name="ExpressionStatement@467048e" outgoing="_Sidf4K1MEeOdBunZhTRw1w" incoming="_Sidf3a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic3wa1MEeOdBunZhTRw1w" name="Fork(i)@60240115" outgoing="_Sidf3q1MEeOdBunZhTRw1w" incoming="_Sic3za1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3wq1MEeOdBunZhTRw1w" name="RightHandSide@5bc33b02">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic3w61MEeOdBunZhTRw1w" name="Call(+)">
                <argument xmi:id="_Sic3xK1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_Sidf261MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3xa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3xq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic3x61MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_Sidf3K1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3yK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3ya1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic3yq1MEeOdBunZhTRw1w" name="Call(+).result(result)" outgoing="_Sic3za1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3y61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3zK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3za1MEeOdBunZhTRw1w" source="_Sic3yq1MEeOdBunZhTRw1w" target="_Sic3wa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic3zq1MEeOdBunZhTRw1w" name="ExpressionStatement@2c97c0a8" outgoing="_Sidf4a1MEeOdBunZhTRw1w" incoming="_Sidf4K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic3z61MEeOdBunZhTRw1w" name="Fork(i)@75f5cb92" outgoing="_Sidf_61MEeOdBunZhTRw1w _SidgAq1MEeOdBunZhTRw1w _SidgBa1MEeOdBunZhTRw1w _SidgCK1MEeOdBunZhTRw1w _SidgGa1MEeOdBunZhTRw1w _SidgG61MEeOdBunZhTRw1w _SidgJa1MEeOdBunZhTRw1w _SidgJ61MEeOdBunZhTRw1w _SidgK61MEeOdBunZhTRw1w _SidgLq1MEeOdBunZhTRw1w _SidgOK1MEeOdBunZhTRw1w" incoming="_Sic3261MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic30K1MEeOdBunZhTRw1w" name="RightHandSide@5c081abe">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic30a1MEeOdBunZhTRw1w" name="Call(-)">
                <argument xmi:id="_Sic30q1MEeOdBunZhTRw1w" name="Call(-).argument(x)" incoming="_Sidf3q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3061MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic31K1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic31a1MEeOdBunZhTRw1w" name="Call(-).argument(y)" incoming="_Sidf361MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic31q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic3161MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic32K1MEeOdBunZhTRw1w" name="Call(-).result(result)" outgoing="_Sic3261MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic32a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic32q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3261MEeOdBunZhTRw1w" source="_Sic32K1MEeOdBunZhTRw1w" target="_Sic3z61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic33K1MEeOdBunZhTRw1w" name="ExpressionStatement@4ea173bc" outgoing="_Sidf461MEeOdBunZhTRw1w" incoming="_Sidf4a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic33a1MEeOdBunZhTRw1w" name="Fork(bs)@27f3ddcd" outgoing="_Sidf4q1MEeOdBunZhTRw1w" incoming="_Sic4Aa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic33q1MEeOdBunZhTRw1w" name="RightHandSide@1898797d">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic3361MEeOdBunZhTRw1w" name="Value(171)">
                <result xmi:id="_Sic34K1MEeOdBunZhTRw1w" name="Value(171).result" outgoing="_Sic4AK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic34a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic34q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic3461MEeOdBunZhTRw1w" value="171">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Sic35K1MEeOdBunZhTRw1w" name="CastExpression@1898797d" mode="parallel" outputElement="_Sic3_61MEeOdBunZhTRw1w" inputElement="_Sic3_q1MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_Sic35a1MEeOdBunZhTRw1w" name="Merge(CastExpression@1898797d.operand)" outgoing="_Sic3_a1MEeOdBunZhTRw1w" incoming="_Sic3961MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sic35q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_Sic3561MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer).object" incoming="_Sic39q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic36K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic36a1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_Sic36q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer).result" outgoing="_Sic3-a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3661MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic37K1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sic37a1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(Integer).object)" outgoing="_Sic39q1MEeOdBunZhTRw1w _Sic3-K1MEeOdBunZhTRw1w" incoming="_Sic3_K1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic37q1MEeOdBunZhTRw1w" name="Call(ToBitString)">
                  <argument xmi:id="_Sic3761MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sic3-q1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic38K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic38a1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Sic38q1MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_Sic3961MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic3861MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic39K1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_Sic39a1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(Integer).result)" outgoing="_Sic3-q1MEeOdBunZhTRw1w" incoming="_Sic3-K1MEeOdBunZhTRw1w _Sic3-a1MEeOdBunZhTRw1w" decisionInputFlow="_Sic3-a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic39q1MEeOdBunZhTRw1w" source="_Sic37a1MEeOdBunZhTRw1w" target="_Sic3561MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3961MEeOdBunZhTRw1w" source="_Sic38q1MEeOdBunZhTRw1w" target="_Sic35a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3-K1MEeOdBunZhTRw1w" source="_Sic37a1MEeOdBunZhTRw1w" target="_Sic39a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3-a1MEeOdBunZhTRw1w" source="_Sic36q1MEeOdBunZhTRw1w" target="_Sic39a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3-q1MEeOdBunZhTRw1w" source="_Sic39a1MEeOdBunZhTRw1w" target="_Sic3761MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sic3-61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3_K1MEeOdBunZhTRw1w" source="_Sic3_q1MEeOdBunZhTRw1w" target="_Sic37a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic3_a1MEeOdBunZhTRw1w" source="_Sic35a1MEeOdBunZhTRw1w" target="_Sic3_61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sic3_q1MEeOdBunZhTRw1w" name="CastExpression@1898797d.inputElement" outgoing="_Sic3_K1MEeOdBunZhTRw1w" incoming="_Sic4AK1MEeOdBunZhTRw1w" regionAsInput="_Sic35K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sic3_61MEeOdBunZhTRw1w" name="CastExpression@1898797d.outputElement" outgoing="_Sic4Aa1MEeOdBunZhTRw1w" incoming="_Sic3_a1MEeOdBunZhTRw1w" regionAsOutput="_Sic35K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4AK1MEeOdBunZhTRw1w" source="_Sic34K1MEeOdBunZhTRw1w" target="_Sic3_q1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4Aa1MEeOdBunZhTRw1w" source="_Sic3_61MEeOdBunZhTRw1w" target="_Sic33a1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4Aq1MEeOdBunZhTRw1w" name="ExpressionStatement@3d467064" outgoing="_Sidf5a1MEeOdBunZhTRw1w" incoming="_Sidf461MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic4A61MEeOdBunZhTRw1w" name="Fork(bs)@65ab61d1" outgoing="_Sidf5K1MEeOdBunZhTRw1w" incoming="_Sic4DK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4BK1MEeOdBunZhTRw1w" name="RightHandSide@56a3147c">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic4Ba1MEeOdBunZhTRw1w" name="Call(~)">
                <argument xmi:id="_Sic4Bq1MEeOdBunZhTRw1w" name="Call(~).argument(b)" incoming="_Sidf4q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4B61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4CK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic4Ca1MEeOdBunZhTRw1w" name="Call(~).result(null)" outgoing="_Sic4DK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Cq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4C61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-tilde"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4DK1MEeOdBunZhTRw1w" source="_Sic4Ca1MEeOdBunZhTRw1w" target="_Sic4A61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4Da1MEeOdBunZhTRw1w" name="ExpressionStatement@1c59547d" outgoing="_Sidf561MEeOdBunZhTRw1w" incoming="_Sidf5a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic4Dq1MEeOdBunZhTRw1w" name="Fork(bs)@1ec1c237" outgoing="_Sidf5q1MEeOdBunZhTRw1w" incoming="_Sic4KK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4D61MEeOdBunZhTRw1w" name="RightHandSide@42b5b8a7">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic4EK1MEeOdBunZhTRw1w" name="Value(240)">
                <result xmi:id="_Sic4Ea1MEeOdBunZhTRw1w" name="Value(240).result" outgoing="_Sic4Jq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Eq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4E61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic4FK1MEeOdBunZhTRw1w" value="240">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic4Fa1MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_Sic4Fq1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sic4Jq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4F61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4GK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic4Ga1MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_Sic4J61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Gq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4G61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic4HK1MEeOdBunZhTRw1w" name="Call(&amp;)">
                <argument xmi:id="_Sic4Ha1MEeOdBunZhTRw1w" name="Call(&amp;).argument(b1)" incoming="_Sidf5K1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Hq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4H61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic4IK1MEeOdBunZhTRw1w" name="Call(&amp;).argument(b2)" incoming="_Sic4J61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Ia1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4Iq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic4I61MEeOdBunZhTRw1w" name="Call(&amp;).result(null)" outgoing="_Sic4KK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4JK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4Ja1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-amp"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4Jq1MEeOdBunZhTRw1w" source="_Sic4Ea1MEeOdBunZhTRw1w" target="_Sic4Fq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4J61MEeOdBunZhTRw1w" source="_Sic4Ga1MEeOdBunZhTRw1w" target="_Sic4IK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4KK1MEeOdBunZhTRw1w" source="_Sic4I61MEeOdBunZhTRw1w" target="_Sic4Dq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4Ka1MEeOdBunZhTRw1w" name="ExpressionStatement@604bd263" outgoing="_Sidf6a1MEeOdBunZhTRw1w" incoming="_Sidf561MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic4Kq1MEeOdBunZhTRw1w" name="Fork(bs)@9390bea" outgoing="_Sidf6K1MEeOdBunZhTRw1w" incoming="_Sic4RK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4K61MEeOdBunZhTRw1w" name="RightHandSide@3d3461">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic4LK1MEeOdBunZhTRw1w" name="Value(240)">
                <result xmi:id="_Sic4La1MEeOdBunZhTRw1w" name="Value(240).result" outgoing="_Sic4Qq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Lq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4L61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic4MK1MEeOdBunZhTRw1w" value="240">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic4Ma1MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_Sic4Mq1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sic4Qq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4M61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4NK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic4Na1MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_Sic4Q61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Nq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4N61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic4OK1MEeOdBunZhTRw1w" name="Call(|)">
                <argument xmi:id="_Sic4Oa1MEeOdBunZhTRw1w" name="Call(|).argument(b1)" incoming="_Sidf5q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Oq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4O61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic4PK1MEeOdBunZhTRw1w" name="Call(|).argument(b2)" incoming="_Sic4Q61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Pa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4Pq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic4P61MEeOdBunZhTRw1w" name="Call(|).result(null)" outgoing="_Sic4RK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4QK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4Qa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-bar"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4Qq1MEeOdBunZhTRw1w" source="_Sic4La1MEeOdBunZhTRw1w" target="_Sic4Mq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4Q61MEeOdBunZhTRw1w" source="_Sic4Na1MEeOdBunZhTRw1w" target="_Sic4PK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4RK1MEeOdBunZhTRw1w" source="_Sic4P61MEeOdBunZhTRw1w" target="_Sic4Kq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4Ra1MEeOdBunZhTRw1w" name="ExpressionStatement@1adf17dc" outgoing="_Sidf661MEeOdBunZhTRw1w" incoming="_Sidf6a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic4Rq1MEeOdBunZhTRw1w" name="Fork(bs)@cd56091" outgoing="_Sidf6q1MEeOdBunZhTRw1w" incoming="_Sic4WK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4R61MEeOdBunZhTRw1w" name="RightHandSide@cb6d62c">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic4SK1MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_Sic4Sa1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Sic4V61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Sq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4S61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic4TK1MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic4Ta1MEeOdBunZhTRw1w" name="Call(&lt;&lt;)">
                <argument xmi:id="_Sic4Tq1MEeOdBunZhTRw1w" name="Call(&lt;&lt;).argument(b)" incoming="_Sidf6K1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4T61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4UK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic4Ua1MEeOdBunZhTRw1w" name="Call(&lt;&lt;).argument(n)" incoming="_Sic4V61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Uq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4U61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic4VK1MEeOdBunZhTRw1w" name="Call(&lt;&lt;).result(null)" outgoing="_Sic4WK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Va1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4Vq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ltlt"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4V61MEeOdBunZhTRw1w" source="_Sic4Sa1MEeOdBunZhTRw1w" target="_Sic4Ua1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4WK1MEeOdBunZhTRw1w" source="_Sic4VK1MEeOdBunZhTRw1w" target="_Sic4Rq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4Wa1MEeOdBunZhTRw1w" name="ExpressionStatement@5c863c7e" outgoing="_Sidf7a1MEeOdBunZhTRw1w" incoming="_Sidf661MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic4Wq1MEeOdBunZhTRw1w" name="Fork(bs)@49c1354" outgoing="_Sidf7K1MEeOdBunZhTRw1w" incoming="_Sic4bK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4W61MEeOdBunZhTRw1w" name="RightHandSide@22b8f229">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic4XK1MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_Sic4Xa1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Sic4a61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Xq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4X61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic4YK1MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic4Ya1MEeOdBunZhTRw1w" name="Call(>>)">
                <argument xmi:id="_Sic4Yq1MEeOdBunZhTRw1w" name="Call(>>).argument(b)" incoming="_Sidf6q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Y61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4ZK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic4Za1MEeOdBunZhTRw1w" name="Call(>>).argument(n)" incoming="_Sic4a61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4Zq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4Z61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic4aK1MEeOdBunZhTRw1w" name="Call(>>).result(null)" outgoing="_Sic4bK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4aa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4aq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgt"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4a61MEeOdBunZhTRw1w" source="_Sic4Xa1MEeOdBunZhTRw1w" target="_Sic4Za1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4bK1MEeOdBunZhTRw1w" source="_Sic4aK1MEeOdBunZhTRw1w" target="_Sic4Wq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4ba1MEeOdBunZhTRw1w" name="ExpressionStatement@14ce3deb" outgoing="_Sidf761MEeOdBunZhTRw1w" incoming="_Sidf7a1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic4bq1MEeOdBunZhTRw1w" name="Fork(bs)@18e6d627" outgoing="_Sidf7q1MEeOdBunZhTRw1w" incoming="_Sic4gK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4b61MEeOdBunZhTRw1w" name="RightHandSide@5af5a736">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic4cK1MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_Sic4ca1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Sic4f61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4cq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4c61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic4dK1MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic4da1MEeOdBunZhTRw1w" name="Call(>>>)">
                <argument xmi:id="_Sic4dq1MEeOdBunZhTRw1w" name="Call(>>>).argument(b)" incoming="_Sidf7K1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4d61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4eK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic4ea1MEeOdBunZhTRw1w" name="Call(>>>).argument(n)" incoming="_Sic4f61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4eq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4e61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic4fK1MEeOdBunZhTRw1w" name="Call(>>>).result(null)" outgoing="_Sic4gK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4fa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4fq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgtgt"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4f61MEeOdBunZhTRw1w" source="_Sic4ca1MEeOdBunZhTRw1w" target="_Sic4ea1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4gK1MEeOdBunZhTRw1w" source="_Sic4fK1MEeOdBunZhTRw1w" target="_Sic4bq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4ga1MEeOdBunZhTRw1w" name="ExpressionStatement@e5a8081" outgoing="_Sidf8K1MEeOdBunZhTRw1w" incoming="_Sidf761MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic4gq1MEeOdBunZhTRw1w" name="Fork(bs)@54da8ffb" outgoing="_SidgOq1MEeOdBunZhTRw1w" incoming="_Sic4nK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4g61MEeOdBunZhTRw1w" name="RightHandSide@5922d342">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic4hK1MEeOdBunZhTRw1w" name="Value(4)">
                <result xmi:id="_Sic4ha1MEeOdBunZhTRw1w" name="Value(4).result" outgoing="_Sic4mq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4hq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4h61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic4iK1MEeOdBunZhTRw1w" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic4ia1MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_Sic4iq1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sic4mq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4i61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4jK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic4ja1MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_Sic4m61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4jq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4j61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic4kK1MEeOdBunZhTRw1w" name="Call(^)">
                <argument xmi:id="_Sic4ka1MEeOdBunZhTRw1w" name="Call(^).argument(b1)" incoming="_Sidf7q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4kq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4k61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic4lK1MEeOdBunZhTRw1w" name="Call(^).argument(b2)" incoming="_Sic4m61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4la1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4lq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic4l61MEeOdBunZhTRw1w" name="Call(^).result(null)" outgoing="_Sic4nK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4mK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4ma1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-caret"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4mq1MEeOdBunZhTRw1w" source="_Sic4ha1MEeOdBunZhTRw1w" target="_Sic4iq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4m61MEeOdBunZhTRw1w" source="_Sic4ja1MEeOdBunZhTRw1w" target="_Sic4lK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4nK1MEeOdBunZhTRw1w" source="_Sic4l61MEeOdBunZhTRw1w" target="_Sic4gq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4na1MEeOdBunZhTRw1w" name="ExpressionStatement@2919273d" outgoing="_Sidf8q1MEeOdBunZhTRw1w" incoming="_Sidf8K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic4nq1MEeOdBunZhTRw1w" name="Fork(h)@2664db5f" outgoing="_Sidf8a1MEeOdBunZhTRw1w" incoming="_Sic4pa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4n61MEeOdBunZhTRw1w" name="RightHandSide@277e4daa">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic4oK1MEeOdBunZhTRw1w" name="Value(171)">
                <result xmi:id="_Sic4oa1MEeOdBunZhTRw1w" name="Value(171).result" outgoing="_Sic4pa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4oq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4o61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic4pK1MEeOdBunZhTRw1w" value="171">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4pa1MEeOdBunZhTRw1w" source="_Sic4oa1MEeOdBunZhTRw1w" target="_Sic4nq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4pq1MEeOdBunZhTRw1w" name="ExpressionStatement@723c668e" outgoing="_Sidf9K1MEeOdBunZhTRw1w" incoming="_Sidf8q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic4p61MEeOdBunZhTRw1w" name="Fork(h)@2870b0c2" outgoing="_Sidf861MEeOdBunZhTRw1w" incoming="_Sic41a1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic4qK1MEeOdBunZhTRw1w" name="RightHandSide@24c12706">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic4qa1MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_Sic4qq1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sidf8a1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4q61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4rK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic4ra1MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_Sic4061MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4rq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4r61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic4sK1MEeOdBunZhTRw1w" name="Call(~)">
                <argument xmi:id="_Sic4sa1MEeOdBunZhTRw1w" name="Call(~).argument(b)" incoming="_Sic4061MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4sq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4s61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic4tK1MEeOdBunZhTRw1w" name="Call(~).result(null)" outgoing="_Sic41K1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4ta1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4tq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-tilde"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Sic4t61MEeOdBunZhTRw1w" name="CastExpression@24c12706" mode="parallel" outputElement="_Sic40q1MEeOdBunZhTRw1w" inputElement="_Sic40a1MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_Sic4uK1MEeOdBunZhTRw1w" name="Merge(CastExpression@24c12706.operand)" outgoing="_Sic40K1MEeOdBunZhTRw1w" incoming="_Sic4yq1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sic4ua1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_Sic4uq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).object" incoming="_Sic4ya1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4u61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4vK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_Sic4va1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).result" outgoing="_Sic4zK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4vq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4v61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sic4wK1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(BitString).object)" outgoing="_Sic4ya1MEeOdBunZhTRw1w _Sic4y61MEeOdBunZhTRw1w" incoming="_Sic4z61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic4wa1MEeOdBunZhTRw1w" name="Call(ToInteger)">
                  <argument xmi:id="_Sic4wq1MEeOdBunZhTRw1w" name="Call(ToInteger).argument(b)" incoming="_Sic4za1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4w61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4xK1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Sic4xa1MEeOdBunZhTRw1w" name="Call(ToInteger).result(null)" outgoing="_Sic4yq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4xq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4x61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_Sic4yK1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(BitString).result)" outgoing="_Sic4za1MEeOdBunZhTRw1w" incoming="_Sic4y61MEeOdBunZhTRw1w _Sic4zK1MEeOdBunZhTRw1w" decisionInputFlow="_Sic4zK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4ya1MEeOdBunZhTRw1w" source="_Sic4wK1MEeOdBunZhTRw1w" target="_Sic4uq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4yq1MEeOdBunZhTRw1w" source="_Sic4xa1MEeOdBunZhTRw1w" target="_Sic4uK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4y61MEeOdBunZhTRw1w" source="_Sic4wK1MEeOdBunZhTRw1w" target="_Sic4yK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4zK1MEeOdBunZhTRw1w" source="_Sic4va1MEeOdBunZhTRw1w" target="_Sic4yK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4za1MEeOdBunZhTRw1w" source="_Sic4yK1MEeOdBunZhTRw1w" target="_Sic4wq1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sic4zq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4z61MEeOdBunZhTRw1w" source="_Sic40a1MEeOdBunZhTRw1w" target="_Sic4wK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic40K1MEeOdBunZhTRw1w" source="_Sic4uK1MEeOdBunZhTRw1w" target="_Sic40q1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sic40a1MEeOdBunZhTRw1w" name="CastExpression@24c12706.inputElement" outgoing="_Sic4z61MEeOdBunZhTRw1w" incoming="_Sic41K1MEeOdBunZhTRw1w" regionAsInput="_Sic4t61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sic40q1MEeOdBunZhTRw1w" name="CastExpression@24c12706.outputElement" outgoing="_Sic41a1MEeOdBunZhTRw1w" incoming="_Sic40K1MEeOdBunZhTRw1w" regionAsOutput="_Sic4t61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic4061MEeOdBunZhTRw1w" source="_Sic4ra1MEeOdBunZhTRw1w" target="_Sic4sa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic41K1MEeOdBunZhTRw1w" source="_Sic4tK1MEeOdBunZhTRw1w" target="_Sic40a1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic41a1MEeOdBunZhTRw1w" source="_Sic40q1MEeOdBunZhTRw1w" target="_Sic4p61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic41q1MEeOdBunZhTRw1w" name="ExpressionStatement@dd183c9" outgoing="_Sidf9q1MEeOdBunZhTRw1w" incoming="_Sidf9K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic4161MEeOdBunZhTRw1w" name="Fork(h)@6b3233fa" outgoing="_Sidf9a1MEeOdBunZhTRw1w" incoming="_Sic5Fq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic42K1MEeOdBunZhTRw1w" name="RightHandSide@5cf3a0f">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic42a1MEeOdBunZhTRw1w" name="Value(240)">
                <result xmi:id="_Sic42q1MEeOdBunZhTRw1w" name="Value(240).result" outgoing="_Sic5Eq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4261MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic43K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic43a1MEeOdBunZhTRw1w" value="240">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic43q1MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_Sic4361MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sidf861MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic44K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic44a1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic44q1MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_Sic5E61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4461MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic45K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic45a1MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_Sic45q1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sic5Eq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4561MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic46K1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic46a1MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_Sic5FK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic46q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4661MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic47K1MEeOdBunZhTRw1w" name="Call(&amp;)">
                <argument xmi:id="_Sic47a1MEeOdBunZhTRw1w" name="Call(&amp;).argument(b1)" incoming="_Sic5E61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic47q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4761MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic48K1MEeOdBunZhTRw1w" name="Call(&amp;).argument(b2)" incoming="_Sic5FK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic48a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic48q1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic4861MEeOdBunZhTRw1w" name="Call(&amp;).result(null)" outgoing="_Sic5Fa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic49K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic49a1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-amp"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Sic49q1MEeOdBunZhTRw1w" name="CastExpression@5cf3a0f" mode="parallel" outputElement="_Sic5Ea1MEeOdBunZhTRw1w" inputElement="_Sic5EK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_Sic4961MEeOdBunZhTRw1w" name="Merge(CastExpression@5cf3a0f.operand)" outgoing="_Sic5D61MEeOdBunZhTRw1w" incoming="_Sic5Ca1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sic4-K1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_Sic4-a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).object" incoming="_Sic5CK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4-q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4-61MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_Sic4_K1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).result" outgoing="_Sic5C61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic4_a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic4_q1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sic4_61MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(BitString).object)" outgoing="_Sic5CK1MEeOdBunZhTRw1w _Sic5Cq1MEeOdBunZhTRw1w" incoming="_Sic5Dq1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic5AK1MEeOdBunZhTRw1w" name="Call(ToInteger)">
                  <argument xmi:id="_Sic5Aa1MEeOdBunZhTRw1w" name="Call(ToInteger).argument(b)" incoming="_Sic5DK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5Aq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5A61MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Sic5BK1MEeOdBunZhTRw1w" name="Call(ToInteger).result(null)" outgoing="_Sic5Ca1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5Ba1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5Bq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_Sic5B61MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(BitString).result)" outgoing="_Sic5DK1MEeOdBunZhTRw1w" incoming="_Sic5Cq1MEeOdBunZhTRw1w _Sic5C61MEeOdBunZhTRw1w" decisionInputFlow="_Sic5C61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5CK1MEeOdBunZhTRw1w" source="_Sic4_61MEeOdBunZhTRw1w" target="_Sic4-a1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5Ca1MEeOdBunZhTRw1w" source="_Sic5BK1MEeOdBunZhTRw1w" target="_Sic4961MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5Cq1MEeOdBunZhTRw1w" source="_Sic4_61MEeOdBunZhTRw1w" target="_Sic5B61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5C61MEeOdBunZhTRw1w" source="_Sic4_K1MEeOdBunZhTRw1w" target="_Sic5B61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5DK1MEeOdBunZhTRw1w" source="_Sic5B61MEeOdBunZhTRw1w" target="_Sic5Aa1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sic5Da1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5Dq1MEeOdBunZhTRw1w" source="_Sic5EK1MEeOdBunZhTRw1w" target="_Sic4_61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5D61MEeOdBunZhTRw1w" source="_Sic4961MEeOdBunZhTRw1w" target="_Sic5Ea1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sic5EK1MEeOdBunZhTRw1w" name="CastExpression@5cf3a0f.inputElement" outgoing="_Sic5Dq1MEeOdBunZhTRw1w" incoming="_Sic5Fa1MEeOdBunZhTRw1w" regionAsInput="_Sic49q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sic5Ea1MEeOdBunZhTRw1w" name="CastExpression@5cf3a0f.outputElement" outgoing="_Sic5Fq1MEeOdBunZhTRw1w" incoming="_Sic5D61MEeOdBunZhTRw1w" regionAsOutput="_Sic49q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5Eq1MEeOdBunZhTRw1w" source="_Sic42q1MEeOdBunZhTRw1w" target="_Sic45q1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5E61MEeOdBunZhTRw1w" source="_Sic44q1MEeOdBunZhTRw1w" target="_Sic47a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5FK1MEeOdBunZhTRw1w" source="_Sic46a1MEeOdBunZhTRw1w" target="_Sic48K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5Fa1MEeOdBunZhTRw1w" source="_Sic4861MEeOdBunZhTRw1w" target="_Sic5EK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5Fq1MEeOdBunZhTRw1w" source="_Sic5Ea1MEeOdBunZhTRw1w" target="_Sic4161MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic5F61MEeOdBunZhTRw1w" name="ExpressionStatement@fd67ab2" outgoing="_Sidf-K1MEeOdBunZhTRw1w" incoming="_Sidf9q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic5GK1MEeOdBunZhTRw1w" name="Fork(h)@296867cd" outgoing="_Sidf961MEeOdBunZhTRw1w" incoming="_Sic5V61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic5Ga1MEeOdBunZhTRw1w" name="RightHandSide@5ec2c455">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic5Gq1MEeOdBunZhTRw1w" name="Value(240)">
                <result xmi:id="_Sic5G61MEeOdBunZhTRw1w" name="Value(240).result" outgoing="_Sic5U61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5HK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5Ha1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic5Hq1MEeOdBunZhTRw1w" value="240">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic5H61MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_Sic5IK1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sidf9a1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5Ia1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5Iq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic5I61MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_Sic5VK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5JK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5Ja1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic5Jq1MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_Sic5J61MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sic5U61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5KK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5Ka1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic5Kq1MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_Sic5Va1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5K61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5LK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic5La1MEeOdBunZhTRw1w" name="Call(|)">
                <argument xmi:id="_Sic5Lq1MEeOdBunZhTRw1w" name="Call(|).argument(b1)" incoming="_Sic5VK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5L61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5MK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic5Ma1MEeOdBunZhTRw1w" name="Call(|).argument(b2)" incoming="_Sic5Va1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5Mq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5M61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic5NK1MEeOdBunZhTRw1w" name="Call(|).result(null)" outgoing="_Sic5Vq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5Na1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5Nq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-bar"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Sic5N61MEeOdBunZhTRw1w" name="CastExpression@5ec2c455" mode="parallel" outputElement="_Sic5Uq1MEeOdBunZhTRw1w" inputElement="_Sic5Ua1MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_Sic5OK1MEeOdBunZhTRw1w" name="Merge(CastExpression@5ec2c455.operand)" outgoing="_Sic5UK1MEeOdBunZhTRw1w" incoming="_Sic5Sq1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sic5Oa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_Sic5Oq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).object" incoming="_Sic5Sa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5O61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5PK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_Sic5Pa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).result" outgoing="_Sic5TK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5Pq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5P61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sic5QK1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(BitString).object)" outgoing="_Sic5Sa1MEeOdBunZhTRw1w _Sic5S61MEeOdBunZhTRw1w" incoming="_Sic5T61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic5Qa1MEeOdBunZhTRw1w" name="Call(ToInteger)">
                  <argument xmi:id="_Sic5Qq1MEeOdBunZhTRw1w" name="Call(ToInteger).argument(b)" incoming="_Sic5Ta1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5Q61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5RK1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Sic5Ra1MEeOdBunZhTRw1w" name="Call(ToInteger).result(null)" outgoing="_Sic5Sq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5Rq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5R61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_Sic5SK1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(BitString).result)" outgoing="_Sic5Ta1MEeOdBunZhTRw1w" incoming="_Sic5S61MEeOdBunZhTRw1w _Sic5TK1MEeOdBunZhTRw1w" decisionInputFlow="_Sic5TK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5Sa1MEeOdBunZhTRw1w" source="_Sic5QK1MEeOdBunZhTRw1w" target="_Sic5Oq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5Sq1MEeOdBunZhTRw1w" source="_Sic5Ra1MEeOdBunZhTRw1w" target="_Sic5OK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5S61MEeOdBunZhTRw1w" source="_Sic5QK1MEeOdBunZhTRw1w" target="_Sic5SK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5TK1MEeOdBunZhTRw1w" source="_Sic5Pa1MEeOdBunZhTRw1w" target="_Sic5SK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5Ta1MEeOdBunZhTRw1w" source="_Sic5SK1MEeOdBunZhTRw1w" target="_Sic5Qq1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sic5Tq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5T61MEeOdBunZhTRw1w" source="_Sic5Ua1MEeOdBunZhTRw1w" target="_Sic5QK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5UK1MEeOdBunZhTRw1w" source="_Sic5OK1MEeOdBunZhTRw1w" target="_Sic5Uq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sic5Ua1MEeOdBunZhTRw1w" name="CastExpression@5ec2c455.inputElement" outgoing="_Sic5T61MEeOdBunZhTRw1w" incoming="_Sic5Vq1MEeOdBunZhTRw1w" regionAsInput="_Sic5N61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sic5Uq1MEeOdBunZhTRw1w" name="CastExpression@5ec2c455.outputElement" outgoing="_Sic5V61MEeOdBunZhTRw1w" incoming="_Sic5UK1MEeOdBunZhTRw1w" regionAsOutput="_Sic5N61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5U61MEeOdBunZhTRw1w" source="_Sic5G61MEeOdBunZhTRw1w" target="_Sic5J61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5VK1MEeOdBunZhTRw1w" source="_Sic5I61MEeOdBunZhTRw1w" target="_Sic5Lq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5Va1MEeOdBunZhTRw1w" source="_Sic5Kq1MEeOdBunZhTRw1w" target="_Sic5Ma1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5Vq1MEeOdBunZhTRw1w" source="_Sic5NK1MEeOdBunZhTRw1w" target="_Sic5Ua1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5V61MEeOdBunZhTRw1w" source="_Sic5Uq1MEeOdBunZhTRw1w" target="_Sic5GK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic5WK1MEeOdBunZhTRw1w" name="ExpressionStatement@67580f61" outgoing="_Sidf-q1MEeOdBunZhTRw1w" incoming="_Sidf-K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic5Wa1MEeOdBunZhTRw1w" name="Fork(h)@7ce3742a" outgoing="_Sidf-a1MEeOdBunZhTRw1w" incoming="_Sic5kK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic5Wq1MEeOdBunZhTRw1w" name="RightHandSide@1bfe16af">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic5W61MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_Sic5XK1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Sic5jq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5Xa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5Xq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic5X61MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic5YK1MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_Sic5Ya1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sidf961MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5Yq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5Y61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic5ZK1MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_Sic5ja1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5Za1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5Zq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic5Z61MEeOdBunZhTRw1w" name="Call(&lt;&lt;)">
                <argument xmi:id="_Sic5aK1MEeOdBunZhTRw1w" name="Call(&lt;&lt;).argument(b)" incoming="_Sic5ja1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5aa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5aq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sic5a61MEeOdBunZhTRw1w" name="Call(&lt;&lt;).argument(n)" incoming="_Sic5jq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5bK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5ba1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic5bq1MEeOdBunZhTRw1w" name="Call(&lt;&lt;).result(null)" outgoing="_Sic5j61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5b61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5cK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ltlt"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Sic5ca1MEeOdBunZhTRw1w" name="CastExpression@1bfe16af" mode="parallel" outputElement="_Sic5jK1MEeOdBunZhTRw1w" inputElement="_Sic5i61MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_Sic5cq1MEeOdBunZhTRw1w" name="Merge(CastExpression@1bfe16af.operand)" outgoing="_Sic5iq1MEeOdBunZhTRw1w" incoming="_Sic5hK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sic5c61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_Sic5dK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).object" incoming="_Sic5g61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5da1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5dq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_Sic5d61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).result" outgoing="_Sic5hq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5eK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5ea1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sic5eq1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(BitString).object)" outgoing="_Sic5g61MEeOdBunZhTRw1w _Sic5ha1MEeOdBunZhTRw1w" incoming="_Sic5ia1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic5e61MEeOdBunZhTRw1w" name="Call(ToInteger)">
                  <argument xmi:id="_Sic5fK1MEeOdBunZhTRw1w" name="Call(ToInteger).argument(b)" incoming="_Sic5h61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5fa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5fq1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Sic5f61MEeOdBunZhTRw1w" name="Call(ToInteger).result(null)" outgoing="_Sic5hK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5gK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5ga1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_Sic5gq1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(BitString).result)" outgoing="_Sic5h61MEeOdBunZhTRw1w" incoming="_Sic5ha1MEeOdBunZhTRw1w _Sic5hq1MEeOdBunZhTRw1w" decisionInputFlow="_Sic5hq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5g61MEeOdBunZhTRw1w" source="_Sic5eq1MEeOdBunZhTRw1w" target="_Sic5dK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5hK1MEeOdBunZhTRw1w" source="_Sic5f61MEeOdBunZhTRw1w" target="_Sic5cq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5ha1MEeOdBunZhTRw1w" source="_Sic5eq1MEeOdBunZhTRw1w" target="_Sic5gq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5hq1MEeOdBunZhTRw1w" source="_Sic5d61MEeOdBunZhTRw1w" target="_Sic5gq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5h61MEeOdBunZhTRw1w" source="_Sic5gq1MEeOdBunZhTRw1w" target="_Sic5fK1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sic5iK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5ia1MEeOdBunZhTRw1w" source="_Sic5i61MEeOdBunZhTRw1w" target="_Sic5eq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5iq1MEeOdBunZhTRw1w" source="_Sic5cq1MEeOdBunZhTRw1w" target="_Sic5jK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sic5i61MEeOdBunZhTRw1w" name="CastExpression@1bfe16af.inputElement" outgoing="_Sic5ia1MEeOdBunZhTRw1w" incoming="_Sic5j61MEeOdBunZhTRw1w" regionAsInput="_Sic5ca1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sic5jK1MEeOdBunZhTRw1w" name="CastExpression@1bfe16af.outputElement" outgoing="_Sic5kK1MEeOdBunZhTRw1w" incoming="_Sic5iq1MEeOdBunZhTRw1w" regionAsOutput="_Sic5ca1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5ja1MEeOdBunZhTRw1w" source="_Sic5ZK1MEeOdBunZhTRw1w" target="_Sic5aK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5jq1MEeOdBunZhTRw1w" source="_Sic5XK1MEeOdBunZhTRw1w" target="_Sic5a61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5j61MEeOdBunZhTRw1w" source="_Sic5bq1MEeOdBunZhTRw1w" target="_Sic5i61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sic5kK1MEeOdBunZhTRw1w" source="_Sic5jK1MEeOdBunZhTRw1w" target="_Sic5Wa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic5ka1MEeOdBunZhTRw1w" name="ExpressionStatement@4997a686" outgoing="_Sidf_K1MEeOdBunZhTRw1w" incoming="_Sidf-q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sic5kq1MEeOdBunZhTRw1w" name="Fork(h)@67429730" outgoing="_Sidf-61MEeOdBunZhTRw1w" incoming="_SidcBq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sic5k61MEeOdBunZhTRw1w" name="RightHandSide@777e22c5">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sic5lK1MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_Sic5la1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_SidcBK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5lq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5l61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sic5mK1MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic5ma1MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_Sic5mq1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sidf-a1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5m61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5nK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sic5na1MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_SidcA61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5nq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sic5n61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sic5oK1MEeOdBunZhTRw1w" name="Call(>>)">
                <argument xmi:id="_Sic5oa1MEeOdBunZhTRw1w" name="Call(>>).argument(b)" incoming="_SidcA61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sic5oq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidb4K1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sidb4a1MEeOdBunZhTRw1w" name="Call(>>).argument(n)" incoming="_SidcBK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidb4q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidb461MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sidb5K1MEeOdBunZhTRw1w" name="Call(>>).result(null)" outgoing="_SidcBa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidb5a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidb5q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgt"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_Sidb561MEeOdBunZhTRw1w" name="CastExpression@777e22c5" mode="parallel" outputElement="_SidcAq1MEeOdBunZhTRw1w" inputElement="_SidcAa1MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_Sidb6K1MEeOdBunZhTRw1w" name="Merge(CastExpression@777e22c5.operand)" outgoing="_SidcAK1MEeOdBunZhTRw1w" incoming="_Sidb-q1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_Sidb6a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_Sidb6q1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).object" incoming="_Sidb-a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidb661MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidb7K1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_Sidb7a1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).result" outgoing="_Sidb_K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidb7q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidb761MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sidb8K1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(BitString).object)" outgoing="_Sidb-a1MEeOdBunZhTRw1w _Sidb-61MEeOdBunZhTRw1w" incoming="_Sidb_61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sidb8a1MEeOdBunZhTRw1w" name="Call(ToInteger)">
                  <argument xmi:id="_Sidb8q1MEeOdBunZhTRw1w" name="Call(ToInteger).argument(b)" incoming="_Sidb_a1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidb861MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidb9K1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Sidb9a1MEeOdBunZhTRw1w" name="Call(ToInteger).result(null)" outgoing="_Sidb-q1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidb9q1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidb961MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_Sidb-K1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(BitString).result)" outgoing="_Sidb_a1MEeOdBunZhTRw1w" incoming="_Sidb-61MEeOdBunZhTRw1w _Sidb_K1MEeOdBunZhTRw1w" decisionInputFlow="_Sidb_K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidb-a1MEeOdBunZhTRw1w" source="_Sidb8K1MEeOdBunZhTRw1w" target="_Sidb6q1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidb-q1MEeOdBunZhTRw1w" source="_Sidb9a1MEeOdBunZhTRw1w" target="_Sidb6K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidb-61MEeOdBunZhTRw1w" source="_Sidb8K1MEeOdBunZhTRw1w" target="_Sidb-K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidb_K1MEeOdBunZhTRw1w" source="_Sidb7a1MEeOdBunZhTRw1w" target="_Sidb-K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidb_a1MEeOdBunZhTRw1w" source="_Sidb-K1MEeOdBunZhTRw1w" target="_Sidb8q1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sidb_q1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidb_61MEeOdBunZhTRw1w" source="_SidcAa1MEeOdBunZhTRw1w" target="_Sidb8K1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcAK1MEeOdBunZhTRw1w" source="_Sidb6K1MEeOdBunZhTRw1w" target="_SidcAq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SidcAa1MEeOdBunZhTRw1w" name="CastExpression@777e22c5.inputElement" outgoing="_Sidb_61MEeOdBunZhTRw1w" incoming="_SidcBa1MEeOdBunZhTRw1w" regionAsInput="_Sidb561MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SidcAq1MEeOdBunZhTRw1w" name="CastExpression@777e22c5.outputElement" outgoing="_SidcBq1MEeOdBunZhTRw1w" incoming="_SidcAK1MEeOdBunZhTRw1w" regionAsOutput="_Sidb561MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcA61MEeOdBunZhTRw1w" source="_Sic5na1MEeOdBunZhTRw1w" target="_Sic5oa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcBK1MEeOdBunZhTRw1w" source="_Sic5la1MEeOdBunZhTRw1w" target="_Sidb4a1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcBa1MEeOdBunZhTRw1w" source="_Sidb5K1MEeOdBunZhTRw1w" target="_SidcAa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcBq1MEeOdBunZhTRw1w" source="_SidcAq1MEeOdBunZhTRw1w" target="_Sic5kq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidcB61MEeOdBunZhTRw1w" name="ExpressionStatement@494a48cc" outgoing="_Sidf_q1MEeOdBunZhTRw1w" incoming="_Sidf_K1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SidcCK1MEeOdBunZhTRw1w" name="Fork(h)@5da521e" outgoing="_Sidf_a1MEeOdBunZhTRw1w" incoming="_SidcP61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidcCa1MEeOdBunZhTRw1w" name="RightHandSide@1302be2">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SidcCq1MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_SidcC61MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_SidcPa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcDK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcDa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SidcDq1MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SidcD61MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_SidcEK1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sidf-61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcEa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcEq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SidcE61MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_SidcPK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcFK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcFa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SidcFq1MEeOdBunZhTRw1w" name="Call(>>>)">
                <argument xmi:id="_SidcF61MEeOdBunZhTRw1w" name="Call(>>>).argument(b)" incoming="_SidcPK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcGK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcGa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SidcGq1MEeOdBunZhTRw1w" name="Call(>>>).argument(n)" incoming="_SidcPa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcG61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcHK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SidcHa1MEeOdBunZhTRw1w" name="Call(>>>).result(null)" outgoing="_SidcPq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcHq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcH61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-gtgtgt"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SidcIK1MEeOdBunZhTRw1w" name="CastExpression@1302be2" mode="parallel" outputElement="_SidcO61MEeOdBunZhTRw1w" inputElement="_SidcOq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_SidcIa1MEeOdBunZhTRw1w" name="Merge(CastExpression@1302be2.operand)" outgoing="_SidcOa1MEeOdBunZhTRw1w" incoming="_SidcM61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SidcIq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_SidcI61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).object" incoming="_SidcMq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcJK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcJa1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SidcJq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).result" outgoing="_SidcNa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcJ61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcKK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SidcKa1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(BitString).object)" outgoing="_SidcMq1MEeOdBunZhTRw1w _SidcNK1MEeOdBunZhTRw1w" incoming="_SidcOK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SidcKq1MEeOdBunZhTRw1w" name="Call(ToInteger)">
                  <argument xmi:id="_SidcK61MEeOdBunZhTRw1w" name="Call(ToInteger).argument(b)" incoming="_SidcNq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcLK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcLa1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_SidcLq1MEeOdBunZhTRw1w" name="Call(ToInteger).result(null)" outgoing="_SidcM61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcL61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcMK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_SidcMa1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(BitString).result)" outgoing="_SidcNq1MEeOdBunZhTRw1w" incoming="_SidcNK1MEeOdBunZhTRw1w _SidcNa1MEeOdBunZhTRw1w" decisionInputFlow="_SidcNa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcMq1MEeOdBunZhTRw1w" source="_SidcKa1MEeOdBunZhTRw1w" target="_SidcI61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcM61MEeOdBunZhTRw1w" source="_SidcLq1MEeOdBunZhTRw1w" target="_SidcIa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcNK1MEeOdBunZhTRw1w" source="_SidcKa1MEeOdBunZhTRw1w" target="_SidcMa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcNa1MEeOdBunZhTRw1w" source="_SidcJq1MEeOdBunZhTRw1w" target="_SidcMa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcNq1MEeOdBunZhTRw1w" source="_SidcMa1MEeOdBunZhTRw1w" target="_SidcK61MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SidcN61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcOK1MEeOdBunZhTRw1w" source="_SidcOq1MEeOdBunZhTRw1w" target="_SidcKa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcOa1MEeOdBunZhTRw1w" source="_SidcIa1MEeOdBunZhTRw1w" target="_SidcO61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SidcOq1MEeOdBunZhTRw1w" name="CastExpression@1302be2.inputElement" outgoing="_SidcOK1MEeOdBunZhTRw1w" incoming="_SidcPq1MEeOdBunZhTRw1w" regionAsInput="_SidcIK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SidcO61MEeOdBunZhTRw1w" name="CastExpression@1302be2.outputElement" outgoing="_SidcP61MEeOdBunZhTRw1w" incoming="_SidcOa1MEeOdBunZhTRw1w" regionAsOutput="_SidcIK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcPK1MEeOdBunZhTRw1w" source="_SidcE61MEeOdBunZhTRw1w" target="_SidcF61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcPa1MEeOdBunZhTRw1w" source="_SidcC61MEeOdBunZhTRw1w" target="_SidcGq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcPq1MEeOdBunZhTRw1w" source="_SidcHa1MEeOdBunZhTRw1w" target="_SidcOq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcP61MEeOdBunZhTRw1w" source="_SidcO61MEeOdBunZhTRw1w" target="_SidcCK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidcQK1MEeOdBunZhTRw1w" name="ExpressionStatement@52ee11e1" outgoing="_SidgAa1MEeOdBunZhTRw1w" incoming="_Sidf_q1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SidcQa1MEeOdBunZhTRw1w" name="Fork(h)@1b9199bc" outgoing="_SidgO61MEeOdBunZhTRw1w" incoming="_SidcgK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidcQq1MEeOdBunZhTRw1w" name="RightHandSide@3ddb7e6d">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SidcQ61MEeOdBunZhTRw1w" name="Value(4)">
                <result xmi:id="_SidcRK1MEeOdBunZhTRw1w" name="Value(4).result" outgoing="_SidcfK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcRa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcRq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SidcR61MEeOdBunZhTRw1w" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SidcSK1MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_SidcSa1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_Sidf_a1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcSq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcS61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SidcTK1MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_Sidcfa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcTa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcTq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SidcT61MEeOdBunZhTRw1w" name="Call(ToBitString)">
                <argument xmi:id="_SidcUK1MEeOdBunZhTRw1w" name="Call(ToBitString).argument(n)" incoming="_SidcfK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcUa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcUq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SidcU61MEeOdBunZhTRw1w" name="Call(ToBitString).result(null)" outgoing="_Sidcfq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcVK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcVa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToBitString"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SidcVq1MEeOdBunZhTRw1w" name="Call(^)">
                <argument xmi:id="_SidcV61MEeOdBunZhTRw1w" name="Call(^).argument(b1)" incoming="_Sidcfa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcWK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcWa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SidcWq1MEeOdBunZhTRw1w" name="Call(^).argument(b2)" incoming="_Sidcfq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcW61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcXK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SidcXa1MEeOdBunZhTRw1w" name="Call(^).result(null)" outgoing="_Sidcf61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcXq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcX61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-caret"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SidcYK1MEeOdBunZhTRw1w" name="CastExpression@3ddb7e6d" mode="parallel" outputElement="_Sidce61MEeOdBunZhTRw1w" inputElement="_Sidceq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_SidcYa1MEeOdBunZhTRw1w" name="Merge(CastExpression@3ddb7e6d.operand)" outgoing="_Sidcea1MEeOdBunZhTRw1w" incoming="_Sidcc61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SidcYq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_SidcY61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).object" incoming="_Sidccq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcZK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcZa1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SidcZq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).result" outgoing="_Sidcda1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcZ61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcaK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_Sidcaa1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(BitString).object)" outgoing="_Sidccq1MEeOdBunZhTRw1w _SidcdK1MEeOdBunZhTRw1w" incoming="_SidceK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sidcaq1MEeOdBunZhTRw1w" name="Call(ToInteger)">
                  <argument xmi:id="_Sidca61MEeOdBunZhTRw1w" name="Call(ToInteger).argument(b)" incoming="_Sidcdq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcbK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidcba1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Sidcbq1MEeOdBunZhTRw1w" name="Call(ToInteger).result(null)" outgoing="_Sidcc61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidcb61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidccK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_Sidcca1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(BitString).result)" outgoing="_Sidcdq1MEeOdBunZhTRw1w" incoming="_SidcdK1MEeOdBunZhTRw1w _Sidcda1MEeOdBunZhTRw1w" decisionInputFlow="_Sidcda1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidccq1MEeOdBunZhTRw1w" source="_Sidcaa1MEeOdBunZhTRw1w" target="_SidcY61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidcc61MEeOdBunZhTRw1w" source="_Sidcbq1MEeOdBunZhTRw1w" target="_SidcYa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcdK1MEeOdBunZhTRw1w" source="_Sidcaa1MEeOdBunZhTRw1w" target="_Sidcca1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidcda1MEeOdBunZhTRw1w" source="_SidcZq1MEeOdBunZhTRw1w" target="_Sidcca1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidcdq1MEeOdBunZhTRw1w" source="_Sidcca1MEeOdBunZhTRw1w" target="_Sidca61MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sidcd61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidceK1MEeOdBunZhTRw1w" source="_Sidceq1MEeOdBunZhTRw1w" target="_Sidcaa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidcea1MEeOdBunZhTRw1w" source="_SidcYa1MEeOdBunZhTRw1w" target="_Sidce61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sidceq1MEeOdBunZhTRw1w" name="CastExpression@3ddb7e6d.inputElement" outgoing="_SidceK1MEeOdBunZhTRw1w" incoming="_Sidcf61MEeOdBunZhTRw1w" regionAsInput="_SidcYK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_Sidce61MEeOdBunZhTRw1w" name="CastExpression@3ddb7e6d.outputElement" outgoing="_SidcgK1MEeOdBunZhTRw1w" incoming="_Sidcea1MEeOdBunZhTRw1w" regionAsOutput="_SidcYK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcfK1MEeOdBunZhTRw1w" source="_SidcRK1MEeOdBunZhTRw1w" target="_SidcUK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidcfa1MEeOdBunZhTRw1w" source="_SidcTK1MEeOdBunZhTRw1w" target="_SidcV61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidcfq1MEeOdBunZhTRw1w" source="_SidcU61MEeOdBunZhTRw1w" target="_SidcWq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidcf61MEeOdBunZhTRw1w" source="_SidcXa1MEeOdBunZhTRw1w" target="_Sidceq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcgK1MEeOdBunZhTRw1w" source="_Sidce61MEeOdBunZhTRw1w" target="_SidcQa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidcga1MEeOdBunZhTRw1w" name="ExpressionStatement@607b7e08" outgoing="_SidgBK1MEeOdBunZhTRw1w" incoming="_SidgAa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sidcgq1MEeOdBunZhTRw1w" name="Fork(a)@1d6ffa3" outgoing="_SidgPK1MEeOdBunZhTRw1w" incoming="_Sidcjq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidcg61MEeOdBunZhTRw1w" name="RightHandSide@4a292746">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SidchK1MEeOdBunZhTRw1w" name="Call(>)">
                <argument xmi:id="_Sidcha1MEeOdBunZhTRw1w" name="Call(>).argument(x)" incoming="_Sidf_61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidchq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidch61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SidciK1MEeOdBunZhTRw1w" name="Call(>).argument(y)" incoming="_SidgAK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidcia1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidciq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sidci61MEeOdBunZhTRw1w" name="Call(>).result(result)" outgoing="_Sidcjq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcjK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidcja1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidcjq1MEeOdBunZhTRw1w" source="_Sidci61MEeOdBunZhTRw1w" target="_Sidcgq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidcj61MEeOdBunZhTRw1w" name="ExpressionStatement@57e1a67c" outgoing="_SidgB61MEeOdBunZhTRw1w" incoming="_SidgBK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SidckK1MEeOdBunZhTRw1w" name="Fork(b)@130d6825" outgoing="_SidgPa1MEeOdBunZhTRw1w" incoming="_SidcnK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidcka1MEeOdBunZhTRw1w" name="RightHandSide@55305ee8">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sidckq1MEeOdBunZhTRw1w" name="Call(&lt;)">
                <argument xmi:id="_Sidck61MEeOdBunZhTRw1w" name="Call(&lt;).argument(x)" incoming="_SidgAq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidclK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidcla1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sidclq1MEeOdBunZhTRw1w" name="Call(&lt;).argument(y)" incoming="_SidgA61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidcl61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcmK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sidcma1MEeOdBunZhTRw1w" name="Call(&lt;).result(result)" outgoing="_SidcnK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidcmq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidcm61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-lt"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcnK1MEeOdBunZhTRw1w" source="_Sidcma1MEeOdBunZhTRw1w" target="_SidckK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidcna1MEeOdBunZhTRw1w" name="ExpressionStatement@4e32d2e1" outgoing="_SidgCq1MEeOdBunZhTRw1w" incoming="_SidgB61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sidcnq1MEeOdBunZhTRw1w" name="Fork(c)@48d06579" outgoing="_SidgPq1MEeOdBunZhTRw1w" incoming="_Sidcqq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidcn61MEeOdBunZhTRw1w" name="RightHandSide@69b61047">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SidcoK1MEeOdBunZhTRw1w" name="Call(>=)">
                <argument xmi:id="_Sidcoa1MEeOdBunZhTRw1w" name="Call(>=).argument(x)" incoming="_SidgBa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidcoq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidco61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SidcpK1MEeOdBunZhTRw1w" name="Call(>=).argument(y)" incoming="_SidgBq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidcpa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidcpq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sidcp61MEeOdBunZhTRw1w" name="Call(>=).result(result)" outgoing="_Sidcqq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcqK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidcqa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ge"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidcqq1MEeOdBunZhTRw1w" source="_Sidcp61MEeOdBunZhTRw1w" target="_Sidcnq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidcq61MEeOdBunZhTRw1w" name="ExpressionStatement@5ffccf4" outgoing="_SidgC61MEeOdBunZhTRw1w" incoming="_SidgCq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SidcrK1MEeOdBunZhTRw1w" name="Fork(d)@b0ff5e1" outgoing="_SidgP61MEeOdBunZhTRw1w" incoming="_SidcuK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidcra1MEeOdBunZhTRw1w" name="RightHandSide@44d78c73">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sidcrq1MEeOdBunZhTRw1w" name="Call(&lt;=)">
                <argument xmi:id="_Sidcr61MEeOdBunZhTRw1w" name="Call(&lt;=).argument(x)" incoming="_SidgCK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidcsK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidcsa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sidcsq1MEeOdBunZhTRw1w" name="Call(&lt;=).argument(y)" incoming="_SidgCa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidcs61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidctK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sidcta1MEeOdBunZhTRw1w" name="Call(&lt;=).result(result)" outgoing="_SidcuK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidctq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidct61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SidcuK1MEeOdBunZhTRw1w" source="_Sidcta1MEeOdBunZhTRw1w" target="_SidcrK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidcua1MEeOdBunZhTRw1w" name="ExpressionStatement@1d8bc739" outgoing="_SidgDK1MEeOdBunZhTRw1w" incoming="_SidgC61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sidcuq1MEeOdBunZhTRw1w" name="Fork(f)@420ba5a6" outgoing="_SidgDa1MEeOdBunZhTRw1w _SidgEa1MEeOdBunZhTRw1w _SidgKa1MEeOdBunZhTRw1w" incoming="_Sidcwa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidcu61MEeOdBunZhTRw1w" name="RightHandSide@aa8572a">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SidcvK1MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_Sidcva1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_Sidcwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidcvq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidcv61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SidcwK1MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidcwa1MEeOdBunZhTRw1w" source="_Sidcva1MEeOdBunZhTRw1w" target="_Sidcuq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidcwq1MEeOdBunZhTRw1w" name="ExpressionStatement@1c82db5b" outgoing="_SidgD61MEeOdBunZhTRw1w" incoming="_SidgDK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sidcw61MEeOdBunZhTRw1w" name="Fork(g)@3cdd08b6" outgoing="_SidgDq1MEeOdBunZhTRw1w" incoming="_Sidcyq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidcxK1MEeOdBunZhTRw1w" name="RightHandSide@536703f1">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sidcxa1MEeOdBunZhTRw1w" name="Value(false)">
                <result xmi:id="_Sidcxq1MEeOdBunZhTRw1w" name="Value(false).result" outgoing="_Sidcyq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidcx61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidcyK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_Sidcya1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidcyq1MEeOdBunZhTRw1w" source="_Sidcxq1MEeOdBunZhTRw1w" target="_Sidcw61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidcy61MEeOdBunZhTRw1w" name="ExpressionStatement@6fb1667b" outgoing="_SidgEq1MEeOdBunZhTRw1w" incoming="_SidgD61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SidczK1MEeOdBunZhTRw1w" name="Fork(e)@1a27cb52" outgoing="_SidgEK1MEeOdBunZhTRw1w" incoming="_Sidc2K1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidcza1MEeOdBunZhTRw1w" name="RightHandSide@2a9581e8">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sidczq1MEeOdBunZhTRw1w" name="Call(Or)">
                <argument xmi:id="_Sidcz61MEeOdBunZhTRw1w" name="Call(Or).argument(x)" incoming="_SidgDa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidc0K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidc0a1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sidc0q1MEeOdBunZhTRw1w" name="Call(Or).argument(y)" incoming="_SidgDq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidc061MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidc1K1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sidc1a1MEeOdBunZhTRw1w" name="Call(Or).result(result)" outgoing="_Sidc2K1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidc1q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidc161MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidc2K1MEeOdBunZhTRw1w" source="_Sidc1a1MEeOdBunZhTRw1w" target="_SidczK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidc2a1MEeOdBunZhTRw1w" name="ExpressionStatement@13e0c71c" outgoing="_SidgFK1MEeOdBunZhTRw1w" incoming="_SidgEq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sidc2q1MEeOdBunZhTRw1w" name="Fork(e)@223cc532" outgoing="_SidgE61MEeOdBunZhTRw1w" incoming="_Sidc5q1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidc261MEeOdBunZhTRw1w" name="RightHandSide@43b6672d">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sidc3K1MEeOdBunZhTRw1w" name="Call(And)">
                <argument xmi:id="_Sidc3a1MEeOdBunZhTRw1w" name="Call(And).argument(x)" incoming="_SidgEK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidc3q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidc361MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sidc4K1MEeOdBunZhTRw1w" name="Call(And).argument(y)" incoming="_SidgEa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidc4a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidc4q1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sidc461MEeOdBunZhTRw1w" name="Call(And).result(result)" outgoing="_Sidc5q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidc5K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidc5a1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-And"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidc5q1MEeOdBunZhTRw1w" source="_Sidc461MEeOdBunZhTRw1w" target="_Sidc2q1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidc561MEeOdBunZhTRw1w" name="ExpressionStatement@1e11c391" outgoing="_SidgFa1MEeOdBunZhTRw1w" incoming="_SidgFK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sidc6K1MEeOdBunZhTRw1w" name="Fork(e)@6020b883" outgoing="_SidgQK1MEeOdBunZhTRw1w" incoming="_Sidc8a1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidc6a1MEeOdBunZhTRw1w" name="RightHandSide@431d1c3">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sidc6q1MEeOdBunZhTRw1w" name="Call(Not)">
                <argument xmi:id="_Sidc661MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SidgE61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidc7K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidc7a1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sidc7q1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_Sidc8a1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidc761MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidc8K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidc8a1MEeOdBunZhTRw1w" source="_Sidc7q1MEeOdBunZhTRw1w" target="_Sidc6K1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidc8q1MEeOdBunZhTRw1w" name="ExpressionStatement@32ce028b" outgoing="_SidgFq1MEeOdBunZhTRw1w" incoming="_SidgFa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sidc861MEeOdBunZhTRw1w" name="Fork(e1)@1a1101e9" outgoing="_SidgQa1MEeOdBunZhTRw1w" incoming="_SiddE61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidc9K1MEeOdBunZhTRw1w" name="RightHandSide@5294755d">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sidc9a1MEeOdBunZhTRw1w" name="Value(3)">
                <result xmi:id="_Sidc9q1MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_SiddEK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidc961MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidc-K1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Sidc-a1MEeOdBunZhTRw1w" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sidc-q1MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural)">
                <argument xmi:id="_Sidc-61MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural).argument(x)" incoming="_SiddEK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidc_K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidc_a1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sidc_q1MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural).result(result)" outgoing="_SiddEa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidc_61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddAK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiddAa1MEeOdBunZhTRw1w" name="Value(*)">
                <result xmi:id="_SiddAq1MEeOdBunZhTRw1w" name="Value(*).result" outgoing="_SiddEq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddA61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddBK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddBa1MEeOdBunZhTRw1w" value="*">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiddBq1MEeOdBunZhTRw1w" name="Call(&lt;)">
                <argument xmi:id="_SiddB61MEeOdBunZhTRw1w" name="Call(&lt;).argument(x)" incoming="_SiddEa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddCK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddCa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SiddCq1MEeOdBunZhTRw1w" name="Call(&lt;).argument(y)" incoming="_SiddEq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddC61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddDK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SiddDa1MEeOdBunZhTRw1w" name="Call(&lt;).result(result)" outgoing="_SiddE61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddDq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddD61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-UnlimitedNaturalFunctions-lt"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddEK1MEeOdBunZhTRw1w" source="_Sidc9q1MEeOdBunZhTRw1w" target="_Sidc-61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddEa1MEeOdBunZhTRw1w" source="_Sidc_q1MEeOdBunZhTRw1w" target="_SiddB61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddEq1MEeOdBunZhTRw1w" source="_SiddAq1MEeOdBunZhTRw1w" target="_SiddCq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddE61MEeOdBunZhTRw1w" source="_SiddDa1MEeOdBunZhTRw1w" target="_Sidc861MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiddFK1MEeOdBunZhTRw1w" name="ExpressionStatement@307e501c" outgoing="_SidgGK1MEeOdBunZhTRw1w" incoming="_SidgFq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SiddFa1MEeOdBunZhTRw1w" name="Fork(e2)@41de304" outgoing="_SidgQq1MEeOdBunZhTRw1w" incoming="_SiddSq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiddFq1MEeOdBunZhTRw1w" name="RightHandSide@46231db8">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiddF61MEeOdBunZhTRw1w" name="Value(3)">
                <result xmi:id="_SiddGK1MEeOdBunZhTRw1w" name="Value(3).result" outgoing="_SiddR61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddGa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddGq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SiddG61MEeOdBunZhTRw1w" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SiddHK1MEeOdBunZhTRw1w" name="CastExpression@4a9aa2a7" mode="parallel" outputElement="_SiddN61MEeOdBunZhTRw1w" inputElement="_SiddNq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_SiddHa1MEeOdBunZhTRw1w" name="Merge(CastExpression@4a9aa2a7.operand)" outgoing="_SiddNa1MEeOdBunZhTRw1w" incoming="_SiddL61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SiddHq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_SiddH61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer).object" incoming="_SiddLq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddIK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddIa1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SiddIq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer).result" outgoing="_SiddMa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddI61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddJK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SiddJa1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(Integer).object)" outgoing="_SiddLq1MEeOdBunZhTRw1w _SiddMK1MEeOdBunZhTRw1w" incoming="_SiddNK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiddJq1MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural)">
                  <argument xmi:id="_SiddJ61MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural).argument(x)" incoming="_SiddMq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddKK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddKa1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_SiddKq1MEeOdBunZhTRw1w" name="Call(ToUnlimitedNatural).result(result)" outgoing="_SiddL61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddK61MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddLK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToUnlimitedNatural"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_SiddLa1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(Integer).result)" outgoing="_SiddMq1MEeOdBunZhTRw1w" incoming="_SiddMK1MEeOdBunZhTRw1w _SiddMa1MEeOdBunZhTRw1w" decisionInputFlow="_SiddMa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddLq1MEeOdBunZhTRw1w" source="_SiddJa1MEeOdBunZhTRw1w" target="_SiddH61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddL61MEeOdBunZhTRw1w" source="_SiddKq1MEeOdBunZhTRw1w" target="_SiddHa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddMK1MEeOdBunZhTRw1w" source="_SiddJa1MEeOdBunZhTRw1w" target="_SiddLa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddMa1MEeOdBunZhTRw1w" source="_SiddIq1MEeOdBunZhTRw1w" target="_SiddLa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddMq1MEeOdBunZhTRw1w" source="_SiddLa1MEeOdBunZhTRw1w" target="_SiddJ61MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SiddM61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddNK1MEeOdBunZhTRw1w" source="_SiddNq1MEeOdBunZhTRw1w" target="_SiddJa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddNa1MEeOdBunZhTRw1w" source="_SiddHa1MEeOdBunZhTRw1w" target="_SiddN61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SiddNq1MEeOdBunZhTRw1w" name="CastExpression@4a9aa2a7.inputElement" outgoing="_SiddNK1MEeOdBunZhTRw1w" incoming="_SiddR61MEeOdBunZhTRw1w" regionAsInput="_SiddHK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SiddN61MEeOdBunZhTRw1w" name="CastExpression@4a9aa2a7.outputElement" outgoing="_SiddSK1MEeOdBunZhTRw1w" incoming="_SiddNa1MEeOdBunZhTRw1w" regionAsOutput="_SiddHK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiddOK1MEeOdBunZhTRw1w" name="Value(*)">
                <result xmi:id="_SiddOa1MEeOdBunZhTRw1w" name="Value(*).result" outgoing="_SiddSa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddOq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddO61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddPK1MEeOdBunZhTRw1w" value="*">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiddPa1MEeOdBunZhTRw1w" name="Call(&lt;)">
                <argument xmi:id="_SiddPq1MEeOdBunZhTRw1w" name="Call(&lt;).argument(x)" incoming="_SiddSK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddP61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddQK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SiddQa1MEeOdBunZhTRw1w" name="Call(&lt;).argument(y)" incoming="_SiddSa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddQq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddQ61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SiddRK1MEeOdBunZhTRw1w" name="Call(&lt;).result(result)" outgoing="_SiddSq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddRa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddRq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-UnlimitedNaturalFunctions-lt"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddR61MEeOdBunZhTRw1w" source="_SiddGK1MEeOdBunZhTRw1w" target="_SiddNq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddSK1MEeOdBunZhTRw1w" source="_SiddN61MEeOdBunZhTRw1w" target="_SiddPq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddSa1MEeOdBunZhTRw1w" source="_SiddOa1MEeOdBunZhTRw1w" target="_SiddQa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddSq1MEeOdBunZhTRw1w" source="_SiddRK1MEeOdBunZhTRw1w" target="_SiddFa1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiddS61MEeOdBunZhTRw1w" name="ExpressionStatement@96b44ea" outgoing="_SidgGq1MEeOdBunZhTRw1w" incoming="_SidgGK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SiddTK1MEeOdBunZhTRw1w" name="Fork(e3)@47bf615e" outgoing="_SidgQ61MEeOdBunZhTRw1w" incoming="_SiddVa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiddTa1MEeOdBunZhTRw1w" name="RightHandSide@6591871e">
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SiddTq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Person)" classifier="_SieExa1MEeOdBunZhTRw1w">
                <object xmi:id="_SiddT61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Person).object" incoming="_SidgF61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddUK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddUa1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SiddUq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Person).result" outgoing="_SiddVa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddU61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddVK1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddVa1MEeOdBunZhTRw1w" source="_SiddUq1MEeOdBunZhTRw1w" target="_SiddTK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiddVq1MEeOdBunZhTRw1w" name="ExpressionStatement@2657d257" outgoing="_SidgHK1MEeOdBunZhTRw1w" incoming="_SidgGq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SiddV61MEeOdBunZhTRw1w" name="Fork(e4)@3846837c" outgoing="_SidgRK1MEeOdBunZhTRw1w" incoming="_SiddYK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiddWK1MEeOdBunZhTRw1w" name="RightHandSide@1d625ec1">
              <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SiddWa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Employee)" classifier="_SieFTq1MEeOdBunZhTRw1w" isDirect="true">
                <object xmi:id="_SiddWq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Employee).object" incoming="_SidgGa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddW61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddXK1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SiddXa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Employee).result" outgoing="_SiddYK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddXq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddX61MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddYK1MEeOdBunZhTRw1w" source="_SiddXa1MEeOdBunZhTRw1w" target="_SiddV61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiddYa1MEeOdBunZhTRw1w" name="ExpressionStatement@3448c121" outgoing="_SidgH61MEeOdBunZhTRw1w" incoming="_SidgHK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SiddYq1MEeOdBunZhTRw1w" name="Fork(e5)@652c775e" outgoing="_SidgRa1MEeOdBunZhTRw1w" incoming="_SidddK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiddY61MEeOdBunZhTRw1w" name="RightHandSide@4a50f036">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiddZK1MEeOdBunZhTRw1w" name="Value(0)">
                <result xmi:id="_SiddZa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_Siddc61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddZq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddZ61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SiddaK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_Siddaa1MEeOdBunZhTRw1w" name="Test(==)">
                <first xmi:id="_Siddaq1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_SidgG61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidda61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddbK1MEeOdBunZhTRw1w" value="1"/>
                </first>
                <result xmi:id="_Siddba1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_SidddK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siddbq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddb61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <second xmi:id="_SiddcK1MEeOdBunZhTRw1w" name="Test(==).second" incoming="_Siddc61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siddca1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddcq1MEeOdBunZhTRw1w" value="1"/>
                </second>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siddc61MEeOdBunZhTRw1w" source="_SiddZa1MEeOdBunZhTRw1w" target="_SiddcK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SidddK1MEeOdBunZhTRw1w" source="_Siddba1MEeOdBunZhTRw1w" target="_SiddYq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Siddda1MEeOdBunZhTRw1w" name="ExpressionStatement@1215a6eb" outgoing="_SidgIa1MEeOdBunZhTRw1w" incoming="_SidgH61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sidddq1MEeOdBunZhTRw1w" name="Fork(e6)@7ca698b0" outgoing="_SidgRq1MEeOdBunZhTRw1w" incoming="_SiddxK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Siddd61MEeOdBunZhTRw1w" name="RightHandSide@1d728abf">
              <node xmi:type="uml:TestIdentityAction" xmi:id="_SiddeK1MEeOdBunZhTRw1w" name="Test(==)" incoming="_Siddtq1MEeOdBunZhTRw1w">
                <first xmi:id="_Siddea1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_Siddra1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siddeq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidde61MEeOdBunZhTRw1w" value="1"/>
                </first>
                <result xmi:id="_SiddfK1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_SiddwK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siddfa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddfq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <second xmi:id="_Siddf61MEeOdBunZhTRw1w" name="Test(==).second" incoming="_Siddr61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddgK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddga1MEeOdBunZhTRw1w" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Siddgq1MEeOdBunZhTRw1w" name="Fork(Fork(monitor)@a065cad)" outgoing="_Siddra1MEeOdBunZhTRw1w _Siddrq1MEeOdBunZhTRw1w" incoming="_SidgHa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Siddg61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
                <argument xmi:id="_SiddhK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_Siddrq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siddha1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddhq1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_Siddh61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_Siddsa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddiK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddia1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Siddiq1MEeOdBunZhTRw1w" name="Fork(Fork(monitor)@a065cad)" outgoing="_Siddr61MEeOdBunZhTRw1w _SiddsK1MEeOdBunZhTRw1w" incoming="_SidgHq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Siddi61MEeOdBunZhTRw1w" name="Call(NotEmpty)">
                <argument xmi:id="_SiddjK1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SiddsK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siddja1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddjq1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_Siddj61MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_Siddsq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddkK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddka1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_Siddkq1MEeOdBunZhTRw1w" name="Initial(Test(==))" outgoing="_Sidduq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_Siddk61MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_Sidds61MEeOdBunZhTRw1w _Siddu61MEeOdBunZhTRw1w" incoming="_Siddsa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ForkNode" xmi:id="_SiddlK1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_SiddtK1MEeOdBunZhTRw1w _Siddta1MEeOdBunZhTRw1w" incoming="_Siddsq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Siddla1MEeOdBunZhTRw1w" name="Call(Not)" incoming="_SidduK1MEeOdBunZhTRw1w">
                <argument xmi:id="_Siddlq1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_Sidds61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siddl61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddmK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Siddma1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_Siddwa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siddmq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddm61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiddnK1MEeOdBunZhTRw1w" name="Call(Not)" incoming="_Siddvq1MEeOdBunZhTRw1w">
                <argument xmi:id="_Siddna1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SiddtK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siddnq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddn61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SiddoK1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_Siddwq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siddoa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddoq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_Siddo61MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_Siddtq1MEeOdBunZhTRw1w _SidduK1MEeOdBunZhTRw1w" incoming="_Siddta1MEeOdBunZhTRw1w _SiddvK1MEeOdBunZhTRw1w" decisionInputFlow="_Siddta1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SiddpK1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_SiddvK1MEeOdBunZhTRw1w _Siddvq1MEeOdBunZhTRw1w" incoming="_Sidduq1MEeOdBunZhTRw1w _Siddu61MEeOdBunZhTRw1w" decisionInputFlow="_Siddu61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_Siddpa1MEeOdBunZhTRw1w" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" outgoing="_Siddw61MEeOdBunZhTRw1w" incoming="_SiddwK1MEeOdBunZhTRw1w _Siddwa1MEeOdBunZhTRw1w _Siddwq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Siddpq1MEeOdBunZhTRw1w" name="Call(Not)">
                <argument xmi:id="_Siddp61MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_Siddw61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiddqK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddqa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Siddqq1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_SiddxK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siddq61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiddrK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siddra1MEeOdBunZhTRw1w" source="_Siddgq1MEeOdBunZhTRw1w" target="_Siddea1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siddrq1MEeOdBunZhTRw1w" source="_Siddgq1MEeOdBunZhTRw1w" target="_SiddhK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siddr61MEeOdBunZhTRw1w" source="_Siddiq1MEeOdBunZhTRw1w" target="_Siddf61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddsK1MEeOdBunZhTRw1w" source="_Siddiq1MEeOdBunZhTRw1w" target="_SiddjK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siddsa1MEeOdBunZhTRw1w" source="_Siddh61MEeOdBunZhTRw1w" target="_Siddk61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siddsq1MEeOdBunZhTRw1w" source="_Siddj61MEeOdBunZhTRw1w" target="_SiddlK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidds61MEeOdBunZhTRw1w" source="_Siddk61MEeOdBunZhTRw1w" target="_Siddlq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddtK1MEeOdBunZhTRw1w" source="_SiddlK1MEeOdBunZhTRw1w" target="_Siddna1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siddta1MEeOdBunZhTRw1w" source="_SiddlK1MEeOdBunZhTRw1w" target="_Siddo61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Siddtq1MEeOdBunZhTRw1w" source="_Siddo61MEeOdBunZhTRw1w" target="_SiddeK1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Siddt61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SidduK1MEeOdBunZhTRw1w" source="_Siddo61MEeOdBunZhTRw1w" target="_Siddla1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Siddua1MEeOdBunZhTRw1w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sidduq1MEeOdBunZhTRw1w" source="_Siddkq1MEeOdBunZhTRw1w" target="_SiddpK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siddu61MEeOdBunZhTRw1w" source="_Siddk61MEeOdBunZhTRw1w" target="_SiddpK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SiddvK1MEeOdBunZhTRw1w" source="_SiddpK1MEeOdBunZhTRw1w" target="_Siddo61MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Siddva1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Siddvq1MEeOdBunZhTRw1w" source="_SiddpK1MEeOdBunZhTRw1w" target="_SiddnK1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Siddv61MEeOdBunZhTRw1w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddwK1MEeOdBunZhTRw1w" source="_SiddfK1MEeOdBunZhTRw1w" target="_Siddpa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siddwa1MEeOdBunZhTRw1w" source="_Siddma1MEeOdBunZhTRw1w" target="_Siddpa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siddwq1MEeOdBunZhTRw1w" source="_SiddoK1MEeOdBunZhTRw1w" target="_Siddpa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siddw61MEeOdBunZhTRw1w" source="_Siddpa1MEeOdBunZhTRw1w" target="_Siddp61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiddxK1MEeOdBunZhTRw1w" source="_Siddqq1MEeOdBunZhTRw1w" target="_Sidddq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Siddxa1MEeOdBunZhTRw1w" name="ExpressionStatement@498cab11" outgoing="_SidgI61MEeOdBunZhTRw1w" incoming="_SidgIa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Siddxq1MEeOdBunZhTRw1w" name="Fork(e7)@93fb7d3" outgoing="_SidgR61MEeOdBunZhTRw1w" incoming="_Sidd2a1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Siddx61MEeOdBunZhTRw1w" name="RightHandSide@363d8263">
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SiddyK1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SieFVq1MEeOdBunZhTRw1w">
                <object xmi:id="_Siddya1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_Sidd161MEeOdBunZhTRw1w" type="_SieFTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siddyq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddy61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SiddzK1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_Sidd2K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siddza1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siddzq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Siddz61MEeOdBunZhTRw1w" name="Fork(Fork(employee)@138342f6)" outgoing="_Sidd161MEeOdBunZhTRw1w" incoming="_SidgIK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sidd0K1MEeOdBunZhTRw1w" name="Call(IsEmpty)">
                <argument xmi:id="_Sidd0a1MEeOdBunZhTRw1w" name="Call(IsEmpty).argument(seq)" incoming="_Sidd2K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidd0q1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidd061MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_Sidd1K1MEeOdBunZhTRw1w" name="Call(IsEmpty).result()" outgoing="_Sidd2a1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidd1a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidd1q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidd161MEeOdBunZhTRw1w" source="_Siddz61MEeOdBunZhTRw1w" target="_Siddya1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidd2K1MEeOdBunZhTRw1w" source="_SiddzK1MEeOdBunZhTRw1w" target="_Sidd0a1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidd2a1MEeOdBunZhTRw1w" source="_Sidd1K1MEeOdBunZhTRw1w" target="_Siddxq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidd2q1MEeOdBunZhTRw1w" name="ExpressionStatement@27daad50" outgoing="_SidgJK1MEeOdBunZhTRw1w" incoming="_SidgI61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sidd261MEeOdBunZhTRw1w" name="Fork(e8)@62f479ee" outgoing="_SidgSK1MEeOdBunZhTRw1w" incoming="_Sidd7q1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidd3K1MEeOdBunZhTRw1w" name="RightHandSide@20712b03">
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_Sidd3a1MEeOdBunZhTRw1w" name="Read(name)" structuralFeature="_SieFVq1MEeOdBunZhTRw1w">
                <object xmi:id="_Sidd3q1MEeOdBunZhTRw1w" name="Read(name).object" incoming="_Sidd7K1MEeOdBunZhTRw1w" type="_SieFTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidd361MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidd4K1MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_Sidd4a1MEeOdBunZhTRw1w" name="Read(name).result" outgoing="_Sidd7a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidd4q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidd461MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_Sidd5K1MEeOdBunZhTRw1w" name="Fork(Fork(employee)@138342f6)" outgoing="_Sidd7K1MEeOdBunZhTRw1w" incoming="_SidgIq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sidd5a1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
                <argument xmi:id="_Sidd5q1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_Sidd7a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidd561MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidd6K1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_Sidd6a1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_Sidd7q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidd6q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidd661MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidd7K1MEeOdBunZhTRw1w" source="_Sidd5K1MEeOdBunZhTRw1w" target="_Sidd3q1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidd7a1MEeOdBunZhTRw1w" source="_Sidd4a1MEeOdBunZhTRw1w" target="_Sidd5q1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidd7q1MEeOdBunZhTRw1w" source="_Sidd6a1MEeOdBunZhTRw1w" target="_Sidd261MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidd761MEeOdBunZhTRw1w" name="ExpressionStatement@30667a81" outgoing="_SidgKq1MEeOdBunZhTRw1w" incoming="_SidgJK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sidd8K1MEeOdBunZhTRw1w" name="Fork(e9)@2616aa35" outgoing="_SidgSa1MEeOdBunZhTRw1w" incoming="_Sidd961MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidd8a1MEeOdBunZhTRw1w" name="RightHandSide@1a00911c">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sidd8q1MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_Sidd861MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_Sidd961MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidd9K1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidd9a1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_Sidd9q1MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidd961MEeOdBunZhTRw1w" source="_Sidd861MEeOdBunZhTRw1w" target="_Sidd8K1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidd-K1MEeOdBunZhTRw1w" name="ExpressionStatement@603b1acd" outgoing="_SidgLa1MEeOdBunZhTRw1w" incoming="_SidgKq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sidd-a1MEeOdBunZhTRw1w" name="Fork(f)@5d226aa1" outgoing="_SidgMa1MEeOdBunZhTRw1w _SidgM61MEeOdBunZhTRw1w _SidgSq1MEeOdBunZhTRw1w" incoming="_SideJq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidd-q1MEeOdBunZhTRw1w" name="RightHandSide@7e869fcb">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sidd-61MEeOdBunZhTRw1w" name="Call(&lt;)">
                <argument xmi:id="_Sidd_K1MEeOdBunZhTRw1w" name="Call(&lt;).argument(x)" incoming="_SidgJa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidd_a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidd_q1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sidd_61MEeOdBunZhTRw1w" name="Call(&lt;).argument(y)" incoming="_SidgJq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideAK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideAa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SideAq1MEeOdBunZhTRw1w" name="Call(&lt;).result(result)" outgoing="_SideJK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideA61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideBK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-lt"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SideBa1MEeOdBunZhTRw1w" name="Call(>)">
                <argument xmi:id="_SideBq1MEeOdBunZhTRw1w" name="Call(>).argument(x)" incoming="_SidgJ61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideB61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideCK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SideCa1MEeOdBunZhTRw1w" name="Call(>).argument(y)" incoming="_SidgKK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideCq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideC61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SideDK1MEeOdBunZhTRw1w" name="Call(>).result(result)" outgoing="_SideI61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideDa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideDq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SideD61MEeOdBunZhTRw1w" name="Call(Or)">
                <argument xmi:id="_SideEK1MEeOdBunZhTRw1w" name="Call(Or).argument(x)" incoming="_SideI61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideEa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideEq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SideE61MEeOdBunZhTRw1w" name="Call(Or).argument(y)" incoming="_SidgKa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideFK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideFa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SideFq1MEeOdBunZhTRw1w" name="Call(Or).result(result)" outgoing="_SideJa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideF61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideGK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SideGa1MEeOdBunZhTRw1w" name="Call(And)">
                <argument xmi:id="_SideGq1MEeOdBunZhTRw1w" name="Call(And).argument(x)" incoming="_SideJK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideG61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideHK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SideHa1MEeOdBunZhTRw1w" name="Call(And).argument(y)" incoming="_SideJa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideHq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideH61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SideIK1MEeOdBunZhTRw1w" name="Call(And).result(result)" outgoing="_SideJq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideIa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideIq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-And"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SideI61MEeOdBunZhTRw1w" source="_SideDK1MEeOdBunZhTRw1w" target="_SideEK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SideJK1MEeOdBunZhTRw1w" source="_SideAq1MEeOdBunZhTRw1w" target="_SideGq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SideJa1MEeOdBunZhTRw1w" source="_SideFq1MEeOdBunZhTRw1w" target="_SideHa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SideJq1MEeOdBunZhTRw1w" source="_SideIK1MEeOdBunZhTRw1w" target="_Sidd-a1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SideJ61MEeOdBunZhTRw1w" name="ExpressionStatement@55c747ad" outgoing="_SidgMK1MEeOdBunZhTRw1w" incoming="_SidgLa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SideKK1MEeOdBunZhTRw1w" name="Fork(f1)@68f60dc8" outgoing="_SidgS61MEeOdBunZhTRw1w" incoming="_SideZK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SideKa1MEeOdBunZhTRw1w" name="RightHandSide@7202fb4d">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SideKq1MEeOdBunZhTRw1w" name="Value(0)">
                <result xmi:id="_SideK61MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SideW61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideLK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideLa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SideLq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SideL61MEeOdBunZhTRw1w" name="Call(>)">
                <argument xmi:id="_SideMK1MEeOdBunZhTRw1w" name="Call(>).argument(x)" incoming="_SidgK61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideMa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideMq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SideM61MEeOdBunZhTRw1w" name="Call(>).argument(y)" incoming="_SideW61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideNK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideNa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SideNq1MEeOdBunZhTRw1w" name="Call(>).result(result)" outgoing="_SideXa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideN61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideOK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SideOa1MEeOdBunZhTRw1w" name="ConditionalLogicalExpression@625080d6.operand2" incoming="_SideXq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SideOq1MEeOdBunZhTRw1w" name="Value(2)">
                  <result xmi:id="_SideO61MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_SideTK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidePK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidePa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SidePq1MEeOdBunZhTRw1w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SideP61MEeOdBunZhTRw1w" name="Call(&lt;)">
                  <argument xmi:id="_SideQK1MEeOdBunZhTRw1w" name="Call(&lt;).argument(x)" incoming="_SideTK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideQa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideQq1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_SideQ61MEeOdBunZhTRw1w" name="Call(&lt;).argument(y)" incoming="_SidgLK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideRK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideRa1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_SideRq1MEeOdBunZhTRw1w" name="Call(&lt;).result(result)" outgoing="_SideTa1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideR61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideSK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-lt"/>
                </node>
                <structuredNodeOutput xmi:id="_SideSa1MEeOdBunZhTRw1w" name="ConditionalLogicalExpression@625080d6.operand2.result" outgoing="_SideYq1MEeOdBunZhTRw1w" incoming="_SideTa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideSq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideS61MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SideTK1MEeOdBunZhTRw1w" source="_SideO61MEeOdBunZhTRw1w" target="_SideQK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SideTa1MEeOdBunZhTRw1w" source="_SideRq1MEeOdBunZhTRw1w" target="_SideSa1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SideTq1MEeOdBunZhTRw1w" name="ConditionalLogicalExpression@625080d6.operand3" incoming="_SideYK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SideT61MEeOdBunZhTRw1w" name="Value(false)">
                  <result xmi:id="_SideUK1MEeOdBunZhTRw1w" name="Value(false).result" outgoing="_SideV61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideUa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideUq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SideU61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <structuredNodeOutput xmi:id="_SideVK1MEeOdBunZhTRw1w" name="ConditionalLogicalExpression@625080d6.operand3.result" outgoing="_SideY61MEeOdBunZhTRw1w" incoming="_SideV61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideVa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SideVq1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SideV61MEeOdBunZhTRw1w" source="_SideUK1MEeOdBunZhTRw1w" target="_SideVK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SideWK1MEeOdBunZhTRw1w" name="Initial(ConditionalLogicalExpression@625080d6)" outgoing="_SideXK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SideWa1MEeOdBunZhTRw1w" name="Decision(ConditionalLogicalExpression@625080d6)" outgoing="_SideXq1MEeOdBunZhTRw1w _SideYK1MEeOdBunZhTRw1w" incoming="_SideXK1MEeOdBunZhTRw1w _SideXa1MEeOdBunZhTRw1w" decisionInputFlow="_SideXa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SideWq1MEeOdBunZhTRw1w" name="Merge(ConditionalLogicalExpression@625080d6.result)" outgoing="_SideZK1MEeOdBunZhTRw1w" incoming="_SideYq1MEeOdBunZhTRw1w _SideY61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SideW61MEeOdBunZhTRw1w" source="_SideK61MEeOdBunZhTRw1w" target="_SideM61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SideXK1MEeOdBunZhTRw1w" source="_SideWK1MEeOdBunZhTRw1w" target="_SideWa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SideXa1MEeOdBunZhTRw1w" source="_SideNq1MEeOdBunZhTRw1w" target="_SideWa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SideXq1MEeOdBunZhTRw1w" source="_SideWa1MEeOdBunZhTRw1w" target="_SideOa1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SideX61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SideYK1MEeOdBunZhTRw1w" source="_SideWa1MEeOdBunZhTRw1w" target="_SideTq1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SideYa1MEeOdBunZhTRw1w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SideYq1MEeOdBunZhTRw1w" source="_SideSa1MEeOdBunZhTRw1w" target="_SideWq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SideY61MEeOdBunZhTRw1w" source="_SideVK1MEeOdBunZhTRw1w" target="_SideWq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SideZK1MEeOdBunZhTRw1w" source="_SideWq1MEeOdBunZhTRw1w" target="_SideKK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SideZa1MEeOdBunZhTRw1w" name="ExpressionStatement@11f4dd15" outgoing="_SidgMq1MEeOdBunZhTRw1w" incoming="_SidgMK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SideZq1MEeOdBunZhTRw1w" name="Fork(f2)@53fb375" outgoing="_SidgTK1MEeOdBunZhTRw1w" incoming="_Sideoq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SideZ61MEeOdBunZhTRw1w" name="RightHandSide@191ec904">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SideaK1MEeOdBunZhTRw1w" name="Value(0)">
                <result xmi:id="_Sideaa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_Sidema1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sideaq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidea61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SidebK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_Sideba1MEeOdBunZhTRw1w" name="Test(==)">
                <first xmi:id="_Sidebq1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_SidgLq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sideb61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidecK1MEeOdBunZhTRw1w" value="1"/>
                </first>
                <result xmi:id="_Sideca1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_Sidem61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidecq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidec61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <second xmi:id="_SidedK1MEeOdBunZhTRw1w" name="Test(==).second" incoming="_Sidema1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sideda1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidedq1MEeOdBunZhTRw1w" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sided61MEeOdBunZhTRw1w" name="ConditionalLogicalExpression@62de96e8.operand2" incoming="_SidenK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SideeK1MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_Sideea1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SidegK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sideeq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidee61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SidefK1MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <structuredNodeOutput xmi:id="_Sidefa1MEeOdBunZhTRw1w" name="ConditionalLogicalExpression@62de96e8.operand2.result" outgoing="_SideoK1MEeOdBunZhTRw1w" incoming="_SidegK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidefq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidef61MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidegK1MEeOdBunZhTRw1w" source="_Sideea1MEeOdBunZhTRw1w" target="_Sidefa1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidega1MEeOdBunZhTRw1w" name="ConditionalLogicalExpression@62de96e8.operand3" incoming="_Sidenq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sidegq1MEeOdBunZhTRw1w" name="Value(2)">
                  <result xmi:id="_Sideg61MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_SidelK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidehK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sideha1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Sidehq1MEeOdBunZhTRw1w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sideh61MEeOdBunZhTRw1w" name="Call(>=)">
                  <argument xmi:id="_SideiK1MEeOdBunZhTRw1w" name="Call(>=).argument(x)" incoming="_SidelK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sideia1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sideiq1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_Sidei61MEeOdBunZhTRw1w" name="Call(>=).argument(y)" incoming="_SidgL61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidejK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sideja1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_Sidejq1MEeOdBunZhTRw1w" name="Call(>=).result(result)" outgoing="_Sidela1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidej61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidekK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ge"/>
                </node>
                <structuredNodeOutput xmi:id="_Sideka1MEeOdBunZhTRw1w" name="ConditionalLogicalExpression@62de96e8.operand3.result" outgoing="_Sideoa1MEeOdBunZhTRw1w" incoming="_Sidela1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidekq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidek61MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidelK1MEeOdBunZhTRw1w" source="_Sideg61MEeOdBunZhTRw1w" target="_SideiK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidela1MEeOdBunZhTRw1w" source="_Sidejq1MEeOdBunZhTRw1w" target="_Sideka1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_Sidelq1MEeOdBunZhTRw1w" name="Initial(ConditionalLogicalExpression@62de96e8)" outgoing="_Sidemq1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_Sidel61MEeOdBunZhTRw1w" name="Decision(ConditionalLogicalExpression@62de96e8)" outgoing="_SidenK1MEeOdBunZhTRw1w _Sidenq1MEeOdBunZhTRw1w" incoming="_Sidemq1MEeOdBunZhTRw1w _Sidem61MEeOdBunZhTRw1w" decisionInputFlow="_Sidem61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SidemK1MEeOdBunZhTRw1w" name="Merge(ConditionalLogicalExpression@62de96e8.result)" outgoing="_Sideoq1MEeOdBunZhTRw1w" incoming="_SideoK1MEeOdBunZhTRw1w _Sideoa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidema1MEeOdBunZhTRw1w" source="_Sideaa1MEeOdBunZhTRw1w" target="_SidedK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sidemq1MEeOdBunZhTRw1w" source="_Sidelq1MEeOdBunZhTRw1w" target="_Sidel61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidem61MEeOdBunZhTRw1w" source="_Sideca1MEeOdBunZhTRw1w" target="_Sidel61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SidenK1MEeOdBunZhTRw1w" source="_Sidel61MEeOdBunZhTRw1w" target="_Sided61MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sidena1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sidenq1MEeOdBunZhTRw1w" source="_Sidel61MEeOdBunZhTRw1w" target="_Sidega1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Siden61MEeOdBunZhTRw1w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SideoK1MEeOdBunZhTRw1w" source="_Sidefa1MEeOdBunZhTRw1w" target="_SidemK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sideoa1MEeOdBunZhTRw1w" source="_Sideka1MEeOdBunZhTRw1w" target="_SidemK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sideoq1MEeOdBunZhTRw1w" source="_SidemK1MEeOdBunZhTRw1w" target="_SideZq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sideo61MEeOdBunZhTRw1w" name="ExpressionStatement@7ab1aaab" outgoing="_SidgNK1MEeOdBunZhTRw1w" incoming="_SidgMq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SidepK1MEeOdBunZhTRw1w" name="Fork(x)@5161abe7" outgoing="_SidgTa1MEeOdBunZhTRw1w" incoming="_SidezK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidepa1MEeOdBunZhTRw1w" name="RightHandSide@263bff7b">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sidepq1MEeOdBunZhTRw1w" name="Call(Not)">
                <argument xmi:id="_Sidep61MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SidgMa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SideqK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sideqa1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_Sideqq1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_Sidexa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sideq61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiderK1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidera1MEeOdBunZhTRw1w" name="ConditionalTestExpression@263bff7b.operand2" incoming="_Sidexq1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Siderq1MEeOdBunZhTRw1w" name="Value(1)">
                  <result xmi:id="_Sider61MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Sidetq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidesK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidesa1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Sidesq1MEeOdBunZhTRw1w" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <structuredNodeOutput xmi:id="_Sides61MEeOdBunZhTRw1w" name="ConditionalTestExpression@263bff7b.operand2.result" outgoing="_Sideyq1MEeOdBunZhTRw1w" incoming="_Sidetq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidetK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sideta1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidetq1MEeOdBunZhTRw1w" source="_Sider61MEeOdBunZhTRw1w" target="_Sides61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidet61MEeOdBunZhTRw1w" name="ConditionalTestExpression@263bff7b.operand3" incoming="_SideyK1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SideuK1MEeOdBunZhTRw1w" name="Value(2)">
                  <result xmi:id="_Sideua1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_SidewK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sideuq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sideu61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_SidevK1MEeOdBunZhTRw1w" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <structuredNodeOutput xmi:id="_Sideva1MEeOdBunZhTRw1w" name="ConditionalTestExpression@263bff7b.operand3.result" outgoing="_Sidey61MEeOdBunZhTRw1w" incoming="_SidewK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidevq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidev61MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidewK1MEeOdBunZhTRw1w" source="_Sideua1MEeOdBunZhTRw1w" target="_Sideva1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_Sidewa1MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@263bff7b)" outgoing="_SidexK1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_Sidewq1MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@263bff7b)" outgoing="_Sidexq1MEeOdBunZhTRw1w _SideyK1MEeOdBunZhTRw1w" incoming="_SidexK1MEeOdBunZhTRw1w _Sidexa1MEeOdBunZhTRw1w" decisionInputFlow="_Sidexa1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_Sidew61MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@263bff7b.result)" outgoing="_SidezK1MEeOdBunZhTRw1w" incoming="_Sideyq1MEeOdBunZhTRw1w _Sidey61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SidexK1MEeOdBunZhTRw1w" source="_Sidewa1MEeOdBunZhTRw1w" target="_Sidewq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidexa1MEeOdBunZhTRw1w" source="_Sideqq1MEeOdBunZhTRw1w" target="_Sidewq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Sidexq1MEeOdBunZhTRw1w" source="_Sidewq1MEeOdBunZhTRw1w" target="_Sidera1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sidex61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SideyK1MEeOdBunZhTRw1w" source="_Sidewq1MEeOdBunZhTRw1w" target="_Sidet61MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sideya1MEeOdBunZhTRw1w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sideyq1MEeOdBunZhTRw1w" source="_Sides61MEeOdBunZhTRw1w" target="_Sidew61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidey61MEeOdBunZhTRw1w" source="_Sideva1MEeOdBunZhTRw1w" target="_Sidew61MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SidezK1MEeOdBunZhTRw1w" source="_Sidew61MEeOdBunZhTRw1w" target="_SidepK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sideza1MEeOdBunZhTRw1w" name="ExpressionStatement@3c0b4f71" outgoing="_SidgNa1MEeOdBunZhTRw1w" incoming="_SidgNK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Sidezq1MEeOdBunZhTRw1w" name="Fork(y)@2bb42a5" outgoing="_SidgTq1MEeOdBunZhTRw1w" incoming="_Side_K1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sidez61MEeOdBunZhTRw1w" name="RightHandSide@a8ca283">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Side0K1MEeOdBunZhTRw1w" name="ConditionalTestExpression@a8ca283.operand2" incoming="_Side9q1MEeOdBunZhTRw1w">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_Side0a1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@17014bde">
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Side0q1MEeOdBunZhTRw1w" name="SequenceExpressionList@25a3d884#1" outgoing="_Side4a1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Side061MEeOdBunZhTRw1w" name="Value(1)">
                      <result xmi:id="_Side1K1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Side4q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Side1a1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Side1q1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_Side161MEeOdBunZhTRw1w" value="1">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_Side2K1MEeOdBunZhTRw1w" name="SequenceExpressionList@25a3d884#2" incoming="_Side4a1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Side2a1MEeOdBunZhTRw1w" name="Value(2)">
                      <result xmi:id="_Side2q1MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_Side461MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Side261MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Side3K1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_Side3a1MEeOdBunZhTRw1w" value="2">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                  <structuredNodeOutput xmi:id="_Side3q1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@17014bde.output" outgoing="_Side561MEeOdBunZhTRw1w" incoming="_Side4q1MEeOdBunZhTRw1w _Side461MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Side361MEeOdBunZhTRw1w" value="2"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Side4K1MEeOdBunZhTRw1w" value="2"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ControlFlow" xmi:id="_Side4a1MEeOdBunZhTRw1w" source="_Side0q1MEeOdBunZhTRw1w" target="_Side2K1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Side4q1MEeOdBunZhTRw1w" source="_Side1K1MEeOdBunZhTRw1w" target="_Side3q1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Side461MEeOdBunZhTRw1w" source="_Side2q1MEeOdBunZhTRw1w" target="_Side3q1MEeOdBunZhTRw1w"/>
                </node>
                <structuredNodeOutput xmi:id="_Side5K1MEeOdBunZhTRw1w" name="ConditionalTestExpression@a8ca283.operand2.result" outgoing="_Side-q1MEeOdBunZhTRw1w" incoming="_Side561MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Side5a1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Side5q1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Side561MEeOdBunZhTRw1w" source="_Side3q1MEeOdBunZhTRw1w" target="_Side5K1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Side6K1MEeOdBunZhTRw1w" name="ConditionalTestExpression@a8ca283.operand3" incoming="_Side-K1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Side6a1MEeOdBunZhTRw1w" name="Value(0)">
                  <result xmi:id="_Side6q1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_Side8a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Side661MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Side7K1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_Side7a1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <structuredNodeOutput xmi:id="_Side7q1MEeOdBunZhTRw1w" name="ConditionalTestExpression@a8ca283.operand3.result" outgoing="_Side-61MEeOdBunZhTRw1w" incoming="_Side8a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Side761MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Side8K1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Side8a1MEeOdBunZhTRw1w" source="_Side6q1MEeOdBunZhTRw1w" target="_Side7q1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_Side8q1MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@a8ca283)" outgoing="_Side9a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_Side861MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@a8ca283)" outgoing="_Side9q1MEeOdBunZhTRw1w _Side-K1MEeOdBunZhTRw1w" incoming="_Side9a1MEeOdBunZhTRw1w _SidgM61MEeOdBunZhTRw1w" decisionInputFlow="_SidgM61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_Side9K1MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@a8ca283.result)" outgoing="_Side_K1MEeOdBunZhTRw1w" incoming="_Side-q1MEeOdBunZhTRw1w _Side-61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Side9a1MEeOdBunZhTRw1w" source="_Side8q1MEeOdBunZhTRw1w" target="_Side861MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Side9q1MEeOdBunZhTRw1w" source="_Side861MEeOdBunZhTRw1w" target="_Side0K1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Side961MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_Side-K1MEeOdBunZhTRw1w" source="_Side861MEeOdBunZhTRw1w" target="_Side6K1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_Side-a1MEeOdBunZhTRw1w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Side-q1MEeOdBunZhTRw1w" source="_Side5K1MEeOdBunZhTRw1w" target="_Side9K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Side-61MEeOdBunZhTRw1w" source="_Side7q1MEeOdBunZhTRw1w" target="_Side9K1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Side_K1MEeOdBunZhTRw1w" source="_Side9K1MEeOdBunZhTRw1w" target="_Sidezq1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Side_a1MEeOdBunZhTRw1w" name="ExpressionStatement@1f2301d8" outgoing="_SidgN61MEeOdBunZhTRw1w" incoming="_SidgNa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_Side_q1MEeOdBunZhTRw1w" name="Fork(z)@27f3bc0a" outgoing="_SidgT61MEeOdBunZhTRw1w" incoming="_SidfYK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Side_61MEeOdBunZhTRw1w" name="RightHandSide@61ebb6e5">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidfAK1MEeOdBunZhTRw1w" name="SequenceConstructionExpression@334e1be0">
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidfAa1MEeOdBunZhTRw1w" name="SequenceExpressionList@54ccb403#1" outgoing="_SidfFq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SidfAq1MEeOdBunZhTRw1w" name="Value(1)">
                    <result xmi:id="_SidfA61MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SidfGK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfBK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfBa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_SidfBq1MEeOdBunZhTRw1w" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidfB61MEeOdBunZhTRw1w" name="SequenceExpressionList@54ccb403#2" outgoing="_SidfF61MEeOdBunZhTRw1w" incoming="_SidfFq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SidfCK1MEeOdBunZhTRw1w" name="Value(&quot;banana&quot;)">
                    <result xmi:id="_SidfCa1MEeOdBunZhTRw1w" name="Value(&quot;banana&quot;).result" outgoing="_SidfGa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfCq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfC61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SidfDK1MEeOdBunZhTRw1w" value="banana">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidfDa1MEeOdBunZhTRw1w" name="SequenceExpressionList@54ccb403#3" incoming="_SidfF61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SidfDq1MEeOdBunZhTRw1w" name="Value(2)">
                    <result xmi:id="_SidfD61MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_SidfGq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfEK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfEa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_SidfEq1MEeOdBunZhTRw1w" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
                <structuredNodeOutput xmi:id="_SidfE61MEeOdBunZhTRw1w" name="SequenceConstructionExpression@334e1be0.output" outgoing="_SidfX61MEeOdBunZhTRw1w" incoming="_SidfGK1MEeOdBunZhTRw1w _SidfGa1MEeOdBunZhTRw1w _SidfGq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfFK1MEeOdBunZhTRw1w" value="3"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfFa1MEeOdBunZhTRw1w" value="3"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SidfFq1MEeOdBunZhTRw1w" source="_SidfAa1MEeOdBunZhTRw1w" target="_SidfB61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SidfF61MEeOdBunZhTRw1w" source="_SidfB61MEeOdBunZhTRw1w" target="_SidfDa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfGK1MEeOdBunZhTRw1w" source="_SidfA61MEeOdBunZhTRw1w" target="_SidfE61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfGa1MEeOdBunZhTRw1w" source="_SidfCa1MEeOdBunZhTRw1w" target="_SidfE61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfGq1MEeOdBunZhTRw1w" source="_SidfD61MEeOdBunZhTRw1w" target="_SidfE61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SidfG61MEeOdBunZhTRw1w" name="CastExpression@61ebb6e5" mode="parallel" outputElement="_SidfXq1MEeOdBunZhTRw1w" inputElement="_SidfXa1MEeOdBunZhTRw1w">
                <node xmi:type="uml:MergeNode" xmi:id="_SidfHK1MEeOdBunZhTRw1w" name="Merge(CastExpression@61ebb6e5.operand)" outgoing="_SidfXK1MEeOdBunZhTRw1w" incoming="_SidfR61MEeOdBunZhTRw1w _SidfTa1MEeOdBunZhTRw1w _SidfV61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SidfHa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(UnlimitedNatural)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                  <object xmi:id="_SidfHq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(UnlimitedNatural).object" incoming="_SidfRq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfH61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfIK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SidfIa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(UnlimitedNatural).result" outgoing="_SidfSa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfIq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfI61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SidfJK1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(UnlimitedNatural).object)" outgoing="_SidfRq1MEeOdBunZhTRw1w _SidfSK1MEeOdBunZhTRw1w" incoming="_SidfUq1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SidfJa1MEeOdBunZhTRw1w" name="Call(ToInteger)">
                  <argument xmi:id="_SidfJq1MEeOdBunZhTRw1w" name="Call(ToInteger).argument(x)" incoming="_SidfSq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfJ61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfKK1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_SidfKa1MEeOdBunZhTRw1w" name="Call(ToInteger).result(result)" outgoing="_SidfR61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfKq1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfK61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-UnlimitedNaturalFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_SidfLK1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(UnlimitedNatural).result)" outgoing="_SidfSq1MEeOdBunZhTRw1w" incoming="_SidfSK1MEeOdBunZhTRw1w _SidfSa1MEeOdBunZhTRw1w" decisionInputFlow="_SidfSa1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SidfLa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString)">
                  <classifier xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                  <object xmi:id="_SidfLq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).object" incoming="_SidfTK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfL61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfMK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SidfMa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(BitString).result" outgoing="_SidfT61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfMq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfM61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SidfNK1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(BitString).object)" outgoing="_SidfTK1MEeOdBunZhTRw1w _SidfTq1MEeOdBunZhTRw1w" incoming="_SidfWa1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SidfNa1MEeOdBunZhTRw1w" name="Call(ToInteger)">
                  <argument xmi:id="_SidfNq1MEeOdBunZhTRw1w" name="Call(ToInteger).argument(b)" incoming="_SidfUK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfN61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfOK1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <result xmi:id="_SidfOa1MEeOdBunZhTRw1w" name="Call(ToInteger).result(null)" outgoing="_SidfTa1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfOq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfO61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-BitStringFunctions-ToInteger"/>
                </node>
                <node xmi:type="uml:DecisionNode" xmi:id="_SidfPK1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(BitString).result)" outgoing="_SidfUK1MEeOdBunZhTRw1w _SidfUq1MEeOdBunZhTRw1w" incoming="_SidfTq1MEeOdBunZhTRw1w _SidfT61MEeOdBunZhTRw1w" decisionInputFlow="_SidfT61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SidfPa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <object xmi:id="_SidfPq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer).object" incoming="_SidfVK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfP61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfQK1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SidfQa1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(Integer).result" outgoing="_SidfVq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfQq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfQ61MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SidfRK1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(Integer).object)" outgoing="_SidfVK1MEeOdBunZhTRw1w _SidfVa1MEeOdBunZhTRw1w" incoming="_SidfW61MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SidfRa1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(Integer).result)" outgoing="_SidfV61MEeOdBunZhTRw1w _SidfWa1MEeOdBunZhTRw1w" incoming="_SidfVa1MEeOdBunZhTRw1w _SidfVq1MEeOdBunZhTRw1w" decisionInputFlow="_SidfVq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfRq1MEeOdBunZhTRw1w" source="_SidfJK1MEeOdBunZhTRw1w" target="_SidfHq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfR61MEeOdBunZhTRw1w" source="_SidfKa1MEeOdBunZhTRw1w" target="_SidfHK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfSK1MEeOdBunZhTRw1w" source="_SidfJK1MEeOdBunZhTRw1w" target="_SidfLK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfSa1MEeOdBunZhTRw1w" source="_SidfIa1MEeOdBunZhTRw1w" target="_SidfLK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfSq1MEeOdBunZhTRw1w" source="_SidfLK1MEeOdBunZhTRw1w" target="_SidfJq1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SidfS61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfTK1MEeOdBunZhTRw1w" source="_SidfNK1MEeOdBunZhTRw1w" target="_SidfLq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfTa1MEeOdBunZhTRw1w" source="_SidfOa1MEeOdBunZhTRw1w" target="_SidfHK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfTq1MEeOdBunZhTRw1w" source="_SidfNK1MEeOdBunZhTRw1w" target="_SidfPK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfT61MEeOdBunZhTRw1w" source="_SidfMa1MEeOdBunZhTRw1w" target="_SidfPK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfUK1MEeOdBunZhTRw1w" source="_SidfPK1MEeOdBunZhTRw1w" target="_SidfNq1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SidfUa1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfUq1MEeOdBunZhTRw1w" source="_SidfPK1MEeOdBunZhTRw1w" target="_SidfJK1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SidfU61MEeOdBunZhTRw1w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfVK1MEeOdBunZhTRw1w" source="_SidfRK1MEeOdBunZhTRw1w" target="_SidfPq1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfVa1MEeOdBunZhTRw1w" source="_SidfRK1MEeOdBunZhTRw1w" target="_SidfRa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfVq1MEeOdBunZhTRw1w" source="_SidfQa1MEeOdBunZhTRw1w" target="_SidfRa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfV61MEeOdBunZhTRw1w" source="_SidfRa1MEeOdBunZhTRw1w" target="_SidfHK1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SidfWK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfWa1MEeOdBunZhTRw1w" source="_SidfRa1MEeOdBunZhTRw1w" target="_SidfNK1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SidfWq1MEeOdBunZhTRw1w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfW61MEeOdBunZhTRw1w" source="_SidfXa1MEeOdBunZhTRw1w" target="_SidfRK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfXK1MEeOdBunZhTRw1w" source="_SidfHK1MEeOdBunZhTRw1w" target="_SidfXq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SidfXa1MEeOdBunZhTRw1w" name="CastExpression@61ebb6e5.inputElement" outgoing="_SidfW61MEeOdBunZhTRw1w" incoming="_SidfX61MEeOdBunZhTRw1w" regionAsInput="_SidfG61MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SidfXq1MEeOdBunZhTRw1w" name="CastExpression@61ebb6e5.outputElement" outgoing="_SidfYK1MEeOdBunZhTRw1w" incoming="_SidfXK1MEeOdBunZhTRw1w" regionAsOutput="_SidfG61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfX61MEeOdBunZhTRw1w" source="_SidfE61MEeOdBunZhTRw1w" target="_SidfXa1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfYK1MEeOdBunZhTRw1w" source="_SidfXq1MEeOdBunZhTRw1w" target="_Side_q1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidfYa1MEeOdBunZhTRw1w" name="ExpressionStatement@61822b6f" incoming="_SidgN61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SidfYq1MEeOdBunZhTRw1w" name="Fork(r)@5b77a36c" outgoing="_SidgUK1MEeOdBunZhTRw1w" incoming="_Sidff61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidfY61MEeOdBunZhTRw1w" name="RightHandSide@392aeecf">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidfZK1MEeOdBunZhTRw1w" name="IsolationExpression@392aeecf" mustIsolate="true">
                <node xmi:type="uml:CallOperationAction" xmi:id="_SidfZa1MEeOdBunZhTRw1w" name="Call(getReading)" operation="_SieEwK1MEeOdBunZhTRw1w">
                  <result xmi:id="_SidfZq1MEeOdBunZhTRw1w" name="Call(getReading).result()" outgoing="_Sidffq1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfZ61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfaK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <target xmi:id="_Sidfaa1MEeOdBunZhTRw1w" name="Call(getReading).target" incoming="_SidffK1MEeOdBunZhTRw1w" type="_SieEJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfaq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfa61MEeOdBunZhTRw1w" value="1"/>
                  </target>
                </node>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_SidfbK1MEeOdBunZhTRw1w" name="Collect(Call(getActiveSensor))" incoming="_Sidffa1MEeOdBunZhTRw1w" mode="parallel" outputElement="_Sidfd61MEeOdBunZhTRw1w" inputElement="_Sidfdq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:CallOperationAction" xmi:id="_Sidfba1MEeOdBunZhTRw1w" name="Call(getActiveSensor)" operation="_SieEHK1MEeOdBunZhTRw1w">
                    <result xmi:id="_Sidfbq1MEeOdBunZhTRw1w" name="Call(getActiveSensor).result()" outgoing="_Sidfda1MEeOdBunZhTRw1w" type="_SieEJa1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfb61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfcK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <target xmi:id="_Sidfca1MEeOdBunZhTRw1w" name="Call(getActiveSensor).target" incoming="_SidfdK1MEeOdBunZhTRw1w" type="_SieDfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfcq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfc61MEeOdBunZhTRw1w" value="1"/>
                    </target>
                  </node>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SidfdK1MEeOdBunZhTRw1w" source="_Sidfdq1MEeOdBunZhTRw1w" target="_Sidfca1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidfda1MEeOdBunZhTRw1w" source="_Sidfbq1MEeOdBunZhTRw1w" target="_Sidfd61MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_Sidfdq1MEeOdBunZhTRw1w" name="Collect(Call(getActiveSensor)).inputElement" outgoing="_SidfdK1MEeOdBunZhTRw1w" incoming="_SidgNq1MEeOdBunZhTRw1w" regionAsInput="_SidfbK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:ExpansionNode" xmi:id="_Sidfd61MEeOdBunZhTRw1w" name="Collect(Call(getActiveSensor)).outputElement" outgoing="_SidffK1MEeOdBunZhTRw1w" incoming="_Sidfda1MEeOdBunZhTRw1w" regionAsOutput="_SidfbK1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidfeK1MEeOdBunZhTRw1w" name="Feature(Fork(monitor)@a065cad)" outgoing="_Sidffa1MEeOdBunZhTRw1w"/>
                <structuredNodeOutput xmi:id="_Sidfea1MEeOdBunZhTRw1w" name="IsolationExpression@392aeecf.output" outgoing="_Sidff61MEeOdBunZhTRw1w" incoming="_Sidffq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfeq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfe61MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SidffK1MEeOdBunZhTRw1w" source="_Sidfd61MEeOdBunZhTRw1w" target="_Sidfaa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sidffa1MEeOdBunZhTRw1w" source="_SidfeK1MEeOdBunZhTRw1w" target="_SidfbK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidffq1MEeOdBunZhTRw1w" source="_SidfZq1MEeOdBunZhTRw1w" target="_Sidfea1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidff61MEeOdBunZhTRw1w" source="_Sidfea1MEeOdBunZhTRw1w" target="_SidfYq1MEeOdBunZhTRw1w"/>
          </node>
          <structuredNodeOutput xmi:id="_SidfgK1MEeOdBunZhTRw1w" name="Output(i)" outgoing="_Sic3I61MEeOdBunZhTRw1w" incoming="_SidgOK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfga1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfgq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfg61MEeOdBunZhTRw1w" name="Output(j)" outgoing="_Sic3JK1MEeOdBunZhTRw1w" incoming="_SidgOa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfhK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfha1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfhq1MEeOdBunZhTRw1w" name="Output(bs)" outgoing="_Sic3Ja1MEeOdBunZhTRw1w" incoming="_SidgOq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfh61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfiK1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfia1MEeOdBunZhTRw1w" name="Output(h)" outgoing="_Sic3Jq1MEeOdBunZhTRw1w" incoming="_SidgO61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfiq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfi61MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SidfjK1MEeOdBunZhTRw1w" name="Output(a)" outgoing="_Sic3J61MEeOdBunZhTRw1w" incoming="_SidgPK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfja1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfjq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfj61MEeOdBunZhTRw1w" name="Output(b)" outgoing="_Sic3KK1MEeOdBunZhTRw1w" incoming="_SidgPa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfkK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfka1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfkq1MEeOdBunZhTRw1w" name="Output(c)" outgoing="_Sic3Ka1MEeOdBunZhTRw1w" incoming="_SidgPq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfk61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidflK1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfla1MEeOdBunZhTRw1w" name="Output(d)" outgoing="_Sic3Kq1MEeOdBunZhTRw1w" incoming="_SidgP61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidflq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfl61MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SidfmK1MEeOdBunZhTRw1w" name="Output(e)" outgoing="_Sic3K61MEeOdBunZhTRw1w" incoming="_SidgQK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfma1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfmq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfm61MEeOdBunZhTRw1w" name="Output(e1)" outgoing="_Sic3LK1MEeOdBunZhTRw1w" incoming="_SidgQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfnK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfna1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfnq1MEeOdBunZhTRw1w" name="Output(e2)" outgoing="_Sic3La1MEeOdBunZhTRw1w" incoming="_SidgQq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfn61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfoK1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfoa1MEeOdBunZhTRw1w" name="Output(e3)" outgoing="_Sic3Lq1MEeOdBunZhTRw1w" incoming="_SidgQ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfoq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfo61MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SidfpK1MEeOdBunZhTRw1w" name="Output(e4)" outgoing="_Sic3L61MEeOdBunZhTRw1w" incoming="_SidgRK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfpa1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfpq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfp61MEeOdBunZhTRw1w" name="Output(e5)" outgoing="_Sic3MK1MEeOdBunZhTRw1w" incoming="_SidgRa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfqK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfqa1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfqq1MEeOdBunZhTRw1w" name="Output(e6)" outgoing="_Sic3Ma1MEeOdBunZhTRw1w" incoming="_SidgRq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfq61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfrK1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfra1MEeOdBunZhTRw1w" name="Output(e7)" outgoing="_Sic3Mq1MEeOdBunZhTRw1w" incoming="_SidgR61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfrq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfr61MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SidfsK1MEeOdBunZhTRw1w" name="Output(e8)" outgoing="_Sic3M61MEeOdBunZhTRw1w" incoming="_SidgSK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfsa1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfsq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfs61MEeOdBunZhTRw1w" name="Output(e9)" outgoing="_Sic3NK1MEeOdBunZhTRw1w" incoming="_SidgSa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidftK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfta1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidftq1MEeOdBunZhTRw1w" name="Output(f)" outgoing="_Sic3Na1MEeOdBunZhTRw1w" incoming="_SidgSq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidft61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfuK1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfua1MEeOdBunZhTRw1w" name="Output(f1)" outgoing="_Sic3Nq1MEeOdBunZhTRw1w" incoming="_SidgS61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfuq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfu61MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SidfvK1MEeOdBunZhTRw1w" name="Output(f2)" outgoing="_Sic3N61MEeOdBunZhTRw1w" incoming="_SidgTK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfva1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfvq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfv61MEeOdBunZhTRw1w" name="Output(x)" outgoing="_Sic3OK1MEeOdBunZhTRw1w" incoming="_SidgTa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidfwK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfwa1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfwq1MEeOdBunZhTRw1w" name="Output(y)" outgoing="_Sic3Oa1MEeOdBunZhTRw1w" incoming="_SidgTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfw61MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidfxK1MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_Sidfxa1MEeOdBunZhTRw1w" name="Output(z)" outgoing="_Sic3Oq1MEeOdBunZhTRw1w" incoming="_SidgT61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfxq1MEeOdBunZhTRw1w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfx61MEeOdBunZhTRw1w" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SidfyK1MEeOdBunZhTRw1w" name="Output(r)" outgoing="_Sic3O61MEeOdBunZhTRw1w" incoming="_SidgUK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidfya1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidfyq1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidfy61MEeOdBunZhTRw1w" source="_Sic3Vq1MEeOdBunZhTRw1w" target="_Sic3Zq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidfzK1MEeOdBunZhTRw1w" source="_Sic3Zq1MEeOdBunZhTRw1w" target="_Sic3dq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidfza1MEeOdBunZhTRw1w" source="_Sic3dq1MEeOdBunZhTRw1w" target="_Sic3f61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidfzq1MEeOdBunZhTRw1w" source="_Sic3d61MEeOdBunZhTRw1w" target="_Sic3ia1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidfz61MEeOdBunZhTRw1w" source="_Sic3f61MEeOdBunZhTRw1w" target="_Sic3iK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf0K1MEeOdBunZhTRw1w" source="_Sic3ia1MEeOdBunZhTRw1w" target="_Sic3j61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf0a1MEeOdBunZhTRw1w" source="_Sic3iK1MEeOdBunZhTRw1w" target="_Sic3i61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf0q1MEeOdBunZhTRw1w" source="_Sic3jK1MEeOdBunZhTRw1w" target="_Sic3mq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf061MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_Sic3na1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf1K1MEeOdBunZhTRw1w" source="_Sic3i61MEeOdBunZhTRw1w" target="_Sic3lq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf1a1MEeOdBunZhTRw1w" source="_Sic3l61MEeOdBunZhTRw1w" target="_Sic3qK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf1q1MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_Sic3q61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf161MEeOdBunZhTRw1w" source="_Sic3lq1MEeOdBunZhTRw1w" target="_Sic3pK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf2K1MEeOdBunZhTRw1w" source="_Sic3pa1MEeOdBunZhTRw1w" target="_Sic3tq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf2a1MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_Sic3ua1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf2q1MEeOdBunZhTRw1w" source="_Sic3pK1MEeOdBunZhTRw1w" target="_Sic3sq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf261MEeOdBunZhTRw1w" source="_Sic3s61MEeOdBunZhTRw1w" target="_Sic3xK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf3K1MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_Sic3x61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf3a1MEeOdBunZhTRw1w" source="_Sic3sq1MEeOdBunZhTRw1w" target="_Sic3wK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf3q1MEeOdBunZhTRw1w" source="_Sic3wa1MEeOdBunZhTRw1w" target="_Sic30q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf361MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_Sic31a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf4K1MEeOdBunZhTRw1w" source="_Sic3wK1MEeOdBunZhTRw1w" target="_Sic3zq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf4a1MEeOdBunZhTRw1w" source="_Sic3zq1MEeOdBunZhTRw1w" target="_Sic33K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf4q1MEeOdBunZhTRw1w" source="_Sic33a1MEeOdBunZhTRw1w" target="_Sic4Bq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf461MEeOdBunZhTRw1w" source="_Sic33K1MEeOdBunZhTRw1w" target="_Sic4Aq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf5K1MEeOdBunZhTRw1w" source="_Sic4A61MEeOdBunZhTRw1w" target="_Sic4Ha1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf5a1MEeOdBunZhTRw1w" source="_Sic4Aq1MEeOdBunZhTRw1w" target="_Sic4Da1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf5q1MEeOdBunZhTRw1w" source="_Sic4Dq1MEeOdBunZhTRw1w" target="_Sic4Oa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf561MEeOdBunZhTRw1w" source="_Sic4Da1MEeOdBunZhTRw1w" target="_Sic4Ka1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf6K1MEeOdBunZhTRw1w" source="_Sic4Kq1MEeOdBunZhTRw1w" target="_Sic4Tq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf6a1MEeOdBunZhTRw1w" source="_Sic4Ka1MEeOdBunZhTRw1w" target="_Sic4Ra1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf6q1MEeOdBunZhTRw1w" source="_Sic4Rq1MEeOdBunZhTRw1w" target="_Sic4Yq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf661MEeOdBunZhTRw1w" source="_Sic4Ra1MEeOdBunZhTRw1w" target="_Sic4Wa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf7K1MEeOdBunZhTRw1w" source="_Sic4Wq1MEeOdBunZhTRw1w" target="_Sic4dq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf7a1MEeOdBunZhTRw1w" source="_Sic4Wa1MEeOdBunZhTRw1w" target="_Sic4ba1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf7q1MEeOdBunZhTRw1w" source="_Sic4bq1MEeOdBunZhTRw1w" target="_Sic4ka1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf761MEeOdBunZhTRw1w" source="_Sic4ba1MEeOdBunZhTRw1w" target="_Sic4ga1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf8K1MEeOdBunZhTRw1w" source="_Sic4ga1MEeOdBunZhTRw1w" target="_Sic4na1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf8a1MEeOdBunZhTRw1w" source="_Sic4nq1MEeOdBunZhTRw1w" target="_Sic4qq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf8q1MEeOdBunZhTRw1w" source="_Sic4na1MEeOdBunZhTRw1w" target="_Sic4pq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf861MEeOdBunZhTRw1w" source="_Sic4p61MEeOdBunZhTRw1w" target="_Sic4361MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf9K1MEeOdBunZhTRw1w" source="_Sic4pq1MEeOdBunZhTRw1w" target="_Sic41q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf9a1MEeOdBunZhTRw1w" source="_Sic4161MEeOdBunZhTRw1w" target="_Sic5IK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf9q1MEeOdBunZhTRw1w" source="_Sic41q1MEeOdBunZhTRw1w" target="_Sic5F61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf961MEeOdBunZhTRw1w" source="_Sic5GK1MEeOdBunZhTRw1w" target="_Sic5Ya1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf-K1MEeOdBunZhTRw1w" source="_Sic5F61MEeOdBunZhTRw1w" target="_Sic5WK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf-a1MEeOdBunZhTRw1w" source="_Sic5Wa1MEeOdBunZhTRw1w" target="_Sic5mq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf-q1MEeOdBunZhTRw1w" source="_Sic5WK1MEeOdBunZhTRw1w" target="_Sic5ka1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf-61MEeOdBunZhTRw1w" source="_Sic5kq1MEeOdBunZhTRw1w" target="_SidcEK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf_K1MEeOdBunZhTRw1w" source="_Sic5ka1MEeOdBunZhTRw1w" target="_SidcB61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf_a1MEeOdBunZhTRw1w" source="_SidcCK1MEeOdBunZhTRw1w" target="_SidcSa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidf_q1MEeOdBunZhTRw1w" source="_SidcB61MEeOdBunZhTRw1w" target="_SidcQK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidf_61MEeOdBunZhTRw1w" source="_Sic3z61MEeOdBunZhTRw1w" target="_Sidcha1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgAK1MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_SidciK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgAa1MEeOdBunZhTRw1w" source="_SidcQK1MEeOdBunZhTRw1w" target="_Sidcga1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgAq1MEeOdBunZhTRw1w" source="_Sic3z61MEeOdBunZhTRw1w" target="_Sidck61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgA61MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_Sidclq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgBK1MEeOdBunZhTRw1w" source="_Sidcga1MEeOdBunZhTRw1w" target="_Sidcj61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgBa1MEeOdBunZhTRw1w" source="_Sic3z61MEeOdBunZhTRw1w" target="_Sidcoa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgBq1MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_SidcpK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgB61MEeOdBunZhTRw1w" source="_Sidcj61MEeOdBunZhTRw1w" target="_Sidcna1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgCK1MEeOdBunZhTRw1w" source="_Sic3z61MEeOdBunZhTRw1w" target="_Sidcr61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgCa1MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_Sidcsq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgCq1MEeOdBunZhTRw1w" source="_Sidcna1MEeOdBunZhTRw1w" target="_Sidcq61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgC61MEeOdBunZhTRw1w" source="_Sidcq61MEeOdBunZhTRw1w" target="_Sidcua1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgDK1MEeOdBunZhTRw1w" source="_Sidcua1MEeOdBunZhTRw1w" target="_Sidcwq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgDa1MEeOdBunZhTRw1w" source="_Sidcuq1MEeOdBunZhTRw1w" target="_Sidcz61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgDq1MEeOdBunZhTRw1w" source="_Sidcw61MEeOdBunZhTRw1w" target="_Sidc0q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgD61MEeOdBunZhTRw1w" source="_Sidcwq1MEeOdBunZhTRw1w" target="_Sidcy61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgEK1MEeOdBunZhTRw1w" source="_SidczK1MEeOdBunZhTRw1w" target="_Sidc3a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgEa1MEeOdBunZhTRw1w" source="_Sidcuq1MEeOdBunZhTRw1w" target="_Sidc4K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgEq1MEeOdBunZhTRw1w" source="_Sidcy61MEeOdBunZhTRw1w" target="_Sidc2a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgE61MEeOdBunZhTRw1w" source="_Sidc2q1MEeOdBunZhTRw1w" target="_Sidc661MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgFK1MEeOdBunZhTRw1w" source="_Sidc2a1MEeOdBunZhTRw1w" target="_Sidc561MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgFa1MEeOdBunZhTRw1w" source="_Sidc561MEeOdBunZhTRw1w" target="_Sidc8q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgFq1MEeOdBunZhTRw1w" source="_Sidc8q1MEeOdBunZhTRw1w" target="_SiddFK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgF61MEeOdBunZhTRw1w" source="_Sic3V61MEeOdBunZhTRw1w" target="_SiddT61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgGK1MEeOdBunZhTRw1w" source="_SiddFK1MEeOdBunZhTRw1w" target="_SiddS61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgGa1MEeOdBunZhTRw1w" source="_Sic3z61MEeOdBunZhTRw1w" target="_SiddWq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgGq1MEeOdBunZhTRw1w" source="_SiddS61MEeOdBunZhTRw1w" target="_SiddVq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgG61MEeOdBunZhTRw1w" source="_Sic3z61MEeOdBunZhTRw1w" target="_Siddaq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgHK1MEeOdBunZhTRw1w" source="_SiddVq1MEeOdBunZhTRw1w" target="_SiddYa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgHa1MEeOdBunZhTRw1w" source="_Sic3Z61MEeOdBunZhTRw1w" target="_Siddgq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgHq1MEeOdBunZhTRw1w" source="_Sic3Z61MEeOdBunZhTRw1w" target="_Siddiq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgH61MEeOdBunZhTRw1w" source="_SiddYa1MEeOdBunZhTRw1w" target="_Siddda1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgIK1MEeOdBunZhTRw1w" source="_Sic3V61MEeOdBunZhTRw1w" target="_Siddz61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgIa1MEeOdBunZhTRw1w" source="_Siddda1MEeOdBunZhTRw1w" target="_Siddxa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgIq1MEeOdBunZhTRw1w" source="_Sic3V61MEeOdBunZhTRw1w" target="_Sidd5K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgI61MEeOdBunZhTRw1w" source="_Siddxa1MEeOdBunZhTRw1w" target="_Sidd2q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgJK1MEeOdBunZhTRw1w" source="_Sidd2q1MEeOdBunZhTRw1w" target="_Sidd761MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgJa1MEeOdBunZhTRw1w" source="_Sic3z61MEeOdBunZhTRw1w" target="_Sidd_K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgJq1MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_Sidd_61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgJ61MEeOdBunZhTRw1w" source="_Sic3z61MEeOdBunZhTRw1w" target="_SideBq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgKK1MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_SideCa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgKa1MEeOdBunZhTRw1w" source="_Sidcuq1MEeOdBunZhTRw1w" target="_SideE61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgKq1MEeOdBunZhTRw1w" source="_Sidd761MEeOdBunZhTRw1w" target="_Sidd-K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgK61MEeOdBunZhTRw1w" source="_Sic3z61MEeOdBunZhTRw1w" target="_SideMK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgLK1MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_SideQ61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgLa1MEeOdBunZhTRw1w" source="_Sidd-K1MEeOdBunZhTRw1w" target="_SideJ61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgLq1MEeOdBunZhTRw1w" source="_Sic3z61MEeOdBunZhTRw1w" target="_Sidebq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgL61MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_Sidei61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgMK1MEeOdBunZhTRw1w" source="_SideJ61MEeOdBunZhTRw1w" target="_SideZa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgMa1MEeOdBunZhTRw1w" source="_Sidd-a1MEeOdBunZhTRw1w" target="_Sidep61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgMq1MEeOdBunZhTRw1w" source="_SideZa1MEeOdBunZhTRw1w" target="_Sideo61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgM61MEeOdBunZhTRw1w" source="_Sidd-a1MEeOdBunZhTRw1w" target="_Side861MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgNK1MEeOdBunZhTRw1w" source="_Sideo61MEeOdBunZhTRw1w" target="_Sideza1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgNa1MEeOdBunZhTRw1w" source="_Sideza1MEeOdBunZhTRw1w" target="_Side_a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgNq1MEeOdBunZhTRw1w" source="_Sic3Z61MEeOdBunZhTRw1w" target="_Sidfdq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgN61MEeOdBunZhTRw1w" source="_Side_a1MEeOdBunZhTRw1w" target="_SidfYa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgOK1MEeOdBunZhTRw1w" source="_Sic3z61MEeOdBunZhTRw1w" target="_SidfgK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgOa1MEeOdBunZhTRw1w" source="_Sic3gK1MEeOdBunZhTRw1w" target="_Sidfg61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgOq1MEeOdBunZhTRw1w" source="_Sic4gq1MEeOdBunZhTRw1w" target="_Sidfhq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgO61MEeOdBunZhTRw1w" source="_SidcQa1MEeOdBunZhTRw1w" target="_Sidfia1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgPK1MEeOdBunZhTRw1w" source="_Sidcgq1MEeOdBunZhTRw1w" target="_SidfjK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgPa1MEeOdBunZhTRw1w" source="_SidckK1MEeOdBunZhTRw1w" target="_Sidfj61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgPq1MEeOdBunZhTRw1w" source="_Sidcnq1MEeOdBunZhTRw1w" target="_Sidfkq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgP61MEeOdBunZhTRw1w" source="_SidcrK1MEeOdBunZhTRw1w" target="_Sidfla1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgQK1MEeOdBunZhTRw1w" source="_Sidc6K1MEeOdBunZhTRw1w" target="_SidfmK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgQa1MEeOdBunZhTRw1w" source="_Sidc861MEeOdBunZhTRw1w" target="_Sidfm61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgQq1MEeOdBunZhTRw1w" source="_SiddFa1MEeOdBunZhTRw1w" target="_Sidfnq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgQ61MEeOdBunZhTRw1w" source="_SiddTK1MEeOdBunZhTRw1w" target="_Sidfoa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgRK1MEeOdBunZhTRw1w" source="_SiddV61MEeOdBunZhTRw1w" target="_SidfpK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgRa1MEeOdBunZhTRw1w" source="_SiddYq1MEeOdBunZhTRw1w" target="_Sidfp61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgRq1MEeOdBunZhTRw1w" source="_Sidddq1MEeOdBunZhTRw1w" target="_Sidfqq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgR61MEeOdBunZhTRw1w" source="_Siddxq1MEeOdBunZhTRw1w" target="_Sidfra1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgSK1MEeOdBunZhTRw1w" source="_Sidd261MEeOdBunZhTRw1w" target="_SidfsK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgSa1MEeOdBunZhTRw1w" source="_Sidd8K1MEeOdBunZhTRw1w" target="_Sidfs61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgSq1MEeOdBunZhTRw1w" source="_Sidd-a1MEeOdBunZhTRw1w" target="_Sidftq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgS61MEeOdBunZhTRw1w" source="_SideKK1MEeOdBunZhTRw1w" target="_Sidfua1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgTK1MEeOdBunZhTRw1w" source="_SideZq1MEeOdBunZhTRw1w" target="_SidfvK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgTa1MEeOdBunZhTRw1w" source="_SidepK1MEeOdBunZhTRw1w" target="_Sidfv61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgTq1MEeOdBunZhTRw1w" source="_Sidezq1MEeOdBunZhTRw1w" target="_Sidfwq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgT61MEeOdBunZhTRw1w" source="_Side_q1MEeOdBunZhTRw1w" target="_Sidfxa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgUK1MEeOdBunZhTRw1w" source="_SidfYq1MEeOdBunZhTRw1w" target="_SidfyK1MEeOdBunZhTRw1w"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3PK1MEeOdBunZhTRw1w" name="Output(i)" incoming="_Sic3I61MEeOdBunZhTRw1w" parameter="_Sic22K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3Pa1MEeOdBunZhTRw1w" name="Output(j)" incoming="_Sic3JK1MEeOdBunZhTRw1w" parameter="_Sic2261MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3Pq1MEeOdBunZhTRw1w" name="Output(bs)" incoming="_Sic3Ja1MEeOdBunZhTRw1w" parameter="_Sic23q1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3P61MEeOdBunZhTRw1w" name="Output(h)" incoming="_Sic3Jq1MEeOdBunZhTRw1w" parameter="_Sic24a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3QK1MEeOdBunZhTRw1w" name="Output(a)" incoming="_Sic3J61MEeOdBunZhTRw1w" parameter="_Sic25K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3Qa1MEeOdBunZhTRw1w" name="Output(b)" incoming="_Sic3KK1MEeOdBunZhTRw1w" parameter="_Sic2561MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3Qq1MEeOdBunZhTRw1w" name="Output(c)" incoming="_Sic3Ka1MEeOdBunZhTRw1w" parameter="_Sic26q1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3Q61MEeOdBunZhTRw1w" name="Output(d)" incoming="_Sic3Kq1MEeOdBunZhTRw1w" parameter="_Sic27a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3RK1MEeOdBunZhTRw1w" name="Output(e)" incoming="_Sic3K61MEeOdBunZhTRw1w" parameter="_Sic28K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3Ra1MEeOdBunZhTRw1w" name="Output(e1)" incoming="_Sic3LK1MEeOdBunZhTRw1w" parameter="_Sic2861MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3Rq1MEeOdBunZhTRw1w" name="Output(e2)" incoming="_Sic3La1MEeOdBunZhTRw1w" parameter="_Sic29q1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3R61MEeOdBunZhTRw1w" name="Output(e3)" incoming="_Sic3Lq1MEeOdBunZhTRw1w" parameter="_Sic2-a1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3SK1MEeOdBunZhTRw1w" name="Output(e4)" incoming="_Sic3L61MEeOdBunZhTRw1w" parameter="_Sic2_K1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3Sa1MEeOdBunZhTRw1w" name="Output(e5)" incoming="_Sic3MK1MEeOdBunZhTRw1w" parameter="_Sic2_61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3Sq1MEeOdBunZhTRw1w" name="Output(e6)" incoming="_Sic3Ma1MEeOdBunZhTRw1w" parameter="_Sic3Aq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3S61MEeOdBunZhTRw1w" name="Output(e7)" incoming="_Sic3Mq1MEeOdBunZhTRw1w" parameter="_Sic3Ba1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3TK1MEeOdBunZhTRw1w" name="Output(e8)" incoming="_Sic3M61MEeOdBunZhTRw1w" parameter="_Sic3CK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3Ta1MEeOdBunZhTRw1w" name="Output(e9)" incoming="_Sic3NK1MEeOdBunZhTRw1w" parameter="_Sic3C61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3Tq1MEeOdBunZhTRw1w" name="Output(f)" incoming="_Sic3Na1MEeOdBunZhTRw1w" parameter="_Sic3Dq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3T61MEeOdBunZhTRw1w" name="Output(f1)" incoming="_Sic3Nq1MEeOdBunZhTRw1w" parameter="_Sic3Ea1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3UK1MEeOdBunZhTRw1w" name="Output(f2)" incoming="_Sic3N61MEeOdBunZhTRw1w" parameter="_Sic3FK1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3Ua1MEeOdBunZhTRw1w" name="Output(x)" incoming="_Sic3OK1MEeOdBunZhTRw1w" parameter="_Sic3F61MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3Uq1MEeOdBunZhTRw1w" name="Output(y)" incoming="_Sic3Oa1MEeOdBunZhTRw1w" parameter="_Sic3Gq1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3U61MEeOdBunZhTRw1w" name="Output(z)" incoming="_Sic3Oq1MEeOdBunZhTRw1w" parameter="_Sic3Ha1MEeOdBunZhTRw1w"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sic3VK1MEeOdBunZhTRw1w" name="Output(r)" incoming="_Sic3O61MEeOdBunZhTRw1w" parameter="_Sic3IK1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SidgUa1MEeOdBunZhTRw1w" name="Expressions_Operator$method$1" specification="_SieDea1MEeOdBunZhTRw1w" group="_SidgV61MEeOdBunZhTRw1w" node="_SidgVq1MEeOdBunZhTRw1w _SidgV61MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_SidgUq1MEeOdBunZhTRw1w" name="" type="_SicNwa1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidgU61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidgVK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SidgVa1MEeOdBunZhTRw1w" source="_SidgXa1MEeOdBunZhTRw1w" target="_SidgVq1MEeOdBunZhTRw1w"/>
        <structuredNode xmi:id="_SidgV61MEeOdBunZhTRw1w" name="Body(Expressions_Operator$method$1)">
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SidgWK1MEeOdBunZhTRw1w" name="Body" incoming="_Sidgg61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SidgWa1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_SidgWq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_Sidgga1MEeOdBunZhTRw1w" type="_SicNwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidgW61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidgXK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SidgXa1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SidgVa1MEeOdBunZhTRw1w _Sidggq1MEeOdBunZhTRw1w _SidghK1MEeOdBunZhTRw1w" incoming="_Sidgga1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SidgXq1MEeOdBunZhTRw1w" name="Call(Expressions_Operator$initialization$1)" outgoing="_Sidgg61MEeOdBunZhTRw1w" incoming="_Sidgiq1MEeOdBunZhTRw1w" operation="_SieDLK1MEeOdBunZhTRw1w">
            <target xmi:id="_SidgX61MEeOdBunZhTRw1w" name="Call(Expressions_Operator$initialization$1).target" incoming="_Sidggq1MEeOdBunZhTRw1w" type="_SicNwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidgYK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidgYa1MEeOdBunZhTRw1w" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SidgYq1MEeOdBunZhTRw1w" name="Read(Expressions_Operator$initializationFlag$1)" structuralFeature="_SicNx61MEeOdBunZhTRw1w">
            <object xmi:id="_SidgY61MEeOdBunZhTRw1w" name="Read(Expressions_Operator$initializationFlag$1).object" incoming="_SidghK1MEeOdBunZhTRw1w" type="_SicNwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidgZK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidgZa1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_SidgZq1MEeOdBunZhTRw1w" name="Read(Expressions_Operator$initializationFlag$1).result" outgoing="_Sidgha1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SidgZ61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidgaK1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sidgaa1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_Sidgaq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_Sidgha1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidga61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidgbK1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_Sidgba1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_Sidghq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidgbq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidgb61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SidgcK1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_Sidgca1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_Sidgh61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidgcq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidgc61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SidgdK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Sidgda1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_Sidgdq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_Sidghq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidgd61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SidgeK1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_Sidgea1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_Sidgia1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidgeq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidge61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_SidgfK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_Sidgh61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidgfa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidgfq1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_Sidgf61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SidgiK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SidggK1MEeOdBunZhTRw1w" name="Decision(Test(Expressions_Operator$initializationFlag$1))" outgoing="_Sidgiq1MEeOdBunZhTRw1w" incoming="_SidgiK1MEeOdBunZhTRw1w _Sidgia1MEeOdBunZhTRw1w" decisionInputFlow="_Sidgia1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidgga1MEeOdBunZhTRw1w" source="_SidgWq1MEeOdBunZhTRw1w" target="_SidgXa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidggq1MEeOdBunZhTRw1w" source="_SidgXa1MEeOdBunZhTRw1w" target="_SidgX61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidgg61MEeOdBunZhTRw1w" source="_SidgXq1MEeOdBunZhTRw1w" target="_SidgWK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SidghK1MEeOdBunZhTRw1w" source="_SidgXa1MEeOdBunZhTRw1w" target="_SidgY61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidgha1MEeOdBunZhTRw1w" source="_SidgZq1MEeOdBunZhTRw1w" target="_Sidgaq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidghq1MEeOdBunZhTRw1w" source="_Sidgba1MEeOdBunZhTRw1w" target="_Sidgdq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidgh61MEeOdBunZhTRw1w" source="_Sidgca1MEeOdBunZhTRw1w" target="_SidgfK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SidgiK1MEeOdBunZhTRw1w" source="_Sidgf61MEeOdBunZhTRw1w" target="_SidggK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sidgia1MEeOdBunZhTRw1w" source="_Sidgea1MEeOdBunZhTRw1w" target="_SidggK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Sidgiq1MEeOdBunZhTRw1w" source="_SidggK1MEeOdBunZhTRw1w" target="_SidgXq1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sidgi61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SidgVq1MEeOdBunZhTRw1w" name="Return" incoming="_SidgVa1MEeOdBunZhTRw1w" parameter="_SidgUq1MEeOdBunZhTRw1w"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SidgjK1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_SieDfa1MEeOdBunZhTRw1w" group="_Sidgja1MEeOdBunZhTRw1w" node="_Sidgja1MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_Sidgja1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_Sidgjq1MEeOdBunZhTRw1w" name="Expressions_Operator$initialization$1" specification="_SieDLK1MEeOdBunZhTRw1w" group="_Sidgj61MEeOdBunZhTRw1w" node="_Sidgj61MEeOdBunZhTRw1w">
        <structuredNode xmi:id="_Sidgj61MEeOdBunZhTRw1w" name="Body(Expressions_Operator$initialization$1)">
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SidgkK1MEeOdBunZhTRw1w" name="ReadSelf">
            <result xmi:id="_Sidgka1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SieDIq1MEeOdBunZhTRw1w" type="_SicNwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sidgkq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sidgk61MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SieC8K1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SieDI61MEeOdBunZhTRw1w _SieDJK1MEeOdBunZhTRw1w" incoming="_SieDIq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieC8a1MEeOdBunZhTRw1w" name="Initialization" incoming="_SieDKq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieC8q1MEeOdBunZhTRw1w" name="Set(initializationFlag)">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieC861MEeOdBunZhTRw1w" name="Value(true)">
                <result xmi:id="_SieC9K1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SieDAq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieC9a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieC9q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SieC961MEeOdBunZhTRw1w" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SieC-K1MEeOdBunZhTRw1w" name="Write(Expressions_Operator$initializationFlag$1)" structuralFeature="_SicNx61MEeOdBunZhTRw1w" isReplaceAll="true">
                <object xmi:id="_SieC-a1MEeOdBunZhTRw1w" name="Write(Expressions_Operator$initializationFlag$1).object" incoming="_SieDI61MEeOdBunZhTRw1w" type="_SicNwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieC-q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieC-61MEeOdBunZhTRw1w" value="1"/>
                </object>
                <result xmi:id="_SieC_K1MEeOdBunZhTRw1w" name="Write(Expressions_Operator$initializationFlag$1).result" type="_SicNwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieC_a1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieC_q1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:id="_SieC_61MEeOdBunZhTRw1w" name="Write(Expressions_Operator$initializationFlag$1).value" incoming="_SieDAq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDAK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDAa1MEeOdBunZhTRw1w" value="1"/>
                </value>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDAq1MEeOdBunZhTRw1w" source="_SieC9K1MEeOdBunZhTRw1w" target="_SieC_61MEeOdBunZhTRw1w"/>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SieDA61MEeOdBunZhTRw1w" name="Read(Expressions_Operator$initializationFlag$1)" structuralFeature="_SicNx61MEeOdBunZhTRw1w">
            <object xmi:id="_SieDBK1MEeOdBunZhTRw1w" name="Read(Expressions_Operator$initializationFlag$1).object" incoming="_SieDJK1MEeOdBunZhTRw1w" type="_SicNwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDBa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDBq1MEeOdBunZhTRw1w" value="1"/>
            </object>
            <result xmi:id="_SieDB61MEeOdBunZhTRw1w" name="Read(Expressions_Operator$initializationFlag$1).result" outgoing="_SieDJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDCK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDCa1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieDCq1MEeOdBunZhTRw1w" name="Call(ListSize)">
            <argument xmi:id="_SieDC61MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SieDJa1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDDK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDDa1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SieDDq1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SieDJq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDD61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDEK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieDEa1MEeOdBunZhTRw1w" name="Value(0)">
            <result xmi:id="_SieDEq1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SieDJ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDE61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDFK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SieDFa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SieDFq1MEeOdBunZhTRw1w" name="Test(Size==0)">
            <first xmi:id="_SieDF61MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SieDJq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDGK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDGa1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_SieDGq1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SieDKa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDG61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDHK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_SieDHa1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SieDJ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDHq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDH61MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SieDIK1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SieDKK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SieDIa1MEeOdBunZhTRw1w" name="Decision(Test(Expressions_Operator$initializationFlag$1))" outgoing="_SieDKq1MEeOdBunZhTRw1w" incoming="_SieDKK1MEeOdBunZhTRw1w _SieDKa1MEeOdBunZhTRw1w" decisionInputFlow="_SieDKa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDIq1MEeOdBunZhTRw1w" source="_Sidgka1MEeOdBunZhTRw1w" target="_SieC8K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDI61MEeOdBunZhTRw1w" source="_SieC8K1MEeOdBunZhTRw1w" target="_SieC-a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDJK1MEeOdBunZhTRw1w" source="_SieC8K1MEeOdBunZhTRw1w" target="_SieDBK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDJa1MEeOdBunZhTRw1w" source="_SieDB61MEeOdBunZhTRw1w" target="_SieDC61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDJq1MEeOdBunZhTRw1w" source="_SieDDq1MEeOdBunZhTRw1w" target="_SieDF61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDJ61MEeOdBunZhTRw1w" source="_SieDEq1MEeOdBunZhTRw1w" target="_SieDHa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SieDKK1MEeOdBunZhTRw1w" source="_SieDIK1MEeOdBunZhTRw1w" target="_SieDIa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDKa1MEeOdBunZhTRw1w" source="_SieDGq1MEeOdBunZhTRw1w" target="_SieDIa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SieDKq1MEeOdBunZhTRw1w" source="_SieDIa1MEeOdBunZhTRw1w" target="_SieC8a1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieDK61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_SieDLK1MEeOdBunZhTRw1w" name="Expressions_Operator$initialization$1" visibility="protected" method="_Sidgjq1MEeOdBunZhTRw1w"/>
      <ownedOperation xmi:id="_SieDLa1MEeOdBunZhTRw1w" name="test" visibility="package" method="_Sic2161MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_SieDLq1MEeOdBunZhTRw1w" name="i" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDL61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDMK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDMa1MEeOdBunZhTRw1w" name="j" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDMq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDM61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDNK1MEeOdBunZhTRw1w" name="bs" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-BitString"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDNa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDNq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDN61MEeOdBunZhTRw1w" name="h" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDOK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDOa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDOq1MEeOdBunZhTRw1w" name="a" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDO61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDPK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDPa1MEeOdBunZhTRw1w" name="b" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDPq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDP61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDQK1MEeOdBunZhTRw1w" name="c" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDQa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDQq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDQ61MEeOdBunZhTRw1w" name="d" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDRK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDRa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDRq1MEeOdBunZhTRw1w" name="e" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDR61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDSK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDSa1MEeOdBunZhTRw1w" name="e1" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDSq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDS61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDTK1MEeOdBunZhTRw1w" name="e2" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDTa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDTq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDT61MEeOdBunZhTRw1w" name="e3" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDUK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDUa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDUq1MEeOdBunZhTRw1w" name="e4" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDU61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDVK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDVa1MEeOdBunZhTRw1w" name="e5" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDVq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDV61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDWK1MEeOdBunZhTRw1w" name="e6" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDWa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDWq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDW61MEeOdBunZhTRw1w" name="e7" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDXK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDXa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDXq1MEeOdBunZhTRw1w" name="e8" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDX61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDYK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDYa1MEeOdBunZhTRw1w" name="e9" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDYq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDY61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDZK1MEeOdBunZhTRw1w" name="f" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDZa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDZq1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDZ61MEeOdBunZhTRw1w" name="f1" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDaK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDaa1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDaq1MEeOdBunZhTRw1w" name="f2" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDa61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDbK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDba1MEeOdBunZhTRw1w" name="x" visibility="package" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDbq1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDb61MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDcK1MEeOdBunZhTRw1w" name="y" visibility="package" isOrdered="true" isUnique="false" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDca1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDcq1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDc61MEeOdBunZhTRw1w" name="z" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDdK1MEeOdBunZhTRw1w"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDda1MEeOdBunZhTRw1w" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SieDdq1MEeOdBunZhTRw1w" name="r" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDd61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDeK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SieDea1MEeOdBunZhTRw1w" name="Expressions_Operator" visibility="package" method="_SidgUa1MEeOdBunZhTRw1w">
        <ownedParameter xmi:id="_SieDeq1MEeOdBunZhTRw1w" name="" visibility="package" type="_SicNwa1MEeOdBunZhTRw1w" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDe61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDfK1MEeOdBunZhTRw1w" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SieDfa1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_SidgjK1MEeOdBunZhTRw1w"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SieDfq1MEeOdBunZhTRw1w" name="Monitor" visibility="package">
        <ownedAttribute xmi:id="_SieDf61MEeOdBunZhTRw1w" name="Monitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDgK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDga1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieDgq1MEeOdBunZhTRw1w" name="getActiveSensor$method$1" specification="_SieEHK1MEeOdBunZhTRw1w" group="_SieDiq1MEeOdBunZhTRw1w" node="_SieDiK1MEeOdBunZhTRw1w _SieDia1MEeOdBunZhTRw1w _SieDiq1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SieDg61MEeOdBunZhTRw1w" name="" type="_SieEJa1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDhK1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDha1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SieDhq1MEeOdBunZhTRw1w" source="_SieDi61MEeOdBunZhTRw1w" target="_SieDia1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDh61MEeOdBunZhTRw1w" source="_SieDl61MEeOdBunZhTRw1w" target="_SieDiK1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_SieDiq1MEeOdBunZhTRw1w" name="Body(getActiveSensor$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieDi61MEeOdBunZhTRw1w" name="ReturnStatement@7501dca0" outgoing="_SieDhq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallOperationAction" xmi:id="_SieDjK1MEeOdBunZhTRw1w" name="Call(Sensor)" operation="_SieEvK1MEeOdBunZhTRw1w">
                <result xmi:id="_SieDja1MEeOdBunZhTRw1w" name="Call(Sensor).result()" outgoing="_SieDm61MEeOdBunZhTRw1w" type="_SieEJa1MEeOdBunZhTRw1w">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDjq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDj61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <target xmi:id="_SieDkK1MEeOdBunZhTRw1w" name="Call(Sensor).target" incoming="_SieDmq1MEeOdBunZhTRw1w" type="_SieEJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDka1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDkq1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_SieDk61MEeOdBunZhTRw1w" name="Create(Sensor)" classifier="_SieEJa1MEeOdBunZhTRw1w">
                <result xmi:id="_SieDlK1MEeOdBunZhTRw1w" name="Create(Sensor).result" outgoing="_SieDmq1MEeOdBunZhTRw1w" type="_SieEJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDla1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDlq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <structuredNodeOutput xmi:id="_SieDl61MEeOdBunZhTRw1w" name="ReturnStatement@7501dca0.output" outgoing="_SieDh61MEeOdBunZhTRw1w" incoming="_SieDm61MEeOdBunZhTRw1w" type="_SieEJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDmK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDma1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDmq1MEeOdBunZhTRw1w" source="_SieDlK1MEeOdBunZhTRw1w" target="_SieDkK1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDm61MEeOdBunZhTRw1w" source="_SieDja1MEeOdBunZhTRw1w" target="_SieDl61MEeOdBunZhTRw1w"/>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SieDiK1MEeOdBunZhTRw1w" name="Return" incoming="_SieDh61MEeOdBunZhTRw1w" parameter="_SieDg61MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ActivityFinalNode" xmi:id="_SieDia1MEeOdBunZhTRw1w" name="Final" incoming="_SieDhq1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieDnK1MEeOdBunZhTRw1w" name="Monitor$method$1" specification="_SieEIK1MEeOdBunZhTRw1w" group="_SieDoq1MEeOdBunZhTRw1w" node="_SieDoa1MEeOdBunZhTRw1w _SieDoq1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SieDna1MEeOdBunZhTRw1w" name="" type="_SieDfq1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDnq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDn61MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDoK1MEeOdBunZhTRw1w" source="_SieDqK1MEeOdBunZhTRw1w" target="_SieDoa1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_SieDoq1MEeOdBunZhTRw1w" name="Body(Monitor$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieDo61MEeOdBunZhTRw1w" name="Body" incoming="_SieDzq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SieDpK1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SieDpa1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SieDzK1MEeOdBunZhTRw1w" type="_SieDfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDpq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDp61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SieDqK1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SieDoK1MEeOdBunZhTRw1w _SieDza1MEeOdBunZhTRw1w _SieDz61MEeOdBunZhTRw1w" incoming="_SieDzK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SieDqa1MEeOdBunZhTRw1w" name="Call(Monitor$initialization$1)" outgoing="_SieDzq1MEeOdBunZhTRw1w" incoming="_SieD1a1MEeOdBunZhTRw1w" operation="_SieEG61MEeOdBunZhTRw1w">
              <target xmi:id="_SieDqq1MEeOdBunZhTRw1w" name="Call(Monitor$initialization$1).target" incoming="_SieDza1MEeOdBunZhTRw1w" type="_SieDfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDq61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDrK1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SieDra1MEeOdBunZhTRw1w" name="Read(Monitor$initializationFlag$1)" structuralFeature="_SieDf61MEeOdBunZhTRw1w">
              <object xmi:id="_SieDrq1MEeOdBunZhTRw1w" name="Read(Monitor$initializationFlag$1).object" incoming="_SieDz61MEeOdBunZhTRw1w" type="_SieDfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDr61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDsK1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SieDsa1MEeOdBunZhTRw1w" name="Read(Monitor$initializationFlag$1).result" outgoing="_SieD0K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDsq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDs61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieDtK1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SieDta1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SieD0K1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDtq1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDt61MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SieDuK1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SieD0a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDua1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDuq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieDu61MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SieDvK1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SieD0q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDva1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDvq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SieDv61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SieDwK1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SieDwa1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SieD0a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDwq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDw61MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SieDxK1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SieD1K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDxa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDxq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SieDx61MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SieD0q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieDyK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieDya1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SieDyq1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SieD061MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SieDy61MEeOdBunZhTRw1w" name="Decision(Test(Monitor$initializationFlag$1))" outgoing="_SieD1a1MEeOdBunZhTRw1w" incoming="_SieD061MEeOdBunZhTRw1w _SieD1K1MEeOdBunZhTRw1w" decisionInputFlow="_SieD1K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDzK1MEeOdBunZhTRw1w" source="_SieDpa1MEeOdBunZhTRw1w" target="_SieDqK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDza1MEeOdBunZhTRw1w" source="_SieDqK1MEeOdBunZhTRw1w" target="_SieDqq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieDzq1MEeOdBunZhTRw1w" source="_SieDqa1MEeOdBunZhTRw1w" target="_SieDo61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieDz61MEeOdBunZhTRw1w" source="_SieDqK1MEeOdBunZhTRw1w" target="_SieDrq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieD0K1MEeOdBunZhTRw1w" source="_SieDsa1MEeOdBunZhTRw1w" target="_SieDta1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieD0a1MEeOdBunZhTRw1w" source="_SieDuK1MEeOdBunZhTRw1w" target="_SieDwa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieD0q1MEeOdBunZhTRw1w" source="_SieDvK1MEeOdBunZhTRw1w" target="_SieDx61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieD061MEeOdBunZhTRw1w" source="_SieDyq1MEeOdBunZhTRw1w" target="_SieDy61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieD1K1MEeOdBunZhTRw1w" source="_SieDxK1MEeOdBunZhTRw1w" target="_SieDy61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieD1a1MEeOdBunZhTRw1w" source="_SieDy61MEeOdBunZhTRw1w" target="_SieDqa1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieD1q1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SieDoa1MEeOdBunZhTRw1w" name="Return" incoming="_SieDoK1MEeOdBunZhTRw1w" parameter="_SieDna1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieD161MEeOdBunZhTRw1w" name="destroy$method$1" specification="_SieEJK1MEeOdBunZhTRw1w" group="_SieD2K1MEeOdBunZhTRw1w" node="_SieD2K1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SieD2K1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieD2a1MEeOdBunZhTRw1w" name="Monitor$initialization$1" specification="_SieEG61MEeOdBunZhTRw1w" group="_SieD2q1MEeOdBunZhTRw1w" node="_SieD2q1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SieD2q1MEeOdBunZhTRw1w" name="Body(Monitor$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SieD261MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SieD3K1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SieEEa1MEeOdBunZhTRw1w" type="_SieDfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieD3a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieD3q1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SieD361MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SieEEq1MEeOdBunZhTRw1w _SieEE61MEeOdBunZhTRw1w" incoming="_SieEEa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieD4K1MEeOdBunZhTRw1w" name="Initialization" incoming="_SieEGa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieD4a1MEeOdBunZhTRw1w" name="Set(initializationFlag)">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieD4q1MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_SieD461MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SieD8a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieD5K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieD5a1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SieD5q1MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SieD561MEeOdBunZhTRw1w" name="Write(Monitor$initializationFlag$1)" structuralFeature="_SieDf61MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SieD6K1MEeOdBunZhTRw1w" name="Write(Monitor$initializationFlag$1).object" incoming="_SieEEq1MEeOdBunZhTRw1w" type="_SieDfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieD6a1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieD6q1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SieD661MEeOdBunZhTRw1w" name="Write(Monitor$initializationFlag$1).result" type="_SieDfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieD7K1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieD7a1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SieD7q1MEeOdBunZhTRw1w" name="Write(Monitor$initializationFlag$1).value" incoming="_SieD8a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieD761MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieD8K1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SieD8a1MEeOdBunZhTRw1w" source="_SieD461MEeOdBunZhTRw1w" target="_SieD7q1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SieD8q1MEeOdBunZhTRw1w" name="Read(Monitor$initializationFlag$1)" structuralFeature="_SieDf61MEeOdBunZhTRw1w">
              <object xmi:id="_SieD861MEeOdBunZhTRw1w" name="Read(Monitor$initializationFlag$1).object" incoming="_SieEE61MEeOdBunZhTRw1w" type="_SieDfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieD9K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieD9a1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SieD9q1MEeOdBunZhTRw1w" name="Read(Monitor$initializationFlag$1).result" outgoing="_SieEFK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieD961MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieD-K1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieD-a1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SieD-q1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SieEFK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieD-61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieD_K1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SieD_a1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SieEFa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieD_q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieD_61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieEAK1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SieEAa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SieEFq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEAq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEA61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SieEBK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SieEBa1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SieEBq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SieEFa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEB61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieECK1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SieECa1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SieEGK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieECq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEC61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SieEDK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SieEFq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEDa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEDq1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SieED61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SieEF61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SieEEK1MEeOdBunZhTRw1w" name="Decision(Test(Monitor$initializationFlag$1))" outgoing="_SieEGa1MEeOdBunZhTRw1w" incoming="_SieEF61MEeOdBunZhTRw1w _SieEGK1MEeOdBunZhTRw1w" decisionInputFlow="_SieEGK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEEa1MEeOdBunZhTRw1w" source="_SieD3K1MEeOdBunZhTRw1w" target="_SieD361MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEEq1MEeOdBunZhTRw1w" source="_SieD361MEeOdBunZhTRw1w" target="_SieD6K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEE61MEeOdBunZhTRw1w" source="_SieD361MEeOdBunZhTRw1w" target="_SieD861MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEFK1MEeOdBunZhTRw1w" source="_SieD9q1MEeOdBunZhTRw1w" target="_SieD-q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEFa1MEeOdBunZhTRw1w" source="_SieD_a1MEeOdBunZhTRw1w" target="_SieEBq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEFq1MEeOdBunZhTRw1w" source="_SieEAa1MEeOdBunZhTRw1w" target="_SieEDK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieEF61MEeOdBunZhTRw1w" source="_SieED61MEeOdBunZhTRw1w" target="_SieEEK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEGK1MEeOdBunZhTRw1w" source="_SieECa1MEeOdBunZhTRw1w" target="_SieEEK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieEGa1MEeOdBunZhTRw1w" source="_SieEEK1MEeOdBunZhTRw1w" target="_SieD4K1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieEGq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SieEG61MEeOdBunZhTRw1w" name="Monitor$initialization$1" visibility="protected" method="_SieD2a1MEeOdBunZhTRw1w"/>
        <ownedOperation xmi:id="_SieEHK1MEeOdBunZhTRw1w" name="getActiveSensor" visibility="public" method="_SieDgq1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SieEHa1MEeOdBunZhTRw1w" name="" visibility="package" type="_SieEJa1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEHq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEH61MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SieEIK1MEeOdBunZhTRw1w" name="Monitor" visibility="package" method="_SieDnK1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SieEIa1MEeOdBunZhTRw1w" name="" visibility="package" type="_SieDfq1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEIq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEI61MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SieEJK1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_SieD161MEeOdBunZhTRw1w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SieEJa1MEeOdBunZhTRw1w" name="Sensor" visibility="package">
        <ownedAttribute xmi:id="_SieEJq1MEeOdBunZhTRw1w" name="Sensor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEJ61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEKK1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieEKa1MEeOdBunZhTRw1w" name="Sensor$method$1" specification="_SieEvK1MEeOdBunZhTRw1w" group="_SieEL61MEeOdBunZhTRw1w" node="_SieELq1MEeOdBunZhTRw1w _SieEL61MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SieEKq1MEeOdBunZhTRw1w" name="" type="_SieEJa1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEK61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieELK1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieELa1MEeOdBunZhTRw1w" source="_SieENa1MEeOdBunZhTRw1w" target="_SieELq1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_SieEL61MEeOdBunZhTRw1w" name="Body(Sensor$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieEMK1MEeOdBunZhTRw1w" name="Body" incoming="_SieEW61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SieEMa1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SieEMq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SieEWa1MEeOdBunZhTRw1w" type="_SieEJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEM61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieENK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SieENa1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SieELa1MEeOdBunZhTRw1w _SieEWq1MEeOdBunZhTRw1w _SieEXK1MEeOdBunZhTRw1w" incoming="_SieEWa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SieENq1MEeOdBunZhTRw1w" name="Call(Sensor$initialization$1)" outgoing="_SieEW61MEeOdBunZhTRw1w" incoming="_SieEYq1MEeOdBunZhTRw1w" operation="_SieEu61MEeOdBunZhTRw1w">
              <target xmi:id="_SieEN61MEeOdBunZhTRw1w" name="Call(Sensor$initialization$1).target" incoming="_SieEWq1MEeOdBunZhTRw1w" type="_SieEJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEOK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEOa1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SieEOq1MEeOdBunZhTRw1w" name="Read(Sensor$initializationFlag$1)" structuralFeature="_SieEJq1MEeOdBunZhTRw1w">
              <object xmi:id="_SieEO61MEeOdBunZhTRw1w" name="Read(Sensor$initializationFlag$1).object" incoming="_SieEXK1MEeOdBunZhTRw1w" type="_SieEJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEPK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEPa1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SieEPq1MEeOdBunZhTRw1w" name="Read(Sensor$initializationFlag$1).result" outgoing="_SieEXa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEP61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEQK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieEQa1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SieEQq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SieEXa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEQ61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieERK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SieERa1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SieEXq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieERq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieER61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieESK1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SieESa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SieEX61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieESq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieES61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SieETK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SieETa1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SieETq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SieEXq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieET61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEUK1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SieEUa1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SieEYa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEUq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEU61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SieEVK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SieEX61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEVa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEVq1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SieEV61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SieEYK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SieEWK1MEeOdBunZhTRw1w" name="Decision(Test(Sensor$initializationFlag$1))" outgoing="_SieEYq1MEeOdBunZhTRw1w" incoming="_SieEYK1MEeOdBunZhTRw1w _SieEYa1MEeOdBunZhTRw1w" decisionInputFlow="_SieEYa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEWa1MEeOdBunZhTRw1w" source="_SieEMq1MEeOdBunZhTRw1w" target="_SieENa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEWq1MEeOdBunZhTRw1w" source="_SieENa1MEeOdBunZhTRw1w" target="_SieEN61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieEW61MEeOdBunZhTRw1w" source="_SieENq1MEeOdBunZhTRw1w" target="_SieEMK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEXK1MEeOdBunZhTRw1w" source="_SieENa1MEeOdBunZhTRw1w" target="_SieEO61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEXa1MEeOdBunZhTRw1w" source="_SieEPq1MEeOdBunZhTRw1w" target="_SieEQq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEXq1MEeOdBunZhTRw1w" source="_SieERa1MEeOdBunZhTRw1w" target="_SieETq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEX61MEeOdBunZhTRw1w" source="_SieESa1MEeOdBunZhTRw1w" target="_SieEVK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieEYK1MEeOdBunZhTRw1w" source="_SieEV61MEeOdBunZhTRw1w" target="_SieEWK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEYa1MEeOdBunZhTRw1w" source="_SieEUa1MEeOdBunZhTRw1w" target="_SieEWK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieEYq1MEeOdBunZhTRw1w" source="_SieEWK1MEeOdBunZhTRw1w" target="_SieENq1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieEY61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SieELq1MEeOdBunZhTRw1w" name="Return" incoming="_SieELa1MEeOdBunZhTRw1w" parameter="_SieEKq1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieEZK1MEeOdBunZhTRw1w" name="getReading$method$1" specification="_SieEwK1MEeOdBunZhTRw1w" group="_SieEbK1MEeOdBunZhTRw1w" node="_SieEaq1MEeOdBunZhTRw1w _SieEa61MEeOdBunZhTRw1w _SieEbK1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SieEZa1MEeOdBunZhTRw1w" name="" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEZq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEZ61MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SieEaK1MEeOdBunZhTRw1w" source="_SieEba1MEeOdBunZhTRw1w" target="_SieEa61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEaa1MEeOdBunZhTRw1w" source="_SieEc61MEeOdBunZhTRw1w" target="_SieEaq1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_SieEbK1MEeOdBunZhTRw1w" name="Body(getReading$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieEba1MEeOdBunZhTRw1w" name="ReturnStatement@40bf1996" outgoing="_SieEaK1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieEbq1MEeOdBunZhTRw1w" name="Value(2)">
                <result xmi:id="_SieEb61MEeOdBunZhTRw1w" name="Value(2).result" outgoing="_SieEdq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEcK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEca1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SieEcq1MEeOdBunZhTRw1w" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <structuredNodeOutput xmi:id="_SieEc61MEeOdBunZhTRw1w" name="ReturnStatement@40bf1996.output" outgoing="_SieEaa1MEeOdBunZhTRw1w" incoming="_SieEdq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEdK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEda1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEdq1MEeOdBunZhTRw1w" source="_SieEb61MEeOdBunZhTRw1w" target="_SieEc61MEeOdBunZhTRw1w"/>
            </node>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SieEaq1MEeOdBunZhTRw1w" name="Return" incoming="_SieEaa1MEeOdBunZhTRw1w" parameter="_SieEZa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ActivityFinalNode" xmi:id="_SieEa61MEeOdBunZhTRw1w" name="Final" incoming="_SieEaK1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieEd61MEeOdBunZhTRw1w" name="destroy$method$1" specification="_SieExK1MEeOdBunZhTRw1w" group="_SieEeK1MEeOdBunZhTRw1w" node="_SieEeK1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SieEeK1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieEea1MEeOdBunZhTRw1w" name="Sensor$initialization$1" specification="_SieEu61MEeOdBunZhTRw1w" group="_SieEeq1MEeOdBunZhTRw1w" node="_SieEeq1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SieEeq1MEeOdBunZhTRw1w" name="Body(Sensor$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SieEe61MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SieEfK1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SieEsa1MEeOdBunZhTRw1w" type="_SieEJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEfa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEfq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SieEf61MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SieEsq1MEeOdBunZhTRw1w _SieEs61MEeOdBunZhTRw1w" incoming="_SieEsa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieEgK1MEeOdBunZhTRw1w" name="Initialization" incoming="_SieEua1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieEga1MEeOdBunZhTRw1w" name="Set(initializationFlag)">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieEgq1MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_SieEg61MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SieEka1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEhK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEha1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SieEhq1MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SieEh61MEeOdBunZhTRw1w" name="Write(Sensor$initializationFlag$1)" structuralFeature="_SieEJq1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SieEiK1MEeOdBunZhTRw1w" name="Write(Sensor$initializationFlag$1).object" incoming="_SieEsq1MEeOdBunZhTRw1w" type="_SieEJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEia1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEiq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SieEi61MEeOdBunZhTRw1w" name="Write(Sensor$initializationFlag$1).result" type="_SieEJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEjK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEja1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SieEjq1MEeOdBunZhTRw1w" name="Write(Sensor$initializationFlag$1).value" incoming="_SieEka1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEj61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEkK1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEka1MEeOdBunZhTRw1w" source="_SieEg61MEeOdBunZhTRw1w" target="_SieEjq1MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SieEkq1MEeOdBunZhTRw1w" name="Read(Sensor$initializationFlag$1)" structuralFeature="_SieEJq1MEeOdBunZhTRw1w">
              <object xmi:id="_SieEk61MEeOdBunZhTRw1w" name="Read(Sensor$initializationFlag$1).object" incoming="_SieEs61MEeOdBunZhTRw1w" type="_SieEJa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieElK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEla1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SieElq1MEeOdBunZhTRw1w" name="Read(Sensor$initializationFlag$1).result" outgoing="_SieEtK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEl61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEmK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieEma1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SieEmq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SieEtK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEm61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEnK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SieEna1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SieEta1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEnq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEn61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieEoK1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SieEoa1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SieEtq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEoq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEo61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SieEpK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SieEpa1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SieEpq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SieEta1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEp61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEqK1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SieEqa1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SieEuK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEqq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEq61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SieErK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SieEtq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEra1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieErq1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SieEr61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SieEt61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SieEsK1MEeOdBunZhTRw1w" name="Decision(Test(Sensor$initializationFlag$1))" outgoing="_SieEua1MEeOdBunZhTRw1w" incoming="_SieEt61MEeOdBunZhTRw1w _SieEuK1MEeOdBunZhTRw1w" decisionInputFlow="_SieEuK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEsa1MEeOdBunZhTRw1w" source="_SieEfK1MEeOdBunZhTRw1w" target="_SieEf61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEsq1MEeOdBunZhTRw1w" source="_SieEf61MEeOdBunZhTRw1w" target="_SieEiK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEs61MEeOdBunZhTRw1w" source="_SieEf61MEeOdBunZhTRw1w" target="_SieEk61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEtK1MEeOdBunZhTRw1w" source="_SieElq1MEeOdBunZhTRw1w" target="_SieEmq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEta1MEeOdBunZhTRw1w" source="_SieEna1MEeOdBunZhTRw1w" target="_SieEpq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEtq1MEeOdBunZhTRw1w" source="_SieEoa1MEeOdBunZhTRw1w" target="_SieErK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieEt61MEeOdBunZhTRw1w" source="_SieEr61MEeOdBunZhTRw1w" target="_SieEsK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEuK1MEeOdBunZhTRw1w" source="_SieEqa1MEeOdBunZhTRw1w" target="_SieEsK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieEua1MEeOdBunZhTRw1w" source="_SieEsK1MEeOdBunZhTRw1w" target="_SieEgK1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieEuq1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SieEu61MEeOdBunZhTRw1w" name="Sensor$initialization$1" visibility="protected" method="_SieEea1MEeOdBunZhTRw1w"/>
        <ownedOperation xmi:id="_SieEvK1MEeOdBunZhTRw1w" name="Sensor" visibility="package" method="_SieEKa1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SieEva1MEeOdBunZhTRw1w" name="" visibility="package" type="_SieEJa1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEvq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEv61MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SieEwK1MEeOdBunZhTRw1w" name="getReading" visibility="public" method="_SieEZK1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SieEwa1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEwq1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEw61MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SieExK1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_SieEd61MEeOdBunZhTRw1w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SieExa1MEeOdBunZhTRw1w" name="Person" visibility="package">
        <ownedAttribute xmi:id="_SieExq1MEeOdBunZhTRw1w" name="Person$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEx61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEyK1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieEya1MEeOdBunZhTRw1w" name="Person$method$1" specification="_SieFSa1MEeOdBunZhTRw1w" group="_SieEz61MEeOdBunZhTRw1w" node="_SieEzq1MEeOdBunZhTRw1w _SieEz61MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SieEyq1MEeOdBunZhTRw1w" name="" type="_SieExa1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieEy61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieEzK1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieEza1MEeOdBunZhTRw1w" source="_SieE1a1MEeOdBunZhTRw1w" target="_SieEzq1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_SieEz61MEeOdBunZhTRw1w" name="Body(Person$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieE0K1MEeOdBunZhTRw1w" name="Body" incoming="_SieE-61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SieE0a1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SieE0q1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SieE-a1MEeOdBunZhTRw1w" type="_SieExa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieE061MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieE1K1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SieE1a1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SieEza1MEeOdBunZhTRw1w _SieE-q1MEeOdBunZhTRw1w _SieE_K1MEeOdBunZhTRw1w" incoming="_SieE-a1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SieE1q1MEeOdBunZhTRw1w" name="Call(Person$initialization$1)" outgoing="_SieE-61MEeOdBunZhTRw1w" incoming="_SieFAq1MEeOdBunZhTRw1w" operation="_SieFSK1MEeOdBunZhTRw1w">
              <target xmi:id="_SieE161MEeOdBunZhTRw1w" name="Call(Person$initialization$1).target" incoming="_SieE-q1MEeOdBunZhTRw1w" type="_SieExa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieE2K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieE2a1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SieE2q1MEeOdBunZhTRw1w" name="Read(Person$initializationFlag$1)" structuralFeature="_SieExq1MEeOdBunZhTRw1w">
              <object xmi:id="_SieE261MEeOdBunZhTRw1w" name="Read(Person$initializationFlag$1).object" incoming="_SieE_K1MEeOdBunZhTRw1w" type="_SieExa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieE3K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieE3a1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SieE3q1MEeOdBunZhTRw1w" name="Read(Person$initializationFlag$1).result" outgoing="_SieE_a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieE361MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieE4K1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieE4a1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SieE4q1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SieE_a1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieE461MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieE5K1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SieE5a1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SieE_q1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieE5q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieE561MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieE6K1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SieE6a1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SieE_61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieE6q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieE661MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SieE7K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SieE7a1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SieE7q1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SieE_q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieE761MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieE8K1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SieE8a1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SieFAa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieE8q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieE861MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SieE9K1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SieE_61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieE9a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieE9q1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SieE961MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SieFAK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SieE-K1MEeOdBunZhTRw1w" name="Decision(Test(Person$initializationFlag$1))" outgoing="_SieFAq1MEeOdBunZhTRw1w" incoming="_SieFAK1MEeOdBunZhTRw1w _SieFAa1MEeOdBunZhTRw1w" decisionInputFlow="_SieFAa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieE-a1MEeOdBunZhTRw1w" source="_SieE0q1MEeOdBunZhTRw1w" target="_SieE1a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieE-q1MEeOdBunZhTRw1w" source="_SieE1a1MEeOdBunZhTRw1w" target="_SieE161MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieE-61MEeOdBunZhTRw1w" source="_SieE1q1MEeOdBunZhTRw1w" target="_SieE0K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieE_K1MEeOdBunZhTRw1w" source="_SieE1a1MEeOdBunZhTRw1w" target="_SieE261MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieE_a1MEeOdBunZhTRw1w" source="_SieE3q1MEeOdBunZhTRw1w" target="_SieE4q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieE_q1MEeOdBunZhTRw1w" source="_SieE5a1MEeOdBunZhTRw1w" target="_SieE7q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieE_61MEeOdBunZhTRw1w" source="_SieE6a1MEeOdBunZhTRw1w" target="_SieE9K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieFAK1MEeOdBunZhTRw1w" source="_SieE961MEeOdBunZhTRw1w" target="_SieE-K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFAa1MEeOdBunZhTRw1w" source="_SieE8a1MEeOdBunZhTRw1w" target="_SieE-K1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieFAq1MEeOdBunZhTRw1w" source="_SieE-K1MEeOdBunZhTRw1w" target="_SieE1q1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieFA61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SieEzq1MEeOdBunZhTRw1w" name="Return" incoming="_SieEza1MEeOdBunZhTRw1w" parameter="_SieEyq1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieFBK1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_SieFTa1MEeOdBunZhTRw1w" group="_SieFBa1MEeOdBunZhTRw1w" node="_SieFBa1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SieFBa1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieFBq1MEeOdBunZhTRw1w" name="Person$initialization$1" specification="_SieFSK1MEeOdBunZhTRw1w" group="_SieFB61MEeOdBunZhTRw1w" node="_SieFB61MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SieFB61MEeOdBunZhTRw1w" name="Body(Person$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SieFCK1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SieFCa1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SieFPq1MEeOdBunZhTRw1w" type="_SieExa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFCq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFC61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SieFDK1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SieFP61MEeOdBunZhTRw1w _SieFQK1MEeOdBunZhTRw1w" incoming="_SieFPq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieFDa1MEeOdBunZhTRw1w" name="Initialization" incoming="_SieFRq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieFDq1MEeOdBunZhTRw1w" name="Set(initializationFlag)">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieFD61MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_SieFEK1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SieFHq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFEa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFEq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SieFE61MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SieFFK1MEeOdBunZhTRw1w" name="Write(Person$initializationFlag$1)" structuralFeature="_SieExq1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SieFFa1MEeOdBunZhTRw1w" name="Write(Person$initializationFlag$1).object" incoming="_SieFP61MEeOdBunZhTRw1w" type="_SieExa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFFq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFF61MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SieFGK1MEeOdBunZhTRw1w" name="Write(Person$initializationFlag$1).result" type="_SieExa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFGa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFGq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SieFG61MEeOdBunZhTRw1w" name="Write(Person$initializationFlag$1).value" incoming="_SieFHq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFHK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFHa1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFHq1MEeOdBunZhTRw1w" source="_SieFEK1MEeOdBunZhTRw1w" target="_SieFG61MEeOdBunZhTRw1w"/>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SieFH61MEeOdBunZhTRw1w" name="Read(Person$initializationFlag$1)" structuralFeature="_SieExq1MEeOdBunZhTRw1w">
              <object xmi:id="_SieFIK1MEeOdBunZhTRw1w" name="Read(Person$initializationFlag$1).object" incoming="_SieFQK1MEeOdBunZhTRw1w" type="_SieExa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFIa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFIq1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SieFI61MEeOdBunZhTRw1w" name="Read(Person$initializationFlag$1).result" outgoing="_SieFQa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFJK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFJa1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieFJq1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SieFJ61MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SieFQa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFKK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFKa1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SieFKq1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SieFQq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFK61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFLK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieFLa1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SieFLq1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SieFQ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFL61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFMK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SieFMa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SieFMq1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SieFM61MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SieFQq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFNK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFNa1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SieFNq1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SieFRa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFN61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFOK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SieFOa1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SieFQ61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFOq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFO61MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SieFPK1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SieFRK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SieFPa1MEeOdBunZhTRw1w" name="Decision(Test(Person$initializationFlag$1))" outgoing="_SieFRq1MEeOdBunZhTRw1w" incoming="_SieFRK1MEeOdBunZhTRw1w _SieFRa1MEeOdBunZhTRw1w" decisionInputFlow="_SieFRa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFPq1MEeOdBunZhTRw1w" source="_SieFCa1MEeOdBunZhTRw1w" target="_SieFDK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFP61MEeOdBunZhTRw1w" source="_SieFDK1MEeOdBunZhTRw1w" target="_SieFFa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFQK1MEeOdBunZhTRw1w" source="_SieFDK1MEeOdBunZhTRw1w" target="_SieFIK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFQa1MEeOdBunZhTRw1w" source="_SieFI61MEeOdBunZhTRw1w" target="_SieFJ61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFQq1MEeOdBunZhTRw1w" source="_SieFKq1MEeOdBunZhTRw1w" target="_SieFM61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFQ61MEeOdBunZhTRw1w" source="_SieFLq1MEeOdBunZhTRw1w" target="_SieFOa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieFRK1MEeOdBunZhTRw1w" source="_SieFPK1MEeOdBunZhTRw1w" target="_SieFPa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFRa1MEeOdBunZhTRw1w" source="_SieFNq1MEeOdBunZhTRw1w" target="_SieFPa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieFRq1MEeOdBunZhTRw1w" source="_SieFPa1MEeOdBunZhTRw1w" target="_SieFDa1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieFR61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SieFSK1MEeOdBunZhTRw1w" name="Person$initialization$1" visibility="protected" method="_SieFBq1MEeOdBunZhTRw1w"/>
        <ownedOperation xmi:id="_SieFSa1MEeOdBunZhTRw1w" name="Person" visibility="package" method="_SieEya1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SieFSq1MEeOdBunZhTRw1w" name="" visibility="package" type="_SieExa1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFS61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFTK1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SieFTa1MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_SieFBK1MEeOdBunZhTRw1w"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SieFTq1MEeOdBunZhTRw1w" name="Employee" visibility="package">
        <generalization xmi:id="_SieFT61MEeOdBunZhTRw1w" general="_SieExa1MEeOdBunZhTRw1w"/>
        <ownedAttribute xmi:id="_SieFUK1MEeOdBunZhTRw1w" name="Employee$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFUa1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFUq1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SieFU61MEeOdBunZhTRw1w" name="id" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFVK1MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFVa1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SieFVq1MEeOdBunZhTRw1w" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFV61MEeOdBunZhTRw1w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFWK1MEeOdBunZhTRw1w" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieFWa1MEeOdBunZhTRw1w" name="Employee$method$1" specification="_SieF361MEeOdBunZhTRw1w" group="_SieFX61MEeOdBunZhTRw1w" node="_SieFXq1MEeOdBunZhTRw1w _SieFX61MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SieFWq1MEeOdBunZhTRw1w" name="" type="_SieFTq1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFW61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFXK1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFXa1MEeOdBunZhTRw1w" source="_SieFZa1MEeOdBunZhTRw1w" target="_SieFXq1MEeOdBunZhTRw1w"/>
          <structuredNode xmi:id="_SieFX61MEeOdBunZhTRw1w" name="Body(Employee$method$1)">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieFYK1MEeOdBunZhTRw1w" name="Body" incoming="_SieFi61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SieFYa1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SieFYq1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SieFia1MEeOdBunZhTRw1w" type="_SieFTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFY61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFZK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SieFZa1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SieFXa1MEeOdBunZhTRw1w _SieFiq1MEeOdBunZhTRw1w _SieFjK1MEeOdBunZhTRw1w" incoming="_SieFia1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SieFZq1MEeOdBunZhTRw1w" name="Call(Employee$initialization$1)" outgoing="_SieFi61MEeOdBunZhTRw1w" incoming="_SieFkq1MEeOdBunZhTRw1w" operation="_SieF3q1MEeOdBunZhTRw1w">
              <target xmi:id="_SieFZ61MEeOdBunZhTRw1w" name="Call(Employee$initialization$1).target" incoming="_SieFiq1MEeOdBunZhTRw1w" type="_SieFTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFaK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFaa1MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SieFaq1MEeOdBunZhTRw1w" name="Read(Employee$initializationFlag$1)" structuralFeature="_SieFUK1MEeOdBunZhTRw1w">
              <object xmi:id="_SieFa61MEeOdBunZhTRw1w" name="Read(Employee$initializationFlag$1).object" incoming="_SieFjK1MEeOdBunZhTRw1w" type="_SieFTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFbK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFba1MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SieFbq1MEeOdBunZhTRw1w" name="Read(Employee$initializationFlag$1).result" outgoing="_SieFja1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFb61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFcK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieFca1MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SieFcq1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SieFja1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFc61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFdK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SieFda1MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SieFjq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFdq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFd61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieFeK1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SieFea1MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SieFj61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFeq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFe61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SieFfK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SieFfa1MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SieFfq1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SieFjq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFf61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFgK1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SieFga1MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SieFka1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFgq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFg61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SieFhK1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SieFj61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFha1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFhq1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SieFh61MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SieFkK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SieFiK1MEeOdBunZhTRw1w" name="Decision(Test(Employee$initializationFlag$1))" outgoing="_SieFkq1MEeOdBunZhTRw1w" incoming="_SieFkK1MEeOdBunZhTRw1w _SieFka1MEeOdBunZhTRw1w" decisionInputFlow="_SieFka1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFia1MEeOdBunZhTRw1w" source="_SieFYq1MEeOdBunZhTRw1w" target="_SieFZa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFiq1MEeOdBunZhTRw1w" source="_SieFZa1MEeOdBunZhTRw1w" target="_SieFZ61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieFi61MEeOdBunZhTRw1w" source="_SieFZq1MEeOdBunZhTRw1w" target="_SieFYK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFjK1MEeOdBunZhTRw1w" source="_SieFZa1MEeOdBunZhTRw1w" target="_SieFa61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFja1MEeOdBunZhTRw1w" source="_SieFbq1MEeOdBunZhTRw1w" target="_SieFcq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFjq1MEeOdBunZhTRw1w" source="_SieFda1MEeOdBunZhTRw1w" target="_SieFfq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFj61MEeOdBunZhTRw1w" source="_SieFea1MEeOdBunZhTRw1w" target="_SieFhK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieFkK1MEeOdBunZhTRw1w" source="_SieFh61MEeOdBunZhTRw1w" target="_SieFiK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFka1MEeOdBunZhTRw1w" source="_SieFga1MEeOdBunZhTRw1w" target="_SieFiK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieFkq1MEeOdBunZhTRw1w" source="_SieFiK1MEeOdBunZhTRw1w" target="_SieFZq1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieFk61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SieFXq1MEeOdBunZhTRw1w" name="Return" incoming="_SieFXa1MEeOdBunZhTRw1w" parameter="_SieFWq1MEeOdBunZhTRw1w"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieFlK1MEeOdBunZhTRw1w" name="destroy$method$1" specification="_SieF461MEeOdBunZhTRw1w" group="_SieFla1MEeOdBunZhTRw1w" node="_SieFla1MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SieFla1MEeOdBunZhTRw1w" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SieFlq1MEeOdBunZhTRw1w" name="Employee$initialization$1" specification="_SieF3q1MEeOdBunZhTRw1w" group="_SieFl61MEeOdBunZhTRw1w" node="_SieFl61MEeOdBunZhTRw1w">
          <structuredNode xmi:id="_SieFl61MEeOdBunZhTRw1w" name="Body(Employee$initialization$1)">
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SieFmK1MEeOdBunZhTRw1w" name="ReadSelf">
              <result xmi:id="_SieFma1MEeOdBunZhTRw1w" name="ReadSelf.result" outgoing="_SieF061MEeOdBunZhTRw1w" type="_SieFTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFmq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFm61MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SieFnK1MEeOdBunZhTRw1w" name="Fork(ReadSelf.result)" outgoing="_SieF1K1MEeOdBunZhTRw1w _SieF1a1MEeOdBunZhTRw1w _SieF1q1MEeOdBunZhTRw1w" incoming="_SieF061MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieFna1MEeOdBunZhTRw1w" name="Initialization" incoming="_SieF3K1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallOperationAction" xmi:id="_SieFnq1MEeOdBunZhTRw1w" name="Call(Person$initialization$1)" outgoing="_SieFs61MEeOdBunZhTRw1w" operation="_SieFSK1MEeOdBunZhTRw1w">
                <target xmi:id="_SieFn61MEeOdBunZhTRw1w" name="Call(Person$initialization$1).target" incoming="_SieF1K1MEeOdBunZhTRw1w" type="_SieExa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFoK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFoa1MEeOdBunZhTRw1w" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieFoq1MEeOdBunZhTRw1w" name="Set(initializationFlag)" incoming="_SieFs61MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieFo61MEeOdBunZhTRw1w" name="Value(true)">
                  <result xmi:id="_SieFpK1MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_SieFsq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFpa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFpq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SieFp61MEeOdBunZhTRw1w" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SieFqK1MEeOdBunZhTRw1w" name="Write(Employee$initializationFlag$1)" structuralFeature="_SieFUK1MEeOdBunZhTRw1w" isReplaceAll="true">
                  <object xmi:id="_SieFqa1MEeOdBunZhTRw1w" name="Write(Employee$initializationFlag$1).object" incoming="_SieF1a1MEeOdBunZhTRw1w" type="_SieFTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFqq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFq61MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SieFrK1MEeOdBunZhTRw1w" name="Write(Employee$initializationFlag$1).result" type="_SieFTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFra1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFrq1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:id="_SieFr61MEeOdBunZhTRw1w" name="Write(Employee$initializationFlag$1).value" incoming="_SieFsq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFsK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFsa1MEeOdBunZhTRw1w" value="1"/>
                  </value>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SieFsq1MEeOdBunZhTRw1w" source="_SieFpK1MEeOdBunZhTRw1w" target="_SieFr61MEeOdBunZhTRw1w"/>
              </node>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SieFs61MEeOdBunZhTRw1w" source="_SieFnq1MEeOdBunZhTRw1w" target="_SieFoq1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SieFtK1MEeOdBunZhTRw1w" name="Read(Employee$initializationFlag$1)" structuralFeature="_SieFUK1MEeOdBunZhTRw1w">
              <object xmi:id="_SieFta1MEeOdBunZhTRw1w" name="Read(Employee$initializationFlag$1).object" incoming="_SieF1q1MEeOdBunZhTRw1w" type="_SieFTq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFtq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFt61MEeOdBunZhTRw1w" value="1"/>
              </object>
              <result xmi:id="_SieFuK1MEeOdBunZhTRw1w" name="Read(Employee$initializationFlag$1).result" outgoing="_SieF161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFua1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFuq1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieFu61MEeOdBunZhTRw1w" name="Call(ListSize)">
              <argument xmi:id="_SieFvK1MEeOdBunZhTRw1w" name="Call(ListSize).argument(list)" incoming="_SieF161MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFva1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFvq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SieFv61MEeOdBunZhTRw1w" name="Call(ListSize).result(result)" outgoing="_SieF2K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFwK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFwa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieFwq1MEeOdBunZhTRw1w" name="Value(0)">
              <result xmi:id="_SieFw61MEeOdBunZhTRw1w" name="Value(0).result" outgoing="_SieF2a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFxK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFxa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SieFxq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SieFx61MEeOdBunZhTRw1w" name="Test(Size==0)">
              <first xmi:id="_SieFyK1MEeOdBunZhTRw1w" name="Test(Size==0).first" incoming="_SieF2K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFya1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFyq1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SieFy61MEeOdBunZhTRw1w" name="Test(Size==0).result" outgoing="_SieF261MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFzK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieFza1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SieFzq1MEeOdBunZhTRw1w" name="Test(Size==0).second" incoming="_SieF2a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieFz61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieF0K1MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SieF0a1MEeOdBunZhTRw1w" name="InitialNode" outgoing="_SieF2q1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SieF0q1MEeOdBunZhTRw1w" name="Decision(Test(Employee$initializationFlag$1))" outgoing="_SieF3K1MEeOdBunZhTRw1w" incoming="_SieF2q1MEeOdBunZhTRw1w _SieF261MEeOdBunZhTRw1w" decisionInputFlow="_SieF261MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF061MEeOdBunZhTRw1w" source="_SieFma1MEeOdBunZhTRw1w" target="_SieFnK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF1K1MEeOdBunZhTRw1w" source="_SieFnK1MEeOdBunZhTRw1w" target="_SieFn61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF1a1MEeOdBunZhTRw1w" source="_SieFnK1MEeOdBunZhTRw1w" target="_SieFqa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF1q1MEeOdBunZhTRw1w" source="_SieFnK1MEeOdBunZhTRw1w" target="_SieFta1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF161MEeOdBunZhTRw1w" source="_SieFuK1MEeOdBunZhTRw1w" target="_SieFvK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF2K1MEeOdBunZhTRw1w" source="_SieFv61MEeOdBunZhTRw1w" target="_SieFyK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF2a1MEeOdBunZhTRw1w" source="_SieFw61MEeOdBunZhTRw1w" target="_SieFzq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieF2q1MEeOdBunZhTRw1w" source="_SieF0a1MEeOdBunZhTRw1w" target="_SieF0q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF261MEeOdBunZhTRw1w" source="_SieFy61MEeOdBunZhTRw1w" target="_SieF0q1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieF3K1MEeOdBunZhTRw1w" source="_SieF0q1MEeOdBunZhTRw1w" target="_SieFna1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieF3a1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
            </edge>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SieF3q1MEeOdBunZhTRw1w" name="Employee$initialization$1" visibility="protected" method="_SieFlq1MEeOdBunZhTRw1w"/>
        <ownedOperation xmi:id="_SieF361MEeOdBunZhTRw1w" name="Employee" visibility="package" method="_SieFWa1MEeOdBunZhTRw1w">
          <ownedParameter xmi:id="_SieF4K1MEeOdBunZhTRw1w" name="" visibility="package" type="_SieFTq1MEeOdBunZhTRw1w" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieF4a1MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieF4q1MEeOdBunZhTRw1w" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SieF461MEeOdBunZhTRw1w" name="destroy" visibility="package" method="_SieFlK1MEeOdBunZhTRw1w" redefinedOperation="_SieFTa1MEeOdBunZhTRw1w"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SieF5K1MEeOdBunZhTRw1w" name="AssertEqual" group="_SieGA61MEeOdBunZhTRw1w" node="_SieF_a1MEeOdBunZhTRw1w _SieF_q1MEeOdBunZhTRw1w _SieF_61MEeOdBunZhTRw1w _SieGAK1MEeOdBunZhTRw1w _SieGAa1MEeOdBunZhTRw1w _SieGAq1MEeOdBunZhTRw1w _SieGA61MEeOdBunZhTRw1w">
      <packageImport xmi:id="_SieF5a1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SieF5q1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SieF561MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SieF6K1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SieF6a1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SieF6q1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieF661MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieF7K1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SieF7a1MEeOdBunZhTRw1w" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieF7q1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieF761MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SieF8K1MEeOdBunZhTRw1w" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieF8a1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieF8q1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF861MEeOdBunZhTRw1w" source="_SieF_a1MEeOdBunZhTRw1w" target="_SieF_q1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF9K1MEeOdBunZhTRw1w" source="_SieF_61MEeOdBunZhTRw1w" target="_SieGAK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF9a1MEeOdBunZhTRw1w" source="_SieGAa1MEeOdBunZhTRw1w" target="_SieGAq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF9q1MEeOdBunZhTRw1w" source="_SieGAK1MEeOdBunZhTRw1w" target="_SieGD61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF961MEeOdBunZhTRw1w" source="_SieGAq1MEeOdBunZhTRw1w" target="_SieGF61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF-K1MEeOdBunZhTRw1w" source="_SieF_q1MEeOdBunZhTRw1w" target="_SieGSa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF-a1MEeOdBunZhTRw1w" source="_SieGAq1MEeOdBunZhTRw1w" target="_SieGaq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF-q1MEeOdBunZhTRw1w" source="_SieGAq1MEeOdBunZhTRw1w" target="_SieGfK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF-61MEeOdBunZhTRw1w" source="_SieGAq1MEeOdBunZhTRw1w" target="_SieGmq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieF_K1MEeOdBunZhTRw1w" source="_SieGAq1MEeOdBunZhTRw1w" target="_SieGvq1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_SieGA61MEeOdBunZhTRw1w" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_SieGBK1MEeOdBunZhTRw1w" name="IfStatement@79ba035a">
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SieGBa1MEeOdBunZhTRw1w" name="Test(==)" incoming="_SieG_a1MEeOdBunZhTRw1w">
            <first xmi:id="_SieGBq1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_SieG9K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGB61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGCK1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_SieGCa1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_SieHB61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGCq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGC61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_SieGDK1MEeOdBunZhTRw1w" name="Test(==).second" incoming="_SieG9q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGDa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGDq1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SieGD61MEeOdBunZhTRw1w" name="Fork(Fork(value1))" outgoing="_SieG9K1MEeOdBunZhTRw1w _SieG9a1MEeOdBunZhTRw1w" incoming="_SieF9q1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieGEK1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_SieGEa1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SieG9a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGEq1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGE61MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SieGFK1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_SieG-K1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGFa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGFq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SieGF61MEeOdBunZhTRw1w" name="Fork(Fork(value2))" outgoing="_SieG9q1MEeOdBunZhTRw1w _SieG961MEeOdBunZhTRw1w" incoming="_SieF961MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieGGK1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_SieGGa1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SieG961MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGGq1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGG61MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_SieGHK1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_SieG-a1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGHa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGHq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SieGH61MEeOdBunZhTRw1w" name="Initial(Test(==))" outgoing="_SieHAa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SieGIK1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_SieG-q1MEeOdBunZhTRw1w _SieHAq1MEeOdBunZhTRw1w" incoming="_SieG-K1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SieGIa1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_SieG-61MEeOdBunZhTRw1w _SieG_K1MEeOdBunZhTRw1w" incoming="_SieG-a1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieGIq1MEeOdBunZhTRw1w" name="Call(Not)" incoming="_SieG_61MEeOdBunZhTRw1w">
            <argument xmi:id="_SieGI61MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SieG-q1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGJK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGJa1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_SieGJq1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_SieHCK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGJ61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGKK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieGKa1MEeOdBunZhTRw1w" name="Call(Not)" incoming="_SieHBa1MEeOdBunZhTRw1w">
            <argument xmi:id="_SieGKq1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SieG-61MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGK61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGLK1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_SieGLa1MEeOdBunZhTRw1w" name="Call(Not).result(result)" outgoing="_SieHCa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGLq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGL61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_SieGMK1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_SieG_a1MEeOdBunZhTRw1w _SieG_61MEeOdBunZhTRw1w" incoming="_SieG_K1MEeOdBunZhTRw1w _SieHA61MEeOdBunZhTRw1w" decisionInputFlow="_SieG_K1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SieGMa1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_SieHA61MEeOdBunZhTRw1w _SieHBa1MEeOdBunZhTRw1w" incoming="_SieHAa1MEeOdBunZhTRw1w _SieHAq1MEeOdBunZhTRw1w" decisionInputFlow="_SieHAq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:MergeNode" xmi:id="_SieGMq1MEeOdBunZhTRw1w" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" outgoing="_SieHCq1MEeOdBunZhTRw1w" incoming="_SieHB61MEeOdBunZhTRw1w _SieHCK1MEeOdBunZhTRw1w _SieHCa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieGM61MEeOdBunZhTRw1w" name="Call(Not)">
            <argument xmi:id="_SieGNK1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SieHCq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGNa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGNq1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_SieGN61MEeOdBunZhTRw1w" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGOK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGOa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieGOq1MEeOdBunZhTRw1w" name="ExpressionStatement@78fa90f0" outgoing="_SieHC61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieGO61MEeOdBunZhTRw1w" name="Call(Write)" incoming="_SieGYq1MEeOdBunZhTRw1w" behavior="_SiesWq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SieGPK1MEeOdBunZhTRw1w" name="Call(Write).argument(value)" incoming="_SieGYa1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGPa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGPq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieGP61MEeOdBunZhTRw1w" name="Tuple@72916b9a" outgoing="_SieGYq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieGQK1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_SieGQa1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;).result" outgoing="_SieGXq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGQq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGQ61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SieGRK1MEeOdBunZhTRw1w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieGRa1MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_SieGRq1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SieGXq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGR61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGSK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SieGSa1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SieF-K1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGSq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGS61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SieGTK1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SieGX61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGTa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGTq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieGT61MEeOdBunZhTRw1w" name="Value(&quot;==&quot;)">
                <result xmi:id="_SieGUK1MEeOdBunZhTRw1w" name="Value(&quot;==&quot;).result" outgoing="_SieGYK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGUa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGUq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SieGU61MEeOdBunZhTRw1w" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieGVK1MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_SieGVa1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SieGX61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGVq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGV61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_SieGWK1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SieGYK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGWa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGWq1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SieGW61MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SieGYa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGXK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGXa1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGXq1MEeOdBunZhTRw1w" source="_SieGQa1MEeOdBunZhTRw1w" target="_SieGRq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGX61MEeOdBunZhTRw1w" source="_SieGTK1MEeOdBunZhTRw1w" target="_SieGVa1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGYK1MEeOdBunZhTRw1w" source="_SieGUK1MEeOdBunZhTRw1w" target="_SieGWK1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGYa1MEeOdBunZhTRw1w" source="_SieGW61MEeOdBunZhTRw1w" target="_SieGPK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieGYq1MEeOdBunZhTRw1w" source="_SieGP61MEeOdBunZhTRw1w" target="_SieGO61MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieGY61MEeOdBunZhTRw1w" name="ExpressionStatement@2d9b007e" outgoing="_SieHDK1MEeOdBunZhTRw1w" incoming="_SieHC61MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieGZK1MEeOdBunZhTRw1w" name="Call(Write)" incoming="_SieG3q1MEeOdBunZhTRw1w" behavior="_SiesWq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SieGZa1MEeOdBunZhTRw1w" name="Call(Write).argument(value)" incoming="_SieG3a1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGZq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGZ61MEeOdBunZhTRw1w" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieGaK1MEeOdBunZhTRw1w" name="Tuple@42b9cff8" outgoing="_SieG3q1MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieGaa1MEeOdBunZhTRw1w" name="Call(IsEmpty)">
                <argument xmi:id="_SieGaq1MEeOdBunZhTRw1w" name="Call(IsEmpty).argument(seq)" incoming="_SieF-a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGa61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGbK1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_SieGba1MEeOdBunZhTRw1w" name="Call(IsEmpty).result()" outgoing="_SieG1q1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGbq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGb61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieGcK1MEeOdBunZhTRw1w" name="ConditionalTestExpression@2d8ec33.operand2" incoming="_SieG161MEeOdBunZhTRw1w">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieGca1MEeOdBunZhTRw1w" name="Value(&quot;null&quot;)">
                  <result xmi:id="_SieGcq1MEeOdBunZhTRw1w" name="Value(&quot;null&quot;).result" outgoing="_SieGea1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGc61MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGdK1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SieGda1MEeOdBunZhTRw1w" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <structuredNodeOutput xmi:id="_SieGdq1MEeOdBunZhTRw1w" name="ConditionalTestExpression@2d8ec33.operand2.result" outgoing="_SieG261MEeOdBunZhTRw1w" incoming="_SieGea1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGd61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGeK1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGea1MEeOdBunZhTRw1w" source="_SieGcq1MEeOdBunZhTRw1w" target="_SieGdq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieGeq1MEeOdBunZhTRw1w" name="ConditionalTestExpression@2d8ec33.operand3" incoming="_SieG2a1MEeOdBunZhTRw1w">
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SieGe61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_SieGfK1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).object" incoming="_SieF-q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGfa1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGfq1MEeOdBunZhTRw1w" value="1"/>
                  </object>
                  <result xmi:id="_SieGf61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).result" outgoing="_SieGyq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGgK1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGga1MEeOdBunZhTRw1w" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieGgq1MEeOdBunZhTRw1w" name="ConditionalTestExpression@62f07974.operand2" incoming="_SieGy61MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieGg61MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SieGhK1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;).result" outgoing="_SieGuK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGha1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGhq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SieGh61MEeOdBunZhTRw1w" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_SieGiK1MEeOdBunZhTRw1w" name="CastExpression@50ce82a6" mode="parallel" outputElement="_SieGm61MEeOdBunZhTRw1w" inputElement="_SieGmq1MEeOdBunZhTRw1w">
                    <node xmi:type="uml:MergeNode" xmi:id="_SieGia1MEeOdBunZhTRw1w" name="Merge(CastExpression@50ce82a6.operand)" outgoing="_SieGma1MEeOdBunZhTRw1w" incoming="_SieGlq1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SieGiq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_SieGi61MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).object" incoming="_SieGk61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGjK1MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGja1MEeOdBunZhTRw1w" value="1"/>
                      </object>
                      <result xmi:id="_SieGjq1MEeOdBunZhTRw1w" name="ReadIsClassifiedObject(String).result" outgoing="_SieGla1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGj61MEeOdBunZhTRw1w" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGkK1MEeOdBunZhTRw1w" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SieGka1MEeOdBunZhTRw1w" name="Fork(ReadIsClassifiedObject(String).object)" outgoing="_SieGk61MEeOdBunZhTRw1w _SieGlK1MEeOdBunZhTRw1w" incoming="_SieGmK1MEeOdBunZhTRw1w"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_SieGkq1MEeOdBunZhTRw1w" name="Decision(ReadIsClassifiedObject(String).result)" outgoing="_SieGlq1MEeOdBunZhTRw1w" incoming="_SieGlK1MEeOdBunZhTRw1w _SieGla1MEeOdBunZhTRw1w" decisionInputFlow="_SieGla1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGk61MEeOdBunZhTRw1w" source="_SieGka1MEeOdBunZhTRw1w" target="_SieGi61MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGlK1MEeOdBunZhTRw1w" source="_SieGka1MEeOdBunZhTRw1w" target="_SieGkq1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGla1MEeOdBunZhTRw1w" source="_SieGjq1MEeOdBunZhTRw1w" target="_SieGkq1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGlq1MEeOdBunZhTRw1w" source="_SieGkq1MEeOdBunZhTRw1w" target="_SieGia1MEeOdBunZhTRw1w">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieGl61MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGmK1MEeOdBunZhTRw1w" source="_SieGmq1MEeOdBunZhTRw1w" target="_SieGka1MEeOdBunZhTRw1w"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGma1MEeOdBunZhTRw1w" source="_SieGia1MEeOdBunZhTRw1w" target="_SieGm61MEeOdBunZhTRw1w"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SieGmq1MEeOdBunZhTRw1w" name="CastExpression@50ce82a6.inputElement" outgoing="_SieGmK1MEeOdBunZhTRw1w" incoming="_SieF-61MEeOdBunZhTRw1w" regionAsInput="_SieGiK1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SieGm61MEeOdBunZhTRw1w" name="CastExpression@50ce82a6.outputElement" outgoing="_SieGua1MEeOdBunZhTRw1w" incoming="_SieGma1MEeOdBunZhTRw1w" regionAsOutput="_SieGiK1MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieGnK1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_SieGna1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SieGuK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGnq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGn61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_SieGoK1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SieGua1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGoa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGoq1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SieGo61MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SieGuq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGpK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGpa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieGpq1MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SieGp61MEeOdBunZhTRw1w" name="Value(&quot;&quot;&quot;).result" outgoing="_SieGu61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGqK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGqa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SieGqq1MEeOdBunZhTRw1w" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieGq61MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_SieGrK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SieGuq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGra1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGrq1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_SieGr61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SieGu61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGsK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGsa1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SieGsq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SieGvK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGs61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGtK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <structuredNodeOutput xmi:id="_SieGta1MEeOdBunZhTRw1w" name="ConditionalTestExpression@62f07974.operand2.result" outgoing="_SieGz61MEeOdBunZhTRw1w" incoming="_SieGvK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGtq1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGt61MEeOdBunZhTRw1w" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGuK1MEeOdBunZhTRw1w" source="_SieGhK1MEeOdBunZhTRw1w" target="_SieGna1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGua1MEeOdBunZhTRw1w" source="_SieGm61MEeOdBunZhTRw1w" target="_SieGoK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGuq1MEeOdBunZhTRw1w" source="_SieGo61MEeOdBunZhTRw1w" target="_SieGrK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGu61MEeOdBunZhTRw1w" source="_SieGp61MEeOdBunZhTRw1w" target="_SieGr61MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGvK1MEeOdBunZhTRw1w" source="_SieGsq1MEeOdBunZhTRw1w" target="_SieGta1MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieGva1MEeOdBunZhTRw1w" name="ConditionalTestExpression@62f07974.operand3" incoming="_SieGza1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:MergeNode" xmi:id="_SieGvq1MEeOdBunZhTRw1w" name="Merge(Fork(value2))" outgoing="_SieGwq1MEeOdBunZhTRw1w" incoming="_SieF_K1MEeOdBunZhTRw1w"/>
                  <structuredNodeOutput xmi:id="_SieGv61MEeOdBunZhTRw1w" name="ConditionalTestExpression@62f07974.operand3.result" outgoing="_SieG0K1MEeOdBunZhTRw1w" incoming="_SieGwq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGwK1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGwa1MEeOdBunZhTRw1w" value="*"/>
                  </structuredNodeOutput>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGwq1MEeOdBunZhTRw1w" source="_SieGvq1MEeOdBunZhTRw1w" target="_SieGv61MEeOdBunZhTRw1w"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_SieGw61MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@62f07974)" outgoing="_SieGya1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SieGxK1MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@62f07974)" outgoing="_SieGy61MEeOdBunZhTRw1w _SieGza1MEeOdBunZhTRw1w" incoming="_SieGya1MEeOdBunZhTRw1w _SieGyq1MEeOdBunZhTRw1w" decisionInputFlow="_SieGyq1MEeOdBunZhTRw1w"/>
                <node xmi:type="uml:MergeNode" xmi:id="_SieGxa1MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@62f07974.result)" outgoing="_SieG0a1MEeOdBunZhTRw1w" incoming="_SieGz61MEeOdBunZhTRw1w _SieG0K1MEeOdBunZhTRw1w"/>
                <structuredNodeOutput xmi:id="_SieGxq1MEeOdBunZhTRw1w" name="ConditionalTestExpression@2d8ec33.operand3.result" outgoing="_SieG3K1MEeOdBunZhTRw1w" incoming="_SieG0a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieGx61MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieGyK1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SieGya1MEeOdBunZhTRw1w" source="_SieGw61MEeOdBunZhTRw1w" target="_SieGxK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGyq1MEeOdBunZhTRw1w" source="_SieGf61MEeOdBunZhTRw1w" target="_SieGxK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SieGy61MEeOdBunZhTRw1w" source="_SieGxK1MEeOdBunZhTRw1w" target="_SieGgq1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieGzK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SieGza1MEeOdBunZhTRw1w" source="_SieGxK1MEeOdBunZhTRw1w" target="_SieGva1MEeOdBunZhTRw1w">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieGzq1MEeOdBunZhTRw1w" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SieGz61MEeOdBunZhTRw1w" source="_SieGta1MEeOdBunZhTRw1w" target="_SieGxa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG0K1MEeOdBunZhTRw1w" source="_SieGv61MEeOdBunZhTRw1w" target="_SieGxa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG0a1MEeOdBunZhTRw1w" source="_SieGxa1MEeOdBunZhTRw1w" target="_SieGxq1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SieG0q1MEeOdBunZhTRw1w" name="Initial(ConditionalTestExpression@2d8ec33)" outgoing="_SieG1a1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SieG061MEeOdBunZhTRw1w" name="Decision(ConditionalTestExpression@2d8ec33)" outgoing="_SieG161MEeOdBunZhTRw1w _SieG2a1MEeOdBunZhTRw1w" incoming="_SieG1a1MEeOdBunZhTRw1w _SieG1q1MEeOdBunZhTRw1w" decisionInputFlow="_SieG1q1MEeOdBunZhTRw1w"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SieG1K1MEeOdBunZhTRw1w" name="Merge(ConditionalTestExpression@2d8ec33.result)" outgoing="_SieG3a1MEeOdBunZhTRw1w" incoming="_SieG261MEeOdBunZhTRw1w _SieG3K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SieG1a1MEeOdBunZhTRw1w" source="_SieG0q1MEeOdBunZhTRw1w" target="_SieG061MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG1q1MEeOdBunZhTRw1w" source="_SieGba1MEeOdBunZhTRw1w" target="_SieG061MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SieG161MEeOdBunZhTRw1w" source="_SieG061MEeOdBunZhTRw1w" target="_SieGcK1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieG2K1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SieG2a1MEeOdBunZhTRw1w" source="_SieG061MEeOdBunZhTRw1w" target="_SieGeq1MEeOdBunZhTRw1w">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieG2q1MEeOdBunZhTRw1w" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG261MEeOdBunZhTRw1w" source="_SieGdq1MEeOdBunZhTRw1w" target="_SieG1K1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG3K1MEeOdBunZhTRw1w" source="_SieGxq1MEeOdBunZhTRw1w" target="_SieG1K1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG3a1MEeOdBunZhTRw1w" source="_SieG1K1MEeOdBunZhTRw1w" target="_SieGZa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieG3q1MEeOdBunZhTRw1w" source="_SieGaK1MEeOdBunZhTRw1w" target="_SieGZK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieG361MEeOdBunZhTRw1w" name="ExpressionStatement@7be14ed6" incoming="_SieHDK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieG4K1MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_SieG7q1MEeOdBunZhTRw1w">
              <argument xmi:id="_SieG4a1MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_SieG7a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieG4q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieG461MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SieG5K1MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieG5a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieG5q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieG561MEeOdBunZhTRw1w" name="Tuple@407bfda6" outgoing="_SieG7q1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieG6K1MEeOdBunZhTRw1w" name="Value(&quot;&quot;)">
                <result xmi:id="_SieG6a1MEeOdBunZhTRw1w" name="Value(&quot;&quot;).result" outgoing="_SieG7a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieG6q1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieG661MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SieG7K1MEeOdBunZhTRw1w" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG7a1MEeOdBunZhTRw1w" source="_SieG6a1MEeOdBunZhTRw1w" target="_SieG4a1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SieG7q1MEeOdBunZhTRw1w" source="_SieG561MEeOdBunZhTRw1w" target="_SieG4K1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieG761MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_SieG8K1MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieG8a1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieG8q1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SieG861MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG9K1MEeOdBunZhTRw1w" source="_SieGD61MEeOdBunZhTRw1w" target="_SieGBq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG9a1MEeOdBunZhTRw1w" source="_SieGD61MEeOdBunZhTRw1w" target="_SieGEa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG9q1MEeOdBunZhTRw1w" source="_SieGF61MEeOdBunZhTRw1w" target="_SieGDK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG961MEeOdBunZhTRw1w" source="_SieGF61MEeOdBunZhTRw1w" target="_SieGGa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG-K1MEeOdBunZhTRw1w" source="_SieGFK1MEeOdBunZhTRw1w" target="_SieGIK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG-a1MEeOdBunZhTRw1w" source="_SieGHK1MEeOdBunZhTRw1w" target="_SieGIa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG-q1MEeOdBunZhTRw1w" source="_SieGIK1MEeOdBunZhTRw1w" target="_SieGI61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG-61MEeOdBunZhTRw1w" source="_SieGIa1MEeOdBunZhTRw1w" target="_SieGKq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieG_K1MEeOdBunZhTRw1w" source="_SieGIa1MEeOdBunZhTRw1w" target="_SieGMK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SieG_a1MEeOdBunZhTRw1w" source="_SieGMK1MEeOdBunZhTRw1w" target="_SieGBa1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieG_q1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SieG_61MEeOdBunZhTRw1w" source="_SieGMK1MEeOdBunZhTRw1w" target="_SieGIq1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieHAK1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SieHAa1MEeOdBunZhTRw1w" source="_SieGH61MEeOdBunZhTRw1w" target="_SieGMa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieHAq1MEeOdBunZhTRw1w" source="_SieGIK1MEeOdBunZhTRw1w" target="_SieGMa1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SieHA61MEeOdBunZhTRw1w" source="_SieGMa1MEeOdBunZhTRw1w" target="_SieGMK1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieHBK1MEeOdBunZhTRw1w" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SieHBa1MEeOdBunZhTRw1w" source="_SieGMa1MEeOdBunZhTRw1w" target="_SieGKa1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieHBq1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieHB61MEeOdBunZhTRw1w" source="_SieGCa1MEeOdBunZhTRw1w" target="_SieGMq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieHCK1MEeOdBunZhTRw1w" source="_SieGJq1MEeOdBunZhTRw1w" target="_SieGMq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieHCa1MEeOdBunZhTRw1w" source="_SieGLa1MEeOdBunZhTRw1w" target="_SieGMq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieHCq1MEeOdBunZhTRw1w" source="_SieGMq1MEeOdBunZhTRw1w" target="_SieGNK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SieHC61MEeOdBunZhTRw1w" source="_SieGOq1MEeOdBunZhTRw1w" target="_SieGY61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SieHDK1MEeOdBunZhTRw1w" source="_SieGY61MEeOdBunZhTRw1w" target="_SieG361MEeOdBunZhTRw1w"/>
          <clause xmi:id="_SieHDa1MEeOdBunZhTRw1w" body="_SieGOq1MEeOdBunZhTRw1w _SieGY61MEeOdBunZhTRw1w _SieG361MEeOdBunZhTRw1w" decider="_SieGN61MEeOdBunZhTRw1w" successorClause="_SieHDq1MEeOdBunZhTRw1w" test="_SieGBa1MEeOdBunZhTRw1w _SieGEK1MEeOdBunZhTRw1w _SieGGK1MEeOdBunZhTRw1w _SieGIq1MEeOdBunZhTRw1w _SieGKa1MEeOdBunZhTRw1w _SieGM61MEeOdBunZhTRw1w"/>
          <clause xmi:id="_SieHDq1MEeOdBunZhTRw1w" decider="_SieG8K1MEeOdBunZhTRw1w" predecessorClause="_SieHDa1MEeOdBunZhTRw1w" test="_SieG761MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SieF_a1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_SieF861MEeOdBunZhTRw1w" parameter="_SieF6q1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SieF_q1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_SieF-K1MEeOdBunZhTRw1w" incoming="_SieF861MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SieF_61MEeOdBunZhTRw1w" name="Input(value1)" outgoing="_SieF9K1MEeOdBunZhTRw1w" parameter="_SieF7a1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SieGAK1MEeOdBunZhTRw1w" name="Fork(value1)" outgoing="_SieF9q1MEeOdBunZhTRw1w" incoming="_SieF9K1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SieGAa1MEeOdBunZhTRw1w" name="Input(value2)" outgoing="_SieF9a1MEeOdBunZhTRw1w" parameter="_SieF8K1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SieGAq1MEeOdBunZhTRw1w" name="Fork(value2)" outgoing="_SieF961MEeOdBunZhTRw1w _SieF-a1MEeOdBunZhTRw1w _SieF-q1MEeOdBunZhTRw1w _SieF-61MEeOdBunZhTRw1w _SieF_K1MEeOdBunZhTRw1w" incoming="_SieF9a1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SieHD61MEeOdBunZhTRw1w" name="AssertFalse" group="_SieqFK1MEeOdBunZhTRw1w" node="_SieqEK1MEeOdBunZhTRw1w _SieqEa1MEeOdBunZhTRw1w _SieqEq1MEeOdBunZhTRw1w _SieqE61MEeOdBunZhTRw1w _SieqFK1MEeOdBunZhTRw1w">
      <elementImport xmi:id="_SieqAK1MEeOdBunZhTRw1w" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_SieqAa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SieqAq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SieqA61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SieqBK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SieqBa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SieqBq1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqB61MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqCK1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SieqCa1MEeOdBunZhTRw1w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqCq1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqC61MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqDK1MEeOdBunZhTRw1w" source="_SieqEK1MEeOdBunZhTRw1w" target="_SieqEa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqDa1MEeOdBunZhTRw1w" source="_SieqEq1MEeOdBunZhTRw1w" target="_SieqE61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqDq1MEeOdBunZhTRw1w" source="_SieqEa1MEeOdBunZhTRw1w" target="_SieqJ61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqD61MEeOdBunZhTRw1w" source="_SieqE61MEeOdBunZhTRw1w" target="_SieqPK1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_SieqFK1MEeOdBunZhTRw1w" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieqFa1MEeOdBunZhTRw1w" name="ExpressionStatement@4744fd29">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieqFq1MEeOdBunZhTRw1w" name="Call(AssertTrue)" incoming="_SieqU61MEeOdBunZhTRw1w" behavior="_SieqVK1MEeOdBunZhTRw1w">
            <argument xmi:id="_SieqF61MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(label)" incoming="_SieqUa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqGK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqGa1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <argument xmi:id="_SieqGq1MEeOdBunZhTRw1w" name="Call(AssertTrue).argument(condition)" incoming="_SieqUq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqG61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqHK1MEeOdBunZhTRw1w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SieqHa1MEeOdBunZhTRw1w" name="Tuple@fc2e2fa" outgoing="_SieqU61MEeOdBunZhTRw1w">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieqHq1MEeOdBunZhTRw1w" name="Value(&quot;! &quot;)">
              <result xmi:id="_SieqH61MEeOdBunZhTRw1w" name="Value(&quot;! &quot;).result" outgoing="_SieqR61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqIK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqIa1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_SieqIq1MEeOdBunZhTRw1w" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieqI61MEeOdBunZhTRw1w" name="Call(Concat)">
              <argument xmi:id="_SieqJK1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_SieqR61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqJa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqJq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SieqJ61MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SieqDq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqKK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqKa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SieqKq1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SieqUa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqK61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqLK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieqLa1MEeOdBunZhTRw1w" name="Value(false)">
              <result xmi:id="_SieqLq1MEeOdBunZhTRw1w" name="Value(false).result" outgoing="_SieqUK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqL61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqMK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_SieqMa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SieqMq1MEeOdBunZhTRw1w" name="Test(==)">
              <first xmi:id="_SieqM61MEeOdBunZhTRw1w" name="Test(==).first" incoming="_SieqSK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqNK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqNa1MEeOdBunZhTRw1w" value="1"/>
              </first>
              <result xmi:id="_SieqNq1MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_SieqS61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqN61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqOK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <second xmi:id="_SieqOa1MEeOdBunZhTRw1w" name="Test(==).second" incoming="_SieqUK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqOq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqO61MEeOdBunZhTRw1w" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SieqPK1MEeOdBunZhTRw1w" name="Fork(Fork(condition))" outgoing="_SieqSK1MEeOdBunZhTRw1w _SieqSa1MEeOdBunZhTRw1w" incoming="_SieqD61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieqPa1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
              <argument xmi:id="_SieqPq1MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SieqSa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqP61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqQK1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_SieqQa1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_SieqSq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqQq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqQ61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SieqRK1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_SieqTK1MEeOdBunZhTRw1w _SieqTa1MEeOdBunZhTRw1w" incoming="_SieqSq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:MergeNode" xmi:id="_SieqRa1MEeOdBunZhTRw1w" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_SieqUq1MEeOdBunZhTRw1w" incoming="_SieqS61MEeOdBunZhTRw1w _SieqTq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SieqRq1MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_SieqTq1MEeOdBunZhTRw1w" incoming="_SieqTK1MEeOdBunZhTRw1w _SieqTa1MEeOdBunZhTRw1w" decisionInputFlow="_SieqTa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqR61MEeOdBunZhTRw1w" source="_SieqH61MEeOdBunZhTRw1w" target="_SieqJK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqSK1MEeOdBunZhTRw1w" source="_SieqPK1MEeOdBunZhTRw1w" target="_SieqM61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqSa1MEeOdBunZhTRw1w" source="_SieqPK1MEeOdBunZhTRw1w" target="_SieqPq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqSq1MEeOdBunZhTRw1w" source="_SieqQa1MEeOdBunZhTRw1w" target="_SieqRK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqS61MEeOdBunZhTRw1w" source="_SieqNq1MEeOdBunZhTRw1w" target="_SieqRa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqTK1MEeOdBunZhTRw1w" source="_SieqRK1MEeOdBunZhTRw1w" target="_SieqRq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqTa1MEeOdBunZhTRw1w" source="_SieqRK1MEeOdBunZhTRw1w" target="_SieqRq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqTq1MEeOdBunZhTRw1w" source="_SieqRq1MEeOdBunZhTRw1w" target="_SieqRa1MEeOdBunZhTRw1w">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SieqT61MEeOdBunZhTRw1w" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqUK1MEeOdBunZhTRw1w" source="_SieqLq1MEeOdBunZhTRw1w" target="_SieqOa1MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqUa1MEeOdBunZhTRw1w" source="_SieqKq1MEeOdBunZhTRw1w" target="_SieqF61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqUq1MEeOdBunZhTRw1w" source="_SieqRa1MEeOdBunZhTRw1w" target="_SieqGq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SieqU61MEeOdBunZhTRw1w" source="_SieqHa1MEeOdBunZhTRw1w" target="_SieqFq1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SieqEK1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_SieqDK1MEeOdBunZhTRw1w" parameter="_SieqBq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SieqEa1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_SieqDq1MEeOdBunZhTRw1w" incoming="_SieqDK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SieqEq1MEeOdBunZhTRw1w" name="Input(condition)" outgoing="_SieqDa1MEeOdBunZhTRw1w" parameter="_SieqCa1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SieqE61MEeOdBunZhTRw1w" name="Fork(condition)" outgoing="_SieqD61MEeOdBunZhTRw1w" incoming="_SieqDa1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SieqVK1MEeOdBunZhTRw1w" name="AssertTrue" group="_SieqaK1MEeOdBunZhTRw1w" node="_SieqZK1MEeOdBunZhTRw1w _SieqZa1MEeOdBunZhTRw1w _SieqZq1MEeOdBunZhTRw1w _SieqZ61MEeOdBunZhTRw1w _SieqaK1MEeOdBunZhTRw1w">
      <packageImport xmi:id="_SieqVa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SieqVq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SieqV61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SieqWK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SieqWa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SieqWq1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqW61MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqXK1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SieqXa1MEeOdBunZhTRw1w" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqXq1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqX61MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqYK1MEeOdBunZhTRw1w" source="_SieqZK1MEeOdBunZhTRw1w" target="_SieqZa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqYa1MEeOdBunZhTRw1w" source="_SieqZq1MEeOdBunZhTRw1w" target="_SieqZ61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqYq1MEeOdBunZhTRw1w" source="_SieqZ61MEeOdBunZhTRw1w" target="_Sieqea1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqY61MEeOdBunZhTRw1w" source="_SieqZa1MEeOdBunZhTRw1w" target="_Sieqna1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_SieqaK1MEeOdBunZhTRw1w" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_Sieqaa1MEeOdBunZhTRw1w" name="IfStatement@34a9e9e0">
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sieqaq1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_Sieqa61MEeOdBunZhTRw1w" name="Value(true).result" outgoing="_Sieqs61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqbK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqba1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_Sieqbq1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_Sieqb61MEeOdBunZhTRw1w" name="Test(==)">
            <first xmi:id="_SieqcK1MEeOdBunZhTRw1w" name="Test(==).first" incoming="_Sieqq61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieqca1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqcq1MEeOdBunZhTRw1w" value="1"/>
            </first>
            <result xmi:id="_Sieqc61MEeOdBunZhTRw1w" name="Test(==).result" outgoing="_Sieqrq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqdK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqda1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <second xmi:id="_Sieqdq1MEeOdBunZhTRw1w" name="Test(==).second" incoming="_Sieqs61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieqd61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqeK1MEeOdBunZhTRw1w" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Sieqea1MEeOdBunZhTRw1w" name="Fork(Fork(condition))" outgoing="_Sieqq61MEeOdBunZhTRw1w _SieqrK1MEeOdBunZhTRw1w" incoming="_SieqYq1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sieqeq1MEeOdBunZhTRw1w" name="Call(NotEmpty)">
            <argument xmi:id="_Sieqe61MEeOdBunZhTRw1w" name="Call(NotEmpty).argument(seq)" incoming="_SieqrK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqfK1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqfa1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_Sieqfq1MEeOdBunZhTRw1w" name="Call(NotEmpty).result()" outgoing="_Sieqra1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieqf61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqgK1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_Sieqga1MEeOdBunZhTRw1w" name="Fork(Call(NotEmpty).result())" outgoing="_Sieqr61MEeOdBunZhTRw1w _SieqsK1MEeOdBunZhTRw1w" incoming="_Sieqra1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:MergeNode" xmi:id="_Sieqgq1MEeOdBunZhTRw1w" name="Merge(Test(==).result, Call(NotEmpty).result())" outgoing="_SieqtK1MEeOdBunZhTRw1w" incoming="_Sieqrq1MEeOdBunZhTRw1w _Sieqsa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_Sieqg61MEeOdBunZhTRw1w" name="Decision(Call(NotEmpty).result())" outgoing="_Sieqsa1MEeOdBunZhTRw1w" incoming="_Sieqr61MEeOdBunZhTRw1w _SieqsK1MEeOdBunZhTRw1w" decisionInputFlow="_SieqsK1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieqhK1MEeOdBunZhTRw1w" name="Call(Not)">
            <argument xmi:id="_Sieqha1MEeOdBunZhTRw1w" name="Call(Not).argument(x)" incoming="_SieqtK1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieqhq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqh61MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <result xmi:id="_SieqiK1MEeOdBunZhTRw1w" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieqia1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqiq1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sieqi61MEeOdBunZhTRw1w" name="ExpressionStatement@487f575">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SieqjK1MEeOdBunZhTRw1w" name="Call(WriteLine)" incoming="_Sieqpa1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sieqja1MEeOdBunZhTRw1w" name="Call(WriteLine).argument(value)" incoming="_SieqpK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieqjq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqj61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SieqkK1MEeOdBunZhTRw1w" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieqka1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqkq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sieqk61MEeOdBunZhTRw1w" name="Tuple@10ce7028" outgoing="_Sieqpa1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SieqlK1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_Sieqla1MEeOdBunZhTRw1w" name="Value(&quot;FAILED: &quot;).result" outgoing="_Sieqo61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieqlq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieql61MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SieqmK1MEeOdBunZhTRw1w" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sieqma1MEeOdBunZhTRw1w" name="Call(Concat)">
                <argument xmi:id="_Sieqmq1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_Sieqo61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieqm61MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieqnK1MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <argument xmi:id="_Sieqna1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SieqY61MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieqnq1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqn61MEeOdBunZhTRw1w" value="1"/>
                </argument>
                <result xmi:id="_SieqoK1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SieqpK1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieqoa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqoq1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqo61MEeOdBunZhTRw1w" source="_Sieqla1MEeOdBunZhTRw1w" target="_Sieqmq1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqpK1MEeOdBunZhTRw1w" source="_SieqoK1MEeOdBunZhTRw1w" target="_Sieqja1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sieqpa1MEeOdBunZhTRw1w" source="_Sieqk61MEeOdBunZhTRw1w" target="_SieqjK1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sieqpq1MEeOdBunZhTRw1w" name="Value(true)">
            <result xmi:id="_Sieqp61MEeOdBunZhTRw1w" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqqK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqqa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_Sieqqq1MEeOdBunZhTRw1w" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqq61MEeOdBunZhTRw1w" source="_Sieqea1MEeOdBunZhTRw1w" target="_SieqcK1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqrK1MEeOdBunZhTRw1w" source="_Sieqea1MEeOdBunZhTRw1w" target="_Sieqe61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqra1MEeOdBunZhTRw1w" source="_Sieqfq1MEeOdBunZhTRw1w" target="_Sieqga1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqrq1MEeOdBunZhTRw1w" source="_Sieqc61MEeOdBunZhTRw1w" target="_Sieqgq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqr61MEeOdBunZhTRw1w" source="_Sieqga1MEeOdBunZhTRw1w" target="_Sieqg61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqsK1MEeOdBunZhTRw1w" source="_Sieqga1MEeOdBunZhTRw1w" target="_Sieqg61MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqsa1MEeOdBunZhTRw1w" source="_Sieqg61MEeOdBunZhTRw1w" target="_Sieqgq1MEeOdBunZhTRw1w">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_Sieqsq1MEeOdBunZhTRw1w" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqs61MEeOdBunZhTRw1w" source="_Sieqa61MEeOdBunZhTRw1w" target="_Sieqdq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqtK1MEeOdBunZhTRw1w" source="_Sieqgq1MEeOdBunZhTRw1w" target="_Sieqha1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_Sieqta1MEeOdBunZhTRw1w" body="_Sieqi61MEeOdBunZhTRw1w" decider="_SieqiK1MEeOdBunZhTRw1w" successorClause="_Sieqtq1MEeOdBunZhTRw1w" test="_Sieqaq1MEeOdBunZhTRw1w _Sieqb61MEeOdBunZhTRw1w _Sieqeq1MEeOdBunZhTRw1w _SieqhK1MEeOdBunZhTRw1w"/>
          <clause xmi:id="_Sieqtq1MEeOdBunZhTRw1w" decider="_Sieqp61MEeOdBunZhTRw1w" predecessorClause="_Sieqta1MEeOdBunZhTRw1w" test="_Sieqpq1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SieqZK1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_SieqYK1MEeOdBunZhTRw1w" parameter="_SieqWq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SieqZa1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_SieqY61MEeOdBunZhTRw1w" incoming="_SieqYK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SieqZq1MEeOdBunZhTRw1w" name="Input(condition)" outgoing="_SieqYa1MEeOdBunZhTRw1w" parameter="_SieqXa1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SieqZ61MEeOdBunZhTRw1w" name="Fork(condition)" outgoing="_SieqYq1MEeOdBunZhTRw1w" incoming="_SieqYa1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Sieqt61MEeOdBunZhTRw1w" name="AssertList" group="_Sieq161MEeOdBunZhTRw1w" node="_Sieq0a1MEeOdBunZhTRw1w _Sieq0q1MEeOdBunZhTRw1w _Sieq061MEeOdBunZhTRw1w _Sieq1K1MEeOdBunZhTRw1w _Sieq1a1MEeOdBunZhTRw1w _Sieq1q1MEeOdBunZhTRw1w _Sieq161MEeOdBunZhTRw1w">
      <packageImport xmi:id="_SiequK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_Siequa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_Siequq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_Siequ61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SieqvK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_Sieqva1MEeOdBunZhTRw1w" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieqvq1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqv61MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SieqwK1MEeOdBunZhTRw1w" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieqwa1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqwq1MEeOdBunZhTRw1w" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Sieqw61MEeOdBunZhTRw1w" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieqxK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieqxa1MEeOdBunZhTRw1w" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqxq1MEeOdBunZhTRw1w" source="_Sieq0a1MEeOdBunZhTRw1w" target="_Sieq0q1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqx61MEeOdBunZhTRw1w" source="_Sieq061MEeOdBunZhTRw1w" target="_Sieq1K1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqyK1MEeOdBunZhTRw1w" source="_Sieq1a1MEeOdBunZhTRw1w" target="_Sieq1q1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqya1MEeOdBunZhTRw1w" source="_Sieq0q1MEeOdBunZhTRw1w" target="_Sieq6q1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqyq1MEeOdBunZhTRw1w" source="_Sieq1K1MEeOdBunZhTRw1w" target="_Sieq9K1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqy61MEeOdBunZhTRw1w" source="_Sieq1q1MEeOdBunZhTRw1w" target="_Sieq-61MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SieqzK1MEeOdBunZhTRw1w" source="_Sieq1q1MEeOdBunZhTRw1w" target="_Sier661MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqza1MEeOdBunZhTRw1w" source="_Sieq1K1MEeOdBunZhTRw1w" target="_Sier7q1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqzq1MEeOdBunZhTRw1w" source="_Sieq0q1MEeOdBunZhTRw1w" target="_Sier8a1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieqz61MEeOdBunZhTRw1w" source="_Sieq1K1MEeOdBunZhTRw1w" target="_SiesIa1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieq0K1MEeOdBunZhTRw1w" source="_Sieq1q1MEeOdBunZhTRw1w" target="_SiesKK1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_Sieq161MEeOdBunZhTRw1w" name="Body(AssertList)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sieq2K1MEeOdBunZhTRw1w" name="ExpressionStatement@33dcf43" outgoing="_SiesWa1MEeOdBunZhTRw1w">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sieq2a1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_SierBa1MEeOdBunZhTRw1w" behavior="_SieF5K1MEeOdBunZhTRw1w">
            <argument xmi:id="_Sieq2q1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_SierAq1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieq261MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieq3K1MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <argument xmi:id="_Sieq3a1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SierA61MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieq3q1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieq361MEeOdBunZhTRw1w" value="1"/>
            </argument>
            <argument xmi:id="_Sieq4K1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_SierBK1MEeOdBunZhTRw1w">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieq4a1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieq4q1MEeOdBunZhTRw1w" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sieq461MEeOdBunZhTRw1w" name="Tuple@46ae98ce" outgoing="_SierBa1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sieq5K1MEeOdBunZhTRw1w" name="Value(&quot;->size()&quot;)">
              <result xmi:id="_Sieq5a1MEeOdBunZhTRw1w" name="Value(&quot;->size()&quot;).result" outgoing="_SierAa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieq5q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieq561MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_Sieq6K1MEeOdBunZhTRw1w" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sieq6a1MEeOdBunZhTRw1w" name="Call(Concat)">
              <argument xmi:id="_Sieq6q1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_Sieqya1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieq661MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieq7K1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sieq7a1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SierAa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieq7q1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieq761MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_Sieq8K1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_SierAq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieq8a1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieq8q1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sieq861MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_Sieslq1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sieq9K1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_Sieqyq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieq9a1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieq9q1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_Sieq961MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_SierA61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieq-K1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieq-a1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sieq-q1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_Sieslq1MEeOdBunZhTRw1w">
              <argument xmi:id="_Sieq-61MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_Sieqy61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieq_K1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieq_a1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <result xmi:id="_Sieq_q1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_SierBK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieq_61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierAK1MEeOdBunZhTRw1w" value="1"/>
              </result>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SierAa1MEeOdBunZhTRw1w" source="_Sieq5a1MEeOdBunZhTRw1w" target="_Sieq7a1MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SierAq1MEeOdBunZhTRw1w" source="_Sieq8K1MEeOdBunZhTRw1w" target="_Sieq2q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SierA61MEeOdBunZhTRw1w" source="_Sieq961MEeOdBunZhTRw1w" target="_Sieq3a1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SierBK1MEeOdBunZhTRw1w" source="_Sieq_q1MEeOdBunZhTRw1w" target="_Sieq4K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SierBa1MEeOdBunZhTRw1w" source="_Sieq461MEeOdBunZhTRw1w" target="_Sieq2a1MEeOdBunZhTRw1w"/>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SierBq1MEeOdBunZhTRw1w" name="ForStatement@64f01219" incoming="_SiesWa1MEeOdBunZhTRw1w">
          <node xmi:type="uml:LoopNode" xmi:id="_SierB61MEeOdBunZhTRw1w" name="Loop(ForStatement@64f01219)" incoming="_SiesWK1MEeOdBunZhTRw1w" bodyOutput="_Sierj61MEeOdBunZhTRw1w _Sierkq1MEeOdBunZhTRw1w _Sierla1MEeOdBunZhTRw1w _Sieroq1MEeOdBunZhTRw1w _Siersa1MEeOdBunZhTRw1w _Sierva1MEeOdBunZhTRw1w" bodyPart="_SierGK1MEeOdBunZhTRw1w _SierGq1MEeOdBunZhTRw1w _Sierm61MEeOdBunZhTRw1w _Sierpa1MEeOdBunZhTRw1w _Sierqq1MEeOdBunZhTRw1w _SiertK1MEeOdBunZhTRw1w _Sierua1MEeOdBunZhTRw1w" decider="_SierFa1MEeOdBunZhTRw1w" isTestedFirst="true" test="_SierDq1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ForkNode" xmi:id="_SierCK1MEeOdBunZhTRw1w" name="Fork(ForStatement@64f01219.loopVariable(expected))" outgoing="_Sier1a1MEeOdBunZhTRw1w _Sier1q1MEeOdBunZhTRw1w" incoming="_Sierwa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SierCa1MEeOdBunZhTRw1w" name="Fork(ForStatement@64f01219.loopVariable(list))" outgoing="_Sier1K1MEeOdBunZhTRw1w _Sier161MEeOdBunZhTRw1w" incoming="_Sierwq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SierCq1MEeOdBunZhTRw1w" name="Fork(ForStatement@64f01219.loopVariable(label))" outgoing="_Sier061MEeOdBunZhTRw1w _Sier2K1MEeOdBunZhTRw1w" incoming="_Sierw61MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SierC61MEeOdBunZhTRw1w" name="Fork(ForStatement@64f01219.loopVariable(i))" outgoing="_Sierzq1MEeOdBunZhTRw1w" incoming="_SierxK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SierDK1MEeOdBunZhTRw1w" name="Fork(ForStatement@64f01219.loopVariable(counter))" outgoing="_Sierx61MEeOdBunZhTRw1w _Sier0K1MEeOdBunZhTRw1w" incoming="_Sierxa1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SierDa1MEeOdBunZhTRw1w" name="Fork(ForStatement@64f01219.loopVariable(upper))" outgoing="_SieryK1MEeOdBunZhTRw1w _Sier0q1MEeOdBunZhTRw1w" incoming="_Sierxq1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SierDq1MEeOdBunZhTRw1w" name="Call(&lt;=)">
              <argument xmi:id="_SierD61MEeOdBunZhTRw1w" name="Call(&lt;=).argument(x)" incoming="_Sierx61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierEK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierEa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SierEq1MEeOdBunZhTRw1w" name="Call(&lt;=).argument(y)" incoming="_SieryK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierE61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierFK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SierFa1MEeOdBunZhTRw1w" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierFq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierF61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SierGK1MEeOdBunZhTRw1w" name="Values(ForStatement@64f01219)" outgoing="_Sieryq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ForkNode" xmi:id="_SierGa1MEeOdBunZhTRw1w" name="Fork(i)" outgoing="_Siery61MEeOdBunZhTRw1w _SierzK1MEeOdBunZhTRw1w _Sierza1MEeOdBunZhTRw1w" incoming="_Sierya1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SierGq1MEeOdBunZhTRw1w" name="Body(ForStatement@64f01219)" incoming="_Sieryq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SierG61MEeOdBunZhTRw1w" name="ExpressionStatement@1ed8384b">
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SierHK1MEeOdBunZhTRw1w" name="Call(AssertEqual)" incoming="_Sierdq1MEeOdBunZhTRw1w" behavior="_SieF5K1MEeOdBunZhTRw1w">
                  <argument xmi:id="_SierHa1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(label)" incoming="_Sierc61MEeOdBunZhTRw1w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierHq1MEeOdBunZhTRw1w" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierH61MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_SierIK1MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value1)" incoming="_SierdK1MEeOdBunZhTRw1w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierIa1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierIq1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                  <argument xmi:id="_SierI61MEeOdBunZhTRw1w" name="Call(AssertEqual).argument(value2)" incoming="_Sierda1MEeOdBunZhTRw1w">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierJK1MEeOdBunZhTRw1w"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierJa1MEeOdBunZhTRw1w" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SierJq1MEeOdBunZhTRw1w" name="Tuple@6abf1b6e" outgoing="_Sierdq1MEeOdBunZhTRw1w">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SierJ61MEeOdBunZhTRw1w" name="Value(&quot;[&quot;)">
                    <result xmi:id="_SierKK1MEeOdBunZhTRw1w" name="Value(&quot;[&quot;).result" outgoing="_SierbK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierKa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierKq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SierK61MEeOdBunZhTRw1w" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SierLK1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_SierLa1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_Sier061MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierLq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierL61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_SierMK1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SierbK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierMa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierMq1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SierM61MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_Sierba1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierNK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierNa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SierNq1MEeOdBunZhTRw1w" name="Call(ToString)">
                    <argument xmi:id="_SierN61MEeOdBunZhTRw1w" name="Call(ToString).argument(x)" incoming="_Siery61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierOK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierOa1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SierOq1MEeOdBunZhTRw1w" name="Call(ToString).result(result)" outgoing="_Sierbq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierO61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierPK1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SierPa1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_SierPq1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_Sierba1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierP61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierQK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_SierQa1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_Sierbq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierQq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierQ61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SierRK1MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_Sierb61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierRa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierRq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SierR61MEeOdBunZhTRw1w" name="Value(&quot;]&quot;)">
                    <result xmi:id="_SierSK1MEeOdBunZhTRw1w" name="Value(&quot;]&quot;).result" outgoing="_SiercK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierSa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierSq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SierS61MEeOdBunZhTRw1w" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SierTK1MEeOdBunZhTRw1w" name="Call(Concat)">
                    <argument xmi:id="_SierTa1MEeOdBunZhTRw1w" name="Call(Concat).argument(x)" incoming="_Sierb61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierTq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierT61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <argument xmi:id="_SierUK1MEeOdBunZhTRw1w" name="Call(Concat).argument(y)" incoming="_SiercK1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierUa1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierUq1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SierU61MEeOdBunZhTRw1w" name="Call(Concat).result(result)" outgoing="_Sierc61MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierVK1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierVa1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SierVq1MEeOdBunZhTRw1w" name="Call(At)">
                    <argument xmi:id="_SierV61MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_Sier1K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierWK1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierWa1MEeOdBunZhTRw1w" value="*"/>
                    </argument>
                    <argument xmi:id="_SierWq1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_Sierca1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierW61MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierXK1MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SierXa1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_SierdK1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierXq1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierX61MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SierYK1MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_Sierca1MEeOdBunZhTRw1w" incoming="_SierzK1MEeOdBunZhTRw1w"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SierYa1MEeOdBunZhTRw1w" name="Call(At)">
                    <argument xmi:id="_SierYq1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_Sier1a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierY61MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierZK1MEeOdBunZhTRw1w" value="*"/>
                    </argument>
                    <argument xmi:id="_SierZa1MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_Siercq1MEeOdBunZhTRw1w">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierZq1MEeOdBunZhTRw1w" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierZ61MEeOdBunZhTRw1w" value="1"/>
                    </argument>
                    <result xmi:id="_SieraK1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_Sierda1MEeOdBunZhTRw1w">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieraa1MEeOdBunZhTRw1w"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieraq1MEeOdBunZhTRw1w" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_Siera61MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_Siercq1MEeOdBunZhTRw1w" incoming="_Sierza1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SierbK1MEeOdBunZhTRw1w" source="_SierKK1MEeOdBunZhTRw1w" target="_SierMK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierba1MEeOdBunZhTRw1w" source="_SierM61MEeOdBunZhTRw1w" target="_SierPq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierbq1MEeOdBunZhTRw1w" source="_SierOq1MEeOdBunZhTRw1w" target="_SierQa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierb61MEeOdBunZhTRw1w" source="_SierRK1MEeOdBunZhTRw1w" target="_SierTa1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SiercK1MEeOdBunZhTRw1w" source="_SierSK1MEeOdBunZhTRw1w" target="_SierUK1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierca1MEeOdBunZhTRw1w" source="_SierYK1MEeOdBunZhTRw1w" target="_SierWq1MEeOdBunZhTRw1w"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_Siercq1MEeOdBunZhTRw1w" source="_Siera61MEeOdBunZhTRw1w" target="_SierZa1MEeOdBunZhTRw1w"/>
                </node>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierc61MEeOdBunZhTRw1w" source="_SierU61MEeOdBunZhTRw1w" target="_SierHa1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SierdK1MEeOdBunZhTRw1w" source="_SierXa1MEeOdBunZhTRw1w" target="_SierIK1MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierda1MEeOdBunZhTRw1w" source="_SieraK1MEeOdBunZhTRw1w" target="_SierI61MEeOdBunZhTRw1w"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_Sierdq1MEeOdBunZhTRw1w" source="_SierJq1MEeOdBunZhTRw1w" target="_SierHK1MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sierd61MEeOdBunZhTRw1w" name="Passthru(Fork(expected))">
                <structuredNodeInput xmi:id="_SiereK1MEeOdBunZhTRw1w" name="Passthru(Fork(expected)).input" outgoing="_Sierfq1MEeOdBunZhTRw1w" incoming="_Sier1q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sierea1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siereq1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Siere61MEeOdBunZhTRw1w" name="Passthru(Fork(expected)).output" outgoing="_SiermK1MEeOdBunZhTRw1w" incoming="_Sierfq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierfK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sierfa1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierfq1MEeOdBunZhTRw1w" source="_SiereK1MEeOdBunZhTRw1w" target="_Siere61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sierf61MEeOdBunZhTRw1w" name="Passthru(Fork(list))">
                <structuredNodeInput xmi:id="_SiergK1MEeOdBunZhTRw1w" name="Passthru(Fork(list)).input" outgoing="_Sierhq1MEeOdBunZhTRw1w" incoming="_Sier161MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sierga1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siergq1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Sierg61MEeOdBunZhTRw1w" name="Passthru(Fork(list)).output" outgoing="_Sierma1MEeOdBunZhTRw1w" incoming="_Sierhq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierhK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sierha1MEeOdBunZhTRw1w" value="*"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierhq1MEeOdBunZhTRw1w" source="_SiergK1MEeOdBunZhTRw1w" target="_Sierg61MEeOdBunZhTRw1w"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sierh61MEeOdBunZhTRw1w" name="Passthru(Fork(label))">
                <structuredNodeInput xmi:id="_SieriK1MEeOdBunZhTRw1w" name="Passthru(Fork(label)).input" outgoing="_Sierjq1MEeOdBunZhTRw1w" incoming="_Sier2K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieria1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieriq1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_Sieri61MEeOdBunZhTRw1w" name="Passthru(Fork(label)).output" outgoing="_Siermq1MEeOdBunZhTRw1w" incoming="_Sierjq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierjK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sierja1MEeOdBunZhTRw1w" value="1"/>
                </structuredNodeOutput>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierjq1MEeOdBunZhTRw1w" source="_SieriK1MEeOdBunZhTRw1w" target="_Sieri61MEeOdBunZhTRw1w"/>
              </node>
              <structuredNodeOutput xmi:id="_Sierj61MEeOdBunZhTRw1w" name="expected" incoming="_SiermK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierkK1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sierka1MEeOdBunZhTRw1w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_Sierkq1MEeOdBunZhTRw1w" name="list" incoming="_Sierma1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sierk61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierlK1MEeOdBunZhTRw1w" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_Sierla1MEeOdBunZhTRw1w" name="label" incoming="_Siermq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sierlq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sierl61MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SiermK1MEeOdBunZhTRw1w" source="_Siere61MEeOdBunZhTRw1w" target="_Sierj61MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierma1MEeOdBunZhTRw1w" source="_Sierg61MEeOdBunZhTRw1w" target="_Sierkq1MEeOdBunZhTRw1w"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_Siermq1MEeOdBunZhTRw1w" source="_Sieri61MEeOdBunZhTRw1w" target="_Sierla1MEeOdBunZhTRw1w"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sierm61MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_SiernK1MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_Sierzq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sierna1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siernq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Siern61MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_Sierz61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SieroK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sieroa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_Sieroq1MEeOdBunZhTRw1w" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siero61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierpK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Sierpa1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_Sierpq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Sierz61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sierp61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SierqK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_Sierqa1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Sierqq1MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_Sierq61MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_Sier0K1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SierrK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sierra1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_Sierrq1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_Sier0a1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sierr61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiersK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_Siersa1MEeOdBunZhTRw1w" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siersq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siers61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiertK1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_Sierta1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Sier0a1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siertq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siert61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SieruK1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sierua1MEeOdBunZhTRw1w" name="Passthru(Passthru(upper))">
              <structuredNodeInput xmi:id="_Sieruq1MEeOdBunZhTRw1w" name="Passthru(Passthru(upper)).input" outgoing="_SierwK1MEeOdBunZhTRw1w" incoming="_Sier0q1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sieru61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiervK1MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_Sierva1MEeOdBunZhTRw1w" name="Passthru(Passthru(upper)).output" incoming="_SierwK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siervq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sierv61MEeOdBunZhTRw1w" value="1"/>
              </structuredNodeOutput>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SierwK1MEeOdBunZhTRw1w" source="_Sieruq1MEeOdBunZhTRw1w" target="_Sierva1MEeOdBunZhTRw1w"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierwa1MEeOdBunZhTRw1w" source="_Sier2a1MEeOdBunZhTRw1w" target="_SierCK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierwq1MEeOdBunZhTRw1w" source="_Sier3K1MEeOdBunZhTRw1w" target="_SierCa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierw61MEeOdBunZhTRw1w" source="_Sier361MEeOdBunZhTRw1w" target="_SierCq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SierxK1MEeOdBunZhTRw1w" source="_Sier4q1MEeOdBunZhTRw1w" target="_SierC61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierxa1MEeOdBunZhTRw1w" source="_Sier5a1MEeOdBunZhTRw1w" target="_SierDK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierxq1MEeOdBunZhTRw1w" source="_Sier6K1MEeOdBunZhTRw1w" target="_SierDa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierx61MEeOdBunZhTRw1w" source="_SierDK1MEeOdBunZhTRw1w" target="_SierD61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieryK1MEeOdBunZhTRw1w" source="_SierDa1MEeOdBunZhTRw1w" target="_SierEq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierya1MEeOdBunZhTRw1w" source="_Sier4q1MEeOdBunZhTRw1w" target="_SierGa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sieryq1MEeOdBunZhTRw1w" source="_SierGK1MEeOdBunZhTRw1w" target="_SierGq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Siery61MEeOdBunZhTRw1w" source="_SierGa1MEeOdBunZhTRw1w" target="_SierN61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SierzK1MEeOdBunZhTRw1w" source="_SierGa1MEeOdBunZhTRw1w" target="_SierYK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierza1MEeOdBunZhTRw1w" source="_SierGa1MEeOdBunZhTRw1w" target="_Siera61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierzq1MEeOdBunZhTRw1w" source="_SierC61MEeOdBunZhTRw1w" target="_SiernK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sierz61MEeOdBunZhTRw1w" source="_Sierpq1MEeOdBunZhTRw1w" target="_Siern61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sier0K1MEeOdBunZhTRw1w" source="_SierDK1MEeOdBunZhTRw1w" target="_Sierq61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sier0a1MEeOdBunZhTRw1w" source="_Sierta1MEeOdBunZhTRw1w" target="_Sierrq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sier0q1MEeOdBunZhTRw1w" source="_SierDa1MEeOdBunZhTRw1w" target="_Sieruq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sier061MEeOdBunZhTRw1w" source="_SierCq1MEeOdBunZhTRw1w" target="_SierLa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sier1K1MEeOdBunZhTRw1w" source="_SierCa1MEeOdBunZhTRw1w" target="_SierV61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sier1a1MEeOdBunZhTRw1w" source="_SierCK1MEeOdBunZhTRw1w" target="_SierYq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sier1q1MEeOdBunZhTRw1w" source="_SierCK1MEeOdBunZhTRw1w" target="_SiereK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sier161MEeOdBunZhTRw1w" source="_SierCa1MEeOdBunZhTRw1w" target="_SiergK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sier2K1MEeOdBunZhTRw1w" source="_SierCq1MEeOdBunZhTRw1w" target="_SieriK1MEeOdBunZhTRw1w"/>
            <loopVariable xmi:id="_Sier2a1MEeOdBunZhTRw1w" name="ForStatement@64f01219.loopVariable(expected)" outgoing="_Sierwa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sier2q1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sier261MEeOdBunZhTRw1w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_Sier3K1MEeOdBunZhTRw1w" name="ForStatement@64f01219.loopVariable(list)" outgoing="_Sierwq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sier3a1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sier3q1MEeOdBunZhTRw1w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_Sier361MEeOdBunZhTRw1w" name="ForStatement@64f01219.loopVariable(label)" outgoing="_Sierw61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sier4K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sier4a1MEeOdBunZhTRw1w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_Sier4q1MEeOdBunZhTRw1w" name="ForStatement@64f01219.loopVariable(i)" outgoing="_SierxK1MEeOdBunZhTRw1w _Sierya1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sier461MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sier5K1MEeOdBunZhTRw1w" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_Sier5a1MEeOdBunZhTRw1w" name="ForStatement@64f01219.loopVariable(counter)" outgoing="_Sierxa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sier5q1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sier561MEeOdBunZhTRw1w" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_Sier6K1MEeOdBunZhTRw1w" name="ForStatement@64f01219.loopVariable(upper)" outgoing="_Sierxq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sier6a1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sier6q1MEeOdBunZhTRw1w" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_Sier661MEeOdBunZhTRw1w" name="ForStatement@64f01219.loopVariableInput(expected)" incoming="_SieqzK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sier7K1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sier7a1MEeOdBunZhTRw1w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_Sier7q1MEeOdBunZhTRw1w" name="ForStatement@64f01219.loopVariableInput(list)" incoming="_Sieqza1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sier761MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sier8K1MEeOdBunZhTRw1w" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_Sier8a1MEeOdBunZhTRw1w" name="ForStatement@64f01219.loopVariableInput(label)" incoming="_Sieqzq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sier8q1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sier861MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_Sier9K1MEeOdBunZhTRw1w" name="ForStatement@64f01219.loopVariableInput(i)" incoming="_SiesV61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sier9a1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sier9q1MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_Sier961MEeOdBunZhTRw1w" name="ForStatement@64f01219.loopVariableInput(counter)" incoming="_SiesVa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sier-K1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sier-a1MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_Sier-q1MEeOdBunZhTRw1w" name="ForStatement@64f01219.loopVariableInput(upper)" incoming="_SiesVq1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sier-61MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sier_K1MEeOdBunZhTRw1w" value="1"/>
            </loopVariableInput>
            <result xmi:id="_Sier_a1MEeOdBunZhTRw1w" name="ForStatement@64f01219.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Sier_q1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sier_61MEeOdBunZhTRw1w" value="*"/>
            </result>
            <result xmi:id="_SiesAK1MEeOdBunZhTRw1w" name="ForStatement@64f01219.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesAa1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesAq1MEeOdBunZhTRw1w" value="*"/>
            </result>
            <result xmi:id="_SiesA61MEeOdBunZhTRw1w" name="ForStatement@64f01219.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesBK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesBa1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <result xmi:id="_SiesBq1MEeOdBunZhTRw1w" name="ForStatement@64f01219.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesB61MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesCK1MEeOdBunZhTRw1w" value="*"/>
            </result>
            <result xmi:id="_SiesCa1MEeOdBunZhTRw1w" name="ForStatement@64f01219.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesCq1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesC61MEeOdBunZhTRw1w" value="1"/>
            </result>
            <result xmi:id="_SiesDK1MEeOdBunZhTRw1w" name="ForStatement@64f01219.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesDa1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesDq1MEeOdBunZhTRw1w" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiesD61MEeOdBunZhTRw1w" name="LoopVariables(ForStatement@64f01219)" outgoing="_SiesWK1MEeOdBunZhTRw1w">
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiesEK1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_SiesEa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SiesVK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesEq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesE61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SiesFK1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiesFa1MEeOdBunZhTRw1w" name="Call(Min)" incoming="_SiesT61MEeOdBunZhTRw1w">
              <argument xmi:id="_SiesFq1MEeOdBunZhTRw1w" name="Call(Min).argument(x)" incoming="_SiesTa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesF61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesGK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SiesGa1MEeOdBunZhTRw1w" name="Call(Min).argument(y)" incoming="_SiesTq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesGq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesG61MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SiesHK1MEeOdBunZhTRw1w" name="Call(Min).result(result)" outgoing="_SiesUK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesHa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesHq1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiesH61MEeOdBunZhTRw1w" name="Tuple@317b032" outgoing="_SiesT61MEeOdBunZhTRw1w">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiesIK1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_Sieslq1MEeOdBunZhTRw1w">
                <argument xmi:id="_SiesIa1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_Sieqz61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesIq1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesI61MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_SiesJK1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_SiesTa1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesJa1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesJq1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiesJ61MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_Sieslq1MEeOdBunZhTRw1w">
                <argument xmi:id="_SiesKK1MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_Sieq0K1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesKa1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesKq1MEeOdBunZhTRw1w" value="*"/>
                </argument>
                <result xmi:id="_SiesK61MEeOdBunZhTRw1w" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_SiesTq1MEeOdBunZhTRw1w">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesLK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesLa1MEeOdBunZhTRw1w" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SiesLq1MEeOdBunZhTRw1w" name="Fork(Value(1).result)" outgoing="_SiesV61MEeOdBunZhTRw1w _SiesUa1MEeOdBunZhTRw1w" incoming="_SiesVK1MEeOdBunZhTRw1w"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiesL61MEeOdBunZhTRw1w" name="Call(-)">
              <argument xmi:id="_SiesMK1MEeOdBunZhTRw1w" name="Call(-).argument(x)" incoming="_SiesUK1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesMa1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesMq1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SiesM61MEeOdBunZhTRw1w" name="Call(-).argument(y)" incoming="_SiesUa1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesNK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesNa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SiesNq1MEeOdBunZhTRw1w" name="Call(-).result(result)" outgoing="_SiesUq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesN61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesOK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiesOa1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_SiesOq1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SiesU61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesO61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesPK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SiesPa1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SiesPq1MEeOdBunZhTRw1w" name="Call(+)">
              <argument xmi:id="_SiesP61MEeOdBunZhTRw1w" name="Call(+).argument(x)" incoming="_SiesUq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesQK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesQa1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <argument xmi:id="_SiesQq1MEeOdBunZhTRw1w" name="Call(+).argument(y)" incoming="_SiesU61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesQ61MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesRK1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_SiesRa1MEeOdBunZhTRw1w" name="Call(+).result(result)" outgoing="_SiesVq1MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesRq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesR61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SiesSK1MEeOdBunZhTRw1w" name="Value(1)">
              <result xmi:id="_SiesSa1MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_SiesVa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesSq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesS61MEeOdBunZhTRw1w" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SiesTK1MEeOdBunZhTRw1w" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiesTa1MEeOdBunZhTRw1w" source="_SiesJK1MEeOdBunZhTRw1w" target="_SiesFq1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiesTq1MEeOdBunZhTRw1w" source="_SiesK61MEeOdBunZhTRw1w" target="_SiesGa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SiesT61MEeOdBunZhTRw1w" source="_SiesH61MEeOdBunZhTRw1w" target="_SiesFa1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiesUK1MEeOdBunZhTRw1w" source="_SiesHK1MEeOdBunZhTRw1w" target="_SiesMK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiesUa1MEeOdBunZhTRw1w" source="_SiesLq1MEeOdBunZhTRw1w" target="_SiesM61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiesUq1MEeOdBunZhTRw1w" source="_SiesNq1MEeOdBunZhTRw1w" target="_SiesP61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SiesU61MEeOdBunZhTRw1w" source="_SiesOq1MEeOdBunZhTRw1w" target="_SiesQq1MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SiesVK1MEeOdBunZhTRw1w" source="_SiesEa1MEeOdBunZhTRw1w" target="_SiesLq1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SiesVa1MEeOdBunZhTRw1w" source="_SiesSa1MEeOdBunZhTRw1w" target="_Sier961MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SiesVq1MEeOdBunZhTRw1w" source="_SiesRa1MEeOdBunZhTRw1w" target="_Sier-q1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SiesV61MEeOdBunZhTRw1w" source="_SiesLq1MEeOdBunZhTRw1w" target="_Sier9K1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SiesWK1MEeOdBunZhTRw1w" source="_SiesD61MEeOdBunZhTRw1w" target="_SierB61MEeOdBunZhTRw1w"/>
        </node>
        <edge xmi:type="uml:ControlFlow" xmi:id="_SiesWa1MEeOdBunZhTRw1w" source="_Sieq2K1MEeOdBunZhTRw1w" target="_SierBq1MEeOdBunZhTRw1w"/>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sieq0a1MEeOdBunZhTRw1w" name="Input(label)" outgoing="_Sieqxq1MEeOdBunZhTRw1w" parameter="_Sieqva1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Sieq0q1MEeOdBunZhTRw1w" name="Fork(label)" outgoing="_Sieqya1MEeOdBunZhTRw1w _Sieqzq1MEeOdBunZhTRw1w" incoming="_Sieqxq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sieq061MEeOdBunZhTRw1w" name="Input(list)" outgoing="_Sieqx61MEeOdBunZhTRw1w" parameter="_SieqwK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Sieq1K1MEeOdBunZhTRw1w" name="Fork(list)" outgoing="_Sieqyq1MEeOdBunZhTRw1w _Sieqz61MEeOdBunZhTRw1w _Sieqza1MEeOdBunZhTRw1w" incoming="_Sieqx61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sieq1a1MEeOdBunZhTRw1w" name="Input(expected)" outgoing="_SieqyK1MEeOdBunZhTRw1w" parameter="_Sieqw61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Sieq1q1MEeOdBunZhTRw1w" name="Fork(expected)" outgoing="_Sieqy61MEeOdBunZhTRw1w _Sieq0K1MEeOdBunZhTRw1w _SieqzK1MEeOdBunZhTRw1w" incoming="_SieqyK1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SiesWq1MEeOdBunZhTRw1w" name="Write" group="_SiesZ61MEeOdBunZhTRw1w" node="_SiesZa1MEeOdBunZhTRw1w _SiesZq1MEeOdBunZhTRw1w _SiesZ61MEeOdBunZhTRw1w">
      <packageImport xmi:id="_SiesW61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SiesXK1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SiesXa1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SiesXq1MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SiesX61MEeOdBunZhTRw1w" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SiesYK1MEeOdBunZhTRw1w" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesYa1MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesYq1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SiesY61MEeOdBunZhTRw1w" source="_SiesZa1MEeOdBunZhTRw1w" target="_SiesZq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SiesZK1MEeOdBunZhTRw1w" source="_SiesZq1MEeOdBunZhTRw1w" target="_SiesdK1MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_SiesZ61MEeOdBunZhTRw1w" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SiesaK1MEeOdBunZhTRw1w" name="ExpressionStatement@6302f163">
          <node xmi:type="uml:ExpansionRegion" xmi:id="_Siesaa1MEeOdBunZhTRw1w" name="Collect(Call(write))" incoming="_Siesla1MEeOdBunZhTRw1w" mode="parallel" inputElement="_Siesea1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallOperationAction" xmi:id="_Siesaq1MEeOdBunZhTRw1w" name="Call(write)">
              <argument xmi:id="_Siesa61MEeOdBunZhTRw1w" name="Call(write).argument(value)" incoming="_Siesd61MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesbK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siesba1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_Siesbq1MEeOdBunZhTRw1w" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siesb61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiescK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_Siesca1MEeOdBunZhTRw1w" name="Call(write).target" incoming="_SieseK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siescq1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siesc61MEeOdBunZhTRw1w" value="1"/>
              </target>
            </node>
            <structuredNodeInput xmi:id="_SiesdK1MEeOdBunZhTRw1w" name="Collect(Call(write)).input(Fork(value))" outgoing="_Siesd61MEeOdBunZhTRw1w" incoming="_SiesZK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siesda1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siesdq1MEeOdBunZhTRw1w" value="1"/>
            </structuredNodeInput>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Siesd61MEeOdBunZhTRw1w" source="_SiesdK1MEeOdBunZhTRw1w" target="_Siesa61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieseK1MEeOdBunZhTRw1w" source="_Siesea1MEeOdBunZhTRw1w" target="_Siesca1MEeOdBunZhTRw1w"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_Siesea1MEeOdBunZhTRw1w" name="Collect(Call(write)).inputElement" outgoing="_SieseK1MEeOdBunZhTRw1w" incoming="_SieslK1MEeOdBunZhTRw1w" regionAsInput="_Siesaa1MEeOdBunZhTRw1w"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_Sieseq1MEeOdBunZhTRw1w" name="Feature(Call(At).result())" outgoing="_Siesla1MEeOdBunZhTRw1w">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_Siese61MEeOdBunZhTRw1w" name="Call(At)" incoming="_Sieskq1MEeOdBunZhTRw1w">
              <argument xmi:id="_SiesfK1MEeOdBunZhTRw1w" name="Call(At).argument(seq)" incoming="_SieskK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siesfa1MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siesfq1MEeOdBunZhTRw1w" value="*"/>
              </argument>
              <argument xmi:id="_Siesf61MEeOdBunZhTRw1w" name="Call(At).argument(index)" incoming="_Siesk61MEeOdBunZhTRw1w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesgK1MEeOdBunZhTRw1w" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siesga1MEeOdBunZhTRw1w" value="1"/>
              </argument>
              <result xmi:id="_Siesgq1MEeOdBunZhTRw1w" name="Call(At).result()" outgoing="_SieslK1MEeOdBunZhTRw1w">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siesg61MEeOdBunZhTRw1w"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SieshK1MEeOdBunZhTRw1w" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_Siesha1MEeOdBunZhTRw1w" name="Tuple@7529174" outgoing="_Sieskq1MEeOdBunZhTRw1w">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_Sieshq1MEeOdBunZhTRw1w" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_Siesh61MEeOdBunZhTRw1w" name="ReadExtent(StandardOutputChannel).result" outgoing="_SieskK1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesiK1MEeOdBunZhTRw1w"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siesia1MEeOdBunZhTRw1w" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_Siesiq1MEeOdBunZhTRw1w" name="Value(1)">
                <result xmi:id="_Siesi61MEeOdBunZhTRw1w" name="Value(1).result" outgoing="_Sieska1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesjK1MEeOdBunZhTRw1w" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siesja1MEeOdBunZhTRw1w" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_Siesjq1MEeOdBunZhTRw1w" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_Siesj61MEeOdBunZhTRw1w" name="Fork(Call(At).argument(index))" outgoing="_Siesk61MEeOdBunZhTRw1w" incoming="_Sieska1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SieskK1MEeOdBunZhTRw1w" source="_Siesh61MEeOdBunZhTRw1w" target="_SiesfK1MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Sieska1MEeOdBunZhTRw1w" source="_Siesi61MEeOdBunZhTRw1w" target="_Siesj61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_Sieskq1MEeOdBunZhTRw1w" source="_Siesha1MEeOdBunZhTRw1w" target="_Siese61MEeOdBunZhTRw1w"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_Siesk61MEeOdBunZhTRw1w" source="_Siesj61MEeOdBunZhTRw1w" target="_Siesf61MEeOdBunZhTRw1w"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SieslK1MEeOdBunZhTRw1w" source="_Siesgq1MEeOdBunZhTRw1w" target="_Siesea1MEeOdBunZhTRw1w"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_Siesla1MEeOdBunZhTRw1w" source="_Sieseq1MEeOdBunZhTRw1w" target="_Siesaa1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SiesZa1MEeOdBunZhTRw1w" name="Input(value)" outgoing="_SiesY61MEeOdBunZhTRw1w" parameter="_SiesYK1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SiesZq1MEeOdBunZhTRw1w" name="Fork(value)" outgoing="_SiesZK1MEeOdBunZhTRw1w" incoming="_SiesY61MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Sieslq1MEeOdBunZhTRw1w" clientDependency="_Siesta1MEeOdBunZhTRw1w" name="$$Alf$Library$CollectionFunctions$size__any__" group="_Siespa1MEeOdBunZhTRw1w" node="_Siesoa1MEeOdBunZhTRw1w _Siesoq1MEeOdBunZhTRw1w _Sieso61MEeOdBunZhTRw1w _SiespK1MEeOdBunZhTRw1w _Siespa1MEeOdBunZhTRw1w">
      <ownedParameter xmi:id="_Siesl61MEeOdBunZhTRw1w" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesmK1MEeOdBunZhTRw1w"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siesma1MEeOdBunZhTRw1w" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_Siesmq1MEeOdBunZhTRw1w" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siesm61MEeOdBunZhTRw1w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiesnK1MEeOdBunZhTRw1w" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Siesna1MEeOdBunZhTRw1w" source="_Siesoa1MEeOdBunZhTRw1w" target="_Siesoq1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_Siesnq1MEeOdBunZhTRw1w" source="_Siespq1MEeOdBunZhTRw1w" target="_SiespK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_Siesn61MEeOdBunZhTRw1w" source="_Siesoq1MEeOdBunZhTRw1w" target="_SiesqK1MEeOdBunZhTRw1w"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SiesoK1MEeOdBunZhTRw1w" source="_Siesrq1MEeOdBunZhTRw1w" target="_Sieso61MEeOdBunZhTRw1w"/>
      <structuredNode xmi:id="_Siespa1MEeOdBunZhTRw1w" name="Body(size)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_Siespq1MEeOdBunZhTRw1w" name="ReturnStatement@22536490" outgoing="_Siesnq1MEeOdBunZhTRw1w">
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_Siesp61MEeOdBunZhTRw1w" name="Call(Size)">
            <argument xmi:id="_SiesqK1MEeOdBunZhTRw1w" name="Call(Size).argument(seq)" incoming="_Siesn61MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siesqa1MEeOdBunZhTRw1w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siesqq1MEeOdBunZhTRw1w" value="*"/>
            </argument>
            <result xmi:id="_Siesq61MEeOdBunZhTRw1w" name="Call(Size).result()" outgoing="_Siessa1MEeOdBunZhTRw1w">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SiesrK1MEeOdBunZhTRw1w" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Siesra1MEeOdBunZhTRw1w" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
          </node>
          <structuredNodeOutput xmi:id="_Siesrq1MEeOdBunZhTRw1w" name="ReturnStatement@22536490.output" outgoing="_SiesoK1MEeOdBunZhTRw1w" incoming="_Siessa1MEeOdBunZhTRw1w" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Siesr61MEeOdBunZhTRw1w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SiessK1MEeOdBunZhTRw1w" value="1"/>
          </structuredNodeOutput>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_Siessa1MEeOdBunZhTRw1w" source="_Siesq61MEeOdBunZhTRw1w" target="_Siesrq1MEeOdBunZhTRw1w"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Siesoa1MEeOdBunZhTRw1w" name="Input(seq)" outgoing="_Siesna1MEeOdBunZhTRw1w" parameter="_Siesl61MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ForkNode" xmi:id="_Siesoq1MEeOdBunZhTRw1w" name="Fork(seq)" outgoing="_Siesn61MEeOdBunZhTRw1w" incoming="_Siesna1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_Sieso61MEeOdBunZhTRw1w" name="Return" incoming="_SiesoK1MEeOdBunZhTRw1w" parameter="_Siesmq1MEeOdBunZhTRw1w"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SiespK1MEeOdBunZhTRw1w" name="Final" incoming="_Siesnq1MEeOdBunZhTRw1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Siessq1MEeOdBunZhTRw1w">
      <templateBinding xmi:id="_Siess61MEeOdBunZhTRw1w">
        <parameterSubstitution xmi:id="_SiestK1MEeOdBunZhTRw1w">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmqbdYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmqbdIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_Siesta1MEeOdBunZhTRw1w" client="_Sieslq1MEeOdBunZhTRw1w" supplier="_Siessq1MEeOdBunZhTRw1w"/>
    <profileApplication xmi:id="_Siestq1MEeOdBunZhTRw1w">
      <eAnnotations xmi:id="_Siest61MEeOdBunZhTRw1w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/StandardL2.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/StandardL2.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_SiesuK1MEeOdBunZhTRw1w" base_BehavioralFeature="_SieEvK1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_Siesua1MEeOdBunZhTRw1w" base_BehavioralFeature="_SieDea1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_SiobAK1MEeOdBunZhTRw1w" base_BehavioralFeature="_SieDfa1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_SiobAa1MEeOdBunZhTRw1w" base_BehavioralFeature="_SieExK1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_SiobAq1MEeOdBunZhTRw1w" base_BehavioralFeature="_SieEJK1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_SiobA61MEeOdBunZhTRw1w" base_BehavioralFeature="_SieEIK1MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_SiobBK1MEeOdBunZhTRw1w" base_BehavioralFeature="_SieFTa1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_SiobBa1MEeOdBunZhTRw1w" base_BehavioralFeature="_SieFSa1MEeOdBunZhTRw1w"/>
  <l2:Create xmi:id="_SipCEK1MEeOdBunZhTRw1w" base_BehavioralFeature="_SieF361MEeOdBunZhTRw1w"/>
  <l2:Destroy xmi:id="_SipCEa1MEeOdBunZhTRw1w" base_BehavioralFeature="_SieF461MEeOdBunZhTRw1w"/>
</xmi:XMI>

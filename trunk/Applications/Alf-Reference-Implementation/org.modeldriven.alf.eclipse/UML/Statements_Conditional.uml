<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_ZoMaADiCEeWlpOnkGDRnCA" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_ZoMaATiCEeWlpOnkGDRnCA" name="Statements_Conditional">
      <packageImport xmi:id="_ZoMaAjiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_ZoMaAziCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_ZoMaBDiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_ZoMaBTiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_ZoMaBjiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <generalization xmi:id="_ZoMaBziCEeWlpOnkGDRnCA" general="_ZoQFGDiCEeWlpOnkGDRnCA"/>
      <ownedAttribute xmi:id="_ZoMaCDiCEeWlpOnkGDRnCA" name="Statements_Conditional$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaCTiCEeWlpOnkGDRnCA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaCjiCEeWlpOnkGDRnCA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoMaCziCEeWlpOnkGDRnCA" name="Statements_Conditional$method$1" specification="_ZoPe-TiCEeWlpOnkGDRnCA" node="_ZoMaEDiCEeWlpOnkGDRnCA _ZoMaETiCEeWlpOnkGDRnCA" group="_ZoMaETiCEeWlpOnkGDRnCA">
        <ownedParameter xmi:id="_ZoMaDDiCEeWlpOnkGDRnCA" name="" type="_ZoMaATiCEeWlpOnkGDRnCA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaDTiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaDjiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaDziCEeWlpOnkGDRnCA" target="_ZoMaEDiCEeWlpOnkGDRnCA" source="_ZoMaMDiCEeWlpOnkGDRnCA"/>
        <structuredNode xmi:id="_ZoMaETiCEeWlpOnkGDRnCA" name="Body(Statements_Conditional$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaEjiCEeWlpOnkGDRnCA" target="_ZoMaMDiCEeWlpOnkGDRnCA" source="_ZoMaLTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMaEziCEeWlpOnkGDRnCA" name="Body">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMaFDiCEeWlpOnkGDRnCA" name="ExpressionStatement@5ee4a1d5">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaFTiCEeWlpOnkGDRnCA" target="_ZoMaGTiCEeWlpOnkGDRnCA" source="_ZoMaJDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaFjiCEeWlpOnkGDRnCA" target="_ZoMaGDiCEeWlpOnkGDRnCA" source="_ZoMaIjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaFziCEeWlpOnkGDRnCA" target="_ZoMaHziCEeWlpOnkGDRnCA" source="_ZoMaKTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_ZoMaGDiCEeWlpOnkGDRnCA" name="Call(run)" incoming="_ZoMaFjiCEeWlpOnkGDRnCA" operation="_ZoPe_TiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoMaGTiCEeWlpOnkGDRnCA" name="Call(run).argument(tester)" incoming="_ZoMaFTiCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaGjiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaGziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoMaHDiCEeWlpOnkGDRnCA" name="Call(run).result()" type="_ZoMaATiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaHTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaHjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <target xmi:id="_ZoMaHziCEeWlpOnkGDRnCA" name="Call(run).target" incoming="_ZoMaFziCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaIDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaITiCEeWlpOnkGDRnCA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMaIjiCEeWlpOnkGDRnCA" name="Tuple@1cd7453c" outgoing="_ZoMaFjiCEeWlpOnkGDRnCA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoMaIziCEeWlpOnkGDRnCA" name="Value(null)">
                  <result xmi:id="_ZoMaJDiCEeWlpOnkGDRnCA" name="Value(null).result" outgoing="_ZoMaFTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaJTiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaJjiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralNull" xmi:id="_ZoMaJziCEeWlpOnkGDRnCA"/>
                </node>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoMaKDiCEeWlpOnkGDRnCA" name="ReadSelf">
                <result xmi:id="_ZoMaKTiCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoMaFziCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaKjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaKziCEeWlpOnkGDRnCA" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoMaLDiCEeWlpOnkGDRnCA" name="ReadSelf">
            <result xmi:id="_ZoMaLTiCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoMaEjiCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaLjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaLziCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoMaMDiCEeWlpOnkGDRnCA" name="Fork(ReadSelf.result)" incoming="_ZoMaEjiCEeWlpOnkGDRnCA" outgoing="_ZoMaDziCEeWlpOnkGDRnCA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoMaEDiCEeWlpOnkGDRnCA" name="Return" incoming="_ZoMaDziCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" parameter="_ZoMaDDiCEeWlpOnkGDRnCA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoMaMTiCEeWlpOnkGDRnCA" name="run$method$1" specification="_ZoPe_TiCEeWlpOnkGDRnCA" node="_ZoMaOziCEeWlpOnkGDRnCA _ZoMaPDiCEeWlpOnkGDRnCA _ZoMaPTiCEeWlpOnkGDRnCA _ZoMaPjiCEeWlpOnkGDRnCA" group="_ZoMaPjiCEeWlpOnkGDRnCA">
        <ownedParameter xmi:id="_ZoMaMjiCEeWlpOnkGDRnCA" name="tester" type="_ZoQrfTiCEeWlpOnkGDRnCA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaMziCEeWlpOnkGDRnCA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaNDiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoMaNTiCEeWlpOnkGDRnCA" name="" type="_ZoMaATiCEeWlpOnkGDRnCA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaNjiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaNziCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaODiCEeWlpOnkGDRnCA" target="_ZoMaPDiCEeWlpOnkGDRnCA" source="_ZoMaOziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaOTiCEeWlpOnkGDRnCA" target="_ZoMaPTiCEeWlpOnkGDRnCA" source="_ZoNBlDiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaOjiCEeWlpOnkGDRnCA" target="_ZoNBmDiCEeWlpOnkGDRnCA" source="_ZoMaPDiCEeWlpOnkGDRnCA"/>
        <structuredNode xmi:id="_ZoMaPjiCEeWlpOnkGDRnCA" name="Body(run$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaPziCEeWlpOnkGDRnCA" target="_ZoNBlDiCEeWlpOnkGDRnCA" source="_ZoNBkTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaQDiCEeWlpOnkGDRnCA" target="_ZoNBnziCEeWlpOnkGDRnCA" source="_ZoNBlDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaQTiCEeWlpOnkGDRnCA" target="_ZoMaSziCEeWlpOnkGDRnCA" source="_ZoNBnjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaQjiCEeWlpOnkGDRnCA" target="_ZoNBnjiCEeWlpOnkGDRnCA" source="_ZoNBlTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaQziCEeWlpOnkGDRnCA" target="_ZoNBoziCEeWlpOnkGDRnCA" source="_ZoNBlDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaRDiCEeWlpOnkGDRnCA" target="_ZoNBqjiCEeWlpOnkGDRnCA" source="_ZoNBpjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaRTiCEeWlpOnkGDRnCA" target="_ZoNBtjiCEeWlpOnkGDRnCA" source="_ZoNBrTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaRjiCEeWlpOnkGDRnCA" target="_ZoNBvDiCEeWlpOnkGDRnCA" source="_ZoNBsTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaRziCEeWlpOnkGDRnCA" target="_ZoNBwDiCEeWlpOnkGDRnCA" source="_ZoNBvziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaSDiCEeWlpOnkGDRnCA" target="_ZoNBwDiCEeWlpOnkGDRnCA" source="_ZoNBuTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaSTiCEeWlpOnkGDRnCA" target="_ZoNBlTiCEeWlpOnkGDRnCA" source="_ZoNBwDiCEeWlpOnkGDRnCA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoMaSjiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMaSziCEeWlpOnkGDRnCA" name="Body" incoming="_ZoMaQTiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaTDiCEeWlpOnkGDRnCA" target="_ZoMapTiCEeWlpOnkGDRnCA" source="_ZoMakziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaTTiCEeWlpOnkGDRnCA" target="_ZoManTiCEeWlpOnkGDRnCA" source="_ZoMaYTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaTjiCEeWlpOnkGDRnCA" target="_ZoMavjiCEeWlpOnkGDRnCA" source="_ZoMalDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaTziCEeWlpOnkGDRnCA" target="_ZoMatjiCEeWlpOnkGDRnCA" source="_ZoManTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaUDiCEeWlpOnkGDRnCA" target="_ZoMa1ziCEeWlpOnkGDRnCA" source="_ZoMalTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaUTiCEeWlpOnkGDRnCA" target="_ZoMazziCEeWlpOnkGDRnCA" source="_ZoMatjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaUjiCEeWlpOnkGDRnCA" target="_ZoMa8DiCEeWlpOnkGDRnCA" source="_ZoMaljiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaUziCEeWlpOnkGDRnCA" target="_ZoMa6DiCEeWlpOnkGDRnCA" source="_ZoMazziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaVDiCEeWlpOnkGDRnCA" target="_ZoMbCTiCEeWlpOnkGDRnCA" source="_ZoMalziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaVTiCEeWlpOnkGDRnCA" target="_ZoMbATiCEeWlpOnkGDRnCA" source="_ZoMa6DiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaVjiCEeWlpOnkGDRnCA" target="_ZoNBETiCEeWlpOnkGDRnCA" source="_ZoMamDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaVziCEeWlpOnkGDRnCA" target="_ZoMbGjiCEeWlpOnkGDRnCA" source="_ZoMbATiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaWDiCEeWlpOnkGDRnCA" target="_ZoNBKjiCEeWlpOnkGDRnCA" source="_ZoMamTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaWTiCEeWlpOnkGDRnCA" target="_ZoNBIjiCEeWlpOnkGDRnCA" source="_ZoMbGjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaWjiCEeWlpOnkGDRnCA" target="_ZoNBQziCEeWlpOnkGDRnCA" source="_ZoMamjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaWziCEeWlpOnkGDRnCA" target="_ZoNBOziCEeWlpOnkGDRnCA" source="_ZoNBIjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaXDiCEeWlpOnkGDRnCA" target="_ZoNBXDiCEeWlpOnkGDRnCA" source="_ZoMamziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaXTiCEeWlpOnkGDRnCA" target="_ZoNBVDiCEeWlpOnkGDRnCA" source="_ZoNBOziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaXjiCEeWlpOnkGDRnCA" target="_ZoNBdTiCEeWlpOnkGDRnCA" source="_ZoManDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaXziCEeWlpOnkGDRnCA" target="_ZoNBbTiCEeWlpOnkGDRnCA" source="_ZoNBVDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaYDiCEeWlpOnkGDRnCA" target="_ZoNBhjiCEeWlpOnkGDRnCA" source="_ZoNBbTiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMaYTiCEeWlpOnkGDRnCA" name="ExpressionStatement@2296575a" outgoing="_ZoMaTTiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaYjiCEeWlpOnkGDRnCA" target="_ZoMakziCEeWlpOnkGDRnCA" source="_ZoMabjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaYziCEeWlpOnkGDRnCA" target="_ZoMalDiCEeWlpOnkGDRnCA" source="_ZoMacTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaZDiCEeWlpOnkGDRnCA" target="_ZoMalTiCEeWlpOnkGDRnCA" source="_ZoMadDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaZTiCEeWlpOnkGDRnCA" target="_ZoMaljiCEeWlpOnkGDRnCA" source="_ZoMadziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaZjiCEeWlpOnkGDRnCA" target="_ZoMalziCEeWlpOnkGDRnCA" source="_ZoMaejiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaZziCEeWlpOnkGDRnCA" target="_ZoMamDiCEeWlpOnkGDRnCA" source="_ZoMafTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaaDiCEeWlpOnkGDRnCA" target="_ZoMamTiCEeWlpOnkGDRnCA" source="_ZoMagDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaaTiCEeWlpOnkGDRnCA" target="_ZoMamjiCEeWlpOnkGDRnCA" source="_ZoMagziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaajiCEeWlpOnkGDRnCA" target="_ZoMamziCEeWlpOnkGDRnCA" source="_ZoMahjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMaaziCEeWlpOnkGDRnCA" target="_ZoManDiCEeWlpOnkGDRnCA" source="_ZoMaiTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMabDiCEeWlpOnkGDRnCA" target="_ZoMajDiCEeWlpOnkGDRnCA" source="_ZoMakDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_ZoMabTiCEeWlpOnkGDRnCA" name="Call(test)" operation="_ZoPfBDiCEeWlpOnkGDRnCA">
                <result xmi:id="_ZoMabjiCEeWlpOnkGDRnCA" name="Call(test).result(reading1)" outgoing="_ZoMaYjiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMabziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMacDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <result xmi:id="_ZoMacTiCEeWlpOnkGDRnCA" name="Call(test).result(condition1)" outgoing="_ZoMaYziCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMacjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMacziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <result xmi:id="_ZoMadDiCEeWlpOnkGDRnCA" name="Call(test).result(condition2)" outgoing="_ZoMaZDiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMadTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMadjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <result xmi:id="_ZoMadziCEeWlpOnkGDRnCA" name="Call(test).result(condition3)" outgoing="_ZoMaZTiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaeDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaeTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <result xmi:id="_ZoMaejiCEeWlpOnkGDRnCA" name="Call(test).result(year)" outgoing="_ZoMaZjiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaeziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMafDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <result xmi:id="_ZoMafTiCEeWlpOnkGDRnCA" name="Call(test).result(month)" outgoing="_ZoMaZziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMafjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMafziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <result xmi:id="_ZoMagDiCEeWlpOnkGDRnCA" name="Call(test).result(numDays)" outgoing="_ZoMaaDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMagTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMagjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <result xmi:id="_ZoMagziCEeWlpOnkGDRnCA" name="Call(test).result(switch1)" outgoing="_ZoMaaTiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMahDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMahTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <result xmi:id="_ZoMahjiCEeWlpOnkGDRnCA" name="Call(test).result(switch2)" outgoing="_ZoMaajiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMahziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaiDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <result xmi:id="_ZoMaiTiCEeWlpOnkGDRnCA" name="Call(test).result(switch3)" outgoing="_ZoMaaziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaijiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaiziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <target xmi:id="_ZoMajDiCEeWlpOnkGDRnCA" name="Call(test).target" incoming="_ZoMabDiCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMajTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMajjiCEeWlpOnkGDRnCA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoMajziCEeWlpOnkGDRnCA" name="ReadSelf">
                <result xmi:id="_ZoMakDiCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoMabDiCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMakTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMakjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoMakziCEeWlpOnkGDRnCA" name="Fork(reading)@ee92548" incoming="_ZoMaYjiCEeWlpOnkGDRnCA" outgoing="_ZoMaTDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoMalDiCEeWlpOnkGDRnCA" name="Fork(condition1)@8148219" incoming="_ZoMaYziCEeWlpOnkGDRnCA" outgoing="_ZoMaTjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoMalTiCEeWlpOnkGDRnCA" name="Fork(condition2)@7a693b73" incoming="_ZoMaZDiCEeWlpOnkGDRnCA" outgoing="_ZoMaUDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoMaljiCEeWlpOnkGDRnCA" name="Fork(condition3)@12be39ce" incoming="_ZoMaZTiCEeWlpOnkGDRnCA" outgoing="_ZoMaUjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoMalziCEeWlpOnkGDRnCA" name="Fork(year)@6c50cff" incoming="_ZoMaZjiCEeWlpOnkGDRnCA" outgoing="_ZoMaVDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoMamDiCEeWlpOnkGDRnCA" name="Fork(month)@72d83cd1" incoming="_ZoMaZziCEeWlpOnkGDRnCA" outgoing="_ZoMaVjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoMamTiCEeWlpOnkGDRnCA" name="Fork(numDays)@5280f83e" incoming="_ZoMaaDiCEeWlpOnkGDRnCA" outgoing="_ZoMaWDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoMamjiCEeWlpOnkGDRnCA" name="Fork(switch1)@1129d8c3" incoming="_ZoMaaTiCEeWlpOnkGDRnCA" outgoing="_ZoMaWjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoMamziCEeWlpOnkGDRnCA" name="Fork(switch2)@5255f302" incoming="_ZoMaajiCEeWlpOnkGDRnCA" outgoing="_ZoMaXDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoManDiCEeWlpOnkGDRnCA" name="Fork(switch3)@8c53289" incoming="_ZoMaaziCEeWlpOnkGDRnCA" outgoing="_ZoMaXjiCEeWlpOnkGDRnCA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoManTiCEeWlpOnkGDRnCA" name="ExpressionStatement@577d023f" incoming="_ZoMaTTiCEeWlpOnkGDRnCA" outgoing="_ZoMaTziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoManjiCEeWlpOnkGDRnCA" target="_ZoMaojiCEeWlpOnkGDRnCA" source="_ZoMarTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoManziCEeWlpOnkGDRnCA" target="_ZoMaqDiCEeWlpOnkGDRnCA" source="_ZoMasjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMaoDiCEeWlpOnkGDRnCA" target="_ZoMaoTiCEeWlpOnkGDRnCA" source="_ZoMaqziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoMaoTiCEeWlpOnkGDRnCA" name="Call(AssertEqual)" incoming="_ZoMaoDiCEeWlpOnkGDRnCA" behavior="_ZoQsCDiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoMaojiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(label)" incoming="_ZoManjiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaoziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMapDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoMapTiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value1)" incoming="_ZoMaTDiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMapjiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMapziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoMaqDiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value2)" incoming="_ZoManziCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaqTiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMaqjiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMaqziCEeWlpOnkGDRnCA" name="Tuple@1a19a6c8" outgoing="_ZoMaoDiCEeWlpOnkGDRnCA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoMarDiCEeWlpOnkGDRnCA" name="Value(&quot;reading&quot;)">
                  <result xmi:id="_ZoMarTiCEeWlpOnkGDRnCA" name="Value(&quot;reading&quot;).result" outgoing="_ZoManjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMarjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMarziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ZoMasDiCEeWlpOnkGDRnCA" value="reading">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoMasTiCEeWlpOnkGDRnCA" name="Value(150)">
                  <result xmi:id="_ZoMasjiCEeWlpOnkGDRnCA" name="Value(150).result" outgoing="_ZoManziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMasziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMatDiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ZoMatTiCEeWlpOnkGDRnCA" value="150">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMatjiCEeWlpOnkGDRnCA" name="ExpressionStatement@3ef0726c" incoming="_ZoMaTziCEeWlpOnkGDRnCA" outgoing="_ZoMaUTiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMatziCEeWlpOnkGDRnCA" target="_ZoMauziCEeWlpOnkGDRnCA" source="_ZoMaxjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMauDiCEeWlpOnkGDRnCA" target="_ZoMawTiCEeWlpOnkGDRnCA" source="_ZoMayziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMauTiCEeWlpOnkGDRnCA" target="_ZoMaujiCEeWlpOnkGDRnCA" source="_ZoMaxDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoMaujiCEeWlpOnkGDRnCA" name="Call(AssertEqual)" incoming="_ZoMauTiCEeWlpOnkGDRnCA" behavior="_ZoQsCDiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoMauziCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(label)" incoming="_ZoMatziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMavDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMavTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoMavjiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value1)" incoming="_ZoMaTjiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMavziCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMawDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoMawTiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value2)" incoming="_ZoMauDiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMawjiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMawziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMaxDiCEeWlpOnkGDRnCA" name="Tuple@5dd10e8b" outgoing="_ZoMauTiCEeWlpOnkGDRnCA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoMaxTiCEeWlpOnkGDRnCA" name="Value(&quot;condition1&quot;)">
                  <result xmi:id="_ZoMaxjiCEeWlpOnkGDRnCA" name="Value(&quot;condition1&quot;).result" outgoing="_ZoMatziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMaxziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMayDiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ZoMayTiCEeWlpOnkGDRnCA" value="condition1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoMayjiCEeWlpOnkGDRnCA" name="Value(alert)">
                  <result xmi:id="_ZoMayziCEeWlpOnkGDRnCA" name="Value(alert).result" outgoing="_ZoMauDiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMazDiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMazTiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_ZoMazjiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" instance="_ZoQFFTiCEeWlpOnkGDRnCA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMazziCEeWlpOnkGDRnCA" name="ExpressionStatement@62f6a606" incoming="_ZoMaUTiCEeWlpOnkGDRnCA" outgoing="_ZoMaUziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMa0DiCEeWlpOnkGDRnCA" target="_ZoMa1DiCEeWlpOnkGDRnCA" source="_ZoMa3ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMa0TiCEeWlpOnkGDRnCA" target="_ZoMa2jiCEeWlpOnkGDRnCA" source="_ZoMa5DiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMa0jiCEeWlpOnkGDRnCA" target="_ZoMa0ziCEeWlpOnkGDRnCA" source="_ZoMa3TiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoMa0ziCEeWlpOnkGDRnCA" name="Call(AssertEqual)" incoming="_ZoMa0jiCEeWlpOnkGDRnCA" behavior="_ZoQsCDiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoMa1DiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(label)" incoming="_ZoMa0DiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMa1TiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMa1jiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoMa1ziCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value1)" incoming="_ZoMaUDiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMa2DiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMa2TiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoMa2jiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value2)" incoming="_ZoMa0TiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMa2ziCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMa3DiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMa3TiCEeWlpOnkGDRnCA" name="Tuple@2133944b" outgoing="_ZoMa0jiCEeWlpOnkGDRnCA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoMa3jiCEeWlpOnkGDRnCA" name="Value(&quot;condition2&quot;)">
                  <result xmi:id="_ZoMa3ziCEeWlpOnkGDRnCA" name="Value(&quot;condition2&quot;).result" outgoing="_ZoMa0DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMa4DiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMa4TiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ZoMa4jiCEeWlpOnkGDRnCA" value="condition2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoMa4ziCEeWlpOnkGDRnCA" name="Value(critical)">
                  <result xmi:id="_ZoMa5DiCEeWlpOnkGDRnCA" name="Value(critical).result" outgoing="_ZoMa0TiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMa5TiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMa5jiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_ZoMa5ziCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" instance="_ZoQFFjiCEeWlpOnkGDRnCA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMa6DiCEeWlpOnkGDRnCA" name="ExpressionStatement@3104d5eb" incoming="_ZoMaUziCEeWlpOnkGDRnCA" outgoing="_ZoMaVTiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMa6TiCEeWlpOnkGDRnCA" target="_ZoMa7TiCEeWlpOnkGDRnCA" source="_ZoMa-DiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMa6jiCEeWlpOnkGDRnCA" target="_ZoMa8ziCEeWlpOnkGDRnCA" source="_ZoMa_TiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMa6ziCEeWlpOnkGDRnCA" target="_ZoMa7DiCEeWlpOnkGDRnCA" source="_ZoMa9jiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoMa7DiCEeWlpOnkGDRnCA" name="Call(AssertEqual)" incoming="_ZoMa6ziCEeWlpOnkGDRnCA" behavior="_ZoQsCDiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoMa7TiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(label)" incoming="_ZoMa6TiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMa7jiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMa7ziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoMa8DiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value1)" incoming="_ZoMaUjiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMa8TiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMa8jiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoMa8ziCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value2)" incoming="_ZoMa6jiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMa9DiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMa9TiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMa9jiCEeWlpOnkGDRnCA" name="Tuple@f577a0b" outgoing="_ZoMa6ziCEeWlpOnkGDRnCA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoMa9ziCEeWlpOnkGDRnCA" name="Value(&quot;condition3&quot;)">
                  <result xmi:id="_ZoMa-DiCEeWlpOnkGDRnCA" name="Value(&quot;condition3&quot;).result" outgoing="_ZoMa6TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMa-TiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMa-jiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ZoMa-ziCEeWlpOnkGDRnCA" value="condition3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoMa_DiCEeWlpOnkGDRnCA" name="Value(critical)">
                  <result xmi:id="_ZoMa_TiCEeWlpOnkGDRnCA" name="Value(critical).result" outgoing="_ZoMa6jiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMa_jiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMa_ziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_ZoMbADiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" instance="_ZoQFFjiCEeWlpOnkGDRnCA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMbATiCEeWlpOnkGDRnCA" name="ExpressionStatement@3456b39c" incoming="_ZoMaVTiCEeWlpOnkGDRnCA" outgoing="_ZoMaVziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMbAjiCEeWlpOnkGDRnCA" target="_ZoMbBjiCEeWlpOnkGDRnCA" source="_ZoMbETiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMbAziCEeWlpOnkGDRnCA" target="_ZoMbDDiCEeWlpOnkGDRnCA" source="_ZoMbFjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMbBDiCEeWlpOnkGDRnCA" target="_ZoMbBTiCEeWlpOnkGDRnCA" source="_ZoMbDziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoMbBTiCEeWlpOnkGDRnCA" name="Call(AssertEqual)" incoming="_ZoMbBDiCEeWlpOnkGDRnCA" behavior="_ZoQsCDiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoMbBjiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(label)" incoming="_ZoMbAjiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMbBziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMbCDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoMbCTiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value1)" incoming="_ZoMaVDiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMbCjiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMbCziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoMbDDiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value2)" incoming="_ZoMbAziCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMbDTiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMbDjiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMbDziCEeWlpOnkGDRnCA" name="Tuple@4b53aea8" outgoing="_ZoMbBDiCEeWlpOnkGDRnCA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoMbEDiCEeWlpOnkGDRnCA" name="Value(&quot;year&quot;)">
                  <result xmi:id="_ZoMbETiCEeWlpOnkGDRnCA" name="Value(&quot;year&quot;).result" outgoing="_ZoMbAjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMbEjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMbEziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ZoMbFDiCEeWlpOnkGDRnCA" value="year">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoMbFTiCEeWlpOnkGDRnCA" name="Value(2012)">
                  <result xmi:id="_ZoMbFjiCEeWlpOnkGDRnCA" name="Value(2012).result" outgoing="_ZoMbAziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMbFziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoMbGDiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ZoMbGTiCEeWlpOnkGDRnCA" value="2012">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoMbGjiCEeWlpOnkGDRnCA" name="ExpressionStatement@d9635a1" incoming="_ZoMaVziCEeWlpOnkGDRnCA" outgoing="_ZoMaWTiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMbGziCEeWlpOnkGDRnCA" target="_ZoMbHziCEeWlpOnkGDRnCA" source="_ZoNBGTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoMbHDiCEeWlpOnkGDRnCA" target="_ZoNBFDiCEeWlpOnkGDRnCA" source="_ZoNBHjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoMbHTiCEeWlpOnkGDRnCA" target="_ZoMbHjiCEeWlpOnkGDRnCA" source="_ZoNBFziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoMbHjiCEeWlpOnkGDRnCA" name="Call(AssertEqual)" incoming="_ZoMbHTiCEeWlpOnkGDRnCA" behavior="_ZoQsCDiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoMbHziCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(label)" incoming="_ZoMbGziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoMbIDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBEDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoNBETiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value1)" incoming="_ZoMaVjiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBEjiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBEziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoNBFDiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value2)" incoming="_ZoMbHDiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBFTiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBFjiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNBFziCEeWlpOnkGDRnCA" name="Tuple@552e3752" outgoing="_ZoMbHTiCEeWlpOnkGDRnCA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNBGDiCEeWlpOnkGDRnCA" name="Value(&quot;month&quot;)">
                  <result xmi:id="_ZoNBGTiCEeWlpOnkGDRnCA" name="Value(&quot;month&quot;).result" outgoing="_ZoMbGziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBGjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBGziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ZoNBHDiCEeWlpOnkGDRnCA" value="month">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNBHTiCEeWlpOnkGDRnCA" name="Value(2)">
                  <result xmi:id="_ZoNBHjiCEeWlpOnkGDRnCA" name="Value(2).result" outgoing="_ZoMbHDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBHziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBIDiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNBITiCEeWlpOnkGDRnCA" value="2">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNBIjiCEeWlpOnkGDRnCA" name="ExpressionStatement@65fa3ddc" incoming="_ZoMaWTiCEeWlpOnkGDRnCA" outgoing="_ZoMaWziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNBIziCEeWlpOnkGDRnCA" target="_ZoNBJziCEeWlpOnkGDRnCA" source="_ZoNBMjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNBJDiCEeWlpOnkGDRnCA" target="_ZoNBLTiCEeWlpOnkGDRnCA" source="_ZoNBNziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNBJTiCEeWlpOnkGDRnCA" target="_ZoNBJjiCEeWlpOnkGDRnCA" source="_ZoNBMDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNBJjiCEeWlpOnkGDRnCA" name="Call(AssertEqual)" incoming="_ZoNBJTiCEeWlpOnkGDRnCA" behavior="_ZoQsCDiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoNBJziCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(label)" incoming="_ZoNBIziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBKDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBKTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoNBKjiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value1)" incoming="_ZoMaWDiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBKziCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBLDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoNBLTiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value2)" incoming="_ZoNBJDiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBLjiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBLziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNBMDiCEeWlpOnkGDRnCA" name="Tuple@34abf01c" outgoing="_ZoNBJTiCEeWlpOnkGDRnCA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNBMTiCEeWlpOnkGDRnCA" name="Value(&quot;numDays&quot;)">
                  <result xmi:id="_ZoNBMjiCEeWlpOnkGDRnCA" name="Value(&quot;numDays&quot;).result" outgoing="_ZoNBIziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBMziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBNDiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ZoNBNTiCEeWlpOnkGDRnCA" value="numDays">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNBNjiCEeWlpOnkGDRnCA" name="Value(29)">
                  <result xmi:id="_ZoNBNziCEeWlpOnkGDRnCA" name="Value(29).result" outgoing="_ZoNBJDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBODiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBOTiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNBOjiCEeWlpOnkGDRnCA" value="29">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNBOziCEeWlpOnkGDRnCA" name="ExpressionStatement@22d6fcd3" incoming="_ZoMaWziCEeWlpOnkGDRnCA" outgoing="_ZoMaXTiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNBPDiCEeWlpOnkGDRnCA" target="_ZoNBQDiCEeWlpOnkGDRnCA" source="_ZoNBSziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNBPTiCEeWlpOnkGDRnCA" target="_ZoNBRjiCEeWlpOnkGDRnCA" source="_ZoNBUDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNBPjiCEeWlpOnkGDRnCA" target="_ZoNBPziCEeWlpOnkGDRnCA" source="_ZoNBSTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNBPziCEeWlpOnkGDRnCA" name="Call(AssertEqual)" incoming="_ZoNBPjiCEeWlpOnkGDRnCA" behavior="_ZoQsCDiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoNBQDiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(label)" incoming="_ZoNBPDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBQTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBQjiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoNBQziCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value1)" incoming="_ZoMaWjiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBRDiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBRTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoNBRjiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value2)" incoming="_ZoNBPTiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBRziCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBSDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNBSTiCEeWlpOnkGDRnCA" name="Tuple@467105fa" outgoing="_ZoNBPjiCEeWlpOnkGDRnCA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNBSjiCEeWlpOnkGDRnCA" name="Value(&quot;switch1&quot;)">
                  <result xmi:id="_ZoNBSziCEeWlpOnkGDRnCA" name="Value(&quot;switch1&quot;).result" outgoing="_ZoNBPDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBTDiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBTTiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ZoNBTjiCEeWlpOnkGDRnCA" value="switch1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNBTziCEeWlpOnkGDRnCA" name="Value(3)">
                  <result xmi:id="_ZoNBUDiCEeWlpOnkGDRnCA" name="Value(3).result" outgoing="_ZoNBPTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBUTiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBUjiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNBUziCEeWlpOnkGDRnCA" value="3">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNBVDiCEeWlpOnkGDRnCA" name="ExpressionStatement@61cdb3c4" incoming="_ZoMaXTiCEeWlpOnkGDRnCA" outgoing="_ZoMaXziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNBVTiCEeWlpOnkGDRnCA" target="_ZoNBWTiCEeWlpOnkGDRnCA" source="_ZoNBZDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNBVjiCEeWlpOnkGDRnCA" target="_ZoNBXziCEeWlpOnkGDRnCA" source="_ZoNBaTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNBVziCEeWlpOnkGDRnCA" target="_ZoNBWDiCEeWlpOnkGDRnCA" source="_ZoNBYjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNBWDiCEeWlpOnkGDRnCA" name="Call(AssertEqual)" incoming="_ZoNBVziCEeWlpOnkGDRnCA" behavior="_ZoQsCDiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoNBWTiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(label)" incoming="_ZoNBVTiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBWjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBWziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoNBXDiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value1)" incoming="_ZoMaXDiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBXTiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBXjiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoNBXziCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value2)" incoming="_ZoNBVjiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBYDiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBYTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNBYjiCEeWlpOnkGDRnCA" name="Tuple@2efe72b5" outgoing="_ZoNBVziCEeWlpOnkGDRnCA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNBYziCEeWlpOnkGDRnCA" name="Value(&quot;switch2&quot;)">
                  <result xmi:id="_ZoNBZDiCEeWlpOnkGDRnCA" name="Value(&quot;switch2&quot;).result" outgoing="_ZoNBVTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBZTiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBZjiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ZoNBZziCEeWlpOnkGDRnCA" value="switch2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNBaDiCEeWlpOnkGDRnCA" name="Value(1)">
                  <result xmi:id="_ZoNBaTiCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_ZoNBVjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBajiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBaziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNBbDiCEeWlpOnkGDRnCA" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNBbTiCEeWlpOnkGDRnCA" name="ExpressionStatement@1c4e388c" incoming="_ZoMaXziCEeWlpOnkGDRnCA" outgoing="_ZoMaYDiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNBbjiCEeWlpOnkGDRnCA" target="_ZoNBcjiCEeWlpOnkGDRnCA" source="_ZoNBfTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNBbziCEeWlpOnkGDRnCA" target="_ZoNBeDiCEeWlpOnkGDRnCA" source="_ZoNBgjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNBcDiCEeWlpOnkGDRnCA" target="_ZoNBcTiCEeWlpOnkGDRnCA" source="_ZoNBeziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNBcTiCEeWlpOnkGDRnCA" name="Call(AssertEqual)" incoming="_ZoNBcDiCEeWlpOnkGDRnCA" behavior="_ZoQsCDiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoNBcjiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(label)" incoming="_ZoNBbjiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBcziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBdDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoNBdTiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value1)" incoming="_ZoMaXjiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBdjiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBdziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoNBeDiCEeWlpOnkGDRnCA" name="Call(AssertEqual).argument(value2)" incoming="_ZoNBbziCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBeTiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBejiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNBeziCEeWlpOnkGDRnCA" name="Tuple@679515ae" outgoing="_ZoNBcDiCEeWlpOnkGDRnCA">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNBfDiCEeWlpOnkGDRnCA" name="Value(&quot;switch3&quot;)">
                  <result xmi:id="_ZoNBfTiCEeWlpOnkGDRnCA" name="Value(&quot;switch3&quot;).result" outgoing="_ZoNBbjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBfjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBfziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ZoNBgDiCEeWlpOnkGDRnCA" value="switch3">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNBgTiCEeWlpOnkGDRnCA" name="Value(1)">
                  <result xmi:id="_ZoNBgjiCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_ZoNBbziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBgziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBhDiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNBhTiCEeWlpOnkGDRnCA" value="1">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNBhjiCEeWlpOnkGDRnCA" name="ExpressionStatement@22a62404" incoming="_ZoMaYDiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNBhziCEeWlpOnkGDRnCA" target="_ZoNBiTiCEeWlpOnkGDRnCA" source="_ZoNBjTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_ZoNBiDiCEeWlpOnkGDRnCA" name="Call(done)" operation="_ZoQrdTiCEeWlpOnkGDRnCA">
                <target xmi:id="_ZoNBiTiCEeWlpOnkGDRnCA" name="Call(done).target" incoming="_ZoNBhziCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBijiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBiziCEeWlpOnkGDRnCA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoNBjDiCEeWlpOnkGDRnCA" name="ReadSelf">
                <result xmi:id="_ZoNBjTiCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoNBhziCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBjjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBjziCEeWlpOnkGDRnCA" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoNBkDiCEeWlpOnkGDRnCA" name="ReadSelf">
            <result xmi:id="_ZoNBkTiCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoMaPziCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBkjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBkziCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoNBlDiCEeWlpOnkGDRnCA" name="Fork(ReadSelf.result)" incoming="_ZoMaPziCEeWlpOnkGDRnCA" outgoing="_ZoMaOTiCEeWlpOnkGDRnCA _ZoMaQDiCEeWlpOnkGDRnCA _ZoMaQziCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNBlTiCEeWlpOnkGDRnCA" name="Super" incoming="_ZoMaSTiCEeWlpOnkGDRnCA" outgoing="_ZoMaQjiCEeWlpOnkGDRnCA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNBljiCEeWlpOnkGDRnCA" name="ExpressionStatement@1623e5d4">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNBlziCEeWlpOnkGDRnCA" name="Call(Test$method$1)" behavior="_ZoQFUjiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoNBmDiCEeWlpOnkGDRnCA" name="Call(Test$method$1).argument(tester)" incoming="_ZoMaOjiCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBmTiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBmjiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoNBmziCEeWlpOnkGDRnCA" name="Call(Test$method$1).result()" type="_ZoQFGDiCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBnDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBnTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="_ZoNBnjiCEeWlpOnkGDRnCA" name="Call(Statements_Conditional$initialization$1)" incoming="_ZoMaQjiCEeWlpOnkGDRnCA" outgoing="_ZoMaQTiCEeWlpOnkGDRnCA" operation="_ZoPe-DiCEeWlpOnkGDRnCA">
            <target xmi:id="_ZoNBnziCEeWlpOnkGDRnCA" name="Call(Statements_Conditional$initialization$1).target" incoming="_ZoMaQDiCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBoDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBoTiCEeWlpOnkGDRnCA" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ZoNBojiCEeWlpOnkGDRnCA" name="Read(Statements_Conditional$initializationFlag$1)" structuralFeature="_ZoMaCDiCEeWlpOnkGDRnCA">
            <object xmi:id="_ZoNBoziCEeWlpOnkGDRnCA" name="Read(Statements_Conditional$initializationFlag$1).object" incoming="_ZoMaQziCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBpDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBpTiCEeWlpOnkGDRnCA" value="1"/>
            </object>
            <result xmi:id="_ZoNBpjiCEeWlpOnkGDRnCA" name="Read(Statements_Conditional$initializationFlag$1).result" outgoing="_ZoMaRDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBpziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBqDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNBqTiCEeWlpOnkGDRnCA" name="Call(ListSize)">
            <argument xmi:id="_ZoNBqjiCEeWlpOnkGDRnCA" name="Call(ListSize).argument(list)" incoming="_ZoMaRDiCEeWlpOnkGDRnCA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBqziCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBrDiCEeWlpOnkGDRnCA" value="*"/>
            </argument>
            <result xmi:id="_ZoNBrTiCEeWlpOnkGDRnCA" name="Call(ListSize).result(result)" outgoing="_ZoMaRTiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBrjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBrziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNBsDiCEeWlpOnkGDRnCA" name="Value(0)">
            <result xmi:id="_ZoNBsTiCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoMaRjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBsjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBsziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNBtDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoNBtTiCEeWlpOnkGDRnCA" name="Test(Size==0)">
            <first xmi:id="_ZoNBtjiCEeWlpOnkGDRnCA" name="Test(Size==0).first" incoming="_ZoMaRTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBtziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBuDiCEeWlpOnkGDRnCA" value="1"/>
            </first>
            <result xmi:id="_ZoNBuTiCEeWlpOnkGDRnCA" name="Test(Size==0).result" outgoing="_ZoMaSDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBujiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBuziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <second xmi:id="_ZoNBvDiCEeWlpOnkGDRnCA" name="Test(Size==0).second" incoming="_ZoMaRjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBvTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBvjiCEeWlpOnkGDRnCA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_ZoNBvziCEeWlpOnkGDRnCA" name="InitialNode" outgoing="_ZoMaRziCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_ZoNBwDiCEeWlpOnkGDRnCA" name="Decision(Test(Statements_Conditional$initializationFlag$1))" incoming="_ZoMaRziCEeWlpOnkGDRnCA _ZoMaSDiCEeWlpOnkGDRnCA" outgoing="_ZoMaSTiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoMaSDiCEeWlpOnkGDRnCA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoMaOziCEeWlpOnkGDRnCA" name="Input(tester)" outgoing="_ZoMaODiCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA" parameter="_ZoMaMjiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_ZoMaPDiCEeWlpOnkGDRnCA" name="Fork(tester)" incoming="_ZoMaODiCEeWlpOnkGDRnCA" outgoing="_ZoMaOjiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoMaPTiCEeWlpOnkGDRnCA" name="Return" incoming="_ZoMaOTiCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" parameter="_ZoMaNTiCEeWlpOnkGDRnCA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoNBwTiCEeWlpOnkGDRnCA" name="test$method$1" specification="_ZoPfBDiCEeWlpOnkGDRnCA" node="_ZoNB6jiCEeWlpOnkGDRnCA _ZoNB6ziCEeWlpOnkGDRnCA _ZoNB7DiCEeWlpOnkGDRnCA _ZoNB7TiCEeWlpOnkGDRnCA _ZoNB7jiCEeWlpOnkGDRnCA _ZoNB7ziCEeWlpOnkGDRnCA _ZoNB8DiCEeWlpOnkGDRnCA _ZoNB8TiCEeWlpOnkGDRnCA _ZoNB8jiCEeWlpOnkGDRnCA _ZoNB8ziCEeWlpOnkGDRnCA _ZoNB9DiCEeWlpOnkGDRnCA" group="_ZoNB9DiCEeWlpOnkGDRnCA">
        <ownedParameter xmi:id="_ZoNBwjiCEeWlpOnkGDRnCA" name="reading1" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBwziCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBxDiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoNBxTiCEeWlpOnkGDRnCA" name="condition1" type="_ZoQFEziCEeWlpOnkGDRnCA" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBxjiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBxziCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoNByDiCEeWlpOnkGDRnCA" name="condition2" type="_ZoQFEziCEeWlpOnkGDRnCA" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNByTiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNByjiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoNByziCEeWlpOnkGDRnCA" name="condition3" type="_ZoQFEziCEeWlpOnkGDRnCA" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBzDiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNBzTiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoNBzjiCEeWlpOnkGDRnCA" name="year" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNBzziCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNB0DiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoNB0TiCEeWlpOnkGDRnCA" name="month" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNB0jiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNB0ziCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoNB1DiCEeWlpOnkGDRnCA" name="numDays" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNB1TiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNB1jiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoNB1ziCEeWlpOnkGDRnCA" name="switch1" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNB2DiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNB2TiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoNB2jiCEeWlpOnkGDRnCA" name="switch2" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNB2ziCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNB3DiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoNB3TiCEeWlpOnkGDRnCA" name="switch3" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNB3jiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNB3ziCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNB4DiCEeWlpOnkGDRnCA" target="_ZoNB6jiCEeWlpOnkGDRnCA" source="_ZoNCPDiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNB4TiCEeWlpOnkGDRnCA" target="_ZoNB6ziCEeWlpOnkGDRnCA" source="_ZoNCPziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNB4jiCEeWlpOnkGDRnCA" target="_ZoNB7DiCEeWlpOnkGDRnCA" source="_ZoNCQjiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNB4ziCEeWlpOnkGDRnCA" target="_ZoNB7TiCEeWlpOnkGDRnCA" source="_ZoNCRTiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNB5DiCEeWlpOnkGDRnCA" target="_ZoNB7jiCEeWlpOnkGDRnCA" source="_ZoNCSDiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNB5TiCEeWlpOnkGDRnCA" target="_ZoNB7ziCEeWlpOnkGDRnCA" source="_ZoNCSziCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNB5jiCEeWlpOnkGDRnCA" target="_ZoNB8DiCEeWlpOnkGDRnCA" source="_ZoNCTjiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNB5ziCEeWlpOnkGDRnCA" target="_ZoNB8TiCEeWlpOnkGDRnCA" source="_ZoNCUTiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNB6DiCEeWlpOnkGDRnCA" target="_ZoNB8jiCEeWlpOnkGDRnCA" source="_ZoNCVDiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNB6TiCEeWlpOnkGDRnCA" target="_ZoNB8ziCEeWlpOnkGDRnCA" source="_ZoNCVziCEeWlpOnkGDRnCA"/>
        <structuredNode xmi:id="_ZoNB9DiCEeWlpOnkGDRnCA" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNB9TiCEeWlpOnkGDRnCA" target="_ZoNCYziCEeWlpOnkGDRnCA" source="_ZoNCWjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNB9jiCEeWlpOnkGDRnCA" target="_ZoNCbDiCEeWlpOnkGDRnCA" source="_ZoNCYziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNB9ziCEeWlpOnkGDRnCA" target="_ZoNCdTiCEeWlpOnkGDRnCA" source="_ZoNCbDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNB-DiCEeWlpOnkGDRnCA" target="_ZoNCfjiCEeWlpOnkGDRnCA" source="_ZoNCdTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNB-TiCEeWlpOnkGDRnCA" target="_ZoNChziCEeWlpOnkGDRnCA" source="_ZoNCfjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNB-jiCEeWlpOnkGDRnCA" target="_ZoNCkDiCEeWlpOnkGDRnCA" source="_ZoNChziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNB-ziCEeWlpOnkGDRnCA" target="_ZoNCmTiCEeWlpOnkGDRnCA" source="_ZoNCkDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNB_DiCEeWlpOnkGDRnCA" target="_ZoNCqTiCEeWlpOnkGDRnCA" source="_ZoNCmTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNB_TiCEeWlpOnkGDRnCA" target="_ZoNoWDiCEeWlpOnkGDRnCA" source="_ZoNoVTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNB_jiCEeWlpOnkGDRnCA" target="_ZoNoITiCEeWlpOnkGDRnCA" source="_ZoNCZTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNB_ziCEeWlpOnkGDRnCA" target="_ZoNoJziCEeWlpOnkGDRnCA" source="_ZoNCbjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCADiCEeWlpOnkGDRnCA" target="_ZoNoMjiCEeWlpOnkGDRnCA" source="_ZoNCkjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCATiCEeWlpOnkGDRnCA" target="_ZoNoPDiCEeWlpOnkGDRnCA" source="_ZoNCmziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCAjiCEeWlpOnkGDRnCA" target="_ZoNoTTiCEeWlpOnkGDRnCA" source="_ZoNCXDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNCAziCEeWlpOnkGDRnCA" target="_ZoNCsjiCEeWlpOnkGDRnCA" source="_ZoNCqTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCBDiCEeWlpOnkGDRnCA" target="_ZoNo5ziCEeWlpOnkGDRnCA" source="_ZoNo5DiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCBTiCEeWlpOnkGDRnCA" target="_ZoNoZziCEeWlpOnkGDRnCA" source="_ZoNCZTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCBjiCEeWlpOnkGDRnCA" target="_ZoNoajiCEeWlpOnkGDRnCA" source="_ZoNCdziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCBziCEeWlpOnkGDRnCA" target="_ZoNogjiCEeWlpOnkGDRnCA" source="_ZoNCZTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCCDiCEeWlpOnkGDRnCA" target="_ZoNohTiCEeWlpOnkGDRnCA" source="_ZoNCdziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCCTiCEeWlpOnkGDRnCA" target="_ZoNokTiCEeWlpOnkGDRnCA" source="_ZoNCZTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCCjiCEeWlpOnkGDRnCA" target="_ZoNolDiCEeWlpOnkGDRnCA" source="_ZoNCgDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCCziCEeWlpOnkGDRnCA" target="_ZoNowTiCEeWlpOnkGDRnCA" source="_ZoNCZTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCDDiCEeWlpOnkGDRnCA" target="_ZoNoxDiCEeWlpOnkGDRnCA" source="_ZoNCgDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNCDTiCEeWlpOnkGDRnCA" target="_ZoNoWTiCEeWlpOnkGDRnCA" source="_ZoNCsjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNCDjiCEeWlpOnkGDRnCA" target="_ZoNo6DiCEeWlpOnkGDRnCA" source="_ZoNoWTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCDziCEeWlpOnkGDRnCA" target="_ZoNpRziCEeWlpOnkGDRnCA" source="_ZoNpRDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCEDiCEeWlpOnkGDRnCA" target="_ZoNo9jiCEeWlpOnkGDRnCA" source="_ZoNo6jiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCETiCEeWlpOnkGDRnCA" target="_ZoNo-TiCEeWlpOnkGDRnCA" source="_ZoNCdziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCEjiCEeWlpOnkGDRnCA" target="_ZoNpETiCEeWlpOnkGDRnCA" source="_ZoNo6jiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCEziCEeWlpOnkGDRnCA" target="_ZoNpFDiCEeWlpOnkGDRnCA" source="_ZoNCgDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNCFDiCEeWlpOnkGDRnCA" target="_ZoNo8TiCEeWlpOnkGDRnCA" source="_ZoNo6DiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCFTiCEeWlpOnkGDRnCA" target="_ZoOPfDiCEeWlpOnkGDRnCA" source="_ZoOPeTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCFjiCEeWlpOnkGDRnCA" target="_ZoNpYDiCEeWlpOnkGDRnCA" source="_ZoNo6jiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCFziCEeWlpOnkGDRnCA" target="_ZoNpYziCEeWlpOnkGDRnCA" source="_ZoNCdziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCGDiCEeWlpOnkGDRnCA" target="_ZoNpeziCEeWlpOnkGDRnCA" source="_ZoNo6jiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCGTiCEeWlpOnkGDRnCA" target="_ZoNpfjiCEeWlpOnkGDRnCA" source="_ZoNCdziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCGjiCEeWlpOnkGDRnCA" target="_ZoNpijiCEeWlpOnkGDRnCA" source="_ZoNo6jiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCGziCEeWlpOnkGDRnCA" target="_ZoNpjTiCEeWlpOnkGDRnCA" source="_ZoNCgDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCHDiCEeWlpOnkGDRnCA" target="_ZoNpujiCEeWlpOnkGDRnCA" source="_ZoNo6jiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCHTiCEeWlpOnkGDRnCA" target="_ZoNpvTiCEeWlpOnkGDRnCA" source="_ZoNCgDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCHjiCEeWlpOnkGDRnCA" target="_ZoOPMDiCEeWlpOnkGDRnCA" source="_ZoNo6jiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCHziCEeWlpOnkGDRnCA" target="_ZoOPMziCEeWlpOnkGDRnCA" source="_ZoNCiTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNCIDiCEeWlpOnkGDRnCA" target="_ZoNpSDiCEeWlpOnkGDRnCA" source="_ZoNo8TiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCITiCEeWlpOnkGDRnCA" target="_ZoOPhTiCEeWlpOnkGDRnCA" source="_ZoNCqziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNCIjiCEeWlpOnkGDRnCA" target="_ZoOPfTiCEeWlpOnkGDRnCA" source="_ZoNpSDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCIziCEeWlpOnkGDRnCA" target="_ZoOP9ziCEeWlpOnkGDRnCA" source="_ZoOPwTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCJDiCEeWlpOnkGDRnCA" target="_ZoO2wjiCEeWlpOnkGDRnCA" source="_ZoNCqziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCJTiCEeWlpOnkGDRnCA" target="_ZoO26TiCEeWlpOnkGDRnCA" source="_ZoNCqziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCJjiCEeWlpOnkGDRnCA" target="_ZoO3LTiCEeWlpOnkGDRnCA" source="_ZoNCqziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNCJziCEeWlpOnkGDRnCA" target="_ZoOPwziCEeWlpOnkGDRnCA" source="_ZoOPfTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNCKDiCEeWlpOnkGDRnCA" target="_ZoO3tDiCEeWlpOnkGDRnCA" source="_ZoOPwziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCKTiCEeWlpOnkGDRnCA" target="_ZoPduziCEeWlpOnkGDRnCA" source="_ZoO3tjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNCKjiCEeWlpOnkGDRnCA" target="_ZoO3vTiCEeWlpOnkGDRnCA" source="_ZoO3tDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNCKziCEeWlpOnkGDRnCA" target="_ZoPdxDiCEeWlpOnkGDRnCA" source="_ZoO3vTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCLDiCEeWlpOnkGDRnCA" target="_ZoPeXziCEeWlpOnkGDRnCA" source="_ZoPdxjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCLTiCEeWlpOnkGDRnCA" target="_ZoPd9DiCEeWlpOnkGDRnCA" source="_ZoPdxjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCLjiCEeWlpOnkGDRnCA" target="_ZoPeSziCEeWlpOnkGDRnCA" source="_ZoPdxjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNCLziCEeWlpOnkGDRnCA" target="_ZoPdzTiCEeWlpOnkGDRnCA" source="_ZoPdxDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCMDiCEeWlpOnkGDRnCA" target="_ZoPecDiCEeWlpOnkGDRnCA" source="_ZoPeVjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNCMTiCEeWlpOnkGDRnCA" target="_ZoPeaDiCEeWlpOnkGDRnCA" source="_ZoPdzTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCMjiCEeWlpOnkGDRnCA" target="_ZoNCPDiCEeWlpOnkGDRnCA" source="_ZoNoWDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCMziCEeWlpOnkGDRnCA" target="_ZoNCPziCEeWlpOnkGDRnCA" source="_ZoNo5ziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCNDiCEeWlpOnkGDRnCA" target="_ZoNCQjiCEeWlpOnkGDRnCA" source="_ZoNpRziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCNTiCEeWlpOnkGDRnCA" target="_ZoNCRTiCEeWlpOnkGDRnCA" source="_ZoOPfDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCNjiCEeWlpOnkGDRnCA" target="_ZoNCSDiCEeWlpOnkGDRnCA" source="_ZoNCqziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCNziCEeWlpOnkGDRnCA" target="_ZoNCSziCEeWlpOnkGDRnCA" source="_ZoOPwTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCODiCEeWlpOnkGDRnCA" target="_ZoNCTjiCEeWlpOnkGDRnCA" source="_ZoO3sjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCOTiCEeWlpOnkGDRnCA" target="_ZoNCUTiCEeWlpOnkGDRnCA" source="_ZoPdsjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCOjiCEeWlpOnkGDRnCA" target="_ZoNCVDiCEeWlpOnkGDRnCA" source="_ZoPeVjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCOziCEeWlpOnkGDRnCA" target="_ZoNCVziCEeWlpOnkGDRnCA" source="_ZoPerDiCEeWlpOnkGDRnCA"/>
          <structuredNodeOutput xmi:id="_ZoNCPDiCEeWlpOnkGDRnCA" name="Output(reading1)" incoming="_ZoNCMjiCEeWlpOnkGDRnCA" outgoing="_ZoNB4DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCPTiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCPjiCEeWlpOnkGDRnCA" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_ZoNCPziCEeWlpOnkGDRnCA" name="Output(condition1)" incoming="_ZoNCMziCEeWlpOnkGDRnCA" outgoing="_ZoNB4TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCQDiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCQTiCEeWlpOnkGDRnCA" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_ZoNCQjiCEeWlpOnkGDRnCA" name="Output(condition2)" incoming="_ZoNCNDiCEeWlpOnkGDRnCA" outgoing="_ZoNB4jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCQziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCRDiCEeWlpOnkGDRnCA" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_ZoNCRTiCEeWlpOnkGDRnCA" name="Output(condition3)" incoming="_ZoNCNTiCEeWlpOnkGDRnCA" outgoing="_ZoNB4ziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCRjiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCRziCEeWlpOnkGDRnCA" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_ZoNCSDiCEeWlpOnkGDRnCA" name="Output(year)" incoming="_ZoNCNjiCEeWlpOnkGDRnCA" outgoing="_ZoNB5DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCSTiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCSjiCEeWlpOnkGDRnCA" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_ZoNCSziCEeWlpOnkGDRnCA" name="Output(month)" incoming="_ZoNCNziCEeWlpOnkGDRnCA" outgoing="_ZoNB5TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCTDiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCTTiCEeWlpOnkGDRnCA" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_ZoNCTjiCEeWlpOnkGDRnCA" name="Output(numDays)" incoming="_ZoNCODiCEeWlpOnkGDRnCA" outgoing="_ZoNB5jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCTziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCUDiCEeWlpOnkGDRnCA" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_ZoNCUTiCEeWlpOnkGDRnCA" name="Output(switch1)" incoming="_ZoNCOTiCEeWlpOnkGDRnCA" outgoing="_ZoNB5ziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCUjiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCUziCEeWlpOnkGDRnCA" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_ZoNCVDiCEeWlpOnkGDRnCA" name="Output(switch2)" incoming="_ZoNCOjiCEeWlpOnkGDRnCA" outgoing="_ZoNB6DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCVTiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCVjiCEeWlpOnkGDRnCA" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_ZoNCVziCEeWlpOnkGDRnCA" name="Output(switch3)" incoming="_ZoNCOziCEeWlpOnkGDRnCA" outgoing="_ZoNB6TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCWDiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCWTiCEeWlpOnkGDRnCA" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCWjiCEeWlpOnkGDRnCA" name="ExpressionStatement@31ecec42" outgoing="_ZoNB9TiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCWziCEeWlpOnkGDRnCA" target="_ZoNCXDiCEeWlpOnkGDRnCA" source="_ZoNCXziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoNCXDiCEeWlpOnkGDRnCA" name="Fork(reading1)@126e694d" incoming="_ZoNCWziCEeWlpOnkGDRnCA" outgoing="_ZoNCAjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCXTiCEeWlpOnkGDRnCA" name="RightHandSide@ec347af">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNCXjiCEeWlpOnkGDRnCA" name="Value(0)">
                <result xmi:id="_ZoNCXziCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoNCWziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCYDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCYTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNCYjiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCYziCEeWlpOnkGDRnCA" name="ExpressionStatement@53c4f9de" incoming="_ZoNB9TiCEeWlpOnkGDRnCA" outgoing="_ZoNB9jiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCZDiCEeWlpOnkGDRnCA" target="_ZoNCZTiCEeWlpOnkGDRnCA" source="_ZoNCaDiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoNCZTiCEeWlpOnkGDRnCA" name="Fork(reading)@50c3c2fa" incoming="_ZoNCZDiCEeWlpOnkGDRnCA" outgoing="_ZoNB_jiCEeWlpOnkGDRnCA _ZoNCBTiCEeWlpOnkGDRnCA _ZoNCBziCEeWlpOnkGDRnCA _ZoNCCTiCEeWlpOnkGDRnCA _ZoNCCziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCZjiCEeWlpOnkGDRnCA" name="RightHandSide@6435d482">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNCZziCEeWlpOnkGDRnCA" name="Value(150)">
                <result xmi:id="_ZoNCaDiCEeWlpOnkGDRnCA" name="Value(150).result" outgoing="_ZoNCZDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCaTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCajiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNCaziCEeWlpOnkGDRnCA" value="150">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCbDiCEeWlpOnkGDRnCA" name="ExpressionStatement@48845d2f" incoming="_ZoNB9jiCEeWlpOnkGDRnCA" outgoing="_ZoNB9ziCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCbTiCEeWlpOnkGDRnCA" target="_ZoNCbjiCEeWlpOnkGDRnCA" source="_ZoNCcTiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoNCbjiCEeWlpOnkGDRnCA" name="Fork(threshold)@6a756701" incoming="_ZoNCbTiCEeWlpOnkGDRnCA" outgoing="_ZoNB_ziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCbziCEeWlpOnkGDRnCA" name="RightHandSide@41bda941">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNCcDiCEeWlpOnkGDRnCA" name="Value(10)">
                <result xmi:id="_ZoNCcTiCEeWlpOnkGDRnCA" name="Value(10).result" outgoing="_ZoNCbTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCcjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCcziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNCdDiCEeWlpOnkGDRnCA" value="10">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCdTiCEeWlpOnkGDRnCA" name="ExpressionStatement@42c4b4c7" incoming="_ZoNB9ziCEeWlpOnkGDRnCA" outgoing="_ZoNB-DiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCdjiCEeWlpOnkGDRnCA" target="_ZoNCdziCEeWlpOnkGDRnCA" source="_ZoNCejiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoNCdziCEeWlpOnkGDRnCA" name="Fork(safeLimit)@1ec77d1e" incoming="_ZoNCdjiCEeWlpOnkGDRnCA" outgoing="_ZoNCBjiCEeWlpOnkGDRnCA _ZoNCCDiCEeWlpOnkGDRnCA _ZoNCETiCEeWlpOnkGDRnCA _ZoNCFziCEeWlpOnkGDRnCA _ZoNCGTiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCeDiCEeWlpOnkGDRnCA" name="RightHandSide@3ae74c5b">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNCeTiCEeWlpOnkGDRnCA" name="Value(100)">
                <result xmi:id="_ZoNCejiCEeWlpOnkGDRnCA" name="Value(100).result" outgoing="_ZoNCdjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCeziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCfDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNCfTiCEeWlpOnkGDRnCA" value="100">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCfjiCEeWlpOnkGDRnCA" name="ExpressionStatement@29d694c4" incoming="_ZoNB-DiCEeWlpOnkGDRnCA" outgoing="_ZoNB-TiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCfziCEeWlpOnkGDRnCA" target="_ZoNCgDiCEeWlpOnkGDRnCA" source="_ZoNCgziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoNCgDiCEeWlpOnkGDRnCA" name="Fork(criticalLimit)@431de6b0" incoming="_ZoNCfziCEeWlpOnkGDRnCA" outgoing="_ZoNCCjiCEeWlpOnkGDRnCA _ZoNCDDiCEeWlpOnkGDRnCA _ZoNCEziCEeWlpOnkGDRnCA _ZoNCGziCEeWlpOnkGDRnCA _ZoNCHTiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCgTiCEeWlpOnkGDRnCA" name="RightHandSide@60144f3c">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNCgjiCEeWlpOnkGDRnCA" name="Value(200)">
                <result xmi:id="_ZoNCgziCEeWlpOnkGDRnCA" name="Value(200).result" outgoing="_ZoNCfziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNChDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNChTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNChjiCEeWlpOnkGDRnCA" value="200">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNChziCEeWlpOnkGDRnCA" name="ExpressionStatement@1ca03c15" incoming="_ZoNB-TiCEeWlpOnkGDRnCA" outgoing="_ZoNB-jiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCiDiCEeWlpOnkGDRnCA" target="_ZoNCiTiCEeWlpOnkGDRnCA" source="_ZoNCjDiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoNCiTiCEeWlpOnkGDRnCA" name="Fork(errorLimit)@3796c3f6" incoming="_ZoNCiDiCEeWlpOnkGDRnCA" outgoing="_ZoNCHziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCijiCEeWlpOnkGDRnCA" name="RightHandSide@b1b67fd">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNCiziCEeWlpOnkGDRnCA" name="Value(1000)">
                <result xmi:id="_ZoNCjDiCEeWlpOnkGDRnCA" name="Value(1000).result" outgoing="_ZoNCiDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCjTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCjjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNCjziCEeWlpOnkGDRnCA" value="1000">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCkDiCEeWlpOnkGDRnCA" name="ExpressionStatement@5c988922" incoming="_ZoNB-jiCEeWlpOnkGDRnCA" outgoing="_ZoNB-ziCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCkTiCEeWlpOnkGDRnCA" target="_ZoNCkjiCEeWlpOnkGDRnCA" source="_ZoNClTiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoNCkjiCEeWlpOnkGDRnCA" name="Fork(sensorId)@853f143" incoming="_ZoNCkTiCEeWlpOnkGDRnCA" outgoing="_ZoNCADiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCkziCEeWlpOnkGDRnCA" name="RightHandSide@3f0469fa">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNClDiCEeWlpOnkGDRnCA" name="Value(1)">
                <result xmi:id="_ZoNClTiCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_ZoNCkTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCljiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNClziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNCmDiCEeWlpOnkGDRnCA" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCmTiCEeWlpOnkGDRnCA" name="ExpressionStatement@7a6c5949" incoming="_ZoNB-ziCEeWlpOnkGDRnCA" outgoing="_ZoNB_DiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCmjiCEeWlpOnkGDRnCA" target="_ZoNCmziCEeWlpOnkGDRnCA" source="_ZoNCnziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoNCmziCEeWlpOnkGDRnCA" name="Fork(monitor)@59917217" incoming="_ZoNCmjiCEeWlpOnkGDRnCA" outgoing="_ZoNCATiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCnDiCEeWlpOnkGDRnCA" name="RightHandSide@5bd971f1">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCnTiCEeWlpOnkGDRnCA" target="_ZoNCojiCEeWlpOnkGDRnCA" source="_ZoNCpjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_ZoNCnjiCEeWlpOnkGDRnCA" name="Call(Monitor)" operation="_ZoQFDjiCEeWlpOnkGDRnCA">
                <result xmi:id="_ZoNCnziCEeWlpOnkGDRnCA" name="Call(Monitor).result()" outgoing="_ZoNCmjiCEeWlpOnkGDRnCA" type="_ZoQEeziCEeWlpOnkGDRnCA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCoDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCoTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <target xmi:id="_ZoNCojiCEeWlpOnkGDRnCA" name="Call(Monitor).target" incoming="_ZoNCnTiCEeWlpOnkGDRnCA" type="_ZoQEeziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCoziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCpDiCEeWlpOnkGDRnCA" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_ZoNCpTiCEeWlpOnkGDRnCA" name="Create(Monitor)" classifier="_ZoQEeziCEeWlpOnkGDRnCA">
                <result xmi:id="_ZoNCpjiCEeWlpOnkGDRnCA" name="Create(Monitor).result" outgoing="_ZoNCnTiCEeWlpOnkGDRnCA" type="_ZoQEeziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCpziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCqDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCqTiCEeWlpOnkGDRnCA" name="ExpressionStatement@8aaba64" incoming="_ZoNB_DiCEeWlpOnkGDRnCA" outgoing="_ZoNCAziCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCqjiCEeWlpOnkGDRnCA" target="_ZoNCqziCEeWlpOnkGDRnCA" source="_ZoNCrjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoNCqziCEeWlpOnkGDRnCA" name="Fork(year)@33b23395" incoming="_ZoNCqjiCEeWlpOnkGDRnCA" outgoing="_ZoNCITiCEeWlpOnkGDRnCA _ZoNCJDiCEeWlpOnkGDRnCA _ZoNCJTiCEeWlpOnkGDRnCA _ZoNCJjiCEeWlpOnkGDRnCA _ZoNCNjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNCrDiCEeWlpOnkGDRnCA" name="RightHandSide@785895b6">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNCrTiCEeWlpOnkGDRnCA" name="Value(2012)">
                <result xmi:id="_ZoNCrjiCEeWlpOnkGDRnCA" name="Value(2012).result" outgoing="_ZoNCqjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNCrziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNCsDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNCsTiCEeWlpOnkGDRnCA" value="2012">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_ZoNCsjiCEeWlpOnkGDRnCA" name="IfStatement@2ff4ee67" incoming="_ZoNCAziCEeWlpOnkGDRnCA" outgoing="_ZoNCDTiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNCsziCEeWlpOnkGDRnCA" target="_ZoNoJDiCEeWlpOnkGDRnCA" source="_ZoNoITiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoIDiCEeWlpOnkGDRnCA" target="_ZoNoQDiCEeWlpOnkGDRnCA" source="_ZoNoITiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoNoITiCEeWlpOnkGDRnCA" name="Fork(reading1)@8107079" incoming="_ZoNB_jiCEeWlpOnkGDRnCA" outgoing="_ZoNCsziCEeWlpOnkGDRnCA _ZoNoIDiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNoIjiCEeWlpOnkGDRnCA" name="RightHandSide@6f481c11"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNoIziCEeWlpOnkGDRnCA" name="Call(>)">
              <argument xmi:id="_ZoNoJDiCEeWlpOnkGDRnCA" name="Call(>).argument(x)" incoming="_ZoNCsziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoJTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoJjiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <argument xmi:id="_ZoNoJziCEeWlpOnkGDRnCA" name="Call(>).argument(y)" incoming="_ZoNB_ziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoKDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoKTiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_ZoNoKjiCEeWlpOnkGDRnCA" name="Call(>).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoKziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoLDiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNoLTiCEeWlpOnkGDRnCA" name="ExpressionStatement@63085756">
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNoLjiCEeWlpOnkGDRnCA" target="_ZoNoLziCEeWlpOnkGDRnCA" source="_ZoNoPTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_ZoNoLziCEeWlpOnkGDRnCA" name="Collect(Call(raiseAlarm))" incoming="_ZoNoLjiCEeWlpOnkGDRnCA" mode="parallel" inputElement="_ZoNoPDiCEeWlpOnkGDRnCA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoMDiCEeWlpOnkGDRnCA" target="_ZoNoNjiCEeWlpOnkGDRnCA" source="_ZoNoMjiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoMTiCEeWlpOnkGDRnCA" target="_ZoNoOTiCEeWlpOnkGDRnCA" source="_ZoNoPDiCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoNoMjiCEeWlpOnkGDRnCA" name="Collect(Call(raiseAlarm)).input(Fork(sensorId)@853f143)" incoming="_ZoNCADiCEeWlpOnkGDRnCA" outgoing="_ZoNoMDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoMziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoNDiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:CallOperationAction" xmi:id="_ZoNoNTiCEeWlpOnkGDRnCA" name="Call(raiseAlarm)" operation="_ZoQFCTiCEeWlpOnkGDRnCA">
                  <argument xmi:id="_ZoNoNjiCEeWlpOnkGDRnCA" name="Call(raiseAlarm).argument(sensorId)" incoming="_ZoNoMDiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoNziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoODiCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <target xmi:id="_ZoNoOTiCEeWlpOnkGDRnCA" name="Call(raiseAlarm).target" incoming="_ZoNoMTiCEeWlpOnkGDRnCA" type="_ZoQEeziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoOjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoOziCEeWlpOnkGDRnCA" value="1"/>
                  </target>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_ZoNoPDiCEeWlpOnkGDRnCA" name="Collect(Call(raiseAlarm)).inputElement" incoming="_ZoNCATiCEeWlpOnkGDRnCA" outgoing="_ZoNoMTiCEeWlpOnkGDRnCA" regionAsInput="_ZoNoLziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNoPTiCEeWlpOnkGDRnCA" name="Feature(Fork(monitor)@59917217)" outgoing="_ZoNoLjiCEeWlpOnkGDRnCA"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNoPjiCEeWlpOnkGDRnCA" name="Passthru(Fork(reading1)@8107079)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoPziCEeWlpOnkGDRnCA" target="_ZoNoQziCEeWlpOnkGDRnCA" source="_ZoNoQDiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoNoQDiCEeWlpOnkGDRnCA" name="Passthru(Fork(reading1)@8107079).input" incoming="_ZoNoIDiCEeWlpOnkGDRnCA" outgoing="_ZoNoPziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoQTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoQjiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoNoQziCEeWlpOnkGDRnCA" name="Passthru(Fork(reading1)@8107079).output" incoming="_ZoNoPziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoRDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoRTiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNoRjiCEeWlpOnkGDRnCA" name="Value(true)">
              <result xmi:id="_ZoNoRziCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoSDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoSTiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoNoSjiCEeWlpOnkGDRnCA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNoSziCEeWlpOnkGDRnCA" name="Passthru(Fork(reading1)@126e694d)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoTDiCEeWlpOnkGDRnCA" target="_ZoNoUDiCEeWlpOnkGDRnCA" source="_ZoNoTTiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoNoTTiCEeWlpOnkGDRnCA" name="Passthru(Fork(reading1)@126e694d).input" incoming="_ZoNCAjiCEeWlpOnkGDRnCA" outgoing="_ZoNoTDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoTjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoTziCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoNoUDiCEeWlpOnkGDRnCA" name="Passthru(Fork(reading1)@126e694d).output" incoming="_ZoNoTDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoUTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoUjiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_ZoNoUziCEeWlpOnkGDRnCA" body="_ZoNoLTiCEeWlpOnkGDRnCA _ZoNoPjiCEeWlpOnkGDRnCA" bodyOutput="_ZoNoQziCEeWlpOnkGDRnCA" decider="_ZoNoKjiCEeWlpOnkGDRnCA" successorClause="_ZoNoVDiCEeWlpOnkGDRnCA" test="_ZoNoIjiCEeWlpOnkGDRnCA _ZoNoIziCEeWlpOnkGDRnCA"/>
            <clause xmi:id="_ZoNoVDiCEeWlpOnkGDRnCA" body="_ZoNoSziCEeWlpOnkGDRnCA" bodyOutput="_ZoNoUDiCEeWlpOnkGDRnCA" decider="_ZoNoRziCEeWlpOnkGDRnCA" predecessorClause="_ZoNoUziCEeWlpOnkGDRnCA" test="_ZoNoRjiCEeWlpOnkGDRnCA"/>
            <result xmi:id="_ZoNoVTiCEeWlpOnkGDRnCA" name="IfStatement@2ff4ee67.result(reading1)" outgoing="_ZoNB_TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoVjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoVziCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoNoWDiCEeWlpOnkGDRnCA" name="Fork(reading1)" incoming="_ZoNB_TiCEeWlpOnkGDRnCA" outgoing="_ZoNCMjiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ConditionalNode" xmi:id="_ZoNoWTiCEeWlpOnkGDRnCA" name="IfStatement@2e527342" incoming="_ZoNCDTiCEeWlpOnkGDRnCA" outgoing="_ZoNCDjiCEeWlpOnkGDRnCA" isAssured="true" isDeterminate="true">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoWjiCEeWlpOnkGDRnCA" target="_ZoNoeziCEeWlpOnkGDRnCA" source="_ZoNocjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNoWziCEeWlpOnkGDRnCA" target="_ZoNopTiCEeWlpOnkGDRnCA" source="_ZoNopDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoXDiCEeWlpOnkGDRnCA" target="_ZoNopTiCEeWlpOnkGDRnCA" source="_ZoNoiDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNoXTiCEeWlpOnkGDRnCA" target="_ZoNoiziCEeWlpOnkGDRnCA" source="_ZoNopTiCEeWlpOnkGDRnCA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoNoXjiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNoXziCEeWlpOnkGDRnCA" target="_ZoNomjiCEeWlpOnkGDRnCA" source="_ZoNopTiCEeWlpOnkGDRnCA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoNoYDiCEeWlpOnkGDRnCA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoYTiCEeWlpOnkGDRnCA" target="_ZoNopjiCEeWlpOnkGDRnCA" source="_ZoNojTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoYjiCEeWlpOnkGDRnCA" target="_ZoNopjiCEeWlpOnkGDRnCA" source="_ZoNonDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoYziCEeWlpOnkGDRnCA" target="_ZoNoqTiCEeWlpOnkGDRnCA" source="_ZoNopjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoZDiCEeWlpOnkGDRnCA" target="_ZoNoujiCEeWlpOnkGDRnCA" source="_ZoNosTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoZTiCEeWlpOnkGDRnCA" target="_ZoNo1TiCEeWlpOnkGDRnCA" source="_ZoNozDiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNoZjiCEeWlpOnkGDRnCA" name="Call(&lt;=)">
              <argument xmi:id="_ZoNoZziCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(x)" incoming="_ZoNCBTiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoaDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoaTiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <argument xmi:id="_ZoNoajiCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(y)" incoming="_ZoNCBjiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoaziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNobDiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_ZoNobTiCEeWlpOnkGDRnCA" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNobjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNobziCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNocDiCEeWlpOnkGDRnCA" name="ExpressionStatement@16d52f02">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNocTiCEeWlpOnkGDRnCA" target="_ZoNocjiCEeWlpOnkGDRnCA" source="_ZoNodTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoNocjiCEeWlpOnkGDRnCA" name="Fork(condition1)@10686c55" incoming="_ZoNocTiCEeWlpOnkGDRnCA" outgoing="_ZoNoWjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNocziCEeWlpOnkGDRnCA" name="RightHandSide@37a048dd">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNodDiCEeWlpOnkGDRnCA" name="Value(normal)">
                  <result xmi:id="_ZoNodTiCEeWlpOnkGDRnCA" name="Value(normal).result" outgoing="_ZoNocTiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNodjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNodziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_ZoNoeDiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" instance="_ZoQFFDiCEeWlpOnkGDRnCA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNoeTiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition1)@10686c55)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoejiCEeWlpOnkGDRnCA" target="_ZoNofjiCEeWlpOnkGDRnCA" source="_ZoNoeziCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoNoeziCEeWlpOnkGDRnCA" name="Passthru(Fork(condition1)@10686c55).input" incoming="_ZoNoWjiCEeWlpOnkGDRnCA" outgoing="_ZoNoejiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNofDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNofTiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoNofjiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition1)@10686c55).output" incoming="_ZoNoejiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNofziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNogDiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNogTiCEeWlpOnkGDRnCA" name="Call(>)">
              <argument xmi:id="_ZoNogjiCEeWlpOnkGDRnCA" name="Call(>).argument(x)" incoming="_ZoNCBziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNogziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNohDiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <argument xmi:id="_ZoNohTiCEeWlpOnkGDRnCA" name="Call(>).argument(y)" incoming="_ZoNCCDiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNohjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNohziCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_ZoNoiDiCEeWlpOnkGDRnCA" name="Call(>).result(result)" outgoing="_ZoNoXDiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoiTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoijiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNoiziCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@3fe459b.operand2" incoming="_ZoNoXTiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNojDiCEeWlpOnkGDRnCA" target="_ZoNojTiCEeWlpOnkGDRnCA" source="_ZoNolziCEeWlpOnkGDRnCA"/>
              <structuredNodeOutput xmi:id="_ZoNojTiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@3fe459b.operand2.result" incoming="_ZoNojDiCEeWlpOnkGDRnCA" outgoing="_ZoNoYTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNojjiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNojziCEeWlpOnkGDRnCA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNokDiCEeWlpOnkGDRnCA" name="Call(&lt;=)">
                <argument xmi:id="_ZoNokTiCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(x)" incoming="_ZoNCCTiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNokjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNokziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoNolDiCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(y)" incoming="_ZoNCCjiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNolTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoljiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoNolziCEeWlpOnkGDRnCA" name="Call(&lt;=).result(result)" outgoing="_ZoNojDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNomDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNomTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNomjiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@3fe459b.operand3" incoming="_ZoNoXziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNomziCEeWlpOnkGDRnCA" target="_ZoNonDiCEeWlpOnkGDRnCA" source="_ZoNooDiCEeWlpOnkGDRnCA"/>
              <structuredNodeOutput xmi:id="_ZoNonDiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@3fe459b.operand3.result" incoming="_ZoNomziCEeWlpOnkGDRnCA" outgoing="_ZoNoYjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNonTiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNonjiCEeWlpOnkGDRnCA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNonziCEeWlpOnkGDRnCA" name="Value(false)">
                <result xmi:id="_ZoNooDiCEeWlpOnkGDRnCA" name="Value(false).result" outgoing="_ZoNomziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNooTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoojiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoNooziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ZoNopDiCEeWlpOnkGDRnCA" name="Initial(ConditionalLogicalExpression@3fe459b)" outgoing="_ZoNoWziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ZoNopTiCEeWlpOnkGDRnCA" name="Decision(ConditionalLogicalExpression@3fe459b)" incoming="_ZoNoWziCEeWlpOnkGDRnCA _ZoNoXDiCEeWlpOnkGDRnCA" outgoing="_ZoNoXTiCEeWlpOnkGDRnCA _ZoNoXziCEeWlpOnkGDRnCA" decisionInputFlow="_ZoNoXDiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_ZoNopjiCEeWlpOnkGDRnCA" name="Merge(ConditionalLogicalExpression@3fe459b.result)" incoming="_ZoNoYTiCEeWlpOnkGDRnCA _ZoNoYjiCEeWlpOnkGDRnCA" outgoing="_ZoNoYziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNopziCEeWlpOnkGDRnCA" name="Passthru(Merge(ConditionalLogicalExpression@3fe459b.result))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoqDiCEeWlpOnkGDRnCA" target="_ZoNorDiCEeWlpOnkGDRnCA" source="_ZoNoqTiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoNoqTiCEeWlpOnkGDRnCA" name="Passthru(Merge(ConditionalLogicalExpression@3fe459b.result)).input" incoming="_ZoNoYziCEeWlpOnkGDRnCA" outgoing="_ZoNoqDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoqjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoqziCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoNorDiCEeWlpOnkGDRnCA" name="Passthru(Merge(ConditionalLogicalExpression@3fe459b.result)).output" incoming="_ZoNoqDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNorTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNorjiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNorziCEeWlpOnkGDRnCA" name="ExpressionStatement@5628dfb5">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNosDiCEeWlpOnkGDRnCA" target="_ZoNosTiCEeWlpOnkGDRnCA" source="_ZoNotDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoNosTiCEeWlpOnkGDRnCA" name="Fork(condition1)@c382aee" incoming="_ZoNosDiCEeWlpOnkGDRnCA" outgoing="_ZoNoZDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNosjiCEeWlpOnkGDRnCA" name="RightHandSide@3b8a7586">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNosziCEeWlpOnkGDRnCA" name="Value(alert)">
                  <result xmi:id="_ZoNotDiCEeWlpOnkGDRnCA" name="Value(alert).result" outgoing="_ZoNosDiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNotTiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNotjiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_ZoNotziCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" instance="_ZoQFFTiCEeWlpOnkGDRnCA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNouDiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition1)@c382aee)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNouTiCEeWlpOnkGDRnCA" target="_ZoNovTiCEeWlpOnkGDRnCA" source="_ZoNoujiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoNoujiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition1)@c382aee).input" incoming="_ZoNoZDiCEeWlpOnkGDRnCA" outgoing="_ZoNouTiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNouziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNovDiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoNovTiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition1)@c382aee).output" incoming="_ZoNouTiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNovjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNovziCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNowDiCEeWlpOnkGDRnCA" name="Call(>)">
              <argument xmi:id="_ZoNowTiCEeWlpOnkGDRnCA" name="Call(>).argument(x)" incoming="_ZoNCCziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNowjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNowziCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <argument xmi:id="_ZoNoxDiCEeWlpOnkGDRnCA" name="Call(>).argument(y)" incoming="_ZoNCDDiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoxTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoxjiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_ZoNoxziCEeWlpOnkGDRnCA" name="Call(>).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNoyDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNoyTiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNoyjiCEeWlpOnkGDRnCA" name="ExpressionStatement@68d50429">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNoyziCEeWlpOnkGDRnCA" target="_ZoNozDiCEeWlpOnkGDRnCA" source="_ZoNozziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoNozDiCEeWlpOnkGDRnCA" name="Fork(condition1)@69d84dde" incoming="_ZoNoyziCEeWlpOnkGDRnCA" outgoing="_ZoNoZTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNozTiCEeWlpOnkGDRnCA" name="RightHandSide@77e0601b">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNozjiCEeWlpOnkGDRnCA" name="Value(critical)">
                  <result xmi:id="_ZoNozziCEeWlpOnkGDRnCA" name="Value(critical).result" outgoing="_ZoNoyziCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNo0DiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNo0TiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_ZoNo0jiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" instance="_ZoQFFjiCEeWlpOnkGDRnCA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNo0ziCEeWlpOnkGDRnCA" name="Passthru(Fork(condition1)@69d84dde)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNo1DiCEeWlpOnkGDRnCA" target="_ZoNo2DiCEeWlpOnkGDRnCA" source="_ZoNo1TiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoNo1TiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition1)@69d84dde).input" incoming="_ZoNoZTiCEeWlpOnkGDRnCA" outgoing="_ZoNo1DiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNo1jiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNo1ziCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoNo2DiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition1)@69d84dde).output" incoming="_ZoNo1DiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNo2TiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNo2jiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNo2ziCEeWlpOnkGDRnCA" name="Value(true)">
              <result xmi:id="_ZoNo3DiCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNo3TiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNo3jiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoNo3ziCEeWlpOnkGDRnCA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <clause xmi:id="_ZoNo4DiCEeWlpOnkGDRnCA" body="_ZoNocDiCEeWlpOnkGDRnCA _ZoNoeTiCEeWlpOnkGDRnCA" bodyOutput="_ZoNofjiCEeWlpOnkGDRnCA" decider="_ZoNobTiCEeWlpOnkGDRnCA" successorClause="_ZoNo4ziCEeWlpOnkGDRnCA" test="_ZoNoZjiCEeWlpOnkGDRnCA"/>
            <clause xmi:id="_ZoNo4TiCEeWlpOnkGDRnCA" body="_ZoNorziCEeWlpOnkGDRnCA _ZoNouDiCEeWlpOnkGDRnCA" bodyOutput="_ZoNovTiCEeWlpOnkGDRnCA" decider="_ZoNorDiCEeWlpOnkGDRnCA" successorClause="_ZoNo4ziCEeWlpOnkGDRnCA" test="_ZoNogTiCEeWlpOnkGDRnCA _ZoNoiziCEeWlpOnkGDRnCA _ZoNomjiCEeWlpOnkGDRnCA _ZoNopziCEeWlpOnkGDRnCA"/>
            <clause xmi:id="_ZoNo4jiCEeWlpOnkGDRnCA" body="_ZoNoyjiCEeWlpOnkGDRnCA _ZoNo0ziCEeWlpOnkGDRnCA" bodyOutput="_ZoNo2DiCEeWlpOnkGDRnCA" decider="_ZoNoxziCEeWlpOnkGDRnCA" successorClause="_ZoNo4ziCEeWlpOnkGDRnCA" test="_ZoNowDiCEeWlpOnkGDRnCA"/>
            <clause xmi:id="_ZoNo4ziCEeWlpOnkGDRnCA" decider="_ZoNo3DiCEeWlpOnkGDRnCA" predecessorClause="_ZoNo4DiCEeWlpOnkGDRnCA _ZoNo4TiCEeWlpOnkGDRnCA _ZoNo4jiCEeWlpOnkGDRnCA" test="_ZoNo2ziCEeWlpOnkGDRnCA"/>
            <result xmi:id="_ZoNo5DiCEeWlpOnkGDRnCA" name="IfStatement@2e527342.result(condition1)" outgoing="_ZoNCBDiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNo5TiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNo5jiCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoNo5ziCEeWlpOnkGDRnCA" name="Fork(condition1)" incoming="_ZoNCBDiCEeWlpOnkGDRnCA" outgoing="_ZoNCMziCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNo6DiCEeWlpOnkGDRnCA" name="ExpressionStatement@5d31fc7e" incoming="_ZoNCDjiCEeWlpOnkGDRnCA" outgoing="_ZoNCFDiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNo6TiCEeWlpOnkGDRnCA" target="_ZoNo6jiCEeWlpOnkGDRnCA" source="_ZoNo7TiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoNo6jiCEeWlpOnkGDRnCA" name="Fork(reading)@ca50ade" incoming="_ZoNo6TiCEeWlpOnkGDRnCA" outgoing="_ZoNCEDiCEeWlpOnkGDRnCA _ZoNCEjiCEeWlpOnkGDRnCA _ZoNCFjiCEeWlpOnkGDRnCA _ZoNCGDiCEeWlpOnkGDRnCA _ZoNCGjiCEeWlpOnkGDRnCA _ZoNCHDiCEeWlpOnkGDRnCA _ZoNCHjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNo6ziCEeWlpOnkGDRnCA" name="RightHandSide@276c7b4e">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNo7DiCEeWlpOnkGDRnCA" name="Value(500)">
                <result xmi:id="_ZoNo7TiCEeWlpOnkGDRnCA" name="Value(500).result" outgoing="_ZoNo6TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNo7jiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNo7ziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoNo8DiCEeWlpOnkGDRnCA" value="500">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ConditionalNode" xmi:id="_ZoNo8TiCEeWlpOnkGDRnCA" name="IfStatement@782a5129" incoming="_ZoNCFDiCEeWlpOnkGDRnCA" outgoing="_ZoNCIDiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNo8jiCEeWlpOnkGDRnCA" target="_ZoNpCjiCEeWlpOnkGDRnCA" source="_ZoNpATiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNo8ziCEeWlpOnkGDRnCA" target="_ZoNpJTiCEeWlpOnkGDRnCA" source="_ZoNpHDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNo9DiCEeWlpOnkGDRnCA" target="_ZoNpOziCEeWlpOnkGDRnCA" source="_ZoNpMjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNo9TiCEeWlpOnkGDRnCA" name="Call(&lt;=)">
              <argument xmi:id="_ZoNo9jiCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(x)" incoming="_ZoNCEDiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNo9ziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNo-DiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <argument xmi:id="_ZoNo-TiCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(y)" incoming="_ZoNCETiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNo-jiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNo-ziCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_ZoNo_DiCEeWlpOnkGDRnCA" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNo_TiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNo_jiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNo_ziCEeWlpOnkGDRnCA" name="ExpressionStatement@2e3d3ddc">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpADiCEeWlpOnkGDRnCA" target="_ZoNpATiCEeWlpOnkGDRnCA" source="_ZoNpBDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoNpATiCEeWlpOnkGDRnCA" name="Fork(condition2)@22102c51" incoming="_ZoNpADiCEeWlpOnkGDRnCA" outgoing="_ZoNo8jiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpAjiCEeWlpOnkGDRnCA" name="RightHandSide@53cd8b4f">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNpAziCEeWlpOnkGDRnCA" name="Value(normal)">
                  <result xmi:id="_ZoNpBDiCEeWlpOnkGDRnCA" name="Value(normal).result" outgoing="_ZoNpADiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpBTiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpBjiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_ZoNpBziCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" instance="_ZoQFFDiCEeWlpOnkGDRnCA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpCDiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition2)@22102c51)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpCTiCEeWlpOnkGDRnCA" target="_ZoNpDTiCEeWlpOnkGDRnCA" source="_ZoNpCjiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoNpCjiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition2)@22102c51).input" incoming="_ZoNo8jiCEeWlpOnkGDRnCA" outgoing="_ZoNpCTiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpCziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpDDiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoNpDTiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition2)@22102c51).output" incoming="_ZoNpCTiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpDjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpDziCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNpEDiCEeWlpOnkGDRnCA" name="Call(&lt;=)">
              <argument xmi:id="_ZoNpETiCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(x)" incoming="_ZoNCEjiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpEjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpEziCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <argument xmi:id="_ZoNpFDiCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(y)" incoming="_ZoNCEziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpFTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpFjiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_ZoNpFziCEeWlpOnkGDRnCA" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpGDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpGTiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpGjiCEeWlpOnkGDRnCA" name="ExpressionStatement@7b8e49fe">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpGziCEeWlpOnkGDRnCA" target="_ZoNpHDiCEeWlpOnkGDRnCA" source="_ZoNpHziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoNpHDiCEeWlpOnkGDRnCA" name="Fork(condition2)@5897b9e6" incoming="_ZoNpGziCEeWlpOnkGDRnCA" outgoing="_ZoNo8ziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpHTiCEeWlpOnkGDRnCA" name="RightHandSide@512dd87a">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNpHjiCEeWlpOnkGDRnCA" name="Value(alert)">
                  <result xmi:id="_ZoNpHziCEeWlpOnkGDRnCA" name="Value(alert).result" outgoing="_ZoNpGziCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpIDiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpITiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_ZoNpIjiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" instance="_ZoQFFTiCEeWlpOnkGDRnCA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpIziCEeWlpOnkGDRnCA" name="Passthru(Fork(condition2)@5897b9e6)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpJDiCEeWlpOnkGDRnCA" target="_ZoNpKDiCEeWlpOnkGDRnCA" source="_ZoNpJTiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoNpJTiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition2)@5897b9e6).input" incoming="_ZoNo8ziCEeWlpOnkGDRnCA" outgoing="_ZoNpJDiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpJjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpJziCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoNpKDiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition2)@5897b9e6).output" incoming="_ZoNpJDiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpKTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpKjiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNpKziCEeWlpOnkGDRnCA" name="Value(true)">
              <result xmi:id="_ZoNpLDiCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpLTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpLjiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoNpLziCEeWlpOnkGDRnCA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpMDiCEeWlpOnkGDRnCA" name="ExpressionStatement@3d94cb70">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpMTiCEeWlpOnkGDRnCA" target="_ZoNpMjiCEeWlpOnkGDRnCA" source="_ZoNpNTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoNpMjiCEeWlpOnkGDRnCA" name="Fork(condition2)@743b5632" incoming="_ZoNpMTiCEeWlpOnkGDRnCA" outgoing="_ZoNo9DiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpMziCEeWlpOnkGDRnCA" name="RightHandSide@6398283b">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNpNDiCEeWlpOnkGDRnCA" name="Value(critical)">
                  <result xmi:id="_ZoNpNTiCEeWlpOnkGDRnCA" name="Value(critical).result" outgoing="_ZoNpMTiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpNjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpNziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_ZoNpODiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" instance="_ZoQFFjiCEeWlpOnkGDRnCA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpOTiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition2)@743b5632)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpOjiCEeWlpOnkGDRnCA" target="_ZoNpPjiCEeWlpOnkGDRnCA" source="_ZoNpOziCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoNpOziCEeWlpOnkGDRnCA" name="Passthru(Fork(condition2)@743b5632).input" incoming="_ZoNo9DiCEeWlpOnkGDRnCA" outgoing="_ZoNpOjiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpPDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpPTiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoNpPjiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition2)@743b5632).output" incoming="_ZoNpOjiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpPziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpQDiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_ZoNpQTiCEeWlpOnkGDRnCA" body="_ZoNo_ziCEeWlpOnkGDRnCA _ZoNpCDiCEeWlpOnkGDRnCA" bodyOutput="_ZoNpDTiCEeWlpOnkGDRnCA" decider="_ZoNo_DiCEeWlpOnkGDRnCA" successorClause="_ZoNpQjiCEeWlpOnkGDRnCA" test="_ZoNo9TiCEeWlpOnkGDRnCA"/>
            <clause xmi:id="_ZoNpQjiCEeWlpOnkGDRnCA" body="_ZoNpGjiCEeWlpOnkGDRnCA _ZoNpIziCEeWlpOnkGDRnCA" bodyOutput="_ZoNpKDiCEeWlpOnkGDRnCA" decider="_ZoNpFziCEeWlpOnkGDRnCA" predecessorClause="_ZoNpQTiCEeWlpOnkGDRnCA" successorClause="_ZoNpQziCEeWlpOnkGDRnCA" test="_ZoNpEDiCEeWlpOnkGDRnCA"/>
            <clause xmi:id="_ZoNpQziCEeWlpOnkGDRnCA" body="_ZoNpMDiCEeWlpOnkGDRnCA _ZoNpOTiCEeWlpOnkGDRnCA" bodyOutput="_ZoNpPjiCEeWlpOnkGDRnCA" decider="_ZoNpLDiCEeWlpOnkGDRnCA" predecessorClause="_ZoNpQjiCEeWlpOnkGDRnCA" test="_ZoNpKziCEeWlpOnkGDRnCA"/>
            <result xmi:id="_ZoNpRDiCEeWlpOnkGDRnCA" name="IfStatement@782a5129.result(condition2)" outgoing="_ZoNCDziCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpRTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpRjiCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoNpRziCEeWlpOnkGDRnCA" name="Fork(condition2)" incoming="_ZoNCDziCEeWlpOnkGDRnCA" outgoing="_ZoNCNDiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ConditionalNode" xmi:id="_ZoNpSDiCEeWlpOnkGDRnCA" name="IfStatement@22f07b39" incoming="_ZoNCIDiCEeWlpOnkGDRnCA" outgoing="_ZoNCIjiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpSTiCEeWlpOnkGDRnCA" target="_ZoNpdDiCEeWlpOnkGDRnCA" source="_ZoNpaziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNpSjiCEeWlpOnkGDRnCA" target="_ZoNpnjiCEeWlpOnkGDRnCA" source="_ZoNpnTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpSziCEeWlpOnkGDRnCA" target="_ZoNpnjiCEeWlpOnkGDRnCA" source="_ZoNpgTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNpTDiCEeWlpOnkGDRnCA" target="_ZoNphDiCEeWlpOnkGDRnCA" source="_ZoNpnjiCEeWlpOnkGDRnCA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoNpTTiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNpTjiCEeWlpOnkGDRnCA" target="_ZoNpkziCEeWlpOnkGDRnCA" source="_ZoNpnjiCEeWlpOnkGDRnCA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoNpTziCEeWlpOnkGDRnCA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpUDiCEeWlpOnkGDRnCA" target="_ZoNpnziCEeWlpOnkGDRnCA" source="_ZoNphjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpUTiCEeWlpOnkGDRnCA" target="_ZoNpnziCEeWlpOnkGDRnCA" source="_ZoNplTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpUjiCEeWlpOnkGDRnCA" target="_ZoNpojiCEeWlpOnkGDRnCA" source="_ZoNpnziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpUziCEeWlpOnkGDRnCA" target="_ZoNpsziCEeWlpOnkGDRnCA" source="_ZoNpqjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNpVDiCEeWlpOnkGDRnCA" target="_ZoOPRDiCEeWlpOnkGDRnCA" source="_ZoOPQziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpVTiCEeWlpOnkGDRnCA" target="_ZoOPRDiCEeWlpOnkGDRnCA" source="_ZoNpwDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNpVjiCEeWlpOnkGDRnCA" target="_ZoNpwziCEeWlpOnkGDRnCA" source="_ZoOPRDiCEeWlpOnkGDRnCA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoNpVziCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoNpWDiCEeWlpOnkGDRnCA" target="_ZoOPOTiCEeWlpOnkGDRnCA" source="_ZoOPRDiCEeWlpOnkGDRnCA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoNpWTiCEeWlpOnkGDRnCA" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpWjiCEeWlpOnkGDRnCA" target="_ZoOPRTiCEeWlpOnkGDRnCA" source="_ZoNpxTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpWziCEeWlpOnkGDRnCA" target="_ZoOPRTiCEeWlpOnkGDRnCA" source="_ZoOPOziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpXDiCEeWlpOnkGDRnCA" target="_ZoOPSDiCEeWlpOnkGDRnCA" source="_ZoOPRTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpXTiCEeWlpOnkGDRnCA" target="_ZoOPWTiCEeWlpOnkGDRnCA" source="_ZoOPUDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpXjiCEeWlpOnkGDRnCA" target="_ZoOPbziCEeWlpOnkGDRnCA" source="_ZoOPZjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNpXziCEeWlpOnkGDRnCA" name="Call(&lt;=)">
              <argument xmi:id="_ZoNpYDiCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(x)" incoming="_ZoNCFjiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpYTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpYjiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <argument xmi:id="_ZoNpYziCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(y)" incoming="_ZoNCFziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpZDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpZTiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_ZoNpZjiCEeWlpOnkGDRnCA" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpZziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpaDiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpaTiCEeWlpOnkGDRnCA" name="ExpressionStatement@72f7c618">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpajiCEeWlpOnkGDRnCA" target="_ZoNpaziCEeWlpOnkGDRnCA" source="_ZoNpbjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoNpaziCEeWlpOnkGDRnCA" name="Fork(condition3)@846091a" incoming="_ZoNpajiCEeWlpOnkGDRnCA" outgoing="_ZoNpSTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpbDiCEeWlpOnkGDRnCA" name="RightHandSide@2dff8e34">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNpbTiCEeWlpOnkGDRnCA" name="Value(normal)">
                  <result xmi:id="_ZoNpbjiCEeWlpOnkGDRnCA" name="Value(normal).result" outgoing="_ZoNpajiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpbziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpcDiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_ZoNpcTiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" instance="_ZoQFFDiCEeWlpOnkGDRnCA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpcjiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition3)@846091a)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpcziCEeWlpOnkGDRnCA" target="_ZoNpdziCEeWlpOnkGDRnCA" source="_ZoNpdDiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoNpdDiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition3)@846091a).input" incoming="_ZoNpSTiCEeWlpOnkGDRnCA" outgoing="_ZoNpcziCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpdTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpdjiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoNpdziCEeWlpOnkGDRnCA" name="Passthru(Fork(condition3)@846091a).output" incoming="_ZoNpcziCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpeDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpeTiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNpejiCEeWlpOnkGDRnCA" name="Call(>)">
              <argument xmi:id="_ZoNpeziCEeWlpOnkGDRnCA" name="Call(>).argument(x)" incoming="_ZoNCGDiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpfDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpfTiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <argument xmi:id="_ZoNpfjiCEeWlpOnkGDRnCA" name="Call(>).argument(y)" incoming="_ZoNCGTiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpfziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpgDiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_ZoNpgTiCEeWlpOnkGDRnCA" name="Call(>).result(result)" outgoing="_ZoNpSziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpgjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpgziCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNphDiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@4a9e82d0.operand2" incoming="_ZoNpTDiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNphTiCEeWlpOnkGDRnCA" target="_ZoNphjiCEeWlpOnkGDRnCA" source="_ZoNpkDiCEeWlpOnkGDRnCA"/>
              <structuredNodeOutput xmi:id="_ZoNphjiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@4a9e82d0.operand2.result" incoming="_ZoNphTiCEeWlpOnkGDRnCA" outgoing="_ZoNpUDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNphziCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpiDiCEeWlpOnkGDRnCA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNpiTiCEeWlpOnkGDRnCA" name="Call(&lt;=)">
                <argument xmi:id="_ZoNpijiCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(x)" incoming="_ZoNCGjiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpiziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpjDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoNpjTiCEeWlpOnkGDRnCA" name="Call(&lt;=).argument(y)" incoming="_ZoNCGziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpjjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpjziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoNpkDiCEeWlpOnkGDRnCA" name="Call(&lt;=).result(result)" outgoing="_ZoNphTiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpkTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpkjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpkziCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@4a9e82d0.operand3" incoming="_ZoNpTjiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNplDiCEeWlpOnkGDRnCA" target="_ZoNplTiCEeWlpOnkGDRnCA" source="_ZoNpmTiCEeWlpOnkGDRnCA"/>
              <structuredNodeOutput xmi:id="_ZoNplTiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@4a9e82d0.operand3.result" incoming="_ZoNplDiCEeWlpOnkGDRnCA" outgoing="_ZoNpUTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpljiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNplziCEeWlpOnkGDRnCA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNpmDiCEeWlpOnkGDRnCA" name="Value(false)">
                <result xmi:id="_ZoNpmTiCEeWlpOnkGDRnCA" name="Value(false).result" outgoing="_ZoNplDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpmjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpmziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoNpnDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ZoNpnTiCEeWlpOnkGDRnCA" name="Initial(ConditionalLogicalExpression@4a9e82d0)" outgoing="_ZoNpSjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ZoNpnjiCEeWlpOnkGDRnCA" name="Decision(ConditionalLogicalExpression@4a9e82d0)" incoming="_ZoNpSjiCEeWlpOnkGDRnCA _ZoNpSziCEeWlpOnkGDRnCA" outgoing="_ZoNpTDiCEeWlpOnkGDRnCA _ZoNpTjiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoNpSziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_ZoNpnziCEeWlpOnkGDRnCA" name="Merge(ConditionalLogicalExpression@4a9e82d0.result)" incoming="_ZoNpUDiCEeWlpOnkGDRnCA _ZoNpUTiCEeWlpOnkGDRnCA" outgoing="_ZoNpUjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpoDiCEeWlpOnkGDRnCA" name="Passthru(Merge(ConditionalLogicalExpression@4a9e82d0.result))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpoTiCEeWlpOnkGDRnCA" target="_ZoNppTiCEeWlpOnkGDRnCA" source="_ZoNpojiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoNpojiCEeWlpOnkGDRnCA" name="Passthru(Merge(ConditionalLogicalExpression@4a9e82d0.result)).input" incoming="_ZoNpUjiCEeWlpOnkGDRnCA" outgoing="_ZoNpoTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpoziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNppDiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoNppTiCEeWlpOnkGDRnCA" name="Passthru(Merge(ConditionalLogicalExpression@4a9e82d0.result)).output" incoming="_ZoNpoTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNppjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNppziCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpqDiCEeWlpOnkGDRnCA" name="ExpressionStatement@1ac82b81">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpqTiCEeWlpOnkGDRnCA" target="_ZoNpqjiCEeWlpOnkGDRnCA" source="_ZoNprTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoNpqjiCEeWlpOnkGDRnCA" name="Fork(condition3)@56b50ca4" incoming="_ZoNpqTiCEeWlpOnkGDRnCA" outgoing="_ZoNpUziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpqziCEeWlpOnkGDRnCA" name="RightHandSide@8510f75">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoNprDiCEeWlpOnkGDRnCA" name="Value(alert)">
                  <result xmi:id="_ZoNprTiCEeWlpOnkGDRnCA" name="Value(alert).result" outgoing="_ZoNpqTiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNprjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNprziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_ZoNpsDiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" instance="_ZoQFFTiCEeWlpOnkGDRnCA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpsTiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition3)@56b50ca4)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpsjiCEeWlpOnkGDRnCA" target="_ZoNptjiCEeWlpOnkGDRnCA" source="_ZoNpsziCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoNpsziCEeWlpOnkGDRnCA" name="Passthru(Fork(condition3)@56b50ca4).input" incoming="_ZoNpUziCEeWlpOnkGDRnCA" outgoing="_ZoNpsjiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNptDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNptTiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoNptjiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition3)@56b50ca4).output" incoming="_ZoNpsjiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNptziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpuDiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNpuTiCEeWlpOnkGDRnCA" name="Call(>)">
              <argument xmi:id="_ZoNpujiCEeWlpOnkGDRnCA" name="Call(>).argument(x)" incoming="_ZoNCHDiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpuziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpvDiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <argument xmi:id="_ZoNpvTiCEeWlpOnkGDRnCA" name="Call(>).argument(y)" incoming="_ZoNCHTiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpvjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpvziCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_ZoNpwDiCEeWlpOnkGDRnCA" name="Call(>).result(result)" outgoing="_ZoNpVTiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpwTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpwjiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-gt"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoNpwziCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@3b733d13.operand2" incoming="_ZoNpVjiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoNpxDiCEeWlpOnkGDRnCA" target="_ZoNpxTiCEeWlpOnkGDRnCA" source="_ZoOPNjiCEeWlpOnkGDRnCA"/>
              <structuredNodeOutput xmi:id="_ZoNpxTiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@3b733d13.operand2.result" incoming="_ZoNpxDiCEeWlpOnkGDRnCA" outgoing="_ZoNpWjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoNpxjiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoNpxziCEeWlpOnkGDRnCA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoNpyDiCEeWlpOnkGDRnCA" name="Call(&lt;)">
                <argument xmi:id="_ZoOPMDiCEeWlpOnkGDRnCA" name="Call(&lt;).argument(x)" incoming="_ZoNCHjiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPMTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPMjiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoOPMziCEeWlpOnkGDRnCA" name="Call(&lt;).argument(y)" incoming="_ZoNCHziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPNDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPNTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoOPNjiCEeWlpOnkGDRnCA" name="Call(&lt;).result(result)" outgoing="_ZoNpxDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPNziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPODiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-lt"/>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPOTiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@3b733d13.operand3" incoming="_ZoNpWDiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPOjiCEeWlpOnkGDRnCA" target="_ZoOPOziCEeWlpOnkGDRnCA" source="_ZoOPPziCEeWlpOnkGDRnCA"/>
              <structuredNodeOutput xmi:id="_ZoOPOziCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@3b733d13.operand3.result" incoming="_ZoOPOjiCEeWlpOnkGDRnCA" outgoing="_ZoNpWziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPPDiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPPTiCEeWlpOnkGDRnCA" value="*"/>
              </structuredNodeOutput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOPPjiCEeWlpOnkGDRnCA" name="Value(false)">
                <result xmi:id="_ZoOPPziCEeWlpOnkGDRnCA" name="Value(false).result" outgoing="_ZoOPOjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPQDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPQTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoOPQjiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ZoOPQziCEeWlpOnkGDRnCA" name="Initial(ConditionalLogicalExpression@3b733d13)" outgoing="_ZoNpVDiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ZoOPRDiCEeWlpOnkGDRnCA" name="Decision(ConditionalLogicalExpression@3b733d13)" incoming="_ZoNpVDiCEeWlpOnkGDRnCA _ZoNpVTiCEeWlpOnkGDRnCA" outgoing="_ZoNpVjiCEeWlpOnkGDRnCA _ZoNpWDiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoNpVTiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:MergeNode" xmi:id="_ZoOPRTiCEeWlpOnkGDRnCA" name="Merge(ConditionalLogicalExpression@3b733d13.result)" incoming="_ZoNpWjiCEeWlpOnkGDRnCA _ZoNpWziCEeWlpOnkGDRnCA" outgoing="_ZoNpXDiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPRjiCEeWlpOnkGDRnCA" name="Passthru(Merge(ConditionalLogicalExpression@3b733d13.result))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPRziCEeWlpOnkGDRnCA" target="_ZoOPSziCEeWlpOnkGDRnCA" source="_ZoOPSDiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoOPSDiCEeWlpOnkGDRnCA" name="Passthru(Merge(ConditionalLogicalExpression@3b733d13.result)).input" incoming="_ZoNpXDiCEeWlpOnkGDRnCA" outgoing="_ZoOPRziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPSTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPSjiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoOPSziCEeWlpOnkGDRnCA" name="Passthru(Merge(ConditionalLogicalExpression@3b733d13.result)).output" incoming="_ZoOPRziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPTDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPTTiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPTjiCEeWlpOnkGDRnCA" name="ExpressionStatement@2bfc34d3">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPTziCEeWlpOnkGDRnCA" target="_ZoOPUDiCEeWlpOnkGDRnCA" source="_ZoOPUziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoOPUDiCEeWlpOnkGDRnCA" name="Fork(condition3)@5fa7b9d1" incoming="_ZoOPTziCEeWlpOnkGDRnCA" outgoing="_ZoNpXTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPUTiCEeWlpOnkGDRnCA" name="RightHandSide@7c987966">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOPUjiCEeWlpOnkGDRnCA" name="Value(critical)">
                  <result xmi:id="_ZoOPUziCEeWlpOnkGDRnCA" name="Value(critical).result" outgoing="_ZoOPTziCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPVDiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPVTiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_ZoOPVjiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" instance="_ZoQFFjiCEeWlpOnkGDRnCA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPVziCEeWlpOnkGDRnCA" name="Passthru(Fork(condition3)@5fa7b9d1)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPWDiCEeWlpOnkGDRnCA" target="_ZoOPXDiCEeWlpOnkGDRnCA" source="_ZoOPWTiCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoOPWTiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition3)@5fa7b9d1).input" incoming="_ZoNpXTiCEeWlpOnkGDRnCA" outgoing="_ZoOPWDiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPWjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPWziCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoOPXDiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition3)@5fa7b9d1).output" incoming="_ZoOPWDiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPXTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPXjiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOPXziCEeWlpOnkGDRnCA" name="Value(true)">
              <result xmi:id="_ZoOPYDiCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPYTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPYjiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoOPYziCEeWlpOnkGDRnCA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPZDiCEeWlpOnkGDRnCA" name="ExpressionStatement@170cc552">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPZTiCEeWlpOnkGDRnCA" target="_ZoOPZjiCEeWlpOnkGDRnCA" source="_ZoOPaTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoOPZjiCEeWlpOnkGDRnCA" name="Fork(condition3)@6e838e66" incoming="_ZoOPZTiCEeWlpOnkGDRnCA" outgoing="_ZoNpXjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPZziCEeWlpOnkGDRnCA" name="RightHandSide@7efa0338">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOPaDiCEeWlpOnkGDRnCA" name="Value(error)">
                  <result xmi:id="_ZoOPaTiCEeWlpOnkGDRnCA" name="Value(error).result" outgoing="_ZoOPZTiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPajiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPaziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:InstanceValue" xmi:id="_ZoOPbDiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" instance="_ZoQFFziCEeWlpOnkGDRnCA"/>
                </node>
              </node>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPbTiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition3)@6e838e66)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPbjiCEeWlpOnkGDRnCA" target="_ZoOPcjiCEeWlpOnkGDRnCA" source="_ZoOPbziCEeWlpOnkGDRnCA"/>
              <structuredNodeInput xmi:id="_ZoOPbziCEeWlpOnkGDRnCA" name="Passthru(Fork(condition3)@6e838e66).input" incoming="_ZoNpXjiCEeWlpOnkGDRnCA" outgoing="_ZoOPbjiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPcDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPcTiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_ZoOPcjiCEeWlpOnkGDRnCA" name="Passthru(Fork(condition3)@6e838e66).output" incoming="_ZoOPbjiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPcziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPdDiCEeWlpOnkGDRnCA" value="1"/>
              </structuredNodeOutput>
            </node>
            <clause xmi:id="_ZoOPdTiCEeWlpOnkGDRnCA" body="_ZoNpaTiCEeWlpOnkGDRnCA _ZoNpcjiCEeWlpOnkGDRnCA" bodyOutput="_ZoNpdziCEeWlpOnkGDRnCA" decider="_ZoNpZjiCEeWlpOnkGDRnCA" successorClause="_ZoOPdjiCEeWlpOnkGDRnCA _ZoOPdziCEeWlpOnkGDRnCA" test="_ZoNpXziCEeWlpOnkGDRnCA"/>
            <clause xmi:id="_ZoOPdjiCEeWlpOnkGDRnCA" body="_ZoNpqDiCEeWlpOnkGDRnCA _ZoNpsTiCEeWlpOnkGDRnCA" bodyOutput="_ZoNptjiCEeWlpOnkGDRnCA" decider="_ZoNppTiCEeWlpOnkGDRnCA" predecessorClause="_ZoOPdTiCEeWlpOnkGDRnCA" successorClause="_ZoOPeDiCEeWlpOnkGDRnCA" test="_ZoNpejiCEeWlpOnkGDRnCA _ZoNphDiCEeWlpOnkGDRnCA _ZoNpkziCEeWlpOnkGDRnCA _ZoNpoDiCEeWlpOnkGDRnCA"/>
            <clause xmi:id="_ZoOPdziCEeWlpOnkGDRnCA" body="_ZoOPTjiCEeWlpOnkGDRnCA _ZoOPVziCEeWlpOnkGDRnCA" bodyOutput="_ZoOPXDiCEeWlpOnkGDRnCA" decider="_ZoOPSziCEeWlpOnkGDRnCA" predecessorClause="_ZoOPdTiCEeWlpOnkGDRnCA" successorClause="_ZoOPeDiCEeWlpOnkGDRnCA" test="_ZoNpuTiCEeWlpOnkGDRnCA _ZoNpwziCEeWlpOnkGDRnCA _ZoOPOTiCEeWlpOnkGDRnCA _ZoOPRjiCEeWlpOnkGDRnCA"/>
            <clause xmi:id="_ZoOPeDiCEeWlpOnkGDRnCA" body="_ZoOPZDiCEeWlpOnkGDRnCA _ZoOPbTiCEeWlpOnkGDRnCA" bodyOutput="_ZoOPcjiCEeWlpOnkGDRnCA" decider="_ZoOPYDiCEeWlpOnkGDRnCA" predecessorClause="_ZoOPdjiCEeWlpOnkGDRnCA _ZoOPdziCEeWlpOnkGDRnCA" test="_ZoOPXziCEeWlpOnkGDRnCA"/>
            <result xmi:id="_ZoOPeTiCEeWlpOnkGDRnCA" name="IfStatement@22f07b39.result(condition3)" outgoing="_ZoNCFTiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPejiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPeziCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoOPfDiCEeWlpOnkGDRnCA" name="Fork(condition3)" incoming="_ZoNCFTiCEeWlpOnkGDRnCA" outgoing="_ZoNCNTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPfTiCEeWlpOnkGDRnCA" name="SwitchStatement@6b2625f3" incoming="_ZoNCIjiCEeWlpOnkGDRnCA" outgoing="_ZoNCJziCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPfjiCEeWlpOnkGDRnCA" target="_ZoOPwTiCEeWlpOnkGDRnCA" source="_ZoOPvjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoOPfziCEeWlpOnkGDRnCA" target="_ZoOPgDiCEeWlpOnkGDRnCA" source="_ZoOPwjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_ZoOPgDiCEeWlpOnkGDRnCA" name="Conditional(SwitchStatement@6b2625f3)" incoming="_ZoOPfziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPgTiCEeWlpOnkGDRnCA" target="_ZoOPjDiCEeWlpOnkGDRnCA" source="_ZoOPhTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPgjiCEeWlpOnkGDRnCA" target="_ZoOPkjiCEeWlpOnkGDRnCA" source="_ZoOPhziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPgziCEeWlpOnkGDRnCA" target="_ZoOPoDiCEeWlpOnkGDRnCA" source="_ZoOPlziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPhDiCEeWlpOnkGDRnCA" target="_ZoOPtjiCEeWlpOnkGDRnCA" source="_ZoOPrTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoOPhTiCEeWlpOnkGDRnCA" name="Fork(Fork(year)@33b23395)" incoming="_ZoNCITiCEeWlpOnkGDRnCA" outgoing="_ZoOPgTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOPhjiCEeWlpOnkGDRnCA" name="Value(2012)">
                <result xmi:id="_ZoOPhziCEeWlpOnkGDRnCA" name="Value(2012).result" outgoing="_ZoOPgjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPiDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPiTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoOPijiCEeWlpOnkGDRnCA" value="2012">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoOPiziCEeWlpOnkGDRnCA" name="Test(Case(Value(2012).result))">
                <first xmi:id="_ZoOPjDiCEeWlpOnkGDRnCA" name="Test(Case(Value(2012).result)).first" incoming="_ZoOPgTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPjTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPjjiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoOPjziCEeWlpOnkGDRnCA" name="Test(Case(Value(2012).result)).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPkDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPkTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoOPkjiCEeWlpOnkGDRnCA" name="Test(Case(Value(2012).result)).second" incoming="_ZoOPgjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPkziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPlDiCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPlTiCEeWlpOnkGDRnCA" name="ExpressionStatement@2aacc734">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPljiCEeWlpOnkGDRnCA" target="_ZoOPlziCEeWlpOnkGDRnCA" source="_ZoOPmjiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ZoOPlziCEeWlpOnkGDRnCA" name="Fork(month)@35d3b18e" incoming="_ZoOPljiCEeWlpOnkGDRnCA" outgoing="_ZoOPgziCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPmDiCEeWlpOnkGDRnCA" name="RightHandSide@5d2dfd3d">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOPmTiCEeWlpOnkGDRnCA" name="Value(2)">
                    <result xmi:id="_ZoOPmjiCEeWlpOnkGDRnCA" name="Value(2).result" outgoing="_ZoOPljiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPmziCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPnDiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoOPnTiCEeWlpOnkGDRnCA" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPnjiCEeWlpOnkGDRnCA" name="Passthru(Fork(month)@35d3b18e)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPnziCEeWlpOnkGDRnCA" target="_ZoOPoziCEeWlpOnkGDRnCA" source="_ZoOPoDiCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoOPoDiCEeWlpOnkGDRnCA" name="Passthru(Fork(month)@35d3b18e).input" incoming="_ZoOPgziCEeWlpOnkGDRnCA" outgoing="_ZoOPnziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPoTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPojiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoOPoziCEeWlpOnkGDRnCA" name="Passthru(Fork(month)@35d3b18e).output" incoming="_ZoOPnziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPpDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPpTiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOPpjiCEeWlpOnkGDRnCA" name="Value(true)">
                <result xmi:id="_ZoOPpziCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPqDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPqTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoOPqjiCEeWlpOnkGDRnCA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPqziCEeWlpOnkGDRnCA" name="ExpressionStatement@39d0b073">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPrDiCEeWlpOnkGDRnCA" target="_ZoOPrTiCEeWlpOnkGDRnCA" source="_ZoOPsDiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ZoOPrTiCEeWlpOnkGDRnCA" name="Fork(month)@7aec21e9" incoming="_ZoOPrDiCEeWlpOnkGDRnCA" outgoing="_ZoOPhDiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPrjiCEeWlpOnkGDRnCA" name="RightHandSide@24a6870b">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOPrziCEeWlpOnkGDRnCA" name="Value(3)">
                    <result xmi:id="_ZoOPsDiCEeWlpOnkGDRnCA" name="Value(3).result" outgoing="_ZoOPrDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPsTiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPsjiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoOPsziCEeWlpOnkGDRnCA" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPtDiCEeWlpOnkGDRnCA" name="Passthru(Fork(month)@7aec21e9)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPtTiCEeWlpOnkGDRnCA" target="_ZoOPuTiCEeWlpOnkGDRnCA" source="_ZoOPtjiCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoOPtjiCEeWlpOnkGDRnCA" name="Passthru(Fork(month)@7aec21e9).input" incoming="_ZoOPhDiCEeWlpOnkGDRnCA" outgoing="_ZoOPtTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPtziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPuDiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoOPuTiCEeWlpOnkGDRnCA" name="Passthru(Fork(month)@7aec21e9).output" incoming="_ZoOPtTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPujiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPuziCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_ZoOPvDiCEeWlpOnkGDRnCA" body="_ZoOPlTiCEeWlpOnkGDRnCA _ZoOPnjiCEeWlpOnkGDRnCA" bodyOutput="_ZoOPoziCEeWlpOnkGDRnCA" decider="_ZoOPjziCEeWlpOnkGDRnCA" successorClause="_ZoOPvTiCEeWlpOnkGDRnCA" test="_ZoOPhjiCEeWlpOnkGDRnCA _ZoOPiziCEeWlpOnkGDRnCA"/>
              <clause xmi:id="_ZoOPvTiCEeWlpOnkGDRnCA" body="_ZoOPqziCEeWlpOnkGDRnCA _ZoOPtDiCEeWlpOnkGDRnCA" bodyOutput="_ZoOPuTiCEeWlpOnkGDRnCA" decider="_ZoOPpziCEeWlpOnkGDRnCA" predecessorClause="_ZoOPvDiCEeWlpOnkGDRnCA" test="_ZoOPpjiCEeWlpOnkGDRnCA"/>
              <result xmi:id="_ZoOPvjiCEeWlpOnkGDRnCA" name="Conditional(SwitchStatement@6b2625f3).result(month)" outgoing="_ZoOPfjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOPvziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOPwDiCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoOPwTiCEeWlpOnkGDRnCA" name="Fork(month)" incoming="_ZoOPfjiCEeWlpOnkGDRnCA" outgoing="_ZoNCIziCEeWlpOnkGDRnCA _ZoNCNziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPwjiCEeWlpOnkGDRnCA" name="Switch((SwitchStatement@6b2625f3)" outgoing="_ZoOPfziCEeWlpOnkGDRnCA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOPwziCEeWlpOnkGDRnCA" name="SwitchStatement@11f3d7df" incoming="_ZoNCJziCEeWlpOnkGDRnCA" outgoing="_ZoNCKDiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPxDiCEeWlpOnkGDRnCA" target="_ZoO3sjiCEeWlpOnkGDRnCA" source="_ZoO3rziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoOPxTiCEeWlpOnkGDRnCA" target="_ZoOPxjiCEeWlpOnkGDRnCA" source="_ZoO3sziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_ZoOPxjiCEeWlpOnkGDRnCA" name="Conditional(SwitchStatement@11f3d7df)" incoming="_ZoOPxTiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPxziCEeWlpOnkGDRnCA" target="_ZoOP_jiCEeWlpOnkGDRnCA" source="_ZoOP9ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPyDiCEeWlpOnkGDRnCA" target="_ZoOQBDiCEeWlpOnkGDRnCA" source="_ZoOP-TiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPyTiCEeWlpOnkGDRnCA" target="_ZoOQDTiCEeWlpOnkGDRnCA" source="_ZoOP9ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPyjiCEeWlpOnkGDRnCA" target="_ZoOQEziCEeWlpOnkGDRnCA" source="_ZoOQCDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPyziCEeWlpOnkGDRnCA" target="_ZoOQFziCEeWlpOnkGDRnCA" source="_ZoOQATiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPzDiCEeWlpOnkGDRnCA" target="_ZoOQGjiCEeWlpOnkGDRnCA" source="_ZoOQEDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPzTiCEeWlpOnkGDRnCA" target="_ZoOQJjiCEeWlpOnkGDRnCA" source="_ZoOP9ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPzjiCEeWlpOnkGDRnCA" target="_ZoOQLDiCEeWlpOnkGDRnCA" source="_ZoOQITiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOPzziCEeWlpOnkGDRnCA" target="_ZoOQMDiCEeWlpOnkGDRnCA" source="_ZoOQHTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP0DiCEeWlpOnkGDRnCA" target="_ZoOQMziCEeWlpOnkGDRnCA" source="_ZoOQKTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP0TiCEeWlpOnkGDRnCA" target="_ZoOQPziCEeWlpOnkGDRnCA" source="_ZoOP9ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP0jiCEeWlpOnkGDRnCA" target="_ZoOQRTiCEeWlpOnkGDRnCA" source="_ZoOQOjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP0ziCEeWlpOnkGDRnCA" target="_ZoOQSTiCEeWlpOnkGDRnCA" source="_ZoOQNjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP1DiCEeWlpOnkGDRnCA" target="_ZoOQTDiCEeWlpOnkGDRnCA" source="_ZoOQQjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP1TiCEeWlpOnkGDRnCA" target="_ZoOQWDiCEeWlpOnkGDRnCA" source="_ZoOP9ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP1jiCEeWlpOnkGDRnCA" target="_ZoOQXjiCEeWlpOnkGDRnCA" source="_ZoOQUziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP1ziCEeWlpOnkGDRnCA" target="_ZoOQYjiCEeWlpOnkGDRnCA" source="_ZoOQTziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP2DiCEeWlpOnkGDRnCA" target="_ZoOQZTiCEeWlpOnkGDRnCA" source="_ZoOQWziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP2TiCEeWlpOnkGDRnCA" target="_ZoOQcTiCEeWlpOnkGDRnCA" source="_ZoOP9ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP2jiCEeWlpOnkGDRnCA" target="_ZoOQdziCEeWlpOnkGDRnCA" source="_ZoOQbDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP2ziCEeWlpOnkGDRnCA" target="_ZoOQeziCEeWlpOnkGDRnCA" source="_ZoOQaDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP3DiCEeWlpOnkGDRnCA" target="_ZoOQfjiCEeWlpOnkGDRnCA" source="_ZoOQdDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP3TiCEeWlpOnkGDRnCA" target="_ZoOQijiCEeWlpOnkGDRnCA" source="_ZoOP9ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP3jiCEeWlpOnkGDRnCA" target="_ZoOQkDiCEeWlpOnkGDRnCA" source="_ZoOQhTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP3ziCEeWlpOnkGDRnCA" target="_ZoOQlDiCEeWlpOnkGDRnCA" source="_ZoOQgTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP4DiCEeWlpOnkGDRnCA" target="_ZoOQlziCEeWlpOnkGDRnCA" source="_ZoOQjTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP4TiCEeWlpOnkGDRnCA" target="_ZoOQqDiCEeWlpOnkGDRnCA" source="_ZoOQnziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP4jiCEeWlpOnkGDRnCA" target="_ZoOQtDiCEeWlpOnkGDRnCA" source="_ZoOP9ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP4ziCEeWlpOnkGDRnCA" target="_ZoOQujiCEeWlpOnkGDRnCA" source="_ZoOQrziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP5DiCEeWlpOnkGDRnCA" target="_ZoO2QDiCEeWlpOnkGDRnCA" source="_ZoOP9ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP5TiCEeWlpOnkGDRnCA" target="_ZoO2RjiCEeWlpOnkGDRnCA" source="_ZoOQvjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP5jiCEeWlpOnkGDRnCA" target="_ZoO2SjiCEeWlpOnkGDRnCA" source="_ZoOQtziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP5ziCEeWlpOnkGDRnCA" target="_ZoO2TTiCEeWlpOnkGDRnCA" source="_ZoO2QziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP6DiCEeWlpOnkGDRnCA" target="_ZoO2WTiCEeWlpOnkGDRnCA" source="_ZoOP9ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP6TiCEeWlpOnkGDRnCA" target="_ZoO2XziCEeWlpOnkGDRnCA" source="_ZoO2VDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP6jiCEeWlpOnkGDRnCA" target="_ZoO2YziCEeWlpOnkGDRnCA" source="_ZoO2UDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP6ziCEeWlpOnkGDRnCA" target="_ZoO2ZjiCEeWlpOnkGDRnCA" source="_ZoO2XDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP7DiCEeWlpOnkGDRnCA" target="_ZoO2cjiCEeWlpOnkGDRnCA" source="_ZoOP9ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP7TiCEeWlpOnkGDRnCA" target="_ZoO2eDiCEeWlpOnkGDRnCA" source="_ZoO2bTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP7jiCEeWlpOnkGDRnCA" target="_ZoO2fDiCEeWlpOnkGDRnCA" source="_ZoO2aTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP7ziCEeWlpOnkGDRnCA" target="_ZoO2fziCEeWlpOnkGDRnCA" source="_ZoO2dTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP8DiCEeWlpOnkGDRnCA" target="_ZoO2kDiCEeWlpOnkGDRnCA" source="_ZoO2hziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP8TiCEeWlpOnkGDRnCA" target="_ZoO2nDiCEeWlpOnkGDRnCA" source="_ZoOP9ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP8jiCEeWlpOnkGDRnCA" target="_ZoO2ojiCEeWlpOnkGDRnCA" source="_ZoO2lziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP8ziCEeWlpOnkGDRnCA" target="_ZoO3fDiCEeWlpOnkGDRnCA" source="_ZoO3eTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP9DiCEeWlpOnkGDRnCA" target="_ZoO3fziCEeWlpOnkGDRnCA" source="_ZoO3fDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoOP9TiCEeWlpOnkGDRnCA" target="_ZoO3mjiCEeWlpOnkGDRnCA" source="_ZoO3ijiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOP9jiCEeWlpOnkGDRnCA" target="_ZoO3pTiCEeWlpOnkGDRnCA" source="_ZoO3nDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoOP9ziCEeWlpOnkGDRnCA" name="Fork(Fork(month))" incoming="_ZoNCIziCEeWlpOnkGDRnCA" outgoing="_ZoOPxziCEeWlpOnkGDRnCA _ZoOPyTiCEeWlpOnkGDRnCA _ZoOPzTiCEeWlpOnkGDRnCA _ZoOP0TiCEeWlpOnkGDRnCA _ZoOP1TiCEeWlpOnkGDRnCA _ZoOP2TiCEeWlpOnkGDRnCA _ZoOP3TiCEeWlpOnkGDRnCA _ZoOP4jiCEeWlpOnkGDRnCA _ZoOP5DiCEeWlpOnkGDRnCA _ZoOP6DiCEeWlpOnkGDRnCA _ZoOP7DiCEeWlpOnkGDRnCA _ZoOP8TiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOP-DiCEeWlpOnkGDRnCA" name="Value(1)">
                <result xmi:id="_ZoOP-TiCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_ZoOPyDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOP-jiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOP-ziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoOP_DiCEeWlpOnkGDRnCA" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoOP_TiCEeWlpOnkGDRnCA" name="Test(Case(Value(1).result))">
                <first xmi:id="_ZoOP_jiCEeWlpOnkGDRnCA" name="Test(Case(Value(1).result)).first" incoming="_ZoOPxziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOP_ziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQADiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoOQATiCEeWlpOnkGDRnCA" name="Test(Case(Value(1).result)).result" outgoing="_ZoOPyziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQAjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQAziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoOQBDiCEeWlpOnkGDRnCA" name="Test(Case(Value(1).result)).second" incoming="_ZoOPyDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQBTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQBjiCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOQBziCEeWlpOnkGDRnCA" name="Value(3)">
                <result xmi:id="_ZoOQCDiCEeWlpOnkGDRnCA" name="Value(3).result" outgoing="_ZoOPyjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQCTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQCjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoOQCziCEeWlpOnkGDRnCA" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoOQDDiCEeWlpOnkGDRnCA" name="Test(Case(Value(3).result))">
                <first xmi:id="_ZoOQDTiCEeWlpOnkGDRnCA" name="Test(Case(Value(3).result)).first" incoming="_ZoOPyTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQDjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQDziCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoOQEDiCEeWlpOnkGDRnCA" name="Test(Case(Value(3).result)).result" outgoing="_ZoOPzDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQETiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQEjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoOQEziCEeWlpOnkGDRnCA" name="Test(Case(Value(3).result)).second" incoming="_ZoOPyjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQFDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQFTiCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoOQFjiCEeWlpOnkGDRnCA" name="Call(Or)">
                <argument xmi:id="_ZoOQFziCEeWlpOnkGDRnCA" name="Call(Or).argument(x)" incoming="_ZoOPyziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQGDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQGTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoOQGjiCEeWlpOnkGDRnCA" name="Call(Or).argument(y)" incoming="_ZoOPzDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQGziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQHDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoOQHTiCEeWlpOnkGDRnCA" name="Call(Or).result(result)" outgoing="_ZoOPzziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQHjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQHziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOQIDiCEeWlpOnkGDRnCA" name="Value(5)">
                <result xmi:id="_ZoOQITiCEeWlpOnkGDRnCA" name="Value(5).result" outgoing="_ZoOPzjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQIjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQIziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoOQJDiCEeWlpOnkGDRnCA" value="5">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoOQJTiCEeWlpOnkGDRnCA" name="Test(Case(Value(5).result))">
                <first xmi:id="_ZoOQJjiCEeWlpOnkGDRnCA" name="Test(Case(Value(5).result)).first" incoming="_ZoOPzTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQJziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQKDiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoOQKTiCEeWlpOnkGDRnCA" name="Test(Case(Value(5).result)).result" outgoing="_ZoOP0DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQKjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQKziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoOQLDiCEeWlpOnkGDRnCA" name="Test(Case(Value(5).result)).second" incoming="_ZoOPzjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQLTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQLjiCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoOQLziCEeWlpOnkGDRnCA" name="Call(Or)">
                <argument xmi:id="_ZoOQMDiCEeWlpOnkGDRnCA" name="Call(Or).argument(x)" incoming="_ZoOPzziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQMTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQMjiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoOQMziCEeWlpOnkGDRnCA" name="Call(Or).argument(y)" incoming="_ZoOP0DiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQNDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQNTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoOQNjiCEeWlpOnkGDRnCA" name="Call(Or).result(result)" outgoing="_ZoOP0ziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQNziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQODiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOQOTiCEeWlpOnkGDRnCA" name="Value(7)">
                <result xmi:id="_ZoOQOjiCEeWlpOnkGDRnCA" name="Value(7).result" outgoing="_ZoOP0jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQOziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQPDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoOQPTiCEeWlpOnkGDRnCA" value="7">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoOQPjiCEeWlpOnkGDRnCA" name="Test(Case(Value(7).result))">
                <first xmi:id="_ZoOQPziCEeWlpOnkGDRnCA" name="Test(Case(Value(7).result)).first" incoming="_ZoOP0TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQQDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQQTiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoOQQjiCEeWlpOnkGDRnCA" name="Test(Case(Value(7).result)).result" outgoing="_ZoOP1DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQQziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQRDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoOQRTiCEeWlpOnkGDRnCA" name="Test(Case(Value(7).result)).second" incoming="_ZoOP0jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQRjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQRziCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoOQSDiCEeWlpOnkGDRnCA" name="Call(Or)">
                <argument xmi:id="_ZoOQSTiCEeWlpOnkGDRnCA" name="Call(Or).argument(x)" incoming="_ZoOP0ziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQSjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQSziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoOQTDiCEeWlpOnkGDRnCA" name="Call(Or).argument(y)" incoming="_ZoOP1DiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQTTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQTjiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoOQTziCEeWlpOnkGDRnCA" name="Call(Or).result(result)" outgoing="_ZoOP1ziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQUDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQUTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOQUjiCEeWlpOnkGDRnCA" name="Value(8)">
                <result xmi:id="_ZoOQUziCEeWlpOnkGDRnCA" name="Value(8).result" outgoing="_ZoOP1jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQVDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQVTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoOQVjiCEeWlpOnkGDRnCA" value="8">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoOQVziCEeWlpOnkGDRnCA" name="Test(Case(Value(8).result))">
                <first xmi:id="_ZoOQWDiCEeWlpOnkGDRnCA" name="Test(Case(Value(8).result)).first" incoming="_ZoOP1TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQWTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQWjiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoOQWziCEeWlpOnkGDRnCA" name="Test(Case(Value(8).result)).result" outgoing="_ZoOP2DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQXDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQXTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoOQXjiCEeWlpOnkGDRnCA" name="Test(Case(Value(8).result)).second" incoming="_ZoOP1jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQXziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQYDiCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoOQYTiCEeWlpOnkGDRnCA" name="Call(Or)">
                <argument xmi:id="_ZoOQYjiCEeWlpOnkGDRnCA" name="Call(Or).argument(x)" incoming="_ZoOP1ziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQYziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQZDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoOQZTiCEeWlpOnkGDRnCA" name="Call(Or).argument(y)" incoming="_ZoOP2DiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQZjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQZziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoOQaDiCEeWlpOnkGDRnCA" name="Call(Or).result(result)" outgoing="_ZoOP2ziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQaTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQajiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOQaziCEeWlpOnkGDRnCA" name="Value(10)">
                <result xmi:id="_ZoOQbDiCEeWlpOnkGDRnCA" name="Value(10).result" outgoing="_ZoOP2jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQbTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQbjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoOQbziCEeWlpOnkGDRnCA" value="10">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoOQcDiCEeWlpOnkGDRnCA" name="Test(Case(Value(10).result))">
                <first xmi:id="_ZoOQcTiCEeWlpOnkGDRnCA" name="Test(Case(Value(10).result)).first" incoming="_ZoOP2TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQcjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQcziCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoOQdDiCEeWlpOnkGDRnCA" name="Test(Case(Value(10).result)).result" outgoing="_ZoOP3DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQdTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQdjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoOQdziCEeWlpOnkGDRnCA" name="Test(Case(Value(10).result)).second" incoming="_ZoOP2jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQeDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQeTiCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoOQejiCEeWlpOnkGDRnCA" name="Call(Or)">
                <argument xmi:id="_ZoOQeziCEeWlpOnkGDRnCA" name="Call(Or).argument(x)" incoming="_ZoOP2ziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQfDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQfTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoOQfjiCEeWlpOnkGDRnCA" name="Call(Or).argument(y)" incoming="_ZoOP3DiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQfziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQgDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoOQgTiCEeWlpOnkGDRnCA" name="Call(Or).result(result)" outgoing="_ZoOP3ziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQgjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQgziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOQhDiCEeWlpOnkGDRnCA" name="Value(12)">
                <result xmi:id="_ZoOQhTiCEeWlpOnkGDRnCA" name="Value(12).result" outgoing="_ZoOP3jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQhjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQhziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoOQiDiCEeWlpOnkGDRnCA" value="12">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoOQiTiCEeWlpOnkGDRnCA" name="Test(Case(Value(12).result))">
                <first xmi:id="_ZoOQijiCEeWlpOnkGDRnCA" name="Test(Case(Value(12).result)).first" incoming="_ZoOP3TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQiziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQjDiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoOQjTiCEeWlpOnkGDRnCA" name="Test(Case(Value(12).result)).result" outgoing="_ZoOP4DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQjjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQjziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoOQkDiCEeWlpOnkGDRnCA" name="Test(Case(Value(12).result)).second" incoming="_ZoOP3jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQkTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQkjiCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoOQkziCEeWlpOnkGDRnCA" name="Call(Or)">
                <argument xmi:id="_ZoOQlDiCEeWlpOnkGDRnCA" name="Call(Or).argument(x)" incoming="_ZoOP3ziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQlTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQljiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoOQlziCEeWlpOnkGDRnCA" name="Call(Or).argument(y)" incoming="_ZoOP4DiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQmDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQmTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoOQmjiCEeWlpOnkGDRnCA" name="Call(Or).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQmziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQnDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOQnTiCEeWlpOnkGDRnCA" name="ExpressionStatement@77bbdbdb">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOQnjiCEeWlpOnkGDRnCA" target="_ZoOQnziCEeWlpOnkGDRnCA" source="_ZoOQojiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ZoOQnziCEeWlpOnkGDRnCA" name="Fork(numDays)@18448095" incoming="_ZoOQnjiCEeWlpOnkGDRnCA" outgoing="_ZoOP4TiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOQoDiCEeWlpOnkGDRnCA" name="RightHandSide@3955c2a5">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOQoTiCEeWlpOnkGDRnCA" name="Value(31)">
                    <result xmi:id="_ZoOQojiCEeWlpOnkGDRnCA" name="Value(31).result" outgoing="_ZoOQnjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQoziCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQpDiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoOQpTiCEeWlpOnkGDRnCA" value="31">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoOQpjiCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@18448095)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoOQpziCEeWlpOnkGDRnCA" target="_ZoOQqziCEeWlpOnkGDRnCA" source="_ZoOQqDiCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoOQqDiCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@18448095).input" incoming="_ZoOP4TiCEeWlpOnkGDRnCA" outgoing="_ZoOQpziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQqTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQqjiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoOQqziCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@18448095).output" incoming="_ZoOQpziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQrDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQrTiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOQrjiCEeWlpOnkGDRnCA" name="Value(4)">
                <result xmi:id="_ZoOQrziCEeWlpOnkGDRnCA" name="Value(4).result" outgoing="_ZoOP4ziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQsDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQsTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoOQsjiCEeWlpOnkGDRnCA" value="4">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoOQsziCEeWlpOnkGDRnCA" name="Test(Case(Value(4).result))">
                <first xmi:id="_ZoOQtDiCEeWlpOnkGDRnCA" name="Test(Case(Value(4).result)).first" incoming="_ZoOP4jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQtTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQtjiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoOQtziCEeWlpOnkGDRnCA" name="Test(Case(Value(4).result)).result" outgoing="_ZoOP5jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQuDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQuTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoOQujiCEeWlpOnkGDRnCA" name="Test(Case(Value(4).result)).second" incoming="_ZoOP4ziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQuziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQvDiCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoOQvTiCEeWlpOnkGDRnCA" name="Value(6)">
                <result xmi:id="_ZoOQvjiCEeWlpOnkGDRnCA" name="Value(6).result" outgoing="_ZoOP5TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoOQvziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoOQwDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoOQwTiCEeWlpOnkGDRnCA" value="6">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoOQwjiCEeWlpOnkGDRnCA" name="Test(Case(Value(6).result))">
                <first xmi:id="_ZoO2QDiCEeWlpOnkGDRnCA" name="Test(Case(Value(6).result)).first" incoming="_ZoOP5DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2QTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2QjiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoO2QziCEeWlpOnkGDRnCA" name="Test(Case(Value(6).result)).result" outgoing="_ZoOP5ziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2RDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2RTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoO2RjiCEeWlpOnkGDRnCA" name="Test(Case(Value(6).result)).second" incoming="_ZoOP5TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2RziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2SDiCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoO2STiCEeWlpOnkGDRnCA" name="Call(Or)">
                <argument xmi:id="_ZoO2SjiCEeWlpOnkGDRnCA" name="Call(Or).argument(x)" incoming="_ZoOP5jiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2SziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2TDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoO2TTiCEeWlpOnkGDRnCA" name="Call(Or).argument(y)" incoming="_ZoOP5ziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2TjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2TziCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoO2UDiCEeWlpOnkGDRnCA" name="Call(Or).result(result)" outgoing="_ZoOP6jiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2UTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2UjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO2UziCEeWlpOnkGDRnCA" name="Value(9)">
                <result xmi:id="_ZoO2VDiCEeWlpOnkGDRnCA" name="Value(9).result" outgoing="_ZoOP6TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2VTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2VjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO2VziCEeWlpOnkGDRnCA" value="9">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoO2WDiCEeWlpOnkGDRnCA" name="Test(Case(Value(9).result))">
                <first xmi:id="_ZoO2WTiCEeWlpOnkGDRnCA" name="Test(Case(Value(9).result)).first" incoming="_ZoOP6DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2WjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2WziCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoO2XDiCEeWlpOnkGDRnCA" name="Test(Case(Value(9).result)).result" outgoing="_ZoOP6ziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2XTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2XjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoO2XziCEeWlpOnkGDRnCA" name="Test(Case(Value(9).result)).second" incoming="_ZoOP6TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2YDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2YTiCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoO2YjiCEeWlpOnkGDRnCA" name="Call(Or)">
                <argument xmi:id="_ZoO2YziCEeWlpOnkGDRnCA" name="Call(Or).argument(x)" incoming="_ZoOP6jiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2ZDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2ZTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoO2ZjiCEeWlpOnkGDRnCA" name="Call(Or).argument(y)" incoming="_ZoOP6ziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2ZziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2aDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoO2aTiCEeWlpOnkGDRnCA" name="Call(Or).result(result)" outgoing="_ZoOP7jiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2ajiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2aziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO2bDiCEeWlpOnkGDRnCA" name="Value(11)">
                <result xmi:id="_ZoO2bTiCEeWlpOnkGDRnCA" name="Value(11).result" outgoing="_ZoOP7TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2bjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2bziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO2cDiCEeWlpOnkGDRnCA" value="11">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoO2cTiCEeWlpOnkGDRnCA" name="Test(Case(Value(11).result))">
                <first xmi:id="_ZoO2cjiCEeWlpOnkGDRnCA" name="Test(Case(Value(11).result)).first" incoming="_ZoOP7DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2cziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2dDiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoO2dTiCEeWlpOnkGDRnCA" name="Test(Case(Value(11).result)).result" outgoing="_ZoOP7ziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2djiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2dziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoO2eDiCEeWlpOnkGDRnCA" name="Test(Case(Value(11).result)).second" incoming="_ZoOP7TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2eTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2ejiCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoO2eziCEeWlpOnkGDRnCA" name="Call(Or)">
                <argument xmi:id="_ZoO2fDiCEeWlpOnkGDRnCA" name="Call(Or).argument(x)" incoming="_ZoOP7jiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2fTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2fjiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoO2fziCEeWlpOnkGDRnCA" name="Call(Or).argument(y)" incoming="_ZoOP7ziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2gDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2gTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoO2gjiCEeWlpOnkGDRnCA" name="Call(Or).result(result)">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2gziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2hDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Or"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO2hTiCEeWlpOnkGDRnCA" name="ExpressionStatement@78099acb">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2hjiCEeWlpOnkGDRnCA" target="_ZoO2hziCEeWlpOnkGDRnCA" source="_ZoO2ijiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ZoO2hziCEeWlpOnkGDRnCA" name="Fork(numDays)@1f567217" incoming="_ZoO2hjiCEeWlpOnkGDRnCA" outgoing="_ZoOP8DiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO2iDiCEeWlpOnkGDRnCA" name="RightHandSide@645c5413">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO2iTiCEeWlpOnkGDRnCA" name="Value(30)">
                    <result xmi:id="_ZoO2ijiCEeWlpOnkGDRnCA" name="Value(30).result" outgoing="_ZoO2hjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2iziCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2jDiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO2jTiCEeWlpOnkGDRnCA" value="30">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO2jjiCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@1f567217)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2jziCEeWlpOnkGDRnCA" target="_ZoO2kziCEeWlpOnkGDRnCA" source="_ZoO2kDiCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoO2kDiCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@1f567217).input" incoming="_ZoOP8DiCEeWlpOnkGDRnCA" outgoing="_ZoO2jziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2kTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2kjiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoO2kziCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@1f567217).output" incoming="_ZoO2jziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2lDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2lTiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO2ljiCEeWlpOnkGDRnCA" name="Value(2)">
                <result xmi:id="_ZoO2lziCEeWlpOnkGDRnCA" name="Value(2).result" outgoing="_ZoOP8jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2mDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2mTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO2mjiCEeWlpOnkGDRnCA" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoO2mziCEeWlpOnkGDRnCA" name="Test(Case(Value(2).result))">
                <first xmi:id="_ZoO2nDiCEeWlpOnkGDRnCA" name="Test(Case(Value(2).result)).first" incoming="_ZoOP8TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2nTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2njiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoO2nziCEeWlpOnkGDRnCA" name="Test(Case(Value(2).result)).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2oDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2oTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoO2ojiCEeWlpOnkGDRnCA" name="Test(Case(Value(2).result)).second" incoming="_ZoOP8jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2oziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2pDiCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:ConditionalNode" xmi:id="_ZoO2pTiCEeWlpOnkGDRnCA" name="IfStatement@72aa2bd7">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2pjiCEeWlpOnkGDRnCA" target="_ZoO2xTiCEeWlpOnkGDRnCA" source="_ZoO2vTiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2pziCEeWlpOnkGDRnCA" target="_ZoO20TiCEeWlpOnkGDRnCA" source="_ZoO2yDiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2qDiCEeWlpOnkGDRnCA" target="_ZoO21ziCEeWlpOnkGDRnCA" source="_ZoO2zDiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ZoO2qTiCEeWlpOnkGDRnCA" target="_ZoO3EziCEeWlpOnkGDRnCA" source="_ZoO3EjiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2qjiCEeWlpOnkGDRnCA" target="_ZoO3EziCEeWlpOnkGDRnCA" source="_ZoO21DiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ZoO2qziCEeWlpOnkGDRnCA" target="_ZoO22jiCEeWlpOnkGDRnCA" source="_ZoO3EziCEeWlpOnkGDRnCA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoO2rDiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ZoO2rTiCEeWlpOnkGDRnCA" target="_ZoO3CDiCEeWlpOnkGDRnCA" source="_ZoO3EziCEeWlpOnkGDRnCA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoO2rjiCEeWlpOnkGDRnCA" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2rziCEeWlpOnkGDRnCA" target="_ZoO3FDiCEeWlpOnkGDRnCA" source="_ZoO24DiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2sDiCEeWlpOnkGDRnCA" target="_ZoO3FDiCEeWlpOnkGDRnCA" source="_ZoO3CjiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ZoO2sTiCEeWlpOnkGDRnCA" target="_ZoO3RjiCEeWlpOnkGDRnCA" source="_ZoO3RTiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2sjiCEeWlpOnkGDRnCA" target="_ZoO3RjiCEeWlpOnkGDRnCA" source="_ZoO3FDiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ZoO2sziCEeWlpOnkGDRnCA" target="_ZoO3FTiCEeWlpOnkGDRnCA" source="_ZoO3RjiCEeWlpOnkGDRnCA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoO2tDiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ZoO2tTiCEeWlpOnkGDRnCA" target="_ZoO3HziCEeWlpOnkGDRnCA" source="_ZoO3RjiCEeWlpOnkGDRnCA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoO2tjiCEeWlpOnkGDRnCA" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2tziCEeWlpOnkGDRnCA" target="_ZoO3RziCEeWlpOnkGDRnCA" source="_ZoO3FziCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2uDiCEeWlpOnkGDRnCA" target="_ZoO3RziCEeWlpOnkGDRnCA" source="_ZoO3JDiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2uTiCEeWlpOnkGDRnCA" target="_ZoO3SjiCEeWlpOnkGDRnCA" source="_ZoO3RziCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2ujiCEeWlpOnkGDRnCA" target="_ZoO3WziCEeWlpOnkGDRnCA" source="_ZoO3UjiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO2uziCEeWlpOnkGDRnCA" target="_ZoO3cTiCEeWlpOnkGDRnCA" source="_ZoO3aDiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO2vDiCEeWlpOnkGDRnCA" name="Value(4)">
                  <result xmi:id="_ZoO2vTiCEeWlpOnkGDRnCA" name="Value(4).result" outgoing="_ZoO2pjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2vjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2vziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO2wDiCEeWlpOnkGDRnCA" value="4">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoO2wTiCEeWlpOnkGDRnCA" name="Call(Mod)">
                  <argument xmi:id="_ZoO2wjiCEeWlpOnkGDRnCA" name="Call(Mod).argument(x)" incoming="_ZoNCJDiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2wziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2xDiCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <argument xmi:id="_ZoO2xTiCEeWlpOnkGDRnCA" name="Call(Mod).argument(y)" incoming="_ZoO2pjiCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2xjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2xziCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <result xmi:id="_ZoO2yDiCEeWlpOnkGDRnCA" name="Call(Mod).result(result)" outgoing="_ZoO2pziCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2yTiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2yjiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO2yziCEeWlpOnkGDRnCA" name="Value(0)">
                  <result xmi:id="_ZoO2zDiCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoO2qDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2zTiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2zjiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO2zziCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  </value>
                </node>
                <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoO20DiCEeWlpOnkGDRnCA" name="Test(==)">
                  <first xmi:id="_ZoO20TiCEeWlpOnkGDRnCA" name="Test(==).first" incoming="_ZoO2pziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO20jiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO20ziCEeWlpOnkGDRnCA" value="1"/>
                  </first>
                  <result xmi:id="_ZoO21DiCEeWlpOnkGDRnCA" name="Test(==).result" outgoing="_ZoO2qjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO21TiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO21jiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <second xmi:id="_ZoO21ziCEeWlpOnkGDRnCA" name="Test(==).second" incoming="_ZoO2qDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO22DiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO22TiCEeWlpOnkGDRnCA" value="1"/>
                  </second>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO22jiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@226cb386.operand2" incoming="_ZoO2qziCEeWlpOnkGDRnCA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO22ziCEeWlpOnkGDRnCA" target="_ZoO27DiCEeWlpOnkGDRnCA" source="_ZoO25DiCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO23DiCEeWlpOnkGDRnCA" target="_ZoO2-DiCEeWlpOnkGDRnCA" source="_ZoO27ziCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO23TiCEeWlpOnkGDRnCA" target="_ZoO2_jiCEeWlpOnkGDRnCA" source="_ZoO28ziCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO23jiCEeWlpOnkGDRnCA" target="_ZoO3AjiCEeWlpOnkGDRnCA" source="_ZoO2-ziCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO23ziCEeWlpOnkGDRnCA" target="_ZoO24DiCEeWlpOnkGDRnCA" source="_ZoO3BTiCEeWlpOnkGDRnCA"/>
                  <structuredNodeOutput xmi:id="_ZoO24DiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@226cb386.operand2.result" incoming="_ZoO23ziCEeWlpOnkGDRnCA" outgoing="_ZoO2rziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO24TiCEeWlpOnkGDRnCA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO24jiCEeWlpOnkGDRnCA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO24ziCEeWlpOnkGDRnCA" name="Value(100)">
                    <result xmi:id="_ZoO25DiCEeWlpOnkGDRnCA" name="Value(100).result" outgoing="_ZoO22ziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO25TiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO25jiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO25ziCEeWlpOnkGDRnCA" value="100">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoO26DiCEeWlpOnkGDRnCA" name="Call(Mod)">
                    <argument xmi:id="_ZoO26TiCEeWlpOnkGDRnCA" name="Call(Mod).argument(x)" incoming="_ZoNCJTiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO26jiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO26ziCEeWlpOnkGDRnCA" value="1"/>
                    </argument>
                    <argument xmi:id="_ZoO27DiCEeWlpOnkGDRnCA" name="Call(Mod).argument(y)" incoming="_ZoO22ziCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO27TiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO27jiCEeWlpOnkGDRnCA" value="1"/>
                    </argument>
                    <result xmi:id="_ZoO27ziCEeWlpOnkGDRnCA" name="Call(Mod).result(result)" outgoing="_ZoO23DiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO28DiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO28TiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO28jiCEeWlpOnkGDRnCA" name="Value(0)">
                    <result xmi:id="_ZoO28ziCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoO23TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO29DiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO29TiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO29jiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoO29ziCEeWlpOnkGDRnCA" name="Test(==)">
                    <first xmi:id="_ZoO2-DiCEeWlpOnkGDRnCA" name="Test(==).first" incoming="_ZoO23DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2-TiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2-jiCEeWlpOnkGDRnCA" value="1"/>
                    </first>
                    <result xmi:id="_ZoO2-ziCEeWlpOnkGDRnCA" name="Test(==).result" outgoing="_ZoO23jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2_DiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO2_TiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <second xmi:id="_ZoO2_jiCEeWlpOnkGDRnCA" name="Test(==).second" incoming="_ZoO23TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO2_ziCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3ADiCEeWlpOnkGDRnCA" value="1"/>
                    </second>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoO3ATiCEeWlpOnkGDRnCA" name="Call(Not)">
                    <argument xmi:id="_ZoO3AjiCEeWlpOnkGDRnCA" name="Call(Not).argument(x)" incoming="_ZoO23jiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3AziCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3BDiCEeWlpOnkGDRnCA" value="1"/>
                    </argument>
                    <result xmi:id="_ZoO3BTiCEeWlpOnkGDRnCA" name="Call(Not).result(result)" outgoing="_ZoO23ziCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3BjiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3BziCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3CDiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@226cb386.operand3" incoming="_ZoO2rTiCEeWlpOnkGDRnCA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3CTiCEeWlpOnkGDRnCA" target="_ZoO3CjiCEeWlpOnkGDRnCA" source="_ZoO3DjiCEeWlpOnkGDRnCA"/>
                  <structuredNodeOutput xmi:id="_ZoO3CjiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@226cb386.operand3.result" incoming="_ZoO3CTiCEeWlpOnkGDRnCA" outgoing="_ZoO2sDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3CziCEeWlpOnkGDRnCA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3DDiCEeWlpOnkGDRnCA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO3DTiCEeWlpOnkGDRnCA" name="Value(false)">
                    <result xmi:id="_ZoO3DjiCEeWlpOnkGDRnCA" name="Value(false).result" outgoing="_ZoO3CTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3DziCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3EDiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoO3ETiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_ZoO3EjiCEeWlpOnkGDRnCA" name="Initial(ConditionalLogicalExpression@226cb386)" outgoing="_ZoO2qTiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_ZoO3EziCEeWlpOnkGDRnCA" name="Decision(ConditionalLogicalExpression@226cb386)" incoming="_ZoO2qTiCEeWlpOnkGDRnCA _ZoO2qjiCEeWlpOnkGDRnCA" outgoing="_ZoO2qziCEeWlpOnkGDRnCA _ZoO2rTiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoO2qjiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_ZoO3FDiCEeWlpOnkGDRnCA" name="Merge(ConditionalLogicalExpression@226cb386.result)" incoming="_ZoO2rziCEeWlpOnkGDRnCA _ZoO2sDiCEeWlpOnkGDRnCA" outgoing="_ZoO2sjiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3FTiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@1cfee501.operand2" incoming="_ZoO2sziCEeWlpOnkGDRnCA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3FjiCEeWlpOnkGDRnCA" target="_ZoO3FziCEeWlpOnkGDRnCA" source="_ZoO3GziCEeWlpOnkGDRnCA"/>
                  <structuredNodeOutput xmi:id="_ZoO3FziCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@1cfee501.operand2.result" incoming="_ZoO3FjiCEeWlpOnkGDRnCA" outgoing="_ZoO2tziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3GDiCEeWlpOnkGDRnCA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3GTiCEeWlpOnkGDRnCA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO3GjiCEeWlpOnkGDRnCA" name="Value(true)">
                    <result xmi:id="_ZoO3GziCEeWlpOnkGDRnCA" name="Value(true).result" outgoing="_ZoO3FjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3HDiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3HTiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoO3HjiCEeWlpOnkGDRnCA" value="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3HziCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@1cfee501.operand3" incoming="_ZoO2tTiCEeWlpOnkGDRnCA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3IDiCEeWlpOnkGDRnCA" target="_ZoO3MDiCEeWlpOnkGDRnCA" source="_ZoO3KDiCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3ITiCEeWlpOnkGDRnCA" target="_ZoO3PDiCEeWlpOnkGDRnCA" source="_ZoO3MziCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3IjiCEeWlpOnkGDRnCA" target="_ZoO3QjiCEeWlpOnkGDRnCA" source="_ZoO3NziCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3IziCEeWlpOnkGDRnCA" target="_ZoO3JDiCEeWlpOnkGDRnCA" source="_ZoO3PziCEeWlpOnkGDRnCA"/>
                  <structuredNodeOutput xmi:id="_ZoO3JDiCEeWlpOnkGDRnCA" name="ConditionalLogicalExpression@1cfee501.operand3.result" incoming="_ZoO3IziCEeWlpOnkGDRnCA" outgoing="_ZoO2uDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3JTiCEeWlpOnkGDRnCA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3JjiCEeWlpOnkGDRnCA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO3JziCEeWlpOnkGDRnCA" name="Value(400)">
                    <result xmi:id="_ZoO3KDiCEeWlpOnkGDRnCA" name="Value(400).result" outgoing="_ZoO3IDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3KTiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3KjiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO3KziCEeWlpOnkGDRnCA" value="400">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoO3LDiCEeWlpOnkGDRnCA" name="Call(Mod)">
                    <argument xmi:id="_ZoO3LTiCEeWlpOnkGDRnCA" name="Call(Mod).argument(x)" incoming="_ZoNCJjiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3LjiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3LziCEeWlpOnkGDRnCA" value="1"/>
                    </argument>
                    <argument xmi:id="_ZoO3MDiCEeWlpOnkGDRnCA" name="Call(Mod).argument(y)" incoming="_ZoO3IDiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3MTiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3MjiCEeWlpOnkGDRnCA" value="1"/>
                    </argument>
                    <result xmi:id="_ZoO3MziCEeWlpOnkGDRnCA" name="Call(Mod).result(result)" outgoing="_ZoO3ITiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3NDiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3NTiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Mod"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO3NjiCEeWlpOnkGDRnCA" name="Value(0)">
                    <result xmi:id="_ZoO3NziCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoO3IjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3ODiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3OTiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO3OjiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                  <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoO3OziCEeWlpOnkGDRnCA" name="Test(==)">
                    <first xmi:id="_ZoO3PDiCEeWlpOnkGDRnCA" name="Test(==).first" incoming="_ZoO3ITiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3PTiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3PjiCEeWlpOnkGDRnCA" value="1"/>
                    </first>
                    <result xmi:id="_ZoO3PziCEeWlpOnkGDRnCA" name="Test(==).result" outgoing="_ZoO3IziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3QDiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3QTiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <second xmi:id="_ZoO3QjiCEeWlpOnkGDRnCA" name="Test(==).second" incoming="_ZoO3IjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3QziCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3RDiCEeWlpOnkGDRnCA" value="1"/>
                    </second>
                  </node>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_ZoO3RTiCEeWlpOnkGDRnCA" name="Initial(ConditionalLogicalExpression@1cfee501)" outgoing="_ZoO2sTiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_ZoO3RjiCEeWlpOnkGDRnCA" name="Decision(ConditionalLogicalExpression@1cfee501)" incoming="_ZoO2sTiCEeWlpOnkGDRnCA _ZoO2sjiCEeWlpOnkGDRnCA" outgoing="_ZoO2sziCEeWlpOnkGDRnCA _ZoO2tTiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoO2sjiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_ZoO3RziCEeWlpOnkGDRnCA" name="Merge(ConditionalLogicalExpression@1cfee501.result)" incoming="_ZoO2tziCEeWlpOnkGDRnCA _ZoO2uDiCEeWlpOnkGDRnCA" outgoing="_ZoO2uTiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3SDiCEeWlpOnkGDRnCA" name="Passthru(Merge(ConditionalLogicalExpression@1cfee501.result))">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3STiCEeWlpOnkGDRnCA" target="_ZoO3TTiCEeWlpOnkGDRnCA" source="_ZoO3SjiCEeWlpOnkGDRnCA"/>
                  <structuredNodeInput xmi:id="_ZoO3SjiCEeWlpOnkGDRnCA" name="Passthru(Merge(ConditionalLogicalExpression@1cfee501.result)).input" incoming="_ZoO2uTiCEeWlpOnkGDRnCA" outgoing="_ZoO3STiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3SziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3TDiCEeWlpOnkGDRnCA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_ZoO3TTiCEeWlpOnkGDRnCA" name="Passthru(Merge(ConditionalLogicalExpression@1cfee501.result)).output" incoming="_ZoO3STiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3TjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3TziCEeWlpOnkGDRnCA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3UDiCEeWlpOnkGDRnCA" name="ExpressionStatement@42df23be">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3UTiCEeWlpOnkGDRnCA" target="_ZoO3UjiCEeWlpOnkGDRnCA" source="_ZoO3VTiCEeWlpOnkGDRnCA"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_ZoO3UjiCEeWlpOnkGDRnCA" name="Fork(numDays)@6adb7cc3" incoming="_ZoO3UTiCEeWlpOnkGDRnCA" outgoing="_ZoO2ujiCEeWlpOnkGDRnCA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3UziCEeWlpOnkGDRnCA" name="RightHandSide@6fdc1d03">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO3VDiCEeWlpOnkGDRnCA" name="Value(29)">
                      <result xmi:id="_ZoO3VTiCEeWlpOnkGDRnCA" name="Value(29).result" outgoing="_ZoO3UTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3VjiCEeWlpOnkGDRnCA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3VziCEeWlpOnkGDRnCA" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO3WDiCEeWlpOnkGDRnCA" value="29">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3WTiCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@6adb7cc3)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3WjiCEeWlpOnkGDRnCA" target="_ZoO3XjiCEeWlpOnkGDRnCA" source="_ZoO3WziCEeWlpOnkGDRnCA"/>
                  <structuredNodeInput xmi:id="_ZoO3WziCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@6adb7cc3).input" incoming="_ZoO2ujiCEeWlpOnkGDRnCA" outgoing="_ZoO3WjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3XDiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3XTiCEeWlpOnkGDRnCA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_ZoO3XjiCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@6adb7cc3).output" incoming="_ZoO3WjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3XziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3YDiCEeWlpOnkGDRnCA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO3YTiCEeWlpOnkGDRnCA" name="Value(true)">
                  <result xmi:id="_ZoO3YjiCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3YziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3ZDiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoO3ZTiCEeWlpOnkGDRnCA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3ZjiCEeWlpOnkGDRnCA" name="ExpressionStatement@61ddf009">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3ZziCEeWlpOnkGDRnCA" target="_ZoO3aDiCEeWlpOnkGDRnCA" source="_ZoO3aziCEeWlpOnkGDRnCA"/>
                  <node xmi:type="uml:ForkNode" xmi:id="_ZoO3aDiCEeWlpOnkGDRnCA" name="Fork(numDays)@63273e5b" incoming="_ZoO3ZziCEeWlpOnkGDRnCA" outgoing="_ZoO2uziCEeWlpOnkGDRnCA"/>
                  <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3aTiCEeWlpOnkGDRnCA" name="RightHandSide@256efb38">
                    <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO3ajiCEeWlpOnkGDRnCA" name="Value(28)">
                      <result xmi:id="_ZoO3aziCEeWlpOnkGDRnCA" name="Value(28).result" outgoing="_ZoO3ZziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3bDiCEeWlpOnkGDRnCA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3bTiCEeWlpOnkGDRnCA" value="1"/>
                      </result>
                      <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO3bjiCEeWlpOnkGDRnCA" value="28">
                        <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      </value>
                    </node>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3bziCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@63273e5b)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3cDiCEeWlpOnkGDRnCA" target="_ZoO3dDiCEeWlpOnkGDRnCA" source="_ZoO3cTiCEeWlpOnkGDRnCA"/>
                  <structuredNodeInput xmi:id="_ZoO3cTiCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@63273e5b).input" incoming="_ZoO2uziCEeWlpOnkGDRnCA" outgoing="_ZoO3cDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3cjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3cziCEeWlpOnkGDRnCA" value="1"/>
                  </structuredNodeInput>
                  <structuredNodeOutput xmi:id="_ZoO3dDiCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@63273e5b).output" incoming="_ZoO3cDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3dTiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3djiCEeWlpOnkGDRnCA" value="1"/>
                  </structuredNodeOutput>
                </node>
                <clause xmi:id="_ZoO3dziCEeWlpOnkGDRnCA" body="_ZoO3UDiCEeWlpOnkGDRnCA _ZoO3WTiCEeWlpOnkGDRnCA" bodyOutput="_ZoO3XjiCEeWlpOnkGDRnCA" decider="_ZoO3TTiCEeWlpOnkGDRnCA" successorClause="_ZoO3eDiCEeWlpOnkGDRnCA" test="_ZoO2vDiCEeWlpOnkGDRnCA _ZoO2wTiCEeWlpOnkGDRnCA _ZoO2yziCEeWlpOnkGDRnCA _ZoO20DiCEeWlpOnkGDRnCA _ZoO22jiCEeWlpOnkGDRnCA _ZoO3CDiCEeWlpOnkGDRnCA _ZoO3FTiCEeWlpOnkGDRnCA _ZoO3HziCEeWlpOnkGDRnCA _ZoO3SDiCEeWlpOnkGDRnCA"/>
                <clause xmi:id="_ZoO3eDiCEeWlpOnkGDRnCA" body="_ZoO3ZjiCEeWlpOnkGDRnCA _ZoO3bziCEeWlpOnkGDRnCA" bodyOutput="_ZoO3dDiCEeWlpOnkGDRnCA" decider="_ZoO3YjiCEeWlpOnkGDRnCA" predecessorClause="_ZoO3dziCEeWlpOnkGDRnCA" test="_ZoO3YTiCEeWlpOnkGDRnCA"/>
                <result xmi:id="_ZoO3eTiCEeWlpOnkGDRnCA" name="IfStatement@72aa2bd7.result(numDays)" outgoing="_ZoOP8ziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3ejiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3eziCEeWlpOnkGDRnCA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoO3fDiCEeWlpOnkGDRnCA" name="Fork(numDays)" incoming="_ZoOP8ziCEeWlpOnkGDRnCA" outgoing="_ZoOP9DiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3fTiCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3fjiCEeWlpOnkGDRnCA" target="_ZoO3gjiCEeWlpOnkGDRnCA" source="_ZoO3fziCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoO3fziCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)).input" incoming="_ZoOP9DiCEeWlpOnkGDRnCA" outgoing="_ZoO3fjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3gDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3gTiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoO3gjiCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)).output" incoming="_ZoO3fjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3gziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3hDiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO3hTiCEeWlpOnkGDRnCA" name="Value(true)">
                <result xmi:id="_ZoO3hjiCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3hziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3iDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoO3iTiCEeWlpOnkGDRnCA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3ijiCEeWlpOnkGDRnCA" name="ExpressionStatement@674ba66e" outgoing="_ZoOP9TiCEeWlpOnkGDRnCA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3iziCEeWlpOnkGDRnCA" target="_ZoO3jjiCEeWlpOnkGDRnCA" source="_ZoO3ljiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ZoO3jDiCEeWlpOnkGDRnCA" target="_ZoO3jTiCEeWlpOnkGDRnCA" source="_ZoO3lDiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoO3jTiCEeWlpOnkGDRnCA" name="Call(WriteLine)" incoming="_ZoO3jDiCEeWlpOnkGDRnCA">
                  <argument xmi:id="_ZoO3jjiCEeWlpOnkGDRnCA" name="Call(WriteLine).argument(value)" incoming="_ZoO3iziCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3jziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3kDiCEeWlpOnkGDRnCA" value="1"/>
                  </argument>
                  <result xmi:id="_ZoO3kTiCEeWlpOnkGDRnCA" name="Call(WriteLine).result(errorStatus)">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3kjiCEeWlpOnkGDRnCA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3kziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3lDiCEeWlpOnkGDRnCA" name="Tuple@42cd532b" outgoing="_ZoO3jDiCEeWlpOnkGDRnCA">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO3lTiCEeWlpOnkGDRnCA" name="Value(&quot;Invalid month.&quot;)">
                    <result xmi:id="_ZoO3ljiCEeWlpOnkGDRnCA" name="Value(&quot;Invalid month.&quot;).result" outgoing="_ZoO3iziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3lziCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3mDiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_ZoO3mTiCEeWlpOnkGDRnCA" value="Invalid month.">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3mjiCEeWlpOnkGDRnCA" name="ExpressionStatement@3ede1597" incoming="_ZoOP9TiCEeWlpOnkGDRnCA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3mziCEeWlpOnkGDRnCA" target="_ZoO3nDiCEeWlpOnkGDRnCA" source="_ZoO3nziCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ZoO3nDiCEeWlpOnkGDRnCA" name="Fork(numDays)@d9b4e4c" incoming="_ZoO3mziCEeWlpOnkGDRnCA" outgoing="_ZoOP9jiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3nTiCEeWlpOnkGDRnCA" name="RightHandSide@4f31668e">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO3njiCEeWlpOnkGDRnCA" name="Value(0)">
                    <result xmi:id="_ZoO3nziCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoO3mziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3oDiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3oTiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO3ojiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3oziCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@d9b4e4c)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3pDiCEeWlpOnkGDRnCA" target="_ZoO3qDiCEeWlpOnkGDRnCA" source="_ZoO3pTiCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoO3pTiCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@d9b4e4c).input" incoming="_ZoOP9jiCEeWlpOnkGDRnCA" outgoing="_ZoO3pDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3pjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3pziCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoO3qDiCEeWlpOnkGDRnCA" name="Passthru(Fork(numDays)@d9b4e4c).output" incoming="_ZoO3pDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3qTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3qjiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_ZoO3qziCEeWlpOnkGDRnCA" body="_ZoOQnTiCEeWlpOnkGDRnCA _ZoOQpjiCEeWlpOnkGDRnCA" bodyOutput="_ZoOQqziCEeWlpOnkGDRnCA" decider="_ZoOQmjiCEeWlpOnkGDRnCA" successorClause="_ZoO3rjiCEeWlpOnkGDRnCA" test="_ZoOP-DiCEeWlpOnkGDRnCA _ZoOP_TiCEeWlpOnkGDRnCA _ZoOQBziCEeWlpOnkGDRnCA _ZoOQDDiCEeWlpOnkGDRnCA _ZoOQFjiCEeWlpOnkGDRnCA _ZoOQIDiCEeWlpOnkGDRnCA _ZoOQJTiCEeWlpOnkGDRnCA _ZoOQLziCEeWlpOnkGDRnCA _ZoOQOTiCEeWlpOnkGDRnCA _ZoOQPjiCEeWlpOnkGDRnCA _ZoOQSDiCEeWlpOnkGDRnCA _ZoOQUjiCEeWlpOnkGDRnCA _ZoOQVziCEeWlpOnkGDRnCA _ZoOQYTiCEeWlpOnkGDRnCA _ZoOQaziCEeWlpOnkGDRnCA _ZoOQcDiCEeWlpOnkGDRnCA _ZoOQejiCEeWlpOnkGDRnCA _ZoOQhDiCEeWlpOnkGDRnCA _ZoOQiTiCEeWlpOnkGDRnCA _ZoOQkziCEeWlpOnkGDRnCA"/>
              <clause xmi:id="_ZoO3rDiCEeWlpOnkGDRnCA" body="_ZoO2hTiCEeWlpOnkGDRnCA _ZoO2jjiCEeWlpOnkGDRnCA" bodyOutput="_ZoO2kziCEeWlpOnkGDRnCA" decider="_ZoO2gjiCEeWlpOnkGDRnCA" successorClause="_ZoO3rjiCEeWlpOnkGDRnCA" test="_ZoOQrjiCEeWlpOnkGDRnCA _ZoOQsziCEeWlpOnkGDRnCA _ZoOQvTiCEeWlpOnkGDRnCA _ZoOQwjiCEeWlpOnkGDRnCA _ZoO2STiCEeWlpOnkGDRnCA _ZoO2UziCEeWlpOnkGDRnCA _ZoO2WDiCEeWlpOnkGDRnCA _ZoO2YjiCEeWlpOnkGDRnCA _ZoO2bDiCEeWlpOnkGDRnCA _ZoO2cTiCEeWlpOnkGDRnCA _ZoO2eziCEeWlpOnkGDRnCA"/>
              <clause xmi:id="_ZoO3rTiCEeWlpOnkGDRnCA" body="_ZoO2pTiCEeWlpOnkGDRnCA _ZoO3fTiCEeWlpOnkGDRnCA" bodyOutput="_ZoO3gjiCEeWlpOnkGDRnCA" decider="_ZoO2nziCEeWlpOnkGDRnCA" successorClause="_ZoO3rjiCEeWlpOnkGDRnCA" test="_ZoO2ljiCEeWlpOnkGDRnCA _ZoO2mziCEeWlpOnkGDRnCA"/>
              <clause xmi:id="_ZoO3rjiCEeWlpOnkGDRnCA" body="_ZoO3ijiCEeWlpOnkGDRnCA _ZoO3mjiCEeWlpOnkGDRnCA _ZoO3oziCEeWlpOnkGDRnCA" bodyOutput="_ZoO3qDiCEeWlpOnkGDRnCA" decider="_ZoO3hjiCEeWlpOnkGDRnCA" predecessorClause="_ZoO3qziCEeWlpOnkGDRnCA _ZoO3rDiCEeWlpOnkGDRnCA _ZoO3rTiCEeWlpOnkGDRnCA" test="_ZoO3hTiCEeWlpOnkGDRnCA"/>
              <result xmi:id="_ZoO3rziCEeWlpOnkGDRnCA" name="Conditional(SwitchStatement@11f3d7df).result(numDays)" outgoing="_ZoOPxDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3sDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3sTiCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoO3sjiCEeWlpOnkGDRnCA" name="Fork(numDays)" incoming="_ZoOPxDiCEeWlpOnkGDRnCA" outgoing="_ZoNCODiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3sziCEeWlpOnkGDRnCA" name="Switch((SwitchStatement@11f3d7df)" outgoing="_ZoOPxTiCEeWlpOnkGDRnCA"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3tDiCEeWlpOnkGDRnCA" name="ExpressionStatement@4f54ca2c" incoming="_ZoNCKDiCEeWlpOnkGDRnCA" outgoing="_ZoNCKjiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3tTiCEeWlpOnkGDRnCA" target="_ZoO3tjiCEeWlpOnkGDRnCA" source="_ZoO3uTiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoO3tjiCEeWlpOnkGDRnCA" name="Fork(switch1)@7243f9f0" incoming="_ZoO3tTiCEeWlpOnkGDRnCA" outgoing="_ZoNCKTiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3tziCEeWlpOnkGDRnCA" name="RightHandSide@4cce362b">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO3uDiCEeWlpOnkGDRnCA" name="Value(1)">
                <result xmi:id="_ZoO3uTiCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_ZoO3tTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3ujiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO3uziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO3vDiCEeWlpOnkGDRnCA" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO3vTiCEeWlpOnkGDRnCA" name="SwitchStatement@5c96a0aa" incoming="_ZoNCKjiCEeWlpOnkGDRnCA" outgoing="_ZoNCKziCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3vjiCEeWlpOnkGDRnCA" target="_ZoPdsjiCEeWlpOnkGDRnCA" source="_ZoPdrziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoO3vziCEeWlpOnkGDRnCA" target="_ZoO3wTiCEeWlpOnkGDRnCA" source="_ZoPdsziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3wDiCEeWlpOnkGDRnCA" target="_ZoO3zDiCEeWlpOnkGDRnCA" source="_ZoPdwTiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_ZoO3wTiCEeWlpOnkGDRnCA" name="Conditional(SwitchStatement@5c96a0aa)" incoming="_ZoO3vziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3wjiCEeWlpOnkGDRnCA" target="_ZoO30ziCEeWlpOnkGDRnCA" source="_ZoO3zDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3wziCEeWlpOnkGDRnCA" target="_ZoO32TiCEeWlpOnkGDRnCA" source="_ZoO3zjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3xDiCEeWlpOnkGDRnCA" target="_ZoO35ziCEeWlpOnkGDRnCA" source="_ZoO33jiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3xTiCEeWlpOnkGDRnCA" target="_ZoPdWziCEeWlpOnkGDRnCA" source="_ZoO3zDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3xjiCEeWlpOnkGDRnCA" target="_ZoPdYTiCEeWlpOnkGDRnCA" source="_ZoPdVjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3xziCEeWlpOnkGDRnCA" target="_ZoPdbziCEeWlpOnkGDRnCA" source="_ZoPdZjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3yDiCEeWlpOnkGDRnCA" target="_ZoPdeziCEeWlpOnkGDRnCA" source="_ZoO3zDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3yTiCEeWlpOnkGDRnCA" target="_ZoPdgTiCEeWlpOnkGDRnCA" source="_ZoPddjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3yjiCEeWlpOnkGDRnCA" target="_ZoPdjziCEeWlpOnkGDRnCA" source="_ZoPdhjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO3yziCEeWlpOnkGDRnCA" target="_ZoPdpTiCEeWlpOnkGDRnCA" source="_ZoPdnDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoO3zDiCEeWlpOnkGDRnCA" name="Fork(Call(+).result(result))" incoming="_ZoO3wDiCEeWlpOnkGDRnCA" outgoing="_ZoO3wjiCEeWlpOnkGDRnCA _ZoO3xTiCEeWlpOnkGDRnCA _ZoO3yDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO3zTiCEeWlpOnkGDRnCA" name="Value(1)">
                <result xmi:id="_ZoO3zjiCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_ZoO3wziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO3zziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO30DiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO30TiCEeWlpOnkGDRnCA" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoO30jiCEeWlpOnkGDRnCA" name="Test(Case(Value(1).result))">
                <first xmi:id="_ZoO30ziCEeWlpOnkGDRnCA" name="Test(Case(Value(1).result)).first" incoming="_ZoO3wjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO31DiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO31TiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoO31jiCEeWlpOnkGDRnCA" name="Test(Case(Value(1).result)).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO31ziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO32DiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoO32TiCEeWlpOnkGDRnCA" name="Test(Case(Value(1).result)).second" incoming="_ZoO3wziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO32jiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO32ziCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO33DiCEeWlpOnkGDRnCA" name="ExpressionStatement@2fb4a039">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO33TiCEeWlpOnkGDRnCA" target="_ZoO33jiCEeWlpOnkGDRnCA" source="_ZoO34TiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ZoO33jiCEeWlpOnkGDRnCA" name="Fork(switch1)@4095989a" incoming="_ZoO33TiCEeWlpOnkGDRnCA" outgoing="_ZoO3xDiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO33ziCEeWlpOnkGDRnCA" name="RightHandSide@1d55c796">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoO34DiCEeWlpOnkGDRnCA" name="Value(1)">
                    <result xmi:id="_ZoO34TiCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_ZoO33TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoO34jiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoO34ziCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoO35DiCEeWlpOnkGDRnCA" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoO35TiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch1)@4095989a)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoO35jiCEeWlpOnkGDRnCA" target="_ZoPdUjiCEeWlpOnkGDRnCA" source="_ZoO35ziCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoO35ziCEeWlpOnkGDRnCA" name="Passthru(Fork(switch1)@4095989a).input" incoming="_ZoO3xDiCEeWlpOnkGDRnCA" outgoing="_ZoO35jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdUDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdUTiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoPdUjiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch1)@4095989a).output" incoming="_ZoO35jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdUziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdVDiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPdVTiCEeWlpOnkGDRnCA" name="Value(2)">
                <result xmi:id="_ZoPdVjiCEeWlpOnkGDRnCA" name="Value(2).result" outgoing="_ZoO3xjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdVziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdWDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPdWTiCEeWlpOnkGDRnCA" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoPdWjiCEeWlpOnkGDRnCA" name="Test(Case(Value(2).result))">
                <first xmi:id="_ZoPdWziCEeWlpOnkGDRnCA" name="Test(Case(Value(2).result)).first" incoming="_ZoO3xTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdXDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdXTiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoPdXjiCEeWlpOnkGDRnCA" name="Test(Case(Value(2).result)).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdXziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdYDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoPdYTiCEeWlpOnkGDRnCA" name="Test(Case(Value(2).result)).second" incoming="_ZoO3xjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdYjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdYziCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPdZDiCEeWlpOnkGDRnCA" name="ExpressionStatement@2594e302">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPdZTiCEeWlpOnkGDRnCA" target="_ZoPdZjiCEeWlpOnkGDRnCA" source="_ZoPdaTiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ZoPdZjiCEeWlpOnkGDRnCA" name="Fork(switch1)@1349667d" incoming="_ZoPdZTiCEeWlpOnkGDRnCA" outgoing="_ZoO3xziCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPdZziCEeWlpOnkGDRnCA" name="RightHandSide@37e7a26f">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPdaDiCEeWlpOnkGDRnCA" name="Value(2)">
                    <result xmi:id="_ZoPdaTiCEeWlpOnkGDRnCA" name="Value(2).result" outgoing="_ZoPdZTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdajiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdaziCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPdbDiCEeWlpOnkGDRnCA" value="2">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPdbTiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch1)@1349667d)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPdbjiCEeWlpOnkGDRnCA" target="_ZoPdcjiCEeWlpOnkGDRnCA" source="_ZoPdbziCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoPdbziCEeWlpOnkGDRnCA" name="Passthru(Fork(switch1)@1349667d).input" incoming="_ZoO3xziCEeWlpOnkGDRnCA" outgoing="_ZoPdbjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdcDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdcTiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoPdcjiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch1)@1349667d).output" incoming="_ZoPdbjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdcziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPddDiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPddTiCEeWlpOnkGDRnCA" name="Value(3)">
                <result xmi:id="_ZoPddjiCEeWlpOnkGDRnCA" name="Value(3).result" outgoing="_ZoO3yTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPddziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdeDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPdeTiCEeWlpOnkGDRnCA" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoPdejiCEeWlpOnkGDRnCA" name="Test(Case(Value(3).result))">
                <first xmi:id="_ZoPdeziCEeWlpOnkGDRnCA" name="Test(Case(Value(3).result)).first" incoming="_ZoO3yDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdfDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdfTiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoPdfjiCEeWlpOnkGDRnCA" name="Test(Case(Value(3).result)).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdfziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdgDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoPdgTiCEeWlpOnkGDRnCA" name="Test(Case(Value(3).result)).second" incoming="_ZoO3yTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdgjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdgziCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPdhDiCEeWlpOnkGDRnCA" name="ExpressionStatement@1b3e51d6">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPdhTiCEeWlpOnkGDRnCA" target="_ZoPdhjiCEeWlpOnkGDRnCA" source="_ZoPdiTiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ZoPdhjiCEeWlpOnkGDRnCA" name="Fork(switch1)@729f390f" incoming="_ZoPdhTiCEeWlpOnkGDRnCA" outgoing="_ZoO3yjiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPdhziCEeWlpOnkGDRnCA" name="RightHandSide@335b4293">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPdiDiCEeWlpOnkGDRnCA" name="Value(3)">
                    <result xmi:id="_ZoPdiTiCEeWlpOnkGDRnCA" name="Value(3).result" outgoing="_ZoPdhTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdijiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdiziCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPdjDiCEeWlpOnkGDRnCA" value="3">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPdjTiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch1)@729f390f)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPdjjiCEeWlpOnkGDRnCA" target="_ZoPdkjiCEeWlpOnkGDRnCA" source="_ZoPdjziCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoPdjziCEeWlpOnkGDRnCA" name="Passthru(Fork(switch1)@729f390f).input" incoming="_ZoO3yjiCEeWlpOnkGDRnCA" outgoing="_ZoPdjjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdkDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdkTiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoPdkjiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch1)@729f390f).output" incoming="_ZoPdjjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdkziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdlDiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPdlTiCEeWlpOnkGDRnCA" name="Value(true)">
                <result xmi:id="_ZoPdljiCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdlziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdmDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoPdmTiCEeWlpOnkGDRnCA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPdmjiCEeWlpOnkGDRnCA" name="ExpressionStatement@507ecea7">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPdmziCEeWlpOnkGDRnCA" target="_ZoPdnDiCEeWlpOnkGDRnCA" source="_ZoPdnziCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ZoPdnDiCEeWlpOnkGDRnCA" name="Fork(switch1)@1af7f389" incoming="_ZoPdmziCEeWlpOnkGDRnCA" outgoing="_ZoO3yziCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPdnTiCEeWlpOnkGDRnCA" name="RightHandSide@c95b534">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPdnjiCEeWlpOnkGDRnCA" name="Value(0)">
                    <result xmi:id="_ZoPdnziCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoPdmziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdoDiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdoTiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPdojiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPdoziCEeWlpOnkGDRnCA" name="Passthru(Fork(switch1)@1af7f389)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPdpDiCEeWlpOnkGDRnCA" target="_ZoPdqDiCEeWlpOnkGDRnCA" source="_ZoPdpTiCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoPdpTiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch1)@1af7f389).input" incoming="_ZoO3yziCEeWlpOnkGDRnCA" outgoing="_ZoPdpDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdpjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdpziCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoPdqDiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch1)@1af7f389).output" incoming="_ZoPdpDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdqTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdqjiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_ZoPdqziCEeWlpOnkGDRnCA" body="_ZoO33DiCEeWlpOnkGDRnCA _ZoO35TiCEeWlpOnkGDRnCA" bodyOutput="_ZoPdUjiCEeWlpOnkGDRnCA" decider="_ZoO31jiCEeWlpOnkGDRnCA" successorClause="_ZoPdrjiCEeWlpOnkGDRnCA" test="_ZoO3zTiCEeWlpOnkGDRnCA _ZoO30jiCEeWlpOnkGDRnCA"/>
              <clause xmi:id="_ZoPdrDiCEeWlpOnkGDRnCA" body="_ZoPdZDiCEeWlpOnkGDRnCA _ZoPdbTiCEeWlpOnkGDRnCA" bodyOutput="_ZoPdcjiCEeWlpOnkGDRnCA" decider="_ZoPdXjiCEeWlpOnkGDRnCA" successorClause="_ZoPdrjiCEeWlpOnkGDRnCA" test="_ZoPdVTiCEeWlpOnkGDRnCA _ZoPdWjiCEeWlpOnkGDRnCA"/>
              <clause xmi:id="_ZoPdrTiCEeWlpOnkGDRnCA" body="_ZoPdhDiCEeWlpOnkGDRnCA _ZoPdjTiCEeWlpOnkGDRnCA" bodyOutput="_ZoPdkjiCEeWlpOnkGDRnCA" decider="_ZoPdfjiCEeWlpOnkGDRnCA" successorClause="_ZoPdrjiCEeWlpOnkGDRnCA" test="_ZoPddTiCEeWlpOnkGDRnCA _ZoPdejiCEeWlpOnkGDRnCA"/>
              <clause xmi:id="_ZoPdrjiCEeWlpOnkGDRnCA" body="_ZoPdmjiCEeWlpOnkGDRnCA _ZoPdoziCEeWlpOnkGDRnCA" bodyOutput="_ZoPdqDiCEeWlpOnkGDRnCA" decider="_ZoPdljiCEeWlpOnkGDRnCA" predecessorClause="_ZoPdqziCEeWlpOnkGDRnCA _ZoPdrDiCEeWlpOnkGDRnCA _ZoPdrTiCEeWlpOnkGDRnCA" test="_ZoPdlTiCEeWlpOnkGDRnCA"/>
              <result xmi:id="_ZoPdrziCEeWlpOnkGDRnCA" name="Conditional(SwitchStatement@5c96a0aa).result(switch1)" outgoing="_ZoO3vjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdsDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdsTiCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoPdsjiCEeWlpOnkGDRnCA" name="Fork(switch1)" incoming="_ZoO3vjiCEeWlpOnkGDRnCA" outgoing="_ZoNCOTiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPdsziCEeWlpOnkGDRnCA" name="Switch((SwitchStatement@5c96a0aa)" outgoing="_ZoO3vziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPdtDiCEeWlpOnkGDRnCA" target="_ZoPdvjiCEeWlpOnkGDRnCA" source="_ZoPdtjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPdtTiCEeWlpOnkGDRnCA" name="Value(2)">
                <result xmi:id="_ZoPdtjiCEeWlpOnkGDRnCA" name="Value(2).result" outgoing="_ZoPdtDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdtziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPduDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPduTiCEeWlpOnkGDRnCA" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoPdujiCEeWlpOnkGDRnCA" name="Call(+)">
                <argument xmi:id="_ZoPduziCEeWlpOnkGDRnCA" name="Call(+).argument(x)" incoming="_ZoNCKTiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdvDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdvTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoPdvjiCEeWlpOnkGDRnCA" name="Call(+).argument(y)" incoming="_ZoPdtDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdvziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdwDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoPdwTiCEeWlpOnkGDRnCA" name="Call(+).result(result)" outgoing="_ZoO3wDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdwjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdwziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPdxDiCEeWlpOnkGDRnCA" name="ExpressionStatement@67255931" incoming="_ZoNCKziCEeWlpOnkGDRnCA" outgoing="_ZoNCLziCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPdxTiCEeWlpOnkGDRnCA" target="_ZoPdxjiCEeWlpOnkGDRnCA" source="_ZoPdyTiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoPdxjiCEeWlpOnkGDRnCA" name="Fork(switch2)@610e3970" incoming="_ZoPdxTiCEeWlpOnkGDRnCA" outgoing="_ZoNCLDiCEeWlpOnkGDRnCA _ZoNCLTiCEeWlpOnkGDRnCA _ZoNCLjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPdxziCEeWlpOnkGDRnCA" name="RightHandSide@6cdd19d7">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPdyDiCEeWlpOnkGDRnCA" name="Value(0)">
                <result xmi:id="_ZoPdyTiCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoPdxTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPdyjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPdyziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPdzDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPdzTiCEeWlpOnkGDRnCA" name="SwitchStatement@1de68e9f" incoming="_ZoNCLziCEeWlpOnkGDRnCA" outgoing="_ZoNCMTiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPdzjiCEeWlpOnkGDRnCA" target="_ZoPeVjiCEeWlpOnkGDRnCA" source="_ZoPeUziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoPdzziCEeWlpOnkGDRnCA" target="_ZoPd0TiCEeWlpOnkGDRnCA" source="_ZoPeVziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd0DiCEeWlpOnkGDRnCA" target="_ZoPd7TiCEeWlpOnkGDRnCA" source="_ZoPeZTiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_ZoPd0TiCEeWlpOnkGDRnCA" name="Conditional(SwitchStatement@1de68e9f)" incoming="_ZoPdzziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd0jiCEeWlpOnkGDRnCA" target="_ZoPd9ziCEeWlpOnkGDRnCA" source="_ZoPd7ziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd0ziCEeWlpOnkGDRnCA" target="_ZoPeBziCEeWlpOnkGDRnCA" source="_ZoPd7TiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd1DiCEeWlpOnkGDRnCA" target="_ZoPd_jiCEeWlpOnkGDRnCA" source="_ZoPeBziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd1TiCEeWlpOnkGDRnCA" target="_ZoPeCTiCEeWlpOnkGDRnCA" source="_ZoPeBziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd1jiCEeWlpOnkGDRnCA" target="_ZoPeDziCEeWlpOnkGDRnCA" source="_ZoPd-jiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd1ziCEeWlpOnkGDRnCA" target="_ZoPeBDiCEeWlpOnkGDRnCA" source="_ZoPeDziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd2DiCEeWlpOnkGDRnCA" target="_ZoPeETiCEeWlpOnkGDRnCA" source="_ZoPeDziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd2TiCEeWlpOnkGDRnCA" target="_ZoPeGDiCEeWlpOnkGDRnCA" source="_ZoPeDDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd2jiCEeWlpOnkGDRnCA" target="_ZoPeGTiCEeWlpOnkGDRnCA" source="_ZoPeFDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd2ziCEeWlpOnkGDRnCA" target="_ZoPeGziCEeWlpOnkGDRnCA" source="_ZoPeGDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd3DiCEeWlpOnkGDRnCA" target="_ZoPeIjiCEeWlpOnkGDRnCA" source="_ZoPeGTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd3TiCEeWlpOnkGDRnCA" target="_ZoPeKDiCEeWlpOnkGDRnCA" source="_ZoPeGTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoPd3jiCEeWlpOnkGDRnCA" target="_ZoPd_TiCEeWlpOnkGDRnCA" source="_ZoPeKDiCEeWlpOnkGDRnCA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoPd3ziCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoPd4DiCEeWlpOnkGDRnCA" target="_ZoPeGjiCEeWlpOnkGDRnCA" source="_ZoPeKDiCEeWlpOnkGDRnCA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoPd4TiCEeWlpOnkGDRnCA" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoPd4jiCEeWlpOnkGDRnCA" target="_ZoPeKTiCEeWlpOnkGDRnCA" source="_ZoPeFziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd4ziCEeWlpOnkGDRnCA" target="_ZoPeKTiCEeWlpOnkGDRnCA" source="_ZoPeGDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoPd5DiCEeWlpOnkGDRnCA" target="_ZoPeKDiCEeWlpOnkGDRnCA" source="_ZoPeKTiCEeWlpOnkGDRnCA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoPd5TiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoPd5jiCEeWlpOnkGDRnCA" target="_ZoPeITiCEeWlpOnkGDRnCA" source="_ZoPeKTiCEeWlpOnkGDRnCA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoPd5ziCEeWlpOnkGDRnCA" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd6DiCEeWlpOnkGDRnCA" target="_ZoPeKjiCEeWlpOnkGDRnCA" source="_ZoPeATiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd6TiCEeWlpOnkGDRnCA" target="_ZoPeKjiCEeWlpOnkGDRnCA" source="_ZoPeHjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd6jiCEeWlpOnkGDRnCA" target="_ZoPeKjiCEeWlpOnkGDRnCA" source="_ZoPeJTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd6ziCEeWlpOnkGDRnCA" target="_ZoPeLTiCEeWlpOnkGDRnCA" source="_ZoPeKjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPd7DiCEeWlpOnkGDRnCA" target="_ZoPePjiCEeWlpOnkGDRnCA" source="_ZoPeNTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoPd7TiCEeWlpOnkGDRnCA" name="Fork(Call(Div).result(result))" incoming="_ZoPd0DiCEeWlpOnkGDRnCA" outgoing="_ZoPd0ziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPd7jiCEeWlpOnkGDRnCA" name="Value(0)">
                <result xmi:id="_ZoPd7ziCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoPd0jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPd8DiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPd8TiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPd8jiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoPd8ziCEeWlpOnkGDRnCA" name="Call(Div)">
                <argument xmi:id="_ZoPd9DiCEeWlpOnkGDRnCA" name="Call(Div).argument(x)" incoming="_ZoNCLTiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPd9TiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPd9jiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoPd9ziCEeWlpOnkGDRnCA" name="Call(Div).argument(y)" incoming="_ZoPd0jiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPd-DiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPd-TiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoPd-jiCEeWlpOnkGDRnCA" name="Call(Div).result(result)" outgoing="_ZoPd1jiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPd-ziCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPd_DiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoPd_TiCEeWlpOnkGDRnCA" name="Test(Case(Call(Div).result(result)))" incoming="_ZoPd3jiCEeWlpOnkGDRnCA">
                <first xmi:id="_ZoPd_jiCEeWlpOnkGDRnCA" name="Test(Case(Call(Div).result(result))).first" incoming="_ZoPd1DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPd_ziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeADiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoPeATiCEeWlpOnkGDRnCA" name="Test(Case(Call(Div).result(result))).result" outgoing="_ZoPd6DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeAjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeAziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoPeBDiCEeWlpOnkGDRnCA" name="Test(Case(Call(Div).result(result))).second" incoming="_ZoPd1ziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeBTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeBjiCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoPeBziCEeWlpOnkGDRnCA" name="Fork(Fork(Call(Div).result(result)))" incoming="_ZoPd0ziCEeWlpOnkGDRnCA" outgoing="_ZoPd1DiCEeWlpOnkGDRnCA _ZoPd1TiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoPeCDiCEeWlpOnkGDRnCA" name="Call(NotEmpty)">
                <argument xmi:id="_ZoPeCTiCEeWlpOnkGDRnCA" name="Call(NotEmpty).argument(seq)" incoming="_ZoPd1TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeCjiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeCziCEeWlpOnkGDRnCA" value="*"/>
                </argument>
                <result xmi:id="_ZoPeDDiCEeWlpOnkGDRnCA" name="Call(NotEmpty).result()" outgoing="_ZoPd2TiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeDTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeDjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoPeDziCEeWlpOnkGDRnCA" name="Fork(Call(Div).result(result))" incoming="_ZoPd1jiCEeWlpOnkGDRnCA" outgoing="_ZoPd1ziCEeWlpOnkGDRnCA _ZoPd2DiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoPeEDiCEeWlpOnkGDRnCA" name="Call(NotEmpty)">
                <argument xmi:id="_ZoPeETiCEeWlpOnkGDRnCA" name="Call(NotEmpty).argument(seq)" incoming="_ZoPd2DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeEjiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeEziCEeWlpOnkGDRnCA" value="*"/>
                </argument>
                <result xmi:id="_ZoPeFDiCEeWlpOnkGDRnCA" name="Call(NotEmpty).result()" outgoing="_ZoPd2jiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeFTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeFjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_ZoPeFziCEeWlpOnkGDRnCA" name="Initial(Test(Case(Call(Div).result(result))))" outgoing="_ZoPd4jiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoPeGDiCEeWlpOnkGDRnCA" name="Fork(Call(NotEmpty).result())" incoming="_ZoPd2TiCEeWlpOnkGDRnCA" outgoing="_ZoPd2ziCEeWlpOnkGDRnCA _ZoPd4ziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoPeGTiCEeWlpOnkGDRnCA" name="Fork(Call(NotEmpty).result())" incoming="_ZoPd2jiCEeWlpOnkGDRnCA" outgoing="_ZoPd3DiCEeWlpOnkGDRnCA _ZoPd3TiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoPeGjiCEeWlpOnkGDRnCA" name="Call(Not)" incoming="_ZoPd4DiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoPeGziCEeWlpOnkGDRnCA" name="Call(Not).argument(x)" incoming="_ZoPd2ziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeHDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeHTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoPeHjiCEeWlpOnkGDRnCA" name="Call(Not).result(result)" outgoing="_ZoPd6TiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeHziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeIDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoPeITiCEeWlpOnkGDRnCA" name="Call(Not)" incoming="_ZoPd5jiCEeWlpOnkGDRnCA">
                <argument xmi:id="_ZoPeIjiCEeWlpOnkGDRnCA" name="Call(Not).argument(x)" incoming="_ZoPd3DiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeIziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeJDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoPeJTiCEeWlpOnkGDRnCA" name="Call(Not).result(result)" outgoing="_ZoPd6jiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeJjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeJziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
              </node>
              <node xmi:type="uml:DecisionNode" xmi:id="_ZoPeKDiCEeWlpOnkGDRnCA" name="Decision(Call(NotEmpty).result())" incoming="_ZoPd3TiCEeWlpOnkGDRnCA _ZoPd5DiCEeWlpOnkGDRnCA" outgoing="_ZoPd3jiCEeWlpOnkGDRnCA _ZoPd4DiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoPd3TiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_ZoPeKTiCEeWlpOnkGDRnCA" name="Decision(Call(NotEmpty).result())" incoming="_ZoPd4jiCEeWlpOnkGDRnCA _ZoPd4ziCEeWlpOnkGDRnCA" outgoing="_ZoPd5DiCEeWlpOnkGDRnCA _ZoPd5jiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoPd4ziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:MergeNode" xmi:id="_ZoPeKjiCEeWlpOnkGDRnCA" name="Merge(Test(Case(Call(Div).result(result))).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_ZoPd6DiCEeWlpOnkGDRnCA _ZoPd6TiCEeWlpOnkGDRnCA _ZoPd6jiCEeWlpOnkGDRnCA" outgoing="_ZoPd6ziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPeKziCEeWlpOnkGDRnCA" name="Passthru(Merge(Test(Case(Call(Div).result(result))).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result()))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPeLDiCEeWlpOnkGDRnCA" target="_ZoPeMDiCEeWlpOnkGDRnCA" source="_ZoPeLTiCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoPeLTiCEeWlpOnkGDRnCA" name="Passthru(Merge(Test(Case(Call(Div).result(result))).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())).input" incoming="_ZoPd6ziCEeWlpOnkGDRnCA" outgoing="_ZoPeLDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeLjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeLziCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoPeMDiCEeWlpOnkGDRnCA" name="Passthru(Merge(Test(Case(Call(Div).result(result))).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())).output" incoming="_ZoPeLDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeMTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeMjiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPeMziCEeWlpOnkGDRnCA" name="ExpressionStatement@1b3ecbfb">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPeNDiCEeWlpOnkGDRnCA" target="_ZoPeNTiCEeWlpOnkGDRnCA" source="_ZoPeODiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ZoPeNTiCEeWlpOnkGDRnCA" name="Fork(switch2)@7f42f3ec" incoming="_ZoPeNDiCEeWlpOnkGDRnCA" outgoing="_ZoPd7DiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPeNjiCEeWlpOnkGDRnCA" name="RightHandSide@49c4c3a">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPeNziCEeWlpOnkGDRnCA" name="Value(1)">
                    <result xmi:id="_ZoPeODiCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_ZoPeNDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeOTiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeOjiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPeOziCEeWlpOnkGDRnCA" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPePDiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch2)@7f42f3ec)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPePTiCEeWlpOnkGDRnCA" target="_ZoPeQTiCEeWlpOnkGDRnCA" source="_ZoPePjiCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoPePjiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch2)@7f42f3ec).input" incoming="_ZoPd7DiCEeWlpOnkGDRnCA" outgoing="_ZoPePTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPePziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeQDiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoPeQTiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch2)@7f42f3ec).output" incoming="_ZoPePTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeQjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeQziCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPeRDiCEeWlpOnkGDRnCA" name="Value(true)">
                <result xmi:id="_ZoPeRTiCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeRjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeRziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoPeSDiCEeWlpOnkGDRnCA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPeSTiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch2)@610e3970)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPeSjiCEeWlpOnkGDRnCA" target="_ZoPeTjiCEeWlpOnkGDRnCA" source="_ZoPeSziCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoPeSziCEeWlpOnkGDRnCA" name="Passthru(Fork(switch2)@610e3970).input" incoming="_ZoNCLjiCEeWlpOnkGDRnCA" outgoing="_ZoPeSjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeTDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeTTiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoPeTjiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch2)@610e3970).output" incoming="_ZoPeSjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeTziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeUDiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_ZoPeUTiCEeWlpOnkGDRnCA" body="_ZoPeMziCEeWlpOnkGDRnCA _ZoPePDiCEeWlpOnkGDRnCA" bodyOutput="_ZoPeQTiCEeWlpOnkGDRnCA" decider="_ZoPeMDiCEeWlpOnkGDRnCA" successorClause="_ZoPeUjiCEeWlpOnkGDRnCA" test="_ZoPd7jiCEeWlpOnkGDRnCA _ZoPd8ziCEeWlpOnkGDRnCA _ZoPd_TiCEeWlpOnkGDRnCA _ZoPeCDiCEeWlpOnkGDRnCA _ZoPeEDiCEeWlpOnkGDRnCA _ZoPeGjiCEeWlpOnkGDRnCA _ZoPeITiCEeWlpOnkGDRnCA _ZoPeKziCEeWlpOnkGDRnCA"/>
              <clause xmi:id="_ZoPeUjiCEeWlpOnkGDRnCA" body="_ZoPeSTiCEeWlpOnkGDRnCA" bodyOutput="_ZoPeTjiCEeWlpOnkGDRnCA" decider="_ZoPeRTiCEeWlpOnkGDRnCA" predecessorClause="_ZoPeUTiCEeWlpOnkGDRnCA" test="_ZoPeRDiCEeWlpOnkGDRnCA"/>
              <result xmi:id="_ZoPeUziCEeWlpOnkGDRnCA" name="Conditional(SwitchStatement@1de68e9f).result(switch2)" outgoing="_ZoPdzjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeVDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeVTiCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoPeVjiCEeWlpOnkGDRnCA" name="Fork(switch2)" incoming="_ZoPdzjiCEeWlpOnkGDRnCA" outgoing="_ZoNCMDiCEeWlpOnkGDRnCA _ZoNCOjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPeVziCEeWlpOnkGDRnCA" name="Switch((SwitchStatement@1de68e9f)" outgoing="_ZoPdzziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPeWDiCEeWlpOnkGDRnCA" target="_ZoPeYjiCEeWlpOnkGDRnCA" source="_ZoPeWjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPeWTiCEeWlpOnkGDRnCA" name="Value(0)">
                <result xmi:id="_ZoPeWjiCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoPeWDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeWziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeXDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPeXTiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoPeXjiCEeWlpOnkGDRnCA" name="Call(Div)">
                <argument xmi:id="_ZoPeXziCEeWlpOnkGDRnCA" name="Call(Div).argument(x)" incoming="_ZoNCLDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeYDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeYTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoPeYjiCEeWlpOnkGDRnCA" name="Call(Div).argument(y)" incoming="_ZoPeWDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeYziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeZDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoPeZTiCEeWlpOnkGDRnCA" name="Call(Div).result(result)" outgoing="_ZoPd0DiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeZjiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeZziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Div"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPeaDiCEeWlpOnkGDRnCA" name="SwitchStatement@facdc0" incoming="_ZoNCMTiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPeaTiCEeWlpOnkGDRnCA" target="_ZoPerDiCEeWlpOnkGDRnCA" source="_ZoPeqTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoPeajiCEeWlpOnkGDRnCA" target="_ZoPeaziCEeWlpOnkGDRnCA" source="_ZoPerTiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ConditionalNode" xmi:id="_ZoPeaziCEeWlpOnkGDRnCA" name="Conditional(SwitchStatement@facdc0)" incoming="_ZoPeajiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPebDiCEeWlpOnkGDRnCA" target="_ZoPedziCEeWlpOnkGDRnCA" source="_ZoPecDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPebTiCEeWlpOnkGDRnCA" target="_ZoPefTiCEeWlpOnkGDRnCA" source="_ZoPecjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPebjiCEeWlpOnkGDRnCA" target="_ZoPeiziCEeWlpOnkGDRnCA" source="_ZoPegjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPebziCEeWlpOnkGDRnCA" target="_ZoPeoTiCEeWlpOnkGDRnCA" source="_ZoPemDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoPecDiCEeWlpOnkGDRnCA" name="Fork(Fork(switch2))" incoming="_ZoNCMDiCEeWlpOnkGDRnCA" outgoing="_ZoPebDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPecTiCEeWlpOnkGDRnCA" name="Value(0)">
                <result xmi:id="_ZoPecjiCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoPebTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPecziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPedDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPedTiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
              <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoPedjiCEeWlpOnkGDRnCA" name="Test(Case(Value(0).result))">
                <first xmi:id="_ZoPedziCEeWlpOnkGDRnCA" name="Test(Case(Value(0).result)).first" incoming="_ZoPebDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeeDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeeTiCEeWlpOnkGDRnCA" value="1"/>
                </first>
                <result xmi:id="_ZoPeejiCEeWlpOnkGDRnCA" name="Test(Case(Value(0).result)).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeeziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPefDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <second xmi:id="_ZoPefTiCEeWlpOnkGDRnCA" name="Test(Case(Value(0).result)).second" incoming="_ZoPebTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPefjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPefziCEeWlpOnkGDRnCA" value="1"/>
                </second>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPegDiCEeWlpOnkGDRnCA" name="ExpressionStatement@2543937d">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPegTiCEeWlpOnkGDRnCA" target="_ZoPegjiCEeWlpOnkGDRnCA" source="_ZoPehTiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ZoPegjiCEeWlpOnkGDRnCA" name="Fork(switch3)@3d86a01f" incoming="_ZoPegTiCEeWlpOnkGDRnCA" outgoing="_ZoPebjiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPegziCEeWlpOnkGDRnCA" name="RightHandSide@517a72c7">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPehDiCEeWlpOnkGDRnCA" name="Value(0)">
                    <result xmi:id="_ZoPehTiCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoPegTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPehjiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPehziCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPeiDiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPeiTiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch3)@3d86a01f)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPeijiCEeWlpOnkGDRnCA" target="_ZoPejjiCEeWlpOnkGDRnCA" source="_ZoPeiziCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoPeiziCEeWlpOnkGDRnCA" name="Passthru(Fork(switch3)@3d86a01f).input" incoming="_ZoPebjiCEeWlpOnkGDRnCA" outgoing="_ZoPeijiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPejDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPejTiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoPejjiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch3)@3d86a01f).output" incoming="_ZoPeijiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPejziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPekDiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPekTiCEeWlpOnkGDRnCA" name="Value(true)">
                <result xmi:id="_ZoPekjiCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPekziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPelDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoPelTiCEeWlpOnkGDRnCA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPeljiCEeWlpOnkGDRnCA" name="ExpressionStatement@232dc10c">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPelziCEeWlpOnkGDRnCA" target="_ZoPemDiCEeWlpOnkGDRnCA" source="_ZoPemziCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ForkNode" xmi:id="_ZoPemDiCEeWlpOnkGDRnCA" name="Fork(switch3)@48459499" incoming="_ZoPelziCEeWlpOnkGDRnCA" outgoing="_ZoPebziCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPemTiCEeWlpOnkGDRnCA" name="RightHandSide@501eede0">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPemjiCEeWlpOnkGDRnCA" name="Value(1)">
                    <result xmi:id="_ZoPemziCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_ZoPelziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPenDiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPenTiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPenjiCEeWlpOnkGDRnCA" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPenziCEeWlpOnkGDRnCA" name="Passthru(Fork(switch3)@48459499)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPeoDiCEeWlpOnkGDRnCA" target="_ZoPepDiCEeWlpOnkGDRnCA" source="_ZoPeoTiCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoPeoTiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch3)@48459499).input" incoming="_ZoPebziCEeWlpOnkGDRnCA" outgoing="_ZoPeoDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeojiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeoziCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_ZoPepDiCEeWlpOnkGDRnCA" name="Passthru(Fork(switch3)@48459499).output" incoming="_ZoPeoDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPepTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPepjiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeOutput>
              </node>
              <clause xmi:id="_ZoPepziCEeWlpOnkGDRnCA" body="_ZoPegDiCEeWlpOnkGDRnCA _ZoPeiTiCEeWlpOnkGDRnCA" bodyOutput="_ZoPejjiCEeWlpOnkGDRnCA" decider="_ZoPeejiCEeWlpOnkGDRnCA" successorClause="_ZoPeqDiCEeWlpOnkGDRnCA" test="_ZoPecTiCEeWlpOnkGDRnCA _ZoPedjiCEeWlpOnkGDRnCA"/>
              <clause xmi:id="_ZoPeqDiCEeWlpOnkGDRnCA" body="_ZoPeljiCEeWlpOnkGDRnCA _ZoPenziCEeWlpOnkGDRnCA" bodyOutput="_ZoPepDiCEeWlpOnkGDRnCA" decider="_ZoPekjiCEeWlpOnkGDRnCA" predecessorClause="_ZoPepziCEeWlpOnkGDRnCA" test="_ZoPekTiCEeWlpOnkGDRnCA"/>
              <result xmi:id="_ZoPeqTiCEeWlpOnkGDRnCA" name="Conditional(SwitchStatement@facdc0).result(switch3)" outgoing="_ZoPeaTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPeqjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPeqziCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoPerDiCEeWlpOnkGDRnCA" name="Fork(switch3)" incoming="_ZoPeaTiCEeWlpOnkGDRnCA" outgoing="_ZoNCOziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPerTiCEeWlpOnkGDRnCA" name="Switch((SwitchStatement@facdc0)" outgoing="_ZoPeajiCEeWlpOnkGDRnCA"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoNB6jiCEeWlpOnkGDRnCA" name="Output(reading1)" incoming="_ZoNB4DiCEeWlpOnkGDRnCA" parameter="_ZoNBwjiCEeWlpOnkGDRnCA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoNB6ziCEeWlpOnkGDRnCA" name="Output(condition1)" incoming="_ZoNB4TiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" parameter="_ZoNBxTiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoNB7DiCEeWlpOnkGDRnCA" name="Output(condition2)" incoming="_ZoNB4jiCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" parameter="_ZoNByDiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoNB7TiCEeWlpOnkGDRnCA" name="Output(condition3)" incoming="_ZoNB4ziCEeWlpOnkGDRnCA" type="_ZoQFEziCEeWlpOnkGDRnCA" parameter="_ZoNByziCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoNB7jiCEeWlpOnkGDRnCA" name="Output(year)" incoming="_ZoNB5DiCEeWlpOnkGDRnCA" parameter="_ZoNBzjiCEeWlpOnkGDRnCA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoNB7ziCEeWlpOnkGDRnCA" name="Output(month)" incoming="_ZoNB5TiCEeWlpOnkGDRnCA" parameter="_ZoNB0TiCEeWlpOnkGDRnCA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoNB8DiCEeWlpOnkGDRnCA" name="Output(numDays)" incoming="_ZoNB5jiCEeWlpOnkGDRnCA" parameter="_ZoNB1DiCEeWlpOnkGDRnCA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoNB8TiCEeWlpOnkGDRnCA" name="Output(switch1)" incoming="_ZoNB5ziCEeWlpOnkGDRnCA" parameter="_ZoNB1ziCEeWlpOnkGDRnCA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoNB8jiCEeWlpOnkGDRnCA" name="Output(switch2)" incoming="_ZoNB6DiCEeWlpOnkGDRnCA" parameter="_ZoNB2jiCEeWlpOnkGDRnCA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoNB8ziCEeWlpOnkGDRnCA" name="Output(switch3)" incoming="_ZoNB6TiCEeWlpOnkGDRnCA" parameter="_ZoNB3TiCEeWlpOnkGDRnCA">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </node>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoPerjiCEeWlpOnkGDRnCA" name="destroy$method$1" specification="_ZoQEejiCEeWlpOnkGDRnCA" node="_ZoPerziCEeWlpOnkGDRnCA" group="_ZoPerziCEeWlpOnkGDRnCA">
        <structuredNode xmi:id="_ZoPerziCEeWlpOnkGDRnCA" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoPesDiCEeWlpOnkGDRnCA" name="Statements_Conditional$initialization$1" specification="_ZoPe-DiCEeWlpOnkGDRnCA" node="_ZoPesTiCEeWlpOnkGDRnCA" group="_ZoPesTiCEeWlpOnkGDRnCA">
        <structuredNode xmi:id="_ZoPesTiCEeWlpOnkGDRnCA" name="Body(Statements_Conditional$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPesjiCEeWlpOnkGDRnCA" target="_ZoPewTiCEeWlpOnkGDRnCA" source="_ZoPevjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPesziCEeWlpOnkGDRnCA" target="_ZoPexTiCEeWlpOnkGDRnCA" source="_ZoPewTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPetDiCEeWlpOnkGDRnCA" target="_ZoPe0DiCEeWlpOnkGDRnCA" source="_ZoPewTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPetTiCEeWlpOnkGDRnCA" target="_ZoPe2jiCEeWlpOnkGDRnCA" source="_ZoPewTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPetjiCEeWlpOnkGDRnCA" target="_ZoPe4TiCEeWlpOnkGDRnCA" source="_ZoPe3TiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPetziCEeWlpOnkGDRnCA" target="_ZoPe7TiCEeWlpOnkGDRnCA" source="_ZoPe5DiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPeuDiCEeWlpOnkGDRnCA" target="_ZoPe8ziCEeWlpOnkGDRnCA" source="_ZoPe6DiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoPeuTiCEeWlpOnkGDRnCA" target="_ZoPe9ziCEeWlpOnkGDRnCA" source="_ZoPe9jiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPeujiCEeWlpOnkGDRnCA" target="_ZoPe9ziCEeWlpOnkGDRnCA" source="_ZoPe8DiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoPeuziCEeWlpOnkGDRnCA" target="_ZoPewjiCEeWlpOnkGDRnCA" source="_ZoPe9ziCEeWlpOnkGDRnCA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoPevDiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoPevTiCEeWlpOnkGDRnCA" name="ReadSelf">
            <result xmi:id="_ZoPevjiCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoPesjiCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPevziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPewDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoPewTiCEeWlpOnkGDRnCA" name="Fork(ReadSelf.result)" incoming="_ZoPesjiCEeWlpOnkGDRnCA" outgoing="_ZoPesziCEeWlpOnkGDRnCA _ZoPetDiCEeWlpOnkGDRnCA _ZoPetTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPewjiCEeWlpOnkGDRnCA" name="Initialization" incoming="_ZoPeuziCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoPewziCEeWlpOnkGDRnCA" target="_ZoPeyDiCEeWlpOnkGDRnCA" source="_ZoPexDiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_ZoPexDiCEeWlpOnkGDRnCA" name="Call(Test$initialization$1)" outgoing="_ZoPewziCEeWlpOnkGDRnCA" operation="_ZoQrcziCEeWlpOnkGDRnCA">
              <target xmi:id="_ZoPexTiCEeWlpOnkGDRnCA" name="Call(Test$initialization$1).target" incoming="_ZoPesziCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPexjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPexziCEeWlpOnkGDRnCA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoPeyDiCEeWlpOnkGDRnCA" name="Set(initializationFlag)" incoming="_ZoPewziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoPeyTiCEeWlpOnkGDRnCA" target="_ZoPe1jiCEeWlpOnkGDRnCA" source="_ZoPeyziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPeyjiCEeWlpOnkGDRnCA" name="Value(true)">
                <result xmi:id="_ZoPeyziCEeWlpOnkGDRnCA" name="Value(true).result" outgoing="_ZoPeyTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPezDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPezTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoPezjiCEeWlpOnkGDRnCA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ZoPezziCEeWlpOnkGDRnCA" name="Write(Statements_Conditional$initializationFlag$1)" structuralFeature="_ZoMaCDiCEeWlpOnkGDRnCA" isReplaceAll="true">
                <object xmi:id="_ZoPe0DiCEeWlpOnkGDRnCA" name="Write(Statements_Conditional$initializationFlag$1).object" incoming="_ZoPetDiCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPe0TiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPe0jiCEeWlpOnkGDRnCA" value="1"/>
                </object>
                <result xmi:id="_ZoPe0ziCEeWlpOnkGDRnCA" name="Write(Statements_Conditional$initializationFlag$1).result" type="_ZoMaATiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPe1DiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPe1TiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:id="_ZoPe1jiCEeWlpOnkGDRnCA" name="Write(Statements_Conditional$initializationFlag$1).value" incoming="_ZoPeyTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPe1ziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPe2DiCEeWlpOnkGDRnCA" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ZoPe2TiCEeWlpOnkGDRnCA" name="Read(Statements_Conditional$initializationFlag$1)" structuralFeature="_ZoMaCDiCEeWlpOnkGDRnCA">
            <object xmi:id="_ZoPe2jiCEeWlpOnkGDRnCA" name="Read(Statements_Conditional$initializationFlag$1).object" incoming="_ZoPetTiCEeWlpOnkGDRnCA" type="_ZoMaATiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPe2ziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPe3DiCEeWlpOnkGDRnCA" value="1"/>
            </object>
            <result xmi:id="_ZoPe3TiCEeWlpOnkGDRnCA" name="Read(Statements_Conditional$initializationFlag$1).result" outgoing="_ZoPetjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPe3jiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPe3ziCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoPe4DiCEeWlpOnkGDRnCA" name="Call(ListSize)">
            <argument xmi:id="_ZoPe4TiCEeWlpOnkGDRnCA" name="Call(ListSize).argument(list)" incoming="_ZoPetjiCEeWlpOnkGDRnCA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPe4jiCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPe4ziCEeWlpOnkGDRnCA" value="*"/>
            </argument>
            <result xmi:id="_ZoPe5DiCEeWlpOnkGDRnCA" name="Call(ListSize).result(result)" outgoing="_ZoPetziCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPe5TiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPe5jiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoPe5ziCEeWlpOnkGDRnCA" name="Value(0)">
            <result xmi:id="_ZoPe6DiCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoPeuDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPe6TiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPe6jiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_ZoPe6ziCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoPe7DiCEeWlpOnkGDRnCA" name="Test(Size==0)">
            <first xmi:id="_ZoPe7TiCEeWlpOnkGDRnCA" name="Test(Size==0).first" incoming="_ZoPetziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPe7jiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPe7ziCEeWlpOnkGDRnCA" value="1"/>
            </first>
            <result xmi:id="_ZoPe8DiCEeWlpOnkGDRnCA" name="Test(Size==0).result" outgoing="_ZoPeujiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPe8TiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPe8jiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <second xmi:id="_ZoPe8ziCEeWlpOnkGDRnCA" name="Test(Size==0).second" incoming="_ZoPeuDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPe9DiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPe9TiCEeWlpOnkGDRnCA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_ZoPe9jiCEeWlpOnkGDRnCA" name="InitialNode" outgoing="_ZoPeuTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_ZoPe9ziCEeWlpOnkGDRnCA" name="Decision(Test(Statements_Conditional$initializationFlag$1))" incoming="_ZoPeuTiCEeWlpOnkGDRnCA _ZoPeujiCEeWlpOnkGDRnCA" outgoing="_ZoPeuziCEeWlpOnkGDRnCA" decisionInputFlow="_ZoPeujiCEeWlpOnkGDRnCA"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_ZoPe-DiCEeWlpOnkGDRnCA" name="Statements_Conditional$initialization$1" visibility="protected" method="_ZoPesDiCEeWlpOnkGDRnCA"/>
      <ownedOperation xmi:id="_ZoPe-TiCEeWlpOnkGDRnCA" name="Statements_Conditional" visibility="public" method="_ZoMaCziCEeWlpOnkGDRnCA">
        <ownedParameter xmi:id="_ZoPe-jiCEeWlpOnkGDRnCA" name="" visibility="package" type="_ZoMaATiCEeWlpOnkGDRnCA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPe-ziCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPe_DiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ZoPe_TiCEeWlpOnkGDRnCA" name="run" visibility="public" method="_ZoMaMTiCEeWlpOnkGDRnCA">
        <ownedParameter xmi:id="_ZoPe_jiCEeWlpOnkGDRnCA" name="tester" visibility="package" type="_ZoQrfTiCEeWlpOnkGDRnCA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPe_ziCEeWlpOnkGDRnCA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPfADiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoPfATiCEeWlpOnkGDRnCA" name="" visibility="package" type="_ZoMaATiCEeWlpOnkGDRnCA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPfAjiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPfAziCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ZoPfBDiCEeWlpOnkGDRnCA" name="test" visibility="package" method="_ZoNBwTiCEeWlpOnkGDRnCA">
        <ownedParameter xmi:id="_ZoPfBTiCEeWlpOnkGDRnCA" name="reading1" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoPfBjiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoPfBziCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoPfCDiCEeWlpOnkGDRnCA" name="condition1" visibility="package" type="_ZoQFEziCEeWlpOnkGDRnCA" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEYDiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEYTiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoQEYjiCEeWlpOnkGDRnCA" name="condition2" visibility="package" type="_ZoQFEziCEeWlpOnkGDRnCA" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEYziCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEZDiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoQEZTiCEeWlpOnkGDRnCA" name="condition3" visibility="package" type="_ZoQFEziCEeWlpOnkGDRnCA" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEZjiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEZziCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoQEaDiCEeWlpOnkGDRnCA" name="year" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEaTiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEajiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoQEaziCEeWlpOnkGDRnCA" name="month" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEbDiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEbTiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoQEbjiCEeWlpOnkGDRnCA" name="numDays" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEbziCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEcDiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoQEcTiCEeWlpOnkGDRnCA" name="switch1" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEcjiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEcziCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoQEdDiCEeWlpOnkGDRnCA" name="switch2" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEdTiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEdjiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoQEdziCEeWlpOnkGDRnCA" name="switch3" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEeDiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEeTiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ZoQEejiCEeWlpOnkGDRnCA" name="destroy" visibility="public" method="_ZoPerjiCEeWlpOnkGDRnCA" redefinedOperation="_ZoQrdDiCEeWlpOnkGDRnCA"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_ZoQEeziCEeWlpOnkGDRnCA" name="Monitor" visibility="package">
        <ownedAttribute xmi:id="_ZoQEfDiCEeWlpOnkGDRnCA" name="Monitor$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEfTiCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEfjiCEeWlpOnkGDRnCA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoQEfziCEeWlpOnkGDRnCA" name="raiseAlarm$method$1" specification="_ZoQFCTiCEeWlpOnkGDRnCA" node="_ZoQEhDiCEeWlpOnkGDRnCA _ZoQEhTiCEeWlpOnkGDRnCA _ZoQEhjiCEeWlpOnkGDRnCA" group="_ZoQEhjiCEeWlpOnkGDRnCA">
          <ownedParameter xmi:id="_ZoQEgDiCEeWlpOnkGDRnCA" name="sensorId">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEgTiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEgjiCEeWlpOnkGDRnCA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEgziCEeWlpOnkGDRnCA" target="_ZoQEhTiCEeWlpOnkGDRnCA" source="_ZoQEhDiCEeWlpOnkGDRnCA"/>
          <structuredNode xmi:id="_ZoQEhjiCEeWlpOnkGDRnCA" name="Body(raiseAlarm$method$1)"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoQEhDiCEeWlpOnkGDRnCA" name="Input(sensorId)" outgoing="_ZoQEgziCEeWlpOnkGDRnCA" parameter="_ZoQEgDiCEeWlpOnkGDRnCA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoQEhTiCEeWlpOnkGDRnCA" name="Fork(sensorId)" incoming="_ZoQEgziCEeWlpOnkGDRnCA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoQEhziCEeWlpOnkGDRnCA" name="cleanUp$method$1" specification="_ZoQFDTiCEeWlpOnkGDRnCA" node="_ZoQEiDiCEeWlpOnkGDRnCA" group="_ZoQEiDiCEeWlpOnkGDRnCA">
          <structuredNode xmi:id="_ZoQEiDiCEeWlpOnkGDRnCA" name="Body(cleanUp$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoQEiTiCEeWlpOnkGDRnCA" name="Monitor$method$1" specification="_ZoQFDjiCEeWlpOnkGDRnCA" node="_ZoQEjjiCEeWlpOnkGDRnCA _ZoQEjziCEeWlpOnkGDRnCA" group="_ZoQEjziCEeWlpOnkGDRnCA">
          <ownedParameter xmi:id="_ZoQEijiCEeWlpOnkGDRnCA" name="" type="_ZoQEeziCEeWlpOnkGDRnCA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEiziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEjDiCEeWlpOnkGDRnCA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEjTiCEeWlpOnkGDRnCA" target="_ZoQEjjiCEeWlpOnkGDRnCA" source="_ZoQEoDiCEeWlpOnkGDRnCA"/>
          <structuredNode xmi:id="_ZoQEjziCEeWlpOnkGDRnCA" name="Body(Monitor$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEkDiCEeWlpOnkGDRnCA" target="_ZoQEoDiCEeWlpOnkGDRnCA" source="_ZoQEnTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEkTiCEeWlpOnkGDRnCA" target="_ZoQEojiCEeWlpOnkGDRnCA" source="_ZoQEoDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQEkjiCEeWlpOnkGDRnCA" target="_ZoQEmziCEeWlpOnkGDRnCA" source="_ZoQEoTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEkziCEeWlpOnkGDRnCA" target="_ZoQEpjiCEeWlpOnkGDRnCA" source="_ZoQEoDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQElDiCEeWlpOnkGDRnCA" target="_ZoQErTiCEeWlpOnkGDRnCA" source="_ZoQEqTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQElTiCEeWlpOnkGDRnCA" target="_ZoQEuTiCEeWlpOnkGDRnCA" source="_ZoQEsDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEljiCEeWlpOnkGDRnCA" target="_ZoQEvziCEeWlpOnkGDRnCA" source="_ZoQEtDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQElziCEeWlpOnkGDRnCA" target="_ZoQEwziCEeWlpOnkGDRnCA" source="_ZoQEwjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEmDiCEeWlpOnkGDRnCA" target="_ZoQEwziCEeWlpOnkGDRnCA" source="_ZoQEvDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQEmTiCEeWlpOnkGDRnCA" target="_ZoQEoTiCEeWlpOnkGDRnCA" source="_ZoQEwziCEeWlpOnkGDRnCA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQEmjiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQEmziCEeWlpOnkGDRnCA" name="Body" incoming="_ZoQEkjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoQEnDiCEeWlpOnkGDRnCA" name="ReadSelf">
              <result xmi:id="_ZoQEnTiCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoQEkDiCEeWlpOnkGDRnCA" type="_ZoQEeziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEnjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEnziCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoQEoDiCEeWlpOnkGDRnCA" name="Fork(ReadSelf.result)" incoming="_ZoQEkDiCEeWlpOnkGDRnCA" outgoing="_ZoQEjTiCEeWlpOnkGDRnCA _ZoQEkTiCEeWlpOnkGDRnCA _ZoQEkziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_ZoQEoTiCEeWlpOnkGDRnCA" name="Call(Monitor$initialization$1)" incoming="_ZoQEmTiCEeWlpOnkGDRnCA" outgoing="_ZoQEkjiCEeWlpOnkGDRnCA" operation="_ZoQFCDiCEeWlpOnkGDRnCA">
              <target xmi:id="_ZoQEojiCEeWlpOnkGDRnCA" name="Call(Monitor$initialization$1).target" incoming="_ZoQEkTiCEeWlpOnkGDRnCA" type="_ZoQEeziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEoziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEpDiCEeWlpOnkGDRnCA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ZoQEpTiCEeWlpOnkGDRnCA" name="Read(Monitor$initializationFlag$1)" structuralFeature="_ZoQEfDiCEeWlpOnkGDRnCA">
              <object xmi:id="_ZoQEpjiCEeWlpOnkGDRnCA" name="Read(Monitor$initializationFlag$1).object" incoming="_ZoQEkziCEeWlpOnkGDRnCA" type="_ZoQEeziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEpziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEqDiCEeWlpOnkGDRnCA" value="1"/>
              </object>
              <result xmi:id="_ZoQEqTiCEeWlpOnkGDRnCA" name="Read(Monitor$initializationFlag$1).result" outgoing="_ZoQElDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEqjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEqziCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQErDiCEeWlpOnkGDRnCA" name="Call(ListSize)">
              <argument xmi:id="_ZoQErTiCEeWlpOnkGDRnCA" name="Call(ListSize).argument(list)" incoming="_ZoQElDiCEeWlpOnkGDRnCA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQErjiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQErziCEeWlpOnkGDRnCA" value="*"/>
              </argument>
              <result xmi:id="_ZoQEsDiCEeWlpOnkGDRnCA" name="Call(ListSize).result(result)" outgoing="_ZoQElTiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEsTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEsjiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQEsziCEeWlpOnkGDRnCA" name="Value(0)">
              <result xmi:id="_ZoQEtDiCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoQEljiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEtTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEtjiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_ZoQEtziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoQEuDiCEeWlpOnkGDRnCA" name="Test(Size==0)">
              <first xmi:id="_ZoQEuTiCEeWlpOnkGDRnCA" name="Test(Size==0).first" incoming="_ZoQElTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEujiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEuziCEeWlpOnkGDRnCA" value="1"/>
              </first>
              <result xmi:id="_ZoQEvDiCEeWlpOnkGDRnCA" name="Test(Size==0).result" outgoing="_ZoQEmDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEvTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEvjiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <second xmi:id="_ZoQEvziCEeWlpOnkGDRnCA" name="Test(Size==0).second" incoming="_ZoQEljiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQEwDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQEwTiCEeWlpOnkGDRnCA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ZoQEwjiCEeWlpOnkGDRnCA" name="InitialNode" outgoing="_ZoQElziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ZoQEwziCEeWlpOnkGDRnCA" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_ZoQElziCEeWlpOnkGDRnCA _ZoQEmDiCEeWlpOnkGDRnCA" outgoing="_ZoQEmTiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoQEmDiCEeWlpOnkGDRnCA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoQEjjiCEeWlpOnkGDRnCA" name="Return" incoming="_ZoQEjTiCEeWlpOnkGDRnCA" type="_ZoQEeziCEeWlpOnkGDRnCA" parameter="_ZoQEijiCEeWlpOnkGDRnCA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoQExDiCEeWlpOnkGDRnCA" name="destroy$method$1" specification="_ZoQFEjiCEeWlpOnkGDRnCA" node="_ZoQExTiCEeWlpOnkGDRnCA" group="_ZoQExTiCEeWlpOnkGDRnCA">
          <structuredNode xmi:id="_ZoQExTiCEeWlpOnkGDRnCA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoQExjiCEeWlpOnkGDRnCA" name="Monitor$initialization$1" specification="_ZoQFCDiCEeWlpOnkGDRnCA" node="_ZoQExziCEeWlpOnkGDRnCA" group="_ZoQExziCEeWlpOnkGDRnCA">
          <structuredNode xmi:id="_ZoQExziCEeWlpOnkGDRnCA" name="Body(Monitor$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEyDiCEeWlpOnkGDRnCA" target="_ZoQE1jiCEeWlpOnkGDRnCA" source="_ZoQE0ziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEyTiCEeWlpOnkGDRnCA" target="_ZoQE4DiCEeWlpOnkGDRnCA" source="_ZoQE1jiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEyjiCEeWlpOnkGDRnCA" target="_ZoQE6jiCEeWlpOnkGDRnCA" source="_ZoQE1jiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEyziCEeWlpOnkGDRnCA" target="_ZoQE8TiCEeWlpOnkGDRnCA" source="_ZoQE7TiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEzDiCEeWlpOnkGDRnCA" target="_ZoQE_TiCEeWlpOnkGDRnCA" source="_ZoQE9DiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEzTiCEeWlpOnkGDRnCA" target="_ZoQFAziCEeWlpOnkGDRnCA" source="_ZoQE-DiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQEzjiCEeWlpOnkGDRnCA" target="_ZoQFBziCEeWlpOnkGDRnCA" source="_ZoQFBjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQEzziCEeWlpOnkGDRnCA" target="_ZoQFBziCEeWlpOnkGDRnCA" source="_ZoQFADiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQE0DiCEeWlpOnkGDRnCA" target="_ZoQE1ziCEeWlpOnkGDRnCA" source="_ZoQFBziCEeWlpOnkGDRnCA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQE0TiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoQE0jiCEeWlpOnkGDRnCA" name="ReadSelf">
              <result xmi:id="_ZoQE0ziCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoQEyDiCEeWlpOnkGDRnCA" type="_ZoQEeziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQE1DiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQE1TiCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoQE1jiCEeWlpOnkGDRnCA" name="Fork(ReadSelf.result)" incoming="_ZoQEyDiCEeWlpOnkGDRnCA" outgoing="_ZoQEyTiCEeWlpOnkGDRnCA _ZoQEyjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQE1ziCEeWlpOnkGDRnCA" name="Initialization" incoming="_ZoQE0DiCEeWlpOnkGDRnCA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQE2DiCEeWlpOnkGDRnCA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQE2TiCEeWlpOnkGDRnCA" target="_ZoQE5jiCEeWlpOnkGDRnCA" source="_ZoQE2ziCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQE2jiCEeWlpOnkGDRnCA" name="Value(true)">
                  <result xmi:id="_ZoQE2ziCEeWlpOnkGDRnCA" name="Value(true).result" outgoing="_ZoQE2TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQE3DiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQE3TiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoQE3jiCEeWlpOnkGDRnCA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ZoQE3ziCEeWlpOnkGDRnCA" name="Write(Monitor$initializationFlag$1)" structuralFeature="_ZoQEfDiCEeWlpOnkGDRnCA" isReplaceAll="true">
                  <object xmi:id="_ZoQE4DiCEeWlpOnkGDRnCA" name="Write(Monitor$initializationFlag$1).object" incoming="_ZoQEyTiCEeWlpOnkGDRnCA" type="_ZoQEeziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQE4TiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQE4jiCEeWlpOnkGDRnCA" value="1"/>
                  </object>
                  <result xmi:id="_ZoQE4ziCEeWlpOnkGDRnCA" name="Write(Monitor$initializationFlag$1).result" type="_ZoQEeziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQE5DiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQE5TiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:id="_ZoQE5jiCEeWlpOnkGDRnCA" name="Write(Monitor$initializationFlag$1).value" incoming="_ZoQE2TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQE5ziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQE6DiCEeWlpOnkGDRnCA" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ZoQE6TiCEeWlpOnkGDRnCA" name="Read(Monitor$initializationFlag$1)" structuralFeature="_ZoQEfDiCEeWlpOnkGDRnCA">
              <object xmi:id="_ZoQE6jiCEeWlpOnkGDRnCA" name="Read(Monitor$initializationFlag$1).object" incoming="_ZoQEyjiCEeWlpOnkGDRnCA" type="_ZoQEeziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQE6ziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQE7DiCEeWlpOnkGDRnCA" value="1"/>
              </object>
              <result xmi:id="_ZoQE7TiCEeWlpOnkGDRnCA" name="Read(Monitor$initializationFlag$1).result" outgoing="_ZoQEyziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQE7jiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQE7ziCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQE8DiCEeWlpOnkGDRnCA" name="Call(ListSize)">
              <argument xmi:id="_ZoQE8TiCEeWlpOnkGDRnCA" name="Call(ListSize).argument(list)" incoming="_ZoQEyziCEeWlpOnkGDRnCA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQE8jiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQE8ziCEeWlpOnkGDRnCA" value="*"/>
              </argument>
              <result xmi:id="_ZoQE9DiCEeWlpOnkGDRnCA" name="Call(ListSize).result(result)" outgoing="_ZoQEzDiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQE9TiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQE9jiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQE9ziCEeWlpOnkGDRnCA" name="Value(0)">
              <result xmi:id="_ZoQE-DiCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoQEzTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQE-TiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQE-jiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_ZoQE-ziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoQE_DiCEeWlpOnkGDRnCA" name="Test(Size==0)">
              <first xmi:id="_ZoQE_TiCEeWlpOnkGDRnCA" name="Test(Size==0).first" incoming="_ZoQEzDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQE_jiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQE_ziCEeWlpOnkGDRnCA" value="1"/>
              </first>
              <result xmi:id="_ZoQFADiCEeWlpOnkGDRnCA" name="Test(Size==0).result" outgoing="_ZoQEzziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFATiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFAjiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <second xmi:id="_ZoQFAziCEeWlpOnkGDRnCA" name="Test(Size==0).second" incoming="_ZoQEzTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFBDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFBTiCEeWlpOnkGDRnCA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ZoQFBjiCEeWlpOnkGDRnCA" name="InitialNode" outgoing="_ZoQEzjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ZoQFBziCEeWlpOnkGDRnCA" name="Decision(Test(Monitor$initializationFlag$1))" incoming="_ZoQEzjiCEeWlpOnkGDRnCA _ZoQEzziCEeWlpOnkGDRnCA" outgoing="_ZoQE0DiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoQEzziCEeWlpOnkGDRnCA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_ZoQFCDiCEeWlpOnkGDRnCA" name="Monitor$initialization$1" visibility="protected" method="_ZoQExjiCEeWlpOnkGDRnCA"/>
        <ownedOperation xmi:id="_ZoQFCTiCEeWlpOnkGDRnCA" name="raiseAlarm" visibility="public" method="_ZoQEfziCEeWlpOnkGDRnCA">
          <ownedParameter xmi:id="_ZoQFCjiCEeWlpOnkGDRnCA" name="sensorId" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFCziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFDDiCEeWlpOnkGDRnCA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ZoQFDTiCEeWlpOnkGDRnCA" name="cleanUp" visibility="public" method="_ZoQEhziCEeWlpOnkGDRnCA"/>
        <ownedOperation xmi:id="_ZoQFDjiCEeWlpOnkGDRnCA" name="Monitor" visibility="public" method="_ZoQEiTiCEeWlpOnkGDRnCA">
          <ownedParameter xmi:id="_ZoQFDziCEeWlpOnkGDRnCA" name="" visibility="package" type="_ZoQEeziCEeWlpOnkGDRnCA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFEDiCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFETiCEeWlpOnkGDRnCA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ZoQFEjiCEeWlpOnkGDRnCA" name="destroy" visibility="public" method="_ZoQExDiCEeWlpOnkGDRnCA"/>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_ZoQFEziCEeWlpOnkGDRnCA" name="Condition" visibility="package">
        <ownedLiteral xmi:id="_ZoQFFDiCEeWlpOnkGDRnCA" name="normal" visibility="package"/>
        <ownedLiteral xmi:id="_ZoQFFTiCEeWlpOnkGDRnCA" name="alert" visibility="package"/>
        <ownedLiteral xmi:id="_ZoQFFjiCEeWlpOnkGDRnCA" name="critical" visibility="package"/>
        <ownedLiteral xmi:id="_ZoQFFziCEeWlpOnkGDRnCA" name="error" visibility="package"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZoQFGDiCEeWlpOnkGDRnCA" name="Test" isAbstract="true">
      <packageImport xmi:id="_ZoQFGTiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_ZoQFGjiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_ZoQFGziCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_ZoQFHDiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_ZoQFHTiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_ZoQFHjiCEeWlpOnkGDRnCA" name="Test$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFHziCEeWlpOnkGDRnCA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFIDiCEeWlpOnkGDRnCA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_ZoQFITiCEeWlpOnkGDRnCA" name="tester" visibility="private" type="_ZoQrfTiCEeWlpOnkGDRnCA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFIjiCEeWlpOnkGDRnCA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFIziCEeWlpOnkGDRnCA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoQFJDiCEeWlpOnkGDRnCA" name="destroy$method$1" specification="_ZoQrdDiCEeWlpOnkGDRnCA" node="_ZoQFJTiCEeWlpOnkGDRnCA" group="_ZoQFJTiCEeWlpOnkGDRnCA">
        <structuredNode xmi:id="_ZoQFJTiCEeWlpOnkGDRnCA" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoQFJjiCEeWlpOnkGDRnCA" name="done$method$1" specification="_ZoQrdTiCEeWlpOnkGDRnCA" node="_ZoQFJziCEeWlpOnkGDRnCA" group="_ZoQFJziCEeWlpOnkGDRnCA">
        <structuredNode xmi:id="_ZoQFJziCEeWlpOnkGDRnCA" name="Body(done$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQFKDiCEeWlpOnkGDRnCA" target="_ZoQFOTiCEeWlpOnkGDRnCA" source="_ZoQFKTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQFKTiCEeWlpOnkGDRnCA" name="ExpressionStatement@4c337fd7" outgoing="_ZoQFKDiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFKjiCEeWlpOnkGDRnCA" target="_ZoQFLTiCEeWlpOnkGDRnCA" source="_ZoQFNTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQFKziCEeWlpOnkGDRnCA" target="_ZoQFLDiCEeWlpOnkGDRnCA" source="_ZoQFMziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQFLDiCEeWlpOnkGDRnCA" name="Call(WriteLine)" incoming="_ZoQFKziCEeWlpOnkGDRnCA">
              <argument xmi:id="_ZoQFLTiCEeWlpOnkGDRnCA" name="Call(WriteLine).argument(value)" incoming="_ZoQFKjiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFLjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFLziCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_ZoQFMDiCEeWlpOnkGDRnCA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFMTiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFMjiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQFMziCEeWlpOnkGDRnCA" name="Tuple@132eba4a" outgoing="_ZoQFKziCEeWlpOnkGDRnCA">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQFNDiCEeWlpOnkGDRnCA" name="Value(&quot;Done.&quot;)">
                <result xmi:id="_ZoQFNTiCEeWlpOnkGDRnCA" name="Value(&quot;Done.&quot;).result" outgoing="_ZoQFKjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFNjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFNziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_ZoQFODiCEeWlpOnkGDRnCA" value="Done.">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQFOTiCEeWlpOnkGDRnCA" name="ExpressionStatement@4113cd8a" incoming="_ZoQFKDiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFOjiCEeWlpOnkGDRnCA" target="_ZoQFQjiCEeWlpOnkGDRnCA" source="_ZoQFTjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQFOziCEeWlpOnkGDRnCA" target="_ZoQFPDiCEeWlpOnkGDRnCA" source="_ZoQFQziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ExpansionRegion" xmi:id="_ZoQFPDiCEeWlpOnkGDRnCA" name="Collect(SendSignal(Continue))" incoming="_ZoQFOziCEeWlpOnkGDRnCA" mode="parallel" inputElement="_ZoQFQjiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFPTiCEeWlpOnkGDRnCA" target="_ZoQFPziCEeWlpOnkGDRnCA" source="_ZoQFQjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:SendSignalAction" xmi:id="_ZoQFPjiCEeWlpOnkGDRnCA" name="SendSignal(Continue)" signal="_ZoQsBjiCEeWlpOnkGDRnCA">
                <target xmi:id="_ZoQFPziCEeWlpOnkGDRnCA" name="SendSignal(Continue).target" incoming="_ZoQFPTiCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFQDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFQTiCEeWlpOnkGDRnCA" value="1"/>
                </target>
              </node>
            </node>
            <node xmi:type="uml:ExpansionNode" xmi:id="_ZoQFQjiCEeWlpOnkGDRnCA" name="Collect(SendSignal(Continue)).inputElement" incoming="_ZoQFOjiCEeWlpOnkGDRnCA" outgoing="_ZoQFPTiCEeWlpOnkGDRnCA" regionAsInput="_ZoQFPDiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQFQziCEeWlpOnkGDRnCA" name="Feature(Read(tester).result)" outgoing="_ZoQFOziCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFRDiCEeWlpOnkGDRnCA" target="_ZoQFUTiCEeWlpOnkGDRnCA" source="_ZoQFRziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFRTiCEeWlpOnkGDRnCA" target="_ZoQFSziCEeWlpOnkGDRnCA" source="_ZoQFUTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoQFRjiCEeWlpOnkGDRnCA" name="ReadSelf">
                <result xmi:id="_ZoQFRziCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoQFRDiCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFSDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFSTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ZoQFSjiCEeWlpOnkGDRnCA" name="Read(tester)" structuralFeature="_ZoQFITiCEeWlpOnkGDRnCA">
                <object xmi:id="_ZoQFSziCEeWlpOnkGDRnCA" name="Read(tester).object" incoming="_ZoQFRTiCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFTDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFTTiCEeWlpOnkGDRnCA" value="1"/>
                </object>
                <result xmi:id="_ZoQFTjiCEeWlpOnkGDRnCA" name="Read(tester).result" outgoing="_ZoQFOjiCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFTziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFUDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoQFUTiCEeWlpOnkGDRnCA" name="Fork(ReadSelf.result)" incoming="_ZoQFRDiCEeWlpOnkGDRnCA" outgoing="_ZoQFRTiCEeWlpOnkGDRnCA"/>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoQFUjiCEeWlpOnkGDRnCA" name="Test$method$1" specification="_ZoQrdjiCEeWlpOnkGDRnCA" node="_ZoQFXDiCEeWlpOnkGDRnCA _ZoQFXTiCEeWlpOnkGDRnCA _ZoQFXjiCEeWlpOnkGDRnCA _ZoQFXziCEeWlpOnkGDRnCA" group="_ZoQFXziCEeWlpOnkGDRnCA">
        <ownedParameter xmi:id="_ZoQFUziCEeWlpOnkGDRnCA" name="tester" type="_ZoQrfTiCEeWlpOnkGDRnCA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFVDiCEeWlpOnkGDRnCA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFVTiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoQFVjiCEeWlpOnkGDRnCA" name="" type="_ZoQFGDiCEeWlpOnkGDRnCA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFVziCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFWDiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFWTiCEeWlpOnkGDRnCA" target="_ZoQFXTiCEeWlpOnkGDRnCA" source="_ZoQFXDiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFWjiCEeWlpOnkGDRnCA" target="_ZoQFfTiCEeWlpOnkGDRnCA" source="_ZoQFXTiCEeWlpOnkGDRnCA"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFWziCEeWlpOnkGDRnCA" target="_ZoQFXjiCEeWlpOnkGDRnCA" source="_ZoQFmTiCEeWlpOnkGDRnCA"/>
        <structuredNode xmi:id="_ZoQFXziCEeWlpOnkGDRnCA" name="Body(Test$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFYDiCEeWlpOnkGDRnCA" target="_ZoQFmTiCEeWlpOnkGDRnCA" source="_ZoQFljiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFYTiCEeWlpOnkGDRnCA" target="_ZoQFmziCEeWlpOnkGDRnCA" source="_ZoQFmTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQFYjiCEeWlpOnkGDRnCA" target="_ZoQFaziCEeWlpOnkGDRnCA" source="_ZoQFmjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFYziCEeWlpOnkGDRnCA" target="_ZoQFnziCEeWlpOnkGDRnCA" source="_ZoQFmTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFZDiCEeWlpOnkGDRnCA" target="_ZoQFpjiCEeWlpOnkGDRnCA" source="_ZoQFojiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFZTiCEeWlpOnkGDRnCA" target="_ZoQFsjiCEeWlpOnkGDRnCA" source="_ZoQFqTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFZjiCEeWlpOnkGDRnCA" target="_ZoQFuDiCEeWlpOnkGDRnCA" source="_ZoQFrTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQFZziCEeWlpOnkGDRnCA" target="_ZoQFvDiCEeWlpOnkGDRnCA" source="_ZoQFuziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFaDiCEeWlpOnkGDRnCA" target="_ZoQFvDiCEeWlpOnkGDRnCA" source="_ZoQFtTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQFaTiCEeWlpOnkGDRnCA" target="_ZoQFmjiCEeWlpOnkGDRnCA" source="_ZoQFvDiCEeWlpOnkGDRnCA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQFajiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQFaziCEeWlpOnkGDRnCA" name="Body" incoming="_ZoQFYjiCEeWlpOnkGDRnCA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQFbDiCEeWlpOnkGDRnCA" name="ExpressionStatement@6978443f">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFbTiCEeWlpOnkGDRnCA" target="_ZoQFdziCEeWlpOnkGDRnCA" source="_ZoQFcziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFbjiCEeWlpOnkGDRnCA" target="_ZoQFgDiCEeWlpOnkGDRnCA" source="_ZoQFfTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFbziCEeWlpOnkGDRnCA" target="_ZoQFhjiCEeWlpOnkGDRnCA" source="_ZoQFejiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQFcDiCEeWlpOnkGDRnCA" target="_ZoQFcTiCEeWlpOnkGDRnCA" source="_ZoQFlDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQFcTiCEeWlpOnkGDRnCA" name="Expression(LeftHandSide@56c8ba31)" incoming="_ZoQFcDiCEeWlpOnkGDRnCA">
                <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoQFcjiCEeWlpOnkGDRnCA" name="ReadSelf">
                  <result xmi:id="_ZoQFcziCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoQFbTiCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFdDiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFdTiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_ZoQFdjiCEeWlpOnkGDRnCA" name="Clear(tester)" structuralFeature="_ZoQFITiCEeWlpOnkGDRnCA">
                <object xmi:id="_ZoQFdziCEeWlpOnkGDRnCA" name="Clear(tester).object" incoming="_ZoQFbTiCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFeDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFeTiCEeWlpOnkGDRnCA" value="1"/>
                </object>
                <result xmi:id="_ZoQFejiCEeWlpOnkGDRnCA" name="Clear(tester).result" outgoing="_ZoQFbziCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFeziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFfDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_ZoQFfTiCEeWlpOnkGDRnCA" name="Fork(LeftHandSide@56c8ba31)" incoming="_ZoQFWjiCEeWlpOnkGDRnCA" outgoing="_ZoQFbjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQFfjiCEeWlpOnkGDRnCA" name="WriteAll(Test::tester)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFfziCEeWlpOnkGDRnCA" target="_ZoQFkziCEeWlpOnkGDRnCA" source="_ZoQFgDiCEeWlpOnkGDRnCA"/>
                <structuredNodeInput xmi:id="_ZoQFgDiCEeWlpOnkGDRnCA" name="WriteAll(Test::tester).input(Test::tester)" incoming="_ZoQFbjiCEeWlpOnkGDRnCA" outgoing="_ZoQFfziCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFgTiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFgjiCEeWlpOnkGDRnCA" value="1"/>
                </structuredNodeInput>
                <node xmi:type="uml:ExpansionRegion" xmi:id="_ZoQFgziCEeWlpOnkGDRnCA" name="Iterate(Write(tester))" inputElement="_ZoQFkziCEeWlpOnkGDRnCA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFhDiCEeWlpOnkGDRnCA" target="_ZoQFkDiCEeWlpOnkGDRnCA" source="_ZoQFkziCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFhTiCEeWlpOnkGDRnCA" target="_ZoQFijiCEeWlpOnkGDRnCA" source="_ZoQFhjiCEeWlpOnkGDRnCA"/>
                  <structuredNodeInput xmi:id="_ZoQFhjiCEeWlpOnkGDRnCA" name="Iterate(Write(tester)).input(Clear(tester).result)" incoming="_ZoQFbziCEeWlpOnkGDRnCA" outgoing="_ZoQFhTiCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFhziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFiDiCEeWlpOnkGDRnCA" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ZoQFiTiCEeWlpOnkGDRnCA" name="Write(tester)" structuralFeature="_ZoQFITiCEeWlpOnkGDRnCA">
                    <object xmi:id="_ZoQFijiCEeWlpOnkGDRnCA" name="Write(tester).object" incoming="_ZoQFhTiCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFiziCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFjDiCEeWlpOnkGDRnCA" value="1"/>
                    </object>
                    <result xmi:id="_ZoQFjTiCEeWlpOnkGDRnCA" name="Write(tester).result" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFjjiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFjziCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:id="_ZoQFkDiCEeWlpOnkGDRnCA" name="Write(tester).value" incoming="_ZoQFhDiCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFkTiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFkjiCEeWlpOnkGDRnCA" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:ExpansionNode" xmi:id="_ZoQFkziCEeWlpOnkGDRnCA" name="Iterate(Write(tester)).inputElement" incoming="_ZoQFfziCEeWlpOnkGDRnCA" outgoing="_ZoQFhDiCEeWlpOnkGDRnCA" regionAsInput="_ZoQFgziCEeWlpOnkGDRnCA"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQFlDiCEeWlpOnkGDRnCA" name="RightHandSide@203c1582" outgoing="_ZoQFcDiCEeWlpOnkGDRnCA"/>
            </node>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoQFlTiCEeWlpOnkGDRnCA" name="ReadSelf">
            <result xmi:id="_ZoQFljiCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoQFYDiCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFlziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFmDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoQFmTiCEeWlpOnkGDRnCA" name="Fork(ReadSelf.result)" incoming="_ZoQFYDiCEeWlpOnkGDRnCA" outgoing="_ZoQFWziCEeWlpOnkGDRnCA _ZoQFYTiCEeWlpOnkGDRnCA _ZoQFYziCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_ZoQFmjiCEeWlpOnkGDRnCA" name="Call(Test$initialization$1)" incoming="_ZoQFaTiCEeWlpOnkGDRnCA" outgoing="_ZoQFYjiCEeWlpOnkGDRnCA" operation="_ZoQrcziCEeWlpOnkGDRnCA">
            <target xmi:id="_ZoQFmziCEeWlpOnkGDRnCA" name="Call(Test$initialization$1).target" incoming="_ZoQFYTiCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFnDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFnTiCEeWlpOnkGDRnCA" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ZoQFnjiCEeWlpOnkGDRnCA" name="Read(Test$initializationFlag$1)" structuralFeature="_ZoQFHjiCEeWlpOnkGDRnCA">
            <object xmi:id="_ZoQFnziCEeWlpOnkGDRnCA" name="Read(Test$initializationFlag$1).object" incoming="_ZoQFYziCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFoDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFoTiCEeWlpOnkGDRnCA" value="1"/>
            </object>
            <result xmi:id="_ZoQFojiCEeWlpOnkGDRnCA" name="Read(Test$initializationFlag$1).result" outgoing="_ZoQFZDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFoziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFpDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQFpTiCEeWlpOnkGDRnCA" name="Call(ListSize)">
            <argument xmi:id="_ZoQFpjiCEeWlpOnkGDRnCA" name="Call(ListSize).argument(list)" incoming="_ZoQFZDiCEeWlpOnkGDRnCA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFpziCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFqDiCEeWlpOnkGDRnCA" value="*"/>
            </argument>
            <result xmi:id="_ZoQFqTiCEeWlpOnkGDRnCA" name="Call(ListSize).result(result)" outgoing="_ZoQFZTiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFqjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFqziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQFrDiCEeWlpOnkGDRnCA" name="Value(0)">
            <result xmi:id="_ZoQFrTiCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoQFZjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFrjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFrziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_ZoQFsDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoQFsTiCEeWlpOnkGDRnCA" name="Test(Size==0)">
            <first xmi:id="_ZoQFsjiCEeWlpOnkGDRnCA" name="Test(Size==0).first" incoming="_ZoQFZTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFsziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFtDiCEeWlpOnkGDRnCA" value="1"/>
            </first>
            <result xmi:id="_ZoQFtTiCEeWlpOnkGDRnCA" name="Test(Size==0).result" outgoing="_ZoQFaDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFtjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFtziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <second xmi:id="_ZoQFuDiCEeWlpOnkGDRnCA" name="Test(Size==0).second" incoming="_ZoQFZjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFuTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFujiCEeWlpOnkGDRnCA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_ZoQFuziCEeWlpOnkGDRnCA" name="InitialNode" outgoing="_ZoQFZziCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_ZoQFvDiCEeWlpOnkGDRnCA" name="Decision(Test(Test$initializationFlag$1))" incoming="_ZoQFZziCEeWlpOnkGDRnCA _ZoQFaDiCEeWlpOnkGDRnCA" outgoing="_ZoQFaTiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoQFaDiCEeWlpOnkGDRnCA"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoQFXDiCEeWlpOnkGDRnCA" name="Input(tester)" outgoing="_ZoQFWTiCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA" parameter="_ZoQFUziCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:ForkNode" xmi:id="_ZoQFXTiCEeWlpOnkGDRnCA" name="Fork(tester)" incoming="_ZoQFWTiCEeWlpOnkGDRnCA" outgoing="_ZoQFWjiCEeWlpOnkGDRnCA"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoQFXjiCEeWlpOnkGDRnCA" name="Return" incoming="_ZoQFWziCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" parameter="_ZoQFVjiCEeWlpOnkGDRnCA"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoQFvTiCEeWlpOnkGDRnCA" name="Test$initialization$1" specification="_ZoQrcziCEeWlpOnkGDRnCA" node="_ZoQFvjiCEeWlpOnkGDRnCA" group="_ZoQFvjiCEeWlpOnkGDRnCA">
        <structuredNode xmi:id="_ZoQFvjiCEeWlpOnkGDRnCA" name="Body(Test$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFvziCEeWlpOnkGDRnCA" target="_ZoQFzTiCEeWlpOnkGDRnCA" source="_ZoQFyjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFwDiCEeWlpOnkGDRnCA" target="_ZoQF1ziCEeWlpOnkGDRnCA" source="_ZoQFzTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFwTiCEeWlpOnkGDRnCA" target="_ZoQF4TiCEeWlpOnkGDRnCA" source="_ZoQFzTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFwjiCEeWlpOnkGDRnCA" target="_ZoQF6DiCEeWlpOnkGDRnCA" source="_ZoQF5DiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFwziCEeWlpOnkGDRnCA" target="_ZoQF9DiCEeWlpOnkGDRnCA" source="_ZoQF6ziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFxDiCEeWlpOnkGDRnCA" target="_ZoQF-jiCEeWlpOnkGDRnCA" source="_ZoQF7ziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQFxTiCEeWlpOnkGDRnCA" target="_ZoQrcjiCEeWlpOnkGDRnCA" source="_ZoQrcTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQFxjiCEeWlpOnkGDRnCA" target="_ZoQrcjiCEeWlpOnkGDRnCA" source="_ZoQF9ziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQFxziCEeWlpOnkGDRnCA" target="_ZoQFzjiCEeWlpOnkGDRnCA" source="_ZoQrcjiCEeWlpOnkGDRnCA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQFyDiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoQFyTiCEeWlpOnkGDRnCA" name="ReadSelf">
            <result xmi:id="_ZoQFyjiCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoQFvziCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQFyziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQFzDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoQFzTiCEeWlpOnkGDRnCA" name="Fork(ReadSelf.result)" incoming="_ZoQFvziCEeWlpOnkGDRnCA" outgoing="_ZoQFwDiCEeWlpOnkGDRnCA _ZoQFwTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQFzjiCEeWlpOnkGDRnCA" name="Initialization" incoming="_ZoQFxziCEeWlpOnkGDRnCA">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQFzziCEeWlpOnkGDRnCA" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQF0DiCEeWlpOnkGDRnCA" target="_ZoQF3TiCEeWlpOnkGDRnCA" source="_ZoQF0jiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQF0TiCEeWlpOnkGDRnCA" name="Value(true)">
                <result xmi:id="_ZoQF0jiCEeWlpOnkGDRnCA" name="Value(true).result" outgoing="_ZoQF0DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQF0ziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQF1DiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoQF1TiCEeWlpOnkGDRnCA" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ZoQF1jiCEeWlpOnkGDRnCA" name="Write(Test$initializationFlag$1)" structuralFeature="_ZoQFHjiCEeWlpOnkGDRnCA" isReplaceAll="true">
                <object xmi:id="_ZoQF1ziCEeWlpOnkGDRnCA" name="Write(Test$initializationFlag$1).object" incoming="_ZoQFwDiCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQF2DiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQF2TiCEeWlpOnkGDRnCA" value="1"/>
                </object>
                <result xmi:id="_ZoQF2jiCEeWlpOnkGDRnCA" name="Write(Test$initializationFlag$1).result" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQF2ziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQF3DiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:id="_ZoQF3TiCEeWlpOnkGDRnCA" name="Write(Test$initializationFlag$1).value" incoming="_ZoQF0DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQF3jiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQF3ziCEeWlpOnkGDRnCA" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ZoQF4DiCEeWlpOnkGDRnCA" name="Read(Test$initializationFlag$1)" structuralFeature="_ZoQFHjiCEeWlpOnkGDRnCA">
            <object xmi:id="_ZoQF4TiCEeWlpOnkGDRnCA" name="Read(Test$initializationFlag$1).object" incoming="_ZoQFwTiCEeWlpOnkGDRnCA" type="_ZoQFGDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQF4jiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQF4ziCEeWlpOnkGDRnCA" value="1"/>
            </object>
            <result xmi:id="_ZoQF5DiCEeWlpOnkGDRnCA" name="Read(Test$initializationFlag$1).result" outgoing="_ZoQFwjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQF5TiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQF5jiCEeWlpOnkGDRnCA" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQF5ziCEeWlpOnkGDRnCA" name="Call(ListSize)">
            <argument xmi:id="_ZoQF6DiCEeWlpOnkGDRnCA" name="Call(ListSize).argument(list)" incoming="_ZoQFwjiCEeWlpOnkGDRnCA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQF6TiCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQF6jiCEeWlpOnkGDRnCA" value="*"/>
            </argument>
            <result xmi:id="_ZoQF6ziCEeWlpOnkGDRnCA" name="Call(ListSize).result(result)" outgoing="_ZoQFwziCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQF7DiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQF7TiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQF7jiCEeWlpOnkGDRnCA" name="Value(0)">
            <result xmi:id="_ZoQF7ziCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoQFxDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQF8DiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQF8TiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_ZoQF8jiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoQF8ziCEeWlpOnkGDRnCA" name="Test(Size==0)">
            <first xmi:id="_ZoQF9DiCEeWlpOnkGDRnCA" name="Test(Size==0).first" incoming="_ZoQFwziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQF9TiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQF9jiCEeWlpOnkGDRnCA" value="1"/>
            </first>
            <result xmi:id="_ZoQF9ziCEeWlpOnkGDRnCA" name="Test(Size==0).result" outgoing="_ZoQFxjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQF-DiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQF-TiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <second xmi:id="_ZoQF-jiCEeWlpOnkGDRnCA" name="Test(Size==0).second" incoming="_ZoQFxDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQF-ziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQrcDiCEeWlpOnkGDRnCA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_ZoQrcTiCEeWlpOnkGDRnCA" name="InitialNode" outgoing="_ZoQFxTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_ZoQrcjiCEeWlpOnkGDRnCA" name="Decision(Test(Test$initializationFlag$1))" incoming="_ZoQFxTiCEeWlpOnkGDRnCA _ZoQFxjiCEeWlpOnkGDRnCA" outgoing="_ZoQFxziCEeWlpOnkGDRnCA" decisionInputFlow="_ZoQFxjiCEeWlpOnkGDRnCA"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_ZoQrcziCEeWlpOnkGDRnCA" name="Test$initialization$1" visibility="protected" method="_ZoQFvTiCEeWlpOnkGDRnCA"/>
      <ownedOperation xmi:id="_ZoQrdDiCEeWlpOnkGDRnCA" name="destroy" visibility="public" method="_ZoQFJDiCEeWlpOnkGDRnCA"/>
      <ownedOperation xmi:id="_ZoQrdTiCEeWlpOnkGDRnCA" name="done" visibility="public" method="_ZoQFJjiCEeWlpOnkGDRnCA"/>
      <ownedOperation xmi:id="_ZoQrdjiCEeWlpOnkGDRnCA" name="Test" visibility="protected" method="_ZoQFUjiCEeWlpOnkGDRnCA">
        <ownedParameter xmi:id="_ZoQrdziCEeWlpOnkGDRnCA" name="tester" visibility="package" type="_ZoQrfTiCEeWlpOnkGDRnCA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQreDiCEeWlpOnkGDRnCA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQreTiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ZoQrejiCEeWlpOnkGDRnCA" name="" visibility="package" type="_ZoQFGDiCEeWlpOnkGDRnCA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQreziCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQrfDiCEeWlpOnkGDRnCA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_ZoQrfTiCEeWlpOnkGDRnCA" name="Tester" isAbstract="true" isActive="true">
        <ownedAttribute xmi:id="_ZoQrfjiCEeWlpOnkGDRnCA" name="Tester$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQrfziCEeWlpOnkGDRnCA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQrgDiCEeWlpOnkGDRnCA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoQrgTiCEeWlpOnkGDRnCA" name="Tester$method$1" specification="_ZoQsATiCEeWlpOnkGDRnCA" node="_ZoQrhjiCEeWlpOnkGDRnCA _ZoQrhziCEeWlpOnkGDRnCA" group="_ZoQrhziCEeWlpOnkGDRnCA">
          <ownedParameter xmi:id="_ZoQrgjiCEeWlpOnkGDRnCA" name="" type="_ZoQrfTiCEeWlpOnkGDRnCA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQrgziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQrhDiCEeWlpOnkGDRnCA" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQrhTiCEeWlpOnkGDRnCA" target="_ZoQrhjiCEeWlpOnkGDRnCA" source="_ZoQrmDiCEeWlpOnkGDRnCA"/>
          <structuredNode xmi:id="_ZoQrhziCEeWlpOnkGDRnCA" name="Body(Tester$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQriDiCEeWlpOnkGDRnCA" target="_ZoQrmDiCEeWlpOnkGDRnCA" source="_ZoQrlTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQriTiCEeWlpOnkGDRnCA" target="_ZoQrmjiCEeWlpOnkGDRnCA" source="_ZoQrmDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQrijiCEeWlpOnkGDRnCA" target="_ZoQrkziCEeWlpOnkGDRnCA" source="_ZoQrmTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQriziCEeWlpOnkGDRnCA" target="_ZoQrnjiCEeWlpOnkGDRnCA" source="_ZoQrmDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQrjDiCEeWlpOnkGDRnCA" target="_ZoQrpTiCEeWlpOnkGDRnCA" source="_ZoQroTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQrjTiCEeWlpOnkGDRnCA" target="_ZoQrsTiCEeWlpOnkGDRnCA" source="_ZoQrqDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQrjjiCEeWlpOnkGDRnCA" target="_ZoQrtziCEeWlpOnkGDRnCA" source="_ZoQrrDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQrjziCEeWlpOnkGDRnCA" target="_ZoQruziCEeWlpOnkGDRnCA" source="_ZoQrujiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQrkDiCEeWlpOnkGDRnCA" target="_ZoQruziCEeWlpOnkGDRnCA" source="_ZoQrtDiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQrkTiCEeWlpOnkGDRnCA" target="_ZoQrmTiCEeWlpOnkGDRnCA" source="_ZoQruziCEeWlpOnkGDRnCA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQrkjiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQrkziCEeWlpOnkGDRnCA" name="Body" incoming="_ZoQrijiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoQrlDiCEeWlpOnkGDRnCA" name="ReadSelf">
              <result xmi:id="_ZoQrlTiCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoQriDiCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQrljiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQrlziCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoQrmDiCEeWlpOnkGDRnCA" name="Fork(ReadSelf.result)" incoming="_ZoQriDiCEeWlpOnkGDRnCA" outgoing="_ZoQrhTiCEeWlpOnkGDRnCA _ZoQriTiCEeWlpOnkGDRnCA _ZoQriziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_ZoQrmTiCEeWlpOnkGDRnCA" name="Call(Tester$initialization$1)" incoming="_ZoQrkTiCEeWlpOnkGDRnCA" outgoing="_ZoQrijiCEeWlpOnkGDRnCA" operation="_ZoQsADiCEeWlpOnkGDRnCA">
              <target xmi:id="_ZoQrmjiCEeWlpOnkGDRnCA" name="Call(Tester$initialization$1).target" incoming="_ZoQriTiCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQrmziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQrnDiCEeWlpOnkGDRnCA" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ZoQrnTiCEeWlpOnkGDRnCA" name="Read(Tester$initializationFlag$1)" structuralFeature="_ZoQrfjiCEeWlpOnkGDRnCA">
              <object xmi:id="_ZoQrnjiCEeWlpOnkGDRnCA" name="Read(Tester$initializationFlag$1).object" incoming="_ZoQriziCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQrnziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQroDiCEeWlpOnkGDRnCA" value="1"/>
              </object>
              <result xmi:id="_ZoQroTiCEeWlpOnkGDRnCA" name="Read(Tester$initializationFlag$1).result" outgoing="_ZoQrjDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQrojiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQroziCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQrpDiCEeWlpOnkGDRnCA" name="Call(ListSize)">
              <argument xmi:id="_ZoQrpTiCEeWlpOnkGDRnCA" name="Call(ListSize).argument(list)" incoming="_ZoQrjDiCEeWlpOnkGDRnCA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQrpjiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQrpziCEeWlpOnkGDRnCA" value="*"/>
              </argument>
              <result xmi:id="_ZoQrqDiCEeWlpOnkGDRnCA" name="Call(ListSize).result(result)" outgoing="_ZoQrjTiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQrqTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQrqjiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQrqziCEeWlpOnkGDRnCA" name="Value(0)">
              <result xmi:id="_ZoQrrDiCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoQrjjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQrrTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQrrjiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_ZoQrrziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoQrsDiCEeWlpOnkGDRnCA" name="Test(Size==0)">
              <first xmi:id="_ZoQrsTiCEeWlpOnkGDRnCA" name="Test(Size==0).first" incoming="_ZoQrjTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQrsjiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQrsziCEeWlpOnkGDRnCA" value="1"/>
              </first>
              <result xmi:id="_ZoQrtDiCEeWlpOnkGDRnCA" name="Test(Size==0).result" outgoing="_ZoQrkDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQrtTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQrtjiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <second xmi:id="_ZoQrtziCEeWlpOnkGDRnCA" name="Test(Size==0).second" incoming="_ZoQrjjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQruDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQruTiCEeWlpOnkGDRnCA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ZoQrujiCEeWlpOnkGDRnCA" name="InitialNode" outgoing="_ZoQrjziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ZoQruziCEeWlpOnkGDRnCA" name="Decision(Test(Tester$initializationFlag$1))" incoming="_ZoQrjziCEeWlpOnkGDRnCA _ZoQrkDiCEeWlpOnkGDRnCA" outgoing="_ZoQrkTiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoQrkDiCEeWlpOnkGDRnCA"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoQrhjiCEeWlpOnkGDRnCA" name="Return" incoming="_ZoQrhTiCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA" parameter="_ZoQrgjiCEeWlpOnkGDRnCA"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoQrvDiCEeWlpOnkGDRnCA" name="destroy$method$1" specification="_ZoQsBTiCEeWlpOnkGDRnCA" node="_ZoQrvTiCEeWlpOnkGDRnCA" group="_ZoQrvTiCEeWlpOnkGDRnCA">
          <structuredNode xmi:id="_ZoQrvTiCEeWlpOnkGDRnCA" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_ZoQrvjiCEeWlpOnkGDRnCA" name="Tester$initialization$1" specification="_ZoQsADiCEeWlpOnkGDRnCA" node="_ZoQrvziCEeWlpOnkGDRnCA" group="_ZoQrvziCEeWlpOnkGDRnCA">
          <structuredNode xmi:id="_ZoQrvziCEeWlpOnkGDRnCA" name="Body(Tester$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQrwDiCEeWlpOnkGDRnCA" target="_ZoQrzjiCEeWlpOnkGDRnCA" source="_ZoQryziCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQrwTiCEeWlpOnkGDRnCA" target="_ZoQr2DiCEeWlpOnkGDRnCA" source="_ZoQrzjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQrwjiCEeWlpOnkGDRnCA" target="_ZoQr4jiCEeWlpOnkGDRnCA" source="_ZoQrzjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQrwziCEeWlpOnkGDRnCA" target="_ZoQr6TiCEeWlpOnkGDRnCA" source="_ZoQr5TiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQrxDiCEeWlpOnkGDRnCA" target="_ZoQr9TiCEeWlpOnkGDRnCA" source="_ZoQr7DiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQrxTiCEeWlpOnkGDRnCA" target="_ZoQr-ziCEeWlpOnkGDRnCA" source="_ZoQr8DiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQrxjiCEeWlpOnkGDRnCA" target="_ZoQr_ziCEeWlpOnkGDRnCA" source="_ZoQr_jiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQrxziCEeWlpOnkGDRnCA" target="_ZoQr_ziCEeWlpOnkGDRnCA" source="_ZoQr-DiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQryDiCEeWlpOnkGDRnCA" target="_ZoQrzziCEeWlpOnkGDRnCA" source="_ZoQr_ziCEeWlpOnkGDRnCA">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQryTiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_ZoQryjiCEeWlpOnkGDRnCA" name="ReadSelf">
              <result xmi:id="_ZoQryziCEeWlpOnkGDRnCA" name="ReadSelf.result" outgoing="_ZoQrwDiCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQrzDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQrzTiCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoQrzjiCEeWlpOnkGDRnCA" name="Fork(ReadSelf.result)" incoming="_ZoQrwDiCEeWlpOnkGDRnCA" outgoing="_ZoQrwTiCEeWlpOnkGDRnCA _ZoQrwjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQrzziCEeWlpOnkGDRnCA" name="Initialization" incoming="_ZoQryDiCEeWlpOnkGDRnCA">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQr0DiCEeWlpOnkGDRnCA" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQr0TiCEeWlpOnkGDRnCA" target="_ZoQr3jiCEeWlpOnkGDRnCA" source="_ZoQr0ziCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQr0jiCEeWlpOnkGDRnCA" name="Value(true)">
                  <result xmi:id="_ZoQr0ziCEeWlpOnkGDRnCA" name="Value(true).result" outgoing="_ZoQr0TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQr1DiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQr1TiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoQr1jiCEeWlpOnkGDRnCA" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_ZoQr1ziCEeWlpOnkGDRnCA" name="Write(Tester$initializationFlag$1)" structuralFeature="_ZoQrfjiCEeWlpOnkGDRnCA" isReplaceAll="true">
                  <object xmi:id="_ZoQr2DiCEeWlpOnkGDRnCA" name="Write(Tester$initializationFlag$1).object" incoming="_ZoQrwTiCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQr2TiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQr2jiCEeWlpOnkGDRnCA" value="1"/>
                  </object>
                  <result xmi:id="_ZoQr2ziCEeWlpOnkGDRnCA" name="Write(Tester$initializationFlag$1).result" type="_ZoQrfTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQr3DiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQr3TiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:id="_ZoQr3jiCEeWlpOnkGDRnCA" name="Write(Tester$initializationFlag$1).value" incoming="_ZoQr0TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQr3ziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQr4DiCEeWlpOnkGDRnCA" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_ZoQr4TiCEeWlpOnkGDRnCA" name="Read(Tester$initializationFlag$1)" structuralFeature="_ZoQrfjiCEeWlpOnkGDRnCA">
              <object xmi:id="_ZoQr4jiCEeWlpOnkGDRnCA" name="Read(Tester$initializationFlag$1).object" incoming="_ZoQrwjiCEeWlpOnkGDRnCA" type="_ZoQrfTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQr4ziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQr5DiCEeWlpOnkGDRnCA" value="1"/>
              </object>
              <result xmi:id="_ZoQr5TiCEeWlpOnkGDRnCA" name="Read(Tester$initializationFlag$1).result" outgoing="_ZoQrwziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQr5jiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQr5ziCEeWlpOnkGDRnCA" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQr6DiCEeWlpOnkGDRnCA" name="Call(ListSize)">
              <argument xmi:id="_ZoQr6TiCEeWlpOnkGDRnCA" name="Call(ListSize).argument(list)" incoming="_ZoQrwziCEeWlpOnkGDRnCA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQr6jiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQr6ziCEeWlpOnkGDRnCA" value="*"/>
              </argument>
              <result xmi:id="_ZoQr7DiCEeWlpOnkGDRnCA" name="Call(ListSize).result(result)" outgoing="_ZoQrxDiCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQr7TiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQr7jiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQr7ziCEeWlpOnkGDRnCA" name="Value(0)">
              <result xmi:id="_ZoQr8DiCEeWlpOnkGDRnCA" name="Value(0).result" outgoing="_ZoQrxTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQr8TiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQr8jiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_ZoQr8ziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoQr9DiCEeWlpOnkGDRnCA" name="Test(Size==0)">
              <first xmi:id="_ZoQr9TiCEeWlpOnkGDRnCA" name="Test(Size==0).first" incoming="_ZoQrxDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQr9jiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQr9ziCEeWlpOnkGDRnCA" value="1"/>
              </first>
              <result xmi:id="_ZoQr-DiCEeWlpOnkGDRnCA" name="Test(Size==0).result" outgoing="_ZoQrxziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQr-TiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQr-jiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <second xmi:id="_ZoQr-ziCEeWlpOnkGDRnCA" name="Test(Size==0).second" incoming="_ZoQrxTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQr_DiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQr_TiCEeWlpOnkGDRnCA" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_ZoQr_jiCEeWlpOnkGDRnCA" name="InitialNode" outgoing="_ZoQrxjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_ZoQr_ziCEeWlpOnkGDRnCA" name="Decision(Test(Tester$initializationFlag$1))" incoming="_ZoQrxjiCEeWlpOnkGDRnCA _ZoQrxziCEeWlpOnkGDRnCA" outgoing="_ZoQryDiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoQrxziCEeWlpOnkGDRnCA"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_ZoQsADiCEeWlpOnkGDRnCA" name="Tester$initialization$1" visibility="protected" method="_ZoQrvjiCEeWlpOnkGDRnCA"/>
        <ownedOperation xmi:id="_ZoQsATiCEeWlpOnkGDRnCA" name="Tester" visibility="public" method="_ZoQrgTiCEeWlpOnkGDRnCA">
          <ownedParameter xmi:id="_ZoQsAjiCEeWlpOnkGDRnCA" name="" visibility="package" type="_ZoQrfTiCEeWlpOnkGDRnCA" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsAziCEeWlpOnkGDRnCA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsBDiCEeWlpOnkGDRnCA" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ZoQsBTiCEeWlpOnkGDRnCA" name="destroy" visibility="public" method="_ZoQrvDiCEeWlpOnkGDRnCA"/>
        <nestedClassifier xmi:type="uml:Signal" xmi:id="_ZoQsBjiCEeWlpOnkGDRnCA" name="Continue" visibility="package"/>
        <ownedReception xmi:id="_ZoQsBziCEeWlpOnkGDRnCA" name="Continue" signal="_ZoQsBjiCEeWlpOnkGDRnCA"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_ZoQsCDiCEeWlpOnkGDRnCA" name="AssertEqual" node="_ZoQsITiCEeWlpOnkGDRnCA _ZoQsIjiCEeWlpOnkGDRnCA _ZoQsIziCEeWlpOnkGDRnCA _ZoQsJDiCEeWlpOnkGDRnCA _ZoQsJTiCEeWlpOnkGDRnCA _ZoQsJjiCEeWlpOnkGDRnCA _ZoQsJziCEeWlpOnkGDRnCA" group="_ZoQsJziCEeWlpOnkGDRnCA">
      <packageImport xmi:id="_ZoQsCTiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_ZoQsCjiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_ZoQsCziCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_ZoQsDDiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_ZoQsDTiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_ZoQsDjiCEeWlpOnkGDRnCA" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsDziCEeWlpOnkGDRnCA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsEDiCEeWlpOnkGDRnCA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_ZoQsETiCEeWlpOnkGDRnCA" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsEjiCEeWlpOnkGDRnCA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsEziCEeWlpOnkGDRnCA" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_ZoQsFDiCEeWlpOnkGDRnCA" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsFTiCEeWlpOnkGDRnCA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsFjiCEeWlpOnkGDRnCA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsFziCEeWlpOnkGDRnCA" target="_ZoQsIjiCEeWlpOnkGDRnCA" source="_ZoQsITiCEeWlpOnkGDRnCA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsGDiCEeWlpOnkGDRnCA" target="_ZoQsJDiCEeWlpOnkGDRnCA" source="_ZoQsIziCEeWlpOnkGDRnCA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsGTiCEeWlpOnkGDRnCA" target="_ZoQsJjiCEeWlpOnkGDRnCA" source="_ZoQsJTiCEeWlpOnkGDRnCA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsGjiCEeWlpOnkGDRnCA" target="_ZoQsTDiCEeWlpOnkGDRnCA" source="_ZoQsJDiCEeWlpOnkGDRnCA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsGziCEeWlpOnkGDRnCA" target="_ZoQsVDiCEeWlpOnkGDRnCA" source="_ZoQsJjiCEeWlpOnkGDRnCA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsHDiCEeWlpOnkGDRnCA" target="_ZoQsiziCEeWlpOnkGDRnCA" source="_ZoQsIjiCEeWlpOnkGDRnCA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsHTiCEeWlpOnkGDRnCA" target="_ZoQssTiCEeWlpOnkGDRnCA" source="_ZoQsJjiCEeWlpOnkGDRnCA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsHjiCEeWlpOnkGDRnCA" target="_ZoQszziCEeWlpOnkGDRnCA" source="_ZoQsJjiCEeWlpOnkGDRnCA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsHziCEeWlpOnkGDRnCA" target="_ZoRSiziCEeWlpOnkGDRnCA" source="_ZoQsJjiCEeWlpOnkGDRnCA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsIDiCEeWlpOnkGDRnCA" target="_ZoRSqziCEeWlpOnkGDRnCA" source="_ZoQsJjiCEeWlpOnkGDRnCA"/>
      <structuredNode xmi:id="_ZoQsJziCEeWlpOnkGDRnCA" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_ZoQsKDiCEeWlpOnkGDRnCA" name="IfStatement@285fa4a9">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsKTiCEeWlpOnkGDRnCA" target="_ZoQsQziCEeWlpOnkGDRnCA" source="_ZoQsTDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsKjiCEeWlpOnkGDRnCA" target="_ZoQsTjiCEeWlpOnkGDRnCA" source="_ZoQsTDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsKziCEeWlpOnkGDRnCA" target="_ZoQsSTiCEeWlpOnkGDRnCA" source="_ZoQsVDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsLDiCEeWlpOnkGDRnCA" target="_ZoQsVjiCEeWlpOnkGDRnCA" source="_ZoQsVDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsLTiCEeWlpOnkGDRnCA" target="_ZoQsXTiCEeWlpOnkGDRnCA" source="_ZoQsUTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsLjiCEeWlpOnkGDRnCA" target="_ZoQsXjiCEeWlpOnkGDRnCA" source="_ZoQsWTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsLziCEeWlpOnkGDRnCA" target="_ZoQsYDiCEeWlpOnkGDRnCA" source="_ZoQsXTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsMDiCEeWlpOnkGDRnCA" target="_ZoQsZziCEeWlpOnkGDRnCA" source="_ZoQsXjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsMTiCEeWlpOnkGDRnCA" target="_ZoQsbTiCEeWlpOnkGDRnCA" source="_ZoQsXjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQsMjiCEeWlpOnkGDRnCA" target="_ZoQsQjiCEeWlpOnkGDRnCA" source="_ZoQsbTiCEeWlpOnkGDRnCA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQsMziCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQsNDiCEeWlpOnkGDRnCA" target="_ZoQsXziCEeWlpOnkGDRnCA" source="_ZoQsbTiCEeWlpOnkGDRnCA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQsNTiCEeWlpOnkGDRnCA" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQsNjiCEeWlpOnkGDRnCA" target="_ZoQsbjiCEeWlpOnkGDRnCA" source="_ZoQsXDiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsNziCEeWlpOnkGDRnCA" target="_ZoQsbjiCEeWlpOnkGDRnCA" source="_ZoQsXTiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQsODiCEeWlpOnkGDRnCA" target="_ZoQsbTiCEeWlpOnkGDRnCA" source="_ZoQsbjiCEeWlpOnkGDRnCA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQsOTiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQsOjiCEeWlpOnkGDRnCA" target="_ZoQsZjiCEeWlpOnkGDRnCA" source="_ZoQsbjiCEeWlpOnkGDRnCA">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQsOziCEeWlpOnkGDRnCA" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsPDiCEeWlpOnkGDRnCA" target="_ZoQsbziCEeWlpOnkGDRnCA" source="_ZoQsRjiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsPTiCEeWlpOnkGDRnCA" target="_ZoQsbziCEeWlpOnkGDRnCA" source="_ZoQsYziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsPjiCEeWlpOnkGDRnCA" target="_ZoQsbziCEeWlpOnkGDRnCA" source="_ZoQsajiCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsPziCEeWlpOnkGDRnCA" target="_ZoQscTiCEeWlpOnkGDRnCA" source="_ZoQsbziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQsQDiCEeWlpOnkGDRnCA" target="_ZoQsoDiCEeWlpOnkGDRnCA" source="_ZoQsdziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQsQTiCEeWlpOnkGDRnCA" target="_ZoRSsjiCEeWlpOnkGDRnCA" source="_ZoQsoDiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_ZoQsQjiCEeWlpOnkGDRnCA" name="Test(==)" incoming="_ZoQsMjiCEeWlpOnkGDRnCA">
            <first xmi:id="_ZoQsQziCEeWlpOnkGDRnCA" name="Test(==).first" incoming="_ZoQsKTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsRDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsRTiCEeWlpOnkGDRnCA" value="1"/>
            </first>
            <result xmi:id="_ZoQsRjiCEeWlpOnkGDRnCA" name="Test(==).result" outgoing="_ZoQsPDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsRziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsSDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <second xmi:id="_ZoQsSTiCEeWlpOnkGDRnCA" name="Test(==).second" incoming="_ZoQsKziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsSjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsSziCEeWlpOnkGDRnCA" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoQsTDiCEeWlpOnkGDRnCA" name="Fork(Fork(value1))" incoming="_ZoQsGjiCEeWlpOnkGDRnCA" outgoing="_ZoQsKTiCEeWlpOnkGDRnCA _ZoQsKjiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQsTTiCEeWlpOnkGDRnCA" name="Call(NotEmpty)">
            <argument xmi:id="_ZoQsTjiCEeWlpOnkGDRnCA" name="Call(NotEmpty).argument(seq)" incoming="_ZoQsKjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsTziCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsUDiCEeWlpOnkGDRnCA" value="*"/>
            </argument>
            <result xmi:id="_ZoQsUTiCEeWlpOnkGDRnCA" name="Call(NotEmpty).result()" outgoing="_ZoQsLTiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsUjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsUziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoQsVDiCEeWlpOnkGDRnCA" name="Fork(Fork(value2))" incoming="_ZoQsGziCEeWlpOnkGDRnCA" outgoing="_ZoQsKziCEeWlpOnkGDRnCA _ZoQsLDiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQsVTiCEeWlpOnkGDRnCA" name="Call(NotEmpty)">
            <argument xmi:id="_ZoQsVjiCEeWlpOnkGDRnCA" name="Call(NotEmpty).argument(seq)" incoming="_ZoQsLDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsVziCEeWlpOnkGDRnCA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsWDiCEeWlpOnkGDRnCA" value="*"/>
            </argument>
            <result xmi:id="_ZoQsWTiCEeWlpOnkGDRnCA" name="Call(NotEmpty).result()" outgoing="_ZoQsLjiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsWjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsWziCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_ZoQsXDiCEeWlpOnkGDRnCA" name="Initial(Test(==))" outgoing="_ZoQsNjiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoQsXTiCEeWlpOnkGDRnCA" name="Fork(Call(NotEmpty).result())" incoming="_ZoQsLTiCEeWlpOnkGDRnCA" outgoing="_ZoQsLziCEeWlpOnkGDRnCA _ZoQsNziCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ForkNode" xmi:id="_ZoQsXjiCEeWlpOnkGDRnCA" name="Fork(Call(NotEmpty).result())" incoming="_ZoQsLjiCEeWlpOnkGDRnCA" outgoing="_ZoQsMDiCEeWlpOnkGDRnCA _ZoQsMTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQsXziCEeWlpOnkGDRnCA" name="Call(Not)" incoming="_ZoQsNDiCEeWlpOnkGDRnCA">
            <argument xmi:id="_ZoQsYDiCEeWlpOnkGDRnCA" name="Call(Not).argument(x)" incoming="_ZoQsLziCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsYTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsYjiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_ZoQsYziCEeWlpOnkGDRnCA" name="Call(Not).result(result)" outgoing="_ZoQsPTiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsZDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsZTiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQsZjiCEeWlpOnkGDRnCA" name="Call(Not)" incoming="_ZoQsOjiCEeWlpOnkGDRnCA">
            <argument xmi:id="_ZoQsZziCEeWlpOnkGDRnCA" name="Call(Not).argument(x)" incoming="_ZoQsMDiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsaDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsaTiCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_ZoQsajiCEeWlpOnkGDRnCA" name="Call(Not).result(result)" outgoing="_ZoQsPjiCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsaziCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsbDiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_ZoQsbTiCEeWlpOnkGDRnCA" name="Decision(Call(NotEmpty).result())" incoming="_ZoQsMTiCEeWlpOnkGDRnCA _ZoQsODiCEeWlpOnkGDRnCA" outgoing="_ZoQsMjiCEeWlpOnkGDRnCA _ZoQsNDiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoQsMTiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_ZoQsbjiCEeWlpOnkGDRnCA" name="Decision(Call(NotEmpty).result())" incoming="_ZoQsNjiCEeWlpOnkGDRnCA _ZoQsNziCEeWlpOnkGDRnCA" outgoing="_ZoQsODiCEeWlpOnkGDRnCA _ZoQsOjiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoQsNziCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:MergeNode" xmi:id="_ZoQsbziCEeWlpOnkGDRnCA" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_ZoQsPDiCEeWlpOnkGDRnCA _ZoQsPTiCEeWlpOnkGDRnCA _ZoQsPjiCEeWlpOnkGDRnCA" outgoing="_ZoQsPziCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQscDiCEeWlpOnkGDRnCA" name="Call(Not)">
            <argument xmi:id="_ZoQscTiCEeWlpOnkGDRnCA" name="Call(Not).argument(x)" incoming="_ZoQsPziCEeWlpOnkGDRnCA">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQscjiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQscziCEeWlpOnkGDRnCA" value="1"/>
            </argument>
            <result xmi:id="_ZoQsdDiCEeWlpOnkGDRnCA" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsdTiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsdjiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQsdziCEeWlpOnkGDRnCA" name="ExpressionStatement@60b7b267" outgoing="_ZoQsQDiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQseDiCEeWlpOnkGDRnCA" target="_ZoQseziCEeWlpOnkGDRnCA" source="_ZoQsnTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQseTiCEeWlpOnkGDRnCA" target="_ZoQsejiCEeWlpOnkGDRnCA" source="_ZoQsfjiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQsejiCEeWlpOnkGDRnCA" name="Call(Write)" incoming="_ZoQseTiCEeWlpOnkGDRnCA" behavior="_ZoRSyTiCEeWlpOnkGDRnCA">
              <argument xmi:id="_ZoQseziCEeWlpOnkGDRnCA" name="Call(Write).argument(value)" incoming="_ZoQseDiCEeWlpOnkGDRnCA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsfDiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsfTiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQsfjiCEeWlpOnkGDRnCA" name="Tuple@2d80500f" outgoing="_ZoQseTiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsfziCEeWlpOnkGDRnCA" target="_ZoQsiDiCEeWlpOnkGDRnCA" source="_ZoQsgziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsgDiCEeWlpOnkGDRnCA" target="_ZoQslziCEeWlpOnkGDRnCA" source="_ZoQsjjiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsgTiCEeWlpOnkGDRnCA" target="_ZoQsmjiCEeWlpOnkGDRnCA" source="_ZoQskjiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQsgjiCEeWlpOnkGDRnCA" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_ZoQsgziCEeWlpOnkGDRnCA" name="Value(&quot;FAILED: &quot;).result" outgoing="_ZoQsfziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQshDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQshTiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_ZoQshjiCEeWlpOnkGDRnCA" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQshziCEeWlpOnkGDRnCA" name="Call(Concat)">
                <argument xmi:id="_ZoQsiDiCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_ZoQsfziCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsiTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsijiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoQsiziCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_ZoQsHDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsjDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsjTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoQsjjiCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_ZoQsgDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsjziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQskDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQskTiCEeWlpOnkGDRnCA" name="Value(&quot;==&quot;)">
                <result xmi:id="_ZoQskjiCEeWlpOnkGDRnCA" name="Value(&quot;==&quot;).result" outgoing="_ZoQsgTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQskziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQslDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_ZoQslTiCEeWlpOnkGDRnCA" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQsljiCEeWlpOnkGDRnCA" name="Call(Concat)">
                <argument xmi:id="_ZoQslziCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_ZoQsgDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsmDiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsmTiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <argument xmi:id="_ZoQsmjiCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_ZoQsgTiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsmziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsnDiCEeWlpOnkGDRnCA" value="1"/>
                </argument>
                <result xmi:id="_ZoQsnTiCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_ZoQseDiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsnjiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsnziCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQsoDiCEeWlpOnkGDRnCA" name="ExpressionStatement@6b446c02" incoming="_ZoQsQDiCEeWlpOnkGDRnCA" outgoing="_ZoQsQTiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsoTiCEeWlpOnkGDRnCA" target="_ZoQspDiCEeWlpOnkGDRnCA" source="_ZoRSsTiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQsojiCEeWlpOnkGDRnCA" target="_ZoQsoziCEeWlpOnkGDRnCA" source="_ZoQspziCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQsoziCEeWlpOnkGDRnCA" name="Call(Write)" incoming="_ZoQsojiCEeWlpOnkGDRnCA" behavior="_ZoRSyTiCEeWlpOnkGDRnCA">
              <argument xmi:id="_ZoQspDiCEeWlpOnkGDRnCA" name="Call(Write).argument(value)" incoming="_ZoQsoTiCEeWlpOnkGDRnCA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQspTiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQspjiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQspziCEeWlpOnkGDRnCA" name="Tuple@4fe8bc42" outgoing="_ZoQsojiCEeWlpOnkGDRnCA">
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQsqDiCEeWlpOnkGDRnCA" target="_ZoRSsDiCEeWlpOnkGDRnCA" source="_ZoRSrziCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsqTiCEeWlpOnkGDRnCA" target="_ZoRSsDiCEeWlpOnkGDRnCA" source="_ZoQstDiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQsqjiCEeWlpOnkGDRnCA" target="_ZoQstziCEeWlpOnkGDRnCA" source="_ZoRSsDiCEeWlpOnkGDRnCA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQsqziCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQsrDiCEeWlpOnkGDRnCA" target="_ZoQswTiCEeWlpOnkGDRnCA" source="_ZoRSsDiCEeWlpOnkGDRnCA">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQsrTiCEeWlpOnkGDRnCA" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsrjiCEeWlpOnkGDRnCA" target="_ZoRSsTiCEeWlpOnkGDRnCA" source="_ZoQsuTiCEeWlpOnkGDRnCA"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsrziCEeWlpOnkGDRnCA" target="_ZoRSsTiCEeWlpOnkGDRnCA" source="_ZoQsyziCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoQssDiCEeWlpOnkGDRnCA" name="Call(IsEmpty)">
                <argument xmi:id="_ZoQssTiCEeWlpOnkGDRnCA" name="Call(IsEmpty).argument(seq)" incoming="_ZoQsHTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQssjiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQssziCEeWlpOnkGDRnCA" value="*"/>
                </argument>
                <result xmi:id="_ZoQstDiCEeWlpOnkGDRnCA" name="Call(IsEmpty).result()" outgoing="_ZoQsqTiCEeWlpOnkGDRnCA">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQstTiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQstjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQstziCEeWlpOnkGDRnCA" name="ConditionalTestExpression@5d055de9.operand2" incoming="_ZoQsqjiCEeWlpOnkGDRnCA">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsuDiCEeWlpOnkGDRnCA" target="_ZoQsuTiCEeWlpOnkGDRnCA" source="_ZoQsvTiCEeWlpOnkGDRnCA"/>
                <structuredNodeOutput xmi:id="_ZoQsuTiCEeWlpOnkGDRnCA" name="ConditionalTestExpression@5d055de9.operand2.result" incoming="_ZoQsuDiCEeWlpOnkGDRnCA" outgoing="_ZoQsrjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsujiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsuziCEeWlpOnkGDRnCA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQsvDiCEeWlpOnkGDRnCA" name="Value(&quot;null&quot;)">
                  <result xmi:id="_ZoQsvTiCEeWlpOnkGDRnCA" name="Value(&quot;null&quot;).result" outgoing="_ZoQsuDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQsvjiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQsvziCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_ZoQswDiCEeWlpOnkGDRnCA" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQswTiCEeWlpOnkGDRnCA" name="ConditionalTestExpression@5d055de9.operand3" incoming="_ZoQsrDiCEeWlpOnkGDRnCA">
                <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQswjiCEeWlpOnkGDRnCA" target="_ZoRSrTiCEeWlpOnkGDRnCA" source="_ZoRSrDiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQswziCEeWlpOnkGDRnCA" target="_ZoRSrTiCEeWlpOnkGDRnCA" source="_ZoQs0jiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQsxDiCEeWlpOnkGDRnCA" target="_ZoQs1TiCEeWlpOnkGDRnCA" source="_ZoRSrTiCEeWlpOnkGDRnCA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQsxTiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_ZoQsxjiCEeWlpOnkGDRnCA" target="_ZoRSpjiCEeWlpOnkGDRnCA" source="_ZoRSrTiCEeWlpOnkGDRnCA">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQsxziCEeWlpOnkGDRnCA" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsyDiCEeWlpOnkGDRnCA" target="_ZoRSrjiCEeWlpOnkGDRnCA" source="_ZoQs2ziCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsyTiCEeWlpOnkGDRnCA" target="_ZoRSrjiCEeWlpOnkGDRnCA" source="_ZoRSqDiCEeWlpOnkGDRnCA"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQsyjiCEeWlpOnkGDRnCA" target="_ZoQsyziCEeWlpOnkGDRnCA" source="_ZoRSrjiCEeWlpOnkGDRnCA"/>
                <structuredNodeOutput xmi:id="_ZoQsyziCEeWlpOnkGDRnCA" name="ConditionalTestExpression@5d055de9.operand3.result" incoming="_ZoQsyjiCEeWlpOnkGDRnCA" outgoing="_ZoQsrziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQszDiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQszTiCEeWlpOnkGDRnCA" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_ZoQszjiCEeWlpOnkGDRnCA" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_ZoQszziCEeWlpOnkGDRnCA" name="ReadIsClassifiedObject(String).object" incoming="_ZoQsHjiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQs0DiCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQs0TiCEeWlpOnkGDRnCA" value="1"/>
                  </object>
                  <result xmi:id="_ZoQs0jiCEeWlpOnkGDRnCA" name="ReadIsClassifiedObject(String).result" outgoing="_ZoQswziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQs0ziCEeWlpOnkGDRnCA" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQs1DiCEeWlpOnkGDRnCA" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoQs1TiCEeWlpOnkGDRnCA" name="ConditionalTestExpression@358786c3.operand2" incoming="_ZoQsxDiCEeWlpOnkGDRnCA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQs1jiCEeWlpOnkGDRnCA" target="_ZoRSjjiCEeWlpOnkGDRnCA" source="_ZoQs3ziCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQs1ziCEeWlpOnkGDRnCA" target="_ZoRSkTiCEeWlpOnkGDRnCA" source="_ZoRSjDiCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQs2DiCEeWlpOnkGDRnCA" target="_ZoRSnTiCEeWlpOnkGDRnCA" source="_ZoRSlDiCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQs2TiCEeWlpOnkGDRnCA" target="_ZoRSoDiCEeWlpOnkGDRnCA" source="_ZoRSmDiCEeWlpOnkGDRnCA"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQs2jiCEeWlpOnkGDRnCA" target="_ZoQs2ziCEeWlpOnkGDRnCA" source="_ZoRSoziCEeWlpOnkGDRnCA"/>
                  <structuredNodeOutput xmi:id="_ZoQs2ziCEeWlpOnkGDRnCA" name="ConditionalTestExpression@358786c3.operand2.result" incoming="_ZoQs2jiCEeWlpOnkGDRnCA" outgoing="_ZoQsyDiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQs3DiCEeWlpOnkGDRnCA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQs3TiCEeWlpOnkGDRnCA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoQs3jiCEeWlpOnkGDRnCA" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_ZoQs3ziCEeWlpOnkGDRnCA" name="Value(&quot;&quot;&quot;).result" outgoing="_ZoQs1jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoQs4DiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoQs4TiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_ZoQs4jiCEeWlpOnkGDRnCA" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_ZoQs4ziCEeWlpOnkGDRnCA" name="CastExpression@3cc5207a" mode="parallel" outputElement="_ZoRSjDiCEeWlpOnkGDRnCA" inputElement="_ZoRSiziCEeWlpOnkGDRnCA">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQs5DiCEeWlpOnkGDRnCA" target="_ZoRSgziCEeWlpOnkGDRnCA" source="_ZoRSiTiCEeWlpOnkGDRnCA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQs5TiCEeWlpOnkGDRnCA" target="_ZoRSijiCEeWlpOnkGDRnCA" source="_ZoRSiTiCEeWlpOnkGDRnCA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQs5jiCEeWlpOnkGDRnCA" target="_ZoRSijiCEeWlpOnkGDRnCA" source="_ZoRShjiCEeWlpOnkGDRnCA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQs5ziCEeWlpOnkGDRnCA" target="_ZoRSgTiCEeWlpOnkGDRnCA" source="_ZoRSijiCEeWlpOnkGDRnCA">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_ZoQs6DiCEeWlpOnkGDRnCA" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoQs6TiCEeWlpOnkGDRnCA" target="_ZoRSiTiCEeWlpOnkGDRnCA" source="_ZoRSiziCEeWlpOnkGDRnCA"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoRSgDiCEeWlpOnkGDRnCA" target="_ZoRSjDiCEeWlpOnkGDRnCA" source="_ZoRSgTiCEeWlpOnkGDRnCA"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_ZoRSgTiCEeWlpOnkGDRnCA" name="Merge(CastExpression@3cc5207a.operand)" incoming="_ZoQs5ziCEeWlpOnkGDRnCA" outgoing="_ZoRSgDiCEeWlpOnkGDRnCA"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_ZoRSgjiCEeWlpOnkGDRnCA" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_ZoRSgziCEeWlpOnkGDRnCA" name="ReadIsClassifiedObject(String).object" incoming="_ZoQs5DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRShDiCEeWlpOnkGDRnCA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRShTiCEeWlpOnkGDRnCA" value="1"/>
                      </object>
                      <result xmi:id="_ZoRShjiCEeWlpOnkGDRnCA" name="ReadIsClassifiedObject(String).result" outgoing="_ZoQs5jiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRShziCEeWlpOnkGDRnCA" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRSiDiCEeWlpOnkGDRnCA" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_ZoRSiTiCEeWlpOnkGDRnCA" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_ZoQs6TiCEeWlpOnkGDRnCA" outgoing="_ZoQs5DiCEeWlpOnkGDRnCA _ZoQs5TiCEeWlpOnkGDRnCA"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_ZoRSijiCEeWlpOnkGDRnCA" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_ZoQs5TiCEeWlpOnkGDRnCA _ZoQs5jiCEeWlpOnkGDRnCA" outgoing="_ZoQs5ziCEeWlpOnkGDRnCA" decisionInputFlow="_ZoQs5jiCEeWlpOnkGDRnCA"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_ZoRSiziCEeWlpOnkGDRnCA" name="CastExpression@3cc5207a.inputElement" incoming="_ZoQsHziCEeWlpOnkGDRnCA" outgoing="_ZoQs6TiCEeWlpOnkGDRnCA" regionAsInput="_ZoQs4ziCEeWlpOnkGDRnCA"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_ZoRSjDiCEeWlpOnkGDRnCA" name="CastExpression@3cc5207a.outputElement" incoming="_ZoRSgDiCEeWlpOnkGDRnCA" outgoing="_ZoQs1ziCEeWlpOnkGDRnCA" regionAsOutput="_ZoQs4ziCEeWlpOnkGDRnCA">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoRSjTiCEeWlpOnkGDRnCA" name="Call(Concat)">
                    <argument xmi:id="_ZoRSjjiCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_ZoQs1jiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRSjziCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRSkDiCEeWlpOnkGDRnCA" value="1"/>
                    </argument>
                    <argument xmi:id="_ZoRSkTiCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_ZoQs1ziCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRSkjiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRSkziCEeWlpOnkGDRnCA" value="1"/>
                    </argument>
                    <result xmi:id="_ZoRSlDiCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_ZoQs2DiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRSlTiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRSljiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoRSlziCEeWlpOnkGDRnCA" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_ZoRSmDiCEeWlpOnkGDRnCA" name="Value(&quot;&quot;&quot;).result" outgoing="_ZoQs2TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRSmTiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRSmjiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_ZoRSmziCEeWlpOnkGDRnCA" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoRSnDiCEeWlpOnkGDRnCA" name="Call(Concat)">
                    <argument xmi:id="_ZoRSnTiCEeWlpOnkGDRnCA" name="Call(Concat).argument(x)" incoming="_ZoQs2DiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRSnjiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRSnziCEeWlpOnkGDRnCA" value="1"/>
                    </argument>
                    <argument xmi:id="_ZoRSoDiCEeWlpOnkGDRnCA" name="Call(Concat).argument(y)" incoming="_ZoQs2TiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRSoTiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRSojiCEeWlpOnkGDRnCA" value="1"/>
                    </argument>
                    <result xmi:id="_ZoRSoziCEeWlpOnkGDRnCA" name="Call(Concat).result(result)" outgoing="_ZoQs2jiCEeWlpOnkGDRnCA">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRSpDiCEeWlpOnkGDRnCA" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRSpTiCEeWlpOnkGDRnCA" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoRSpjiCEeWlpOnkGDRnCA" name="ConditionalTestExpression@358786c3.operand3" incoming="_ZoQsxjiCEeWlpOnkGDRnCA">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoRSpziCEeWlpOnkGDRnCA" target="_ZoRSqDiCEeWlpOnkGDRnCA" source="_ZoRSqziCEeWlpOnkGDRnCA"/>
                  <structuredNodeOutput xmi:id="_ZoRSqDiCEeWlpOnkGDRnCA" name="ConditionalTestExpression@358786c3.operand3.result" incoming="_ZoRSpziCEeWlpOnkGDRnCA" outgoing="_ZoQsyTiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRSqTiCEeWlpOnkGDRnCA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRSqjiCEeWlpOnkGDRnCA" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_ZoRSqziCEeWlpOnkGDRnCA" name="Merge(Fork(value2))" incoming="_ZoQsIDiCEeWlpOnkGDRnCA" outgoing="_ZoRSpziCEeWlpOnkGDRnCA"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_ZoRSrDiCEeWlpOnkGDRnCA" name="Initial(ConditionalTestExpression@358786c3)" outgoing="_ZoQswjiCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_ZoRSrTiCEeWlpOnkGDRnCA" name="Decision(ConditionalTestExpression@358786c3)" incoming="_ZoQswjiCEeWlpOnkGDRnCA _ZoQswziCEeWlpOnkGDRnCA" outgoing="_ZoQsxDiCEeWlpOnkGDRnCA _ZoQsxjiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoQswziCEeWlpOnkGDRnCA"/>
                <node xmi:type="uml:MergeNode" xmi:id="_ZoRSrjiCEeWlpOnkGDRnCA" name="Merge(ConditionalTestExpression@358786c3.result)" incoming="_ZoQsyDiCEeWlpOnkGDRnCA _ZoQsyTiCEeWlpOnkGDRnCA" outgoing="_ZoQsyjiCEeWlpOnkGDRnCA"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_ZoRSrziCEeWlpOnkGDRnCA" name="Initial(ConditionalTestExpression@5d055de9)" outgoing="_ZoQsqDiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_ZoRSsDiCEeWlpOnkGDRnCA" name="Decision(ConditionalTestExpression@5d055de9)" incoming="_ZoQsqDiCEeWlpOnkGDRnCA _ZoQsqTiCEeWlpOnkGDRnCA" outgoing="_ZoQsqjiCEeWlpOnkGDRnCA _ZoQsrDiCEeWlpOnkGDRnCA" decisionInputFlow="_ZoQsqTiCEeWlpOnkGDRnCA"/>
              <node xmi:type="uml:MergeNode" xmi:id="_ZoRSsTiCEeWlpOnkGDRnCA" name="Merge(ConditionalTestExpression@5d055de9.result)" incoming="_ZoQsrjiCEeWlpOnkGDRnCA _ZoQsrziCEeWlpOnkGDRnCA" outgoing="_ZoQsoTiCEeWlpOnkGDRnCA"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoRSsjiCEeWlpOnkGDRnCA" name="ExpressionStatement@1b1de3ca" incoming="_ZoQsQTiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoRSsziCEeWlpOnkGDRnCA" target="_ZoRStjiCEeWlpOnkGDRnCA" source="_ZoRSvjiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoRStDiCEeWlpOnkGDRnCA" target="_ZoRStTiCEeWlpOnkGDRnCA" source="_ZoRSvDiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoRStTiCEeWlpOnkGDRnCA" name="Call(WriteLine)" incoming="_ZoRStDiCEeWlpOnkGDRnCA">
              <argument xmi:id="_ZoRStjiCEeWlpOnkGDRnCA" name="Call(WriteLine).argument(value)" incoming="_ZoRSsziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRStziCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRSuDiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_ZoRSuTiCEeWlpOnkGDRnCA" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRSujiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRSuziCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoRSvDiCEeWlpOnkGDRnCA" name="Tuple@20c16a9a" outgoing="_ZoRStDiCEeWlpOnkGDRnCA">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoRSvTiCEeWlpOnkGDRnCA" name="Value(&quot;&quot;)">
                <result xmi:id="_ZoRSvjiCEeWlpOnkGDRnCA" name="Value(&quot;&quot;).result" outgoing="_ZoRSsziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRSvziCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRSwDiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_ZoRSwTiCEeWlpOnkGDRnCA" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoRSwjiCEeWlpOnkGDRnCA" name="Value(true)">
            <result xmi:id="_ZoRSwziCEeWlpOnkGDRnCA" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRSxDiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRSxTiCEeWlpOnkGDRnCA" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_ZoRSxjiCEeWlpOnkGDRnCA" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_ZoRSxziCEeWlpOnkGDRnCA" body="_ZoQsdziCEeWlpOnkGDRnCA _ZoQsoDiCEeWlpOnkGDRnCA _ZoRSsjiCEeWlpOnkGDRnCA" decider="_ZoQsdDiCEeWlpOnkGDRnCA" successorClause="_ZoRSyDiCEeWlpOnkGDRnCA" test="_ZoQsQjiCEeWlpOnkGDRnCA _ZoQsTTiCEeWlpOnkGDRnCA _ZoQsVTiCEeWlpOnkGDRnCA _ZoQsXziCEeWlpOnkGDRnCA _ZoQsZjiCEeWlpOnkGDRnCA _ZoQscDiCEeWlpOnkGDRnCA"/>
          <clause xmi:id="_ZoRSyDiCEeWlpOnkGDRnCA" decider="_ZoRSwziCEeWlpOnkGDRnCA" predecessorClause="_ZoRSxziCEeWlpOnkGDRnCA" test="_ZoRSwjiCEeWlpOnkGDRnCA"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoQsITiCEeWlpOnkGDRnCA" name="Input(label)" outgoing="_ZoQsFziCEeWlpOnkGDRnCA" parameter="_ZoQsDjiCEeWlpOnkGDRnCA">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </node>
      <node xmi:type="uml:ForkNode" xmi:id="_ZoQsIjiCEeWlpOnkGDRnCA" name="Fork(label)" incoming="_ZoQsFziCEeWlpOnkGDRnCA" outgoing="_ZoQsHDiCEeWlpOnkGDRnCA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoQsIziCEeWlpOnkGDRnCA" name="Input(value1)" outgoing="_ZoQsGDiCEeWlpOnkGDRnCA" parameter="_ZoQsETiCEeWlpOnkGDRnCA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_ZoQsJDiCEeWlpOnkGDRnCA" name="Fork(value1)" incoming="_ZoQsGDiCEeWlpOnkGDRnCA" outgoing="_ZoQsGjiCEeWlpOnkGDRnCA"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoQsJTiCEeWlpOnkGDRnCA" name="Input(value2)" outgoing="_ZoQsGTiCEeWlpOnkGDRnCA" parameter="_ZoQsFDiCEeWlpOnkGDRnCA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_ZoQsJjiCEeWlpOnkGDRnCA" name="Fork(value2)" incoming="_ZoQsGTiCEeWlpOnkGDRnCA" outgoing="_ZoQsGziCEeWlpOnkGDRnCA _ZoQsHTiCEeWlpOnkGDRnCA _ZoQsHjiCEeWlpOnkGDRnCA _ZoQsHziCEeWlpOnkGDRnCA _ZoQsIDiCEeWlpOnkGDRnCA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_ZoRSyTiCEeWlpOnkGDRnCA" name="Write" node="_ZoRS1DiCEeWlpOnkGDRnCA _ZoRS1TiCEeWlpOnkGDRnCA _ZoRS1jiCEeWlpOnkGDRnCA" group="_ZoRS1jiCEeWlpOnkGDRnCA">
      <packageImport xmi:id="_ZoRSyjiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_ZoRSyziCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_ZoRSzDiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_ZoRSzTiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_ZoRSzjiCEeWlpOnkGDRnCA" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_ZoRSzziCEeWlpOnkGDRnCA" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRS0DiCEeWlpOnkGDRnCA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRS0TiCEeWlpOnkGDRnCA" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoRS0jiCEeWlpOnkGDRnCA" target="_ZoRS1TiCEeWlpOnkGDRnCA" source="_ZoRS1DiCEeWlpOnkGDRnCA"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoRS0ziCEeWlpOnkGDRnCA" target="_ZoRS3TiCEeWlpOnkGDRnCA" source="_ZoRS1TiCEeWlpOnkGDRnCA"/>
      <structuredNode xmi:id="_ZoRS1jiCEeWlpOnkGDRnCA" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoRS1ziCEeWlpOnkGDRnCA" name="ExpressionStatement@103b890d">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoRS2DiCEeWlpOnkGDRnCA" target="_ZoRS6jiCEeWlpOnkGDRnCA" source="_ZoRS9ziCEeWlpOnkGDRnCA"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_ZoRS2TiCEeWlpOnkGDRnCA" target="_ZoRS2jiCEeWlpOnkGDRnCA" source="_ZoRS6ziCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_ZoRS2jiCEeWlpOnkGDRnCA" name="Collect(Call(write))" incoming="_ZoRS2TiCEeWlpOnkGDRnCA" mode="parallel" inputElement="_ZoRS6jiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoRS2ziCEeWlpOnkGDRnCA" target="_ZoRS4TiCEeWlpOnkGDRnCA" source="_ZoRS3TiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoRS3DiCEeWlpOnkGDRnCA" target="_ZoRS5ziCEeWlpOnkGDRnCA" source="_ZoRS6jiCEeWlpOnkGDRnCA"/>
            <structuredNodeInput xmi:id="_ZoRS3TiCEeWlpOnkGDRnCA" name="Collect(Call(write)).input(Fork(value))" incoming="_ZoRS0ziCEeWlpOnkGDRnCA" outgoing="_ZoRS2ziCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRS3jiCEeWlpOnkGDRnCA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRS3ziCEeWlpOnkGDRnCA" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_ZoRS4DiCEeWlpOnkGDRnCA" name="Call(write)">
              <argument xmi:id="_ZoRS4TiCEeWlpOnkGDRnCA" name="Call(write).argument(value)" incoming="_ZoRS2ziCEeWlpOnkGDRnCA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRS4jiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRS4ziCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_ZoRS5DiCEeWlpOnkGDRnCA" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRS5TiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRS5jiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_ZoRS5ziCEeWlpOnkGDRnCA" name="Call(write).target" incoming="_ZoRS3DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRS6DiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRS6TiCEeWlpOnkGDRnCA" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_ZoRS6jiCEeWlpOnkGDRnCA" name="Collect(Call(write)).inputElement" incoming="_ZoRS2DiCEeWlpOnkGDRnCA" outgoing="_ZoRS3DiCEeWlpOnkGDRnCA" regionAsInput="_ZoRS2jiCEeWlpOnkGDRnCA"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoRS6ziCEeWlpOnkGDRnCA" name="Feature(Call(At).result())" outgoing="_ZoRS2TiCEeWlpOnkGDRnCA">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoRS7DiCEeWlpOnkGDRnCA" target="_ZoRS8TiCEeWlpOnkGDRnCA" source="_ZoRS_DiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoRS7TiCEeWlpOnkGDRnCA" target="_ZoRTBDiCEeWlpOnkGDRnCA" source="_ZoRTADiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_ZoRS7jiCEeWlpOnkGDRnCA" target="_ZoRS8DiCEeWlpOnkGDRnCA" source="_ZoRS-jiCEeWlpOnkGDRnCA"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_ZoRS7ziCEeWlpOnkGDRnCA" target="_ZoRS9DiCEeWlpOnkGDRnCA" source="_ZoRTBDiCEeWlpOnkGDRnCA"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_ZoRS8DiCEeWlpOnkGDRnCA" name="Call(At)" incoming="_ZoRS7jiCEeWlpOnkGDRnCA">
              <argument xmi:id="_ZoRS8TiCEeWlpOnkGDRnCA" name="Call(At).argument(seq)" incoming="_ZoRS7DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRS8jiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRS8ziCEeWlpOnkGDRnCA" value="*"/>
              </argument>
              <argument xmi:id="_ZoRS9DiCEeWlpOnkGDRnCA" name="Call(At).argument(index)" incoming="_ZoRS7ziCEeWlpOnkGDRnCA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRS9TiCEeWlpOnkGDRnCA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRS9jiCEeWlpOnkGDRnCA" value="1"/>
              </argument>
              <result xmi:id="_ZoRS9ziCEeWlpOnkGDRnCA" name="Call(At).result()" outgoing="_ZoRS2DiCEeWlpOnkGDRnCA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRS-DiCEeWlpOnkGDRnCA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRS-TiCEeWlpOnkGDRnCA" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_ZoRS-jiCEeWlpOnkGDRnCA" name="Tuple@5070ff40" outgoing="_ZoRS7jiCEeWlpOnkGDRnCA">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_ZoRS-ziCEeWlpOnkGDRnCA" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_ZoRS_DiCEeWlpOnkGDRnCA" name="ReadExtent(StandardOutputChannel).result" outgoing="_ZoRS7DiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRS_TiCEeWlpOnkGDRnCA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRS_jiCEeWlpOnkGDRnCA" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_ZoRS_ziCEeWlpOnkGDRnCA" name="Value(1)">
                <result xmi:id="_ZoRTADiCEeWlpOnkGDRnCA" name="Value(1).result" outgoing="_ZoRS7TiCEeWlpOnkGDRnCA" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZoRTATiCEeWlpOnkGDRnCA" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZoRTAjiCEeWlpOnkGDRnCA" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_ZoRTAziCEeWlpOnkGDRnCA" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_ZoRTBDiCEeWlpOnkGDRnCA" name="Fork(Call(At).argument(index))" incoming="_ZoRS7TiCEeWlpOnkGDRnCA" outgoing="_ZoRS7ziCEeWlpOnkGDRnCA"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_ZoRS1DiCEeWlpOnkGDRnCA" name="Input(value)" outgoing="_ZoRS0jiCEeWlpOnkGDRnCA" parameter="_ZoRSzziCEeWlpOnkGDRnCA"/>
      <node xmi:type="uml:ForkNode" xmi:id="_ZoRS1TiCEeWlpOnkGDRnCA" name="Fork(value)" incoming="_ZoRS0jiCEeWlpOnkGDRnCA" outgoing="_ZoRS0ziCEeWlpOnkGDRnCA"/>
    </packagedElement>
    <profileApplication xmi:id="_ZoRTBTiCEeWlpOnkGDRnCA">
      <eAnnotations xmi:id="_ZoRTBjiCEeWlpOnkGDRnCA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Destroy xmi:id="_ZoRTBziCEeWlpOnkGDRnCA" base_BehavioralFeature="_ZoQFEjiCEeWlpOnkGDRnCA"/>
  <l2:Create xmi:id="_ZoRTCDiCEeWlpOnkGDRnCA" base_BehavioralFeature="_ZoQrdjiCEeWlpOnkGDRnCA"/>
  <l2:Destroy xmi:id="_ZoRTCTiCEeWlpOnkGDRnCA" base_BehavioralFeature="_ZoQsBTiCEeWlpOnkGDRnCA"/>
  <l2:Create xmi:id="_ZoRTCjiCEeWlpOnkGDRnCA" base_BehavioralFeature="_ZoQsATiCEeWlpOnkGDRnCA"/>
  <l2:Create xmi:id="_ZoR5kDiCEeWlpOnkGDRnCA" base_BehavioralFeature="_ZoPe_TiCEeWlpOnkGDRnCA"/>
  <l2:Destroy xmi:id="_ZoR5kTiCEeWlpOnkGDRnCA" base_BehavioralFeature="_ZoQrdDiCEeWlpOnkGDRnCA"/>
  <l2:Create xmi:id="_ZoR5kjiCEeWlpOnkGDRnCA" base_BehavioralFeature="_ZoPe-TiCEeWlpOnkGDRnCA"/>
  <l2:Create xmi:id="_ZoR5kziCEeWlpOnkGDRnCA" base_BehavioralFeature="_ZoQFDjiCEeWlpOnkGDRnCA"/>
  <l2:Destroy xmi:id="_ZoR5lDiCEeWlpOnkGDRnCA" base_BehavioralFeature="_ZoQEejiCEeWlpOnkGDRnCA"/>
</xmi:XMI>

<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:l2="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2 pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg">
  <uml:Model xmi:id="_SCJMoCcoEeSLVrU2ifxtpw" name="Model" visibility="package">
    <packagedElement xmi:type="uml:Class" xmi:id="_SCJMoScoEeSLVrU2ifxtpw" name="Expressions_Sequence_Operation" classifierBehavior="_SCJMqicoEeSLVrU2ifxtpw" isActive="true">
      <packageImport xmi:id="_SCJMoicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SCJMoycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SCJMpCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SCJMpScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SCJMpicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedAttribute xmi:id="_SCJMpycoEeSLVrU2ifxtpw" name="Expressions_Sequence_Operation$initializationFlag$1" visibility="protected">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJMqCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJMqScoEeSLVrU2ifxtpw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SCJMqicoEeSLVrU2ifxtpw" name="Expressions_Sequence_Operation$classifierBehavior$1" visibility="private" isActive="true" node="_SCJMqycoEeSLVrU2ifxtpw" group="_SCJMqycoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SCJMqycoEeSLVrU2ifxtpw" name="Body(Expressions_Sequence_Operation$classifierBehavior$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJMrCcoEeSLVrU2ifxtpw" target="_SCJM6CcoEeSLVrU2ifxtpw" source="_SCJM2ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJMrScoEeSLVrU2ifxtpw" target="_SCJM4ScoEeSLVrU2ifxtpw" source="_SCJMuScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJMricoEeSLVrU2ifxtpw" target="_SCJM-CcoEeSLVrU2ifxtpw" source="_SCJM3CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJMrycoEeSLVrU2ifxtpw" target="_SCJM8ScoEeSLVrU2ifxtpw" source="_SCJM4ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJMsCcoEeSLVrU2ifxtpw" target="_SCJztCcoEeSLVrU2ifxtpw" source="_SCJM3ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJMsScoEeSLVrU2ifxtpw" target="_SCJNAScoEeSLVrU2ifxtpw" source="_SCJM8ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJMsicoEeSLVrU2ifxtpw" target="_SCJzzScoEeSLVrU2ifxtpw" source="_SCJM3icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJMsycoEeSLVrU2ifxtpw" target="_SCJzxScoEeSLVrU2ifxtpw" source="_SCJNAScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJMtCcoEeSLVrU2ifxtpw" target="_SCJz9CcoEeSLVrU2ifxtpw" source="_SCJM3ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJMtScoEeSLVrU2ifxtpw" target="_SCJz3icoEeSLVrU2ifxtpw" source="_SCJzxScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJMticoEeSLVrU2ifxtpw" target="_SCJ0DicoEeSLVrU2ifxtpw" source="_SCJM4CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJMtycoEeSLVrU2ifxtpw" target="_SCJ0BicoEeSLVrU2ifxtpw" source="_SCJz3icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJMuCcoEeSLVrU2ifxtpw" target="_SCJ0LScoEeSLVrU2ifxtpw" source="_SCJ0BicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJMuScoEeSLVrU2ifxtpw" name="ExpressionStatement@6990cdf2" outgoing="_SCJMrScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJMuicoEeSLVrU2ifxtpw" target="_SCJM2ycoEeSLVrU2ifxtpw" source="_SCJMwicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJMuycoEeSLVrU2ifxtpw" target="_SCJM3CcoEeSLVrU2ifxtpw" source="_SCJMxScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJMvCcoEeSLVrU2ifxtpw" target="_SCJM3ScoEeSLVrU2ifxtpw" source="_SCJMyCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJMvScoEeSLVrU2ifxtpw" target="_SCJM3icoEeSLVrU2ifxtpw" source="_SCJMyycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJMvicoEeSLVrU2ifxtpw" target="_SCJM3ycoEeSLVrU2ifxtpw" source="_SCJMzicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJMvycoEeSLVrU2ifxtpw" target="_SCJM4CcoEeSLVrU2ifxtpw" source="_SCJM0ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJMwCcoEeSLVrU2ifxtpw" target="_SCJM1CcoEeSLVrU2ifxtpw" source="_SCJM2CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SCJMwScoEeSLVrU2ifxtpw" name="Call(test)" operation="_SCJ2fCcoEeSLVrU2ifxtpw">
              <result xmi:id="_SCJMwicoEeSLVrU2ifxtpw" name="Call(test).result(notEmpty)" outgoing="_SCJMuicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJMwycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJMxCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SCJMxScoEeSLVrU2ifxtpw" name="Call(test).result(includes)" outgoing="_SCJMuycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJMxicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJMxycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SCJMyCcoEeSLVrU2ifxtpw" name="Call(test).result(m)" outgoing="_SCJMvCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJMyScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJMyicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SCJMyycoEeSLVrU2ifxtpw" name="Call(test).result(n)" outgoing="_SCJMvScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJMzCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJMzScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <result xmi:id="_SCJMzicoEeSLVrU2ifxtpw" name="Call(test).result(customers)" outgoing="_SCJMvicoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJMzycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJM0CcoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_SCJM0ScoEeSLVrU2ifxtpw" name="Call(test).result(list)" outgoing="_SCJMvycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJM0icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJM0ycoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <target xmi:id="_SCJM1CcoEeSLVrU2ifxtpw" name="Call(test).target" incoming="_SCJMwCcoEeSLVrU2ifxtpw" type="_SCJMoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJM1ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJM1icoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SCJM1ycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SCJM2CcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SCJMwCcoEeSLVrU2ifxtpw" type="_SCJMoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJM2ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJM2icoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJM2ycoEeSLVrU2ifxtpw" name="Fork(notEmpty)@7f053906" incoming="_SCJMuicoEeSLVrU2ifxtpw" outgoing="_SCJMrCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJM3CcoEeSLVrU2ifxtpw" name="Fork(includes)@5e8f48ff" incoming="_SCJMuycoEeSLVrU2ifxtpw" outgoing="_SCJMricoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJM3ScoEeSLVrU2ifxtpw" name="Fork(n)@11018dd9" incoming="_SCJMvCcoEeSLVrU2ifxtpw" outgoing="_SCJMsCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJM3icoEeSLVrU2ifxtpw" name="Fork(m)@7d07aa47" incoming="_SCJMvScoEeSLVrU2ifxtpw" outgoing="_SCJMsicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJM3ycoEeSLVrU2ifxtpw" name="Fork(customers)@23c5b72" incoming="_SCJMvicoEeSLVrU2ifxtpw" outgoing="_SCJMtCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJM4CcoEeSLVrU2ifxtpw" name="Fork(list)@48979a83" incoming="_SCJMvycoEeSLVrU2ifxtpw" outgoing="_SCJMticoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJM4ScoEeSLVrU2ifxtpw" name="ExpressionStatement@69cf9511" incoming="_SCJMrScoEeSLVrU2ifxtpw" outgoing="_SCJMrycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJM4icoEeSLVrU2ifxtpw" target="_SCJM5ScoEeSLVrU2ifxtpw" source="_SCJM7ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJM4ycoEeSLVrU2ifxtpw" target="_SCJM5CcoEeSLVrU2ifxtpw" source="_SCJM6ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJM5CcoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_SCJM4ycoEeSLVrU2ifxtpw" behavior="_SCKcMScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJM5ScoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_SCJM4icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJM5icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJM5ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCJM6CcoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_SCJMrCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJM6ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJM6icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJM6ycoEeSLVrU2ifxtpw" name="Tuple@330a0f4b" outgoing="_SCJM4ycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJM7CcoEeSLVrU2ifxtpw" name="Value(&quot;notEmpty&quot;)">
                <result xmi:id="_SCJM7ScoEeSLVrU2ifxtpw" name="Value(&quot;notEmpty&quot;).result" outgoing="_SCJM4icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJM7icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJM7ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SCJM8CcoEeSLVrU2ifxtpw" value="notEmpty">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJM8ScoEeSLVrU2ifxtpw" name="ExpressionStatement@bd0bfa6" incoming="_SCJMrycoEeSLVrU2ifxtpw" outgoing="_SCJMsScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJM8icoEeSLVrU2ifxtpw" target="_SCJM9ScoEeSLVrU2ifxtpw" source="_SCJM_ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJM8ycoEeSLVrU2ifxtpw" target="_SCJM9CcoEeSLVrU2ifxtpw" source="_SCJM-ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJM9CcoEeSLVrU2ifxtpw" name="Call(AssertFalse)" incoming="_SCJM8ycoEeSLVrU2ifxtpw" behavior="_SCKcMScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJM9ScoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(label)" incoming="_SCJM8icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJM9icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJM9ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCJM-CcoEeSLVrU2ifxtpw" name="Call(AssertFalse).argument(condition)" incoming="_SCJMricoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJM-ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJM-icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJM-ycoEeSLVrU2ifxtpw" name="Tuple@388859e4" outgoing="_SCJM8ycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJM_CcoEeSLVrU2ifxtpw" name="Value(&quot;includes&quot;)">
                <result xmi:id="_SCJM_ScoEeSLVrU2ifxtpw" name="Value(&quot;includes&quot;).result" outgoing="_SCJM8icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJM_icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJM_ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SCJNACcoEeSLVrU2ifxtpw" value="includes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJNAScoEeSLVrU2ifxtpw" name="ExpressionStatement@5ecb3cce" incoming="_SCJMsScoEeSLVrU2ifxtpw" outgoing="_SCJMsycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJNAicoEeSLVrU2ifxtpw" target="_SCJzsScoEeSLVrU2ifxtpw" source="_SCJzvCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJNAycoEeSLVrU2ifxtpw" target="_SCJztycoEeSLVrU2ifxtpw" source="_SCJzwScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJNBCcoEeSLVrU2ifxtpw" target="_SCJzsCcoEeSLVrU2ifxtpw" source="_SCJzuicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJzsCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SCJNBCcoEeSLVrU2ifxtpw" behavior="_SCKchicoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJzsScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SCJNAicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJzsicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJzsycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCJztCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SCJMsCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJztScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJzticoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCJztycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SCJNAycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJzuCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJzuScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJzuicoEeSLVrU2ifxtpw" name="Tuple@5a8dd49a" outgoing="_SCJNBCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJzuycoEeSLVrU2ifxtpw" name="Value(&quot;n&quot;)">
                <result xmi:id="_SCJzvCcoEeSLVrU2ifxtpw" name="Value(&quot;n&quot;).result" outgoing="_SCJNAicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJzvScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJzvicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SCJzvycoEeSLVrU2ifxtpw" value="n">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJzwCcoEeSLVrU2ifxtpw" name="Value(3)">
                <result xmi:id="_SCJzwScoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_SCJNAycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJzwicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJzwycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SCJzxCcoEeSLVrU2ifxtpw" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJzxScoEeSLVrU2ifxtpw" name="ExpressionStatement@7c6dae73" incoming="_SCJMsycoEeSLVrU2ifxtpw" outgoing="_SCJMtScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJzxicoEeSLVrU2ifxtpw" target="_SCJzyicoEeSLVrU2ifxtpw" source="_SCJz1ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJzxycoEeSLVrU2ifxtpw" target="_SCJz0CcoEeSLVrU2ifxtpw" source="_SCJz2icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJzyCcoEeSLVrU2ifxtpw" target="_SCJzyScoEeSLVrU2ifxtpw" source="_SCJz0ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJzyScoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SCJzyCcoEeSLVrU2ifxtpw" behavior="_SCKchicoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJzyicoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SCJzxicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJzyycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJzzCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCJzzScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SCJMsicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJzzicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJzzycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCJz0CcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SCJzxycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJz0ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJz0icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJz0ycoEeSLVrU2ifxtpw" name="Tuple@56bcffd2" outgoing="_SCJzyCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJz1CcoEeSLVrU2ifxtpw" name="Value(&quot;m&quot;)">
                <result xmi:id="_SCJz1ScoEeSLVrU2ifxtpw" name="Value(&quot;m&quot;).result" outgoing="_SCJzxicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJz1icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJz1ycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SCJz2CcoEeSLVrU2ifxtpw" value="m">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJz2ScoEeSLVrU2ifxtpw" name="Value(3)">
                <result xmi:id="_SCJz2icoEeSLVrU2ifxtpw" name="Value(3).result" outgoing="_SCJzxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJz2ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJz3CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SCJz3ScoEeSLVrU2ifxtpw" value="3">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJz3icoEeSLVrU2ifxtpw" name="ExpressionStatement@52406524" incoming="_SCJMtScoEeSLVrU2ifxtpw" outgoing="_SCJMtycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJz3ycoEeSLVrU2ifxtpw" target="_SCJz5CcoEeSLVrU2ifxtpw" source="_SCJz8CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJz4CcoEeSLVrU2ifxtpw" target="_SCJz5ycoEeSLVrU2ifxtpw" source="_SCJ0ACcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJz4ScoEeSLVrU2ifxtpw" target="_SCJz6icoEeSLVrU2ifxtpw" source="_SCJ0AicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJz4icoEeSLVrU2ifxtpw" target="_SCJz4ycoEeSLVrU2ifxtpw" source="_SCJz7ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJz4ycoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_SCJz4icoEeSLVrU2ifxtpw" behavior="_SCKdsScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJz5CcoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_SCJz3ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJz5ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJz5icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCJz5ycoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_SCJz4CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJz6CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJz6ScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCJz6icoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_SCJz4ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJz6ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJz7CcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJz7ScoEeSLVrU2ifxtpw" name="Tuple@19e422ef" outgoing="_SCJz4icoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJz7icoEeSLVrU2ifxtpw" target="_SCJz_ycoEeSLVrU2ifxtpw" source="_SCJz9CcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJz7ycoEeSLVrU2ifxtpw" name="Value(&quot;customers.name&quot;)">
                <result xmi:id="_SCJz8CcoEeSLVrU2ifxtpw" name="Value(&quot;customers.name&quot;).result" outgoing="_SCJz3ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJz8ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJz8icoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SCJz8ycoEeSLVrU2ifxtpw" value="customers.name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:ForkNode" xmi:id="_SCJz9CcoEeSLVrU2ifxtpw" name="Fork(Fork(customers)@23c5b72)" incoming="_SCJMtCcoEeSLVrU2ifxtpw" outgoing="_SCJz7icoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionRegion" xmi:id="_SCJz9ScoEeSLVrU2ifxtpw" name="Collect(Read(name))" mode="parallel" outputElement="_SCJ0ACcoEeSLVrU2ifxtpw" inputElement="_SCJz_ycoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJz9icoEeSLVrU2ifxtpw" target="_SCJz-ScoEeSLVrU2ifxtpw" source="_SCJz_ycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJz9ycoEeSLVrU2ifxtpw" target="_SCJ0ACcoEeSLVrU2ifxtpw" source="_SCJz_CcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SCJz-CcoEeSLVrU2ifxtpw" name="Read(name)" structuralFeature="_SCJ2mCcoEeSLVrU2ifxtpw">
                  <object xmi:id="_SCJz-ScoEeSLVrU2ifxtpw" name="Read(name).object" incoming="_SCJz9icoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJz-icoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJz-ycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SCJz_CcoEeSLVrU2ifxtpw" name="Read(name).result" outgoing="_SCJz9ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJz_ScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJz_icoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
              </node>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SCJz_ycoEeSLVrU2ifxtpw" name="Collect(Read(name)).inputElement" incoming="_SCJz7icoEeSLVrU2ifxtpw" outgoing="_SCJz9icoEeSLVrU2ifxtpw" regionAsInput="_SCJz9ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ExpansionNode" xmi:id="_SCJ0ACcoEeSLVrU2ifxtpw" name="Collect(Read(name)).outputElement" incoming="_SCJz9ycoEeSLVrU2ifxtpw" outgoing="_SCJz4CcoEeSLVrU2ifxtpw" regionAsOutput="_SCJz9ScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ0AScoEeSLVrU2ifxtpw" name="Value(&quot;C&quot;)">
                <result xmi:id="_SCJ0AicoEeSLVrU2ifxtpw" name="Value(&quot;C&quot;).result" outgoing="_SCJz4ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0AycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0BCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SCJ0BScoEeSLVrU2ifxtpw" value="C">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0BicoEeSLVrU2ifxtpw" name="ExpressionStatement@7f02720c" incoming="_SCJMtycoEeSLVrU2ifxtpw" outgoing="_SCJMuCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0BycoEeSLVrU2ifxtpw" target="_SCJ0CycoEeSLVrU2ifxtpw" source="_SCJ0FicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0CCcoEeSLVrU2ifxtpw" target="_SCJ0EScoEeSLVrU2ifxtpw" source="_SCJ0HicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0CScoEeSLVrU2ifxtpw" target="_SCJ0CicoEeSLVrU2ifxtpw" source="_SCJ0FCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ0CicoEeSLVrU2ifxtpw" name="Call(AssertList)" incoming="_SCJ0CScoEeSLVrU2ifxtpw" behavior="_SCKdsScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJ0CycoEeSLVrU2ifxtpw" name="Call(AssertList).argument(label)" incoming="_SCJ0BycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0DCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0DScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCJ0DicoEeSLVrU2ifxtpw" name="Call(AssertList).argument(list)" incoming="_SCJMticoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0DycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0ECcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCJ0EScoEeSLVrU2ifxtpw" name="Call(AssertList).argument(expected)" incoming="_SCJ0CCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0EicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0EycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0FCcoEeSLVrU2ifxtpw" name="Tuple@587dccab" outgoing="_SCJ0CScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ0FScoEeSLVrU2ifxtpw" name="Value(&quot;list&quot;)">
                <result xmi:id="_SCJ0FicoEeSLVrU2ifxtpw" name="Value(&quot;list&quot;).result" outgoing="_SCJ0BycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0FycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0GCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SCJ0GScoEeSLVrU2ifxtpw" value="list">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0GicoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@27a5aafd">
                <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0GycoEeSLVrU2ifxtpw" target="_SCJ0JycoEeSLVrU2ifxtpw" source="_SCJ0IScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0HCcoEeSLVrU2ifxtpw" target="_SCJ0HicoEeSLVrU2ifxtpw" source="_SCJ0IycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0HScoEeSLVrU2ifxtpw" target="_SCJ0HicoEeSLVrU2ifxtpw" source="_SCJ0KScoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SCJ0HicoEeSLVrU2ifxtpw" name="SequenceConstructionExpression@27a5aafd.output" incoming="_SCJ0HCcoEeSLVrU2ifxtpw _SCJ0HScoEeSLVrU2ifxtpw" outgoing="_SCJ0CCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0HycoEeSLVrU2ifxtpw" value="2"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0ICcoEeSLVrU2ifxtpw" value="2"/>
                </structuredNodeOutput>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0IScoEeSLVrU2ifxtpw" name="SequenceExpressionList@52e8ec2c#1" outgoing="_SCJ0GycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ0IicoEeSLVrU2ifxtpw" name="Value(&quot;Blah&quot;)">
                    <result xmi:id="_SCJ0IycoEeSLVrU2ifxtpw" name="Value(&quot;Blah&quot;).result" outgoing="_SCJ0HCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0JCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0JScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SCJ0JicoEeSLVrU2ifxtpw" value="Blah">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0JycoEeSLVrU2ifxtpw" name="SequenceExpressionList@52e8ec2c#2" incoming="_SCJ0GycoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ0KCcoEeSLVrU2ifxtpw" name="Value(1)">
                    <result xmi:id="_SCJ0KScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SCJ0HScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0KicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0KycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralInteger" xmi:id="_SCJ0LCcoEeSLVrU2ifxtpw" value="1">
                      <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                    </value>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0LScoEeSLVrU2ifxtpw" name="ExpressionStatement@772c478a" incoming="_SCJMuCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0LicoEeSLVrU2ifxtpw" target="_SCJ0MScoEeSLVrU2ifxtpw" source="_SCJ0OScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0LycoEeSLVrU2ifxtpw" target="_SCJ0MCcoEeSLVrU2ifxtpw" source="_SCJ0NycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ0MCcoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SCJ0LycoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJ0MScoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SCJ0LicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0MicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0MycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCJ0NCcoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0NScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0NicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0NycoEeSLVrU2ifxtpw" name="Tuple@4a546701" outgoing="_SCJ0LycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ0OCcoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;)">
                <result xmi:id="_SCJ0OScoEeSLVrU2ifxtpw" name="Value(&quot;Done&quot;).result" outgoing="_SCJ0LicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0OicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0OycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SCJ0PCcoEeSLVrU2ifxtpw" value="Done">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
        </structuredNode>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SCJ0PScoEeSLVrU2ifxtpw" name="test$method$1" specification="_SCJ2fCcoEeSLVrU2ifxtpw" node="_SCJ0VicoEeSLVrU2ifxtpw _SCJ0VycoEeSLVrU2ifxtpw _SCJ0WCcoEeSLVrU2ifxtpw _SCJ0WScoEeSLVrU2ifxtpw _SCJ0WicoEeSLVrU2ifxtpw _SCJ0WycoEeSLVrU2ifxtpw _SCJ0XCcoEeSLVrU2ifxtpw" group="_SCJ0XCcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SCJ0PicoEeSLVrU2ifxtpw" name="notEmpty" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0PycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0QCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SCJ0QScoEeSLVrU2ifxtpw" name="includes" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0QicoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0QycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SCJ0RCcoEeSLVrU2ifxtpw" name="m" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0RScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0RicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SCJ0RycoEeSLVrU2ifxtpw" name="n" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0SCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0SScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SCJ0SicoEeSLVrU2ifxtpw" name="customers" type="_SCJ2lCcoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0SycoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0TCcoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SCJ0TScoEeSLVrU2ifxtpw" name="list" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0TicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0TycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0UCcoEeSLVrU2ifxtpw" target="_SCJ0VicoEeSLVrU2ifxtpw" source="_SCJ0iCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0UScoEeSLVrU2ifxtpw" target="_SCJ0VycoEeSLVrU2ifxtpw" source="_SCJ0iycoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0UicoEeSLVrU2ifxtpw" target="_SCJ0WCcoEeSLVrU2ifxtpw" source="_SCJ0jicoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0UycoEeSLVrU2ifxtpw" target="_SCJ0WScoEeSLVrU2ifxtpw" source="_SCJ0kScoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0VCcoEeSLVrU2ifxtpw" target="_SCJ0WicoEeSLVrU2ifxtpw" source="_SCJ0lCcoEeSLVrU2ifxtpw"/>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0VScoEeSLVrU2ifxtpw" target="_SCJ0WycoEeSLVrU2ifxtpw" source="_SCJ0lycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SCJ0XCcoEeSLVrU2ifxtpw" name="Body(test$method$1)">
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0XScoEeSLVrU2ifxtpw" target="_SCJ0tScoEeSLVrU2ifxtpw" source="_SCJ0micoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0XicoEeSLVrU2ifxtpw" target="_SCJ0wycoEeSLVrU2ifxtpw" source="_SCJ0tycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0XycoEeSLVrU2ifxtpw" target="_SCJ0vicoEeSLVrU2ifxtpw" source="_SCJ0tScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0YCcoEeSLVrU2ifxtpw" target="_SCJ0zicoEeSLVrU2ifxtpw" source="_SCJ0tycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0YScoEeSLVrU2ifxtpw" target="_SCJ00ScoEeSLVrU2ifxtpw" source="_SCJ0nCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0YicoEeSLVrU2ifxtpw" target="_SCJ0yScoEeSLVrU2ifxtpw" source="_SCJ0vicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0YycoEeSLVrU2ifxtpw" target="_SCJ03CcoEeSLVrU2ifxtpw" source="_SCJ0tycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0ZCcoEeSLVrU2ifxtpw" target="_SCJ03ycoEeSLVrU2ifxtpw" source="_SCJ0nCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0ZScoEeSLVrU2ifxtpw" target="_SCJ01ycoEeSLVrU2ifxtpw" source="_SCJ0yScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0ZicoEeSLVrU2ifxtpw" target="_SCJ06icoEeSLVrU2ifxtpw" source="_SCJ02ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0ZycoEeSLVrU2ifxtpw" target="_SCJ05ScoEeSLVrU2ifxtpw" source="_SCJ01ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0aCcoEeSLVrU2ifxtpw" target="_SCJ1FCcoEeSLVrU2ifxtpw" source="_SCJ1DicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0aScoEeSLVrU2ifxtpw" target="_SCJ1DycoEeSLVrU2ifxtpw" source="_SCJ05ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0aicoEeSLVrU2ifxtpw" target="_SCJ1PCcoEeSLVrU2ifxtpw" source="_SCJ1OCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0aycoEeSLVrU2ifxtpw" target="_SCJ1PycoEeSLVrU2ifxtpw" source="_SCJ0nCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0bCcoEeSLVrU2ifxtpw" target="_SCJ1OScoEeSLVrU2ifxtpw" source="_SCJ1DycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0bScoEeSLVrU2ifxtpw" target="_SCJ1TicoEeSLVrU2ifxtpw" source="_SCJ1SCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0bicoEeSLVrU2ifxtpw" target="_SCJ1SScoEeSLVrU2ifxtpw" source="_SCJ1OScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0bycoEeSLVrU2ifxtpw" target="_SCJ1ZCcoEeSLVrU2ifxtpw" source="_SCJ1YCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0cCcoEeSLVrU2ifxtpw" target="_SCJ1ZycoEeSLVrU2ifxtpw" source="_SCJ0nCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0cScoEeSLVrU2ifxtpw" target="_SCJ1YScoEeSLVrU2ifxtpw" source="_SCJ1SScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0cicoEeSLVrU2ifxtpw" target="_SCJ1cScoEeSLVrU2ifxtpw" source="_SCJ1YScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0cycoEeSLVrU2ifxtpw" target="_SCJ1gycoEeSLVrU2ifxtpw" source="_SCJ1cScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0dCcoEeSLVrU2ifxtpw" target="_SCJ1lScoEeSLVrU2ifxtpw" source="_SCJ1gycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0dScoEeSLVrU2ifxtpw" target="_SCJ1oycoEeSLVrU2ifxtpw" source="_SCJ1lycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0dicoEeSLVrU2ifxtpw" target="_SCJ1picoEeSLVrU2ifxtpw" source="_SCJ0nCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0dycoEeSLVrU2ifxtpw" target="_SCJ1nicoEeSLVrU2ifxtpw" source="_SCJ1lScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0eCcoEeSLVrU2ifxtpw" target="_SCJ1rycoEeSLVrU2ifxtpw" source="_SCJ1oCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0eScoEeSLVrU2ifxtpw" target="_SCJ1sicoEeSLVrU2ifxtpw" source="_SCJ0nCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0eicoEeSLVrU2ifxtpw" target="_SCJ1rCcoEeSLVrU2ifxtpw" source="_SCJ1nicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0eycoEeSLVrU2ifxtpw" target="_SCJ1wScoEeSLVrU2ifxtpw" source="_SCJ1uycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0fCcoEeSLVrU2ifxtpw" target="_SCJ1vCcoEeSLVrU2ifxtpw" source="_SCJ1rCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0fScoEeSLVrU2ifxtpw" target="_SCJ12ScoEeSLVrU2ifxtpw" source="_SCJ10ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0ficoEeSLVrU2ifxtpw" target="_SCJ11CcoEeSLVrU2ifxtpw" source="_SCJ1vCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0fycoEeSLVrU2ifxtpw" target="_SCJ17ycoEeSLVrU2ifxtpw" source="_SCJ16ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0gCcoEeSLVrU2ifxtpw" target="_SCJ18icoEeSLVrU2ifxtpw" source="_SCJ0nCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0gScoEeSLVrU2ifxtpw" target="_SCJ17CcoEeSLVrU2ifxtpw" source="_SCJ11CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0gicoEeSLVrU2ifxtpw" target="_SCJ0iCcoEeSLVrU2ifxtpw" source="_SCJ0wCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0gycoEeSLVrU2ifxtpw" target="_SCJ0iycoEeSLVrU2ifxtpw" source="_SCJ0yycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0hCcoEeSLVrU2ifxtpw" target="_SCJ0jicoEeSLVrU2ifxtpw" source="_SCJ1cycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0hScoEeSLVrU2ifxtpw" target="_SCJ0kScoEeSLVrU2ifxtpw" source="_SCJ1hScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0hicoEeSLVrU2ifxtpw" target="_SCJ0lCcoEeSLVrU2ifxtpw" source="_SCJ1cCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0hycoEeSLVrU2ifxtpw" target="_SCJ0lycoEeSLVrU2ifxtpw" source="_SCJ1-ycoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCJ0iCcoEeSLVrU2ifxtpw" name="Output(notEmpty)" incoming="_SCJ0gicoEeSLVrU2ifxtpw" outgoing="_SCJ0UCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0iScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0iicoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SCJ0iycoEeSLVrU2ifxtpw" name="Output(includes)" incoming="_SCJ0gycoEeSLVrU2ifxtpw" outgoing="_SCJ0UScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0jCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0jScoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SCJ0jicoEeSLVrU2ifxtpw" name="Output(m)" incoming="_SCJ0hCcoEeSLVrU2ifxtpw" outgoing="_SCJ0UicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0jycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0kCcoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SCJ0kScoEeSLVrU2ifxtpw" name="Output(n)" incoming="_SCJ0hScoEeSLVrU2ifxtpw" outgoing="_SCJ0UycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0kicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0kycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SCJ0lCcoEeSLVrU2ifxtpw" name="Output(customers)" incoming="_SCJ0hicoEeSLVrU2ifxtpw" outgoing="_SCJ0VCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0lScoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0licoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SCJ0lycoEeSLVrU2ifxtpw" name="Output(list)" incoming="_SCJ0hycoEeSLVrU2ifxtpw" outgoing="_SCJ0VScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0mCcoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0mScoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0micoEeSLVrU2ifxtpw" name="ExpressionStatement@29aaec88" outgoing="_SCJ0XScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0mycoEeSLVrU2ifxtpw" target="_SCJ0nCcoEeSLVrU2ifxtpw" source="_SCJ0pScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ0nCcoEeSLVrU2ifxtpw" name="Fork(customer)@5fc164e5" incoming="_SCJ0mycoEeSLVrU2ifxtpw" outgoing="_SCJ0YScoEeSLVrU2ifxtpw _SCJ0ZCcoEeSLVrU2ifxtpw _SCJ0aycoEeSLVrU2ifxtpw _SCJ0cCcoEeSLVrU2ifxtpw _SCJ0dicoEeSLVrU2ifxtpw _SCJ0eScoEeSLVrU2ifxtpw _SCJ0gCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0nScoEeSLVrU2ifxtpw" name="RightHandSide@11c72780">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0nicoEeSLVrU2ifxtpw" target="_SCJ0qCcoEeSLVrU2ifxtpw" source="_SCJ0rCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0nycoEeSLVrU2ifxtpw" target="_SCJ0oicoEeSLVrU2ifxtpw" source="_SCJ0sScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0oCcoEeSLVrU2ifxtpw" target="_SCJ0oScoEeSLVrU2ifxtpw" source="_SCJ0rycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SCJ0oScoEeSLVrU2ifxtpw" name="Call(Customer)" incoming="_SCJ0oCcoEeSLVrU2ifxtpw" operation="_SCJ3RCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SCJ0oicoEeSLVrU2ifxtpw" name="Call(Customer).argument(name)" incoming="_SCJ0nycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0oycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0pCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SCJ0pScoEeSLVrU2ifxtpw" name="Call(Customer).result()" outgoing="_SCJ0mycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0picoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0pycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_SCJ0qCcoEeSLVrU2ifxtpw" name="Call(Customer).target" incoming="_SCJ0nicoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0qScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0qicoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_SCJ0qycoEeSLVrU2ifxtpw" name="Create(Customer)" classifier="_SCJ2lCcoEeSLVrU2ifxtpw">
                <result xmi:id="_SCJ0rCcoEeSLVrU2ifxtpw" name="Create(Customer).result" outgoing="_SCJ0nicoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0rScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0ricoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0rycoEeSLVrU2ifxtpw" name="Tuple@9a5ab8" outgoing="_SCJ0oCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ0sCcoEeSLVrU2ifxtpw" name="Value(&quot;A&quot;)">
                  <result xmi:id="_SCJ0sScoEeSLVrU2ifxtpw" name="Value(&quot;A&quot;).result" outgoing="_SCJ0nycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0sicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0sycoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SCJ0tCcoEeSLVrU2ifxtpw" value="A">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0tScoEeSLVrU2ifxtpw" name="ExpressionStatement@41f36baf" incoming="_SCJ0XScoEeSLVrU2ifxtpw" outgoing="_SCJ0XycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0ticoEeSLVrU2ifxtpw" target="_SCJ0tycoEeSLVrU2ifxtpw" source="_SCJ0uicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ0tycoEeSLVrU2ifxtpw" name="Fork(customers)@3b38b6cf" incoming="_SCJ0ticoEeSLVrU2ifxtpw" outgoing="_SCJ0XicoEeSLVrU2ifxtpw _SCJ0YCcoEeSLVrU2ifxtpw _SCJ0YycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0uCcoEeSLVrU2ifxtpw" name="RightHandSide@869ee69">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ0uScoEeSLVrU2ifxtpw" name="Value(null)">
                <result xmi:id="_SCJ0uicoEeSLVrU2ifxtpw" name="Value(null).result" outgoing="_SCJ0ticoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0uycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0vCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralNull" xmi:id="_SCJ0vScoEeSLVrU2ifxtpw"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0vicoEeSLVrU2ifxtpw" name="ExpressionStatement@9ccab97" incoming="_SCJ0XycoEeSLVrU2ifxtpw" outgoing="_SCJ0YicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0vycoEeSLVrU2ifxtpw" target="_SCJ0wCcoEeSLVrU2ifxtpw" source="_SCJ0xicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ0wCcoEeSLVrU2ifxtpw" name="Fork(notEmpty)@29d49b0a" incoming="_SCJ0vycoEeSLVrU2ifxtpw" outgoing="_SCJ0gicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0wScoEeSLVrU2ifxtpw" name="RightHandSide@450ec2fa">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ0wicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$notEmpty__Expressions_Sequence_Operation$Customer__)" behavior="_SCJ3TCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SCJ0wycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$notEmpty__Expressions_Sequence_Operation$Customer__).argument(seq)" incoming="_SCJ0XicoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0xCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0xScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SCJ0xicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$notEmpty__Expressions_Sequence_Operation$Customer__).result()" outgoing="_SCJ0vycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0xycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0yCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0yScoEeSLVrU2ifxtpw" name="ExpressionStatement@23fe12cd" incoming="_SCJ0YicoEeSLVrU2ifxtpw" outgoing="_SCJ0ZScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0yicoEeSLVrU2ifxtpw" target="_SCJ0yycoEeSLVrU2ifxtpw" source="_SCJ01CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ0yycoEeSLVrU2ifxtpw" name="Fork(includes)@22707f7e" incoming="_SCJ0yicoEeSLVrU2ifxtpw" outgoing="_SCJ0gycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ0zCcoEeSLVrU2ifxtpw" name="RightHandSide@7c23adc">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ0zScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$includes__Expressions_Sequence_Operation$Customer__)" behavior="_SCJ3bCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SCJ0zicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$includes__Expressions_Sequence_Operation$Customer__).argument(seq)" incoming="_SCJ0YCcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0zycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ00CcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_SCJ00ScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$includes__Expressions_Sequence_Operation$Customer__).argument(element)" incoming="_SCJ0YScoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ00icoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ00ycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SCJ01CcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$includes__Expressions_Sequence_Operation$Customer__).result()" outgoing="_SCJ0yicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ01ScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ01icoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ01ycoEeSLVrU2ifxtpw" name="ExpressionStatement@59baf427" incoming="_SCJ0ZScoEeSLVrU2ifxtpw" outgoing="_SCJ0ZycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ02CcoEeSLVrU2ifxtpw" target="_SCJ02ScoEeSLVrU2ifxtpw" source="_SCJ04icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ02ScoEeSLVrU2ifxtpw" name="Fork(customers)@5cbb87b9" incoming="_SCJ02CcoEeSLVrU2ifxtpw" outgoing="_SCJ0ZicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ02icoEeSLVrU2ifxtpw" name="RightHandSide@1bcbb23f">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ02ycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$including__Expressions_Sequence_Operation$Customer__)" behavior="_SCJ3licoEeSLVrU2ifxtpw">
                <argument xmi:id="_SCJ03CcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$including__Expressions_Sequence_Operation$Customer__).argument(seq)" incoming="_SCJ0YycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ03ScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ03icoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_SCJ03ycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$including__Expressions_Sequence_Operation$Customer__).argument(element)" incoming="_SCJ0ZCcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ04CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ04ScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SCJ04icoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$including__Expressions_Sequence_Operation$Customer__).result()" outgoing="_SCJ02CcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ04ycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ05CcoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ05ScoEeSLVrU2ifxtpw" name="ExpressionStatement@7510cfc8" incoming="_SCJ0ZycoEeSLVrU2ifxtpw" outgoing="_SCJ0aScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ05icoEeSLVrU2ifxtpw" target="_SCJ07ScoEeSLVrU2ifxtpw" source="_SCJ0_icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ05ycoEeSLVrU2ifxtpw" target="_SCJ06ScoEeSLVrU2ifxtpw" source="_SCJ09icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ06CcoEeSLVrU2ifxtpw" target="_SCJ1DicoEeSLVrU2ifxtpw" source="_SCJ08CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ06ScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__)" incoming="_SCJ05ycoEeSLVrU2ifxtpw" behavior="_SCJ31ScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJ06icoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__).argument(seq)" incoming="_SCJ0ZicoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ06ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ07CcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCJ07ScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__).argument(element)" incoming="_SCJ05icoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ07icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ07ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCJ08CcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__).result(seq)" outgoing="_SCJ06CcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ08ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ08icoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_SCJ08ycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__).result()" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ09CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ09ScoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ09icoEeSLVrU2ifxtpw" name="Tuple@2e608fc2" outgoing="_SCJ05ycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ09ycoEeSLVrU2ifxtpw" target="_SCJ1AScoEeSLVrU2ifxtpw" source="_SCJ1BScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ0-CcoEeSLVrU2ifxtpw" target="_SCJ0-ycoEeSLVrU2ifxtpw" source="_SCJ1CicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ0-ScoEeSLVrU2ifxtpw" target="_SCJ0-icoEeSLVrU2ifxtpw" source="_SCJ1CCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SCJ0-icoEeSLVrU2ifxtpw" name="Call(Customer)" incoming="_SCJ0-ScoEeSLVrU2ifxtpw" operation="_SCJ3RCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SCJ0-ycoEeSLVrU2ifxtpw" name="Call(Customer).argument(name)" incoming="_SCJ0-CcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0_CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ0_ScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SCJ0_icoEeSLVrU2ifxtpw" name="Call(Customer).result()" outgoing="_SCJ05icoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ0_ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1ACcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_SCJ1AScoEeSLVrU2ifxtpw" name="Call(Customer).target" incoming="_SCJ09ycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1AicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1AycoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_SCJ1BCcoEeSLVrU2ifxtpw" name="Create(Customer)" classifier="_SCJ2lCcoEeSLVrU2ifxtpw">
                <result xmi:id="_SCJ1BScoEeSLVrU2ifxtpw" name="Create(Customer).result" outgoing="_SCJ09ycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1BicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1BycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1CCcoEeSLVrU2ifxtpw" name="Tuple@5af8a4f" outgoing="_SCJ0-ScoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ1CScoEeSLVrU2ifxtpw" name="Value(&quot;B&quot;)">
                  <result xmi:id="_SCJ1CicoEeSLVrU2ifxtpw" name="Value(&quot;B&quot;).result" outgoing="_SCJ0-CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1CycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1DCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SCJ1DScoEeSLVrU2ifxtpw" value="B">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ1DicoEeSLVrU2ifxtpw" name="Fork(customers)@168f1ece" incoming="_SCJ06CcoEeSLVrU2ifxtpw" outgoing="_SCJ0aCcoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1DycoEeSLVrU2ifxtpw" name="ExpressionStatement@45d000f1" incoming="_SCJ0aScoEeSLVrU2ifxtpw" outgoing="_SCJ0bCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1ECcoEeSLVrU2ifxtpw" target="_SCJ1FycoEeSLVrU2ifxtpw" source="_SCJ1KCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ1EScoEeSLVrU2ifxtpw" target="_SCJ1EycoEeSLVrU2ifxtpw" source="_SCJ1ICcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1EicoEeSLVrU2ifxtpw" target="_SCJ1OCcoEeSLVrU2ifxtpw" source="_SCJ1GicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ1EycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__)" incoming="_SCJ1EScoEeSLVrU2ifxtpw" behavior="_SCJ31ScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJ1FCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__).argument(seq)" incoming="_SCJ0aCcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1FScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1FicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCJ1FycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__).argument(element)" incoming="_SCJ1ECcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1GCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1GScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCJ1GicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__).result(seq)" outgoing="_SCJ1EicoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1GycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1HCcoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_SCJ1HScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__).result()" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1HicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1HycoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1ICcoEeSLVrU2ifxtpw" name="Tuple@4f8f25d" outgoing="_SCJ1EScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1IScoEeSLVrU2ifxtpw" target="_SCJ1KycoEeSLVrU2ifxtpw" source="_SCJ1LycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1IicoEeSLVrU2ifxtpw" target="_SCJ1JScoEeSLVrU2ifxtpw" source="_SCJ1NCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ1IycoEeSLVrU2ifxtpw" target="_SCJ1JCcoEeSLVrU2ifxtpw" source="_SCJ1MicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="_SCJ1JCcoEeSLVrU2ifxtpw" name="Call(Customer)" incoming="_SCJ1IycoEeSLVrU2ifxtpw" operation="_SCJ3RCcoEeSLVrU2ifxtpw">
                <argument xmi:id="_SCJ1JScoEeSLVrU2ifxtpw" name="Call(Customer).argument(name)" incoming="_SCJ1IicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1JicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1JycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SCJ1KCcoEeSLVrU2ifxtpw" name="Call(Customer).result()" outgoing="_SCJ1ECcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1KScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1KicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <target xmi:id="_SCJ1KycoEeSLVrU2ifxtpw" name="Call(Customer).target" incoming="_SCJ1IScoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1LCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1LScoEeSLVrU2ifxtpw" value="1"/>
                </target>
              </node>
              <node xmi:type="uml:CreateObjectAction" xmi:id="_SCJ1LicoEeSLVrU2ifxtpw" name="Create(Customer)" classifier="_SCJ2lCcoEeSLVrU2ifxtpw">
                <result xmi:id="_SCJ1LycoEeSLVrU2ifxtpw" name="Create(Customer).result" outgoing="_SCJ1IScoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1MCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1MScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1MicoEeSLVrU2ifxtpw" name="Tuple@6a70f5e2" outgoing="_SCJ1IycoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ1MycoEeSLVrU2ifxtpw" name="Value(&quot;C&quot;)">
                  <result xmi:id="_SCJ1NCcoEeSLVrU2ifxtpw" name="Value(&quot;C&quot;).result" outgoing="_SCJ1IicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1NScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1NicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SCJ1NycoEeSLVrU2ifxtpw" value="C">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ1OCcoEeSLVrU2ifxtpw" name="Fork(customers)@3c2543d7" incoming="_SCJ1EicoEeSLVrU2ifxtpw" outgoing="_SCJ0aicoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1OScoEeSLVrU2ifxtpw" name="ExpressionStatement@6117755b" incoming="_SCJ0bCcoEeSLVrU2ifxtpw" outgoing="_SCJ0bicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1OicoEeSLVrU2ifxtpw" target="_SCJ1SCcoEeSLVrU2ifxtpw" source="_SCJ1QicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ1OycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__)" behavior="_SCJ31ScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJ1PCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__).argument(seq)" incoming="_SCJ0aicoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1PScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1PicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCJ1PycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__).argument(element)" incoming="_SCJ0aycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1QCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1QScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCJ1QicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__).result(seq)" outgoing="_SCJ1OicoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1QycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1RCcoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_SCJ1RScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__).result()" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1RicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1RycoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ1SCcoEeSLVrU2ifxtpw" name="Fork(customers)@39d9c195" incoming="_SCJ1OicoEeSLVrU2ifxtpw" outgoing="_SCJ0bScoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1SScoEeSLVrU2ifxtpw" name="ExpressionStatement@44de87ee" incoming="_SCJ0bicoEeSLVrU2ifxtpw" outgoing="_SCJ0cScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1SicoEeSLVrU2ifxtpw" target="_SCJ1UScoEeSLVrU2ifxtpw" source="_SCJ1XCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ1SycoEeSLVrU2ifxtpw" target="_SCJ1TScoEeSLVrU2ifxtpw" source="_SCJ1WicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1TCcoEeSLVrU2ifxtpw" target="_SCJ1YCcoEeSLVrU2ifxtpw" source="_SCJ1VCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ1TScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$removeAt__Expressions_Sequence_Operation$Customer__)" incoming="_SCJ1SycoEeSLVrU2ifxtpw" behavior="_SCJ4DScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJ1TicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$removeAt__Expressions_Sequence_Operation$Customer__).argument(seq)" incoming="_SCJ0bScoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1TycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1UCcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCJ1UScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$removeAt__Expressions_Sequence_Operation$Customer__).argument(index)" incoming="_SCJ1SicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1UicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1UycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCJ1VCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$removeAt__Expressions_Sequence_Operation$Customer__).result(seq)" outgoing="_SCJ1TCcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1VScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1VicoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_SCJ1VycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$removeAt__Expressions_Sequence_Operation$Customer__).result()" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1WCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1WScoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1WicoEeSLVrU2ifxtpw" name="Tuple@621a2deb" outgoing="_SCJ1SycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ1WycoEeSLVrU2ifxtpw" name="Value(2)">
                <result xmi:id="_SCJ1XCcoEeSLVrU2ifxtpw" name="Value(2).result" outgoing="_SCJ1SicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1XScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1XicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SCJ1XycoEeSLVrU2ifxtpw" value="2">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ1YCcoEeSLVrU2ifxtpw" name="Fork(customers)@6865eee9" incoming="_SCJ1TCcoEeSLVrU2ifxtpw" outgoing="_SCJ0bycoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1YScoEeSLVrU2ifxtpw" name="ExpressionStatement@966f383" incoming="_SCJ0cScoEeSLVrU2ifxtpw" outgoing="_SCJ0cicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1YicoEeSLVrU2ifxtpw" target="_SCJ1cCcoEeSLVrU2ifxtpw" source="_SCJ1aicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ1YycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$remove__Expressions_Sequence_Operation$Customer__)" behavior="_SCJ4hCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJ1ZCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$remove__Expressions_Sequence_Operation$Customer__).argument(seq)" incoming="_SCJ0bycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1ZScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1ZicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCJ1ZycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$remove__Expressions_Sequence_Operation$Customer__).argument(element)" incoming="_SCJ0cCcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1aCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1aScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCJ1aicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$remove__Expressions_Sequence_Operation$Customer__).result(seq)" outgoing="_SCJ1YicoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1aycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1bCcoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_SCJ1bScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$remove__Expressions_Sequence_Operation$Customer__).result()" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1bicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1bycoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ1cCcoEeSLVrU2ifxtpw" name="Fork(customers)@26cb4146" incoming="_SCJ1YicoEeSLVrU2ifxtpw" outgoing="_SCJ0hicoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1cScoEeSLVrU2ifxtpw" name="ExpressionStatement@787f7844" incoming="_SCJ0cicoEeSLVrU2ifxtpw" outgoing="_SCJ0cycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1cicoEeSLVrU2ifxtpw" target="_SCJ1cycoEeSLVrU2ifxtpw" source="_SCJ1eycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ1cycoEeSLVrU2ifxtpw" name="Fork(m)@18ffbadc" incoming="_SCJ1cicoEeSLVrU2ifxtpw" outgoing="_SCJ0hCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1dCcoEeSLVrU2ifxtpw" name="RightHandSide@3d44ce56">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1dScoEeSLVrU2ifxtpw" target="_SCJ1eCcoEeSLVrU2ifxtpw" source="_SCJ1gCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ1dicoEeSLVrU2ifxtpw" target="_SCJ1dycoEeSLVrU2ifxtpw" source="_SCJ1ficoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ1dycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__Expressions_Sequence_Operation$Customer__)" incoming="_SCJ1dicoEeSLVrU2ifxtpw" behavior="_SCKbHycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SCJ1eCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__Expressions_Sequence_Operation$Customer__).argument(seq)" incoming="_SCJ1dScoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1eScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1eicoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SCJ1eycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__Expressions_Sequence_Operation$Customer__).result()" outgoing="_SCJ1cicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1fCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1fScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1ficoEeSLVrU2ifxtpw" name="Tuple@4325d9f9" outgoing="_SCJ1dicoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_SCJ1fycoEeSLVrU2ifxtpw" name="ReadExtent(Customer)" classifier="_SCJ2lCcoEeSLVrU2ifxtpw">
                  <result xmi:id="_SCJ1gCcoEeSLVrU2ifxtpw" name="ReadExtent(Customer).result" outgoing="_SCJ1dScoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1gScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1gicoEeSLVrU2ifxtpw" value="*"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1gycoEeSLVrU2ifxtpw" name="ExpressionStatement@6b11af4b" incoming="_SCJ0cycoEeSLVrU2ifxtpw" outgoing="_SCJ0dCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1hCcoEeSLVrU2ifxtpw" target="_SCJ1hScoEeSLVrU2ifxtpw" source="_SCJ1jScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ1hScoEeSLVrU2ifxtpw" name="Fork(n)@6136a28b" incoming="_SCJ1hCcoEeSLVrU2ifxtpw" outgoing="_SCJ0hScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1hicoEeSLVrU2ifxtpw" name="RightHandSide@49e98589">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1hycoEeSLVrU2ifxtpw" target="_SCJ1iicoEeSLVrU2ifxtpw" source="_SCJ1kicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ1iCcoEeSLVrU2ifxtpw" target="_SCJ1iScoEeSLVrU2ifxtpw" source="_SCJ1kCcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ1iScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__Expressions_Sequence_Operation$Customer__)" incoming="_SCJ1iCcoEeSLVrU2ifxtpw" behavior="_SCKbHycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SCJ1iicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__Expressions_Sequence_Operation$Customer__).argument(seq)" incoming="_SCJ1hycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1iycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1jCcoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SCJ1jScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__Expressions_Sequence_Operation$Customer__).result()" outgoing="_SCJ1hCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1jicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1jycoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1kCcoEeSLVrU2ifxtpw" name="Tuple@27164851" outgoing="_SCJ1iCcoEeSLVrU2ifxtpw">
                <node xmi:type="uml:ReadExtentAction" xmi:id="_SCJ1kScoEeSLVrU2ifxtpw" name="ReadExtent(Customer)" classifier="_SCJ2lCcoEeSLVrU2ifxtpw">
                  <result xmi:id="_SCJ1kicoEeSLVrU2ifxtpw" name="ReadExtent(Customer).result" outgoing="_SCJ1hycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1kycoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1lCcoEeSLVrU2ifxtpw" value="*"/>
                  </result>
                </node>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1lScoEeSLVrU2ifxtpw" name="ExpressionStatement@3a41d175" incoming="_SCJ0dCcoEeSLVrU2ifxtpw" outgoing="_SCJ0dycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1licoEeSLVrU2ifxtpw" target="_SCJ1lycoEeSLVrU2ifxtpw" source="_SCJ1micoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ1lycoEeSLVrU2ifxtpw" name="Fork(list)@6c959867" incoming="_SCJ1licoEeSLVrU2ifxtpw" outgoing="_SCJ0dScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1mCcoEeSLVrU2ifxtpw" name="RightHandSide@5148c9e2">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ1mScoEeSLVrU2ifxtpw" name="Value(null)">
                <result xmi:id="_SCJ1micoEeSLVrU2ifxtpw" name="Value(null).result" outgoing="_SCJ1licoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1mycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1nCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralNull" xmi:id="_SCJ1nScoEeSLVrU2ifxtpw"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1nicoEeSLVrU2ifxtpw" name="ExpressionStatement@26d7506a" incoming="_SCJ0dycoEeSLVrU2ifxtpw" outgoing="_SCJ0eicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1nycoEeSLVrU2ifxtpw" target="_SCJ1oCcoEeSLVrU2ifxtpw" source="_SCJ1qScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ1oCcoEeSLVrU2ifxtpw" name="Fork(list)@2997f708" incoming="_SCJ1nycoEeSLVrU2ifxtpw" outgoing="_SCJ0eCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1oScoEeSLVrU2ifxtpw" name="RightHandSide@37db438d">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ1oicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$including__any__)" behavior="_SCKbPycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SCJ1oycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$including__any__).argument(seq)" incoming="_SCJ0dScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1pCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1pScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <argument xmi:id="_SCJ1picoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$including__any__).argument(element)" incoming="_SCJ0dicoEeSLVrU2ifxtpw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1pycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1qCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SCJ1qScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$including__any__).result()" outgoing="_SCJ1nycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1qicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1qycoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1rCcoEeSLVrU2ifxtpw" name="ExpressionStatement@3f730d1a" incoming="_SCJ0eicoEeSLVrU2ifxtpw" outgoing="_SCJ0fCcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1rScoEeSLVrU2ifxtpw" target="_SCJ1uycoEeSLVrU2ifxtpw" source="_SCJ1tScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ1ricoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__)" behavior="_SCKbgCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJ1rycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__).argument(seq)" incoming="_SCJ0eCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1sCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1sScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCJ1sicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__).argument(element)" incoming="_SCJ0eScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1sycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1tCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCJ1tScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__).result(seq)" outgoing="_SCJ1rScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1ticoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1tycoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_SCJ1uCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__).result()" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1uScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1uicoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ1uycoEeSLVrU2ifxtpw" name="Fork(list)@60f05d6e" incoming="_SCJ1rScoEeSLVrU2ifxtpw" outgoing="_SCJ0eycoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1vCcoEeSLVrU2ifxtpw" name="ExpressionStatement@7d667add" incoming="_SCJ0fCcoEeSLVrU2ifxtpw" outgoing="_SCJ0ficoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1vScoEeSLVrU2ifxtpw" target="_SCJ1xCcoEeSLVrU2ifxtpw" source="_SCJ1zycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ1vicoEeSLVrU2ifxtpw" target="_SCJ1wCcoEeSLVrU2ifxtpw" source="_SCJ1zScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ1vycoEeSLVrU2ifxtpw" target="_SCJ10ycoEeSLVrU2ifxtpw" source="_SCJ1xycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ1wCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__)" incoming="_SCJ1vicoEeSLVrU2ifxtpw" behavior="_SCKbgCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJ1wScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__).argument(seq)" incoming="_SCJ0eycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1wicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1wycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCJ1xCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__).argument(element)" incoming="_SCJ1vScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1xScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1xicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCJ1xycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__).result(seq)" outgoing="_SCJ1vycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1yCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1yScoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_SCJ1yicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__).result()" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1yycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1zCcoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ1zScoEeSLVrU2ifxtpw" name="Tuple@4b83672d" outgoing="_SCJ1vicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ1zicoEeSLVrU2ifxtpw" name="Value(&quot;Blah&quot;)">
                <result xmi:id="_SCJ1zycoEeSLVrU2ifxtpw" name="Value(&quot;Blah&quot;).result" outgoing="_SCJ1vScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ10CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ10ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SCJ10icoEeSLVrU2ifxtpw" value="Blah">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ10ycoEeSLVrU2ifxtpw" name="Fork(list)@75a122b8" incoming="_SCJ1vycoEeSLVrU2ifxtpw" outgoing="_SCJ0fScoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ11CcoEeSLVrU2ifxtpw" name="ExpressionStatement@27855bf4" incoming="_SCJ0ficoEeSLVrU2ifxtpw" outgoing="_SCJ0gScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ11ScoEeSLVrU2ifxtpw" target="_SCJ13CcoEeSLVrU2ifxtpw" source="_SCJ15ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ11icoEeSLVrU2ifxtpw" target="_SCJ12CcoEeSLVrU2ifxtpw" source="_SCJ15ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ11ycoEeSLVrU2ifxtpw" target="_SCJ16ycoEeSLVrU2ifxtpw" source="_SCJ13ycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ12CcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__)" incoming="_SCJ11icoEeSLVrU2ifxtpw" behavior="_SCKbgCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJ12ScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__).argument(seq)" incoming="_SCJ0fScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ12icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ12ycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCJ13CcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__).argument(element)" incoming="_SCJ11ScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ13ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ13icoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCJ13ycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__).result(seq)" outgoing="_SCJ11ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ14CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ14ScoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_SCJ14icoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$add__any__).result()" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ14ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ15CcoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ15ScoEeSLVrU2ifxtpw" name="Tuple@b1f1d8" outgoing="_SCJ11icoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ15icoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_SCJ15ycoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SCJ11ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ16CcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ16ScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SCJ16icoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ16ycoEeSLVrU2ifxtpw" name="Fork(list)@22f70465" incoming="_SCJ11ycoEeSLVrU2ifxtpw" outgoing="_SCJ0fycoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ17CcoEeSLVrU2ifxtpw" name="ExpressionStatement@58bf5935" incoming="_SCJ0gScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ17ScoEeSLVrU2ifxtpw" target="_SCJ1-ycoEeSLVrU2ifxtpw" source="_SCJ19ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ17icoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$removeAll__any__)" behavior="_SCKbuCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJ17ycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$removeAll__any__).argument(seq1)" incoming="_SCJ0fycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ18CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ18ScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCJ18icoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$removeAll__any__).argument(seq2)" incoming="_SCJ0gCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ18ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ19CcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SCJ19ScoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$removeAll__any__).result(seq1)" outgoing="_SCJ17ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ19icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ19ycoEeSLVrU2ifxtpw" value="*"/>
              </result>
              <result xmi:id="_SCJ1-CcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$removeAll__any__).result()" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1-ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1-icoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ1-ycoEeSLVrU2ifxtpw" name="Fork(list)@3aa8c7b" incoming="_SCJ17ScoEeSLVrU2ifxtpw" outgoing="_SCJ0hycoEeSLVrU2ifxtpw"/>
          </node>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ0VicoEeSLVrU2ifxtpw" name="Output(notEmpty)" incoming="_SCJ0UCcoEeSLVrU2ifxtpw" parameter="_SCJ0PicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ0VycoEeSLVrU2ifxtpw" name="Output(includes)" incoming="_SCJ0UScoEeSLVrU2ifxtpw" parameter="_SCJ0QScoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ0WCcoEeSLVrU2ifxtpw" name="Output(m)" incoming="_SCJ0UicoEeSLVrU2ifxtpw" parameter="_SCJ0RCcoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ0WScoEeSLVrU2ifxtpw" name="Output(n)" incoming="_SCJ0UycoEeSLVrU2ifxtpw" parameter="_SCJ0RycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ0WicoEeSLVrU2ifxtpw" name="Output(customers)" incoming="_SCJ0VCcoEeSLVrU2ifxtpw" parameter="_SCJ0SicoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ0WycoEeSLVrU2ifxtpw" name="Output(list)" incoming="_SCJ0VScoEeSLVrU2ifxtpw" parameter="_SCJ0TScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SCJ1_CcoEeSLVrU2ifxtpw" name="Expressions_Sequence_Operation$method$1" specification="_SCJ2jycoEeSLVrU2ifxtpw" node="_SCJ2AScoEeSLVrU2ifxtpw _SCJ2AicoEeSLVrU2ifxtpw" group="_SCJ2AicoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SCJ1_ScoEeSLVrU2ifxtpw" name="" type="_SCJMoScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ1_icoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ1_ycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2ACcoEeSLVrU2ifxtpw" target="_SCJ2AScoEeSLVrU2ifxtpw" source="_SCJ2EycoEeSLVrU2ifxtpw"/>
        <structuredNode xmi:id="_SCJ2AicoEeSLVrU2ifxtpw" name="Body(Expressions_Sequence_Operation$method$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2AycoEeSLVrU2ifxtpw" target="_SCJ2EycoEeSLVrU2ifxtpw" source="_SCJ2ECcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2BCcoEeSLVrU2ifxtpw" target="_SCJ2FScoEeSLVrU2ifxtpw" source="_SCJ2EycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ2BScoEeSLVrU2ifxtpw" target="_SCJ2DicoEeSLVrU2ifxtpw" source="_SCJ2FCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2BicoEeSLVrU2ifxtpw" target="_SCJ2GScoEeSLVrU2ifxtpw" source="_SCJ2EycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2BycoEeSLVrU2ifxtpw" target="_SCJ2ICcoEeSLVrU2ifxtpw" source="_SCJ2HCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2CCcoEeSLVrU2ifxtpw" target="_SCJ2LCcoEeSLVrU2ifxtpw" source="_SCJ2IycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2CScoEeSLVrU2ifxtpw" target="_SCJ2MicoEeSLVrU2ifxtpw" source="_SCJ2JycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ2CicoEeSLVrU2ifxtpw" target="_SCJ2NicoEeSLVrU2ifxtpw" source="_SCJ2NScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2CycoEeSLVrU2ifxtpw" target="_SCJ2NicoEeSLVrU2ifxtpw" source="_SCJ2LycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ2DCcoEeSLVrU2ifxtpw" target="_SCJ2FCcoEeSLVrU2ifxtpw" source="_SCJ2NicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCJ2DScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ2DicoEeSLVrU2ifxtpw" name="Body" incoming="_SCJ2BScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SCJ2DycoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SCJ2ECcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SCJ2AycoEeSLVrU2ifxtpw" type="_SCJMoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2EScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2EicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SCJ2EycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SCJ2AycoEeSLVrU2ifxtpw" outgoing="_SCJ2ACcoEeSLVrU2ifxtpw _SCJ2BCcoEeSLVrU2ifxtpw _SCJ2BicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="_SCJ2FCcoEeSLVrU2ifxtpw" name="Call(Expressions_Sequence_Operation$initialization$1)" incoming="_SCJ2DCcoEeSLVrU2ifxtpw" outgoing="_SCJ2BScoEeSLVrU2ifxtpw" operation="_SCJ2eycoEeSLVrU2ifxtpw">
            <target xmi:id="_SCJ2FScoEeSLVrU2ifxtpw" name="Call(Expressions_Sequence_Operation$initialization$1).target" incoming="_SCJ2BCcoEeSLVrU2ifxtpw" type="_SCJMoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2FicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2FycoEeSLVrU2ifxtpw" value="1"/>
            </target>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SCJ2GCcoEeSLVrU2ifxtpw" name="Read(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_SCJMpycoEeSLVrU2ifxtpw">
            <object xmi:id="_SCJ2GScoEeSLVrU2ifxtpw" name="Read(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_SCJ2BicoEeSLVrU2ifxtpw" type="_SCJMoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2GicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2GycoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SCJ2HCcoEeSLVrU2ifxtpw" name="Read(Expressions_Sequence_Operation$initializationFlag$1).result" outgoing="_SCJ2BycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2HScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2HicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ2HycoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SCJ2ICcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SCJ2BycoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2IScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2IicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SCJ2IycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SCJ2CCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2JCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2JScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ2JicoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SCJ2JycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SCJ2CScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2KCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2KScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SCJ2KicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SCJ2KycoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SCJ2LCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SCJ2CCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2LScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2LicoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SCJ2LycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SCJ2CycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2MCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2MScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SCJ2MicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SCJ2CScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2MycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2NCcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SCJ2NScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SCJ2CicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SCJ2NicoEeSLVrU2ifxtpw" name="Decision(Test(Expressions_Sequence_Operation$initializationFlag$1))" incoming="_SCJ2CicoEeSLVrU2ifxtpw _SCJ2CycoEeSLVrU2ifxtpw" outgoing="_SCJ2DCcoEeSLVrU2ifxtpw" decisionInputFlow="_SCJ2CycoEeSLVrU2ifxtpw"/>
        </structuredNode>
        <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ2AScoEeSLVrU2ifxtpw" name="Return" incoming="_SCJ2ACcoEeSLVrU2ifxtpw" parameter="_SCJ1_ScoEeSLVrU2ifxtpw"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SCJ2NycoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SCJ2kycoEeSLVrU2ifxtpw" node="_SCJ2OCcoEeSLVrU2ifxtpw" group="_SCJ2OCcoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SCJ2OCcoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:Activity" xmi:id="_SCJ2OScoEeSLVrU2ifxtpw" name="Expressions_Sequence_Operation$initialization$1" specification="_SCJ2eycoEeSLVrU2ifxtpw" node="_SCJ2OicoEeSLVrU2ifxtpw" group="_SCJ2OicoEeSLVrU2ifxtpw">
        <structuredNode xmi:id="_SCJ2OicoEeSLVrU2ifxtpw" name="Body(Expressions_Sequence_Operation$initialization$1)">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2OycoEeSLVrU2ifxtpw" target="_SCJ2SScoEeSLVrU2ifxtpw" source="_SCJ2RicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2PCcoEeSLVrU2ifxtpw" target="_SCJ2UycoEeSLVrU2ifxtpw" source="_SCJ2SScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2PScoEeSLVrU2ifxtpw" target="_SCJ2XScoEeSLVrU2ifxtpw" source="_SCJ2SScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2PicoEeSLVrU2ifxtpw" target="_SCJ2ZCcoEeSLVrU2ifxtpw" source="_SCJ2YCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2PycoEeSLVrU2ifxtpw" target="_SCJ2cCcoEeSLVrU2ifxtpw" source="_SCJ2ZycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2QCcoEeSLVrU2ifxtpw" target="_SCJ2dicoEeSLVrU2ifxtpw" source="_SCJ2aycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ2QScoEeSLVrU2ifxtpw" target="_SCJ2eicoEeSLVrU2ifxtpw" source="_SCJ2eScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2QicoEeSLVrU2ifxtpw" target="_SCJ2eicoEeSLVrU2ifxtpw" source="_SCJ2cycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ2QycoEeSLVrU2ifxtpw" target="_SCJ2SicoEeSLVrU2ifxtpw" source="_SCJ2eicoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCJ2RCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <node xmi:type="uml:ReadSelfAction" xmi:id="_SCJ2RScoEeSLVrU2ifxtpw" name="ReadSelf">
            <result xmi:id="_SCJ2RicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SCJ2OycoEeSLVrU2ifxtpw" type="_SCJMoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2RycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2SCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SCJ2SScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SCJ2OycoEeSLVrU2ifxtpw" outgoing="_SCJ2PCcoEeSLVrU2ifxtpw _SCJ2PScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ2SicoEeSLVrU2ifxtpw" name="Initialization" incoming="_SCJ2QycoEeSLVrU2ifxtpw">
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ2SycoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2TCcoEeSLVrU2ifxtpw" target="_SCJ2WScoEeSLVrU2ifxtpw" source="_SCJ2TicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ2TScoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_SCJ2TicoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SCJ2TCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2TycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2UCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SCJ2UScoEeSLVrU2ifxtpw" value="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </value>
              </node>
              <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SCJ2UicoEeSLVrU2ifxtpw" name="Write(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_SCJMpycoEeSLVrU2ifxtpw" isReplaceAll="true">
                <object xmi:id="_SCJ2UycoEeSLVrU2ifxtpw" name="Write(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_SCJ2PCcoEeSLVrU2ifxtpw" type="_SCJMoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2VCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2VScoEeSLVrU2ifxtpw" value="1"/>
                </object>
                <result xmi:id="_SCJ2VicoEeSLVrU2ifxtpw" name="Write(Expressions_Sequence_Operation$initializationFlag$1).result" type="_SCJMoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2VycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2WCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:id="_SCJ2WScoEeSLVrU2ifxtpw" name="Write(Expressions_Sequence_Operation$initializationFlag$1).value" incoming="_SCJ2TCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2WicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2WycoEeSLVrU2ifxtpw" value="1"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SCJ2XCcoEeSLVrU2ifxtpw" name="Read(Expressions_Sequence_Operation$initializationFlag$1)" structuralFeature="_SCJMpycoEeSLVrU2ifxtpw">
            <object xmi:id="_SCJ2XScoEeSLVrU2ifxtpw" name="Read(Expressions_Sequence_Operation$initializationFlag$1).object" incoming="_SCJ2PScoEeSLVrU2ifxtpw" type="_SCJMoScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2XicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2XycoEeSLVrU2ifxtpw" value="1"/>
            </object>
            <result xmi:id="_SCJ2YCcoEeSLVrU2ifxtpw" name="Read(Expressions_Sequence_Operation$initializationFlag$1).result" outgoing="_SCJ2PicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2YScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2YicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ2YycoEeSLVrU2ifxtpw" name="Call(ListSize)">
            <argument xmi:id="_SCJ2ZCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SCJ2PicoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2ZScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2ZicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SCJ2ZycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SCJ2PycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2aCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2aScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ2aicoEeSLVrU2ifxtpw" name="Value(0)">
            <result xmi:id="_SCJ2aycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SCJ2QCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2bCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2bScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralInteger" xmi:id="_SCJ2bicoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SCJ2bycoEeSLVrU2ifxtpw" name="Test(Size==0)">
            <first xmi:id="_SCJ2cCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SCJ2PycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2cScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2cicoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SCJ2cycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SCJ2QicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2dCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2dScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SCJ2dicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SCJ2QCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2dycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2eCcoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SCJ2eScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SCJ2QScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SCJ2eicoEeSLVrU2ifxtpw" name="Decision(Test(Expressions_Sequence_Operation$initializationFlag$1))" incoming="_SCJ2QScoEeSLVrU2ifxtpw _SCJ2QicoEeSLVrU2ifxtpw" outgoing="_SCJ2QycoEeSLVrU2ifxtpw" decisionInputFlow="_SCJ2QicoEeSLVrU2ifxtpw"/>
        </structuredNode>
      </ownedBehavior>
      <ownedOperation xmi:id="_SCJ2eycoEeSLVrU2ifxtpw" name="Expressions_Sequence_Operation$initialization$1" visibility="protected" method="_SCJ2OScoEeSLVrU2ifxtpw"/>
      <ownedOperation xmi:id="_SCJ2fCcoEeSLVrU2ifxtpw" name="test" visibility="package" method="_SCJ0PScoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SCJ2fScoEeSLVrU2ifxtpw" name="notEmpty" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2ficoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2fycoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SCJ2gCcoEeSLVrU2ifxtpw" name="includes" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2gScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2gicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SCJ2gycoEeSLVrU2ifxtpw" name="m" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2hCcoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2hScoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SCJ2hicoEeSLVrU2ifxtpw" name="n" visibility="package" direction="out">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2hycoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2iCcoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SCJ2iScoEeSLVrU2ifxtpw" name="customers" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2iicoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2iycoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SCJ2jCcoEeSLVrU2ifxtpw" name="list" visibility="package" direction="out">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2jScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2jicoEeSLVrU2ifxtpw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SCJ2jycoEeSLVrU2ifxtpw" name="Expressions_Sequence_Operation" visibility="package" method="_SCJ1_CcoEeSLVrU2ifxtpw">
        <ownedParameter xmi:id="_SCJ2kCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SCJMoScoEeSLVrU2ifxtpw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2kScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2kicoEeSLVrU2ifxtpw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SCJ2kycoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SCJ2NycoEeSLVrU2ifxtpw"/>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_SCJ2lCcoEeSLVrU2ifxtpw" name="Customer" visibility="package">
        <ownedAttribute xmi:id="_SCJ2lScoEeSLVrU2ifxtpw" name="Customer$initializationFlag$1" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2licoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2lycoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SCJ2mCcoEeSLVrU2ifxtpw" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2mScoEeSLVrU2ifxtpw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2micoEeSLVrU2ifxtpw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SCJ2mycoEeSLVrU2ifxtpw" name="Customer$method$1" specification="_SCJ3RCcoEeSLVrU2ifxtpw" node="_SCJ2pScoEeSLVrU2ifxtpw _SCJ2picoEeSLVrU2ifxtpw _SCJ2pycoEeSLVrU2ifxtpw _SCJ2qCcoEeSLVrU2ifxtpw" group="_SCJ2qCcoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SCJ2nCcoEeSLVrU2ifxtpw" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2nScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2nicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SCJ2nycoEeSLVrU2ifxtpw" name="" type="_SCJ2lCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2oCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2oScoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2oicoEeSLVrU2ifxtpw" target="_SCJ2picoEeSLVrU2ifxtpw" source="_SCJ2pScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2oycoEeSLVrU2ifxtpw" target="_SCJ2xicoEeSLVrU2ifxtpw" source="_SCJ2picoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2pCcoEeSLVrU2ifxtpw" target="_SCJ2pycoEeSLVrU2ifxtpw" source="_SCJ22ycoEeSLVrU2ifxtpw"/>
          <structuredNode xmi:id="_SCJ2qCcoEeSLVrU2ifxtpw" name="Body(Customer$method$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2qScoEeSLVrU2ifxtpw" target="_SCJ22ycoEeSLVrU2ifxtpw" source="_SCJ22CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2qicoEeSLVrU2ifxtpw" target="_SCJ23ScoEeSLVrU2ifxtpw" source="_SCJ22ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ2qycoEeSLVrU2ifxtpw" target="_SCJ2tCcoEeSLVrU2ifxtpw" source="_SCJ23CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2rCcoEeSLVrU2ifxtpw" target="_SCJ24ScoEeSLVrU2ifxtpw" source="_SCJ22ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2rScoEeSLVrU2ifxtpw" target="_SCJ26CcoEeSLVrU2ifxtpw" source="_SCJ25CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2ricoEeSLVrU2ifxtpw" target="_SCJ29CcoEeSLVrU2ifxtpw" source="_SCJ26ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2rycoEeSLVrU2ifxtpw" target="_SCJ2-icoEeSLVrU2ifxtpw" source="_SCJ27ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ2sCcoEeSLVrU2ifxtpw" target="_SCJ2_icoEeSLVrU2ifxtpw" source="_SCJ2_ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2sScoEeSLVrU2ifxtpw" target="_SCJ2_icoEeSLVrU2ifxtpw" source="_SCJ29ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ2sicoEeSLVrU2ifxtpw" target="_SCJ23CcoEeSLVrU2ifxtpw" source="_SCJ2_icoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCJ2sycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ2tCcoEeSLVrU2ifxtpw" name="Body" incoming="_SCJ2qycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ2tScoEeSLVrU2ifxtpw" name="ExpressionStatement@4d648833">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2ticoEeSLVrU2ifxtpw" target="_SCJ2wCcoEeSLVrU2ifxtpw" source="_SCJ2vCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2tycoEeSLVrU2ifxtpw" target="_SCJ2yScoEeSLVrU2ifxtpw" source="_SCJ2xicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2uCcoEeSLVrU2ifxtpw" target="_SCJ2zScoEeSLVrU2ifxtpw" source="_SCJ2wycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ2uScoEeSLVrU2ifxtpw" target="_SCJ2uicoEeSLVrU2ifxtpw" source="_SCJ21icoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ2uicoEeSLVrU2ifxtpw" name="Expression(LeftHandSide@329f3f7)" incoming="_SCJ2uScoEeSLVrU2ifxtpw">
                  <node xmi:type="uml:ReadSelfAction" xmi:id="_SCJ2uycoEeSLVrU2ifxtpw" name="ReadSelf">
                    <result xmi:id="_SCJ2vCcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SCJ2ticoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2vScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2vicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                  </node>
                </node>
                <node xmi:type="uml:ClearStructuralFeatureAction" xmi:id="_SCJ2vycoEeSLVrU2ifxtpw" name="Clear(name)" structuralFeature="_SCJ2mCcoEeSLVrU2ifxtpw">
                  <object xmi:id="_SCJ2wCcoEeSLVrU2ifxtpw" name="Clear(name).object" incoming="_SCJ2ticoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2wScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2wicoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SCJ2wycoEeSLVrU2ifxtpw" name="Clear(name).result" outgoing="_SCJ2uCcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2xCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2xScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:ForkNode" xmi:id="_SCJ2xicoEeSLVrU2ifxtpw" name="Fork(LeftHandSide@329f3f7)" incoming="_SCJ2oycoEeSLVrU2ifxtpw" outgoing="_SCJ2tycoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ2xycoEeSLVrU2ifxtpw" name="WriteAll(Customer::name)">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ2yCcoEeSLVrU2ifxtpw" target="_SCJ20ycoEeSLVrU2ifxtpw" source="_SCJ2yScoEeSLVrU2ifxtpw"/>
                  <structuredNodeInput xmi:id="_SCJ2yScoEeSLVrU2ifxtpw" name="WriteAll(Customer::name).input(Customer::name)" incoming="_SCJ2tycoEeSLVrU2ifxtpw" outgoing="_SCJ2yCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2yicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2yycoEeSLVrU2ifxtpw" value="1"/>
                  </structuredNodeInput>
                  <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SCJ2zCcoEeSLVrU2ifxtpw" name="Write(name)" structuralFeature="_SCJ2mCcoEeSLVrU2ifxtpw" isReplaceAll="true">
                    <object xmi:id="_SCJ2zScoEeSLVrU2ifxtpw" name="Write(name).object" incoming="_SCJ2uCcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2zicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2zycoEeSLVrU2ifxtpw" value="1"/>
                    </object>
                    <result xmi:id="_SCJ20CcoEeSLVrU2ifxtpw" name="Write(name).result" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ20ScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ20icoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:id="_SCJ20ycoEeSLVrU2ifxtpw" name="Write(name).value" incoming="_SCJ2yCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ21CcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ21ScoEeSLVrU2ifxtpw" value="1"/>
                    </value>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ21icoEeSLVrU2ifxtpw" name="RightHandSide@903aeff" outgoing="_SCJ2uScoEeSLVrU2ifxtpw"/>
              </node>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SCJ21ycoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SCJ22CcoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SCJ2qScoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ22ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ22icoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ22ycoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SCJ2qScoEeSLVrU2ifxtpw" outgoing="_SCJ2pCcoEeSLVrU2ifxtpw _SCJ2qicoEeSLVrU2ifxtpw _SCJ2rCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SCJ23CcoEeSLVrU2ifxtpw" name="Call(Customer$initialization$1)" incoming="_SCJ2sicoEeSLVrU2ifxtpw" outgoing="_SCJ2qycoEeSLVrU2ifxtpw" operation="_SCJ3QycoEeSLVrU2ifxtpw">
              <target xmi:id="_SCJ23ScoEeSLVrU2ifxtpw" name="Call(Customer$initialization$1).target" incoming="_SCJ2qicoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ23icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ23ycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SCJ24CcoEeSLVrU2ifxtpw" name="Read(Customer$initializationFlag$1)" structuralFeature="_SCJ2lScoEeSLVrU2ifxtpw">
              <object xmi:id="_SCJ24ScoEeSLVrU2ifxtpw" name="Read(Customer$initializationFlag$1).object" incoming="_SCJ2rCcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ24icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ24ycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SCJ25CcoEeSLVrU2ifxtpw" name="Read(Customer$initializationFlag$1).result" outgoing="_SCJ2rScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ25ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ25icoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ25ycoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SCJ26CcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SCJ2rScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ26ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ26icoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SCJ26ycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SCJ2ricoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ27CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ27ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ27icoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SCJ27ycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SCJ2rycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ28CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ28ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SCJ28icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SCJ28ycoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SCJ29CcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SCJ2ricoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ29ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ29icoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SCJ29ycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SCJ2sScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2-CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2-ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SCJ2-icoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SCJ2rycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ2-ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ2_CcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SCJ2_ScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SCJ2sCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SCJ2_icoEeSLVrU2ifxtpw" name="Decision(Test(Customer$initializationFlag$1))" incoming="_SCJ2sCcoEeSLVrU2ifxtpw _SCJ2sScoEeSLVrU2ifxtpw" outgoing="_SCJ2sicoEeSLVrU2ifxtpw" decisionInputFlow="_SCJ2sScoEeSLVrU2ifxtpw"/>
          </structuredNode>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ2pScoEeSLVrU2ifxtpw" name="Input(name)" outgoing="_SCJ2oicoEeSLVrU2ifxtpw" parameter="_SCJ2nCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SCJ2picoEeSLVrU2ifxtpw" name="Fork(name)" incoming="_SCJ2oicoEeSLVrU2ifxtpw" outgoing="_SCJ2oycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ2pycoEeSLVrU2ifxtpw" name="Return" incoming="_SCJ2pCcoEeSLVrU2ifxtpw" parameter="_SCJ2nycoEeSLVrU2ifxtpw"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SCJ2_ycoEeSLVrU2ifxtpw" name="destroy$method$1" specification="_SCJ3SycoEeSLVrU2ifxtpw" node="_SCJ3ACcoEeSLVrU2ifxtpw" group="_SCJ3ACcoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SCJ3ACcoEeSLVrU2ifxtpw" name="Body(destroy$method$1)"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_SCJ3AScoEeSLVrU2ifxtpw" name="Customer$initialization$1" specification="_SCJ3QycoEeSLVrU2ifxtpw" node="_SCJ3AicoEeSLVrU2ifxtpw" group="_SCJ3AicoEeSLVrU2ifxtpw">
          <structuredNode xmi:id="_SCJ3AicoEeSLVrU2ifxtpw" name="Body(Customer$initialization$1)">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3AycoEeSLVrU2ifxtpw" target="_SCJ3EScoEeSLVrU2ifxtpw" source="_SCJ3DicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3BCcoEeSLVrU2ifxtpw" target="_SCJ3GycoEeSLVrU2ifxtpw" source="_SCJ3EScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3BScoEeSLVrU2ifxtpw" target="_SCJ3JScoEeSLVrU2ifxtpw" source="_SCJ3EScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3BicoEeSLVrU2ifxtpw" target="_SCJ3LCcoEeSLVrU2ifxtpw" source="_SCJ3KCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3BycoEeSLVrU2ifxtpw" target="_SCJ3OCcoEeSLVrU2ifxtpw" source="_SCJ3LycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3CCcoEeSLVrU2ifxtpw" target="_SCJ3PicoEeSLVrU2ifxtpw" source="_SCJ3MycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ3CScoEeSLVrU2ifxtpw" target="_SCJ3QicoEeSLVrU2ifxtpw" source="_SCJ3QScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3CicoEeSLVrU2ifxtpw" target="_SCJ3QicoEeSLVrU2ifxtpw" source="_SCJ3OycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ3CycoEeSLVrU2ifxtpw" target="_SCJ3EicoEeSLVrU2ifxtpw" source="_SCJ3QicoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCJ3DCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_SCJ3DScoEeSLVrU2ifxtpw" name="ReadSelf">
              <result xmi:id="_SCJ3DicoEeSLVrU2ifxtpw" name="ReadSelf.result" outgoing="_SCJ3AycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3DycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3ECcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ3EScoEeSLVrU2ifxtpw" name="Fork(ReadSelf.result)" incoming="_SCJ3AycoEeSLVrU2ifxtpw" outgoing="_SCJ3BCcoEeSLVrU2ifxtpw _SCJ3BScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ3EicoEeSLVrU2ifxtpw" name="Initialization" incoming="_SCJ3CycoEeSLVrU2ifxtpw">
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ3EycoEeSLVrU2ifxtpw" name="Set(initializationFlag)">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3FCcoEeSLVrU2ifxtpw" target="_SCJ3IScoEeSLVrU2ifxtpw" source="_SCJ3FicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ3FScoEeSLVrU2ifxtpw" name="Value(true)">
                  <result xmi:id="_SCJ3FicoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SCJ3FCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3FycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3GCcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralBoolean" xmi:id="_SCJ3GScoEeSLVrU2ifxtpw" value="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </value>
                </node>
                <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="_SCJ3GicoEeSLVrU2ifxtpw" name="Write(Customer$initializationFlag$1)" structuralFeature="_SCJ2lScoEeSLVrU2ifxtpw" isReplaceAll="true">
                  <object xmi:id="_SCJ3GycoEeSLVrU2ifxtpw" name="Write(Customer$initializationFlag$1).object" incoming="_SCJ3BCcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3HCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3HScoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SCJ3HicoEeSLVrU2ifxtpw" name="Write(Customer$initializationFlag$1).result" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3HycoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3ICcoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:id="_SCJ3IScoEeSLVrU2ifxtpw" name="Write(Customer$initializationFlag$1).value" incoming="_SCJ3FCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3IicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3IycoEeSLVrU2ifxtpw" value="1"/>
                  </value>
                </node>
              </node>
            </node>
            <node xmi:type="uml:ReadStructuralFeatureAction" xmi:id="_SCJ3JCcoEeSLVrU2ifxtpw" name="Read(Customer$initializationFlag$1)" structuralFeature="_SCJ2lScoEeSLVrU2ifxtpw">
              <object xmi:id="_SCJ3JScoEeSLVrU2ifxtpw" name="Read(Customer$initializationFlag$1).object" incoming="_SCJ3BScoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3JicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3JycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SCJ3KCcoEeSLVrU2ifxtpw" name="Read(Customer$initializationFlag$1).result" outgoing="_SCJ3BicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3KScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3KicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ3KycoEeSLVrU2ifxtpw" name="Call(ListSize)">
              <argument xmi:id="_SCJ3LCcoEeSLVrU2ifxtpw" name="Call(ListSize).argument(list)" incoming="_SCJ3BicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3LScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3LicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SCJ3LycoEeSLVrU2ifxtpw" name="Call(ListSize).result(result)" outgoing="_SCJ3BycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3MCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3MScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-ListFunctions-ListSize"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCJ3MicoEeSLVrU2ifxtpw" name="Value(0)">
              <result xmi:id="_SCJ3MycoEeSLVrU2ifxtpw" name="Value(0).result" outgoing="_SCJ3CCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3NCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3NScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SCJ3NicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SCJ3NycoEeSLVrU2ifxtpw" name="Test(Size==0)">
              <first xmi:id="_SCJ3OCcoEeSLVrU2ifxtpw" name="Test(Size==0).first" incoming="_SCJ3BycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3OScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3OicoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SCJ3OycoEeSLVrU2ifxtpw" name="Test(Size==0).result" outgoing="_SCJ3CicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3PCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3PScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SCJ3PicoEeSLVrU2ifxtpw" name="Test(Size==0).second" incoming="_SCJ3CCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3PycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3QCcoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_SCJ3QScoEeSLVrU2ifxtpw" name="InitialNode" outgoing="_SCJ3CScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SCJ3QicoEeSLVrU2ifxtpw" name="Decision(Test(Customer$initializationFlag$1))" incoming="_SCJ3CScoEeSLVrU2ifxtpw _SCJ3CicoEeSLVrU2ifxtpw" outgoing="_SCJ3CycoEeSLVrU2ifxtpw" decisionInputFlow="_SCJ3CicoEeSLVrU2ifxtpw"/>
          </structuredNode>
        </ownedBehavior>
        <ownedOperation xmi:id="_SCJ3QycoEeSLVrU2ifxtpw" name="Customer$initialization$1" visibility="protected" method="_SCJ3AScoEeSLVrU2ifxtpw"/>
        <ownedOperation xmi:id="_SCJ3RCcoEeSLVrU2ifxtpw" name="Customer" visibility="package" method="_SCJ2mycoEeSLVrU2ifxtpw">
          <ownedParameter xmi:id="_SCJ3RScoEeSLVrU2ifxtpw" name="name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3RicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3RycoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="_SCJ3SCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3SScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3SicoEeSLVrU2ifxtpw" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_SCJ3SycoEeSLVrU2ifxtpw" name="destroy" visibility="package" method="_SCJ2_ycoEeSLVrU2ifxtpw"/>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCJ3TCcoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$notEmpty__Expressions_Sequence_Operation$Customer__" node="_SCJ3VycoEeSLVrU2ifxtpw _SCJ3WCcoEeSLVrU2ifxtpw _SCJ3WScoEeSLVrU2ifxtpw _SCJ3WicoEeSLVrU2ifxtpw _SCJ3WycoEeSLVrU2ifxtpw" group="_SCJ3WycoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCJ3TScoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3TicoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3TycoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCJ3UCcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3UScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3UicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3UycoEeSLVrU2ifxtpw" target="_SCJ3WCcoEeSLVrU2ifxtpw" source="_SCJ3VycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ3VCcoEeSLVrU2ifxtpw" target="_SCJ3WicoEeSLVrU2ifxtpw" source="_SCJ3XCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3VScoEeSLVrU2ifxtpw" target="_SCJ3YicoEeSLVrU2ifxtpw" source="_SCJ3WCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3VicoEeSLVrU2ifxtpw" target="_SCJ3WScoEeSLVrU2ifxtpw" source="_SCJ3XicoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCJ3WycoEeSLVrU2ifxtpw" name="Body(notEmpty)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ3XCcoEeSLVrU2ifxtpw" name="ReturnStatement@4a45c61d" outgoing="_SCJ3VCcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3XScoEeSLVrU2ifxtpw" target="_SCJ3XicoEeSLVrU2ifxtpw" source="_SCJ3ZScoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCJ3XicoEeSLVrU2ifxtpw" name="ReturnStatement@4a45c61d.output" incoming="_SCJ3XScoEeSLVrU2ifxtpw" outgoing="_SCJ3VicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3XycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3YCcoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ3YScoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_SCJ3YicoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SCJ3VScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3YycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3ZCcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SCJ3ZScoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SCJ3XScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3ZicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3ZycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ3VycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SCJ3UycoEeSLVrU2ifxtpw" parameter="_SCJ3TScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCJ3WCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SCJ3UycoEeSLVrU2ifxtpw" outgoing="_SCJ3VScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ3WScoEeSLVrU2ifxtpw" name="Return" incoming="_SCJ3VicoEeSLVrU2ifxtpw" parameter="_SCJ3UCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCJ3WicoEeSLVrU2ifxtpw" name="Final" incoming="_SCJ3VCcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCJ3aCcoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCJ3aScoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCJ3aicoEeSLVrU2ifxtpw" actual="_SCJ2lCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmsQvYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmsQvIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCJ3aycoEeSLVrU2ifxtpw" client="_SCJ3TCcoEeSLVrU2ifxtpw" supplier="_SCJ3aCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCJ3bCcoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$includes__Expressions_Sequence_Operation$Customer__" node="_SCJ3fCcoEeSLVrU2ifxtpw _SCJ3fScoEeSLVrU2ifxtpw _SCJ3ficoEeSLVrU2ifxtpw _SCJ3fycoEeSLVrU2ifxtpw _SCJ3gCcoEeSLVrU2ifxtpw _SCJ3gScoEeSLVrU2ifxtpw _SCJ3gicoEeSLVrU2ifxtpw" group="_SCJ3gicoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCJ3bScoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3bicoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3bycoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCJ3cCcoEeSLVrU2ifxtpw" name="element" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3cScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3cicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCJ3cycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3dCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3dScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3dicoEeSLVrU2ifxtpw" target="_SCJ3fScoEeSLVrU2ifxtpw" source="_SCJ3fCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3dycoEeSLVrU2ifxtpw" target="_SCJ3fycoEeSLVrU2ifxtpw" source="_SCJ3ficoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ3eCcoEeSLVrU2ifxtpw" target="_SCJ3gScoEeSLVrU2ifxtpw" source="_SCJ3gycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3eScoEeSLVrU2ifxtpw" target="_SCJ3iScoEeSLVrU2ifxtpw" source="_SCJ3fScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3eicoEeSLVrU2ifxtpw" target="_SCJ3jCcoEeSLVrU2ifxtpw" source="_SCJ3fycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3eycoEeSLVrU2ifxtpw" target="_SCJ3gCcoEeSLVrU2ifxtpw" source="_SCJ3hScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCJ3gicoEeSLVrU2ifxtpw" name="Body(includes)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ3gycoEeSLVrU2ifxtpw" name="ReturnStatement@6eec8b11" outgoing="_SCJ3eCcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3hCcoEeSLVrU2ifxtpw" target="_SCJ3hScoEeSLVrU2ifxtpw" source="_SCJ3jycoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCJ3hScoEeSLVrU2ifxtpw" name="ReturnStatement@6eec8b11.output" incoming="_SCJ3hCcoEeSLVrU2ifxtpw" outgoing="_SCJ3eycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3hicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3hycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ3iCcoEeSLVrU2ifxtpw" name="Call(Includes)">
            <argument xmi:id="_SCJ3iScoEeSLVrU2ifxtpw" name="Call(Includes).argument(seq)" incoming="_SCJ3eScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3iicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3iycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <argument xmi:id="_SCJ3jCcoEeSLVrU2ifxtpw" name="Call(Includes).argument(element)" incoming="_SCJ3eicoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3jScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3jicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SCJ3jycoEeSLVrU2ifxtpw" name="Call(Includes).result()" outgoing="_SCJ3hCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3kCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3kScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Includes"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ3fCcoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SCJ3dicoEeSLVrU2ifxtpw" parameter="_SCJ3bScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCJ3fScoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SCJ3dicoEeSLVrU2ifxtpw" outgoing="_SCJ3eScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ3ficoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SCJ3dycoEeSLVrU2ifxtpw" parameter="_SCJ3cCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCJ3fycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SCJ3dycoEeSLVrU2ifxtpw" outgoing="_SCJ3eicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ3gCcoEeSLVrU2ifxtpw" name="Return" incoming="_SCJ3eycoEeSLVrU2ifxtpw" parameter="_SCJ3cycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCJ3gScoEeSLVrU2ifxtpw" name="Final" incoming="_SCJ3eCcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCJ3kicoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCJ3kycoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCJ3lCcoEeSLVrU2ifxtpw" actual="_SCJ2lCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmrChoVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmrChYVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCJ3lScoEeSLVrU2ifxtpw" client="_SCJ3bCcoEeSLVrU2ifxtpw" supplier="_SCJ3kicoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCJ3licoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$including__Expressions_Sequence_Operation$Customer__" node="_SCJ3picoEeSLVrU2ifxtpw _SCJ3pycoEeSLVrU2ifxtpw _SCJ3qCcoEeSLVrU2ifxtpw _SCJ3qScoEeSLVrU2ifxtpw _SCJ3qicoEeSLVrU2ifxtpw _SCJ3qycoEeSLVrU2ifxtpw _SCJ3rCcoEeSLVrU2ifxtpw" group="_SCJ3rCcoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCJ3lycoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3mCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3mScoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCJ3micoEeSLVrU2ifxtpw" name="element" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3mycoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3nCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCJ3nScoEeSLVrU2ifxtpw" name="" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3nicoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3nycoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3oCcoEeSLVrU2ifxtpw" target="_SCJ3pycoEeSLVrU2ifxtpw" source="_SCJ3picoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3oScoEeSLVrU2ifxtpw" target="_SCJ3qScoEeSLVrU2ifxtpw" source="_SCJ3qCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ3oicoEeSLVrU2ifxtpw" target="_SCJ3qycoEeSLVrU2ifxtpw" source="_SCJ3rScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3oycoEeSLVrU2ifxtpw" target="_SCJ3tCcoEeSLVrU2ifxtpw" source="_SCJ3pycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3pCcoEeSLVrU2ifxtpw" target="_SCJ3tycoEeSLVrU2ifxtpw" source="_SCJ3qScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3pScoEeSLVrU2ifxtpw" target="_SCJ3qicoEeSLVrU2ifxtpw" source="_SCJ3sCcoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCJ3rCcoEeSLVrU2ifxtpw" name="Body(including)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ3rScoEeSLVrU2ifxtpw" name="ReturnStatement@33f6fa50" outgoing="_SCJ3oicoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3ricoEeSLVrU2ifxtpw" target="_SCJ3zycoEeSLVrU2ifxtpw" source="_SCJ3uicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3rycoEeSLVrU2ifxtpw" target="_SCJ3sCcoEeSLVrU2ifxtpw" source="_SCJ30CcoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCJ3sCcoEeSLVrU2ifxtpw" name="ReturnStatement@33f6fa50.output" incoming="_SCJ3rycoEeSLVrU2ifxtpw" outgoing="_SCJ3pScoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3sScoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3sicoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ3sycoEeSLVrU2ifxtpw" name="Call(Including)">
            <argument xmi:id="_SCJ3tCcoEeSLVrU2ifxtpw" name="Call(Including).argument(seq)" incoming="_SCJ3oycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3tScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3ticoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <argument xmi:id="_SCJ3tycoEeSLVrU2ifxtpw" name="Call(Including).argument(element)" incoming="_SCJ3pCcoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3uCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3uScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SCJ3uicoEeSLVrU2ifxtpw" name="Call(Including).result()" outgoing="_SCJ3ricoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3uycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3vCcoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
          </node>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_SCJ3vScoEeSLVrU2ifxtpw" name="CastExpression@1d69a562" mode="parallel" outputElement="_SCJ30CcoEeSLVrU2ifxtpw" inputElement="_SCJ3zycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3vicoEeSLVrU2ifxtpw" target="_SCJ3xycoEeSLVrU2ifxtpw" source="_SCJ3zScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3vycoEeSLVrU2ifxtpw" target="_SCJ3zicoEeSLVrU2ifxtpw" source="_SCJ3zScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3wCcoEeSLVrU2ifxtpw" target="_SCJ3zicoEeSLVrU2ifxtpw" source="_SCJ3yicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3wScoEeSLVrU2ifxtpw" target="_SCJ3xScoEeSLVrU2ifxtpw" source="_SCJ3zicoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCJ3wicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3wycoEeSLVrU2ifxtpw" target="_SCJ3zScoEeSLVrU2ifxtpw" source="_SCJ3zycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ3xCcoEeSLVrU2ifxtpw" target="_SCJ30CcoEeSLVrU2ifxtpw" source="_SCJ3xScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_SCJ3xScoEeSLVrU2ifxtpw" name="Merge(CastExpression@1d69a562.operand)" incoming="_SCJ3wScoEeSLVrU2ifxtpw" outgoing="_SCJ3xCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SCJ3xicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)" classifier="_SCJ2lCcoEeSLVrU2ifxtpw">
              <object xmi:id="_SCJ3xycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_SCJ3vicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3yCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3yScoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SCJ3yicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_SCJ3wCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3yycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3zCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ3zScoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_SCJ3wycoEeSLVrU2ifxtpw" outgoing="_SCJ3vicoEeSLVrU2ifxtpw _SCJ3vycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SCJ3zicoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_SCJ3vycoEeSLVrU2ifxtpw _SCJ3wCcoEeSLVrU2ifxtpw" outgoing="_SCJ3wScoEeSLVrU2ifxtpw" decisionInputFlow="_SCJ3wCcoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SCJ3zycoEeSLVrU2ifxtpw" name="CastExpression@1d69a562.inputElement" incoming="_SCJ3ricoEeSLVrU2ifxtpw" outgoing="_SCJ3wycoEeSLVrU2ifxtpw" regionAsInput="_SCJ3vScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SCJ30CcoEeSLVrU2ifxtpw" name="CastExpression@1d69a562.outputElement" incoming="_SCJ3xCcoEeSLVrU2ifxtpw" outgoing="_SCJ3rycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" regionAsOutput="_SCJ3vScoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ3picoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SCJ3oCcoEeSLVrU2ifxtpw" parameter="_SCJ3lycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCJ3pycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SCJ3oCcoEeSLVrU2ifxtpw" outgoing="_SCJ3oycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ3qCcoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SCJ3oScoEeSLVrU2ifxtpw" parameter="_SCJ3micoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCJ3qScoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SCJ3oScoEeSLVrU2ifxtpw" outgoing="_SCJ3pCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ3qicoEeSLVrU2ifxtpw" name="Return" incoming="_SCJ3pScoEeSLVrU2ifxtpw" parameter="_SCJ3nScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCJ3qycoEeSLVrU2ifxtpw" name="Final" incoming="_SCJ3oicoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCJ30ScoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCJ30icoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCJ30ycoEeSLVrU2ifxtpw" actual="_SCJ2lCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmxJSoVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmxJSYVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCJ31CcoEeSLVrU2ifxtpw" client="_SCJ3licoEeSLVrU2ifxtpw" supplier="_SCJ30ScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCJ31ScoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$add__Expressions_Sequence_Operation$Customer__" node="_SCJ35ycoEeSLVrU2ifxtpw _SCJ36CcoEeSLVrU2ifxtpw _SCJ36ScoEeSLVrU2ifxtpw _SCJ36icoEeSLVrU2ifxtpw _SCJ36ycoEeSLVrU2ifxtpw _SCJ37CcoEeSLVrU2ifxtpw _SCJ37ScoEeSLVrU2ifxtpw _SCJ37icoEeSLVrU2ifxtpw" group="_SCJ37icoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCJ31icoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="inout">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ31ycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ32CcoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCJ32ScoEeSLVrU2ifxtpw" name="element" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ32icoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ32ycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCJ33CcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ33ScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ33icoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ33ycoEeSLVrU2ifxtpw" target="_SCJ36CcoEeSLVrU2ifxtpw" source="_SCJ35ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ34CcoEeSLVrU2ifxtpw" target="_SCJ36ycoEeSLVrU2ifxtpw" source="_SCJ36icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ34ScoEeSLVrU2ifxtpw" target="_SCJ37ScoEeSLVrU2ifxtpw" source="_SCJ38ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ34icoEeSLVrU2ifxtpw" target="_SCJ4ACcoEeSLVrU2ifxtpw" source="_SCJ36CcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ34ycoEeSLVrU2ifxtpw" target="_SCJ4AycoEeSLVrU2ifxtpw" source="_SCJ36ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ35CcoEeSLVrU2ifxtpw" target="_SCJ37CcoEeSLVrU2ifxtpw" source="_SCJ39ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ35ScoEeSLVrU2ifxtpw" target="_SCJ36ScoEeSLVrU2ifxtpw" source="_SCJ3-icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ35icoEeSLVrU2ifxtpw" target="_SCJ36ScoEeSLVrU2ifxtpw" source="_SCJ38CcoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCJ37icoEeSLVrU2ifxtpw" name="Body(add)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ37ycoEeSLVrU2ifxtpw" target="_SCJ38CcoEeSLVrU2ifxtpw" source="_SCJ3_ScoEeSLVrU2ifxtpw"/>
        <structuredNodeOutput xmi:id="_SCJ38CcoEeSLVrU2ifxtpw" name="Output(seq)" incoming="_SCJ37ycoEeSLVrU2ifxtpw" outgoing="_SCJ35icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ38ScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ38icoEeSLVrU2ifxtpw" value="*"/>
        </structuredNodeOutput>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ38ycoEeSLVrU2ifxtpw" name="ReturnStatement@25f67136" outgoing="_SCJ34ScoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ39CcoEeSLVrU2ifxtpw" target="_SCJ3_ScoEeSLVrU2ifxtpw" source="_SCJ4BicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ39ScoEeSLVrU2ifxtpw" target="_SCJ39ycoEeSLVrU2ifxtpw" source="_SCJ3_ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ39icoEeSLVrU2ifxtpw" target="_SCJ3-icoEeSLVrU2ifxtpw" source="_SCJ3_ScoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCJ39ycoEeSLVrU2ifxtpw" name="ReturnStatement@25f67136.output" incoming="_SCJ39ScoEeSLVrU2ifxtpw" outgoing="_SCJ35CcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3-CcoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3-ScoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SCJ3-icoEeSLVrU2ifxtpw" name="ReturnStatement@25f67136.output" incoming="_SCJ39icoEeSLVrU2ifxtpw" outgoing="_SCJ35ScoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ3-ycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ3_CcoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:ForkNode" xmi:id="_SCJ3_ScoEeSLVrU2ifxtpw" name="Fork(seq)@7b737117" incoming="_SCJ39CcoEeSLVrU2ifxtpw" outgoing="_SCJ39ScoEeSLVrU2ifxtpw _SCJ39icoEeSLVrU2ifxtpw _SCJ37ycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ3_icoEeSLVrU2ifxtpw" name="RightHandSide@5805dc52">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ3_ycoEeSLVrU2ifxtpw" name="Call($$including__CollectionFunctions$add$T__)" behavior="_SCJ3licoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJ4ACcoEeSLVrU2ifxtpw" name="Call($$including__CollectionFunctions$add$T__).argument(seq)" incoming="_SCJ34icoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4AScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4AicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCJ4AycoEeSLVrU2ifxtpw" name="Call($$including__CollectionFunctions$add$T__).argument(element)" incoming="_SCJ34ycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4BCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4BScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCJ4BicoEeSLVrU2ifxtpw" name="Call($$including__CollectionFunctions$add$T__).result()" outgoing="_SCJ39CcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4BycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4CCcoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ35ycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SCJ33ycoEeSLVrU2ifxtpw" parameter="_SCJ31icoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCJ36CcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SCJ33ycoEeSLVrU2ifxtpw" outgoing="_SCJ34icoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ36ScoEeSLVrU2ifxtpw" name="Output(seq)" incoming="_SCJ35ScoEeSLVrU2ifxtpw _SCJ35icoEeSLVrU2ifxtpw" parameter="_SCJ31icoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ36icoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SCJ34CcoEeSLVrU2ifxtpw" parameter="_SCJ32ScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCJ36ycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SCJ34CcoEeSLVrU2ifxtpw" outgoing="_SCJ34ycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ37CcoEeSLVrU2ifxtpw" name="Return" incoming="_SCJ35CcoEeSLVrU2ifxtpw" parameter="_SCJ33CcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCJ37ScoEeSLVrU2ifxtpw" name="Final" incoming="_SCJ34ScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCJ4CScoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCJ4CicoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCJ4CycoEeSLVrU2ifxtpw" actual="_SCJ2lCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_Jm3P2IVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_Jm3P14VoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCJ4DCcoEeSLVrU2ifxtpw" client="_SCJ31ScoEeSLVrU2ifxtpw" supplier="_SCJ4CScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCJ4DScoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$removeAt__Expressions_Sequence_Operation$Customer__" node="_SCJ4HycoEeSLVrU2ifxtpw _SCJ4ICcoEeSLVrU2ifxtpw _SCJ4IScoEeSLVrU2ifxtpw _SCJ4IicoEeSLVrU2ifxtpw _SCJ4IycoEeSLVrU2ifxtpw _SCJ4JCcoEeSLVrU2ifxtpw _SCJ4JScoEeSLVrU2ifxtpw _SCJ4JicoEeSLVrU2ifxtpw" group="_SCJ4JicoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCJ4DicoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="inout">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4DycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4ECcoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCJ4EScoEeSLVrU2ifxtpw" name="index" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4EicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4EycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCJ4FCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4FScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4FicoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4FycoEeSLVrU2ifxtpw" target="_SCJ4ICcoEeSLVrU2ifxtpw" source="_SCJ4HycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4GCcoEeSLVrU2ifxtpw" target="_SCJ4IycoEeSLVrU2ifxtpw" source="_SCJ4IicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ4GScoEeSLVrU2ifxtpw" target="_SCJ4JScoEeSLVrU2ifxtpw" source="_SCJ4KycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4GicoEeSLVrU2ifxtpw" target="_SCJ4OCcoEeSLVrU2ifxtpw" source="_SCJ4ICcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4GycoEeSLVrU2ifxtpw" target="_SCJ4OycoEeSLVrU2ifxtpw" source="_SCJ4IycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4HCcoEeSLVrU2ifxtpw" target="_SCJ4JCcoEeSLVrU2ifxtpw" source="_SCJ4LycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4HScoEeSLVrU2ifxtpw" target="_SCJ4IScoEeSLVrU2ifxtpw" source="_SCJ4MicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4HicoEeSLVrU2ifxtpw" target="_SCJ4IScoEeSLVrU2ifxtpw" source="_SCJ4KCcoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCJ4JicoEeSLVrU2ifxtpw" name="Body(removeAt)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4JycoEeSLVrU2ifxtpw" target="_SCJ4KCcoEeSLVrU2ifxtpw" source="_SCJ4NScoEeSLVrU2ifxtpw"/>
        <structuredNodeOutput xmi:id="_SCJ4KCcoEeSLVrU2ifxtpw" name="Output(seq)" incoming="_SCJ4JycoEeSLVrU2ifxtpw" outgoing="_SCJ4HicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4KScoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4KicoEeSLVrU2ifxtpw" value="*"/>
        </structuredNodeOutput>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ4KycoEeSLVrU2ifxtpw" name="ReturnStatement@5f7c6631" outgoing="_SCJ4GScoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4LCcoEeSLVrU2ifxtpw" target="_SCJ4NScoEeSLVrU2ifxtpw" source="_SCJ4PicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4LScoEeSLVrU2ifxtpw" target="_SCJ4LycoEeSLVrU2ifxtpw" source="_SCJ4NScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4LicoEeSLVrU2ifxtpw" target="_SCJ4MicoEeSLVrU2ifxtpw" source="_SCJ4NScoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCJ4LycoEeSLVrU2ifxtpw" name="ReturnStatement@5f7c6631.output" incoming="_SCJ4LScoEeSLVrU2ifxtpw" outgoing="_SCJ4HCcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4MCcoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4MScoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SCJ4MicoEeSLVrU2ifxtpw" name="ReturnStatement@5f7c6631.output" incoming="_SCJ4LicoEeSLVrU2ifxtpw" outgoing="_SCJ4HScoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4MycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4NCcoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:ForkNode" xmi:id="_SCJ4NScoEeSLVrU2ifxtpw" name="Fork(seq)@2f963c7b" incoming="_SCJ4LCcoEeSLVrU2ifxtpw" outgoing="_SCJ4LScoEeSLVrU2ifxtpw _SCJ4LicoEeSLVrU2ifxtpw _SCJ4JycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ4NicoEeSLVrU2ifxtpw" name="RightHandSide@305cc7a5">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ4NycoEeSLVrU2ifxtpw" name="Call($$excludeAt__CollectionFunctions$removeAt$T__)" behavior="_SCJ4QScoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCJ4OCcoEeSLVrU2ifxtpw" name="Call($$excludeAt__CollectionFunctions$removeAt$T__).argument(seq)" incoming="_SCJ4GicoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4OScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4OicoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCJ4OycoEeSLVrU2ifxtpw" name="Call($$excludeAt__CollectionFunctions$removeAt$T__).argument(index)" incoming="_SCJ4GycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4PCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4PScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCJ4PicoEeSLVrU2ifxtpw" name="Call($$excludeAt__CollectionFunctions$removeAt$T__).result()" outgoing="_SCJ4LCcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4PycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4QCcoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ4HycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SCJ4FycoEeSLVrU2ifxtpw" parameter="_SCJ4DicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCJ4ICcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SCJ4FycoEeSLVrU2ifxtpw" outgoing="_SCJ4GicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ4IScoEeSLVrU2ifxtpw" name="Output(seq)" incoming="_SCJ4HScoEeSLVrU2ifxtpw _SCJ4HicoEeSLVrU2ifxtpw" parameter="_SCJ4DicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ4IicoEeSLVrU2ifxtpw" name="Input(index)" outgoing="_SCJ4GCcoEeSLVrU2ifxtpw" parameter="_SCJ4EScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCJ4IycoEeSLVrU2ifxtpw" name="Fork(index)" incoming="_SCJ4GCcoEeSLVrU2ifxtpw" outgoing="_SCJ4GycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ4JCcoEeSLVrU2ifxtpw" name="Return" incoming="_SCJ4HCcoEeSLVrU2ifxtpw" parameter="_SCJ4FCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCJ4JScoEeSLVrU2ifxtpw" name="Final" incoming="_SCJ4GScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCJ4QScoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$excludeAt__Expressions_Sequence_Operation$Customer__" node="_SCJ4UScoEeSLVrU2ifxtpw _SCJ4UicoEeSLVrU2ifxtpw _SCJ4UycoEeSLVrU2ifxtpw _SCJ4VCcoEeSLVrU2ifxtpw _SCJ4VScoEeSLVrU2ifxtpw _SCJ4VicoEeSLVrU2ifxtpw _SCJ4VycoEeSLVrU2ifxtpw" group="_SCJ4VycoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCJ4QicoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4QycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4RCcoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCJ4RScoEeSLVrU2ifxtpw" name="index" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4RicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4RycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCJ4SCcoEeSLVrU2ifxtpw" name="" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4SScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4SicoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4SycoEeSLVrU2ifxtpw" target="_SCJ4UicoEeSLVrU2ifxtpw" source="_SCJ4UScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4TCcoEeSLVrU2ifxtpw" target="_SCJ4VCcoEeSLVrU2ifxtpw" source="_SCJ4UycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ4TScoEeSLVrU2ifxtpw" target="_SCJ4VicoEeSLVrU2ifxtpw" source="_SCJ4WCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4TicoEeSLVrU2ifxtpw" target="_SCJ4XycoEeSLVrU2ifxtpw" source="_SCJ4UicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4TycoEeSLVrU2ifxtpw" target="_SCJ4YicoEeSLVrU2ifxtpw" source="_SCJ4VCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4UCcoEeSLVrU2ifxtpw" target="_SCJ4VScoEeSLVrU2ifxtpw" source="_SCJ4WycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCJ4VycoEeSLVrU2ifxtpw" name="Body(excludeAt)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCJ4WCcoEeSLVrU2ifxtpw" name="ReturnStatement@602fe64a" outgoing="_SCJ4TScoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4WScoEeSLVrU2ifxtpw" target="_SCJ4eicoEeSLVrU2ifxtpw" source="_SCJ4ZScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4WicoEeSLVrU2ifxtpw" target="_SCJ4WycoEeSLVrU2ifxtpw" source="_SCJ4eycoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCJ4WycoEeSLVrU2ifxtpw" name="ReturnStatement@602fe64a.output" incoming="_SCJ4WicoEeSLVrU2ifxtpw" outgoing="_SCJ4UCcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4XCcoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4XScoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCJ4XicoEeSLVrU2ifxtpw" name="Call(ExcludeAt)">
            <argument xmi:id="_SCJ4XycoEeSLVrU2ifxtpw" name="Call(ExcludeAt).argument(seq)" incoming="_SCJ4TicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4YCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4YScoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <argument xmi:id="_SCJ4YicoEeSLVrU2ifxtpw" name="Call(ExcludeAt).argument(index)" incoming="_SCJ4TycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4YycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4ZCcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SCJ4ZScoEeSLVrU2ifxtpw" name="Call(ExcludeAt).result()" outgoing="_SCJ4WScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4ZicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4ZycoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-ExcludeAt"/>
          </node>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_SCJ4aCcoEeSLVrU2ifxtpw" name="CastExpression@7baedd0d" mode="parallel" outputElement="_SCJ4eycoEeSLVrU2ifxtpw" inputElement="_SCJ4eicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4aScoEeSLVrU2ifxtpw" target="_SCJ4cicoEeSLVrU2ifxtpw" source="_SCJ4eCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4aicoEeSLVrU2ifxtpw" target="_SCJ4eScoEeSLVrU2ifxtpw" source="_SCJ4eCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4aycoEeSLVrU2ifxtpw" target="_SCJ4eScoEeSLVrU2ifxtpw" source="_SCJ4dScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4bCcoEeSLVrU2ifxtpw" target="_SCJ4cCcoEeSLVrU2ifxtpw" source="_SCJ4eScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCJ4bScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4bicoEeSLVrU2ifxtpw" target="_SCJ4eCcoEeSLVrU2ifxtpw" source="_SCJ4eicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4bycoEeSLVrU2ifxtpw" target="_SCJ4eycoEeSLVrU2ifxtpw" source="_SCJ4cCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_SCJ4cCcoEeSLVrU2ifxtpw" name="Merge(CastExpression@7baedd0d.operand)" incoming="_SCJ4bCcoEeSLVrU2ifxtpw" outgoing="_SCJ4bycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SCJ4cScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)" classifier="_SCJ2lCcoEeSLVrU2ifxtpw">
              <object xmi:id="_SCJ4cicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_SCJ4aScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4cycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4dCcoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SCJ4dScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_SCJ4aycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4dicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4dycoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCJ4eCcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_SCJ4bicoEeSLVrU2ifxtpw" outgoing="_SCJ4aScoEeSLVrU2ifxtpw _SCJ4aicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SCJ4eScoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_SCJ4aicoEeSLVrU2ifxtpw _SCJ4aycoEeSLVrU2ifxtpw" outgoing="_SCJ4bCcoEeSLVrU2ifxtpw" decisionInputFlow="_SCJ4aycoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SCJ4eicoEeSLVrU2ifxtpw" name="CastExpression@7baedd0d.inputElement" incoming="_SCJ4WScoEeSLVrU2ifxtpw" outgoing="_SCJ4bicoEeSLVrU2ifxtpw" regionAsInput="_SCJ4aCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SCJ4eycoEeSLVrU2ifxtpw" name="CastExpression@7baedd0d.outputElement" incoming="_SCJ4bycoEeSLVrU2ifxtpw" outgoing="_SCJ4WicoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" regionAsOutput="_SCJ4aCcoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ4UScoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SCJ4SycoEeSLVrU2ifxtpw" parameter="_SCJ4QicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCJ4UicoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SCJ4SycoEeSLVrU2ifxtpw" outgoing="_SCJ4TicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ4UycoEeSLVrU2ifxtpw" name="Input(index)" outgoing="_SCJ4TCcoEeSLVrU2ifxtpw" parameter="_SCJ4RScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCJ4VCcoEeSLVrU2ifxtpw" name="Fork(index)" incoming="_SCJ4TCcoEeSLVrU2ifxtpw" outgoing="_SCJ4TycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ4VScoEeSLVrU2ifxtpw" name="Return" incoming="_SCJ4UCcoEeSLVrU2ifxtpw" parameter="_SCJ4SCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCJ4VicoEeSLVrU2ifxtpw" name="Final" incoming="_SCJ4TScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCJ4fCcoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCJ4fScoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCJ4ficoEeSLVrU2ifxtpw" actual="_SCJ2lCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_Jm0MsYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_Jm0MsIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCJ4fycoEeSLVrU2ifxtpw" client="_SCJ4QScoEeSLVrU2ifxtpw" supplier="_SCJ4fCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCJ4gCcoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCJ4gScoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCJ4gicoEeSLVrU2ifxtpw" actual="_SCJ2lCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_Jm5sWIVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_Jm5sV4VoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCJ4gycoEeSLVrU2ifxtpw" client="_SCJ4DScoEeSLVrU2ifxtpw" supplier="_SCJ4gCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCJ4hCcoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$remove__Expressions_Sequence_Operation$Customer__" node="_SCJ4licoEeSLVrU2ifxtpw _SCJ4lycoEeSLVrU2ifxtpw _SCJ4mCcoEeSLVrU2ifxtpw _SCJ4mScoEeSLVrU2ifxtpw _SCJ4micoEeSLVrU2ifxtpw _SCJ4mycoEeSLVrU2ifxtpw _SCKawCcoEeSLVrU2ifxtpw _SCKawScoEeSLVrU2ifxtpw" group="_SCKawScoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCJ4hScoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="inout">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4hicoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4hycoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCJ4iCcoEeSLVrU2ifxtpw" name="element" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4iScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4iicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCJ4iycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCJ4jCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCJ4jScoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4jicoEeSLVrU2ifxtpw" target="_SCJ4lycoEeSLVrU2ifxtpw" source="_SCJ4licoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4jycoEeSLVrU2ifxtpw" target="_SCJ4micoEeSLVrU2ifxtpw" source="_SCJ4mScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCJ4kCcoEeSLVrU2ifxtpw" target="_SCKawCcoEeSLVrU2ifxtpw" source="_SCKaxicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4kScoEeSLVrU2ifxtpw" target="_SCKa0ycoEeSLVrU2ifxtpw" source="_SCJ4lycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4kicoEeSLVrU2ifxtpw" target="_SCKa1icoEeSLVrU2ifxtpw" source="_SCJ4micoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4kycoEeSLVrU2ifxtpw" target="_SCJ4mycoEeSLVrU2ifxtpw" source="_SCKayicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4lCcoEeSLVrU2ifxtpw" target="_SCJ4mCcoEeSLVrU2ifxtpw" source="_SCKazScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCJ4lScoEeSLVrU2ifxtpw" target="_SCJ4mCcoEeSLVrU2ifxtpw" source="_SCKawycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCKawScoEeSLVrU2ifxtpw" name="Body(remove)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKawicoEeSLVrU2ifxtpw" target="_SCKawycoEeSLVrU2ifxtpw" source="_SCKa0CcoEeSLVrU2ifxtpw"/>
        <structuredNodeOutput xmi:id="_SCKawycoEeSLVrU2ifxtpw" name="Output(seq)" incoming="_SCKawicoEeSLVrU2ifxtpw" outgoing="_SCJ4lScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKaxCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKaxScoEeSLVrU2ifxtpw" value="*"/>
        </structuredNodeOutput>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKaxicoEeSLVrU2ifxtpw" name="ReturnStatement@3d416a20" outgoing="_SCJ4kCcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKaxycoEeSLVrU2ifxtpw" target="_SCKa0CcoEeSLVrU2ifxtpw" source="_SCKa2ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKayCcoEeSLVrU2ifxtpw" target="_SCKayicoEeSLVrU2ifxtpw" source="_SCKa0CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKayScoEeSLVrU2ifxtpw" target="_SCKazScoEeSLVrU2ifxtpw" source="_SCKa0CcoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCKayicoEeSLVrU2ifxtpw" name="ReturnStatement@3d416a20.output" incoming="_SCKayCcoEeSLVrU2ifxtpw" outgoing="_SCJ4kycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKayycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKazCcoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SCKazScoEeSLVrU2ifxtpw" name="ReturnStatement@3d416a20.output" incoming="_SCKayScoEeSLVrU2ifxtpw" outgoing="_SCJ4lCcoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKazicoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKazycoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:ForkNode" xmi:id="_SCKa0CcoEeSLVrU2ifxtpw" name="Fork(seq)@72e8eb96" incoming="_SCKaxycoEeSLVrU2ifxtpw" outgoing="_SCKayCcoEeSLVrU2ifxtpw _SCKayScoEeSLVrU2ifxtpw _SCKawicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKa0ScoEeSLVrU2ifxtpw" name="RightHandSide@19c2ffca">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKa0icoEeSLVrU2ifxtpw" name="Call($$excluding__CollectionFunctions$remove$T__)" behavior="_SCKa3CcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCKa0ycoEeSLVrU2ifxtpw" name="Call($$excluding__CollectionFunctions$remove$T__).argument(seq)" incoming="_SCJ4kScoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKa1CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKa1ScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCKa1icoEeSLVrU2ifxtpw" name="Call($$excluding__CollectionFunctions$remove$T__).argument(element)" incoming="_SCJ4kicoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKa1ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKa2CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKa2ScoEeSLVrU2ifxtpw" name="Call($$excluding__CollectionFunctions$remove$T__).result()" outgoing="_SCKaxycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKa2icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKa2ycoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ4licoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SCJ4jicoEeSLVrU2ifxtpw" parameter="_SCJ4hScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCJ4lycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SCJ4jicoEeSLVrU2ifxtpw" outgoing="_SCJ4kScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ4mCcoEeSLVrU2ifxtpw" name="Output(seq)" incoming="_SCJ4lCcoEeSLVrU2ifxtpw _SCJ4lScoEeSLVrU2ifxtpw" parameter="_SCJ4hScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ4mScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SCJ4jycoEeSLVrU2ifxtpw" parameter="_SCJ4iCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCJ4micoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SCJ4jycoEeSLVrU2ifxtpw" outgoing="_SCJ4kicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCJ4mycoEeSLVrU2ifxtpw" name="Return" incoming="_SCJ4kycoEeSLVrU2ifxtpw" parameter="_SCJ4iycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCKawCcoEeSLVrU2ifxtpw" name="Final" incoming="_SCJ4kCcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKa3CcoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$excluding__Expressions_Sequence_Operation$Customer__" node="_SCKa7CcoEeSLVrU2ifxtpw _SCKa7ScoEeSLVrU2ifxtpw _SCKa7icoEeSLVrU2ifxtpw _SCKa7ycoEeSLVrU2ifxtpw _SCKa8CcoEeSLVrU2ifxtpw _SCKa8ScoEeSLVrU2ifxtpw _SCKa8icoEeSLVrU2ifxtpw" group="_SCKa8icoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCKa3ScoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKa3icoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKa3ycoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKa4CcoEeSLVrU2ifxtpw" name="element" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKa4ScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKa4icoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKa4ycoEeSLVrU2ifxtpw" name="" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false" direction="return">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKa5CcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKa5ScoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKa5icoEeSLVrU2ifxtpw" target="_SCKa7ScoEeSLVrU2ifxtpw" source="_SCKa7CcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKa5ycoEeSLVrU2ifxtpw" target="_SCKa7ycoEeSLVrU2ifxtpw" source="_SCKa7icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCKa6CcoEeSLVrU2ifxtpw" target="_SCKa8ScoEeSLVrU2ifxtpw" source="_SCKa8ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKa6ScoEeSLVrU2ifxtpw" target="_SCKa-icoEeSLVrU2ifxtpw" source="_SCKa7ScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKa6icoEeSLVrU2ifxtpw" target="_SCKa_ScoEeSLVrU2ifxtpw" source="_SCKa7ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKa6ycoEeSLVrU2ifxtpw" target="_SCKa8CcoEeSLVrU2ifxtpw" source="_SCKa9icoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCKa8icoEeSLVrU2ifxtpw" name="Body(excluding)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKa8ycoEeSLVrU2ifxtpw" name="ReturnStatement@22ae3010" outgoing="_SCKa6CcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKa9CcoEeSLVrU2ifxtpw" target="_SCKbFScoEeSLVrU2ifxtpw" source="_SCKbACcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKa9ScoEeSLVrU2ifxtpw" target="_SCKa9icoEeSLVrU2ifxtpw" source="_SCKbFicoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCKa9icoEeSLVrU2ifxtpw" name="ReturnStatement@22ae3010.output" incoming="_SCKa9ScoEeSLVrU2ifxtpw" outgoing="_SCKa6ycoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKa9ycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKa-CcoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKa-ScoEeSLVrU2ifxtpw" name="Call(Excluding)">
            <argument xmi:id="_SCKa-icoEeSLVrU2ifxtpw" name="Call(Excluding).argument(seq)" incoming="_SCKa6ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKa-ycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKa_CcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <argument xmi:id="_SCKa_ScoEeSLVrU2ifxtpw" name="Call(Excluding).argument(element)" incoming="_SCKa6icoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKa_icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKa_ycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SCKbACcoEeSLVrU2ifxtpw" name="Call(Excluding).result()" outgoing="_SCKa9CcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbAScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbAicoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Excluding"/>
          </node>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_SCKbAycoEeSLVrU2ifxtpw" name="CastExpression@50dd2f2f" mode="parallel" outputElement="_SCKbFicoEeSLVrU2ifxtpw" inputElement="_SCKbFScoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbBCcoEeSLVrU2ifxtpw" target="_SCKbDScoEeSLVrU2ifxtpw" source="_SCKbEycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbBScoEeSLVrU2ifxtpw" target="_SCKbFCcoEeSLVrU2ifxtpw" source="_SCKbEycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbBicoEeSLVrU2ifxtpw" target="_SCKbFCcoEeSLVrU2ifxtpw" source="_SCKbECcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbBycoEeSLVrU2ifxtpw" target="_SCKbCycoEeSLVrU2ifxtpw" source="_SCKbFCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKbCCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbCScoEeSLVrU2ifxtpw" target="_SCKbEycoEeSLVrU2ifxtpw" source="_SCKbFScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbCicoEeSLVrU2ifxtpw" target="_SCKbFicoEeSLVrU2ifxtpw" source="_SCKbCycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_SCKbCycoEeSLVrU2ifxtpw" name="Merge(CastExpression@50dd2f2f.operand)" incoming="_SCKbBycoEeSLVrU2ifxtpw" outgoing="_SCKbCicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SCKbDCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)" classifier="_SCJ2lCcoEeSLVrU2ifxtpw">
              <object xmi:id="_SCKbDScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_SCKbBCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbDicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbDycoEeSLVrU2ifxtpw" value="1"/>
              </object>
              <result xmi:id="_SCKbECcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_SCKbBicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbEScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbEicoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCKbEycoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_SCKbCScoEeSLVrU2ifxtpw" outgoing="_SCKbBCcoEeSLVrU2ifxtpw _SCKbBScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SCKbFCcoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_SCKbBScoEeSLVrU2ifxtpw _SCKbBicoEeSLVrU2ifxtpw" outgoing="_SCKbBycoEeSLVrU2ifxtpw" decisionInputFlow="_SCKbBicoEeSLVrU2ifxtpw"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SCKbFScoEeSLVrU2ifxtpw" name="CastExpression@50dd2f2f.inputElement" incoming="_SCKa9CcoEeSLVrU2ifxtpw" outgoing="_SCKbCScoEeSLVrU2ifxtpw" regionAsInput="_SCKbAycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SCKbFicoEeSLVrU2ifxtpw" name="CastExpression@50dd2f2f.outputElement" incoming="_SCKbCicoEeSLVrU2ifxtpw" outgoing="_SCKa9ScoEeSLVrU2ifxtpw" type="_SCJ2lCcoEeSLVrU2ifxtpw" regionAsOutput="_SCKbAycoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKa7CcoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SCKa5icoEeSLVrU2ifxtpw" parameter="_SCKa3ScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKa7ScoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SCKa5icoEeSLVrU2ifxtpw" outgoing="_SCKa6ScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKa7icoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SCKa5ycoEeSLVrU2ifxtpw" parameter="_SCKa4CcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKa7ycoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SCKa5ycoEeSLVrU2ifxtpw" outgoing="_SCKa6icoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKa8CcoEeSLVrU2ifxtpw" name="Return" incoming="_SCKa6ycoEeSLVrU2ifxtpw" parameter="_SCKa4ycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCKa8ScoEeSLVrU2ifxtpw" name="Final" incoming="_SCKa6CcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKbFycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCKbGCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCKbGScoEeSLVrU2ifxtpw" actual="_SCJ2lCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmzlgIVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_Jmzlf4VoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCKbGicoEeSLVrU2ifxtpw" client="_SCKa3CcoEeSLVrU2ifxtpw" supplier="_SCKbFycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKbGycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCKbHCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCKbHScoEeSLVrU2ifxtpw" actual="_SCJ2lCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_Jm5E84VoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_Jm5E8oVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCKbHicoEeSLVrU2ifxtpw" client="_SCJ4hCcoEeSLVrU2ifxtpw" supplier="_SCKbGycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKbHycoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$size__Expressions_Sequence_Operation$Customer__" node="_SCKbKicoEeSLVrU2ifxtpw _SCKbKycoEeSLVrU2ifxtpw _SCKbLCcoEeSLVrU2ifxtpw _SCKbLScoEeSLVrU2ifxtpw _SCKbLicoEeSLVrU2ifxtpw" group="_SCKbLicoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCKbICcoEeSLVrU2ifxtpw" name="seq" visibility="package" type="_SCJ2lCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbIScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbIicoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKbIycoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbJCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbJScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbJicoEeSLVrU2ifxtpw" target="_SCKbKycoEeSLVrU2ifxtpw" source="_SCKbKicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCKbJycoEeSLVrU2ifxtpw" target="_SCKbLScoEeSLVrU2ifxtpw" source="_SCKbLycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbKCcoEeSLVrU2ifxtpw" target="_SCKbNScoEeSLVrU2ifxtpw" source="_SCKbKycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbKScoEeSLVrU2ifxtpw" target="_SCKbLCcoEeSLVrU2ifxtpw" source="_SCKbMScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCKbLicoEeSLVrU2ifxtpw" name="Body(size)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKbLycoEeSLVrU2ifxtpw" name="ReturnStatement@22536490" outgoing="_SCKbJycoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbMCcoEeSLVrU2ifxtpw" target="_SCKbMScoEeSLVrU2ifxtpw" source="_SCKbOCcoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCKbMScoEeSLVrU2ifxtpw" name="ReturnStatement@22536490.output" incoming="_SCKbMCcoEeSLVrU2ifxtpw" outgoing="_SCKbKScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbMicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbMycoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKbNCcoEeSLVrU2ifxtpw" name="Call(Size)">
            <argument xmi:id="_SCKbNScoEeSLVrU2ifxtpw" name="Call(Size).argument(seq)" incoming="_SCKbKCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbNicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbNycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SCKbOCcoEeSLVrU2ifxtpw" name="Call(Size).result()" outgoing="_SCKbMCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbOScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbOicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKbKicoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SCKbJicoEeSLVrU2ifxtpw" parameter="_SCKbICcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKbKycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SCKbJicoEeSLVrU2ifxtpw" outgoing="_SCKbKCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKbLCcoEeSLVrU2ifxtpw" name="Return" incoming="_SCKbKScoEeSLVrU2ifxtpw" parameter="_SCKbIycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCKbLScoEeSLVrU2ifxtpw" name="Final" incoming="_SCKbJycoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKbOycoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCKbPCcoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCKbPScoEeSLVrU2ifxtpw" actual="_SCJ2lCcoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmqbdYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmqbdIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCKbPicoEeSLVrU2ifxtpw" client="_SCKbHycoEeSLVrU2ifxtpw" supplier="_SCKbOycoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKbPycoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$including__any__" node="_SCKbTycoEeSLVrU2ifxtpw _SCKbUCcoEeSLVrU2ifxtpw _SCKbUScoEeSLVrU2ifxtpw _SCKbUicoEeSLVrU2ifxtpw _SCKbUycoEeSLVrU2ifxtpw _SCKbVCcoEeSLVrU2ifxtpw _SCKbVScoEeSLVrU2ifxtpw" group="_SCKbVScoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCKbQCcoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbQScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbQicoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKbQycoEeSLVrU2ifxtpw" name="element" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbRCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbRScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKbRicoEeSLVrU2ifxtpw" name="" visibility="package" isOrdered="true" isUnique="false" direction="return">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbRycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbSCcoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbSScoEeSLVrU2ifxtpw" target="_SCKbUCcoEeSLVrU2ifxtpw" source="_SCKbTycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbSicoEeSLVrU2ifxtpw" target="_SCKbUicoEeSLVrU2ifxtpw" source="_SCKbUScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCKbSycoEeSLVrU2ifxtpw" target="_SCKbVCcoEeSLVrU2ifxtpw" source="_SCKbVicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbTCcoEeSLVrU2ifxtpw" target="_SCKbXScoEeSLVrU2ifxtpw" source="_SCKbUCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbTScoEeSLVrU2ifxtpw" target="_SCKbYCcoEeSLVrU2ifxtpw" source="_SCKbUicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbTicoEeSLVrU2ifxtpw" target="_SCKbUycoEeSLVrU2ifxtpw" source="_SCKbWScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCKbVScoEeSLVrU2ifxtpw" name="Body(including)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKbVicoEeSLVrU2ifxtpw" name="ReturnStatement@33f6fa50" outgoing="_SCKbSycoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbVycoEeSLVrU2ifxtpw" target="_SCKbeicoEeSLVrU2ifxtpw" source="_SCKbYycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbWCcoEeSLVrU2ifxtpw" target="_SCKbWScoEeSLVrU2ifxtpw" source="_SCKbeycoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCKbWScoEeSLVrU2ifxtpw" name="ReturnStatement@33f6fa50.output" incoming="_SCKbWCcoEeSLVrU2ifxtpw" outgoing="_SCKbTicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbWicoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbWycoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKbXCcoEeSLVrU2ifxtpw" name="Call(Including)">
            <argument xmi:id="_SCKbXScoEeSLVrU2ifxtpw" name="Call(Including).argument(seq)" incoming="_SCKbTCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbXicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbXycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <argument xmi:id="_SCKbYCcoEeSLVrU2ifxtpw" name="Call(Including).argument(element)" incoming="_SCKbTScoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbYScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbYicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SCKbYycoEeSLVrU2ifxtpw" name="Call(Including).result()" outgoing="_SCKbVycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbZCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbZScoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Including"/>
          </node>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_SCKbZicoEeSLVrU2ifxtpw" name="CastExpression@1d69a562" mode="parallel" outputElement="_SCKbeycoEeSLVrU2ifxtpw" inputElement="_SCKbeicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbZycoEeSLVrU2ifxtpw" target="_SCKbcicoEeSLVrU2ifxtpw" source="_SCKbbycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbaCcoEeSLVrU2ifxtpw" target="_SCKbcCcoEeSLVrU2ifxtpw" source="_SCKbbycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbaScoEeSLVrU2ifxtpw" target="_SCKbcCcoEeSLVrU2ifxtpw" source="_SCKbdicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbaicoEeSLVrU2ifxtpw" target="_SCKbbicoEeSLVrU2ifxtpw" source="_SCKbcCcoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKbaycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbbCcoEeSLVrU2ifxtpw" target="_SCKbbycoEeSLVrU2ifxtpw" source="_SCKbeicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbbScoEeSLVrU2ifxtpw" target="_SCKbeycoEeSLVrU2ifxtpw" source="_SCKbbicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_SCKbbicoEeSLVrU2ifxtpw" name="Merge(CastExpression@1d69a562.operand)" incoming="_SCKbaicoEeSLVrU2ifxtpw" outgoing="_SCKbbScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCKbbycoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_SCKbbCcoEeSLVrU2ifxtpw" outgoing="_SCKbZycoEeSLVrU2ifxtpw _SCKbaCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SCKbcCcoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_SCKbaCcoEeSLVrU2ifxtpw _SCKbaScoEeSLVrU2ifxtpw" outgoing="_SCKbaicoEeSLVrU2ifxtpw" decisionInputFlow="_SCKbaScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKbcScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)">
              <structuredNodeInput xmi:id="_SCKbcicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_SCKbZycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbcycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbdCcoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKbdScoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_SCKbdicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_SCKbaScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbdycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbeCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SCKbeScoEeSLVrU2ifxtpw" value="true"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SCKbeicoEeSLVrU2ifxtpw" name="CastExpression@1d69a562.inputElement" incoming="_SCKbVycoEeSLVrU2ifxtpw" outgoing="_SCKbbCcoEeSLVrU2ifxtpw" regionAsInput="_SCKbZicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SCKbeycoEeSLVrU2ifxtpw" name="CastExpression@1d69a562.outputElement" incoming="_SCKbbScoEeSLVrU2ifxtpw" outgoing="_SCKbWCcoEeSLVrU2ifxtpw" regionAsOutput="_SCKbZicoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKbTycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SCKbSScoEeSLVrU2ifxtpw" parameter="_SCKbQCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKbUCcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SCKbSScoEeSLVrU2ifxtpw" outgoing="_SCKbTCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKbUScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SCKbSicoEeSLVrU2ifxtpw" parameter="_SCKbQycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKbUicoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SCKbSicoEeSLVrU2ifxtpw" outgoing="_SCKbTScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKbUycoEeSLVrU2ifxtpw" name="Return" incoming="_SCKbTicoEeSLVrU2ifxtpw" parameter="_SCKbRicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCKbVCcoEeSLVrU2ifxtpw" name="Final" incoming="_SCKbSycoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKbfCcoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCKbfScoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCKbficoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmxJSoVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmxJSYVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCKbfycoEeSLVrU2ifxtpw" client="_SCKbPycoEeSLVrU2ifxtpw" supplier="_SCKbfCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKbgCcoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$add__any__" node="_SCKbkicoEeSLVrU2ifxtpw _SCKbkycoEeSLVrU2ifxtpw _SCKblCcoEeSLVrU2ifxtpw _SCKblScoEeSLVrU2ifxtpw _SCKblicoEeSLVrU2ifxtpw _SCKblycoEeSLVrU2ifxtpw _SCKbmCcoEeSLVrU2ifxtpw _SCKbmScoEeSLVrU2ifxtpw" group="_SCKbmScoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCKbgScoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false" direction="inout">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbgicoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbgycoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKbhCcoEeSLVrU2ifxtpw" name="element" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbhScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbhicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKbhycoEeSLVrU2ifxtpw" name="" visibility="package" isOrdered="true" isUnique="false" direction="return">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbiCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbiScoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbiicoEeSLVrU2ifxtpw" target="_SCKbkycoEeSLVrU2ifxtpw" source="_SCKbkicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbiycoEeSLVrU2ifxtpw" target="_SCKblicoEeSLVrU2ifxtpw" source="_SCKblScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCKbjCcoEeSLVrU2ifxtpw" target="_SCKbmCcoEeSLVrU2ifxtpw" source="_SCKbnicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbjScoEeSLVrU2ifxtpw" target="_SCKbqycoEeSLVrU2ifxtpw" source="_SCKbkycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbjicoEeSLVrU2ifxtpw" target="_SCKbricoEeSLVrU2ifxtpw" source="_SCKblicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbjycoEeSLVrU2ifxtpw" target="_SCKblycoEeSLVrU2ifxtpw" source="_SCKboicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbkCcoEeSLVrU2ifxtpw" target="_SCKblCcoEeSLVrU2ifxtpw" source="_SCKbpScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbkScoEeSLVrU2ifxtpw" target="_SCKblCcoEeSLVrU2ifxtpw" source="_SCKbmycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCKbmScoEeSLVrU2ifxtpw" name="Body(add)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbmicoEeSLVrU2ifxtpw" target="_SCKbmycoEeSLVrU2ifxtpw" source="_SCKbqCcoEeSLVrU2ifxtpw"/>
        <structuredNodeOutput xmi:id="_SCKbmycoEeSLVrU2ifxtpw" name="Output(seq)" incoming="_SCKbmicoEeSLVrU2ifxtpw" outgoing="_SCKbkScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbnCcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbnScoEeSLVrU2ifxtpw" value="*"/>
        </structuredNodeOutput>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKbnicoEeSLVrU2ifxtpw" name="ReturnStatement@25f67136" outgoing="_SCKbjCcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbnycoEeSLVrU2ifxtpw" target="_SCKbqCcoEeSLVrU2ifxtpw" source="_SCKbsScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKboCcoEeSLVrU2ifxtpw" target="_SCKboicoEeSLVrU2ifxtpw" source="_SCKbqCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKboScoEeSLVrU2ifxtpw" target="_SCKbpScoEeSLVrU2ifxtpw" source="_SCKbqCcoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCKboicoEeSLVrU2ifxtpw" name="ReturnStatement@25f67136.output" incoming="_SCKboCcoEeSLVrU2ifxtpw" outgoing="_SCKbjycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKboycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbpCcoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SCKbpScoEeSLVrU2ifxtpw" name="ReturnStatement@25f67136.output" incoming="_SCKboScoEeSLVrU2ifxtpw" outgoing="_SCKbkCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbpicoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbpycoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:ForkNode" xmi:id="_SCKbqCcoEeSLVrU2ifxtpw" name="Fork(seq)@7b737117" incoming="_SCKbnycoEeSLVrU2ifxtpw" outgoing="_SCKboCcoEeSLVrU2ifxtpw _SCKboScoEeSLVrU2ifxtpw _SCKbmicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKbqScoEeSLVrU2ifxtpw" name="RightHandSide@5805dc52">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKbqicoEeSLVrU2ifxtpw" name="Call($$including__CollectionFunctions$add$T__)" behavior="_SCKbPycoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCKbqycoEeSLVrU2ifxtpw" name="Call($$including__CollectionFunctions$add$T__).argument(seq)" incoming="_SCKbjScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbrCcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbrScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCKbricoEeSLVrU2ifxtpw" name="Call($$including__CollectionFunctions$add$T__).argument(element)" incoming="_SCKbjicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbrycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbsCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKbsScoEeSLVrU2ifxtpw" name="Call($$including__CollectionFunctions$add$T__).result()" outgoing="_SCKbnycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbsicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbsycoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKbkicoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SCKbiicoEeSLVrU2ifxtpw" parameter="_SCKbgScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKbkycoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SCKbiicoEeSLVrU2ifxtpw" outgoing="_SCKbjScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKblCcoEeSLVrU2ifxtpw" name="Output(seq)" incoming="_SCKbkCcoEeSLVrU2ifxtpw _SCKbkScoEeSLVrU2ifxtpw" parameter="_SCKbgScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKblScoEeSLVrU2ifxtpw" name="Input(element)" outgoing="_SCKbiycoEeSLVrU2ifxtpw" parameter="_SCKbhCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKblicoEeSLVrU2ifxtpw" name="Fork(element)" incoming="_SCKbiycoEeSLVrU2ifxtpw" outgoing="_SCKbjicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKblycoEeSLVrU2ifxtpw" name="Return" incoming="_SCKbjycoEeSLVrU2ifxtpw" parameter="_SCKbhycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCKbmCcoEeSLVrU2ifxtpw" name="Final" incoming="_SCKbjCcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKbtCcoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCKbtScoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCKbticoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_Jm3P2IVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_Jm3P14VoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCKbtycoEeSLVrU2ifxtpw" client="_SCKbgCcoEeSLVrU2ifxtpw" supplier="_SCKbtCcoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKbuCcoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$removeAll__any__" node="_SCKbyicoEeSLVrU2ifxtpw _SCKbyycoEeSLVrU2ifxtpw _SCKbzCcoEeSLVrU2ifxtpw _SCKbzScoEeSLVrU2ifxtpw _SCKbzicoEeSLVrU2ifxtpw _SCKbzycoEeSLVrU2ifxtpw _SCKb0CcoEeSLVrU2ifxtpw _SCKb0ScoEeSLVrU2ifxtpw" group="_SCKb0ScoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCKbuScoEeSLVrU2ifxtpw" name="seq1" visibility="package" isOrdered="true" isUnique="false" direction="inout">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbuicoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbuycoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKbvCcoEeSLVrU2ifxtpw" name="seq2" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbvScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbvicoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKbvycoEeSLVrU2ifxtpw" name="" visibility="package" isOrdered="true" isUnique="false" direction="return">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKbwCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKbwScoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbwicoEeSLVrU2ifxtpw" target="_SCKbyycoEeSLVrU2ifxtpw" source="_SCKbyicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbwycoEeSLVrU2ifxtpw" target="_SCKbzicoEeSLVrU2ifxtpw" source="_SCKbzScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCKbxCcoEeSLVrU2ifxtpw" target="_SCKb0CcoEeSLVrU2ifxtpw" source="_SCKb1icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbxScoEeSLVrU2ifxtpw" target="_SCKb4ycoEeSLVrU2ifxtpw" source="_SCKbyycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbxicoEeSLVrU2ifxtpw" target="_SCKb5icoEeSLVrU2ifxtpw" source="_SCKbzicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbxycoEeSLVrU2ifxtpw" target="_SCKbzycoEeSLVrU2ifxtpw" source="_SCKb2icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbyCcoEeSLVrU2ifxtpw" target="_SCKbzCcoEeSLVrU2ifxtpw" source="_SCKb3ScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKbyScoEeSLVrU2ifxtpw" target="_SCKbzCcoEeSLVrU2ifxtpw" source="_SCKb0ycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCKb0ScoEeSLVrU2ifxtpw" name="Body(removeAll)">
        <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKb0icoEeSLVrU2ifxtpw" target="_SCKb0ycoEeSLVrU2ifxtpw" source="_SCKb4CcoEeSLVrU2ifxtpw"/>
        <structuredNodeOutput xmi:id="_SCKb0ycoEeSLVrU2ifxtpw" name="Output(seq1)" incoming="_SCKb0icoEeSLVrU2ifxtpw" outgoing="_SCKbyScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKb1CcoEeSLVrU2ifxtpw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKb1ScoEeSLVrU2ifxtpw" value="*"/>
        </structuredNodeOutput>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKb1icoEeSLVrU2ifxtpw" name="ReturnStatement@6786c975" outgoing="_SCKbxCcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKb1ycoEeSLVrU2ifxtpw" target="_SCKb4CcoEeSLVrU2ifxtpw" source="_SCKb6ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKb2CcoEeSLVrU2ifxtpw" target="_SCKb2icoEeSLVrU2ifxtpw" source="_SCKb4CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKb2ScoEeSLVrU2ifxtpw" target="_SCKb3ScoEeSLVrU2ifxtpw" source="_SCKb4CcoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCKb2icoEeSLVrU2ifxtpw" name="ReturnStatement@6786c975.output" incoming="_SCKb2CcoEeSLVrU2ifxtpw" outgoing="_SCKbxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKb2ycoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKb3CcoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <structuredNodeOutput xmi:id="_SCKb3ScoEeSLVrU2ifxtpw" name="ReturnStatement@6786c975.output" incoming="_SCKb2ScoEeSLVrU2ifxtpw" outgoing="_SCKbyCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKb3icoEeSLVrU2ifxtpw"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKb3ycoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:ForkNode" xmi:id="_SCKb4CcoEeSLVrU2ifxtpw" name="Fork(seq1)@6b6a4b18" incoming="_SCKb1ycoEeSLVrU2ifxtpw" outgoing="_SCKb2CcoEeSLVrU2ifxtpw _SCKb2ScoEeSLVrU2ifxtpw _SCKb0icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKb4ScoEeSLVrU2ifxtpw" name="RightHandSide@f684bc0">
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKb4icoEeSLVrU2ifxtpw" name="Call($$difference__CollectionFunctions$removeAll$T__)" behavior="_SCKb7CcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCKb4ycoEeSLVrU2ifxtpw" name="Call($$difference__CollectionFunctions$removeAll$T__).argument(seq1)" incoming="_SCKbxScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKb5CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKb5ScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCKb5icoEeSLVrU2ifxtpw" name="Call($$difference__CollectionFunctions$removeAll$T__).argument(seq2)" incoming="_SCKbxicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKb5ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKb6CcoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SCKb6ScoEeSLVrU2ifxtpw" name="Call($$difference__CollectionFunctions$removeAll$T__).result()" outgoing="_SCKb1ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKb6icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKb6ycoEeSLVrU2ifxtpw" value="*"/>
              </result>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKbyicoEeSLVrU2ifxtpw" name="Input(seq1)" outgoing="_SCKbwicoEeSLVrU2ifxtpw" parameter="_SCKbuScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKbyycoEeSLVrU2ifxtpw" name="Fork(seq1)" incoming="_SCKbwicoEeSLVrU2ifxtpw" outgoing="_SCKbxScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKbzCcoEeSLVrU2ifxtpw" name="Output(seq1)" incoming="_SCKbyCcoEeSLVrU2ifxtpw _SCKbyScoEeSLVrU2ifxtpw" parameter="_SCKbuScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKbzScoEeSLVrU2ifxtpw" name="Input(seq2)" outgoing="_SCKbwycoEeSLVrU2ifxtpw" parameter="_SCKbvCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKbzicoEeSLVrU2ifxtpw" name="Fork(seq2)" incoming="_SCKbwycoEeSLVrU2ifxtpw" outgoing="_SCKbxicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKbzycoEeSLVrU2ifxtpw" name="Return" incoming="_SCKbxycoEeSLVrU2ifxtpw" parameter="_SCKbvycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCKb0CcoEeSLVrU2ifxtpw" name="Final" incoming="_SCKbxCcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKb7CcoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$difference__any__" node="_SCKb_CcoEeSLVrU2ifxtpw _SCKb_ScoEeSLVrU2ifxtpw _SCKb_icoEeSLVrU2ifxtpw _SCKb_ycoEeSLVrU2ifxtpw _SCKcACcoEeSLVrU2ifxtpw _SCKcAScoEeSLVrU2ifxtpw _SCKcAicoEeSLVrU2ifxtpw" group="_SCKcAicoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCKb7ScoEeSLVrU2ifxtpw" name="seq1" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKb7icoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKb7ycoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKb8CcoEeSLVrU2ifxtpw" name="seq2" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKb8ScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKb8icoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKb8ycoEeSLVrU2ifxtpw" name="" visibility="package" isOrdered="true" isUnique="false" direction="return">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKb9CcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKb9ScoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKb9icoEeSLVrU2ifxtpw" target="_SCKb_ScoEeSLVrU2ifxtpw" source="_SCKb_CcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKb9ycoEeSLVrU2ifxtpw" target="_SCKb_ycoEeSLVrU2ifxtpw" source="_SCKb_icoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCKb-CcoEeSLVrU2ifxtpw" target="_SCKcAScoEeSLVrU2ifxtpw" source="_SCKcAycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKb-ScoEeSLVrU2ifxtpw" target="_SCKcCicoEeSLVrU2ifxtpw" source="_SCKb_ScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKb-icoEeSLVrU2ifxtpw" target="_SCKcDScoEeSLVrU2ifxtpw" source="_SCKb_ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKb-ycoEeSLVrU2ifxtpw" target="_SCKcACcoEeSLVrU2ifxtpw" source="_SCKcBicoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCKcAicoEeSLVrU2ifxtpw" name="Body(difference)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKcAycoEeSLVrU2ifxtpw" name="ReturnStatement@54f56f6b" outgoing="_SCKb-CcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcBCcoEeSLVrU2ifxtpw" target="_SCKcJycoEeSLVrU2ifxtpw" source="_SCKcECcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcBScoEeSLVrU2ifxtpw" target="_SCKcBicoEeSLVrU2ifxtpw" source="_SCKcKCcoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCKcBicoEeSLVrU2ifxtpw" name="ReturnStatement@54f56f6b.output" incoming="_SCKcBScoEeSLVrU2ifxtpw" outgoing="_SCKb-ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcBycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcCCcoEeSLVrU2ifxtpw" value="*"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKcCScoEeSLVrU2ifxtpw" name="Call(Difference)">
            <argument xmi:id="_SCKcCicoEeSLVrU2ifxtpw" name="Call(Difference).argument(seq1)" incoming="_SCKb-ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcCycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcDCcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <argument xmi:id="_SCKcDScoEeSLVrU2ifxtpw" name="Call(Difference).argument(seq2)" incoming="_SCKb-icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcDicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcDycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SCKcECcoEeSLVrU2ifxtpw" name="Call(Difference).result()" outgoing="_SCKcBCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcEScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcEicoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Difference"/>
          </node>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_SCKcEycoEeSLVrU2ifxtpw" name="CastExpression@2391ff7e" mode="parallel" outputElement="_SCKcKCcoEeSLVrU2ifxtpw" inputElement="_SCKcJycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcFCcoEeSLVrU2ifxtpw" target="_SCKcHycoEeSLVrU2ifxtpw" source="_SCKcHCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcFScoEeSLVrU2ifxtpw" target="_SCKcHScoEeSLVrU2ifxtpw" source="_SCKcHCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcFicoEeSLVrU2ifxtpw" target="_SCKcHScoEeSLVrU2ifxtpw" source="_SCKcIycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcFycoEeSLVrU2ifxtpw" target="_SCKcGycoEeSLVrU2ifxtpw" source="_SCKcHScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKcGCcoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcGScoEeSLVrU2ifxtpw" target="_SCKcHCcoEeSLVrU2ifxtpw" source="_SCKcJycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcGicoEeSLVrU2ifxtpw" target="_SCKcKCcoEeSLVrU2ifxtpw" source="_SCKcGycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_SCKcGycoEeSLVrU2ifxtpw" name="Merge(CastExpression@2391ff7e.operand)" incoming="_SCKcFycoEeSLVrU2ifxtpw" outgoing="_SCKcGicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCKcHCcoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(T).object)" incoming="_SCKcGScoEeSLVrU2ifxtpw" outgoing="_SCKcFCcoEeSLVrU2ifxtpw _SCKcFScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SCKcHScoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(T).result)" incoming="_SCKcFScoEeSLVrU2ifxtpw _SCKcFicoEeSLVrU2ifxtpw" outgoing="_SCKcFycoEeSLVrU2ifxtpw" decisionInputFlow="_SCKcFicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKcHicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T)">
              <structuredNodeInput xmi:id="_SCKcHycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).object" incoming="_SCKcFCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcICcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcIScoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKcIicoEeSLVrU2ifxtpw" name="Value(true)">
                <result xmi:id="_SCKcIycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(T).result" outgoing="_SCKcFicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcJCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcJScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralBoolean" xmi:id="_SCKcJicoEeSLVrU2ifxtpw" value="true"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SCKcJycoEeSLVrU2ifxtpw" name="CastExpression@2391ff7e.inputElement" incoming="_SCKcBCcoEeSLVrU2ifxtpw" outgoing="_SCKcGScoEeSLVrU2ifxtpw" regionAsInput="_SCKcEycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SCKcKCcoEeSLVrU2ifxtpw" name="CastExpression@2391ff7e.outputElement" incoming="_SCKcGicoEeSLVrU2ifxtpw" outgoing="_SCKcBScoEeSLVrU2ifxtpw" regionAsOutput="_SCKcEycoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKb_CcoEeSLVrU2ifxtpw" name="Input(seq1)" outgoing="_SCKb9icoEeSLVrU2ifxtpw" parameter="_SCKb7ScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKb_ScoEeSLVrU2ifxtpw" name="Fork(seq1)" incoming="_SCKb9icoEeSLVrU2ifxtpw" outgoing="_SCKb-ScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKb_icoEeSLVrU2ifxtpw" name="Input(seq2)" outgoing="_SCKb9ycoEeSLVrU2ifxtpw" parameter="_SCKb8CcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKb_ycoEeSLVrU2ifxtpw" name="Fork(seq2)" incoming="_SCKb9ycoEeSLVrU2ifxtpw" outgoing="_SCKb-icoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKcACcoEeSLVrU2ifxtpw" name="Return" incoming="_SCKb-ycoEeSLVrU2ifxtpw" parameter="_SCKb8ycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCKcAScoEeSLVrU2ifxtpw" name="Final" incoming="_SCKb-CcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKcKScoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCKcKicoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCKcKycoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmwiQYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmwiQIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCKcLCcoEeSLVrU2ifxtpw" client="_SCKb7CcoEeSLVrU2ifxtpw" supplier="_SCKcKScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKcLScoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCKcLicoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCKcLycoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_Jm5FKoVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_Jm5FKYVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCKcMCcoEeSLVrU2ifxtpw" client="_SCKbuCcoEeSLVrU2ifxtpw" supplier="_SCKcLScoEeSLVrU2ifxtpw"/>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKcMScoEeSLVrU2ifxtpw" name="AssertFalse" node="_SCKcQicoEeSLVrU2ifxtpw _SCKcQycoEeSLVrU2ifxtpw _SCKcRCcoEeSLVrU2ifxtpw _SCKcRScoEeSLVrU2ifxtpw _SCKcRicoEeSLVrU2ifxtpw" group="_SCKcRicoEeSLVrU2ifxtpw">
      <elementImport xmi:id="_SCKcMicoEeSLVrU2ifxtpw" alias="" visibility="private">
        <importedElement xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-ToString"/>
      </elementImport>
      <packageImport xmi:id="_SCKcMycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SCKcNCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SCKcNScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SCKcNicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SCKcNycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SCKcOCcoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcOScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcOicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKcOycoEeSLVrU2ifxtpw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcPCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcPScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcPicoEeSLVrU2ifxtpw" target="_SCKcQycoEeSLVrU2ifxtpw" source="_SCKcQicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcPycoEeSLVrU2ifxtpw" target="_SCKcRScoEeSLVrU2ifxtpw" source="_SCKcRCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcQCcoEeSLVrU2ifxtpw" target="_SCKcZicoEeSLVrU2ifxtpw" source="_SCKcQycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcQScoEeSLVrU2ifxtpw" target="_SCKceycoEeSLVrU2ifxtpw" source="_SCKcRScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCKcRicoEeSLVrU2ifxtpw" name="Body(AssertFalse)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKcRycoEeSLVrU2ifxtpw" name="ExpressionStatement@4a44ad41">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcSCcoEeSLVrU2ifxtpw" target="_SCKcTCcoEeSLVrU2ifxtpw" source="_SCKcaScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcSScoEeSLVrU2ifxtpw" target="_SCKcTycoEeSLVrU2ifxtpw" source="_SCKchCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCKcSicoEeSLVrU2ifxtpw" target="_SCKcSycoEeSLVrU2ifxtpw" source="_SCKcUicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKcSycoEeSLVrU2ifxtpw" name="Call(AssertTrue)" incoming="_SCKcSicoEeSLVrU2ifxtpw" behavior="_SCKfVCcoEeSLVrU2ifxtpw">
            <argument xmi:id="_SCKcTCcoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(label)" incoming="_SCKcSCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcTScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcTicoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_SCKcTycoEeSLVrU2ifxtpw" name="Call(AssertTrue).argument(condition)" incoming="_SCKcSScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcUCcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcUScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKcUicoEeSLVrU2ifxtpw" name="Tuple@76ca21f6" outgoing="_SCKcSicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcUycoEeSLVrU2ifxtpw" target="_SCKcYycoEeSLVrU2ifxtpw" source="_SCKcXicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcVCcoEeSLVrU2ifxtpw" target="_SCKccicoEeSLVrU2ifxtpw" source="_SCKceycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcVScoEeSLVrU2ifxtpw" target="_SCKcfScoEeSLVrU2ifxtpw" source="_SCKceycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcVicoEeSLVrU2ifxtpw" target="_SCKcgycoEeSLVrU2ifxtpw" source="_SCKcgCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcVycoEeSLVrU2ifxtpw" target="_SCKchCcoEeSLVrU2ifxtpw" source="_SCKcdScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcWCcoEeSLVrU2ifxtpw" target="_SCKchScoEeSLVrU2ifxtpw" source="_SCKcgycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcWScoEeSLVrU2ifxtpw" target="_SCKchScoEeSLVrU2ifxtpw" source="_SCKcgycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcWicoEeSLVrU2ifxtpw" target="_SCKchCcoEeSLVrU2ifxtpw" source="_SCKchScoEeSLVrU2ifxtpw">
              <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKcWycoEeSLVrU2ifxtpw" name="Value(false)"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcXCcoEeSLVrU2ifxtpw" target="_SCKceCcoEeSLVrU2ifxtpw" source="_SCKcbScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKcXScoEeSLVrU2ifxtpw" name="Value(&quot;! &quot;)">
              <result xmi:id="_SCKcXicoEeSLVrU2ifxtpw" name="Value(&quot;! &quot;).result" outgoing="_SCKcUycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcXycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcYCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_SCKcYScoEeSLVrU2ifxtpw" value="! ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKcYicoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_SCKcYycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SCKcUycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcZCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcZScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCKcZicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SCKcQCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcZycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcaCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKcaScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SCKcSCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcaicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcaycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKcbCcoEeSLVrU2ifxtpw" name="Value(false)">
              <result xmi:id="_SCKcbScoEeSLVrU2ifxtpw" name="Value(false).result" outgoing="_SCKcXCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcbicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcbycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralBoolean" xmi:id="_SCKccCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </value>
            </node>
            <node xmi:type="uml:TestIdentityAction" xmi:id="_SCKccScoEeSLVrU2ifxtpw" name="Test(==)">
              <first xmi:id="_SCKccicoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_SCKcVCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKccycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcdCcoEeSLVrU2ifxtpw" value="1"/>
              </first>
              <result xmi:id="_SCKcdScoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_SCKcVycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcdicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcdycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <second xmi:id="_SCKceCcoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_SCKcXCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKceScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKceicoEeSLVrU2ifxtpw" value="1"/>
              </second>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCKceycoEeSLVrU2ifxtpw" name="Fork(Fork(condition))" incoming="_SCKcQScoEeSLVrU2ifxtpw" outgoing="_SCKcVCcoEeSLVrU2ifxtpw _SCKcVScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKcfCcoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
              <argument xmi:id="_SCKcfScoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SCKcVScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcficoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcfycoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SCKcgCcoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SCKcVicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcgScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcgicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCKcgycoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SCKcVicoEeSLVrU2ifxtpw" outgoing="_SCKcWCcoEeSLVrU2ifxtpw _SCKcWScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:MergeNode" xmi:id="_SCKchCcoEeSLVrU2ifxtpw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_SCKcVycoEeSLVrU2ifxtpw _SCKcWicoEeSLVrU2ifxtpw" outgoing="_SCKcSScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:DecisionNode" xmi:id="_SCKchScoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SCKcWCcoEeSLVrU2ifxtpw _SCKcWScoEeSLVrU2ifxtpw" outgoing="_SCKcWicoEeSLVrU2ifxtpw" decisionInputFlow="_SCKcWScoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKcQicoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_SCKcPicoEeSLVrU2ifxtpw" parameter="_SCKcOCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKcQycoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_SCKcPicoEeSLVrU2ifxtpw" outgoing="_SCKcQCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKcRCcoEeSLVrU2ifxtpw" name="Input(condition)" outgoing="_SCKcPycoEeSLVrU2ifxtpw" parameter="_SCKcOycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKcRScoEeSLVrU2ifxtpw" name="Fork(condition)" incoming="_SCKcPycoEeSLVrU2ifxtpw" outgoing="_SCKcQScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKchicoEeSLVrU2ifxtpw" name="AssertEqual" node="_SCKcnycoEeSLVrU2ifxtpw _SCKcoCcoEeSLVrU2ifxtpw _SCKcoScoEeSLVrU2ifxtpw _SCKcoicoEeSLVrU2ifxtpw _SCKcoycoEeSLVrU2ifxtpw _SCKcpCcoEeSLVrU2ifxtpw _SCKcpScoEeSLVrU2ifxtpw" group="_SCKcpScoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SCKchycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SCKciCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SCKciScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SCKciicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SCKciycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SCKcjCcoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcjScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcjicoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKcjycoEeSLVrU2ifxtpw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKckCcoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKckScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKckicoEeSLVrU2ifxtpw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKckycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKclCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKclScoEeSLVrU2ifxtpw" target="_SCKcoCcoEeSLVrU2ifxtpw" source="_SCKcnycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKclicoEeSLVrU2ifxtpw" target="_SCKcoicoEeSLVrU2ifxtpw" source="_SCKcoScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKclycoEeSLVrU2ifxtpw" target="_SCKcpCcoEeSLVrU2ifxtpw" source="_SCKcoycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcmCcoEeSLVrU2ifxtpw" target="_SCKcyicoEeSLVrU2ifxtpw" source="_SCKcoicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcmScoEeSLVrU2ifxtpw" target="_SCKc0icoEeSLVrU2ifxtpw" source="_SCKcpCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcmicoEeSLVrU2ifxtpw" target="_SCKdCScoEeSLVrU2ifxtpw" source="_SCKcoCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcmycoEeSLVrU2ifxtpw" target="_SCKdLycoEeSLVrU2ifxtpw" source="_SCKcpCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcnCcoEeSLVrU2ifxtpw" target="_SCKdTScoEeSLVrU2ifxtpw" source="_SCKcpCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcnScoEeSLVrU2ifxtpw" target="_SCKdcycoEeSLVrU2ifxtpw" source="_SCKcpCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcnicoEeSLVrU2ifxtpw" target="_SCKdkycoEeSLVrU2ifxtpw" source="_SCKcpCcoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCKcpScoEeSLVrU2ifxtpw" name="Body(AssertEqual)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_SCKcpicoEeSLVrU2ifxtpw" name="IfStatement@40d3d1f0">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcpycoEeSLVrU2ifxtpw" target="_SCKcwScoEeSLVrU2ifxtpw" source="_SCKcyicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcqCcoEeSLVrU2ifxtpw" target="_SCKczCcoEeSLVrU2ifxtpw" source="_SCKcyicoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcqScoEeSLVrU2ifxtpw" target="_SCKcxycoEeSLVrU2ifxtpw" source="_SCKc0icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcqicoEeSLVrU2ifxtpw" target="_SCKc1CcoEeSLVrU2ifxtpw" source="_SCKc0icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcqycoEeSLVrU2ifxtpw" target="_SCKc2ycoEeSLVrU2ifxtpw" source="_SCKczycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcrCcoEeSLVrU2ifxtpw" target="_SCKc3CcoEeSLVrU2ifxtpw" source="_SCKc1ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcrScoEeSLVrU2ifxtpw" target="_SCKc3icoEeSLVrU2ifxtpw" source="_SCKc2ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcricoEeSLVrU2ifxtpw" target="_SCKc5ScoEeSLVrU2ifxtpw" source="_SCKc3CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcrycoEeSLVrU2ifxtpw" target="_SCKc6ycoEeSLVrU2ifxtpw" source="_SCKc3CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCKcsCcoEeSLVrU2ifxtpw" target="_SCKcwCcoEeSLVrU2ifxtpw" source="_SCKc6ycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKcsScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCKcsicoEeSLVrU2ifxtpw" target="_SCKc3ScoEeSLVrU2ifxtpw" source="_SCKc6ycoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKcsycoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCKctCcoEeSLVrU2ifxtpw" target="_SCKc7CcoEeSLVrU2ifxtpw" source="_SCKc2icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKctScoEeSLVrU2ifxtpw" target="_SCKc7CcoEeSLVrU2ifxtpw" source="_SCKc2ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCKcticoEeSLVrU2ifxtpw" target="_SCKc6ycoEeSLVrU2ifxtpw" source="_SCKc7CcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKctycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCKcuCcoEeSLVrU2ifxtpw" target="_SCKc5CcoEeSLVrU2ifxtpw" source="_SCKc7CcoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKcuScoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcuicoEeSLVrU2ifxtpw" target="_SCKc7ScoEeSLVrU2ifxtpw" source="_SCKcxCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcuycoEeSLVrU2ifxtpw" target="_SCKc7ScoEeSLVrU2ifxtpw" source="_SCKc4ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcvCcoEeSLVrU2ifxtpw" target="_SCKc7ScoEeSLVrU2ifxtpw" source="_SCKc6CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKcvScoEeSLVrU2ifxtpw" target="_SCKc7ycoEeSLVrU2ifxtpw" source="_SCKc7ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCKcvicoEeSLVrU2ifxtpw" target="_SCKdHicoEeSLVrU2ifxtpw" source="_SCKc9ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCKcvycoEeSLVrU2ifxtpw" target="_SCKdmicoEeSLVrU2ifxtpw" source="_SCKdHicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SCKcwCcoEeSLVrU2ifxtpw" name="Test(==)" incoming="_SCKcsCcoEeSLVrU2ifxtpw">
            <first xmi:id="_SCKcwScoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_SCKcpycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcwicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcwycoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SCKcxCcoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_SCKcuicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcxScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcxicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SCKcxycoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_SCKcqScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKcyCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKcyScoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SCKcyicoEeSLVrU2ifxtpw" name="Fork(Fork(value1))" incoming="_SCKcmCcoEeSLVrU2ifxtpw" outgoing="_SCKcpycoEeSLVrU2ifxtpw _SCKcqCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKcyycoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_SCKczCcoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SCKcqCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKczScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKczicoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SCKczycoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SCKcqycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKc0CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKc0ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SCKc0icoEeSLVrU2ifxtpw" name="Fork(Fork(value2))" incoming="_SCKcmScoEeSLVrU2ifxtpw" outgoing="_SCKcqScoEeSLVrU2ifxtpw _SCKcqicoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKc0ycoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_SCKc1CcoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SCKcqicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKc1ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKc1icoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SCKc1ycoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SCKcrCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKc2CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKc2ScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:InitialNode" xmi:id="_SCKc2icoEeSLVrU2ifxtpw" name="Initial(Test(==))" outgoing="_SCKctCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SCKc2ycoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SCKcqycoEeSLVrU2ifxtpw" outgoing="_SCKcrScoEeSLVrU2ifxtpw _SCKctScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ForkNode" xmi:id="_SCKc3CcoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SCKcrCcoEeSLVrU2ifxtpw" outgoing="_SCKcricoEeSLVrU2ifxtpw _SCKcrycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKc3ScoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_SCKcsicoEeSLVrU2ifxtpw">
            <argument xmi:id="_SCKc3icoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SCKcrScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKc3ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKc4CcoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SCKc4ScoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_SCKcuycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKc4icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKc4ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKc5CcoEeSLVrU2ifxtpw" name="Call(Not)" incoming="_SCKcuCcoEeSLVrU2ifxtpw">
            <argument xmi:id="_SCKc5ScoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SCKcricoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKc5icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKc5ycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SCKc6CcoEeSLVrU2ifxtpw" name="Call(Not).result(result)" outgoing="_SCKcvCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKc6ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKc6icoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:DecisionNode" xmi:id="_SCKc6ycoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SCKcrycoEeSLVrU2ifxtpw _SCKcticoEeSLVrU2ifxtpw" outgoing="_SCKcsCcoEeSLVrU2ifxtpw _SCKcsicoEeSLVrU2ifxtpw" decisionInputFlow="_SCKcrycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SCKc7CcoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SCKctCcoEeSLVrU2ifxtpw _SCKctScoEeSLVrU2ifxtpw" outgoing="_SCKcticoEeSLVrU2ifxtpw _SCKcuCcoEeSLVrU2ifxtpw" decisionInputFlow="_SCKctScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_SCKc7ScoEeSLVrU2ifxtpw" name="Merge(Test(==).result, !Call(NotEmpty).result() &amp;&amp; !Call(NotEmpty).result())" incoming="_SCKcuicoEeSLVrU2ifxtpw _SCKcuycoEeSLVrU2ifxtpw _SCKcvCcoEeSLVrU2ifxtpw" outgoing="_SCKcvScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKc7icoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_SCKc7ycoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SCKcvScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKc8CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKc8ScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SCKc8icoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKc8ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKc9CcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKc9ScoEeSLVrU2ifxtpw" name="ExpressionStatement@2ab68416" outgoing="_SCKcvicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKc9icoEeSLVrU2ifxtpw" target="_SCKc-ScoEeSLVrU2ifxtpw" source="_SCKdGycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCKc9ycoEeSLVrU2ifxtpw" target="_SCKc-CcoEeSLVrU2ifxtpw" source="_SCKc_CcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKc-CcoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_SCKc9ycoEeSLVrU2ifxtpw" behavior="_SCKftycoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCKc-ScoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_SCKc9icoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKc-icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKc-ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKc_CcoEeSLVrU2ifxtpw" name="Tuple@6e72489d" outgoing="_SCKc9ycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKc_ScoEeSLVrU2ifxtpw" target="_SCKdBicoEeSLVrU2ifxtpw" source="_SCKdAScoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKc_icoEeSLVrU2ifxtpw" target="_SCKdFScoEeSLVrU2ifxtpw" source="_SCKdDCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKc_ycoEeSLVrU2ifxtpw" target="_SCKdGCcoEeSLVrU2ifxtpw" source="_SCKdECcoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKdACcoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_SCKdAScoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_SCKc_ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdAicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdAycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SCKdBCcoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKdBScoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_SCKdBicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SCKc_ScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdBycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdCCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SCKdCScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SCKcmicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdCicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdCycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SCKdDCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SCKc_icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdDScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdDicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKdDycoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;)">
                <result xmi:id="_SCKdECcoEeSLVrU2ifxtpw" name="Value(&quot;==&quot;).result" outgoing="_SCKc_ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdEScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdEicoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SCKdEycoEeSLVrU2ifxtpw" value="==">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKdFCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_SCKdFScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SCKc_icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdFicoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdFycoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SCKdGCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SCKc_ycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdGScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdGicoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SCKdGycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SCKc9icoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdHCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdHScoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKdHicoEeSLVrU2ifxtpw" name="ExpressionStatement@54610857" incoming="_SCKcvicoEeSLVrU2ifxtpw" outgoing="_SCKcvycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdHycoEeSLVrU2ifxtpw" target="_SCKdIicoEeSLVrU2ifxtpw" source="_SCKdmScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCKdICcoEeSLVrU2ifxtpw" target="_SCKdIScoEeSLVrU2ifxtpw" source="_SCKdJScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKdIScoEeSLVrU2ifxtpw" name="Call(Write)" incoming="_SCKdICcoEeSLVrU2ifxtpw" behavior="_SCKftycoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCKdIicoEeSLVrU2ifxtpw" name="Call(Write).argument(value)" incoming="_SCKdHycoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdIycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdJCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKdJScoEeSLVrU2ifxtpw" name="Tuple@12591f49" outgoing="_SCKdICcoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ControlFlow" xmi:id="_SCKdJicoEeSLVrU2ifxtpw" target="_SCKdmCcoEeSLVrU2ifxtpw" source="_SCKdlycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdJycoEeSLVrU2ifxtpw" target="_SCKdmCcoEeSLVrU2ifxtpw" source="_SCKdMicoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SCKdKCcoEeSLVrU2ifxtpw" target="_SCKdNScoEeSLVrU2ifxtpw" source="_SCKdmCcoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKdKScoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="_SCKdKicoEeSLVrU2ifxtpw" target="_SCKdPycoEeSLVrU2ifxtpw" source="_SCKdmCcoEeSLVrU2ifxtpw">
                <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKdKycoEeSLVrU2ifxtpw" name="Value(false)"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdLCcoEeSLVrU2ifxtpw" target="_SCKdmScoEeSLVrU2ifxtpw" source="_SCKdNycoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdLScoEeSLVrU2ifxtpw" target="_SCKdmScoEeSLVrU2ifxtpw" source="_SCKdSScoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKdLicoEeSLVrU2ifxtpw" name="Call(IsEmpty)">
                <argument xmi:id="_SCKdLycoEeSLVrU2ifxtpw" name="Call(IsEmpty).argument(seq)" incoming="_SCKcmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdMCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdMScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SCKdMicoEeSLVrU2ifxtpw" name="Call(IsEmpty).result()" outgoing="_SCKdJycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdMycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdNCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-IsEmpty"/>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKdNScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@369dcc64.operand2" incoming="_SCKdKCcoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdNicoEeSLVrU2ifxtpw" target="_SCKdNycoEeSLVrU2ifxtpw" source="_SCKdOycoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SCKdNycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@369dcc64.operand2.result" incoming="_SCKdNicoEeSLVrU2ifxtpw" outgoing="_SCKdLCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdOCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdOScoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKdOicoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;)">
                  <result xmi:id="_SCKdOycoEeSLVrU2ifxtpw" name="Value(&quot;null&quot;).result" outgoing="_SCKdNicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdPCcoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdPScoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                  <value xmi:type="uml:LiteralString" xmi:id="_SCKdPicoEeSLVrU2ifxtpw" value="null">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </value>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKdPycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@369dcc64.operand3" incoming="_SCKdKicoEeSLVrU2ifxtpw">
                <edge xmi:type="uml:ControlFlow" xmi:id="_SCKdQCcoEeSLVrU2ifxtpw" target="_SCKdlScoEeSLVrU2ifxtpw" source="_SCKdlCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdQScoEeSLVrU2ifxtpw" target="_SCKdlScoEeSLVrU2ifxtpw" source="_SCKdUCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SCKdQicoEeSLVrU2ifxtpw" target="_SCKdUycoEeSLVrU2ifxtpw" source="_SCKdlScoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKdQycoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                </edge>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SCKdRCcoEeSLVrU2ifxtpw" target="_SCKdjicoEeSLVrU2ifxtpw" source="_SCKdlScoEeSLVrU2ifxtpw">
                  <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKdRScoEeSLVrU2ifxtpw" name="Value(false)"/>
                </edge>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdRicoEeSLVrU2ifxtpw" target="_SCKdlicoEeSLVrU2ifxtpw" source="_SCKdWScoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdRycoEeSLVrU2ifxtpw" target="_SCKdlicoEeSLVrU2ifxtpw" source="_SCKdkCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdSCcoEeSLVrU2ifxtpw" target="_SCKdSScoEeSLVrU2ifxtpw" source="_SCKdlicoEeSLVrU2ifxtpw"/>
                <structuredNodeOutput xmi:id="_SCKdSScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@369dcc64.operand3.result" incoming="_SCKdSCcoEeSLVrU2ifxtpw" outgoing="_SCKdLScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdSicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdSycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
                <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SCKdTCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                  <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <object xmi:id="_SCKdTScoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_SCKcnCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdTicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdTycoEeSLVrU2ifxtpw" value="1"/>
                  </object>
                  <result xmi:id="_SCKdUCcoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_SCKdQScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdUScoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdUicoEeSLVrU2ifxtpw" value="1"/>
                  </result>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKdUycoEeSLVrU2ifxtpw" name="ConditionalTestExpression@391d680d.operand2" incoming="_SCKdQicoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdVCcoEeSLVrU2ifxtpw" target="_SCKddicoEeSLVrU2ifxtpw" source="_SCKdXScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdVScoEeSLVrU2ifxtpw" target="_SCKdeScoEeSLVrU2ifxtpw" source="_SCKddCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdVicoEeSLVrU2ifxtpw" target="_SCKdhScoEeSLVrU2ifxtpw" source="_SCKdfCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdVycoEeSLVrU2ifxtpw" target="_SCKdiCcoEeSLVrU2ifxtpw" source="_SCKdgCcoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdWCcoEeSLVrU2ifxtpw" target="_SCKdWScoEeSLVrU2ifxtpw" source="_SCKdiycoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_SCKdWScoEeSLVrU2ifxtpw" name="ConditionalTestExpression@391d680d.operand2.result" incoming="_SCKdWCcoEeSLVrU2ifxtpw" outgoing="_SCKdRicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdWicoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdWycoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKdXCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SCKdXScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_SCKdVCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdXicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdXycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SCKdYCcoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:ExpansionRegion" xmi:id="_SCKdYScoEeSLVrU2ifxtpw" name="CastExpression@6342d6b1" mode="parallel" outputElement="_SCKddCcoEeSLVrU2ifxtpw" inputElement="_SCKdcycoEeSLVrU2ifxtpw">
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdYicoEeSLVrU2ifxtpw" target="_SCKdaycoEeSLVrU2ifxtpw" source="_SCKdcScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdYycoEeSLVrU2ifxtpw" target="_SCKdcicoEeSLVrU2ifxtpw" source="_SCKdcScoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdZCcoEeSLVrU2ifxtpw" target="_SCKdcicoEeSLVrU2ifxtpw" source="_SCKdbicoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdZScoEeSLVrU2ifxtpw" target="_SCKdaScoEeSLVrU2ifxtpw" source="_SCKdcicoEeSLVrU2ifxtpw">
                      <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKdZicoEeSLVrU2ifxtpw" name="Value(true)" value="true"/>
                    </edge>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdZycoEeSLVrU2ifxtpw" target="_SCKdcScoEeSLVrU2ifxtpw" source="_SCKdcycoEeSLVrU2ifxtpw"/>
                    <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdaCcoEeSLVrU2ifxtpw" target="_SCKddCcoEeSLVrU2ifxtpw" source="_SCKdaScoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:MergeNode" xmi:id="_SCKdaScoEeSLVrU2ifxtpw" name="Merge(CastExpression@6342d6b1.operand)" incoming="_SCKdZScoEeSLVrU2ifxtpw" outgoing="_SCKdaCcoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:ReadIsClassifiedObjectAction" xmi:id="_SCKdaicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String)">
                      <classifier xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <object xmi:id="_SCKdaycoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).object" incoming="_SCKdYicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdbCcoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdbScoEeSLVrU2ifxtpw" value="1"/>
                      </object>
                      <result xmi:id="_SCKdbicoEeSLVrU2ifxtpw" name="ReadIsClassifiedObject(String).result" outgoing="_SCKdZCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdbycoEeSLVrU2ifxtpw" value="1"/>
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdcCcoEeSLVrU2ifxtpw" value="1"/>
                      </result>
                    </node>
                    <node xmi:type="uml:ForkNode" xmi:id="_SCKdcScoEeSLVrU2ifxtpw" name="Fork(ReadIsClassifiedObject(String).object)" incoming="_SCKdZycoEeSLVrU2ifxtpw" outgoing="_SCKdYicoEeSLVrU2ifxtpw _SCKdYycoEeSLVrU2ifxtpw"/>
                    <node xmi:type="uml:DecisionNode" xmi:id="_SCKdcicoEeSLVrU2ifxtpw" name="Decision(ReadIsClassifiedObject(String).result)" incoming="_SCKdYycoEeSLVrU2ifxtpw _SCKdZCcoEeSLVrU2ifxtpw" outgoing="_SCKdZScoEeSLVrU2ifxtpw" decisionInputFlow="_SCKdZCcoEeSLVrU2ifxtpw"/>
                  </node>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SCKdcycoEeSLVrU2ifxtpw" name="CastExpression@6342d6b1.inputElement" incoming="_SCKcnScoEeSLVrU2ifxtpw" outgoing="_SCKdZycoEeSLVrU2ifxtpw" regionAsInput="_SCKdYScoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ExpansionNode" xmi:id="_SCKddCcoEeSLVrU2ifxtpw" name="CastExpression@6342d6b1.outputElement" incoming="_SCKdaCcoEeSLVrU2ifxtpw" outgoing="_SCKdVScoEeSLVrU2ifxtpw" regionAsOutput="_SCKdYScoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKddScoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_SCKddicoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SCKdVCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKddycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdeCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_SCKdeScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SCKdVScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdeicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdeycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SCKdfCcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SCKdVicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdfScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdficoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKdfycoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;)">
                    <result xmi:id="_SCKdgCcoEeSLVrU2ifxtpw" name="Value(&quot;&quot;&quot;).result" outgoing="_SCKdVycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdgScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdgicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SCKdgycoEeSLVrU2ifxtpw" value="&quot;">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKdhCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_SCKdhScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SCKdVicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdhicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdhycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_SCKdiCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SCKdVycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdiScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdiicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SCKdiycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SCKdWCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdjCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdjScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKdjicoEeSLVrU2ifxtpw" name="ConditionalTestExpression@391d680d.operand3" incoming="_SCKdRCcoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdjycoEeSLVrU2ifxtpw" target="_SCKdkCcoEeSLVrU2ifxtpw" source="_SCKdkycoEeSLVrU2ifxtpw"/>
                  <structuredNodeOutput xmi:id="_SCKdkCcoEeSLVrU2ifxtpw" name="ConditionalTestExpression@391d680d.operand3.result" incoming="_SCKdjycoEeSLVrU2ifxtpw" outgoing="_SCKdRycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdkScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdkicoEeSLVrU2ifxtpw" value="*"/>
                  </structuredNodeOutput>
                  <node xmi:type="uml:MergeNode" xmi:id="_SCKdkycoEeSLVrU2ifxtpw" name="Merge(Fork(value2))" incoming="_SCKcnicoEeSLVrU2ifxtpw" outgoing="_SCKdjycoEeSLVrU2ifxtpw"/>
                </node>
                <node xmi:type="uml:InitialNode" xmi:id="_SCKdlCcoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@391d680d)" outgoing="_SCKdQCcoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:DecisionNode" xmi:id="_SCKdlScoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@391d680d)" incoming="_SCKdQCcoEeSLVrU2ifxtpw _SCKdQScoEeSLVrU2ifxtpw" outgoing="_SCKdQicoEeSLVrU2ifxtpw _SCKdRCcoEeSLVrU2ifxtpw" decisionInputFlow="_SCKdQScoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:MergeNode" xmi:id="_SCKdlicoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@391d680d.result)" incoming="_SCKdRicoEeSLVrU2ifxtpw _SCKdRycoEeSLVrU2ifxtpw" outgoing="_SCKdSCcoEeSLVrU2ifxtpw"/>
              </node>
              <node xmi:type="uml:InitialNode" xmi:id="_SCKdlycoEeSLVrU2ifxtpw" name="Initial(ConditionalTestExpression@369dcc64)" outgoing="_SCKdJicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:DecisionNode" xmi:id="_SCKdmCcoEeSLVrU2ifxtpw" name="Decision(ConditionalTestExpression@369dcc64)" incoming="_SCKdJicoEeSLVrU2ifxtpw _SCKdJycoEeSLVrU2ifxtpw" outgoing="_SCKdKCcoEeSLVrU2ifxtpw _SCKdKicoEeSLVrU2ifxtpw" decisionInputFlow="_SCKdJycoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:MergeNode" xmi:id="_SCKdmScoEeSLVrU2ifxtpw" name="Merge(ConditionalTestExpression@369dcc64.result)" incoming="_SCKdLCcoEeSLVrU2ifxtpw _SCKdLScoEeSLVrU2ifxtpw" outgoing="_SCKdHycoEeSLVrU2ifxtpw"/>
            </node>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKdmicoEeSLVrU2ifxtpw" name="ExpressionStatement@47df7523" incoming="_SCKcvycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdmycoEeSLVrU2ifxtpw" target="_SCKdnicoEeSLVrU2ifxtpw" source="_SCKdpicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCKdnCcoEeSLVrU2ifxtpw" target="_SCKdnScoEeSLVrU2ifxtpw" source="_SCKdpCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKdnScoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SCKdnCcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCKdnicoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SCKdmycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdnycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdoCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKdoScoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdoicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdoycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKdpCcoEeSLVrU2ifxtpw" name="Tuple@39cc8fb6" outgoing="_SCKdnCcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKdpScoEeSLVrU2ifxtpw" name="Value(&quot;&quot;)">
                <result xmi:id="_SCKdpicoEeSLVrU2ifxtpw" name="Value(&quot;&quot;).result" outgoing="_SCKdmycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdpycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdqCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SCKdqScoEeSLVrU2ifxtpw" value="">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKdqicoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_SCKdqycoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdrCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdrScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SCKdricoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_SCKdrycoEeSLVrU2ifxtpw" body="_SCKc9ScoEeSLVrU2ifxtpw _SCKdHicoEeSLVrU2ifxtpw _SCKdmicoEeSLVrU2ifxtpw" decider="_SCKc8icoEeSLVrU2ifxtpw" successorClause="_SCKdsCcoEeSLVrU2ifxtpw" test="_SCKcwCcoEeSLVrU2ifxtpw _SCKcyycoEeSLVrU2ifxtpw _SCKc0ycoEeSLVrU2ifxtpw _SCKc3ScoEeSLVrU2ifxtpw _SCKc5CcoEeSLVrU2ifxtpw _SCKc7icoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_SCKdsCcoEeSLVrU2ifxtpw" decider="_SCKdqycoEeSLVrU2ifxtpw" predecessorClause="_SCKdrycoEeSLVrU2ifxtpw" test="_SCKdqicoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKcnycoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_SCKclScoEeSLVrU2ifxtpw" parameter="_SCKcjCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKcoCcoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_SCKclScoEeSLVrU2ifxtpw" outgoing="_SCKcmicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKcoScoEeSLVrU2ifxtpw" name="Input(value1)" outgoing="_SCKclicoEeSLVrU2ifxtpw" parameter="_SCKcjycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKcoicoEeSLVrU2ifxtpw" name="Fork(value1)" incoming="_SCKclicoEeSLVrU2ifxtpw" outgoing="_SCKcmCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKcoycoEeSLVrU2ifxtpw" name="Input(value2)" outgoing="_SCKclycoEeSLVrU2ifxtpw" parameter="_SCKckicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKcpCcoEeSLVrU2ifxtpw" name="Fork(value2)" incoming="_SCKclycoEeSLVrU2ifxtpw" outgoing="_SCKcmScoEeSLVrU2ifxtpw _SCKcmycoEeSLVrU2ifxtpw _SCKcnCcoEeSLVrU2ifxtpw _SCKcnScoEeSLVrU2ifxtpw _SCKcnicoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKdsScoEeSLVrU2ifxtpw" name="AssertList" node="_SCKdyycoEeSLVrU2ifxtpw _SCKdzCcoEeSLVrU2ifxtpw _SCKdzScoEeSLVrU2ifxtpw _SCKdzicoEeSLVrU2ifxtpw _SCKdzycoEeSLVrU2ifxtpw _SCKd0CcoEeSLVrU2ifxtpw _SCKd0ScoEeSLVrU2ifxtpw" group="_SCKd0ScoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SCKdsicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SCKdsycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SCKdtCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SCKdtScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SCKdticoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SCKdtycoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKduCcoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKduScoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKduicoEeSLVrU2ifxtpw" name="list" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKduycoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdvCcoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKdvScoEeSLVrU2ifxtpw" name="expected" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKdvicoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKdvycoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdwCcoEeSLVrU2ifxtpw" target="_SCKdzCcoEeSLVrU2ifxtpw" source="_SCKdyycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdwScoEeSLVrU2ifxtpw" target="_SCKdzicoEeSLVrU2ifxtpw" source="_SCKdzScoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdwicoEeSLVrU2ifxtpw" target="_SCKd0CcoEeSLVrU2ifxtpw" source="_SCKdzycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdwycoEeSLVrU2ifxtpw" target="_SCKd6icoEeSLVrU2ifxtpw" source="_SCKdzCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdxCcoEeSLVrU2ifxtpw" target="_SCKd9CcoEeSLVrU2ifxtpw" source="_SCKdzicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdxScoEeSLVrU2ifxtpw" target="_SCKd-ycoEeSLVrU2ifxtpw" source="_SCKd0CcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdxicoEeSLVrU2ifxtpw" target="_SCKe6ycoEeSLVrU2ifxtpw" source="_SCKd0CcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdxycoEeSLVrU2ifxtpw" target="_SCKe7icoEeSLVrU2ifxtpw" source="_SCKdzicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdyCcoEeSLVrU2ifxtpw" target="_SCKe8ScoEeSLVrU2ifxtpw" source="_SCKdzCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdyScoEeSLVrU2ifxtpw" target="_SCKfKCcoEeSLVrU2ifxtpw" source="_SCKdzicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKdyicoEeSLVrU2ifxtpw" target="_SCKfLycoEeSLVrU2ifxtpw" source="_SCKd0CcoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCKd0ScoEeSLVrU2ifxtpw" name="Body(AssertList)">
        <edge xmi:type="uml:ControlFlow" xmi:id="_SCKd0icoEeSLVrU2ifxtpw" target="_SCKeAScoEeSLVrU2ifxtpw" source="_SCKd0ycoEeSLVrU2ifxtpw"/>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKd0ycoEeSLVrU2ifxtpw" name="ExpressionStatement@27dc9e9" outgoing="_SCKd0icoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKd1CcoEeSLVrU2ifxtpw" target="_SCKd2ScoEeSLVrU2ifxtpw" source="_SCKd8CcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKd1ScoEeSLVrU2ifxtpw" target="_SCKd3CcoEeSLVrU2ifxtpw" source="_SCKd9ycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKd1icoEeSLVrU2ifxtpw" target="_SCKd3ycoEeSLVrU2ifxtpw" source="_SCKd_icoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCKd1ycoEeSLVrU2ifxtpw" target="_SCKd2CcoEeSLVrU2ifxtpw" source="_SCKd4icoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKd2CcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SCKd1ycoEeSLVrU2ifxtpw" behavior="_SCKchicoEeSLVrU2ifxtpw">
            <argument xmi:id="_SCKd2ScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SCKd1CcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKd2icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKd2ycoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_SCKd3CcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SCKd1ScoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKd3ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKd3icoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <argument xmi:id="_SCKd3ycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SCKd1icoEeSLVrU2ifxtpw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKd4CcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKd4ScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKd4icoEeSLVrU2ifxtpw" name="Tuple@3475518a" outgoing="_SCKd1ycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKd4ycoEeSLVrU2ifxtpw" target="_SCKd7ScoEeSLVrU2ifxtpw" source="_SCKd5ScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKd5CcoEeSLVrU2ifxtpw" name="Value(&quot;->size()&quot;)">
              <result xmi:id="_SCKd5ScoEeSLVrU2ifxtpw" name="Value(&quot;->size()&quot;).result" outgoing="_SCKd4ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKd5icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKd5ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralString" xmi:id="_SCKd6CcoEeSLVrU2ifxtpw" value="->size()">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKd6ScoEeSLVrU2ifxtpw" name="Call(Concat)">
              <argument xmi:id="_SCKd6icoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SCKdwycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKd6ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKd7CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCKd7ScoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SCKd4ycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKd7icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKd7ycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKd8CcoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SCKd1CcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKd8ScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKd8icoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKd8ycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_SCKf8ycoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCKd9CcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_SCKdxCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKd9ScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKd9icoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SCKd9ycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_SCKd1ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKd-CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKd-ScoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKd-icoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_SCKf8ycoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCKd-ycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_SCKdxScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKd_CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKd_ScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <result xmi:id="_SCKd_icoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_SCKd1icoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKd_ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeACcoEeSLVrU2ifxtpw" value="1"/>
              </result>
            </node>
          </node>
        </node>
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKeAScoEeSLVrU2ifxtpw" name="ForStatement@2ffff864" incoming="_SCKd0icoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeAicoEeSLVrU2ifxtpw" target="_SCKfNScoEeSLVrU2ifxtpw" source="_SCKfGCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeAycoEeSLVrU2ifxtpw" target="_SCKe9ycoEeSLVrU2ifxtpw" source="_SCKfUCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeBCcoEeSLVrU2ifxtpw" target="_SCKe-icoEeSLVrU2ifxtpw" source="_SCKfTCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeBScoEeSLVrU2ifxtpw" target="_SCKe9CcoEeSLVrU2ifxtpw" source="_SCKfNScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCKeBicoEeSLVrU2ifxtpw" target="_SCKeBycoEeSLVrU2ifxtpw" source="_SCKfDycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:LoopNode" xmi:id="_SCKeBycoEeSLVrU2ifxtpw" name="Loop(ForStatement@2ffff864)" incoming="_SCKeBicoEeSLVrU2ifxtpw" bodyOutput="_SCKeNicoEeSLVrU2ifxtpw _SCKeOScoEeSLVrU2ifxtpw _SCKePCcoEeSLVrU2ifxtpw _SCKeuicoEeSLVrU2ifxtpw _SCKeyScoEeSLVrU2ifxtpw _SCKe1icoEeSLVrU2ifxtpw" bodyPart="_SCKeMCcoEeSLVrU2ifxtpw _SCKeMicoEeSLVrU2ifxtpw _SCKesycoEeSLVrU2ifxtpw _SCKevScoEeSLVrU2ifxtpw _SCKewicoEeSLVrU2ifxtpw _SCKezCcoEeSLVrU2ifxtpw _SCKe0ScoEeSLVrU2ifxtpw" decider="_SCKeLScoEeSLVrU2ifxtpw" isTestedFirst="true" test="_SCKeJicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeCCcoEeSLVrU2ifxtpw" target="_SCKeICcoEeSLVrU2ifxtpw" source="_SCKe2ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeCScoEeSLVrU2ifxtpw" target="_SCKeIScoEeSLVrU2ifxtpw" source="_SCKe3CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeCicoEeSLVrU2ifxtpw" target="_SCKeIicoEeSLVrU2ifxtpw" source="_SCKe3ycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeCycoEeSLVrU2ifxtpw" target="_SCKeIycoEeSLVrU2ifxtpw" source="_SCKe4icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeDCcoEeSLVrU2ifxtpw" target="_SCKeJCcoEeSLVrU2ifxtpw" source="_SCKe5ScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeDScoEeSLVrU2ifxtpw" target="_SCKeJScoEeSLVrU2ifxtpw" source="_SCKe6CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeDicoEeSLVrU2ifxtpw" target="_SCKeJycoEeSLVrU2ifxtpw" source="_SCKeJCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeDycoEeSLVrU2ifxtpw" target="_SCKeKicoEeSLVrU2ifxtpw" source="_SCKeJScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeECcoEeSLVrU2ifxtpw" target="_SCKeMScoEeSLVrU2ifxtpw" source="_SCKe4icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCKeEScoEeSLVrU2ifxtpw" target="_SCKeMicoEeSLVrU2ifxtpw" source="_SCKeMCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeEicoEeSLVrU2ifxtpw" target="_SCKeZicoEeSLVrU2ifxtpw" source="_SCKeMScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeEycoEeSLVrU2ifxtpw" target="_SCKejycoEeSLVrU2ifxtpw" source="_SCKeMScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeFCcoEeSLVrU2ifxtpw" target="_SCKemicoEeSLVrU2ifxtpw" source="_SCKeMScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeFScoEeSLVrU2ifxtpw" target="_SCKetCcoEeSLVrU2ifxtpw" source="_SCKeIycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeFicoEeSLVrU2ifxtpw" target="_SCKetycoEeSLVrU2ifxtpw" source="_SCKevicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeFycoEeSLVrU2ifxtpw" target="_SCKewycoEeSLVrU2ifxtpw" source="_SCKeJCcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeGCcoEeSLVrU2ifxtpw" target="_SCKexicoEeSLVrU2ifxtpw" source="_SCKezScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeGScoEeSLVrU2ifxtpw" target="_SCKe0ycoEeSLVrU2ifxtpw" source="_SCKeJScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeGicoEeSLVrU2ifxtpw" target="_SCKeXCcoEeSLVrU2ifxtpw" source="_SCKeIicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeGycoEeSLVrU2ifxtpw" target="_SCKehicoEeSLVrU2ifxtpw" source="_SCKeIScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeHCcoEeSLVrU2ifxtpw" target="_SCKekScoEeSLVrU2ifxtpw" source="_SCKeICcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeHScoEeSLVrU2ifxtpw" target="_SCKenScoEeSLVrU2ifxtpw" source="_SCKeICcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeHicoEeSLVrU2ifxtpw" target="_SCKepScoEeSLVrU2ifxtpw" source="_SCKeIScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeHycoEeSLVrU2ifxtpw" target="_SCKerScoEeSLVrU2ifxtpw" source="_SCKeIicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCKeICcoEeSLVrU2ifxtpw" name="Fork(ForStatement@2ffff864.loopVariable(expected))" incoming="_SCKeCCcoEeSLVrU2ifxtpw" outgoing="_SCKeHCcoEeSLVrU2ifxtpw _SCKeHScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCKeIScoEeSLVrU2ifxtpw" name="Fork(ForStatement@2ffff864.loopVariable(list))" incoming="_SCKeCScoEeSLVrU2ifxtpw" outgoing="_SCKeGycoEeSLVrU2ifxtpw _SCKeHicoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCKeIicoEeSLVrU2ifxtpw" name="Fork(ForStatement@2ffff864.loopVariable(label))" incoming="_SCKeCicoEeSLVrU2ifxtpw" outgoing="_SCKeGicoEeSLVrU2ifxtpw _SCKeHycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCKeIycoEeSLVrU2ifxtpw" name="Fork(ForStatement@2ffff864.loopVariable(i))" incoming="_SCKeCycoEeSLVrU2ifxtpw" outgoing="_SCKeFScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCKeJCcoEeSLVrU2ifxtpw" name="Fork(ForStatement@2ffff864.loopVariable(counter))" incoming="_SCKeDCcoEeSLVrU2ifxtpw" outgoing="_SCKeDicoEeSLVrU2ifxtpw _SCKeFycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ForkNode" xmi:id="_SCKeJScoEeSLVrU2ifxtpw" name="Fork(ForStatement@2ffff864.loopVariable(upper))" incoming="_SCKeDScoEeSLVrU2ifxtpw" outgoing="_SCKeDycoEeSLVrU2ifxtpw _SCKeGScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKeJicoEeSLVrU2ifxtpw" name="Call(&lt;=)">
              <argument xmi:id="_SCKeJycoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(x)" incoming="_SCKeDicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeKCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeKScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCKeKicoEeSLVrU2ifxtpw" name="Call(&lt;=).argument(y)" incoming="_SCKeDycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeKycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeLCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKeLScoEeSLVrU2ifxtpw" name="Call(&lt;=).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeLicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeLycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-le"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKeMCcoEeSLVrU2ifxtpw" name="Values(ForStatement@2ffff864)" outgoing="_SCKeEScoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ForkNode" xmi:id="_SCKeMScoEeSLVrU2ifxtpw" name="Fork(i)" incoming="_SCKeECcoEeSLVrU2ifxtpw" outgoing="_SCKeEicoEeSLVrU2ifxtpw _SCKeEycoEeSLVrU2ifxtpw _SCKeFCcoEeSLVrU2ifxtpw"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKeMicoEeSLVrU2ifxtpw" name="Body(ForStatement@2ffff864)" incoming="_SCKeEScoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeMycoEeSLVrU2ifxtpw" target="_SCKeNicoEeSLVrU2ifxtpw" source="_SCKeoCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeNCcoEeSLVrU2ifxtpw" target="_SCKeOScoEeSLVrU2ifxtpw" source="_SCKeqCcoEeSLVrU2ifxtpw"/>
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeNScoEeSLVrU2ifxtpw" target="_SCKePCcoEeSLVrU2ifxtpw" source="_SCKesCcoEeSLVrU2ifxtpw"/>
              <structuredNodeOutput xmi:id="_SCKeNicoEeSLVrU2ifxtpw" name="expected" incoming="_SCKeMycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeNycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeOCcoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_SCKeOScoEeSLVrU2ifxtpw" name="list" incoming="_SCKeNCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeOicoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeOycoEeSLVrU2ifxtpw" value="*"/>
              </structuredNodeOutput>
              <structuredNodeOutput xmi:id="_SCKePCcoEeSLVrU2ifxtpw" name="label" incoming="_SCKeNScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKePScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKePicoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKePycoEeSLVrU2ifxtpw" name="ExpressionStatement@10192d31">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeQCcoEeSLVrU2ifxtpw" target="_SCKeRScoEeSLVrU2ifxtpw" source="_SCKegicoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeQScoEeSLVrU2ifxtpw" target="_SCKeSCcoEeSLVrU2ifxtpw" source="_SCKejCcoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeQicoEeSLVrU2ifxtpw" target="_SCKeSycoEeSLVrU2ifxtpw" source="_SCKelycoEeSLVrU2ifxtpw"/>
                <edge xmi:type="uml:ControlFlow" xmi:id="_SCKeQycoEeSLVrU2ifxtpw" target="_SCKeRCcoEeSLVrU2ifxtpw" source="_SCKeTicoEeSLVrU2ifxtpw"/>
                <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKeRCcoEeSLVrU2ifxtpw" name="Call(AssertEqual)" incoming="_SCKeQycoEeSLVrU2ifxtpw" behavior="_SCKchicoEeSLVrU2ifxtpw">
                  <argument xmi:id="_SCKeRScoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(label)" incoming="_SCKeQCcoEeSLVrU2ifxtpw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeRicoEeSLVrU2ifxtpw" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeRycoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SCKeSCcoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value1)" incoming="_SCKeQScoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeSScoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeSicoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                  <argument xmi:id="_SCKeSycoEeSLVrU2ifxtpw" name="Call(AssertEqual).argument(value2)" incoming="_SCKeQicoEeSLVrU2ifxtpw">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeTCcoEeSLVrU2ifxtpw"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeTScoEeSLVrU2ifxtpw" value="1"/>
                  </argument>
                </node>
                <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKeTicoEeSLVrU2ifxtpw" name="Tuple@27884bf0" outgoing="_SCKeQycoEeSLVrU2ifxtpw">
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeTycoEeSLVrU2ifxtpw" target="_SCKeXycoEeSLVrU2ifxtpw" source="_SCKeVycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeUCcoEeSLVrU2ifxtpw" target="_SCKebScoEeSLVrU2ifxtpw" source="_SCKeYicoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeUScoEeSLVrU2ifxtpw" target="_SCKecCcoEeSLVrU2ifxtpw" source="_SCKeaScoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeUicoEeSLVrU2ifxtpw" target="_SCKefCcoEeSLVrU2ifxtpw" source="_SCKecycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeUycoEeSLVrU2ifxtpw" target="_SCKefycoEeSLVrU2ifxtpw" source="_SCKedycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeVCcoEeSLVrU2ifxtpw" target="_SCKeiScoEeSLVrU2ifxtpw" source="_SCKejycoEeSLVrU2ifxtpw"/>
                  <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKeVScoEeSLVrU2ifxtpw" target="_SCKelCcoEeSLVrU2ifxtpw" source="_SCKemicoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKeVicoEeSLVrU2ifxtpw" name="Value(&quot;[&quot;)">
                    <result xmi:id="_SCKeVycoEeSLVrU2ifxtpw" name="Value(&quot;[&quot;).result" outgoing="_SCKeTycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeWCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeWScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SCKeWicoEeSLVrU2ifxtpw" value="[">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKeWycoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_SCKeXCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SCKeGicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeXScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeXicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_SCKeXycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SCKeTycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeYCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeYScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SCKeYicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SCKeUCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeYycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeZCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKeZScoEeSLVrU2ifxtpw" name="Call(ToString)">
                    <argument xmi:id="_SCKeZicoEeSLVrU2ifxtpw" name="Call(ToString).argument(x)" incoming="_SCKeEicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeZycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeaCcoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SCKeaScoEeSLVrU2ifxtpw" name="Call(ToString).result(result)" outgoing="_SCKeUScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeaicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeaycoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-ToString"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKebCcoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_SCKebScoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SCKeUCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKebicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKebycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_SCKecCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SCKeUScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKecScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKecicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SCKecycoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SCKeUicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKedCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKedScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKedicoEeSLVrU2ifxtpw" name="Value(&quot;]&quot;)">
                    <result xmi:id="_SCKedycoEeSLVrU2ifxtpw" name="Value(&quot;]&quot;).result" outgoing="_SCKeUycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeeCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeeScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <value xmi:type="uml:LiteralString" xmi:id="_SCKeeicoEeSLVrU2ifxtpw" value="]">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </value>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKeeycoEeSLVrU2ifxtpw" name="Call(Concat)">
                    <argument xmi:id="_SCKefCcoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SCKeUicoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKefScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeficoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <argument xmi:id="_SCKefycoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SCKeUycoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKegCcoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKegScoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SCKegicoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SCKeQCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKegycoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKehCcoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
                  </node>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKehScoEeSLVrU2ifxtpw" name="Call(At)">
                    <argument xmi:id="_SCKehicoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_SCKeGycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKehycoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeiCcoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_SCKeiScoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_SCKeVCcoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeiicoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeiycoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SCKejCcoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_SCKeQScoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKejScoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKejicoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SCKejycoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_SCKeEycoEeSLVrU2ifxtpw" outgoing="_SCKeVCcoEeSLVrU2ifxtpw"/>
                  <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKekCcoEeSLVrU2ifxtpw" name="Call(At)">
                    <argument xmi:id="_SCKekScoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_SCKeHCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKekicoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKekycoEeSLVrU2ifxtpw" value="*"/>
                    </argument>
                    <argument xmi:id="_SCKelCcoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_SCKeVScoEeSLVrU2ifxtpw">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKelScoEeSLVrU2ifxtpw" value="1"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKelicoEeSLVrU2ifxtpw" value="1"/>
                    </argument>
                    <result xmi:id="_SCKelycoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_SCKeQicoEeSLVrU2ifxtpw">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKemCcoEeSLVrU2ifxtpw"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKemScoEeSLVrU2ifxtpw" value="1"/>
                    </result>
                    <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
                  </node>
                  <node xmi:type="uml:ForkNode" xmi:id="_SCKemicoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_SCKeFCcoEeSLVrU2ifxtpw" outgoing="_SCKeVScoEeSLVrU2ifxtpw"/>
                </node>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKemycoEeSLVrU2ifxtpw" name="Passthru(Fork(expected))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKenCcoEeSLVrU2ifxtpw" target="_SCKeoCcoEeSLVrU2ifxtpw" source="_SCKenScoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SCKenScoEeSLVrU2ifxtpw" name="Passthru(Fork(expected)).input" incoming="_SCKeHScoEeSLVrU2ifxtpw" outgoing="_SCKenCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKenicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKenycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_SCKeoCcoEeSLVrU2ifxtpw" name="Passthru(Fork(expected)).output" incoming="_SCKenCcoEeSLVrU2ifxtpw" outgoing="_SCKeMycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeoScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeoicoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKeoycoEeSLVrU2ifxtpw" name="Passthru(Fork(list))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKepCcoEeSLVrU2ifxtpw" target="_SCKeqCcoEeSLVrU2ifxtpw" source="_SCKepScoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SCKepScoEeSLVrU2ifxtpw" name="Passthru(Fork(list)).input" incoming="_SCKeHicoEeSLVrU2ifxtpw" outgoing="_SCKepCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKepicoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKepycoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_SCKeqCcoEeSLVrU2ifxtpw" name="Passthru(Fork(list)).output" incoming="_SCKepCcoEeSLVrU2ifxtpw" outgoing="_SCKeNCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeqScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeqicoEeSLVrU2ifxtpw" value="*"/>
                </structuredNodeOutput>
              </node>
              <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKeqycoEeSLVrU2ifxtpw" name="Passthru(Fork(label))">
                <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKerCcoEeSLVrU2ifxtpw" target="_SCKesCcoEeSLVrU2ifxtpw" source="_SCKerScoEeSLVrU2ifxtpw"/>
                <structuredNodeInput xmi:id="_SCKerScoEeSLVrU2ifxtpw" name="Passthru(Fork(label)).input" incoming="_SCKeHycoEeSLVrU2ifxtpw" outgoing="_SCKerCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKericoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKerycoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeInput>
                <structuredNodeOutput xmi:id="_SCKesCcoEeSLVrU2ifxtpw" name="Passthru(Fork(label)).output" incoming="_SCKerCcoEeSLVrU2ifxtpw" outgoing="_SCKeNScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKesScoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKesicoEeSLVrU2ifxtpw" value="1"/>
                </structuredNodeOutput>
              </node>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKesycoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_SCKetCcoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_SCKeFScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKetScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeticoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCKetycoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_SCKeFicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeuCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeuScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKeuicoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeuycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKevCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKevScoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_SCKevicoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SCKeFicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKevycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKewCcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SCKewScoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKewicoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_SCKewycoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_SCKeFycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKexCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKexScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCKexicoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_SCKeGCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKexycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeyCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKeyScoEeSLVrU2ifxtpw" name="Call(+).result(result)">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKeyicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKeyycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKezCcoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_SCKezScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SCKeGCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKezicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKezycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SCKe0CcoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKe0ScoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper))">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKe0icoEeSLVrU2ifxtpw" target="_SCKe1icoEeSLVrU2ifxtpw" source="_SCKe0ycoEeSLVrU2ifxtpw"/>
              <structuredNodeInput xmi:id="_SCKe0ycoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).input" incoming="_SCKeGScoEeSLVrU2ifxtpw" outgoing="_SCKe0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe1CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe1ScoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeInput>
              <structuredNodeOutput xmi:id="_SCKe1icoEeSLVrU2ifxtpw" name="Passthru(Passthru(upper)).output" incoming="_SCKe0icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe1ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe2CcoEeSLVrU2ifxtpw" value="1"/>
              </structuredNodeOutput>
            </node>
            <loopVariable xmi:id="_SCKe2ScoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.loopVariable(expected)" outgoing="_SCKeCCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe2icoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe2ycoEeSLVrU2ifxtpw" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_SCKe3CcoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.loopVariable(list)" outgoing="_SCKeCScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe3ScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe3icoEeSLVrU2ifxtpw" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_SCKe3ycoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.loopVariable(label)" outgoing="_SCKeCicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe4CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe4ScoEeSLVrU2ifxtpw" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_SCKe4icoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.loopVariable(i)" outgoing="_SCKeCycoEeSLVrU2ifxtpw _SCKeECcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe4ycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe5CcoEeSLVrU2ifxtpw" value="*"/>
            </loopVariable>
            <loopVariable xmi:id="_SCKe5ScoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.loopVariable(counter)" outgoing="_SCKeDCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe5icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe5ycoEeSLVrU2ifxtpw" value="1"/>
            </loopVariable>
            <loopVariable xmi:id="_SCKe6CcoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.loopVariable(upper)" outgoing="_SCKeDScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe6ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe6icoEeSLVrU2ifxtpw" value="1"/>
            </loopVariable>
            <loopVariableInput xmi:id="_SCKe6ycoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.loopVariableInput(expected)" incoming="_SCKdxicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe7CcoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe7ScoEeSLVrU2ifxtpw" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_SCKe7icoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.loopVariableInput(list)" incoming="_SCKdxycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe7ycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe8CcoEeSLVrU2ifxtpw" value="*"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_SCKe8ScoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.loopVariableInput(label)" incoming="_SCKdyCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe8icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe8ycoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_SCKe9CcoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.loopVariableInput(i)" incoming="_SCKeBScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe9ScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe9icoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_SCKe9ycoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.loopVariableInput(counter)" incoming="_SCKeAycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe-CcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe-ScoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <loopVariableInput xmi:id="_SCKe-icoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.loopVariableInput(upper)" incoming="_SCKeBCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe-ycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe_CcoEeSLVrU2ifxtpw" value="1"/>
            </loopVariableInput>
            <result xmi:id="_SCKe_ScoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.result(expected)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKe_icoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKe_ycoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <result xmi:id="_SCKfACcoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.result(list)" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfAScoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfAicoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <result xmi:id="_SCKfAycoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.result(label)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfBCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfBScoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <result xmi:id="_SCKfBicoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.result(i)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfBycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfCCcoEeSLVrU2ifxtpw" value="*"/>
            </result>
            <result xmi:id="_SCKfCScoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.result(counter)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfCicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfCycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <result xmi:id="_SCKfDCcoEeSLVrU2ifxtpw" name="ForStatement@2ffff864.result(upper)" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfDScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfDicoEeSLVrU2ifxtpw" value="1"/>
            </result>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKfDycoEeSLVrU2ifxtpw" name="LoopVariables(ForStatement@2ffff864)" outgoing="_SCKeBicoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfECcoEeSLVrU2ifxtpw" target="_SCKfHScoEeSLVrU2ifxtpw" source="_SCKfKycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfEScoEeSLVrU2ifxtpw" target="_SCKfICcoEeSLVrU2ifxtpw" source="_SCKfMicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCKfEicoEeSLVrU2ifxtpw" target="_SCKfHCcoEeSLVrU2ifxtpw" source="_SCKfJicoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfEycoEeSLVrU2ifxtpw" target="_SCKfNycoEeSLVrU2ifxtpw" source="_SCKfIycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfFCcoEeSLVrU2ifxtpw" target="_SCKfOicoEeSLVrU2ifxtpw" source="_SCKfNScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfFScoEeSLVrU2ifxtpw" target="_SCKfRicoEeSLVrU2ifxtpw" source="_SCKfPScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfFicoEeSLVrU2ifxtpw" target="_SCKfSScoEeSLVrU2ifxtpw" source="_SCKfQScoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKfFycoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_SCKfGCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SCKeAicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfGScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfGicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SCKfGycoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKfHCcoEeSLVrU2ifxtpw" name="Call(Min)" incoming="_SCKfEicoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCKfHScoEeSLVrU2ifxtpw" name="Call(Min).argument(x)" incoming="_SCKfECcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfHicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfHycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCKfICcoEeSLVrU2ifxtpw" name="Call(Min).argument(y)" incoming="_SCKfEScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfIScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfIicoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKfIycoEeSLVrU2ifxtpw" name="Call(Min).result(result)" outgoing="_SCKfEycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfJCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfJScoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-Min"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKfJicoEeSLVrU2ifxtpw" name="Tuple@65063ac8" outgoing="_SCKfEicoEeSLVrU2ifxtpw">
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKfJycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_SCKf8ycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SCKfKCcoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_SCKdyScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfKScoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfKicoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SCKfKycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_SCKfECcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfLCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfLScoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKfLicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__)" behavior="_SCKf8ycoEeSLVrU2ifxtpw">
                <argument xmi:id="_SCKfLycoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).argument(seq)" incoming="_SCKdyicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfMCcoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfMScoEeSLVrU2ifxtpw" value="*"/>
                </argument>
                <result xmi:id="_SCKfMicoEeSLVrU2ifxtpw" name="Call($$Alf$Library$CollectionFunctions$size__any__).result()" outgoing="_SCKfEScoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfMycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfNCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCKfNScoEeSLVrU2ifxtpw" name="Fork(Value(1).result)" incoming="_SCKeAicoEeSLVrU2ifxtpw" outgoing="_SCKeBScoEeSLVrU2ifxtpw _SCKfFCcoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKfNicoEeSLVrU2ifxtpw" name="Call(-)">
              <argument xmi:id="_SCKfNycoEeSLVrU2ifxtpw" name="Call(-).argument(x)" incoming="_SCKfEycoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfOCcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfOScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCKfOicoEeSLVrU2ifxtpw" name="Call(-).argument(y)" incoming="_SCKfFCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfOycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfPCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKfPScoEeSLVrU2ifxtpw" name="Call(-).result(result)" outgoing="_SCKfFScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfPicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfPycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-minus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKfQCcoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_SCKfQScoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SCKfFicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfQicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfQycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SCKfRCcoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKfRScoEeSLVrU2ifxtpw" name="Call(+)">
              <argument xmi:id="_SCKfRicoEeSLVrU2ifxtpw" name="Call(+).argument(x)" incoming="_SCKfFScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfRycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfSCcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <argument xmi:id="_SCKfSScoEeSLVrU2ifxtpw" name="Call(+).argument(y)" incoming="_SCKfFicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfSicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfSycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKfTCcoEeSLVrU2ifxtpw" name="Call(+).result(result)" outgoing="_SCKeBCcoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfTScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfTicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-IntegerFunctions-plus"/>
            </node>
            <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKfTycoEeSLVrU2ifxtpw" name="Value(1)">
              <result xmi:id="_SCKfUCcoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SCKeAycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfUScoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfUicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <value xmi:type="uml:LiteralInteger" xmi:id="_SCKfUycoEeSLVrU2ifxtpw" value="1">
                <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
              </value>
            </node>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKdyycoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_SCKdwCcoEeSLVrU2ifxtpw" parameter="_SCKdtycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKdzCcoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_SCKdwCcoEeSLVrU2ifxtpw" outgoing="_SCKdwycoEeSLVrU2ifxtpw _SCKdyCcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKdzScoEeSLVrU2ifxtpw" name="Input(list)" outgoing="_SCKdwScoEeSLVrU2ifxtpw" parameter="_SCKduicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKdzicoEeSLVrU2ifxtpw" name="Fork(list)" incoming="_SCKdwScoEeSLVrU2ifxtpw" outgoing="_SCKdxCcoEeSLVrU2ifxtpw _SCKdyScoEeSLVrU2ifxtpw _SCKdxycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKdzycoEeSLVrU2ifxtpw" name="Input(expected)" outgoing="_SCKdwicoEeSLVrU2ifxtpw" parameter="_SCKdvScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKd0CcoEeSLVrU2ifxtpw" name="Fork(expected)" incoming="_SCKdwicoEeSLVrU2ifxtpw" outgoing="_SCKdxScoEeSLVrU2ifxtpw _SCKdyicoEeSLVrU2ifxtpw _SCKdxicoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKfVCcoEeSLVrU2ifxtpw" name="AssertTrue" node="_SCKfZCcoEeSLVrU2ifxtpw _SCKfZScoEeSLVrU2ifxtpw _SCKfZicoEeSLVrU2ifxtpw _SCKfZycoEeSLVrU2ifxtpw _SCKfaCcoEeSLVrU2ifxtpw" group="_SCKfaCcoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SCKfVScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SCKfVicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SCKfVycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SCKfWCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SCKfWScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SCKfWicoEeSLVrU2ifxtpw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfWycoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfXCcoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCKfXScoEeSLVrU2ifxtpw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfXicoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfXycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfYCcoEeSLVrU2ifxtpw" target="_SCKfZScoEeSLVrU2ifxtpw" source="_SCKfZCcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfYScoEeSLVrU2ifxtpw" target="_SCKfZycoEeSLVrU2ifxtpw" source="_SCKfZicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfYicoEeSLVrU2ifxtpw" target="_SCKfgycoEeSLVrU2ifxtpw" source="_SCKfZycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfYycoEeSLVrU2ifxtpw" target="_SCKfqicoEeSLVrU2ifxtpw" source="_SCKfZScoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCKfaCcoEeSLVrU2ifxtpw" name="Body(AssertTrue)">
        <node xmi:type="uml:ConditionalNode" xmi:id="_SCKfaScoEeSLVrU2ifxtpw" name="IfStatement@3871c36a">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfaicoEeSLVrU2ifxtpw" target="_SCKfeicoEeSLVrU2ifxtpw" source="_SCKfgycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfaycoEeSLVrU2ifxtpw" target="_SCKfhScoEeSLVrU2ifxtpw" source="_SCKfgycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfbCcoEeSLVrU2ifxtpw" target="_SCKfiycoEeSLVrU2ifxtpw" source="_SCKfiCcoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfbScoEeSLVrU2ifxtpw" target="_SCKfjCcoEeSLVrU2ifxtpw" source="_SCKffScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfbicoEeSLVrU2ifxtpw" target="_SCKfjScoEeSLVrU2ifxtpw" source="_SCKfiycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfbycoEeSLVrU2ifxtpw" target="_SCKfjScoEeSLVrU2ifxtpw" source="_SCKfiycoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfcCcoEeSLVrU2ifxtpw" target="_SCKfjCcoEeSLVrU2ifxtpw" source="_SCKfjScoEeSLVrU2ifxtpw">
            <guard xmi:type="uml:LiteralBoolean" xmi:id="_SCKfcScoEeSLVrU2ifxtpw" name="Value(false)"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfcicoEeSLVrU2ifxtpw" target="_SCKfgCcoEeSLVrU2ifxtpw" source="_SCKfdScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfcycoEeSLVrU2ifxtpw" target="_SCKfjycoEeSLVrU2ifxtpw" source="_SCKfjCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKfdCcoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_SCKfdScoEeSLVrU2ifxtpw" name="Value(true).result" outgoing="_SCKfcicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfdicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfdycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SCKfeCcoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <node xmi:type="uml:TestIdentityAction" xmi:id="_SCKfeScoEeSLVrU2ifxtpw" name="Test(==)">
            <first xmi:id="_SCKfeicoEeSLVrU2ifxtpw" name="Test(==).first" incoming="_SCKfaicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfeycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKffCcoEeSLVrU2ifxtpw" value="1"/>
            </first>
            <result xmi:id="_SCKffScoEeSLVrU2ifxtpw" name="Test(==).result" outgoing="_SCKfbScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfficoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKffycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <second xmi:id="_SCKfgCcoEeSLVrU2ifxtpw" name="Test(==).second" incoming="_SCKfcicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfgScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfgicoEeSLVrU2ifxtpw" value="1"/>
            </second>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SCKfgycoEeSLVrU2ifxtpw" name="Fork(Fork(condition))" incoming="_SCKfYicoEeSLVrU2ifxtpw" outgoing="_SCKfaicoEeSLVrU2ifxtpw _SCKfaycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKfhCcoEeSLVrU2ifxtpw" name="Call(NotEmpty)">
            <argument xmi:id="_SCKfhScoEeSLVrU2ifxtpw" name="Call(NotEmpty).argument(seq)" incoming="_SCKfaycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfhicoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfhycoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SCKfiCcoEeSLVrU2ifxtpw" name="Call(NotEmpty).result()" outgoing="_SCKfbCcoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfiScoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfiicoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-NotEmpty"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="_SCKfiycoEeSLVrU2ifxtpw" name="Fork(Call(NotEmpty).result())" incoming="_SCKfbCcoEeSLVrU2ifxtpw" outgoing="_SCKfbicoEeSLVrU2ifxtpw _SCKfbycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:MergeNode" xmi:id="_SCKfjCcoEeSLVrU2ifxtpw" name="Merge(Test(==).result, Call(NotEmpty).result())" incoming="_SCKfbScoEeSLVrU2ifxtpw _SCKfcCcoEeSLVrU2ifxtpw" outgoing="_SCKfcycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:DecisionNode" xmi:id="_SCKfjScoEeSLVrU2ifxtpw" name="Decision(Call(NotEmpty).result())" incoming="_SCKfbicoEeSLVrU2ifxtpw _SCKfbycoEeSLVrU2ifxtpw" outgoing="_SCKfcCcoEeSLVrU2ifxtpw" decisionInputFlow="_SCKfbycoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKfjicoEeSLVrU2ifxtpw" name="Call(Not)">
            <argument xmi:id="_SCKfjycoEeSLVrU2ifxtpw" name="Call(Not).argument(x)" incoming="_SCKfcycoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfkCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfkScoEeSLVrU2ifxtpw" value="1"/>
            </argument>
            <result xmi:id="_SCKfkicoEeSLVrU2ifxtpw" name="Call(Not).result(result)">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfkycoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKflCcoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-BooleanFunctions-Not"/>
          </node>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKflScoEeSLVrU2ifxtpw" name="ExpressionStatement@19f85604">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKflicoEeSLVrU2ifxtpw" target="_SCKfmScoEeSLVrU2ifxtpw" source="_SCKfrScoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCKflycoEeSLVrU2ifxtpw" target="_SCKfmCcoEeSLVrU2ifxtpw" source="_SCKfnycoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKfmCcoEeSLVrU2ifxtpw" name="Call(WriteLine)" incoming="_SCKflycoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCKfmScoEeSLVrU2ifxtpw" name="Call(WriteLine).argument(value)" incoming="_SCKflicoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfmicoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfmycoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKfnCcoEeSLVrU2ifxtpw" name="Call(WriteLine).result(errorStatus)">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfnScoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfnicoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/fUML.library.uml#BasicInputOutput-WriteLine"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKfnycoEeSLVrU2ifxtpw" name="Tuple@2df7c110" outgoing="_SCKflycoEeSLVrU2ifxtpw">
              <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfoCcoEeSLVrU2ifxtpw" target="_SCKfpycoEeSLVrU2ifxtpw" source="_SCKfoicoEeSLVrU2ifxtpw"/>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKfoScoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;)">
                <result xmi:id="_SCKfoicoEeSLVrU2ifxtpw" name="Value(&quot;FAILED: &quot;).result" outgoing="_SCKfoCcoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfoycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfpCcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralString" xmi:id="_SCKfpScoEeSLVrU2ifxtpw" value="FAILED: ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </value>
              </node>
              <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKfpicoEeSLVrU2ifxtpw" name="Call(Concat)">
                <argument xmi:id="_SCKfpycoEeSLVrU2ifxtpw" name="Call(Concat).argument(x)" incoming="_SCKfoCcoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfqCcoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfqScoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <argument xmi:id="_SCKfqicoEeSLVrU2ifxtpw" name="Call(Concat).argument(y)" incoming="_SCKfYycoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfqycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfrCcoEeSLVrU2ifxtpw" value="1"/>
                </argument>
                <result xmi:id="_SCKfrScoEeSLVrU2ifxtpw" name="Call(Concat).result(result)" outgoing="_SCKflicoEeSLVrU2ifxtpw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfricoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfrycoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <behavior xmi:type="uml:FunctionBehavior" href="Libraries/fUML.library.uml#PrimitiveBehaviors-StringFunctions-Concat"/>
              </node>
            </node>
          </node>
          <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKfsCcoEeSLVrU2ifxtpw" name="Value(true)">
            <result xmi:id="_SCKfsScoEeSLVrU2ifxtpw" name="Value(true).result" isOrdered="true" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfsicoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfsycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <value xmi:type="uml:LiteralBoolean" xmi:id="_SCKftCcoEeSLVrU2ifxtpw" value="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </value>
          </node>
          <clause xmi:id="_SCKftScoEeSLVrU2ifxtpw" body="_SCKflScoEeSLVrU2ifxtpw" decider="_SCKfkicoEeSLVrU2ifxtpw" successorClause="_SCKfticoEeSLVrU2ifxtpw" test="_SCKfdCcoEeSLVrU2ifxtpw _SCKfeScoEeSLVrU2ifxtpw _SCKfhCcoEeSLVrU2ifxtpw _SCKfjicoEeSLVrU2ifxtpw"/>
          <clause xmi:id="_SCKfticoEeSLVrU2ifxtpw" decider="_SCKfsScoEeSLVrU2ifxtpw" predecessorClause="_SCKftScoEeSLVrU2ifxtpw" test="_SCKfsCcoEeSLVrU2ifxtpw"/>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKfZCcoEeSLVrU2ifxtpw" name="Input(label)" outgoing="_SCKfYCcoEeSLVrU2ifxtpw" parameter="_SCKfWicoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKfZScoEeSLVrU2ifxtpw" name="Fork(label)" incoming="_SCKfYCcoEeSLVrU2ifxtpw" outgoing="_SCKfYycoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKfZicoEeSLVrU2ifxtpw" name="Input(condition)" outgoing="_SCKfYScoEeSLVrU2ifxtpw" parameter="_SCKfXScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKfZycoEeSLVrU2ifxtpw" name="Fork(condition)" incoming="_SCKfYScoEeSLVrU2ifxtpw" outgoing="_SCKfYicoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKftycoEeSLVrU2ifxtpw" name="Write" node="_SCKfwicoEeSLVrU2ifxtpw _SCKfwycoEeSLVrU2ifxtpw _SCKfxCcoEeSLVrU2ifxtpw" group="_SCKfxCcoEeSLVrU2ifxtpw">
      <packageImport xmi:id="_SCKfuCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes"/>
      </packageImport>
      <packageImport xmi:id="_SCKfuScoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors"/>
      </packageImport>
      <packageImport xmi:id="_SCKfuicoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-BasicInputOutput"/>
      </packageImport>
      <packageImport xmi:id="_SCKfuycoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-CollectionFunctions"/>
      </packageImport>
      <packageImport xmi:id="_SCKfvCcoEeSLVrU2ifxtpw" visibility="private">
        <importedPackage href="Libraries/Alf.library.uml#Alf-Library-CollectionClasses"/>
      </packageImport>
      <ownedParameter xmi:id="_SCKfvScoEeSLVrU2ifxtpw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfvicoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfvycoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfwCcoEeSLVrU2ifxtpw" target="_SCKfwycoEeSLVrU2ifxtpw" source="_SCKfwicoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfwScoEeSLVrU2ifxtpw" target="_SCKfyycoEeSLVrU2ifxtpw" source="_SCKfwycoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCKfxCcoEeSLVrU2ifxtpw" name="Body(Write)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKfxScoEeSLVrU2ifxtpw" name="ExpressionStatement@59cbd975">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfxicoEeSLVrU2ifxtpw" target="_SCKf2CcoEeSLVrU2ifxtpw" source="_SCKf5ScoEeSLVrU2ifxtpw"/>
          <edge xmi:type="uml:ControlFlow" xmi:id="_SCKfxycoEeSLVrU2ifxtpw" target="_SCKfyCcoEeSLVrU2ifxtpw" source="_SCKf2ScoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:ExpansionRegion" xmi:id="_SCKfyCcoEeSLVrU2ifxtpw" name="Collect(Call(write))" incoming="_SCKfxycoEeSLVrU2ifxtpw" mode="parallel" inputElement="_SCKf2CcoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfyScoEeSLVrU2ifxtpw" target="_SCKfzycoEeSLVrU2ifxtpw" source="_SCKfyycoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKfyicoEeSLVrU2ifxtpw" target="_SCKf1ScoEeSLVrU2ifxtpw" source="_SCKf2CcoEeSLVrU2ifxtpw"/>
            <structuredNodeInput xmi:id="_SCKfyycoEeSLVrU2ifxtpw" name="Collect(Call(write)).input(Fork(value))" incoming="_SCKfwScoEeSLVrU2ifxtpw" outgoing="_SCKfyScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKfzCcoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKfzScoEeSLVrU2ifxtpw" value="1"/>
            </structuredNodeInput>
            <node xmi:type="uml:CallOperationAction" xmi:id="_SCKfzicoEeSLVrU2ifxtpw" name="Call(write)">
              <argument xmi:id="_SCKfzycoEeSLVrU2ifxtpw" name="Call(write).argument(value)" incoming="_SCKfyScoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKf0CcoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKf0ScoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKf0icoEeSLVrU2ifxtpw" name="Call(write).result(errorStatus)">
                <type xmi:type="uml:DataType" href="Libraries/fUML.library.uml#Common-Status"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKf0ycoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKf1CcoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <operation href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel-write"/>
              <target xmi:id="_SCKf1ScoEeSLVrU2ifxtpw" name="Call(write).target" incoming="_SCKfyicoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-OutputChannel"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKf1icoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKf1ycoEeSLVrU2ifxtpw" value="1"/>
              </target>
            </node>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="_SCKf2CcoEeSLVrU2ifxtpw" name="Collect(Call(write)).inputElement" incoming="_SCKfxicoEeSLVrU2ifxtpw" outgoing="_SCKfyicoEeSLVrU2ifxtpw" regionAsInput="_SCKfyCcoEeSLVrU2ifxtpw"/>
          <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKf2ScoEeSLVrU2ifxtpw" name="Feature(Call(At).result())" outgoing="_SCKfxycoEeSLVrU2ifxtpw">
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKf2icoEeSLVrU2ifxtpw" target="_SCKf3ycoEeSLVrU2ifxtpw" source="_SCKf6icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKf2ycoEeSLVrU2ifxtpw" target="_SCKf8icoEeSLVrU2ifxtpw" source="_SCKf7icoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_SCKf3CcoEeSLVrU2ifxtpw" target="_SCKf3icoEeSLVrU2ifxtpw" source="_SCKf6CcoEeSLVrU2ifxtpw"/>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_SCKf3ScoEeSLVrU2ifxtpw" target="_SCKf4icoEeSLVrU2ifxtpw" source="_SCKf8icoEeSLVrU2ifxtpw"/>
            <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCKf3icoEeSLVrU2ifxtpw" name="Call(At)" incoming="_SCKf3CcoEeSLVrU2ifxtpw">
              <argument xmi:id="_SCKf3ycoEeSLVrU2ifxtpw" name="Call(At).argument(seq)" incoming="_SCKf2icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKf4CcoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKf4ScoEeSLVrU2ifxtpw" value="*"/>
              </argument>
              <argument xmi:id="_SCKf4icoEeSLVrU2ifxtpw" name="Call(At).argument(index)" incoming="_SCKf3ScoEeSLVrU2ifxtpw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKf4ycoEeSLVrU2ifxtpw" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKf5CcoEeSLVrU2ifxtpw" value="1"/>
              </argument>
              <result xmi:id="_SCKf5ScoEeSLVrU2ifxtpw" name="Call(At).result()" outgoing="_SCKfxicoEeSLVrU2ifxtpw">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKf5icoEeSLVrU2ifxtpw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKf5ycoEeSLVrU2ifxtpw" value="1"/>
              </result>
              <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-At"/>
            </node>
            <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCKf6CcoEeSLVrU2ifxtpw" name="Tuple@2712ec1e" outgoing="_SCKf3CcoEeSLVrU2ifxtpw">
              <node xmi:type="uml:ReadExtentAction" xmi:id="_SCKf6ScoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel)">
                <classifier xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                <result xmi:id="_SCKf6icoEeSLVrU2ifxtpw" name="ReadExtent(StandardOutputChannel).result" outgoing="_SCKf2icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:Class" href="Libraries/fUML.library.uml#BasicInputOutput-StandardOutputChannel"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKf6ycoEeSLVrU2ifxtpw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKf7CcoEeSLVrU2ifxtpw" value="*"/>
                </result>
              </node>
              <node xmi:type="uml:ValueSpecificationAction" xmi:id="_SCKf7ScoEeSLVrU2ifxtpw" name="Value(1)">
                <result xmi:id="_SCKf7icoEeSLVrU2ifxtpw" name="Value(1).result" outgoing="_SCKf2ycoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKf7ycoEeSLVrU2ifxtpw" value="1"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKf8CcoEeSLVrU2ifxtpw" value="1"/>
                </result>
                <value xmi:type="uml:LiteralInteger" xmi:id="_SCKf8ScoEeSLVrU2ifxtpw" value="1">
                  <type xmi:type="uml:PrimitiveType" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveTypes-Natural"/>
                </value>
              </node>
            </node>
            <node xmi:type="uml:ForkNode" xmi:id="_SCKf8icoEeSLVrU2ifxtpw" name="Fork(Call(At).argument(index))" incoming="_SCKf2ycoEeSLVrU2ifxtpw" outgoing="_SCKf3ScoEeSLVrU2ifxtpw"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCKfwicoEeSLVrU2ifxtpw" name="Input(value)" outgoing="_SCKfwCcoEeSLVrU2ifxtpw" parameter="_SCKfvScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCKfwycoEeSLVrU2ifxtpw" name="Fork(value)" incoming="_SCKfwCcoEeSLVrU2ifxtpw" outgoing="_SCKfwScoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCKf8ycoEeSLVrU2ifxtpw" name="$$Alf$Library$CollectionFunctions$size__any__" node="_SCLB1ycoEeSLVrU2ifxtpw _SCLB2CcoEeSLVrU2ifxtpw _SCLB2ScoEeSLVrU2ifxtpw _SCLB2icoEeSLVrU2ifxtpw _SCLB2ycoEeSLVrU2ifxtpw" group="_SCLB2ycoEeSLVrU2ifxtpw">
      <ownedParameter xmi:id="_SCKf9CcoEeSLVrU2ifxtpw" name="seq" visibility="package" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCKf9ScoEeSLVrU2ifxtpw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCKf9icoEeSLVrU2ifxtpw" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:id="_SCLB0CcoEeSLVrU2ifxtpw" name="" visibility="package" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCLB0ScoEeSLVrU2ifxtpw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCLB0icoEeSLVrU2ifxtpw" value="1"/>
      </ownedParameter>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCLB0ycoEeSLVrU2ifxtpw" target="_SCLB2CcoEeSLVrU2ifxtpw" source="_SCLB1ycoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ControlFlow" xmi:id="_SCLB1CcoEeSLVrU2ifxtpw" target="_SCLB2icoEeSLVrU2ifxtpw" source="_SCLB3CcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCLB1ScoEeSLVrU2ifxtpw" target="_SCLB4icoEeSLVrU2ifxtpw" source="_SCLB2CcoEeSLVrU2ifxtpw"/>
      <edge xmi:type="uml:ObjectFlow" xmi:id="_SCLB1icoEeSLVrU2ifxtpw" target="_SCLB2ScoEeSLVrU2ifxtpw" source="_SCLB3icoEeSLVrU2ifxtpw"/>
      <structuredNode xmi:id="_SCLB2ycoEeSLVrU2ifxtpw" name="Body(size)">
        <node xmi:type="uml:StructuredActivityNode" xmi:id="_SCLB3CcoEeSLVrU2ifxtpw" name="ReturnStatement@22536490" outgoing="_SCLB1CcoEeSLVrU2ifxtpw">
          <edge xmi:type="uml:ObjectFlow" xmi:id="_SCLB3ScoEeSLVrU2ifxtpw" target="_SCLB3icoEeSLVrU2ifxtpw" source="_SCLB5ScoEeSLVrU2ifxtpw"/>
          <structuredNodeOutput xmi:id="_SCLB3icoEeSLVrU2ifxtpw" name="ReturnStatement@22536490.output" incoming="_SCLB3ScoEeSLVrU2ifxtpw" outgoing="_SCLB1icoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCLB3ycoEeSLVrU2ifxtpw" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCLB4CcoEeSLVrU2ifxtpw" value="1"/>
          </structuredNodeOutput>
          <node xmi:type="uml:CallBehaviorAction" xmi:id="_SCLB4ScoEeSLVrU2ifxtpw" name="Call(Size)">
            <argument xmi:id="_SCLB4icoEeSLVrU2ifxtpw" name="Call(Size).argument(seq)" incoming="_SCLB1ScoEeSLVrU2ifxtpw" isOrdered="true" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCLB4ycoEeSLVrU2ifxtpw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCLB5CcoEeSLVrU2ifxtpw" value="*"/>
            </argument>
            <result xmi:id="_SCLB5ScoEeSLVrU2ifxtpw" name="Call(Size).result()" outgoing="_SCLB3ScoEeSLVrU2ifxtpw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCLB5icoEeSLVrU2ifxtpw" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCLB5ycoEeSLVrU2ifxtpw" value="1"/>
            </result>
            <behavior xmi:type="uml:Activity" href="Libraries/Alf.library.uml#Alf-Library-PrimitiveBehaviors-SequenceFunctions-Size"/>
          </node>
        </node>
      </structuredNode>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCLB1ycoEeSLVrU2ifxtpw" name="Input(seq)" outgoing="_SCLB0ycoEeSLVrU2ifxtpw" parameter="_SCKf9CcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ForkNode" xmi:id="_SCLB2CcoEeSLVrU2ifxtpw" name="Fork(seq)" incoming="_SCLB0ycoEeSLVrU2ifxtpw" outgoing="_SCLB1ScoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityParameterNode" xmi:id="_SCLB2ScoEeSLVrU2ifxtpw" name="Return" incoming="_SCLB1icoEeSLVrU2ifxtpw" parameter="_SCLB0CcoEeSLVrU2ifxtpw"/>
      <node xmi:type="uml:ActivityFinalNode" xmi:id="_SCLB2icoEeSLVrU2ifxtpw" name="Final" incoming="_SCLB1CcoEeSLVrU2ifxtpw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_SCLB6CcoEeSLVrU2ifxtpw">
      <templateBinding xmi:id="_SCLB6ScoEeSLVrU2ifxtpw">
        <parameterSubstitution xmi:id="_SCLB6icoEeSLVrU2ifxtpw">
          <formal xmi:type="uml:ClassifierTemplateParameter" href="Libraries/Alf.library.uml#_JmqbdYVoEeKRrIQMgiVHcQ"/>
        </parameterSubstitution>
        <signature xmi:type="uml:RedefinableTemplateSignature" href="Libraries/Alf.library.uml#_JmqbdIVoEeKRrIQMgiVHcQ"/>
      </templateBinding>
    </packagedElement>
    <packagedElement xmi:type="uml:Realization" xmi:id="_SCLB6ycoEeSLVrU2ifxtpw" client="_SCKf8ycoEeSLVrU2ifxtpw" supplier="_SCLB6CcoEeSLVrU2ifxtpw"/>
    <profileApplication xmi:id="_SCLB7CcoEeSLVrU2ifxtpw">
      <eAnnotations xmi:id="_SCLB7ScoEeSLVrU2ifxtpw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_QLYqEHJLEeKLR_U6HVChUg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <l2:Create xmi:id="_SCLB7icoEeSLVrU2ifxtpw" base_BehavioralFeature="_SCJ2jycoEeSLVrU2ifxtpw"/>
  <l2:Create xmi:id="_SCLB7ycoEeSLVrU2ifxtpw" base_BehavioralFeature="_SCJ3RCcoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SCLB8CcoEeSLVrU2ifxtpw" base_BehavioralFeature="_SCJ2kycoEeSLVrU2ifxtpw"/>
  <l2:Destroy xmi:id="_SCLB8ScoEeSLVrU2ifxtpw" base_BehavioralFeature="_SCJ3SycoEeSLVrU2ifxtpw"/>
</xmi:XMI>
